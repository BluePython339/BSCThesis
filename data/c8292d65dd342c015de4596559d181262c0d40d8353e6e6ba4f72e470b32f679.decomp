sub_401000
push ebp
mov ebp esp
sub esp 0x8c
push ebx
push esi
push edi
push 0x1
pop edi
mov [ ebp - 0x8 ] edi
call sub_401322
test eax eax
je r-xdata
mov eax [ rw-data ]
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
call strlen
test eax eax
pop ecx
jne r-xdata
xor eax eax
leave
retn 0x10
push eax
call [ CloseHandle@IAT ]
mov esi rw-data
push esi
push [ ebp + 0x10 ]
call strstr
mov ebx eax
pop ecx
test ebx ebx
pop ecx
jne r-xdata
push rw-data
call sub_401af3
jmp r-xdata
push edi
push 0x0
push ebx
call memset
inc ebx
push esi
push ebx
call strstr
mov edi eax
add esp 0x14
test edi edi
je r-xdata
push 0x10
mov esi rw-data
push eax
push esi
call memset
push esi
push [ ebp + 0x10 ]
call sub_401b3b
add esp 0x14
test eax eax
je r-xdata
pop ecx
jmp r-xdata
push 0x1
push 0x0
push edi
call memset
push [ ebp + 0x10 ]
inc edi
call sub_40136e
add esp 0x10
test eax eax
push [ ebp + 0x10 ]
jne r-xdata
mov [ ebp + 0x10 ] 0x14
call atoi
push 0x10
mov esi rw-data
push 0x0
push esi
mov [ ebp + 0x10 ] eax
call memset
push esi
push edi
call sub_401b3b
add esp 0x18
test eax eax
jne r-xdata
push rw-data
jmp r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
test eax eax
mov [ ebp - 0xc ] eax
jne r-xdata
push 0x20
lea eax [ ebp - 0x8c ]
push 0x0
push eax
call memset
push 0x10
mov esi rw-data
push 0x0
push esi
call memset
lea eax [ ebp - 0x8c ]
push eax
push ebx
call sub_4013ef
lea eax [ ebp - 0x8c ]
push esi
push eax
call sub_401b3b
add esp 0x28
test eax eax
jne r-xdata
push edi
jmp r-xdata
call sub_401af3
pop ecx
push rw-data
push eax
call [ GetProcAddress@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
call [ GetLastError@IAT ]
push eax
push rw-data
push rw-data
call sub_401c0d
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x8c ]
push eax
push rw-data
call sub_401c9c
mov esi eax
test esi esi
jne r-xdata
call [ GetLastError@IAT ]
push eax
push rw-data
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
push esi
push 0x0
push 0x1f0fff
call [ OpenProcess@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
call [ GetLastError@IAT ]
push eax
push rw-data
jmp r-xdata
call sub_4013a4
pop ecx
pop ecx
jmp r-xdata
push [ ebp - 0xc ]
call [ FreeLibrary@IAT ]
push eax
call sub_401d36
test eax eax
pop ecx
je r-xdata
call [ GetLastError@IAT ]
push eax
push rw-data
jmp r-xdata
push esi
call [ DebugActiveProcess@IAT ]
test eax eax
jne r-xdata
mov ebx [ WaitForDebugEvent@IAT ]
mov esi [ DebugSetProcessKillOnExit@IAT ]
mov edi 0x10002
call [ GetLastError@IAT ]
push eax
push rw-data
jmp r-xdata
cmp [ ebp - 0x8 ] 0x1
jne r-xdata
call [ GetLastError@IAT ]
push eax
push rw-data
call sub_4013a4
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x60 ]
push eax
push [ ebp - 0x64 ]
call sub_402166
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_401e29
test eax eax
pop ecx
jne r-xdata
push 0x0
call esi
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push 0x1388
jmp r-xdata
mov eax [ ebp + 0x10 ]
imul eax eax 0x3e8
push eax
push 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x6c ]
push eax
call ebx
test eax eax
je r-xdata
mov eax [ ebp - 0x6c ]
dec eax
jne r-xdata
mov [ ebp - 0x4 ] edi
cmp [ ebp - 0x60 ] 0x80000003
je r-xdata
lea eax [ ebp - 0x60 ]
push eax
push [ ebp - 0x64 ]
call sub_401ec1
cmp [ ebp - 0x60 ] 0x80000004
je r-xdata
lea eax [ ebp - 0x60 ]
push eax
push [ ebp - 0x64 ]
call sub_402070
jmp r-xdata
and [ ebp - 0x8 ] 0x0
jmp r-xdata
pop ecx
test eax eax
pop ecx
je r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0x64 ]
push [ ebp - 0x68 ]
call [ ContinueDebugEvent@IAT ]
test eax eax
jne r-xdata
sub_401322
push ebx
push esi
push edi
xor ebx ebx
push rw-data
push ebx
push ebx
call [ CreateMutexA@IAT ]
mov edi [ GetLastError@IAT ]
mov esi eax
test esi esi
je r-xdata
call edi
push eax
push rw-data
call sub_4013a4
pop ecx
pop ecx
call edi
cmp eax 0xb7
je r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
retn
push esi
call [ CloseHandle@IAT ]
push 0x1
pop ebx
jmp r-xdata
test esi esi
je r-xdata
sub_40136e
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
push edi
xor ebx ebx
xor esi esi
call strlen
test eax eax
pop ecx
jbe r-xdata
push 0x1
pop ebx
mov al [ esi + edi ]
cmp al 0x30
jl r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
retn
cmp al 0x39
jg r-xdata
push edi
inc esi
call strlen
cmp esi eax
pop ecx
jb r-xdata
sub_4013a4
push ebp
mov ebp esp
push ecx
push esi
xor esi esi
push esi
lea eax [ ebp - 0x4 ]
push esi
push eax
push 0x400
mov [ ebp - 0x4 ] esi
push [ ebp + 0xc ]
push esi
push 0x1100
call [ FormatMessageA@IAT ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push rw-data
call sub_401af3
add esp 0x10
cmp [ ebp - 0x4 ] esi
pop esi
je r-xdata
leave
retn
push [ ebp - 0x4 ]
call [ LocalFree@IAT ]
sub_4013ef
push ebp
mov ebp esp
sub esp 0x74
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push edi
call strlen
cmp esi eax
pop ecx
jne r-xdata
movsx eax [ esi + edi ]
jmp r-xdata
cmp esi 0x1c
jne r-xdata
mov eax 0x80
jmp r-xdata
mov ecx esi
shr ecx 0x1
shl eax 0x10
mov edx [ ebp + ecx * 4 - 0x74 ]
lea ecx [ ebp + ecx * 4 - 0x74 ]
shr edx 0x10
or edx eax
inc esi
cmp esi 0x20
mov [ ecx ] edx
jb r-xdata
xor eax eax
push edi
call strlen
pop ecx
shl eax 0x4
jmp r-xdata
push edi
call strlen
cmp esi eax
pop ecx
jae r-xdata
mov eax [ ebp - 0x74 ]
mov edx 0xefcdab89
dec eax
mov esi eax
shr esi 0x1d
shl eax 0x3
or esi eax
mov eax esi
mov ecx esi
not eax
and eax 0x98badcfe
and ecx edx
or eax ecx
mov ecx [ ebp - 0x70 ]
lea ecx [ eax + ecx + 0x10325476 ]
mov eax ecx
shr eax 0x19
shl ecx 0x7
or eax ecx
mov ecx eax
mov edi eax
not ecx
and ecx edx
mov edx eax
and edx esi
or ecx edx
mov edx [ ebp - 0x6c ]
lea edx [ ecx + edx - 0x67452302 ]
mov ecx edx
shr ecx 0x15
shl edx 0xb
or ecx edx
mov edx ecx
and edi ecx
not edx
and edx esi
mov ebx ecx
or edx edi
mov edi [ ebp - 0x68 ]
lea edi [ edx + edi - 0x10325477 ]
mov edx edi
shl edx 0x13
shr edi 0xd
or edx edi
mov edi edx
and ebx edx
not edi
and edi eax
or edi ebx
add edi [ ebp - 0x64 ]
add esi edi
mov edi esi
shr edi 0x1d
shl esi 0x3
or edi esi
mov esi edx
mov [ ebp + 0x8 ] edi
and esi [ ebp + 0x8 ]
not edi
and edi ecx
or edi esi
add edi [ ebp - 0x60 ]
add eax edi
mov esi eax
shr esi 0x19
shl eax 0x7
or esi eax
mov eax esi
mov edi esi
and edi [ ebp + 0x8 ]
not eax
and eax edx
or eax edi
add eax [ ebp - 0x5c ]
add ecx eax
mov eax ecx
shr eax 0x15
shl ecx 0xb
or eax ecx
mov ecx eax
not ecx
mov edi [ ebp + 0x8 ]
mov ebx esi
and ecx edi
and ebx eax
or ecx ebx
mov ebx eax
add ecx [ ebp - 0x58 ]
add edx ecx
mov ecx edx
shl ecx 0x13
shr edx 0xd
or ecx edx
mov edx ecx
and ebx ecx
not edx
and edx esi
or edx ebx
add edx [ ebp - 0x54 ]
add edi edx
mov edx edi
shr edx 0x1d
shl edi 0x3
or edx edi
mov edi ecx
mov [ ebp + 0x8 ] edx
and edi [ ebp + 0x8 ]
not edx
and edx eax
or edx edi
add edx [ ebp - 0x50 ]
add esi edx
mov edx esi
shr edx 0x19
shl esi 0x7
or edx esi
mov esi edx
mov edi edx
and edi [ ebp + 0x8 ]
mov ebx edx
not esi
and esi ecx
or esi edi
mov edi [ ebp + 0x8 ]
add esi [ ebp - 0x4c ]
add eax esi
mov esi eax
shr esi 0x15
shl eax 0xb
or esi eax
mov eax esi
and ebx esi
not eax
and eax edi
or eax ebx
mov ebx esi
add eax [ ebp - 0x48 ]
add ecx eax
mov eax ecx
shl eax 0x13
shr ecx 0xd
or eax ecx
mov ecx eax
and ebx eax
not ecx
and ecx edx
or ecx ebx
add ecx [ ebp - 0x44 ]
add edi ecx
mov ecx edi
shr ecx 0x1d
shl edi 0x3
or ecx edi
mov edi eax
mov [ ebp + 0x8 ] ecx
and edi [ ebp + 0x8 ]
not ecx
and ecx esi
or ecx edi
add ecx [ ebp - 0x40 ]
add edx ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
shr edi 0x19
shl edx 0x7
or edi edx
mov ecx edi
mov edx edi
not ecx
and ecx eax
and edx ebx
or ecx edx
add ecx [ ebp - 0x3c ]
add esi ecx
mov ecx esi
shr ecx 0x15
shl esi 0xb
or ecx esi
mov esi edi
mov edx ecx
and esi ecx
not edx
and edx ebx
or edx esi
mov esi ecx
add edx [ ebp - 0x38 ]
add eax edx
mov edx eax
shl edx 0x13
shr eax 0xd
or edx eax
mov eax ecx
or eax edx
and esi edx
and eax edi
mov [ ebp + 0x8 ] edx
or eax esi
add eax [ ebp - 0x74 ]
lea eax [ ebx + eax + 0x5a827999 ]
mov esi eax
shr esi 0x1d
shl eax 0x3
or esi eax
mov eax edx
or [ ebp + 0x8 ] esi
and eax esi
mov ebx [ ebp + 0x8 ]
and ebx ecx
or ebx eax
add ebx [ ebp - 0x64 ]
lea edi [ edi + ebx + 0x5a827999 ]
mov ebx edi
shr ebx 0x1b
shl edi 0x5
or ebx edi
mov edi [ ebp + 0x8 ]
and edi ebx
or edi eax
add edi [ ebp - 0x54 ]
lea ecx [ ecx + edi + 0x5a827999 ]
mov eax ecx
shr eax 0x17
shl ecx 0x9
or eax ecx
mov ecx eax
mov edi eax
or ecx esi
and edi esi
and ecx ebx
or ecx edi
mov edi eax
add ecx [ ebp - 0x44 ]
lea edx [ edx + ecx + 0x5a827999 ]
mov ecx edx
shr ecx 0x13
shl edx 0xd
or ecx edx
mov edx eax
or edx ecx
and edi ecx
and edx ebx
or edx edi
add edx [ ebp - 0x70 ]
lea esi [ esi + edx + 0x5a827999 ]
mov [ ebp + 0x8 ] ecx
mov edx esi
mov edi ecx
shr edx 0x1d
shl esi 0x3
or edx esi
or [ ebp + 0x8 ] edx
and edi edx
mov esi [ ebp + 0x8 ]
and esi eax
or esi edi
add esi [ ebp - 0x60 ]
lea ebx [ ebx + esi + 0x5a827999 ]
mov esi ebx
shr esi 0x1b
shl ebx 0x5
or esi ebx
mov ebx [ ebp + 0x8 ]
and ebx esi
or ebx edi
add ebx [ ebp - 0x50 ]
lea edi [ eax + ebx + 0x5a827999 ]
mov eax edi
shr eax 0x17
shl edi 0x9
or eax edi
mov edi eax
mov ebx eax
or edi edx
and ebx edx
and edi esi
or edi ebx
mov ebx eax
add edi [ ebp - 0x40 ]
lea edi [ ecx + edi + 0x5a827999 ]
mov ecx edi
shr ecx 0x13
shl edi 0xd
or ecx edi
mov edi eax
or edi ecx
and ebx ecx
and edi esi
mov [ ebp + 0x8 ] ecx
or edi ebx
mov ebx ecx
add edi [ ebp - 0x6c ]
lea edi [ edx + edi + 0x5a827999 ]
mov edx edi
shr edx 0x1d
shl edi 0x3
or edx edi
or [ ebp + 0x8 ] edx
and ebx edx
mov edi [ ebp + 0x8 ]
and edi eax
or edi ebx
add edi [ ebp - 0x5c ]
lea esi [ esi + edi + 0x5a827999 ]
mov edi esi
shr edi 0x1b
shl esi 0x5
or edi esi
mov esi [ ebp + 0x8 ]
and esi edi
or esi ebx
add esi [ ebp - 0x4c ]
lea esi [ eax + esi + 0x5a827999 ]
mov eax esi
shr eax 0x17
shl esi 0x9
or eax esi
mov esi eax
mov ebx eax
or esi edx
and ebx edx
and esi edi
or esi ebx
add esi [ ebp - 0x3c ]
lea esi [ ecx + esi + 0x5a827999 ]
mov ecx esi
mov ebx eax
shr ecx 0x13
shl esi 0xd
or ecx esi
mov esi eax
or esi ecx
and ebx ecx
and esi edi
mov [ ebp + 0x8 ] ecx
or esi ebx
add esi [ ebp - 0x68 ]
lea esi [ edx + esi + 0x5a827999 ]
mov edx esi
shr edx 0x1d
shl esi 0x3
or edx esi
mov esi ecx
or [ ebp + 0x8 ] edx
and esi edx
mov ebx [ ebp + 0x8 ]
and ebx eax
or ebx esi
add ebx [ ebp - 0x58 ]
lea edi [ edi + ebx + 0x5a827999 ]
mov ebx edi
shr ebx 0x1b
shl edi 0x5
or ebx edi
mov edi [ ebp + 0x8 ]
and edi ebx
or edi esi
add edi [ ebp - 0x48 ]
lea eax [ eax + edi + 0x5a827999 ]
mov esi eax
shr esi 0x17
shl eax 0x9
or esi eax
mov eax esi
mov edi esi
or eax edx
and edi edx
and eax ebx
or eax edi
add eax [ ebp - 0x38 ]
lea ecx [ ecx + eax + 0x5a827999 ]
mov eax ecx
shr eax 0x13
shl ecx 0xd
or eax ecx
mov ecx ebx
xor ecx esi
xor ecx eax
add ecx [ ebp - 0x74 ]
lea edx [ edx + ecx + 0x6ed9eba1 ]
mov ecx edx
shr ecx 0x1d
shl edx 0x3
or ecx edx
mov edx esi
xor edx eax
xor edx ecx
add edx [ ebp - 0x54 ]
lea ebx [ ebx + edx + 0x6ed9eba1 ]
mov edx ebx
shr edx 0x17
shl ebx 0x9
or edx ebx
mov edi edx
xor edi eax
xor edi ecx
add edi [ ebp - 0x64 ]
lea esi [ esi + edi + 0x6ed9eba1 ]
mov edi esi
shr edi 0x15
shl esi 0xb
or edi esi
mov esi edx
xor esi edi
mov ebx esi
xor ebx ecx
add ebx [ ebp - 0x44 ]
lea ebx [ eax + ebx + 0x6ed9eba1 ]
mov eax ebx
shr eax 0x11
shl ebx 0xf
or eax ebx
xor esi eax
add esi [ ebp - 0x6c ]
lea esi [ ecx + esi + 0x6ed9eba1 ]
mov ecx esi
shr ecx 0x1d
shl esi 0x3
or ecx esi
mov esi edi
xor esi eax
xor esi ecx
add esi [ ebp - 0x4c ]
lea esi [ edx + esi + 0x6ed9eba1 ]
mov edx esi
shr edx 0x17
shl esi 0x9
or edx esi
mov esi edx
xor esi eax
xor esi ecx
add esi [ ebp - 0x5c ]
lea edi [ edi + esi + 0x6ed9eba1 ]
mov esi edi
shr esi 0x15
shl edi 0xb
or esi edi
mov edi edx
xor edi esi
mov ebx edi
xor ebx ecx
add ebx [ ebp - 0x3c ]
lea ebx [ eax + ebx + 0x6ed9eba1 ]
mov eax ebx
shr eax 0x11
shl ebx 0xf
or eax ebx
xor edi eax
add edi [ ebp - 0x70 ]
lea edi [ ecx + edi + 0x6ed9eba1 ]
mov ecx edi
shr ecx 0x1d
shl edi 0x3
or ecx edi
mov edi esi
xor edi eax
xor edi ecx
add edi [ ebp - 0x50 ]
lea edi [ edx + edi + 0x6ed9eba1 ]
mov edx edi
shr edx 0x17
shl edi 0x9
or edx edi
mov edi edx
xor edi eax
xor edi ecx
add edi [ ebp - 0x60 ]
lea edi [ esi + edi + 0x6ed9eba1 ]
mov esi edi
shr esi 0x15
shl edi 0xb
or esi edi
mov edi edx
xor edi esi
mov ebx edi
xor ebx ecx
add ebx [ ebp - 0x40 ]
lea ebx [ eax + ebx + 0x6ed9eba1 ]
mov eax ebx
shr eax 0x11
shl ebx 0xf
or eax ebx
xor edi eax
add edi [ ebp - 0x68 ]
lea edi [ ecx + edi + 0x6ed9eba1 ]
mov ecx edi
shr ecx 0x1d
shl edi 0x3
or ecx edi
mov edi esi
xor edi eax
xor ebx ebx
xor edi ecx
push 0x20
add edi [ ebp - 0x48 ]
push ebx
lea edi [ edx + edi + 0x6ed9eba1 ]
mov edx edi
shr edx 0x17
shl edi 0x9
or edx edi
mov edi edx
xor edi eax
xor edi ecx
add edi [ ebp - 0x58 ]
lea edi [ esi + edi + 0x6ed9eba1 ]
mov esi edi
shr esi 0x15
shl edi 0xb
or esi edi
mov edi edx
xor edi esi
add esi 0x98badcfe
xor edi ecx
add ecx 0x67452301
add edi [ ebp - 0x38 ]
mov [ ebp - 0x74 ] ecx
add edx 0x10325476
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x68 ] edx
lea eax [ eax + edi + 0x6ed9eba1 ]
mov ecx eax
shr ecx 0x11
shl eax 0xf
or ecx eax
lea eax [ ebp - 0x34 ]
sub ecx 0x10325477
push eax
mov [ ebp - 0x70 ] ecx
call memset
add esp 0xc
lea esi [ ebp - 0x74 ]
push 0x4
pop edi
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call strcat
pop ecx
lea eax [ ebp - 0xd ]
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x14 ]
push rw-data
push eax
call strcat
inc [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call strlen
add esp 0xc
push 0x8
pop ecx
sub ecx eax
cmp [ ebp + 0x8 ] ecx
jb r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ eax - 0x1 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x34 ]
push rw-data
push eax
call sprintf
mov eax [ ebp + 0x8 ]
add esp 0x10
movsx eax [ eax ]
push eax
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x34 ]
push rw-data
push eax
call sprintf
sub [ ebp + 0x8 ] 0x2
add esp 0x10
dec [ ebp - 0x4 ]
jne r-xdata
add esi 0x4
dec edi
jne r-xdata
push 0x8
lea eax [ ebp - 0xc ]
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0xc ]
push [ esi ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0xc ]
push eax
call strlen
mov [ ebp + eax - 0xc ] bl
push 0x8
lea eax [ ebp - 0x14 ]
push ebx
push eax
call memset
lea eax [ ebp - 0xc ]
mov [ ebp + 0x8 ] ebx
push eax
call strlen
add esp 0x20
push 0x8
pop ecx
sub ecx eax
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
call strlen
mov esi [ ebp + 0xc ]
mov [ ebp + eax - 0x34 ] bl
lea eax [ ebp - 0x34 ]
push 0x20
push eax
push esi
call memcpy
add esp 0x10
mov [ esi + 0x20 ] bl
pop edi
pop esi
pop ebx
leave
retn
sub_401af3
push ebp
mov ebp esp
sub esp 0x404
push 0x401
lea eax [ ebp - 0x404 ]
push 0x0
push eax
call memset
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x404 ]
push [ ebp + 0x8 ]
push eax
call vsprintf
lea eax [ ebp - 0x404 ]
push eax
call strlen
add esp 0x1c
and [ ebp + eax - 0x404 ] 0x0
leave
retn
sub_401b3b
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
push esi
mov [ ebp - 0x4 ] edi
call strlen
cmp eax 0x20
pop ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp + 0xc ]
cmp al 0x61
jl r-xdata
cmp al 0x39
jle r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x7a
jle r-xdata
mov al [ esi + 0x1 ]
cmp al 0x30
jl r-xdata
cmp al 0x5a
jg r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x39
jle r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x7a
jle r-xdata
push 0x5
lea eax [ ebp - 0xc ]
push 0x0
push eax
call memset
movsx eax [ esi + 0x1 ]
add esp 0xc
push eax
movsx eax [ esi ]
push eax
lea eax [ ebp - 0xc ]
push rw-data
push eax
call sprintf
push 0x1
lea eax [ ebp + 0xb ]
push 0x0
push eax
call memset
add esp 0x1c
lea eax [ ebp + 0xb ]
push eax
lea eax [ ebp - 0xc ]
push rw-data
push eax
call sscanf
mov al [ ebp + 0xb ]
add esp 0xc
mov [ edi + ebx ] al
inc edi
inc esi
inc esi
cmp edi 0x10
jb r-xdata
cmp al 0x5a
jg r-xdata
mov al [ esi ]
cmp al 0x30
jl r-xdata
and [ edi + ebx ] 0x0
mov [ ebp - 0x4 ] 0x1
sub_401c0d
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x4 ]
push eax
push 0x20
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
push 0x0
call [ LookupPrivilegeValueA@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
push eax
push rw-data
jmp r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push 0x10
push eax
push 0x0
push [ ebp - 0x4 ]
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x8 ] 0x2
call [ AdjustTokenPrivileges@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
push eax
push rw-data
jmp r-xdata
call sub_4013a4
pop ecx
xor eax eax
pop ecx
leave
retn
push 0x1
pop eax
leave
retn
call [ GetLastError@IAT ]
push eax
push rw-data
sub_401c9c
push ebp
mov ebp esp
sub esp 0x128
push ebx
xor ebx ebx
push edi
push ebx
push 0xf
mov [ ebp - 0x128 ] 0x128
call CreateToolhelp32Snapshot
mov edi eax
cmp edi 0xffffffff
je r-xdata
call [ GetLastError@IAT ]
push eax
push rw-data
lea eax [ ebp - 0x128 ]
push eax
push edi
call Process32First
test eax eax
jne r-xdata
push esi
mov esi rw-data
call [ GetLastError@IAT ]
push eax
push rw-data
jmp r-xdata
mov ebx [ ebp - 0x120 ]
lea eax [ ebp - 0x128 ]
push eax
push edi
call Process32Next
test eax eax
je r-xdata
call sub_4013a4
pop ecx
pop ecx
mov eax ebx
pop edi
pop ebx
leave
retn
push edi
call [ CloseHandle@IAT ]
pop esi
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x104 ]
push esi
push eax
call _strcmpi
pop ecx
test eax eax
pop ecx
je r-xdata
sub_401d36
push ebp
mov ebp esp
sub esp 0x28
push ebx
push edi
lea eax [ ebp - 0x28 ]
push 0x1c
push eax
xor edi edi
push [ rw-data ]
mov [ ebp - 0x8 ] edi
push [ ebp + 0x8 ]
call [ VirtualQueryEx@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x4
push [ ebp - 0x1c ]
push [ ebp - 0x28 ]
push [ ebp + 0x8 ]
call [ VirtualProtectEx@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
push eax
push rw-data
jmp r-xdata
push esi
mov esi 0x100
call [ GetLastError@IAT ]
push eax
push rw-data
jmp r-xdata
call sub_4013a4
pop ecx
pop ecx
call ebx
push eax
push rw-data
call sub_4013a4
pop ecx
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x5e
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x4 ]
push [ ebp - 0x1c ]
push [ ebp - 0x28 ]
push [ ebp + 0x8 ]
call [ VirtualProtectEx@IAT ]
test eax eax
pop esi
jne r-xdata
cmp edi esi
je r-xdata
inc [ rw-data ]
inc edi
cmp edi esi
jb r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop ebx
leave
retn
call ebx
push eax
push rw-data
mov eax [ rw-data ]
mov [ ebp - 0x8 ] 0x1
mov [ rw-data ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x1
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call [ ReadProcessMemory@IAT ]
mov ebx [ GetLastError@IAT ]
test eax eax
je r-xdata
sub_401e29
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x24 ]
push 0x1c
push eax
push [ rw-data ]
push edi
call [ VirtualQueryEx@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp + 0x8 ]
mov ebx [ VirtualProtectEx@IAT ]
push eax
push 0x4
push [ ebp - 0x18 ]
push [ ebp - 0x24 ]
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
mov esi [ WriteProcessMemory@IAT ]
push eax
push 0x1
push rw-data
push [ rw-data ]
push edi
call esi
test eax eax
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x18 ]
push [ ebp - 0x24 ]
push edi
call ebx
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x1
and [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push rw-data
push [ rw-data ]
push edi
call esi
sub_401ec1
push ebp
mov ebp esp
sub esp 0x300
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] esi
cmp eax [ rw-data ]
mov [ ebp - 0x8 ] esi
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push [ ebp + 0x8 ]
push esi
push 0x1f03ff
call [ OpenThread@IAT ]
cmp eax esi
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ ebp - 0x8 ]
pop esi
leave
retn
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
lea ecx [ ebp - 0x300 ]
mov [ ebp - 0x300 ] 0x10007
push ecx
push eax
call [ GetThreadContext@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x34 ]
push 0x1c
push eax
push [ rw-data ]
push [ rw-data ]
call [ VirtualQueryEx@IAT ]
test eax eax
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
push 0x4
push [ ebp - 0x28 ]
push [ ebp - 0x34 ]
push [ rw-data ]
call [ VirtualProtectEx@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x260 ]
push ebx
push edi
push 0x10
pop edi
lea ebx [ eax + 0x58 ]
push edi
lea eax [ ebp - 0x18 ]
push esi
push eax
call memset
add esp 0xc
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push edi
push eax
push ebx
push [ rw-data ]
call [ ReadProcessMemory@IAT ]
test eax eax
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x28 ]
push [ ebp - 0x34 ]
push [ rw-data ]
call [ VirtualProtectEx@IAT ]
pop edi
pop ebx
test eax eax
jne r-xdata
push edi
lea eax [ ebp - 0x18 ]
push rw-data
push eax
call memcmp
mov esi [ WriteProcessMemory@IAT ]
add esp 0xc
test eax eax
jne r-xdata
and [ ebp - 0x8 ] eax
jmp r-xdata
push 0x1
pop edi
push edi
lea eax [ ebp - 0x18 ]
push rw-data
push eax
call memcpy
add esp 0xc
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push edi
push eax
push ebx
push [ rw-data ]
call esi
test eax eax
je r-xdata
mov eax [ rw-data ]
or [ ebp - 0x23f ] 0x1
mov [ ebp - 0x248 ] eax
lea eax [ ebp - 0x300 ]
push eax
push [ ebp - 0x4 ]
call [ SetThreadContext@IAT ]
test eax eax
je r-xdata
push 0x1
pop edi
mov [ rw-data ] edi
jmp r-xdata
mov [ ebp - 0x8 ] edi
lea eax [ ebp + 0xc ]
push eax
push edi
push rw-data
push [ rw-data ]
push [ rw-data ]
call esi
test eax eax
je r-xdata
sub_402070
push ebp
mov ebp esp
sub esp 0x2ec
push ebx
push edi
push [ ebp + 0x8 ]
xor ebx ebx
push ebx
push 0x1f03ff
call [ OpenThread@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov eax ebx
pop edi
pop ebx
leave
retn
lea eax [ ebp - 0x2ec ]
push esi
push eax
push edi
mov [ ebp - 0x2ec ] 0x10007
call [ GetThreadContext@IAT ]
test eax eax
je r-xdata
push edi
call [ CloseHandle@IAT ]
pop esi
lea eax [ ebp - 0x20 ]
push 0x1c
push eax
push [ rw-data ]
push [ rw-data ]
call [ VirtualQueryEx@IAT ]
test eax eax
je r-xdata
lea eax [ ebp + 0x8 ]
mov esi [ VirtualProtectEx@IAT ]
push eax
push 0x4
push [ ebp - 0x14 ]
push [ ebp - 0x20 ]
push [ rw-data ]
call esi
test eax eax
je r-xdata
mov eax [ rw-data ]
mov edx [ ebp + 0xc ]
lea ecx [ eax + 0x1 ]
cmp [ edx + 0xc ] ecx
jne r-xdata
push 0x1
pop ebx
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
push rw-data
push eax
push [ rw-data ]
call [ WriteProcessMemory@IAT ]
test eax eax
je r-xdata
xor ebx ebx
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x14 ]
push [ ebp - 0x20 ]
push [ rw-data ]
call esi
test eax eax
jne r-xdata
and [ ebp - 0x22b ] 0xfe
lea eax [ ebp - 0x2ec ]
push eax
push edi
call [ SetThreadContext@IAT ]
test eax eax
je r-xdata
sub_402166
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
lea eax [ ebp - 0x24 ]
push 0x1c
push eax
xor edi edi
push [ rw-data ]
push [ rw-data ]
call [ VirtualQueryEx@IAT ]
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x4 ]
mov esi [ VirtualProtectEx@IAT ]
push eax
push 0x4
push [ ebp - 0x18 ]
push [ ebp - 0x24 ]
push [ rw-data ]
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push rw-data
push [ rw-data ]
push [ rw-data ]
call [ WriteProcessMemory@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x4 ]
push [ ebp - 0x18 ]
push [ ebp - 0x24 ]
push [ rw-data ]
call esi
test eax eax
jne r-xdata
push 0x1
pop edi
xor edi edi
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_4023d1
cmp [ rw-data ] ebx
jne r-xdata
call sub_4023bc
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_4023ce
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
atoi
jmp [ atoi@IAT ]
memset
jmp [ memset@IAT ]
strstr
jmp [ strstr@IAT ]
strlen
jmp [ strlen@IAT ]
memcpy
jmp [ memcpy@IAT ]
strcat
jmp [ strcat@IAT ]
sprintf
jmp [ sprintf@IAT ]
vsprintf
jmp [ vsprintf@IAT ]
sscanf
jmp [ sscanf@IAT ]
memcmp
jmp [ memcmp@IAT ]
_strcmpi
jmp [ _strcmpi@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_4023bc
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_4023ce
xor eax eax
retn
sub_4023d1
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
