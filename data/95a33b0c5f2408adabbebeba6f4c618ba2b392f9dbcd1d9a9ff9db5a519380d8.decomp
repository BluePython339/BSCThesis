sub_4a1ddb
pushad
mov [ esp ] al
mov [ esp + 0x1c ] 0x5e940127
pushad
mov [ esp + 0x38 ] 0xd1c3a4b9
pushfd
pushfd
push 0x89df1fa8
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
jmp rwxdata
mov [ esp ] eax
call j_sub_4bfca3
shrd ax bp 0xb
not ah
mov eax [ ebp ]
stc
bt edi 0x5
stc
add ebp 0x2
pushfd
mov ax [ ss : eax ]
jmp rwxdata
call sub_4bee39
mov [ esp ] 0x19e0
mov [ ebp + 0x4 ] ax
pushfd
pushfd
pushfd
pop [ esp + 0x2c ]
jmp rwxdata
pushfd
push [ esp + 0x30 ]
pop [ ebp ]
mov [ esp ] 0x55ed9540
pushfd
mov [ esp + 0xc ] 0x78b5
push [ esp ]
lea esp [ esp + 0x3c ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bd69c
push 0xe17256ee
xchg [ esp + 0x4c ] edi
lea edi [ eax * 2 + 0x24e6d209 ]
mov edi eax
mov [ esp + 0x4 ] ah
jmp rwxdata
mov [ esp + 0x4 ] bl
cld
call j_sub_4bdfbe
xor cx 0x1e18
cmp bh 0x70
xor al bl
call $+5
movzx ecx cl
push ecx
inc al
setge ch
ror al 0x4
rcr ch 0x1
cmp si 0x5980
or ecx 0xef98c43d
sub al 0x7
btc cx 0x7
btr cx dx
test bp si
xor bl al
lea esp [ esp + 0xc ]
jpo rwxdata
bswap ecx
call sub_4be1c8
bsf ax di
bts ax 0xe
rol ah 0x6
mov eax ebp
jmp sub_4be490
lea ecx [ edx * 8 + 0x6a8876eb ]
inc cx
bswap cx
inc esi
rol ch cl
add cx bp
cmc
lea ecx [ edi + 0x2eaa0f29 ]
movzx ecx al
push edi
push [ esp ]
mov [ ebp - 0x4 ] ecx
bt di 0x3
pushfd
call sub_4bf94e
sub_4bd6c8
mov [ esp + 0x10 ] edi
pushfd
lea esp [ esp + 0x14 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bd6ee
mov [ esp + 0x44 ] esi
pushfd
pushfd
mov [ esp + 0x48 ] edi
pushfd
pushfd
mov [ esp + 0x4 ] dh
lea esp [ esp + 0x50 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bd71b
pushfd
mov [ esp + 0x8 ] esi
call sub_4be236
mov edx 0x1deac136
not dh
mov edx [ ebp ]
pushad
mov eax [ ebp + 0x4 ]
jmp rwxdata
div [ ebp + 0x8 ]
push eax
mov [ ebp + 0x4 ] edx
push esi
mov [ ebp + 0x8 ] eax
push ebp
jmp rwxdata
jmp sub_4be2a9
sub_4bd790
mov [ ebp - 0x4 ] ecx
bt di 0xd
or ecx ecx
mov [ esp ] 0xb
lea esp [ esp + 0x28 ]
je rwxdata
call sub_4bf3f8
stc
push esp
pushad
pushad
xor eax eax
pushfd
jmp rwxdata
stc
call sub_4be4db
call sub_4bee39
mov [ esp ] 0x19e0
mov [ ebp + 0x4 ] ax
pushfd
pushfd
pushfd
pop [ esp + 0x2c ]
jmp rwxdata
pushfd
push [ esp + 0x30 ]
pop [ ebp ]
mov [ esp ] 0x55ed9540
pushfd
mov [ esp + 0xc ] 0x78b5
push [ esp ]
lea esp [ esp + 0x3c ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bd870
mov cl [ ebp + 0x8 ]
jmp rwxdata
add ebp 0x2
pushfd
stc
shld eax edx cl
push [ esp ]
mov [ esp ] ecx
pushfd
mov [ ebp + 0x4 ] eax
mov [ esp ] ax
pushfd
push ebp
mov [ esp + 0x4 ] 0xfc
pushfd
pop [ esp + 0x34 ]
push [ esp ]
call sub_4bf229
call sub_4be43a
mov [ esp + 0x24 ] esi
pushad
mov [ esp ] 0x4f
mov [ esp + 0x40 ] ebp
pushfd
pushfd
mov [ esp + 0x44 ] edx
call sub_4bd6ee
sub_4bd8a9
mov [ esp ] 0xa5
call sub_4beb83
cmc
mov [ esp ] 0xe5
rol al 0x4
push esi
call sub_4bde18
bswap ecx
call sub_4be1c8
bsf ax di
bts ax 0xe
rol ah 0x6
mov eax ebp
jmp sub_4be490
sub_4bd910
sub bl al
call sub_4be6fd
test al 0x80
movzx eax [ esi ]
call sub_4bfbd0
cwde
mov eax [ ebp ]
pushfd
mov eax [ eax ]
mov [ esp ] bl
pushad
pushad
mov [ ebp ] eax
push esp
push 0x3183785b
lea esp [ esp + 0x4c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
sub_4bd9a6
mov [ esp + 0x28 ] edi
mov [ esp + 0x4 ] 0x32a5
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bda9e
mov [ esp + 0x24 ] esi
movzx bx cl
setbe bl
not bl
mov [ esp + 0x20 ] ebp
bswap ebp
movsx bx dl
bswap bx
mov [ esp + 0x1c ] edx
seto bh
pushad
xchg ebp ebx
lea ebp [ ecx * 4 + 0x48143fe0 ]
xchg [ esp + 0x38 ] esi
lea ebx [ ebx - 0x799e353c ]
setae al
setge al
mov [ esp + 0x4 ] ebx
xchg [ esp + 0x34 ] edi
lea esp [ esp + 0x34 ]
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bdb44
inc esi
push ecx
push 0x27e43e74
mov [ ebp ] ax
pushfd
lea esp [ esp + 0x50 ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bdbbd
push [ esp + 0xc ]
pop [ ebp ]
push 0x10870b85
pushad
push edx
mov [ esp ] 0x9d3c
lea esp [ esp + 0x38 ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bdc70
mov [ esp + 0x10 ] 0x41d03457
push 0x88a6cf
mov [ esp + 0x4c ] ebp
push ebp
mov [ esp + 0x14 ] esp
mov [ esp + 0x4c ] edx
pushfd
mov [ esp + 0x4c ] esi
mov [ esp ] 0xc8
mov [ esp + 0x48 ] edi
push 0x84e10a9f
pushfd
mov [ esp + 0x4 ] 0x7
lea esp [ esp + 0x50 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bdcec
push 0x5d3e025
pushfd
pop [ esp + 0x24 ]
pushad
mov [ esp ] al
mov [ esp ] dx
push [ esp + 0x44 ]
pop [ ebp ]
push esp
lea esp [ esp + 0x4c ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bdd0f
mov [ ebp ] edx
push ecx
push esp
lea esp [ esp + 0x50 ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bddcc
mov [ esp ] 0x84
pushad
jmp rwxdata
mov [ esp + 0x20 ] ebx
pushad
push edi
push 0xa412fb79
pushfd
mov [ esp + 0x48 ] esi
call sub_4bdc70
call sub_4be830
push [ esp + 0x30 ]
pop [ ebp ]
push 0xd233971e
push [ esp ]
lea esp [ esp + 0x3c ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bddd6
push ebp
mov [ ebp ] eax
push eax
mov [ esp ] dl
lea esp [ esp + 0x2c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
sub_4bde18
push 0xad3f7da
push edx
inc al
jmp rwxdata
cmp bx cx
mov [ esp ] bh
cmp bh 0x17
add bl al
stc
clc
stc
mov [ esp ] 0xa8ff46c1
mov al [ eax + edi ]
mov [ esp ] 0xe2
sub ebp 0x2
call sub_4bfbb5
bt edi 0x1a
xor al 0xdf
mov al [ ebp ]
push 0xc75da1aa
bt ax di
cmp dh 0xbf
bt bp cx
sub ebp 0x2
jmp rwxdata
add [ ebp + 0x4 ] al
call sub_4befe8
mov [ esp + 0x18 ] esi
pushfd
mov [ esp + 0x18 ] ebp
mov [ esp ] eax
jmp rwxdata
pushad
mov [ esp + 0x34 ] edx
call sub_4bf281
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bde85
call sub_4bd69c
mov al [ ebp ]
shr cl cl
setle cl
xor cl dl
mov cl [ ebp + 0x2 ]
lea esp [ esp + 0x4 ]
jg rwxdata
test bh dh
pushfd
cmc
jmp sub_4bf117
pushfd
pushfd
sub ebp 0x2
stc
shr al cl
mov [ esp ] al
mov [ esp ] bl
pushfd
mov [ ebp + 0x4 ] ax
pushfd
pushfd
call j_sub_4beb59
bt eax 0x4
shl al cl
sub al ah
mov al [ ebp ]
add cl dh
shr cl cl
add cl 0x3e
mov cl [ ebp + 0x2 ]
cmc
call sub_4bf3d8
pushfd
pop [ esp + 0x8 ]
push 0x7157e63d
jmp rwxdata
pushfd
push [ esp + 0x10 ]
pop [ ebp ]
pushad
pushfd
push edi
lea esp [ esp + 0x3c ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bdf13
push [ esp + 0x8 ]
push ebp
mov [ esp + 0x4 ] 0x8a63
push [ esp + 0x4c ]
pop [ ebp ]
mov [ esp + 0x4 ] ebp
mov [ esp ] 0x70
lea esp [ esp + 0x50 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
sub_4bdf37
mov [ esp + 0x10 ] edi
pushfd
push [ esp ]
pushad
push [ esp ]
lea esp [ esp + 0x3c ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bdf4c
mov [ esp + 0x44 ] edi
mov [ esp ] 0x5
push esi
push esp
pushfd
lea esp [ esp + 0x50 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bdfbe
[ edi ] [ esi ]
ror di 0x6
cmc
btc di ax
mov edi [ esp + 0x50 ]
sar si cl
ror si 0x3
lea esi [ 0xffffffffc6bb040e ]
mov esi [ esp + 0x54 ]
std
stc
std
bt si 0x1
push [ esp + 0x58 ]
popfd
mov [ esp ] dh
mov [ esp + 0x10 ] ah
lea esp [ esp + 0x5c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
sub_4bdffc
push 0x8df7f7f1
push [ esp + 0x2c ]
pop [ ebp ]
mov [ esp + 0x4 ] 0xbe
pushfd
mov [ esp + 0x4 ] 0x96539eee
push ecx
lea esp [ esp + 0x38 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
sub_4be181
cmc
cmc
add ecx 0x0
call sub_4bdd60
pushad
aam 0xb3
add al 0xa0
mov eax ebp
pushad
call sub_4be826
mov [ esp ] cl
pushad
lea esp [ esp + 0x24 ]
cpuid
cmp dl dl
sub ebp 0xc
push 0xa549d8e8
stc
cmp [ ebp + 0xc ] 0x1
push [ esp ]
pushfd
mov [ ebp + 0xc ] eax
push [ esp + 0x4 ]
pushfd
mov [ ebp + 0x8 ] ebx
jmp rwxdata
pushfd
mov [ ebp + 0x4 ] ecx
pushad
jmp rwxdata
mov [ esp ] 0xab
mov [ ebp ] edx
jmp rwxdata
lea esp [ esp + 0x38 ]
jne rwxdata
push ecx
not ebx
bswap bx
setpe bh
mov ebx [ esp + 0x4 ]
pushad
mov [ esp ] 0x5311
lea esp [ esp + 0x28 ]
jmp rwxdata
or bx dx
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
or bl 0x4e
call sub_4bede1
movsx cx bl
bswap cx
mov cx 0xd0c
lea ecx [ esi - 0x5c62891c ]
mov ecx [ ebp - 0x4 ]
js rwxdata
jmp rwxdata
pushad
pushad
lea ebp [ ebp + ecx * 4 ]
mov [ esp + 0x4 ] 0xd80c67b7
jmp rwxdata
pushad
lea ebp [ ebp + ecx * 4 ]
jmp sub_4bfc1e
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
call sub_4bf994
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4be1c8
inc esi
dec cl
movsx cx dl
lea ecx [ esi - 0x9460c38 ]
xor ch ah
movzx ecx al
stc
bt edx esp
pushad
call sub_4bd790
mov [ ebp + 0x4 ] eax
mov [ esp + 0xc ] si
lea esp [ esp + 0x2c ]
jge rwxdata
pushad
pushfd
pushad
pushfd
pop [ esp + 0x40 ]
call sub_4bdf13
pushfd
push 0x2dbcf6c9
mov [ esp ] 0xa
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
push 0x13dc31a6
pushfd
push eax
pushfd
push [ esp + 0x10 ]
pop [ ebp ]
pushad
pushfd
pushfd
lea esp [ esp + 0x3c ]
jmp rwxdata
pop [ ebp ]
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
sub_4be248
pushfd
push [ esp + 0x4 ]
call sub_4be90b
mov [ esp ] 0xee52f1b0
push [ esp + 0x4 ]
pop [ ebp ]
pushad
pushfd
push 0xdca92d94
lea esp [ esp + 0x30 ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4be43a
call sub_4beba0
mov [ esp ] eax
pushad
mov [ esp + 0x1c ] ebx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x18 ] esi
pushfd
mov [ esp + 0x18 ] ebp
mov [ esp ] eax
jmp rwxdata
pushad
mov [ esp + 0x34 ] edx
call sub_4bf281
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4be467
cmp sp 0xe560
sub bx ax
push [ esp + 0x4 ]
cmp bx 0x3eae
push esp
cmc
sub ebp 0x2
call sub_4bfabf
pushfd
mov [ esp ] esi
jmp rwxdata
pushfd
pushfd
mov [ esp + 0x4 ] edi
pushfd
push 0x86d3befe
push 0xecf66cf3
lea esp [ esp + 0x10 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4be4cd
mov [ esp + 0xc ] edi
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4be4db
xchg [ ebp + ecx * 4 ] eax
stc
clc
cmp edi 0xfeecfba0
mov [ esp + 0x48 ] eax
bt di bp
mov [ esp + 0x8 ] 0xe2a3
pushfd
sub ecx 0x1
pushfd
mov [ esp + 0x4 ] ch
jmp rwxdata
lea esp [ esp + 0x50 ]
jne rwxdata
call sub_4be2d1
stc
push edi
stc
sub eax eax
pushfd
call j_sub_4bdb59
pushfd
mov [ esp + 0x4 ] eax
jmp rwxdata
call sub_4bf0fb
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4be519
mov [ ebp ] eax
push [ esp ]
lea esp [ esp + 0x18 ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4be55f
push 0xece3a10a
mov [ esp + 0x28 ] esi
jmp rwxdata
call sub_4bd9a6
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4be5b8
call sub_4bf917
or bl 0x4e
call sub_4bede1
movsx cx bl
bswap cx
mov cx 0xd0c
lea ecx [ esi - 0x5c62891c ]
mov ecx [ ebp - 0x4 ]
js rwxdata
pushad
pushad
lea ebp [ ebp + ecx * 4 ]
mov [ esp + 0x4 ] 0xd80c67b7
jmp rwxdata
pushad
lea ebp [ ebp + ecx * 4 ]
jmp sub_4bfc1e
call sub_4bf994
sub_4be5f2
bt ax 0x6
ror al 0x2
bt esi 0x14
clc
cmp si bx
sub bl al
cmp dl dh
test dh ch
cmc
mov ax [ eax + edi ]
bt bp bx
sub ebp 0x2
jmp rwxdata
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4be619
mov [ esp ] eax
inc al
clc
pushfd
neg al
call sub_4be5f2
not al
pop edx
cmc
neg al
pushad
or edx ebp
pushfd
add al 0x13
not dx
cmp al dh
add bl al
sar dl cl
lea edx [ 0x17ddbcc1 ]
not dx
mov edx [ eax + edi ]
clc
mov [ esp + 0x4 ] 0x7d66
sub ebp 0x4
push ecx
call sub_4bdd0f
bt eax 0x1c
bswap eax
lea esp [ esp + 0x50 ]
jae rwxdata
bt sp sp
xor ebx eax
push 0xe1268af5
jmp rwxdata
stc
xor ebx eax
bt si dx
pushfd
sub ebp 0x4
jmp rwxdata
sub ebp 0x4
cmc
add esi 0x4
jmp rwxdata
add esi 0x4
push esp
push 0xe554bfa6
pushfd
call sub_4be519
lea esp [ esp + 0x50 ]
jne rwxdata
jmp rwxdata
call sub_4be2d1
stc
push edi
stc
sub eax eax
pushfd
call j_sub_4bdb59
pushfd
mov [ esp + 0x4 ] eax
jmp rwxdata
mov [ ebp ] eax
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
call sub_4bf0fb
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4be6fd
dec dh
btc dx cx
or dh 0x42
mov dx [ ebp ]
push ebx
add esi 0x1
mov [ esp ] edx
clc
add ebp 0x2
jmp rwxdata
mov [ eax + edi ] dx
push esi
push edi
mov [ esp + 0x8 ] 0xdd
lea esp [ esp + 0x38 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
sub_4be73e
mov [ ebp ] ax
pushad
push 0xd8141621
lea esp [ esp + 0x2c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
sub_4be8ba
test bl al
xor bl al
test dh 0xf
sub ebp 0x2
mov [ esp ] 0x4d
mov [ ebp ] ax
push [ esp ]
mov [ esp + 0x4 ] 0x4a
lea esp [ esp + 0x8 ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4be90b
mov [ esp + 0xc ] ebp
pushfd
jmp rwxdata
mov [ esp + 0xc ] edx
push [ esp + 0x4 ]
push [ esp ]
jmp rwxdata
mov [ esp + 0x10 ] esi
call sub_4bd6c8
stc
clc
ror al 0x4
stc
sub esp 0xfffffff8
jae rwxdata
cmp bh 0x24
sub al 0x7
call sub_4be8ba
inc al
pushfd
clc
bt esp ebx
add esi 0x1
jmp rwxdata
sub al 0x7
test ch 0xd
pushad
stc
xor bl al
mov [ esp + 0x8 ] bh
sub ebp 0x2
jmp rwxdata
mov [ esp + 0x4 ] edi
push [ esp ]
mov [ ebp ] ax
mov [ esp + 0x4 ] ah
pushfd
mov [ esp ] bp
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bea90
push [ esp + 0x30 ]
pop [ ebp ]
mov [ esp + 0x4 ] 0xfec1
lea esp [ esp + 0x34 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
sub_4beb20
push edx
shr eax cl
lea esp [ esp + 0x4c ]
jle rwxdata
pushad
mov [ ebp + 0x4 ] eax
call sub_4bdcec
inc al
neg ah
mov eax [ ebp ]
cmp esp esp
clc
add [ ebp + 0x4 ] eax
push 0xfa0b514b
pushfd
pushad
jmp rwxdata
mov [ ebp + 0x4 ] eax
jge rwxdata
pushfd
pop [ esp + 0x24 ]
call sub_4be5b8
adc al dl
push edx
jmp rwxdata
pushfd
pushfd
pop [ esp ]
pushfd
jmp rwxdata
push ecx
pushfd
pop [ esp ]
push 0x7f1662e9
push [ esp + 0x4 ]
pop [ ebp ]
mov [ esp ] 0x57
push 0xfd9f00cf
lea esp [ esp + 0xc ]
jmp rwxdata
mov al [ ebp ]
shr cl cl
setle cl
xor cl dl
mov cl [ ebp + 0x2 ]
lea esp [ esp + 0x4 ]
jg rwxdata
mov [ esp ] 0x28df
pushad
push [ esp + 0x24 ]
pop [ ebp ]
push 0xdd1df9c2
mov [ esp ] 0x70da
lea esp [ esp + 0x2c ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
test bh dh
pushfd
cmc
jmp sub_4bf117
pushfd
pushfd
sub ebp 0x2
stc
shr al cl
mov [ esp ] al
mov [ esp ] bl
pushfd
mov [ ebp + 0x4 ] ax
pushfd
pushfd
call j_sub_4beb59
bt eax 0x4
shl al cl
sub al ah
mov al [ ebp ]
add cl dh
shr cl cl
add cl 0x3e
mov cl [ ebp + 0x2 ]
cmc
call sub_4bf3d8
pushfd
pop [ esp + 0x8 ]
push 0x7157e63d
jmp rwxdata
jmp rwxdata
pushfd
push [ esp + 0x10 ]
pop [ ebp ]
pushad
pushfd
push edi
lea esp [ esp + 0x3c ]
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4beb59
pushfd
pop [ esp + 0x14 ]
pushad
mov [ esp ] bl
push [ esp + 0x34 ]
pop [ ebp ]
push 0x150720d6
push ebp
push 0x771a3e89
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4beba0
mov [ esp + 0x4 ] eax
call sub_4bfa7a
push esi
push ebp
mov [ esp ] 0xac
mov [ esp ] 0x2
mov [ esp + 0x4 ] eax
push [ esp ]
mov [ esp + 0x4 ] ebx
push eax
jmp rwxdata
mov [ esp + 0x4 ] dl
mov [ esp + 0x4 ] esi
pushad
mov [ esp + 0x20 ] ebp
push 0xe2ff0f60
mov [ esp ] bh
mov [ esp + 0x18 ] bl
pushfd
mov [ esp + 0x24 ] edx
call sub_4be55f
cmc
cmp esp ebp
shr ax cl
jmp rwxdata
mov [ ebp + 0x4 ] ax
pushfd
pushad
pushfd
pushfd
pop [ esp + 0x24 ]
mov [ esp + 0x4 ] 0xe8
jmp rwxdata
mov [ esp + 0x8 ] 0xc72046d3
jmp rwxdata
push [ esp + 0x24 ]
pop [ ebp ]
pushfd
push ebx
lea esp [ esp + 0x30 ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4beca2
stc
mov ecx [ eax * 4 + rwxdata ]
pushad
call sub_4bf14b
push esi
mov [ esp + 0x3c ] esi
pushfd
push [ esp + 0xc ]
mov [ esp + 0x40 ] edi
pushfd
pushfd
mov [ esp ] 0x58
lea esp [ esp + 0x48 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bed17
push [ esp + 0x10 ]
lea esp [ esp + 0x24 ]
jge rwxdata
pushfd
call sub_4bf25f
neg al
shrd dx cx cl
movzx eax [ esi ]
shrd dx bx 0xf
sub al bl
jmp sub_4bd6b7
push edi
mov [ esp ] ebp
call sub_4bd8a9
call j_sub_4be73e
mov [ esp ] ch
mov [ esp + 0x40 ] edx
mov [ esp + 0x4 ] 0x8
pushfd
jmp rwxdata
mov [ esp + 0x40 ] esi
jmp rwxdata
mov [ esp + 0x3c ] edi
push 0x71cc5b1c
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x40 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bed45
mov [ esp + 0x28 ] esi
push 0x48eb6052
push 0xd1cc5e1
jmp rwxdata
mov [ esp + 0x2c ] edi
push 0x35ce92b
mov [ esp + 0x4 ] ch
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bed8c
mov [ esp + 0x8 ] ebx
pushfd
jmp rwxdata
mov [ esp + 0x8 ] esi
pushfd
jmp rwxdata
pushad
push [ esp ]
mov [ esp + 0x2c ] ebp
jmp rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x2c ] edx
jmp rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x2c ] esi
mov [ esp + 0x8 ] cx
pushfd
mov [ esp + 0x2c ] edi
push [ esp ]
push eax
push [ esp ]
lea esp [ esp + 0x38 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bed96
pushfd
lea esp [ esp + 0x3c ]
jpo rwxdata
jmp rwxdata
push ecx
pushad
push [ esp + 0x4 ]
push edx
push [ esp + 0x28 ]
retn 0x2c
push ecx
pushfd
pushfd
push ecx
mov [ esp + 0x8 ] edx
push [ esp + 0xc ]
retn 0x10
sub_4bede1
mov ebx eax
mov [ esp ] 0xb8
stc
pushfd
test bh 0xcc
and ebx 0xff0
stc
stc
mov [ esp + 0x4 ] dx
stc
cmp ebx 0xfe0
pushfd
push esi
pushfd
lea esp [ esp + 0x14 ]
jne rwxdata
push ecx
not ebx
bswap bx
setpe bh
mov ebx [ esp + 0x4 ]
pushad
mov [ esp ] 0x5311
lea esp [ esp + 0x28 ]
jmp rwxdata
shl bl 0x5
and bx 0x763d
sete bh
xor [ ebp + 0xc ] 0x20
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bee39
jmp rwxdata
mov [ ebp ] ax
mov [ esp + 0x4 ] 0x8e
push esp
push [ esp ]
pushad
lea esp [ esp + 0x30 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
sub_4bee3e
push edx
lea esp [ esp + 0x38 ]
jpe rwxdata
pushfd
push ebp
push [ esp ]
jmp rwxdata
pushfd
pushfd
pushfd
pushad
jmp rwxdata
pushfd
pop [ esp + 0x8 ]
push 0x7157e63d
jmp rwxdata
push [ esp + 0x28 ]
pop [ ebp ]
mov [ esp + 0x8 ] cl
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
pushfd
push [ esp + 0x10 ]
pop [ ebp ]
pushad
pushfd
push edi
lea esp [ esp + 0x3c ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bef27
neg bx
sub esp 0xb4
movzx edi cl
and di 0x9319
sbb ecx 0xd20889cd
xadd bl al
mov edi esp
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
sub_4befe8
pushfd
jmp rwxdata
jmp rwxdata
pushfd
pop [ esp + 0xc ]
call sub_4be9f6
mov [ esp + 0x2c ] edi
push 0x35ce92b
mov [ esp + 0x4 ] ch
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bf022
neg ecx
bt bp 0x4
bt sp 0x3
test sp bp
cmp bl 0x81
add ecx 0x0
push ecx
lea esp [ esp + 0x10 ]
jo rwxdata
push 0x3de28678
push [ esp ]
mov [ esp + 0x4 ] ecx
push [ esp ]
push [ esp + 0x4 ]
pushad
push [ esp + 0x2c ]
retn 0x30
pushad
push 0x7817f2bb
mov [ esp + 0x20 ] ecx
push 0xe14cc384
pushad
pushfd
pushfd
push [ esp + 0x4c ]
retn 0x50
sub_4bf05e
pushfd
mov [ esp ] 0x7a
mov [ esp + 0x3c ] edi
mov [ esp ] 0x7b
push [ esp + 0x8 ]
lea esp [ esp + 0x40 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bf078
call sub_4bdeea
stc
call sub_4be4db
call sub_4bee39
mov [ esp ] 0x19e0
mov [ ebp + 0x4 ] ax
pushfd
pushfd
pushfd
pop [ esp + 0x2c ]
jmp rwxdata
pushfd
push [ esp + 0x30 ]
pop [ ebp ]
mov [ esp ] 0x55ed9540
pushfd
mov [ esp + 0xc ] 0x78b5
push [ esp ]
lea esp [ esp + 0x3c ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bf09e
push 0x2d3807c7
push ebp
mov [ ebp ] ax
push ebp
pushfd
lea esp [ esp + 0x14 ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bf109
jmp rwxdata
mov [ esp ] 0x19e0
mov [ ebp + 0x4 ] ax
pushfd
pushfd
pushfd
pop [ esp + 0x2c ]
jmp rwxdata
pushfd
push [ esp + 0x30 ]
pop [ ebp ]
mov [ esp ] 0x55ed9540
pushfd
mov [ esp + 0xc ] 0x78b5
push [ esp ]
lea esp [ esp + 0x3c ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bf117
sub ebp 0x2
stc
sub esp 0xfffffffc
jo rwxdata
cmp esi 0x157ce5e8
shr al cl
pushfd
mov [ esp ] 0x4c
mov [ ebp + 0x4 ] ax
push ebp
pushfd
pop [ esp + 0x4 ]
call sub_4bfc23
call sub_4bf393
mov [ ss : eax ] dx
push 0x58f05f14
mov [ esp + 0x4 ] 0xa1
push eax
lea esp [ esp + 0x38 ]
jmp rwxdata
push 0xadac1c2b
mov [ esp ] ch
shr al cl
pushad
call sub_4bf109
mov [ ebp ] ax
mov [ esp + 0x4 ] 0x8e
push esp
push [ esp ]
pushad
lea esp [ esp + 0x30 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
sub_4bf14b
pushfd
neg ecx
cmc
call sub_4be181
push eax
call sub_4bdc6a
mov [ ebp ] eax
pushad
pushfd
mov [ esp + 0x4 ] 0xb16e
pushfd
lea esp [ esp + 0x4c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
sub_4bf1fb
pushad
mov [ esp + 0x40 ] ebp
mov [ esp + 0x4 ] bl
mov [ esp + 0x3c ] edx
pushfd
mov [ esp ] 0x6f
lea esp [ esp + 0x40 ]
jo rwxdata
jmp rwxdata
push esi
pushfd
mov [ esp ] edi
pushad
pushfd
pushfd
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
pushfd
mov [ esp ] esi
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
pushfd
pushfd
mov [ esp + 0x4 ] edi
pushfd
push 0x86d3befe
push 0xecf66cf3
lea esp [ esp + 0x10 ]
jmp rwxdata
sub_4bf229
pushfd
lea esp [ esp + 0x40 ]
jo rwxdata
jmp rwxdata
pop [ ebp ]
pushfd
pushad
mov [ esp ] 0x801e
lea esp [ esp + 0x24 ]
jmp rwxdata
pushfd
push ecx
push [ esp + 0x8 ]
pop [ ebp ]
pushfd
mov [ esp ] esi
mov [ esp + 0x4 ] 0x6a
lea esp [ esp + 0x10 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
sub_4bf248
lea esp [ esp + 0x4c ]
jbe rwxdata
pushfd
mov [ ebp ] eax
pushad
pushad
mov [ esp ] di
lea esp [ esp + 0x44 ]
jmp rwxdata
mov [ ebp ] eax
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bf268
mov [ esp + 0x8 ] bh
mov [ esp + 0x8 ] esi
pushfd
mov [ esp + 0x8 ] ebp
pushad
mov [ esp + 0x24 ] edx
pushfd
pushfd
jmp rwxdata
mov [ esp + 0x28 ] esi
push 0x8c691dd5
push 0x69e8e5c7
mov [ esp + 0x2c ] edi
mov [ esp ] 0x4c
lea esp [ esp + 0x2c ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bf281
push 0xfba30f34
mov [ esp + 0x38 ] esi
call j_sub_4bf05e
mov [ esp ] 0x5d71
mov [ esp ] sp
push [ esp + 0x4 ]
mov [ esp + 0x24 ] edi
push [ esp + 0x10 ]
lea esp [ esp + 0x28 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bf393
mov [ esp + 0x1c ] esi
push [ esp ]
call sub_4bf1fb
rcl cl 0x6
rol cl cl
or cl al
mov eax [ ebp ]
bt ebx edx
pushad
add cl 0x29
mov cl [ ebp + 0x4 ]
pushfd
sub ebp 0x2
cmc
pushad
call sub_4beb20
pushfd
pop [ esp + 0xc ]
pushfd
push [ esp + 0x10 ]
pop [ ebp ]
push [ esp + 0x4 ]
lea esp [ esp + 0x18 ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bf3d8
cmp bl 0x9a
bt bp di
sub ebp 0x2
push 0xbf8b5964
push ebp
jmp rwxdata
shl al cl
pushad
mov [ esp ] al
push 0xfd611c72
mov [ esp + 0x4 ] esp
mov [ ebp + 0x4 ] ax
call sub_4bee3e
mov [ esp + 0x20 ] ebx
pushad
push edi
push 0xa412fb79
pushfd
mov [ esp + 0x48 ] esi
call sub_4bdc70
call sub_4be830
push [ esp + 0x30 ]
pop [ ebp ]
push 0xd233971e
push [ esp ]
lea esp [ esp + 0x3c ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bf8ee
mov ecx [ eax * 4 + rwxdata ]
stc
call sub_4bf022
add ebp 0x8
pushfd
mov [ esp ] dl
mov [ ss : eax ] edx
push [ esp + 0x4 ]
lea esp [ esp + 0x14 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
sub_4bf917
mov [ esp ] bp
call sub_4bea90
mov [ esp + 0x4 ] dl
mov [ esp + 0x4 ] esi
pushad
mov [ esp + 0x20 ] ebp
push 0xe2ff0f60
mov [ esp ] bh
mov [ esp + 0x18 ] bl
pushfd
mov [ esp + 0x24 ] edx
call sub_4be55f
cmc
cmp esp ebp
shr ax cl
jmp rwxdata
mov [ ebp + 0x4 ] ax
pushfd
pushad
pushfd
pushfd
pop [ esp + 0x24 ]
mov [ esp + 0x4 ] 0xe8
jmp rwxdata
mov [ esp + 0x8 ] 0xc72046d3
jmp rwxdata
push [ esp + 0x24 ]
pop [ ebp ]
pushfd
push ebx
lea esp [ esp + 0x30 ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bf983
mov [ esp + 0x24 ] edi
pushfd
mov [ esp ] cl
lea esp [ esp + 0x28 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bf994
mov [ esp + 0x4 ] bh
mov [ ebp ] eax
push esp
pushfd
lea esp [ esp + 0x4c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
sub_4bfa7a
pushad
xchg [ esp + 0x24 ] ebx
call sub_4bda9e
bt ax 0x1
add ebp 0x8
mov [ esp + 0x8 ] dh
push 0x5a079111
push [ esp + 0x4 ]
mov [ esp + 0x4 ] 0x16d1c8b7
mov [ eax ] edx
push edx
pushfd
mov [ esp ] cl
lea esp [ esp + 0x1c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
sub_4bfabf
mov [ esp + 0x4 ] 0xc39
pushad
mov [ ebp ] ax
push [ esp + 0x10 ]
mov [ esp ] 0x4f17
mov [ esp + 0x1c ] 0x28
lea esp [ esp + 0x48 ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bfae8
push [ esp + 0x14 ]
pop [ ebp ]
pushfd
pushad
push edi
pushfd
lea esp [ esp + 0x44 ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bfbd0
test esi 0xd87c590b
stc
bt bx 0x6
sub al bl
call sub_4be619
pushfd
sub bx ax
pushfd
cwde
test dh 0xda
pushfd
sub ebp 0x4
push ecx
pushfd
mov [ ebp ] eax
pushfd
lea esp [ esp + 0x44 ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bfc23
push [ esp + 0x8 ]
pop [ ebp ]
pushfd
pushfd
lea esp [ esp + 0x14 ]
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
sub_4bfca3
mov [ esp ] ebx
call sub_4be5a4
call sub_4bddcc
push edi
pushfd
mov [ esp + 0xc ] esi
pushad
pushfd
mov [ esp + 0x2c ] ebp
jmp rwxdata
lea esp [ esp + 0x2c ]
jns rwxdata
pushad
push 0x810889da
pushfd
mov [ esp + 0x4 ] dh
mov [ esp + 0x24 ] edx
push 0xe964e9a4
call sub_4bed45
xchg edi eax
push es
mov ah 0xff
cmc
mov ah 0xff
jne rwxdata
pushfd
mov [ esp ] edx
call sub_4bf912
retn 0xb403
mov ah 0xff
sahf
and al 0xb4
[ ebx - 0x1004bfc ]
or esi [ edi + edi * 8 - rwxdata ]
sbb ax 0xffb4
sub_4bfcc1
mov [ esp ] 0x829f54e7
mov [ esp ] eax
jpe rwxdata
call sub_4bddcc
push edi
pushfd
mov [ esp + 0xc ] esi
pushad
pushfd
mov [ esp + 0x2c ] ebp
jmp rwxdata
pushfd
mov [ esp ] ebx
pushad
jmp rwxdata
lea esp [ esp + 0x2c ]
jns rwxdata
call j_sub_4bf328
pushfd
mov [ eax + edi ] dl
push ebp
lea esp [ esp + 0x14 ]
jmp rwxdata
pushad
push 0x810889da
pushfd
mov [ esp + 0x4 ] dh
mov [ esp + 0x24 ] edx
push 0xe964e9a4
call sub_4bed45
xchg edi eax
push es
mov ah 0xff
cmc
mov ah 0xff
jne rwxdata
pushfd
mov [ esp ] edx
call sub_4bf912
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
retn 0xb403
mov ah 0xff
sahf
and al 0xb4
[ ebx - 0x1004bfc ]
or esi [ edi + edi * 8 - rwxdata ]
sbb ax 0xffb4
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4bf8ee
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
call sub_4beca2
call sub_4bfcc1
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4bd707
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4bdd6d
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4be2be
j_sub_4a1ddb
jmp sub_4a1ddb
_start
jmp j_sub_4a1ddb
sub_4bd6b7
inc al
setno dh
neg al
pushfd
pushad
ror al 0x2
call sub_4bd910
sub_4bd707
dec esi
stc
rcr bl cl
ror di cl
btr ebx 0x2
lea ebp [ esp + 0xc ]
jmp sub_4bef27
j_sub_4beb59
jmp sub_4beb59
sub_4bd81f
call sub_4be59c
sub_4bd824
call sub_4be068
j_sub_4bf328
jmp sub_4bf328
sub_4bda99
call sub_4bdb44
sub_4bdb3a
mov [ esp + 0x4 ] edx
pushad
call sub_4bfab1
sub_4bdb59
pushfd
xchg [ ebp ] eax
jmp rwxdata
mov [ esp ] 0xeec8
mov [ esp ] 0x20
mov [ esp + 0xc ] rwxdata
pushad
jmp rwxdata
call sub_4be270
sub_4bdc6a
push ecx
call sub_4bed8c
sub_4bdd29
call sub_4bdbbd
j_sub_4be73e
jmp sub_4be73e
sub_4bdd60
call sub_4bed96
mov [ ebp + 0x4 ] eax
jmp rwxdata
call sub_4be126
sub_4bdd6d
ror ax 0x1
mov [ esp + 0xc ] 0x32
jmp sub_4be467
sub_4bdeea
pushfd
mov [ esp + 0x28 ] ebp
mov [ esp ] ah
mov [ esp + 0x24 ] edx
pushad
mov [ esp + 0x40 ] esi
call sub_4be44c
sub_4bdf00
push esp
pushfd
mov [ esp + 0x34 ] eax
pushfd
push [ esp + 0x38 ]
retn 0x3c
j_sub_4bf05e
jmp sub_4bf05e
sub_4be068
sub ecx 0x1
jmp j_sub_4bf41f
sub_4be0cb
call sub_4bde85
pushfd
call sub_4bf25f
neg al
shrd dx cx cl
movzx eax [ esi ]
shrd dx bx 0xf
sub al bl
jmp sub_4bd6b7
j_sub_4bf41f
jmp sub_4bf41f
sub_4be126
pushfd
pop [ esp + 0x8 ]
jmp sub_4bdd29
sub_4be236
call sub_4be4cd
pushad
pushfd
pushad
pushfd
pop [ esp + 0x40 ]
call sub_4bdf13
sub_4be270
mov [ esp + 0x2c ] eax
push ebx
push [ esp + 0x30 ]
retn 0x34
sub_4be2a9
pushfd
pop [ esp + 0x28 ]
jmp sub_4bdffc
sub_4be2be
xchg [ esp + 0x40 ] esi
cld
pop edi
mov esi edx
pushfd
cld
lea edi [ ecx + eax - 0x40 ]
call sub_4be0cb
sub_4be2d1
stc
cmp al 0xd
mov [ esp ] si
sub eax eax
jmp sub_4be8f3
sub_4be44c
mov [ esp + 0x8 ] 0x50
call sub_4bdf4c
div [ ebp + 0x8 ]
push eax
mov [ ebp + 0x4 ] edx
push esi
mov [ ebp + 0x8 ] eax
push ebp
jmp rwxdata
jmp sub_4be2a9
sub_4be490
stc
bt dx di
sub ebp 0x2
jmp sub_4bf09e
sub_4be59c
xchg [ ebp ] eax
jmp sub_4bf363
sub_4be5a4
mov [ esp ] 0x4f35
mov [ esp ] 0x1d54
mov [ esp ] esi
call sub_4be248
j_sub_4bdb59
jmp sub_4bdb59
sub_4be826
pushfd
stc
sub ebp 0x4
call sub_4bf248
sub_4be830
mov [ esp + 0x20 ] esi
jmp sub_4bed17
sub_4be8f3
bt bx 0xd
clc
test bx di
xchg [ ebp + ecx * 4 ] eax
cmp bh 0x6
mov [ esp ] eax
call sub_4bd824
sub_4be9f6
call sub_4bf376
j_sub_4bfca3
jmp sub_4bfca3
sub_4beb83
push 0x37daba82
mov [ esp + 0x8 ] edx
pushfd
push 0x177d1823
push 0x1066d885
mov [ esp + 0x10 ] esi
call sub_4bdf37
j_sub_4bdfbe
jmp sub_4bdfbe
sub_4bf0fb
mov [ esp + 0x4 ] ebx
push 0x8acc97b2
call sub_4bf268
sub_4bf25f
mov [ esp + 0x4 ] ebp
call sub_4bdb3a
sub_4bf328
mov [ esp + 0x20 ] esi
call sub_4bf078
jmp sub_4be2a9
sub_4bf363
pushad
push 0x3a4676f0
mov [ esp + 0x2c ] rwxdata
call sub_4bdf00
sub_4bf376
mov [ esp + 0xc ] 0x689e
jmp sub_4bfae8
sub_4bf3f8
cmp cl 0xf3
sub eax eax
call sub_4bd81f
sub_4bf41f
lea esp [ esp + 0x8 ]
jne rwxdata
call sub_4be2d1
call sub_4bf3f8
sub_4bf912
call sub_4bd71b
sub_4bf94e
or ecx ecx
mov [ esp + 0xc ] dh
push 0xab652008
pushad
lea esp [ esp + 0x34 ]
je rwxdata
call sub_4bf3f8
call sub_4be2d1
sub_4bfab1
mov [ esp + 0x24 ] esi
call sub_4bf983
call sub_4bf994
j_sub_4bddd6
jmp sub_4bddd6
sub_4bfbb5
mov [ esp + 0x8 ] 0x5f
jmp sub_4bda99
sub_4bfc1e
call j_sub_4bddd6
