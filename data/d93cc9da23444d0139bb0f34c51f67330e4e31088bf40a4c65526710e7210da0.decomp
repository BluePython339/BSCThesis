sub_4011ec
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
cmp al [ eax ]
mov cl 0x31
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bl ch
xchg edi eax
mov edx 0x871c872c
xchg edi eax
std
or [ eax ] dl
bound esp [ ebx + 0x1014dd97 ]
0x9dbd97a7 0x804
mov eax 0xfa1cb91c
sbb esp edi
das
inc edi
mov [ edx - 0x70 ] eax
ja rwxdata
sbb eax [ ebx + esi * 8 - 0xa78e379 ]
test [ ebp + 0x1c870bfb ] ah
js rwxdata
add [ eax ] al
jbe rwxdata
add [ eax ] al
add [ eax ] al
cmc
or [ edi + 0x7397da1c ] eax
popfd
dec ebx
sub al 0x81
sbb eax [ edi + edx * 4 - 0x6dedeb06 ]
sbb [ edi ] 0x87
sbb al 0xd7
jbe rwxdata
mov eax 0xc7d912dc
in al dx
test [ ebx ] bl
push eax
xchg [ edi + eax * 4 ] ebx
out dx eax
xor ebx edx
or ch [ ecx - 0xc7be48a ]
xchg [ edi + eax * 4 ] ebx
cmc
pop edx
add [ eax ] al
add [ ebx ] bl
add [ eax ] dh
pop edx
add [ eax ] al
pop edx
add [ eax ] al
adc bl [ edx ]
add ah dl
pop ebx
add [ eax ] al
cmp [ edx ] bl
add [ eax ] al
add [ eax ] al
add [ esi + 0x5b ] bl
add [ eax ] al
insb
pop ebx
add [ eax ] al
jl rwxdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jmp rwxdata
sbb ebx [ 0xffffffff871c8791 ]
xchg ebp eax
or eax 0x871c8fd1
sbb ebx [ 0xffffffff871c8795 ]
pop ecx
cmp al 0x1c
xchg [ edx + edi * 8 ] ebx
adc [ esi - 0x22 ] cl
mov ebx [ ebx * 8 - 0x7188f277 ]
sbb al 0x87
dec esp
adc dl [ edx + 0x1c871dca ]
xlat
sbb ebx [ 0xffffffff871c8719 ]
hlt
jmp rwxdata
add [ eax ] al
mov [ ebx ] bl
add [ eax - 0x53ffffa5 ] bl
pop ebx
add [ eax ] al
mov eax 0x4200005b
pop ebx
add [ eax ] al
dec esi
pop ebx
add [ eax ] al
sub_40122f
add esp 0x481b84e7
inc ecx
adc al ch
push es
shl [ edi - 0x18e47b14 ] 0x1
sbb eax [ ebx + esi * 8 - 0xa78e379 ]
test [ ebp + 0x1c870bfb ] ah
js rwxdata
add [ eax ] al
jbe rwxdata
add [ eax ] al
add [ eax ] al
cmc
or [ edi + 0x7397da1c ] eax
popfd
dec ebx
sub al 0x81
sbb eax [ edi + edx * 4 - 0x6dedeb06 ]
sbb [ edi ] 0x87
sbb al 0xd7
jbe rwxdata
mov eax 0xc7d912dc
in al dx
test [ ebx ] bl
push eax
xchg [ edi + eax * 4 ] ebx
out dx eax
xor ebx edx
or ch [ ecx - 0xc7be48a ]
xchg [ edi + eax * 4 ] ebx
cmc
pop edx
add [ eax ] al
add [ ebx ] bl
add [ eax ] dh
pop edx
add [ eax ] al
pop edx
add [ eax ] al
adc bl [ edx ]
add ah dl
pop ebx
add [ eax ] al
cmp [ edx ] bl
add [ eax ] al
add [ eax ] al
add [ esi + 0x5b ] bl
add [ eax ] al
insb
pop ebx
add [ eax ] al
jl rwxdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jmp rwxdata
sbb ebx [ 0xffffffff871c8791 ]
xchg ebp eax
or eax 0x871c8fd1
sbb ebx [ 0xffffffff871c8795 ]
pop ecx
cmp al 0x1c
xchg [ edx + edi * 8 ] ebx
adc [ esi - 0x22 ] cl
mov ebx [ ebx * 8 - 0x7188f277 ]
sbb al 0x87
dec esp
adc dl [ edx + 0x1c871dca ]
xlat
sbb ebx [ 0xffffffff871c8719 ]
hlt
jmp rwxdata
add [ eax ] al
mov [ ebx ] bl
add [ eax - 0x53ffffa5 ] bl
pop ebx
add [ eax ] al
mov eax 0x4200005b
pop ebx
add [ eax ] al
dec esi
pop ebx
add [ eax ] al
das
inc edi
mov [ edx - 0x70 ] eax
ja rwxdata
sbb esp edi
sub_40240d
push ds
xchg [ eax - 0x70 ] esp
or edi [ ecx * 2 - 0x607ee077 ]
inc esi
adc [ eax - 0xc ] dh
or cl bl
fsubp st5
test [ ebx ] bl
xchg [ eax - 0x74 ] esp
inc edx
test [ ecx + 0x1b84edde ] al
fstp [ ebx ]
sbb bh [ ecx + 0x76 ]
sbb eax [ edi + esi * 8 + 0x1c87f4a3 ]
xchg [ edi + ebx * 8 ] ebx
fsubr [ ebx - 0x13 ]
pushad
cld
jge rwxdata
adc dl [ ecx + 0x1b84ec0b ]
xlat
sbb ebx [ edx ]
xchg esp eax
sbb [ ebx ] 0x84
jge rwxdata
jno rwxdata
pushad
jecxz rwxdata
fist [ eax + edx + 0x60d81c8f ]
0xf478f368 0xea6c
dec ecx
out dx al
jg rwxdata
imul ebp ecx 0x75
xchg [ edi + eax * 4 - 0x78 ] ecx
xchg [ eax ] dl
xchg [ 0xffffffffdd871c87 ] ebx
mov [ eax ] edx
xchg [ ebx ] ebx
test [ ebx ] bl
test [ ecx - 0x7a ] dl
adc al 0x87
imul ebp edx 0xe64cfa6a
outsd
clc
adc eax 0x1d871d92
cdq
or bl [ ecx - 0x178a2de4 ]
outsb
hlt
call 0xffffffffeaa31309
cmp al 0xd8
jno rwxdata
sub [ ebp + 0xd ] edx
xchg [ esp + eax * 4 ] ebx
popad
jg rwxdata
mov [ 0xffffffff871c87f4 ] eax
sbb al 0xdf
jge rwxdata
stc
imul edi eax 0x6b
in eax dx
0xfb71d83c 0xf761
popad
idiv [ eax - 0x32 ]
push 0xfffffff8
pushad
out 0x68 al
jno rwxdata
cli
jle rwxdata
je rwxdata
cmp al 0xc8
imul esi edx 0x6c
xchg [ edi + eax * 4 ] bl
inc ebp
xchg esp eax
mov [ 0x2ec39596 ] eax
in eax dx
lahf
adc [ edi - 0x32b427e4 ] ch
inc eax
fcomp [ ebp - 0x27 ]
push ecx
jecxz rwxdata
je rwxdata
jge rwxdata
hlt
insb
jg rwxdata
pop ebp
fst [ ecx - 0x1d ]
pop edi
outsd
0xfb74e36f 0xf760
push 0xfffffffb
outsd
jecxz rwxdata
jno rwxdata
sti
xchg ecx eax
add al 0x87
and eax 0x74e82fb5
out dx al
xchg [ 0x74e82fb5 ] esp
sub ch ch
imul edi ecx 0x2a
jmp rwxdata
clc
sub [ esi - 0x79678f8 ] eax
outsb
clc
outsb
jg rwxdata
push [ ecx - 0x7 ]
jno rwxdata
ja rwxdata
clc
sub ch dl
0x871d88e3 0x991e
sub_402483
push 0xffffffe3
jg rwxdata
je rwxdata
imul esi edx 0xdd70f57d
inc eax
fcomp [ ebp - 0x27 ]
push ecx
jecxz rwxdata
push 0x6cf478f3
0xf47fe36a 0xf269
je rwxdata
jge rwxdata
insb
jg rwxdata
pop ebp
fst [ ecx - 0x1d ]
pop edi
outsd
0xfb74e36f 0xf760
push 0xfffffffb
outsd
jecxz rwxdata
jno rwxdata
sti
xchg ecx eax
add al 0x87
and eax 0x74e82fb5
out dx al
xchg [ 0x74e82fb5 ] esp
sub ch ch
imul edi ecx 0x2a
jmp rwxdata
call 0xffffffffeaa31309
cmp al 0xd8
jno rwxdata
hlt
cmp al 0xc8
imul esi edx 0x6c
clc
sub [ esi - 0x79678f8 ] eax
0xfb71d83c 0xf761
popad
idiv [ eax - 0x32 ]
push 0xfffffff8
pushad
out 0x68 al
jno rwxdata
outsb
clc
outsb
jg rwxdata
push [ ecx - 0x7 ]
jno rwxdata
ja rwxdata
clc
sub ch dl
0x871d88e3 0x991e
sub_40248d
adc [ edx - 0x129427e4 ] bh
pushad
cld
jge rwxdata
fsubr [ ebx - 0x13 ]
jno rwxdata
0xf478f368 0xea6c
dec ecx
out dx al
jg rwxdata
stc
imul edi eax 0x6b
in eax dx
pushad
jecxz rwxdata
imul ebp ecx 0x75
xchg [ edi + eax * 4 - 0x78 ] ecx
xchg [ eax ] dl
xchg [ 0xffffffffdd871c87 ] ebx
mov [ eax ] edx
xchg [ ebx ] ebx
test [ ebx ] bl
test [ ecx - 0x7a ] dl
adc al 0x87
imul ebp edx 0xe64cfa6a
outsd
clc
adc eax 0x1d871d92
cdq
or bl [ ecx - 0x178a2de4 ]
outsb
hlt
call 0xffffffffeaa31309
cmp al 0xd8
jno rwxdata
0xfb71d83c 0xf761
popad
idiv [ eax - 0x32 ]
push 0xfffffff8
pushad
out 0x68 al
jno rwxdata
cmp al 0xc8
imul esi edx 0x6c
hlt
sub_402561
or [ esi - 0x771b79e4 ] eax
sbb eax 0x98f1d87
xchg [ esi + eax * 4 ] bl
sbb al 0x87
push ss
xchg edx eax
mov ebp 0xe8104187
or al dl
adc [ edi + 0x1bef14fa ] 0xffffff87
sbb al 0x87
mov [ ebp + 0xf ] eax
xchg edx eax
sbb al 0x87
inc ebx
test [ edx + 0x1c871c32 ] al
outsd
sub al [ edi - 0x2bb078e4 ]
push edx
fild [ ebx - 0x3a ]
dec esi
0xd278
sub_4025bd
push 0xffffffe3
dec esi
cli
push 0xffffff87
inc ebx
test [ edx + 0x1c871c06 ] al
pop es
fidiv [ esp + edx ]
xchg [ esi + eax * 4 ] ebx
popad
mov [ ebp - 0x6378e377 ] fs
jo rwxdata
dec ebp
test [ edx - 0x46 ] al
je rwxdata
sbb eax 0x89071c87
0xd718
inc ecx
adc al ch
or al dl
adc [ edi + 0x1bef14fa ] 0xffffff87
sbb al 0x87
mov [ ebp + 0xf ] eax
sbb al 0x87
sbb al 0x12
xchg edx eax
sbb al 0x87
inc ebx
test [ edx + 0x1c871c32 ] al
outsd
sub al [ edi - 0x2bb078e4 ]
push edx
fild [ ebx - 0x3a ]
dec esi
0xd278
mov [ 0xffffffff871c950e ] ecx
dec esp
test [ ecx - 0x7d ] ah
sbb ebx ebp
pop ecx
test [ ecx - 0x7d ] ah
sbb ebx ebp
sub eax 0x1c8bde4e
pop edx
sbb al 0x4a
sbb al 0xda
xchg edi eax
jae rwxdata
push 0xfffffffb
inc edx
0xf475f86e 0xe36a
cli
adc al 0x7
fidivr [ edi + ebx - 0x79 ]
sbb al 0x87
xchg edx eax
adc al [ ss : edi - 0x798928e4 ]
jbe rwxdata
sbb al 0x87
sbb eax 0x1cf115fa
fstp [ ebx ]
sbb eax 0x871c87e1
pushfd
inc ebp
adc eax 0x1d871c92
cli
adc ebx ebp
sbb ebx [ 0xffffffff871c9216 ]
pushfd
inc ebp
out 0x88 al
sbb al 0x87
sbb eax 0x921203fa
inc edx
adc al 0x87
sbb al 0xd7
jbe rwxdata
0x8284428c 0x987
xchg [ edi + eax ] ebx
fidivr [ edi + 0x1f ]
xchg [ esi + eax * 4 ] ebx
popad
mov bh 0xa4
xchg [ edi + eax * 4 ] bl
sbb al 0x7
fidivr [ edi + ebx - 0x79 ]
sbb al 0x87
0xad45899b 0x1c8d
xchg [ ebx + 0x12 ] eax
fidivr [ ecx ]
adc [ edi + 0x1d1bdc1c ] eax
leave
xchg [ edi + eax * 4 ] ebx
inc edx
test [ edx + 0x1c870995 ] ah
int1
sbb al 0xf1
sbb al 0x84
inc edx
scasb [ edi ]
pushfd
inc ebp
adc al 0x92
sbb al 0x87
sbb eax 0xda0733fa
jle rwxdata
in eax dx
xchg [ esi + eax * 4 ] ebx
popad
pushfd
mov [ 0xffffffff871c8fdd ] ecx
dec esp
int1
sbb al 0xdd
sbb edi [ 0xffffffff871c87e5 ]
jbe rwxdata
adc [ ecx - 0x71 ] ah
je rwxdata
or eax [ edi + 0x4289dd1c ]
mov [ edi + 0x1b ] dh
test [ ebx - 0x7c ] al
sub [ esi ] 0x1c
xchg [ esp + ecx * 2 ] ebx
xchg ecx eax
add ebp esp
test [ ebx ] bl
xchg [ edi + eax * 4 ] ebx
sbb al 0x8
xchg ecx eax
add ebp esp
test [ ebx ] bl
xchg [ ebx ] bl
cmp bl [ eax - 0xb7be489 ]
xchg edx eax
sbb al 0x87
sbb al 0xea
imul [ fs : eax - 0xc ]
outsb
0xff71b56e 0x8771
pop ss
inc edi
pushad
xchg ecx eax
mov [ ebp - 0x52 ] eax
mov bl [ edi + eax * 4 ]
inc ebx
test [ edx - 0x2a ] al
pushfd
inc ebp
loop rwxdata
sbb eax 0x871c87c9
jbe rwxdata
xchg [ edi + eax * 4 ] ebx
xchg [ edi + eax * 4 ] ebx
aad 0x49
adc [ edi - 0x798b6df0 ] al
inc ecx
adc al ch
push es
rol [ ebx ] 0x1
in al dx
test [ ebx ] bl
sbb ebx ebp
xor eax 0xed1d1bdd
sub_4025e5
sbb al 0x94
sbb al 0xf1
sbb al 0xdc
dec ebp
test [ edx - 0x46 ] al
je rwxdata
inc ecx
adc al ch
or al dl
adc [ edi + 0x1bef14fa ] 0xffffff87
sbb al 0x87
mov [ ebp + 0xf ] eax
sbb al 0x87
sbb al 0x12
xchg edx eax
sbb al 0x87
inc ebx
test [ edx + 0x1c871c32 ] al
outsd
sub al [ edi - 0x2bb078e4 ]
push edx
fild [ ebx - 0x3a ]
dec esi
0xd278
mov [ 0xffffffff871c950e ] ecx
dec esp
test [ ecx - 0x7d ] ah
sbb ebx ebp
pop ecx
test [ ecx - 0x7d ] ah
sbb ebx ebp
sub eax 0x1c8bde4e
pop edx
sbb al 0x4a
sbb al 0xda
xchg edi eax
jae rwxdata
push 0xfffffffb
inc edx
0xf475f86e 0xe36a
cli
adc al 0x7
fidivr [ edi + ebx - 0x79 ]
sbb al 0x87
xchg edx eax
adc al [ ss : edi - 0x798928e4 ]
jbe rwxdata
sbb al 0x87
sbb eax 0x1cf115fa
fstp [ ebx ]
sbb eax 0x871c87e1
pushfd
inc ebp
adc eax 0x1d871c92
cli
adc ebx ebp
sbb ebx [ 0xffffffff871c9216 ]
pushfd
inc ebp
out 0x88 al
sbb al 0x87
sbb eax 0x921203fa
inc edx
adc al 0x87
sbb al 0xd7
jbe rwxdata
0x8284428c 0x987
xchg [ edi + eax ] ebx
fidivr [ edi + 0x1f ]
xchg [ esi + eax * 4 ] ebx
popad
mov bh 0xa4
xchg [ edi + eax * 4 ] bl
sbb al 0x7
fidivr [ edi + ebx - 0x79 ]
sbb al 0x87
0xad45899b 0x1c8d
xchg [ ebx + 0x12 ] eax
fidivr [ ecx ]
adc [ edi + 0x1d1bdc1c ] eax
leave
xchg [ edi + eax * 4 ] ebx
inc edx
test [ edx + 0x1c870995 ] ah
int1
sbb al 0xf1
sbb al 0x84
inc edx
scasb [ edi ]
pushfd
inc ebp
adc al 0x92
sbb al 0x87
sbb eax 0xda0733fa
jle rwxdata
in eax dx
xchg [ esi + eax * 4 ] ebx
popad
pushfd
mov [ 0xffffffff871c8fdd ] ecx
dec esp
int1
sbb al 0xdd
sbb edi [ 0xffffffff871c87e5 ]
jbe rwxdata
adc [ ecx - 0x71 ] ah
je rwxdata
or eax [ edi + 0x4289dd1c ]
mov [ edi + 0x1b ] dh
test [ ebx - 0x7c ] al
sub [ esi ] 0x1c
xchg [ esp + ecx * 2 ] ebx
xchg ecx eax
add ebp esp
test [ ebx ] bl
xchg [ edi + eax * 4 ] ebx
sbb al 0x8
xchg ecx eax
add ebp esp
test [ ebx ] bl
xchg [ ebx ] bl
cmp bl [ eax - 0xb7be489 ]
xchg edx eax
sbb al 0x87
sbb al 0xea
imul [ fs : eax - 0xc ]
outsb
0xff71b56e 0x8771
pop ss
inc edi
pushad
xchg ecx eax
mov [ ebp - 0x52 ] eax
mov bl [ edi + eax * 4 ]
inc ebx
test [ edx - 0x2a ] al
pushfd
inc ebp
loop rwxdata
sbb eax 0x871c87c9
jbe rwxdata
xchg [ edi + eax * 4 ] ebx
xchg [ edi + eax * 4 ] ebx
aad 0x49
adc [ edi - 0x798b6df0 ] al
inc ecx
adc al ch
push es
rol [ ebx ] 0x1
in al dx
test [ ebx ] bl
sbb ebx ebp
xor eax 0xed1d1bdd
sub_402add
push ds
xchg [ eax - 0x70 ] esp
or edi [ ecx * 2 - 0x60b6e077 ]
inc esi
adc [ eax - 0xc ] dh
or dl bl
jge rwxdata
fstp [ ebx ]
sbb eax 0x871c87cd
xchg ebp eax
or al 0xe2
xchg ecx eax
sbb al 0x87
xchg [ edi + eax * 4 ] ebx
pushad
movsd [ edi ] [ esi ]
sbb edi [ 0xffffffff871c91e2 ]
je rwxdata
xchg [ ecx ] edx
xchg bl ch
xchg [ 0x9877286 ] edx
xchg [ edi - 0x79 ] dh
or eax 0x1861c86
xchg [ edx ] bh
xchg [ 0x39873a86 ] eax
xchg [ edi + eax * 4 ] bl
inc ebp
xchg esp eax
mov [ 0x268b9596 ] eax
in eax dx
lahf
dec esp
test [ ebx + 0x1c871c5e ] ah
int1
sbb al 0xf1
sbb al 0x84
mov eax [ 0x1b84ebaf ]
test [ edx + 0x1c871c4e ] al
xlat
sbb edi [ edx ]
xor al 0x74
sbb eax [ ebx + ebx + 0x1c87bd1d ]
xchg [ ebx + edi * 2 + 0x1d ] esi
xchg [ esp + eax * 4 ] ebx
sub [ edx ] 0x1c
xchg [ edi + ebx * 8 ] ebx
lahf
jg rwxdata
xchg [ ebx ] ebx
cmp dh [ esp + esi * 2 ]
sbb eax 0xa1841c87
scasd [ edi ]
jmp rwxdata
adc bl dl
adc al [ ss : edi - 0x78e410e4 ]
xchg esp eax
nop
int1
sbb al [ ebx + ebx + 0x47e446de ]
in eax 0xd5
dec ecx
adc [ edi - 0x76e96de4 ] al
inc ecx
adc al ch
or al dl
ja rwxdata
sbb eax [ edx + eax * 2 + 0x1c568284 ]
xchg [ edi + ebp * 2 ] ebx
and [ edi - 0x783a78e4 ] al
dec ebp
mov dh ch
xchg [ edi - 0x79 ] edx
int1
xchg [ ecx - 0x9780679 ] edi
xchg [ ecx ] ebx
xchg [ esi - 0x1779e27a ] eax
or edx [ edx + 0x3a1b871c ]
xor al 0x74
mov [ edi - 0x29e47b15 ] esp
jbe rwxdata
sbb al 0x12
sbb al 0x87
sbb eax 0x60ef13fa
or [ eax ] esi
test edi esi
mov dh [ ebp + edx * 2 - 0xd ]
rol [ ebp - 0x7c ] 0xa2
inc eax
push ss
xchg [ esp + eax * 4 ] ebx
mov [ 0x1c871c66 ] al
test [ edx + 0x1c871c62 ] al
out dx eax
sbb eax [ edi - 0x7bbc78e4 ]
int3
inc ebx
out dx eax
pushad
xchg esp eax
sbb al 0x87
sbb edi [ edx ]
xor al 0x74
sbb eax [ edx + eax * 2 + 0x1c568284 ]
xchg [ edx + edx ] ebx
sbb al 0x87
inc ebx
test [ edx + 0x1c871c32 ] al
pop es
fidiv [ esp + edx ]
xchg [ esi + eax * 4 ] ebx
popad
mov dh 0x9c
inc ebp
jecxz rwxdata
cli
adc al 0x12
fidiv [ esi ]
adc al [ edi - 0x78e410e4 ]
sub_402b05
sbb ebx ebp
sbb ebx [ 0xffffffff871c87cd ]
xchg ebp eax
or al 0xe2
xchg ecx eax
sbb al 0x87
xchg [ ecx ] edx
xchg bl ch
xchg [ 0x9877286 ] edx
xchg [ edi - 0x79 ] dh
or eax 0x1861c86
xchg [ edx ] bh
xchg [ 0x39873a86 ] eax
xchg [ edi + eax * 4 ] bl
inc ebp
xchg esp eax
mov [ 0x268b9596 ] eax
in eax dx
lahf
dec esp
test [ ebx + 0x1c871c5e ] ah
int1
sbb al 0xf1
sbb al 0x84
mov eax [ 0x1b84ebaf ]
test [ edx + 0x1c871c4e ] al
xlat
sbb edi [ edx ]
xor al 0x74
sbb eax [ ebx + ebx + 0x1c87bd1d ]
xchg [ ebx + edi * 2 + 0x1d ] esi
xchg [ esp + eax * 4 ] ebx
sub [ edx ] 0x1c
xchg [ edi + ebx * 8 ] ebx
lahf
jg rwxdata
adc bl dl
adc al [ ss : edi - 0x78e410e4 ]
xchg esp eax
nop
int1
sbb al [ ebx + ebx + 0x47e446de ]
in eax 0xd5
dec ecx
adc [ edi - 0x76e96de4 ] al
inc ecx
adc al ch
or al dl
ja rwxdata
mov [ edi - 0x29e47b15 ] esp
jbe rwxdata
sbb al 0x12
sbb al 0x87
sbb eax 0x60ef13fa
or [ eax ] esi
test edi esi
mov dh [ ebp + edx * 2 - 0xd ]
rol [ ebp - 0x7c ] 0xa2
inc eax
push ss
xchg [ esp + eax * 4 ] ebx
mov [ 0x1c871c66 ] al
test [ edx + 0x1c871c62 ] al
out dx eax
sbb eax [ edi - 0x7bbc78e4 ]
int3
inc ebx
out dx eax
pushad
xchg esp eax
sbb al 0x87
sbb edi [ edx ]
xor al 0x74
sbb eax [ edx + eax * 2 + 0x1c568284 ]
xchg [ edx + edx ] ebx
sbb al 0x87
inc ebx
test [ edx + 0x1c871c32 ] al
pop es
fidiv [ esp + edx ]
xchg [ esi + eax * 4 ] ebx
popad
mov dh 0x9c
inc ebp
jecxz rwxdata
cli
adc al 0x12
fidiv [ esi ]
adc al [ edi - 0x78e410e4 ]
sub_402d57
sbb al 0x87
sbb eax 0x990812fb
sbb [ 0xffffffffd3ed05fb ] 0xffffff8c
js rwxdata
cli
in al dx
xlat
inc ebx
test [ edx + 0x1c870883 ] al
fcomp [ ebx ]
sbb eax 0x871c87bd
jpo rwxdata
je rwxdata
sbb al 0xd7
jbe rwxdata
sbb ebx ebp
dec ebp
int1
sbb al 0xef
pushfd
xchg [ edi + eax * 4 ] ebx
inc eax
and al 0x23
inc eax
pop ecx
pop ecx
pop ecx
pop ecx
pop ecx
pop ecx
pop ecx
pop ecx
pop ecx
sbb eax 0x82841c87
sub bl [ edi + eax * 4 ]
sbb al 0x8
push ecx
sbb [ 0x1b85e56e ] 0xffffff84
aad 0x49
jo rwxdata
sbb ebx ebp
leave
xchg [ edi + eax * 4 ] ebx
jbe rwxdata
add [ eax ] al
add [ eax ] al
add dl dl
inc eax
inc eax
add [ eax ] ah
inc eax
add [ ecx ] dl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ esi - 0x1f ] al
add [ eax ] al
inc esi
loope rwxdata
pop ecx
pop ecx
pop ecx
pop ecx
pop ecx
pop ecx
pop ecx
pop ecx
pop ecx
pop ecx
pop ecx
pop ecx
pop ecx
pop ecx
jo rwxdata
pop ss
dec ebp
adc bl dl
adc al [ ss : edi + 0x1d1bdc1c ]
popfd
xchg [ edi + eax * 4 ] ebx
inc ebx
adc dl [ edx + 0x1c871139 ]
xlat
sbb ebx [ 0xffffffff871c87c9 ]
in eax dx
xchg [ edi + eax * 4 ] ebx
pop ebp
imul [ ebx + ecx * 8 + 0x7d ]
sti
jge rwxdata
je rwxdata
inc edi
popad
xchg [ edi ] edx
jbe rwxdata
add [ eax + eax ] cl
add [ eax ] al
add [ esi ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ecx
pop ecx
imul esi [ ebp + 0x79 ] 0x6e756a68
jne rwxdata
xchg [ ebx - 0x7c ] eax
int3
sbb edi edx
in al 0x84
inc edx
mov esi 0x84e4fa1b
inc edx
mov dh 0x9f
dec esp
sbb eax 0x61875b07
jg rwxdata
int1
sbb eax 0x1c871cef
pop es
sbb al 0x87
sbb al 0xf1
lea edi [ ebx + 0x6e ]
mov [ edi - 0x352c78e4 ] 0xe0
xchg [ edi + eax * 4 ] ebx
sbb al 0xdc
jbe rwxdata
je rwxdata
pop ecx
pop ecx
ja rwxdata
hlt
add al 0x1b
jecxz rwxdata
cmp eax 0x767b510e
xchg [ ecx + 0x1bd6e4d2 ] ecx
sti
imul ebx [ esi + esi * 2 ] 0xffffff87
inc ebx
sbb al 0x87
pop esp
fcomp [ ebx ]
fld [ ebp + 0x8 ]
in al 0x84
pushad
mov eax [ 0x121cf183 ]
push ecx
jg rwxdata
pop ecx
pop ecx
pop ecx
pop ecx
and [ cs : esi ] ebp
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo rwxdata
add [ eax ] al
add [ esi ] ch
and al 0x21
and [ ecx ] esp
and [ esi ] ebp
sub ch [ cs : edx ]
sub ch [ edx ]
sub ch [ edx ]
sub ch [ edx ]
sub ch [ edx ]
sub ch [ edx ]
sub ch [ edx ]
sub ch [ edx ]
imul ebp [ cs : ecx + 0x6c ] 0x6c
rwxdata
mov [ 0xffffffff871c8aae ] edx
dec ebp
test [ edx - 0x22 ] al
lahf
jg rwxdata
sbb al 0x87
sbb al 0x7
mov [ edi - 0x25f8e28c ] bl
cdq
or [ edi - 0x739e79e4 ] eax
jb rwxdata
in al 0x91
inc edi
pushad
scasd [ edi ]
pushfd
inc ebp
stosd [ edi ]
adc [ edi + 0x871c ] al
add [ edi ] dl
imul esi eax 0x6b6c6d00
push 0x68
jae rwxdata
or [ ecx - 0x7d ] dl
sbb eax 0x1b85e56e
test ch dl
dec ecx
test [ ecx + 0x77 ] ah
sbb edi edx
loopne rwxdata
add [ eax + 0x31004031 ] dl
xor al [ eax ]
xor al 0x32
inc eax
add [ ecx ] dh
xor al [ eax ]
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ esi ] cl
inc eax
imul esi [ ebx + 0x2e ] 0x65646f63
add [ cs : esi ] ah
jbe rwxdata
pop ds
int1
sbb al 0xf1
ror [ eax + edi * 2 - 0x6ab8d079 ] cl
0xdc18
adc eax ecx
sbb al 0x70
adc ebp ebp
jbe rwxdata
sbb al 0x87
sbb ebx ebp
jne rwxdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
bound esp [ edi + 0x66 ]
sub ah [ ebx ]
sbb ebx [ 0xffffffff871c87bd ]
das
inc edi
dec esp
or [ ecx + 0x9fb1c7b ] bl
out dx eax
sbb al 0x7
sbb al 0x87
jbe rwxdata
test [ edx + 0x1c87087f ] al
push cs
sbb edi edx
loopne rwxdata
push ecx
ja rwxdata
cmp [ edi + 0x8 ] 0x87
sbb al 0xe
inc edx
stosb [ edi ]
inc esp
sub_4031db
mov eax sub_403a68
call sub_403850
sub esp 0x64
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_1134
pop ecx
mov ecx esi
call Ordinal_MFC42_2621
push 0x0
lea ecx [ ebp - 0x70 ]
call sub_403275
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x70 ]
lea ecx [ ebp - 0x70 ]
mov [ esi + 0x20 ] eax
call Ordinal_MFC42_2514
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call Ordinal_MFC42_641
mov ecx [ ebp - 0xc ]
xor eax eax
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_403275
mov eax sub_403a7c
call sub_403850
push ecx
push esi
mov esi ecx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esi
push 0x66
call Ordinal_MFC42_324
and [ ebp - 0x4 ] 0x0
mov [ esi ] rwxdata
call Ordinal_MFC42_1168
mov eax 0x80
push eax
push 0xe
push eax
call Ordinal_MFC42_1146
push eax
call [ LoadIconA@IAT ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x60 ] eax
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_4032d4
mov eax sub_403a90
call sub_403850
sub esp 0x108
push ebx
push esi
push edi
mov esi ecx
call Ordinal_MFC42_4710
xor edi edi
push edi
push [ esi + 0x20 ]
call [ GetSystemMenu@IAT ]
push eax
call Ordinal_MFC42_2863
mov ebx eax
cmp ebx edi
je rwxdata
push [ esi + 0x60 ]
mov ebx [ SendMessageA@IAT ]
mov edi 0x80
push 0x1
push edi
push [ esi + 0x20 ]
call ebx
push [ esi + 0x60 ]
push 0x0
push edi
push [ esi + 0x20 ]
call ebx
push edi
push 0x8
push 0x8
push 0x1
push 0x1
mov ecx esi
push [ Ordinal_MFC42_6379@IAT ]
call Ordinal_MFC42_6197
and [ ebp - 0x114 ] 0x0
push 0x40
pop ecx
xor eax eax
lea edi [ ebp - 0x113 ]
push rwxdata
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x114 ]
push eax
call [ sprintf@IAT ]
pop ecx
pop ecx
mov ecx esi
call sub_4034ee
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
lea ecx [ ebp - 0x10 ]
call Ordinal_MFC42_540
push 0x65
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edi
call Ordinal_MFC42_4160
mov eax [ ebp - 0x10 ]
cmp [ eax - 0x8 ] edi
je rwxdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call Ordinal_MFC42_800
push edi
push edi
mov edi [ AppendMenuA@IAT ]
push 0x800
push [ ebx + 0x4 ]
call edi
push [ ebp - 0x10 ]
push 0x10
push 0x0
push [ ebx + 0x4 ]
call edi
sub_4033c8
mov eax sub_403aa4
call sub_403850
sub esp 0x60
mov eax [ ebp + 0x8 ]
and eax 0xfff0
cmp eax 0x10
jne rwxdata
call Ordinal_MFC42_2379
lea ecx [ ebp - 0x6c ]
call sub_403235
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call Ordinal_MFC42_2514
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x6c ]
call Ordinal_MFC42_641
jmp rwxdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_403417
push ebp
mov ebp esp
sub esp 0x168
push esi
mov esi ecx
push edi
push [ esi + 0x20 ]
call [ IsIconic@IAT ]
test eax eax
je rwxdata
mov ecx esi
call Ordinal_MFC42_2379
push ebx
push esi
lea ecx [ ebp - 0x64 ]
call Ordinal_MFC42_470
lea eax [ ebp - 0x64 ]
push 0x0
neg eax
sbb eax eax
and eax [ ebp - 0x60 ]
push eax
push 0x27
push [ esi + 0x20 ]
call [ SendMessageA@IAT ]
mov edi [ GetSystemMetrics@IAT ]
push 0xb
call edi
push 0xc
mov ebx eax
call edi
mov edi eax
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x20 ]
call [ GetClientRect@IAT ]
mov eax [ ebp - 0x4 ]
push [ esi + 0x60 ]
sub eax [ ebp - 0xc ]
sub eax edi
inc eax
cdq
sub eax edx
sar eax 0x1
push eax
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
sub eax ebx
inc eax
cdq
sub eax edx
sar eax 0x1
push eax
push [ ebp - 0x60 ]
call [ DrawIcon@IAT ]
lea ecx [ ebp - 0x64 ]
call Ordinal_MFC42_755
pop ebx
jmp rwxdata
and [ ebp - 0x168 ] 0x0
push 0x40
pop ecx
xor eax eax
lea edi [ ebp - 0x167 ]
push rwxdata
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x168 ]
push eax
call [ sprintf@IAT ]
pop ecx
pop ecx
pop edi
pop esi
leave
retn
sub_4034ff
push esi
push edi
xor eax eax
mov ecx 0x1b71
mov dl [ eax + rwxdata ]
xor dl [ rwxdata ]
inc eax
cmp eax ecx
mov [ eax + rwxdata ] dl
jbe rwxdata
xor esi esi
mov dl [ esi + rwxdata ]
lea eax [ esi + rwxdata ]
inc esi
not dl
cmp esi ecx
mov [ eax ] dl
jbe rwxdata
push 0x1
xor esi esi
pop edi
sub edi rwxdata
lea eax [ esi + rwxdata ]
lea edx [ edi + eax ]
cmp edx ecx
ja rwxdata
mov dl [ esi + rwxdata ]
lea eax [ esi + rwxdata ]
xor dl [ rwxdata ]
sub dl 0x6
mov [ eax ] dl
inc esi
inc esi
cmp esi 0x36e2
jle rwxdata
mov dl [ rwxdata ]
xor dl [ eax + 0x1 ]
sub dl 0x4
mov [ eax + 0x1 ] dl
cmp esi ecx
ja rwxdata
xor eax eax
lea eax [ rwxdata ]
add eax 0x25
mov ecx eax
call ecx
push 0x0
call [ exit@IAT ]
_start
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rwxdata ] 0xffffffff
or [ rwxdata ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rwxdata ] eax
call sub_4039f5
cmp [ rwxdata ] ebx
jne rwxdata
call sub_4039e0
push rwxdata
push rwxdata
call _initterm
mov eax [ rwxdata ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rwxdata ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rwxdata
push rwxdata
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne rwxdata
push sub_4039f2
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je rwxdata
mov al [ esi ]
cmp al bl
je rwxdata
inc esi
mov [ ebp - 0x74 ] esi
jmp rwxdata
cmp [ esi ] 0x22
jne rwxdata
cmp al 0x22
jne rwxdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je rwxdata
cmp al 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp rwxdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_403a02
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_403a1a
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne rwxdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_4024da
cmc
outsd
mov ch 0x69
hlt
sub_4025a1
outsb
hlt
sub_40272b
inc edx
test [ edx + 0x1c871c4a ] al
nop
fdiv st2
add ebp edi
hlt
sub_402bff
push 0xffffffe3
push ecx
[ ebx + esi * 8 + 0x6b ]
sub_40317c
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_403190
push esi
mov esi ecx
call sub_4031ac
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_4031ac
jmp Ordinal_MFC42_815
sub_4031b1
call sub_4031bb
jmp sub_4031c5
sub_4031bb
mov ecx rwxdata
jmp sub_40317c
sub_4031c5
push sub_4031d1
call sub_403836
pop ecx
retn
sub_4031d1
mov ecx rwxdata
jmp sub_4031ac
sub_403231
retn 0x4
sub_403234
retn
sub_403235
push esi
push 0x0
mov esi ecx
push 0x64
call Ordinal_MFC42_324
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_40324b
push esi
mov esi ecx
call sub_403267
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_403267
jmp Ordinal_MFC42_641
sub_40326c
retn 0x4
sub_40326f
mov eax rwxdata
retn
sub_4032c8
mov eax [ Ordinal_MFC42_4234@IAT ]
retn
sub_4032ce
mov eax rwxdata
retn
sub_4034dd
mov eax [ ecx + 0x60 ]
retn
sub_4034e1
call sub_4034ff
sub_4034ee
push 0x3e9
call Ordinal_MFC42_3092
mov ecx eax
jmp Ordinal_MFC42_5981
sub_403599
push ebp
mov ebp esp
sub esp 0x104
push esi
push edi
mov esi ecx
call Ordinal_MFC42_2379
mov ecx esi
call sub_4034ff
sub_4035f3
push 0x1
push [ ecx + 0x20 ]
call [ EnableWindow@IAT ]
retn
Ordinal_MFC42_4673
jmp [ Ordinal_MFC42_4673@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_4853
jmp [ Ordinal_MFC42_4853@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_1146
jmp [ Ordinal_MFC42_1146@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
Ordinal_MFC42_6197
jmp [ Ordinal_MFC42_6197@IAT ]
Ordinal_MFC42_800
jmp [ Ordinal_MFC42_800@IAT ]
Ordinal_MFC42_4160
jmp [ Ordinal_MFC42_4160@IAT ]
Ordinal_MFC42_540
jmp [ Ordinal_MFC42_540@IAT ]
Ordinal_MFC42_2863
jmp [ Ordinal_MFC42_2863@IAT ]
Ordinal_MFC42_2379
jmp [ Ordinal_MFC42_2379@IAT ]
Ordinal_MFC42_755
jmp [ Ordinal_MFC42_755@IAT ]
Ordinal_MFC42_470
jmp [ Ordinal_MFC42_470@IAT ]
Ordinal_MFC42_5981
jmp [ Ordinal_MFC42_5981@IAT ]
Ordinal_MFC42_3092
jmp [ Ordinal_MFC42_3092@IAT ]
sub_40380a
cmp [ rwxdata ] 0xffffffff
jne rwxdata
push rwxdata
push rwxdata
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_403836
push [ esp + 0x4 ]
call sub_40380a
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
sub_403850
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_4039c1
mov esp [ ebp - 0x18 ]
push [ ebp - 0x78 ]
call [ _exit@IAT ]
int3
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_4039e0
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_4039f2
xor eax eax
retn
sub_4039f5
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_403a02
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_403a48
jmp sub_403a48
sub_403a48
push 0x600
push 0x0
call sub_403a1a
mov [ rwxdata ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
sub_403a60
lea ecx [ ebp - 0x70 ]
jmp sub_403267
sub_403a68
mov eax rwxdata
jmp __CxxFrameHandler
sub_403a74
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_641
sub_403a7c
mov eax rwxdata
jmp __CxxFrameHandler
sub_403a88
lea ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_800
sub_403a90
mov eax rwxdata
jmp __CxxFrameHandler
sub_403a9c
lea ecx [ ebp - 0x6c ]
jmp sub_403267
sub_403aa4
mov eax rwxdata
jmp __CxxFrameHandler
sub_403ad3
jmp [ eax + 0x3a ]
