sub_100b1331
mov al [ esp ]
push 0x1ab0dca0
pushfd
mov al 0x10
call sub_1012b455
movsb [ edi ] [ esi ]
jpe rwxdata
inc esp
dec esp
dec esp
add [ edx - 0x5f97dbfc ] cl
fdiv [ eax + 0x10b09c1a ]
jpe rwxdata
and [ edi + edx * 8 - 0x3 ] dh
mov eax [ 0x5043cf7 ]
leave
or [ edx + ebp * 4 - 0x5502058a ] 0x33ab8de2
stosb [ edi ]
pop esi
xor [ edx - 0x6befd336 ] ch
push cs
hlt
jpe rwxdata
xor al 0x24
fbstp [ eax + 0x51d4d5a ]
pop ecx
shr [ eax + eax * 2 + 0x1a ] 0x1
jmp rwxdata
movsx bp al
mov ebp [ esp + 0x8 ]
pushad
push [ esp + 0x2c ]
retn 0x38
pop esi
movzx bp bl
push 0xc093e7a
push [ esp ]
sub_100b15eb
mov eax ebp
or bl cl
lea esp [ esp + 0x8 ]
je rwxdata
stc
adc bl ah
and bl ch
mov bl 0x1
pushad
cmp dx cx
cmp al bh
mov [ esp + 0x1c ] esi
rol si cl
pushfd
mov esi edi
mov [ esp ] 0xcf
push edi
push 0x7bb1fe22
clc
sub esi eax
pushfd
[ edi ] [ esi ]
pushfd
mov esi [ esp + 0x30 ]
push eax
lea esp [ esp + 0x38 ]
jmp rwxdata
shl bl 0x4
cmc
mov bl 0x1
push ebp
pushad
call sub_1014aa0b
int1
mov ch 0x19
dec ecx
jpe rwxdata
jge rwxdata
stosb [ edi ]
mov edx 0x54db754f
mov eax 0x327664e0
or [ 0xffffffff85c0826f ] bh
adc ah al
sahf
mov esp [ edi ]
sbb [ edx - 0x76cab67b ] bh
jecxz rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
sub [ esp + ecx * 4 + 0x49 ] 0xffffffe3
mov ah 0x3e
push cs
imul edx [ eax + eax * 2 + 0x42603912 ] 0x28
mov ah 0x9d
push edx
push ds
mov bl [ esi - 0x788e87a1 ]
outsb
sbb dh ah
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
sub_100b18e4
pushad
mov [ esp + 0xc ] cl
lea esp [ esp + 0x28 ]
jne rwxdata
jmp sub_10120201
pushfd
push edx
mov [ edi - 0x1 ] 0x0
bswap eax
pushfd
not al
movsx eax dl
mov [ esp + 0x8 ] ebx
cwde
lea eax [ rwxdata ]
pushfd
jmp rwxdata
call sub_1012a84f
cmp ebx edx
sbb al bh
enter 0x689e 0x20
clc
mov [ edx - 0x2406d65f ] 0xbb
mov [ esi - 0x58 ] esp
xchg ebx eax
push ecx
inc edi
adc edx esi
test al 0xd3
fld [ ebx - 0x3d ]
xchg edx eax
pop ecx
outsd
or esi ecx
0x4ec2afef 0xe0e6
lodsb [ esi ]
add [ ebx - 0x6723ee01 ] 0x7c
or al 0x24
cmpsd [ esi ] [ edi ]
int 0xac
jno rwxdata
sahf
push 0x75cc68fa
int 0xf1
movsd [ edi ] [ esi ]
jg rwxdata
inc edx
xchg ebp eax
push ecx
cmp [ edx ] esp
mov esi 0xe8226f53
adc al 0xfa
add al [ eax ]
and eax 0x7665bd93
stosb [ edi ]
sub bl cl
fbld [ ebx + 0xd ]
or dh bl
mov cl ah
mov cl 0xc
sbb [ 0xffffffffd22d8fc9 ] cl
dec esi
in al dx
push edi
and [ 0x7665bd93 ] 0xdfcb28aa
arpl [ 0xffffffffe188de08 ] cx
add al [ edx + 0x7ed23e14 ]
fdivr [ edx ]
inc edx
adc bh ch
or [ edx ] eax
xchg esp eax
out 0x9b al
push esp
mov eax 0x99095004
jae rwxdata
pop gs
popad
cmp [ esi ] edi
pop esp
jae rwxdata
sub eax 0x57ec4ed2
test [ esi + 0x6a ] esp
hlt
call 0xfffffffffb7884ef
mov ebx 0x389415f5
jbe rwxdata
push eax
or [ ecx - 0x5b19048d ] ebx
cmp [ bx + si + 0x24a ] ch
sub eax 0xd3399191
out 0xa4 al
sub_100b1e87
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
call sub_100b356a
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
call sub_10129242
pushad
jmp rwxdata
lea esp [ esp + 0x20 ]
jne rwxdata
jmp rwxdata
call sub_1012cb53
aaa
xlat
sti
out 0x75 al
int 0x7
imul esi [ 0x2b9db428 ] 0x4040a7e9
inc ebx
leave
fsubr [ ecx - 0x7642c1 ]
mov ch 0x1d
mov ebx 0xfeca1543
call 0x67c7ee65
jge rwxdata
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
push 0xffffffa1
cmp edx [ esi - 0x2fff9be ]
xor eax edx
or [ ebx + 0x7b ] 0x4b
sbb dl dh
call 0x304afaca
cld
mov eax 0x43557f84
adc eax 0x2462a0f6
in al dx
les esi [ ebx ]
jmp 0xffffffffc57152d7
aaa
ficomp [ esi ]
pop edi
push es
ror ebp 0xdb
pushad
leave
jg rwxdata
mov edx 0x9e81d5aa
jpe rwxdata
scasd [ edi ]
and esi [ eax - 0x809d945 ]
aas
in al dx
sbb al 0xeb
fldenv [ eax - 0x5a4c66a ]
or al 0xdb
sti
jae rwxdata
inc eax
xor dl cl
sub [ ebx - 0x4d ] 0xffffffc8
push eax
[ edi ] [ esi ]
push ecx
xor [ eax ] esi
jbe rwxdata
mov cl 0x5f
iretd

sub_100b1ef7
pushfd
test bl dh
sub al 0x30
push [ esp ]
call sub_101240fd
jpo rwxdata
lea ebp [ esi - 0x50 ]
or al dh
pop ecx
pop es
mul [ edx - 0x2707d79a ]
fistp [ ecx + 0x3b ]
or esp ecx
movsd [ edi ] [ esi ]
outsd
push ebx
in eax dx
sti
cmp [ eax ] esi
cmp [ ecx - 0x6234f9fb ] bl
xchg [ ebx - 0x80 ] ecx
out dx al
push 0x9aa231d
mov bh [ edx - 0x5f9fb95 ]
scasb [ edi ]
int1
scasb [ edi ]
jbe rwxdata
mov bl 0xaf
pop ebx
jpe rwxdata
pop edi
or ebx ebx
mov eax [ 0xffffffffe3c35127 ]
pushad
mov al 0x98
mov ah 0x32
pop esp
or [ ebx - 0x66 ] eax
inc ecx
into
dec esi
or [ eax ] ch
jg rwxdata
mov dl [ edx - 0x7663eff1 ]
inc esp
and al 0x28
push esp
push [ esp + 0x2c ]
retn 0x30
push ebx
mov ch 0x9
insb
cmp ch bh
dec edi
sub ch bh
mov bl 0xb0
inc eax
std
adc eax 0x3bc62e34
sub dh ch
or ebx eax
idiv edx
iretd
shl [ edi - 0x74 ] 0x1
pop ebp
fsubp st6
cmpsd [ esi ] [ edi ]
add [ eax ] 0x33
scasd [ edi ]
inc esp
dec esp
add [ ecx + 0x53 ] eax
pop ebp
add eax 0xfdcd7a5c
pop edi
cmp edi ebp
fld [ eax - 0x3d1ace88 ]
sub [ ebx + 0x21 ] 0xf
stc
mov edx 0x5064674
cmp al 0xdb
daa
xor [ eax + 0x43 ] 0xc9
out dx al
jbe rwxdata
in eax 0x5f
sbb bh [ ebx + ebx * 8 ]
or [ eax ] ah
mov esp 0x255ce280
movsd [ edi ] [ esi ]
adc eax 0x9ff2d454
cmp bl [ esi + 0x1b ]
mov [ ecx - 0x2af0c076 ] 0xc2d1ee77
sti
sub [ ebx + 0x58 ] esi
mov dh 0xe3
mov bh 0x9a
mov dl 0x42
loope rwxdata
into
pop esi
cmp eax 0xfe731b51
mov ebx 0x58d9b961
loopne rwxdata
mov esi 0x2f4e880e
inc edi
pop edx
mov [ edi ] 0x43
add al 0xe9
stosd [ edi ]
loop rwxdata
fwait
mov cl 0x74
mov [ ecx ] bh
dec ebx
leave
mov ch 0x91
and al 0xd4
leave
and ecx [ bp + si - 0x5ad1 ]
loop rwxdata
0x1a49352a 0xbece
sub_100b2a4f
mov al 0x2e
pushfd
mov [ esp + 0xc ] di
lea esp [ esp + 0x2c ]
jmp rwxdata
stc
call sub_100b55db
mov esi 0x1b2c3696
jpe rwxdata
loopne rwxdata
sub eax 0x315fade1
sbb bl al
mov bh 0x65
sbb edi ebx
mov eax [ 0x101e447f ]
cli
dec [ ebx + edi * 4 ]
cmp bl 0xb3
ror al cl
sub ebx edi
shld di si 0xe
cmc
setl al
test dh 0xef
add ebx esp
rol al 0x4
rol al 0x5
mov edi ebx
cmp esp ebx
mov al 0x2e
sub_100b2a60
not al
add edi 0x1
rcr al 0x1
mov al [ edi ]
cmp dh 0xec
clc
test al al
pushfd
lea esp [ esp + 0xc ]
je rwxdata
cmc
xchg di cx
jmp sub_1012b1a6
test ah 0x3f
call sub_100b1ef7
fdiv [ eax ]
push 0xcd7a5156
inc esp
sub [ eax + 0x34 ] 0x6
ror al 0x9e
jpo rwxdata
adc ah [ eax - 0x531346cc ]
sti
fcmovnb st1
adc [ ebx + 0x7a82ea6b ] 0x4a
and dh bh
je rwxdata
push edx
adc al 0x67
or [ ebp + 0xc ] ebx
inc eax
and eax 0x280ade1
or al 0xec
insb
les edx [ edx ]
mov al [ 0xffffffffacecb934 ]
xor ebp [ eax + ebp * 4 ]
dec ecx
jne rwxdata
and eax 0x8987cbfd
dec ecx
loopne rwxdata
mov [ 0xffffffffca8dbdd5 ] al
outsd
sub eax 0x1bde6e56
aad 0xb4
fcomp [ edx - 0x13d8b0b8 ]
mov esp 0x81d5f022
push ebx
xor ecx [ ebx ]
je rwxdata
aad 0x81
mov [ 0x4486b4fa ] ebx
dec ecx
[ ebx ]
aam 0x6e
arpl [ esp + edx * 4 + 0x220e7949 ] bx
pop edi
mov ch 0x8e
sbb al 0x31
mov eax [ 0x7f532b8 ]
xlat
mov ah 0x1e
push edx
push esi
sbb dl bh
add ecx 0x77d35f6f
iretd
sbb edx esp
outsb
pop ss
sahf
dec edx
rwxdata
mov dh 0xb7
adc eax 0x5aef5977
push cs
aad 0xfd
retn
sub_100b31fd
mov [ esp ] 0xe3
lea esp [ esp + 0x28 ]
jae rwxdata
pushfd
lodsb [ esi ]
call sub_100fa2a5
fisubr [ eax + 0x72e3803e ]
int 0xd5
0x71b774c 0xc2d9
mov dh [ edx + 0x4e ]
xor [ eax ] bl
push ss
hlt
call sub_100b1caa
jae rwxdata
jle rwxdata
sub [ ebp + 0x49 ] edx
jpe rwxdata
xor [ ebx - 0x28d3f181 ] edx
lodsb [ esi ]
xchg ebx eax
pop ss
sbb eax [ ecx - 0x31fd9cbf ]

xor eax 0x492cacb9
mov [ esi + eax - 0x267b887f ] edx
js rwxdata
add [ esp + edx * 4 - 0x3ab6bd8e ] bh
0x8b82
dec edx
pop ecx
add [ ecx ] ecx
xlat
xchg ebp eax
rol [ eax - 0x451222f8 ] 0x1
pop edx
dec ebp
dec ebx
sub [ edx - 0x70 ] 0x5b
lahf
jmp 0xffffffffec1dd975
out 0x96 eax
xchg edx eax
and ebp [ ecx + 0xe7f9331 ]
sub al 0xd7
sub_100b329a
test al al
pushad
lea esp [ esp + 0x24 ]
je rwxdata
cmc
xchg di cx
jmp sub_1012b1a6
test ch 0x9f
test di 0x9017
stc
sub al 0x30
cmc
push esi
clc
cmp al 0x9
pushad
pushfd
mov [ esp ] 0x88
jmp rwxdata
lea esp [ esp + 0x28 ]
ja rwxdata
jmp sub_10120201
pushad
jmp rwxdata
bt bx 0x1
imul edx edx 0xa
add esp 0x20
jg rwxdata
pushad
pushfd
add edx eax
pushad
push edx
lea esp [ esp + 0x48 ]
jmp sub_1012ce3f
cmp eax esp
pushfd
add edx eax
mov [ esp ] 0xc3
lea esp [ esp + 0x4 ]
jmp sub_1012ce3f
sub_100b33b1
mov [ esp ] 0x5c
mov [ esp + 0x20 ] 0xa2fc8af0
push 0x78545a3
lea esp [ esp + 0x24 ]
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp ] edx
pushad
jmp rwxdata
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x3ff0c1f2
jmp rwxdata
push 0xd0d121af
call sub_1014bef5
sub_100b36da
mov [ esp ] bh
lea esp [ esp + 0x28 ]
jne rwxdata
jmp rwxdata
stc
add edi 0x58ee3dd4
mov edi [ edx + 0x24 ]
pushad
add edi eax
clc
movzx ecx [ edi + ecx * 2 ]
sub esp 0xffffffe0
jmp rwxdata
pushad
mov [ esp + 0x1c ] eax
mov [ esp + 0x8 ] bl
lodsb [ esi ]
jmp rwxdata
mov edi [ edx + 0x1c ]
clc
bt bx 0xc
cmc
add edi eax
cmp bh dh
mov edi [ edi + ecx * 4 ]
push 0xe299428b
push [ esp ]
mov [ esp ] 0xe5
cmc
test edi edi
push [ esp + 0x4 ]
push 0x8e8aca1c
lea esp [ esp + 0x10 ]
je rwxdata
call sub_10123594
lea esp [ esp + 0x2c ]
jne rwxdata
setb bl
xadd dx si
shld dx bp 0x1
sub eax eax
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
cmp al bh
cmp ah bl
add eax edi
stc
jmp rwxdata
and bx 0x2e45
cmc
ror bx cl
stc
mov bx [ esi ]
pushad
pushad
cmp ch 0xbb
shr ebx 0xc
bt dx 0xa
jmp rwxdata
bsr cx dx
mov ecx [ ebp - 0x4 ]
test cl bl
clc
cmp [ ebp + 0x14 ] ecx
jae rwxdata
stc
cmp eax edx
call sub_100b3755
call sub_100b3901
pushfd
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
pushad
push [ esp ]
lea esp [ esp + 0x24 ]
ja rwxdata
cmp dh dl
pushfd
stc
add ecx 0xffffffff
mov [ esp ] bh
mov [ esp ] esp
lea esp [ esp + 0x4 ]
je rwxdata
movzx ax al
push 0x1a94aa72
pushad
mov eax [ edx + 0x8 ]
pushad
push 0x283c0c2f
mov [ esp ] 0x6d
lea esp [ esp + 0x48 ]
jmp rwxdata
add ch bh
bswap cx
rcl ch cl
rcl ecx cl
mov ecx [ esi + 0x4 ]
cmc
call sub_100b4ed7
cdq
inc edi
sbb esp [ ebx + 0x5fcd728b ]
rol [ ebx + 0x305054b0 ] 0xe6
cmp bl [ ebp - 0x1ce7b1bb ]
mov ebp 0x1f354f6f
inc ebx
int 0xaf
xchg edi eax
popad
jbe rwxdata
pushad
lea esi [ ebp * 8 + 0xab1dd2c ]
pop esi
mov esi [ esp + 0x1c ]
jmp rwxdata
lea esi [ ebp * 2 - 0x297340da ]
xchg esi edi
not cx
jmp rwxdata
call sub_100b923c
call 0xffffffffbd62e139
jb rwxdata
bt cx 0x9
add edx 0x11c
push 0x50b21e9
pushad
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
clc
bt di 0x6
jmp rwxdata
int3
iretd
bswap bx
movsx di dl
mov edi [ esp + 0x20 ]
movsx ecx cl
movsx cx al
movzx cx cl
lea ebx [ ecx - 0x3933b805 ]
mov ebx [ esp + 0x24 ]
lea ecx [ esi * 4 - 0x3d9c2f27 ]
setl cl
mov ecx [ esp + 0x28 ]
push [ esp ]
mov esp ebp
jmp rwxdata
pop esi
pushad
jmp rwxdata
mov dl 0x14
out dx al
mov esi 0x15078198
out dx eax
fdivr [ edx + 0x65 ]
test ecx 0xf4209c81
dec eax
mov [ 0xffffffffde022c64 ] al
mov [ 0xffffffffd1fa586c ] al
adc edi [ ebx + 0x20 ]
cld
push ebx
fwait
cmpsb [ gs : esi ] [ edi ]
sub al 0x5b
in eax dx
0xabf33e15 0x1513
or ah dh
enter 0x1367 0xe9
mov dl 0xd4
mov ah 0x11
and [ esi - 0x7a ] ah
mov eax [ 0x51729ede ]
test [ esi - 0x64 ] esi
xlat
lea edx [ eax ]
int 0x81
insd
dec edi
out 0x36 eax
sub eax 0x3cb4b532
mov [ 0xffffffff9332df63 ] al
push esi
add eax 0x99d4c05d
push ebp
cmp [ ebp - 0x9 ] edi
fcmovnb st5
xchg [ eax - 0x6da466ac ] ecx
cmpsb [ esi ] [ edi ]
mov ebp 0x1be4da37
adc ebx [ esi ]
xchg esp eax
xchg ecx eax
or eax 0x6f498010
xor bl [ esi + 0x1f ]
das
int3
jmp rwxdata
or ebx ebx
push ebx
jmp sub_1012be49
bswap bp
pop ebp
pushad
push 0x7363c1ba
push [ esp + 0x24 ]
retn 0x38
pushfd
mov edi [ esp + 0x24 ]
mov bl 0x58
mov ebx [ esp + 0x28 ]
movsx ecx cl
setne ch
push 0x2cdddd60
mov ecx [ esp + 0x30 ]
mov [ esp ] 0x73
mov esp ebp
jmp rwxdata
xchg si di
push 0x4d14e99a
not di
movzx esi [ edx + 0x1a ]
push edx
pushad
not di
lea esi [ esi + edx + 0x1c ]
mov [ esp + 0x4 ] 0x7af695ad
lea edi [ eax + 0x29d54165 ]
mov edi [ ebp + 0x8 ]
jmp rwxdata
pushad
movsx bp bl
mov ebp [ esp + 0x20 ]
push eax
pushfd
mov [ esp + 0x4 ] ch
push [ esp + 0x2c ]
retn 0x40
lea esp [ esp + 0x28 ]
call sub_100f89c3
jmp rwxdata
jne rwxdata
sub_100b3755
jmp rwxdata
pushfd
push [ esp ]
lea esp [ esp + 0xc ]
jb rwxdata
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
pushfd
jmp rwxdata
call sub_1012ce60
sub_100b3901
stc
cmp ebx 0x1
push 0xd17548e5
lea esp [ esp + 0x48 ]
je rwxdata
shrd bx bp cl
rol bx 0x6
jmp rwxdata
push 0x1daeccc2
cmp ebx 0x2
jmp rwxdata
mov bx [ esi ]
clc
jmp rwxdata
lea esp [ esp + 0x4 ]
je rwxdata
test dx bx
and ebx 0xfff
jmp rwxdata
movsx bx bl
movzx bx cl
bts bx cx
mov bx [ esi ]
cmp ah 0xee
and ebx 0xfff
push ebp
call sub_100fd4fb
cmp ecx 0xd3652d73
sub edi 0x4
jmp sub_100b2496
pushad
mov [ esp + 0xc ] 0xaf
test dh 0xc8
cmp ebx 0x3
call sub_1012dcc4
shr eax 0x1
mov [ esp ] 0xeffa
jmp rwxdata
pushad
add [ ebx + edi ] ax
push 0x82b41ec7
pushfd
pushfd
mov [ esp + 0xc ] 0xf6
lea esp [ esp + 0x2c ]
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp ] dh
push esp
add esi 0x2
jmp sub_100b50b6
lea esp [ esp + 0x40 ]
je rwxdata
mov di di
pop ebx
not si
lea esi [ edi * 2 - 0x1b68efe ]
mov di 0x801a
pop edi
bswap bp
movsx bp bl
pop esi
movzx bp bl
push 0xc093e7a
push [ esp ]
movsx bp al
mov ebp [ esp + 0x8 ]
pushad
push [ esp + 0x2c ]
retn 0x38
push edi
adc ecx ecx
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
pushad
inc bl
inc ecx
lea esp [ esp + 0x20 ]
jge rwxdata
push 0xdc12a5dc
inc bl
pushfd
not bl
inc ecx
sbb bl ch
pushfd
test cl dh
rcl bl cl
xchg ebp eax
or ax di
setpo bl
aas
setle bl
mov eax ebp
cmc
setpe bl
or bl 0xb5
add bl 0x48
mov bl 0x1
jmp rwxdata
dec bl
inc ecx
stc
clc
mov [ esp + 0x8 ] esi
not si
mov esi edi
cmc
sub esi eax
lea esp [ esp + 0x8 ]
jno rwxdata
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
push 0x846fc06e
[ edi ] [ esi ]
jmp sub_100b3ace
pushfd
[ edi ] [ esi ]
movzx si al
lea esp [ esp + 0x4 ]
jl rwxdata
mov si dx
pop esi
pushad
push [ esp ]
mov [ esp + 0x14 ] 0x5a
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
pushad
bswap esi
mov esi [ esp + 0x20 ]
pushad
pushfd
mov [ esp ] al
push ebp
lea esp [ esp + 0x4c ]
jmp rwxdata
jge rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
sub_100b3ace
push 0xb3f4a3b2
not si
mov esi [ esp + 0x8 ]
mov [ esp + 0x4 ] bl
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
jge rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
sub_100b3d28
stc
add [ ebx + edi ] dx
pushfd
push 0xfb535ce9
pushfd
push edi
lea esp [ esp + 0x1c ]
jmp rwxdata
pushfd
mov [ esp ] dh
push esp
add esi 0x2
jmp sub_100b50b6
sub_100b3ef6
cmc
cmp al 0x5a
das
loope rwxdata
rol [ edi + 0x2e014543 ] cl
mov ah 0x54
lea esp [ edi + 0x18 ]
and [ esp + esi * 2 + 0x2a ] ah
jb rwxdata
fninit
nop
mov al [ 0xffffffffe2f69f75 ]
pop esi
mov esi 0x5efe224a
dec ecx
xchg esp eax
push esi
sbb al [ edx ]
jb rwxdata
adc [ cs : 0xfffffffff165abee ] esi
mov ah 0xe0
fild [ ebx + 0x18 ]
xor [ ebx ] bh
mov [ 0xffffffffcd7e4244 ] eax
jae rwxdata
jb rwxdata
xor [ ebp + 0x2f ] 0xe1
cmpsd [ esi ] [ edi ]
pushad
call j_sub_100fd118
pop ecx
cmp eax 0x7a3ccb97
int 0x37
cdq
outsd
inc ebx
or esp [ esi ]
les ebp [ ebx + 0x980d8ed ]
mov bh 0x86
inc eax
xor al [ eax ]
add eax 0xbadc1689
sub eax 0x2b1c3c80
imul ebx [ eax + esi ] 0x5a3cf5b6
das
arpl cx cx
jmp 0xffffffffeb8e56a4
pop ss
mov [ 0xffffffffda1d764c ] eax
mov ah [ esi + ecx * 2 ]
les ebp [ 0x622a3621 ]
cmp ebp [ ebx - 0x69944d42 ]
lea ebp [ edi ]
sub_100b3fb4
mov ebx eax
pop ecx
pushfd
rcl cl cl
mov edi eax
btr cx 0x1
bsr cx bp
sar cl 0x3
mov ecx 0x104
stc
clc
pushad
sub al al
cmc
push 0x6458e86
cmp dl 0x1e
[ edi ]
push [ esp ]
mov [ esp + 0x4 ] ch
push edi
lea esp [ esp + 0x30 ]
jne rwxdata
setb bl
xadd dx si
shld dx bp 0x1
sub eax eax
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
pushad
mov ecx edi
shrd si sp 0x1
sub ecx ebx
rcr si cl
mov si [ esp + 0x4 ]
bswap esi
btc esi esi
lea esi [ esp + 0x20 ]
jmp rwxdata
clc
jmp rwxdata
pushad
sub edi 0x4
call sub_100b9c1f
not al
pushad
pushfd
cmc
push [ esp ]
rol al 0x2
mov [ esp ] 0x56
call sub_10130624
movsb [ edi ] [ esi ]
jle rwxdata
shl [ fs : ebp - 0x33 ] 0xf1
lodsd [ esi ]
mov edi [ eax + 0x28 ]
add ebp ebx
fldenv [ edi + 0x20626b93 ]
push es
aam 0xa0
insb
push ds
out 0xbd al
imul edi [ esi - 0x4ca6c094 ] 0x10704e8f
or ebp [ edx ]
sub ch bh
sbb bl bh
test eax 0x12844f8b
fprem1
push eax
jns rwxdata
cmc
hlt
js rwxdata
0xbe897ff2 0xd02e
loopne rwxdata
sbb ah [ 0x1fa1dcc9 ]
clc
pop ss
outsd
mov bl 0x29
xchg ebx eax
xlat
cmp dl [ esi + 0x27 ]
in al 0xae
sub dl [ ecx ]
or [ edi - 0x78cfc306 ] ecx
mov ebx 0x6af81c70
mov [ edi - 0x1d ] ebx
push eax
mov edi 0x9c235bb9
push ss
sub ch 0x2f
mov [ edi + 0x3c ] ebx
mul [ edx + 0x1a ]
adc bl cl
cmc
mov edx 0x7894d8c5
clc
pop ebx
pop ebp
pop es
jns rwxdata
bound ebx [ edx ]
cmp [ eax + 0x79 ] dl
mov bh 0xea
rwxdata
mov esi 0x9dbbd02e
pop esp
clc
paddq mmx0 [ edx + 0x145225e1 ]
sbb edi [ edx + 0x6 ]
mov [ 0xffffffffcd75c0c0 ] al
cdq
push 0x12
add dl [ esi - 0x50 ]
xchg esi eax
jpe rwxdata
xor eax 0x23785abb
and edi [ eax - 0x13285240 ]
push 0x66423125
loope rwxdata
dec eax
or [ edi ] ch
retn
pushad
sub bh [ edi + 0x764008c7 ]
add eax 0xdc016e66
mov cl 0x59
aaa
jg rwxdata
ror [ esp + ecx * 8 - 0x3e ] 0xad
and esi 0xdf53d980
mov [ edx - 0x252afbf6 ] bl
mov esi 0x204c0e6b
adc ebx ebx
in al 0xb3
add [ eax + 0x3e7f6b09 ] 0xffffffc6
xchg esp eax
insb
add bl dh
mov al [ 0xffffffff92a9bbf4 ]
or al 0x4b
test [ edx + 0x4295213e ] esp
pop eax
ja rwxdata
xchg [ ebx + 0x6af81c70 ] edi
sahf
imul esp [ edi ] 0xffffffff
int 0xa5
sbb eax 0xe6c0b6de
[ ebx - 0x2418ee98 ]
sub_100b404b
lea esp [ esp + 0x28 ]
jo rwxdata
pushfd
call sub_1012db56
clc
sub esi eax
call sub_100b669c
push 0xf7385eed
lea esp [ esp + 0x4 ]
jne rwxdata
setb bl
xadd dx si
shld dx bp 0x1
sub eax eax
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
shl si 0x6
btr ecx 0x15
shl ch cl
mov ecx edi
btc si si
btr si si
neg si
rol esi cl
sub ecx ebx
btr si bx
mov esi esp
pushfd
mov [ esp ] cx
lea esp [ esp + 0x24 ]
ja rwxdata
cmp cx 0x61fb
sub edi 0x4
cmc
push [ edi ]
cmc
stc
pushad
cmp edi ebx
jmp rwxdata
or al 0xbb
loopne rwxdata
sub eax 0x315fade1
sbb bl al
mov bh 0x65
sbb edi ebx
mov eax [ 0x101e447f ]
cli
cmp bl 0xb3
ror al cl
sub ebx edi
shld di si 0xe
cmc
setl al
test dh 0xef
add ebx esp
rol al 0x4
rol al 0x5
mov edi ebx
cmp esp ebx
mov al 0x2e
stc
call sub_100b55db
mov esi 0x1b2c3696
jpe rwxdata
dec [ ebx + edi * 4 ]
sub_100b4152
xadd bx di
push 0xc0a97143
mov ebx eax
cmp edi edx
rcl cl cl
movsx di bl
sbb edi eax
mov edi eax
cmp esi 0xa021643d
sub ch 0xb
bts cx 0xc
mov [ esp ] cl
mov ecx 0x104
clc
xor al al
bt dx di
[ edi ]
jmp rwxdata
lea esp [ esp + 0x8 ]
jne rwxdata
setb bl
xadd dx si
shld dx bp 0x1
sub eax eax
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
bt ebx 0x10
test ch 0xcb
stc
mov ecx edi
pushfd
inc esi
sub ecx ebx
bts si si
or si si
lea esi [ esp + 0x4 ]
clc
cmp dl bh
sub edi 0x4
bt si 0x6
test bl 0x7b
mov [ esp ] 0xfddb4544
cmp esp edx
push [ edi ]
pop [ esp ]
test cx di
pushfd
pushad
test sp bp
cmp edi ebx
pushfd
lea esp [ esp + 0x28 ]
ja rwxdata
cmp cx 0x61fb
sub edi 0x4
cmc
push [ edi ]
cmc
stc
pushad
cmp edi ebx
jmp rwxdata
pushad
shl al 0x1
test bx si
sub ebx edi
pushad
add esp 0x40
add ebx esp
seto al
movsx di dl
call sub_1014a7bf
insd
push ebp
and [ ebp - 0x43328cbc ] ebx
jo rwxdata
pushfd
mov [ esp ] cx
lea esp [ esp + 0x24 ]
ja rwxdata
das
fnstenv [ ecx - 0x34e1ad48 ]
clc
and [ ecx - 0x6f ] ch
sbb ebx [ esi + 0xd43c076 ]
mov [ ebx - 0x7109e33d ] esi
insd

xor al [ esi + 0x418fb8e0 ]
dec ebx
sbb esi ecx
iretd
or al 0xbb
loopne rwxdata
sub eax 0x315fade1
sbb bl al
mov bh 0x65
sbb edi ebx
mov eax [ 0x101e447f ]
cli
cmp bl 0xb3
ror al cl
sub ebx edi
shld di si 0xe
cmc
setl al
test dh 0xef
add ebx esp
rol al 0x4
rol al 0x5
mov edi ebx
cmp esp ebx
mov al 0x2e
stc
call sub_100b55db
mov esi 0x1b2c3696
jpe rwxdata
dec [ ebx + edi * 4 ]
sub_100b49ed
not si
pop edi
mov edi [ esp + 0x8 ]
jmp rwxdata
mov esi [ esp + 0xc ]
pushad
mov esp ebp
mov bp 0xb3f4
movzx bp al
pop ebp
pushad
mov [ esp ] dl
pushad
mov [ esp ] 0xa9
push [ esp + 0x40 ]
retn 0x4c
sub_100b50b6
pushad
mov [ esp + 0x8 ] esp
dec ecx
pushfd
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x2c ]
jne rwxdata
and bx 0x2e45
cmc
ror bx cl
stc
mov bx [ esi ]
pushad
pushad
cmp ch 0xbb
shr ebx 0xc
bt dx 0xa
jmp rwxdata
bsr cx dx
mov ecx [ ebp - 0x4 ]
test cl bl
clc
cmp [ ebp + 0x14 ] ecx
jae rwxdata
call sub_100b3901
pushfd
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
pushad
push [ esp ]
lea esp [ esp + 0x24 ]
ja rwxdata
add ch bh
bswap cx
rcl ch cl
rcl ecx cl
mov ecx [ esi + 0x4 ]
cmc
call sub_100b4ed7
cdq
inc edi
sbb esp [ ebx + 0x5fcd728b ]
rol [ ebx + 0x305054b0 ] 0xe6
cmp bl [ ebp - 0x1ce7b1bb ]
mov ebp 0x1f354f6f
inc ebx
int 0xaf
xchg edi eax
popad
jbe rwxdata
pushad
lea esi [ ebp * 8 + 0xab1dd2c ]
pop esi
mov esi [ esp + 0x1c ]
jmp rwxdata
lea esi [ ebp * 2 - 0x297340da ]
xchg esi edi
not cx
jmp rwxdata
int3
iretd
bswap bx
movsx di dl
mov edi [ esp + 0x20 ]
movsx ecx cl
movsx cx al
movzx cx cl
lea ebx [ ecx - 0x3933b805 ]
mov ebx [ esp + 0x24 ]
lea ecx [ esi * 4 - 0x3d9c2f27 ]
setl cl
mov ecx [ esp + 0x28 ]
push [ esp ]
mov esp ebp
jmp rwxdata
pop esi
pushad
jmp rwxdata
bswap bp
pop ebp
pushad
push 0x7363c1ba
push [ esp + 0x24 ]
retn 0x38
pushfd
mov edi [ esp + 0x24 ]
mov bl 0x58
mov ebx [ esp + 0x28 ]
movsx ecx cl
setne ch
push 0x2cdddd60
mov ecx [ esp + 0x30 ]
mov [ esp ] 0x73
mov esp ebp
jmp rwxdata
pushad
movsx bp bl
mov ebp [ esp + 0x20 ]
push eax
pushfd
mov [ esp + 0x4 ] ch
push [ esp + 0x2c ]
retn 0x40
sub_100b52a6
cmp edi ebx
pushfd
call sub_100f9285
adc ebp edx
xchg edi eax
daa
sub [ edx - 0x33 ] edi
[ cs : esi ]
pop edi
xor [ ecx ] edx
jmp rwxdata
sub ah [ ecx + 0xc ]
xchg edx eax
sbb eax 0x77de426d
sub [ eax - 0x62 ] 0x9cdf3973
sub_100b55bf
mov [ esp + 0x4 ] cl
adc ecx ecx
push edx
mov [ esp ] ch
pushad
mov [ esp + 0x14 ] 0xbeb3a082
lea esp [ esp + 0x2c ]
jmp rwxdata
pushad
inc bl
inc ecx
lea esp [ esp + 0x20 ]
jge rwxdata
push 0xdc12a5dc
inc bl
pushfd
not bl
inc ecx
sbb bl ch
pushfd
test cl dh
rcl bl cl
xchg ebp eax
or ax di
setpo bl
aas
setle bl
mov eax ebp
cmc
setpe bl
or bl 0xb5
add bl 0x48
mov bl 0x1
jmp rwxdata
dec bl
inc ecx
stc
clc
mov [ esp + 0x8 ] esi
not si
mov esi edi
cmc
sub esi eax
lea esp [ esp + 0x8 ]
jno rwxdata
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
push 0x846fc06e
[ edi ] [ esi ]
jmp sub_100b3ace
pushfd
[ edi ] [ esi ]
movzx si al
lea esp [ esp + 0x4 ]
jl rwxdata
mov si dx
pop esi
pushad
push [ esp ]
mov [ esp + 0x14 ] 0x5a
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
pushad
bswap esi
mov esi [ esp + 0x20 ]
pushad
pushfd
mov [ esp ] al
push ebp
lea esp [ esp + 0x4c ]
jmp rwxdata
jge rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
sub_100b55db
test ch 0x1
[ edi ]
lea esp [ esp + 0x4 ]
jbe rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
pushad
mov [ esp ] ch
pushad
lea esp [ esp + 0x40 ]
jne rwxdata
jmp sub_10120201
bswap ax
push edx
mov [ edi - 0x1 ] 0x0
setg al
movzx ax bl
jmp sub_100b33cb
movzx ax bl
pushad
pushad
cwde
mov [ edi - 0x1 ] 0x0
movzx ax al
pop eax
movsx ax dl
mov al [ esp ]
mov [ esp + 0x38 ] ebx
setb ah
bswap ax
pop eax
lea eax [ ebp - 0x468e1540 ]
lea eax [ rwxdata ]
mov [ esp ] 0x18
push 0x75024435
mov [ esp + 0x4 ] bh
mov [ esp + 0x34 ] rwxdata
mov [ esp ] 0x17
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x34 ] eax
push ecx
push ebp
mov [ esp ] bl
push [ esp + 0x3c ]
retn 0x40
sub_100b560a
mov [ esp ] 0x5be81cab
pushad
mov [ esp ] bh
push 0xc5d03734
mov [ esp + 0x20 ] 0x178e9c6d
push 0x45b8cc0c
pushfd
mov [ esp + 0x10 ] 0x4e
lea esp [ esp + 0x28 ]
jmp rwxdata
jmp rwxdata
push 0x970b004e
pushfd
mov [ esp + 0x4 ] edx
mov [ esp ] 0x7e
jmp sub_1014d14d
sub_100b5636
pushfd
pushfd
push [ esp ]
lea esp [ esp + 0x14 ]
jne rwxdata
jmp rwxdata
rcl di 0x7
mov edi [ edx + 0x24 ]
bt ax 0x7
push edi
jmp rwxdata
pushad
mov [ esp + 0x1c ] eax
mov [ esp + 0x8 ] bl
lodsb [ esi ]
jmp rwxdata
add edi eax
pushad
call sub_1012bb85
add [ eax ] al
add [ eax ] al
stc
jmp sub_100b920d
call sub_10123594
lea esp [ esp + 0x2c ]
jne rwxdata
and bx 0x2e45
cmc
ror bx cl
stc
mov bx [ esi ]
pushad
pushad
cmp ch 0xbb
shr ebx 0xc
bt dx 0xa
jmp rwxdata
bsr cx dx
mov ecx [ ebp - 0x4 ]
test cl bl
clc
cmp [ ebp + 0x14 ] ecx
jae rwxdata
call sub_100b3901
pushfd
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
pushad
push [ esp ]
lea esp [ esp + 0x24 ]
ja rwxdata
add ch bh
bswap cx
rcl ch cl
rcl ecx cl
mov ecx [ esi + 0x4 ]
cmc
call sub_100b4ed7
cdq
inc edi
sbb esp [ ebx + 0x5fcd728b ]
rol [ ebx + 0x305054b0 ] 0xe6
cmp bl [ ebp - 0x1ce7b1bb ]
mov ebp 0x1f354f6f
inc ebx
int 0xaf
xchg edi eax
popad
jbe rwxdata
pushad
lea esi [ ebp * 8 + 0xab1dd2c ]
pop esi
mov esi [ esp + 0x1c ]
jmp rwxdata
lea esi [ ebp * 2 - 0x297340da ]
xchg esi edi
not cx
jmp rwxdata
int3
iretd
bswap bx
movsx di dl
mov edi [ esp + 0x20 ]
movsx ecx cl
movsx cx al
movzx cx cl
lea ebx [ ecx - 0x3933b805 ]
mov ebx [ esp + 0x24 ]
lea ecx [ esi * 4 - 0x3d9c2f27 ]
setl cl
mov ecx [ esp + 0x28 ]
push [ esp ]
mov esp ebp
jmp rwxdata
pop esi
pushad
jmp rwxdata
bswap bp
pop ebp
pushad
push 0x7363c1ba
push [ esp + 0x24 ]
retn 0x38
pushfd
mov edi [ esp + 0x24 ]
mov bl 0x58
mov ebx [ esp + 0x28 ]
movsx ecx cl
setne ch
push 0x2cdddd60
mov ecx [ esp + 0x30 ]
mov [ esp ] 0x73
mov esp ebp
jmp rwxdata
pushad
movsx bp bl
mov ebp [ esp + 0x20 ]
push eax
pushfd
mov [ esp + 0x4 ] ch
push [ esp + 0x2c ]
retn 0x40
sub_100b5719
push 0x6514e30a
mov [ esp ] bl
push 0x65250dc8
lea esp [ esp + 0xc ]
jne rwxdata
call sub_10130130
in eax 0xa9
and edi [ edi ]
jne rwxdata
push 0x3f198820
pushfd
push [ esp ]
lea esp [ esp + 0xc ]
call sub_100fd08f
pushfd
pushad
lea esp [ esp + 0x24 ]
jmp rwxdata
popfd
test [ esi + 0x1b761c42 ] eax
xchg edi eax
mov dl [ esi ]
cmp [ ecx + 0x69579a72 ] esi
clc
add ch ch
push ss
sar [ esp + ebp * 2 - 0x3703e1be ] cl
test [ esi + 0x120e4840 ] al
rcl [ edx - 0x51d8b38e ] 0xc7
lea esp [ ebp - 0x33 ]
jmp rwxdata
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
pop ss
sub al 0xa8
imul ebx [ gs : esi + ebx * 8 + 0x5c ] 0xffffffd3
fidiv [ esi + 0x66d0f74f ]
ja rwxdata
test [ ecx - 0x6f ] dh
sub al [ esi - 0x36 ]
lodsd [ esi ]
sbb al 0xf8
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
sub_100b5f01
cmp ah ch
add dl dl
pushfd
pushfd
push 0x369527f7
lea esp [ esp + 0xc ]
jne rwxdata
pushad
push [ esp ]
push [ esp + 0x24 ]
retn 0x28
push ecx
pushfd
mov dl cl
mov [ esp ] bl
pushf
pop [ esp + 0x6 ]
stc
stc
push [ esp ]
pushfd
mov dl [ esi ]
cmc
bt cx 0xf
call sub_1012f31e
scasb [ edi ]
push esi
sub_100b5fe4
lea esp [ esp + 0x48 ]
ja rwxdata
cmp cx 0x61fb
sub edi 0x4
cmc
push [ edi ]
cmc
stc
pushad
cmp edi ebx
jmp rwxdata
bt si 0xb
setl al
shr al cl
sub ebx edi
test ax bp
add ebx esp
push esi
bswap edi
movzx di dl
mov edi ebx
mov [ esp ] 0x5a
mov al 0x2e
pushad
mov [ esp + 0x8 ] eax
mov [ esp ] 0x6f99a1cb
lea esp [ esp + 0x24 ]
jmp rwxdata
pushfd
mov [ esp ] cx
lea esp [ esp + 0x24 ]
ja rwxdata
stc
call sub_100b55db
mov esi 0x1b2c3696
jpe rwxdata
or al 0xbb
loopne rwxdata
sub eax 0x315fade1
sbb bl al
mov bh 0x65
sbb edi ebx
mov eax [ 0x101e447f ]
cli
cmp bl 0xb3
ror al cl
sub ebx edi
shld di si 0xe
cmc
setl al
test dh 0xef
add ebx esp
rol al 0x4
rol al 0x5
mov edi ebx
cmp esp ebx
mov al 0x2e
dec [ ebx + edi * 4 ]
sub_100b6421
push ebx
pushad
pushad
pushfd
call sub_10129562
jmp rwxdata
pushfd
mov [ esp + 0x34 ] eax
push ecx
push ebp
mov [ esp ] bl
push [ esp + 0x3c ]
retn 0x40
sub_100b642f
neg al
pushfd
ror al 0x4
clc
push 0x42d8f5e9
lea esp [ esp + 0xc ]
jo rwxdata
pushfd
stc
cmc
jmp sub_100b2a48
not al
clc
pushfd
cmc
cmc
rol al 0x2
pushad
lea esp [ esp + 0x24 ]
call sub_100fd08f
bt bx cx
cmp eax 0x7d00
pushad
call sub_100fa302
cmc
cmp eax 0x7d00
jmp sub_10128d59
sub_100b669c
pushfd
jmp rwxdata
[ edi ] [ esi ]
lea esi [ esp + 0x578cc69c ]
movsx si dl
movzx esi dl
bswap si
mov esi [ esp + 0x30 ]
mov [ esp + 0xc ] al
push [ esp ]
pushfd
lea esp [ esp + 0x3c ]
jmp rwxdata
jge rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
sub_100b8d69
cmc
not al
cmp dh 0x27
lodsd [ esi ]
mov ebx 0xdb4d6c56
call 0xfffffffff0239bca
xlat
xchg [ edi + 0x43 ] edi
dec ebp
and edx [ eax + 0x221b6d58 ]
mul [ ebx - 0xef6d083 ]
inc ebp
test al 0x6e
cmp al 0x18
mov ch [ ecx ]
ja rwxdata
adc dl bh
xchg [ ecx ] ebx
jo rwxdata
jno rwxdata
jg rwxdata
jpe rwxdata
mov bl 0xa3
sub ebp ebp
iretd
fnstsw [ esi - 0x5cfbe7d ]
out 0x6d eax
cwde
aam 0x50
adc ah ah
adc [ edi ] al
inc edi
push 0x481c3060
cmp edi ebx
fwait
jge rwxdata
pop edi
mov ch 0xbb
rol [ eax ] cl
add dh bl
dec esi
in al dx
push esi
mov [ 0xffffffff9deee46a ] eax
lodsd [ esi ]
adc eax 0xc2c35d62
jbe rwxdata
call sub_1011fa66
into
lodsb [ esi ]
dec eax
sbb ch dh
jns rwxdata
daa
cmp [ edx ] edx
mov edx 0x50586ef4
cmp bl [ edi + 0x4f ]
sub al 0x56
scasd [ edi ]
hlt
in eax dx
inc ebp
outsd
scasb [ edi ]
sub cl ah
dec ebp
cmp [ esi + eax + 0x566ce230 ] ah
xor [ eax ] 0x66b92d7c
clc
js rwxdata
sbb dl [ ebx - 0x3d ]
enter 0x33a1 0x9f
push es
dec edx
and [ ecx + 0x3a ] esp
not al
stc
cdq
and edi [ ebx - 0x56 ]
mov ch 0xce
inc ecx
xor dh 0xb
push ss
mov al 0xf4
fild [ edi ]
mov [ edx ] dl
mov dh 0x99
mov eax [ 0x65cd476a ]
cld
xchg edx eax
adc dl bl
sub_100b9071
call sub_1012d1b6
push 0x6c85b163
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
pushfd
mov [ esp ] 0xc6
push [ esp + 0x4 ]
retn 0x8
pushfd
inc esi
pushfd
pushfd
mov [ esp + 0x8 ] dh
pushad
inc edi
push ebp
pushfd
lea esp [ esp + 0x34 ]
jmp sub_100f89c3
sub_100b920d
sub ax di
push ebp
bts eax edi
das
stc
mov ebp esp
shrd ax ax cl
rcr al cl
sub esp 0x8
cmc
add eax 0x8aee8a7d
and ah al
dec al
push ebx
xor ah 0x3b
mov ah al
rcl ax 0xd
push esi
lahf
call sub_1012a192
sub_100b924c
call sub_100f9853
stosd [ edi ]
jne rwxdata
insb
push es
add al ch
add al [ esi ]
add al 0x0
insd
call 0xffffffffb4f45fd3
jl rwxdata
pop ebx
in eax 0x5f
leave
sbb al 0xef
xor [ ebx + 0x10ee315f ] esi
retn 0xa652
sahf
add ebp ecx
fisub [ eax + 0x57 ]
add eax [ edi ]
fnstsw [ edx - 0xfea482 ]
fstp [ esi - 0x6cba9ba ]
mov edi 0x17d640aa
jae rwxdata
pop ss
xchg edi eax
add ebx [ ebp - 0x2e049a74 ]
mov bh 0xc8
rcr [ ebp - 0x3f2aa443 ] 0x1
adc ch [ eax + 0x73d55268 ]
cmp ch ah
xchg ebx eax
cmpsd [ esi ] [ edi ]
jo rwxdata
mov ebp 0x8febd915
jmp 0xffffffffa6747cfe
pop ecx
arpl [ ecx + 0x6733556d ] si
fmul [ ebp + esi - 0x6 ]
lodsb [ esi ]
jg rwxdata
pop ebx
aad 0xc0
cmpsd [ esi ] [ edi ]
daa
stosb [ edi ]
fist [ ecx ]
or cl [ esi - 0x5d730859 ]
ror [ ecx ] 0x1
dec edx
0xde6d6357 0x1710
fcom st0
push 0x6a
int3
sub_100b96c0
pushad
adc ecx ecx
push [ esp + 0x4 ]
lea esp [ esp + 0x28 ]
call sub_100b5f01
pushad
pushad
push [ esp + 0x4 ]
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_100fa1ea
dec ebp
add ecx edi
out dx eax
loope rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
pop esi
aam 0xc1
mov esi 0xed1189aa
mov ds bx
arpl cx bx
inc esp
sbb bh dl
inc ebp
fnstcw [ ebp + 0x792d2e70 ]
int3
int 0x6a
aas
aad 0xd4
push 0xda361171
mov ebx 0xe5072fd5
lodsd [ esi ]
imul edi [ ecx ] 0x2a
sub_100b999f
push edx
mov [ esp + 0x8 ] 0x40ce7c49
push [ esp ]
mov [ esp + 0x8 ] 0xb34d
lea esp [ esp + 0xc ]
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp ] edx
pushad
pushad
pushfd
jmp rwxdata
pushfd
pop [ esp + 0x40 ]
jmp rwxdata
pushfd
jmp rwxdata
lea esp [ esp + 0x44 ]
push esp
pushad
call sub_1014c3b3
mov [ esp + 0x24 ] ecx
mov [ esp + 0x4 ] dl
call sub_1014c260
pushfd
mov [ fs : eax ] edx
push [ esp + 0x4 ]
push eax
lea esp [ esp + 0x10 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_100b99c0
pushad
adc al al
pushfd
lea esp [ esp + 0x28 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
push eax
pushfd
lea esp [ esp + 0x8 ]
jae rwxdata
call sub_10129242
pushad
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x20 ]
jne rwxdata
pushfd
pushad
jmp rwxdata
jmp rwxdata
call sub_1012cb53
aaa
xlat
sti
out 0x75 al
int 0x7
imul esi [ 0x2b9db428 ] 0x4040a7e9
inc ebx
leave
fsubr [ ecx - 0x7642c1 ]
mov ch 0x1d
mov ebx 0xfeca1543
call 0x67c7ee65
jge rwxdata
lea esp [ esp + 0x24 ]
jne rwxdata
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
push 0xffffffa1
cmp edx [ esi - 0x2fff9be ]
xor eax edx
or [ ebx + 0x7b ] 0x4b
sbb dl dh
call 0x304afaca
cld
mov eax 0x43557f84
adc eax 0x2462a0f6
in al dx
les esi [ ebx ]
jmp 0xffffffffc57152d7
pushfd
pushfd
stosb [ edi ]
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
aaa
ficomp [ esi ]
pop edi
push es
ror ebp 0xdb
pushad
leave
jg rwxdata
jge rwxdata
mov edx 0x9e81d5aa
jpe rwxdata
scasd [ edi ]
and esi [ eax - 0x809d945 ]
aas
in al dx
sbb al 0xeb
fldenv [ eax - 0x5a4c66a ]
or al 0xdb
sti
jae rwxdata
inc eax
xor dl cl
sub [ ebx - 0x4d ] 0xffffffc8
push eax
[ edi ] [ esi ]
push ecx
xor [ eax ] esi
jbe rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
mov cl 0x5f
iretd

lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
sub_100b99df
pushfd
inc ecx
lea esp [ esp + 0x4 ]
call sub_100fa1ea
dec ebp
add ecx edi
out dx eax
loope rwxdata
pop esi
aam 0xc1
mov esi 0xed1189aa
mov ds bx
arpl cx bx
inc esp
sbb bh dl
inc ebp
fnstcw [ ebp + 0x792d2e70 ]
int3
int 0x6a
aas
aad 0xd4
push 0xda361171
mov ebx 0xe5072fd5
lodsd [ esi ]
imul edi [ ecx ] 0x2a
sub_100ba258
lea esp [ esp + 0x4 ]
jae rwxdata
push ecx
push 0x81b69510
lea esp [ esp + 0x8 ]
call j_sub_100b99df
jmp rwxdata
call sub_1012bcbb
test ch bh
not al
test bp bx
mov [ ecx ] al
push 0xd1f2a4f3
mov [ esp + 0xc ] 0x45
mov [ esp ] dh
bt bx bp
add ecx 0x1
cmp ah 0xbb
cmp ax 0xeb84
test ah ah
pushfd
call sub_1012090e
in eax dx
inc ecx
dec ebx
pop ss
fnstcw [ ecx - 0x33 ]
inc edx
test al 0xa8
outsb
cmp esi edi
int3
sub ecx ebx
call sub_100b5719
out dx al
inc edx
fisub [ esp + eax * 8 + 0x69b5cd75 ]
and ebx ebx
mov bl 0x8e
cmp al [ ebx ]
lahf
nop
cmp al [ ecx ]
and [ edx + 0x64 ] 0x3
add eax 0xea429a2b
adc ebx edx
into
pop es
fisub [ cs : eax + 0x593d9b69 ]
push ss
jbe rwxdata
xchg esi eax
pop edi
out 0xc3 eax
inc esi
out 0xc6 al
xchg esp eax
jge rwxdata
push ebx
pop esi
fcomp [ ebx ]
add esi eax
sbb [ eax + 0x48ad1355 ] bh
std
cld
imul esp [ eax ] 0xffffffa0
xor [ ebp + 0x72 ] dh
mov edx 0x1e7cab54
or ecx [ ecx ]
adc esi [ 0x5a0522a3 ]
push ss
out 0xcc al
mov ah 0x52
into
shr [ edi + 0x67fe2266 ] 0xc7
xchg edi eax
cmp al [ eax - 0x3d ]
mov cl 0x25
xchg [ ebp + 0x4f ] eax
int3
stc
xlat
shl [ ecx + 0x3f5f468e ] cl
adc al 0xa6
mov eax [ 0xfffffffff7462a6b ]
rdmsr
stosb [ edi ]
cmp edx [ ebx + 0x5e ]
sub_100ba5db
shr eax 0x1
pushfd
lea esp [ esp + 0xc ]
je rwxdata
mov di di
pop ebx
not si
lea esi [ edi * 2 - 0x1b68efe ]
mov di 0x801a
pop edi
bswap bp
movsx bp bl
pop esi
movzx bp bl
push 0xc093e7a
push [ esp ]
movsx bp al
mov ebp [ esp + 0x8 ]
pushad
push [ esp + 0x2c ]
retn 0x38
pushfd
mov [ esp ] 0x63
call sub_100b55bf
push ebp
pop es
shl [ ecx - 0x4b32862b ] 0x70
les esp [ edi ]
int1
mov esp 0xd8094d74
jpo rwxdata
xchg esp eax
in eax dx
add [ ebp - 0x58eaf895 ] dh
dec ebp
sub_100ba73c
ja rwxdata
jmp sub_10120201
cmc
clc
imul edx edx 0xa
bt bp sp
cmc
cmc
add edx eax
push ebp
push edx
push esi
lea esp [ esp + 0xc ]
jmp sub_1012ce3f
sub_100f89c3
shl al 0x5
ror al 0x4
mov al [ edi ]
cmc
stc
cmp al 0x41
pushfd
pushfd
mov [ esp + 0x4 ] 0x27
lea esp [ esp + 0x8 ]
jb rwxdata
call sub_1012b415
pop edx
clc
jbe rwxdata
call sub_100b3ef6
aas
adc edi ecx
out dx eax
int1
jne rwxdata
xor al 0x41
add eax [ eax ]
shl [ ebp - 0x33 ] 0x1
push ss
sti
mov dh [ eax + 0x369cfbaf ]
insd
mov [ ebx ] esi
and dh dl
push ds
cmp ebx ebx
ror [ eax + 0x61 ] 0x3b
push cs
mov dh 0x6f
cmp esp [ eax ]
scasb [ edi ]
and ch bh
mov bh 0xa0
push 0x4c
xor al 0xe2
test al 0x81
sbb [ ecx - 0x17592e53 ] ebp
aad 0xd5
into
xchg ebx eax
inc ebp
dec edi
daa
jb rwxdata
jns rwxdata
in al dx
mov edi 0x3aed1f5b
in al 0xdf
cmpsd [ esi ] [ edi ]
xchg [ edi + 0x2a ] ecx
pop esp
xchg ebp eax
sar [ ecx - 0x6e2b437d ] cl
push ebp
cmp [ ecx ] edx
in al dx
sbb al [ ebx - 0x3d ]
jge rwxdata
js rwxdata
cmpsb [ esi ] [ edi ]
mov al [ 0xffffffffe2de2997 ]
xor ebp [ edi - 0x4b ]
das
adc edx [ edi + 0xf97ae3c ]
push 0x32170574
jo rwxdata
push edi
test [ ebx + 0x4f ] ecx
imul edi [ ebx - 0x2e521d0c ] 0xffffffeb
aas
bound ebx [ edi ]
sti
sar [ eax + 0x2d ] 0x1
jb rwxdata
cmp dh cl
jne rwxdata
pushad
fdivr [ esi - 0x4524e246 ]
outsb
cmp ebp ebx
stosd [ edi ]
jae rwxdata
and dh dl
sti
0x596a
cmp [ edi ] 0x41
and [ edx ] ecx
mov ch 0x6d
xchg edi eax
retn 0x507e
push es
shl ebp cl
dec eax
mov cl [ edi ]
xchg ebx eax
aam 0x6
in eax dx
pop ss
fsubp st2
and eax [ 0xffffffffe0c2ba32 ]
in eax 0xaf
aaa
jecxz rwxdata
and al 0xdb
xchg ebx ebx
adc esi [ ecx - 0x52 ]
shl bh 0xb
aam 0x7e
fcom [ ecx + 0x4ba532c6 ]
aad 0xcc
cdq
stosd [ edi ]
xchg esp eax
mov esi 0xeee0b108
mov esi 0x8467faba
call 0x2e533599
xor al 0x1c
xlat
jno rwxdata
sbb ebp [ eax + 0xa ]
sbb eax 0x467edec1
push ss
stc
cdq
push 0x34
test ah 0xa9
ja rwxdata
cli
salc
salc
mov eax [ 0x33fc62b3 ]
dec ecx
cld
add cl dh
add edi [ esi ]
mov ss [ ebx + 0x7f ]
insb
mov al 0x49
jg rwxdata
fcom [ ecx + 0x55 ]
outsb
scasb [ edi ]
sbb [ ebx ] 0x9
hlt
adc eax 0x1c62c703
fisub [ ecx + ebx * 4 + 0x42ae3429 ]
inc esp
sbb eax 0x1b56bac8

jecxz rwxdata
or al 0x2
inc eax
sub eax 0xb0f4b1c6
fwait
mov ebx 0x130b6929
hlt
out dx al
lds eax [ edi - 0x33 ]
add [ eax ] 0x9
mov ch 0x85
push ecx
div ah
cmp al 0x79
pusha
jmp [ esi ]
cmp al 0x96
cdq
push ss
mov ah 0xf
xor eax 0xeff3b8f2
mov al [ 0xffffffffbbe94bae ]
xchg ebx eax
sti
jns rwxdata
push ebx
mov al [ edx - 0x383afbd2 ]
mov eax 0xd6fa2e98
sub_100f8e05
mov [ esp + 0x4 ] 0x19
lea esp [ esp + 0x28 ]
je rwxdata
dec bh
mov bx [ esi ]
push ebp
stc
and ebx 0xfff
call sub_1012cb4d
push 0xb4fea7dc
lea esp [ esp + 0x4 ]
jmp rwxdata
call sub_100b923c
call 0xffffffffbd62e139
jb rwxdata
bt cx 0x9
add edx 0x11c
push 0x50b21e9
pushad
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
mov [ esp ] dh
push esp
add esi 0x2
jmp sub_100b50b6
mov dl 0x14
out dx al
mov esi 0x15078198
out dx eax
fdivr [ edx + 0x65 ]
test ecx 0xf4209c81
dec eax
mov [ 0xffffffffde022c64 ] al
mov [ 0xffffffffd1fa586c ] al
adc edi [ ebx + 0x20 ]
cld
push ebx
fwait
cmpsb [ gs : esi ] [ edi ]
sub al 0x5b
in eax dx
0xabf33e15 0x1513
or ah dh
enter 0x1367 0xe9
mov dl 0xd4
mov ah 0x11
and [ esi - 0x7a ] ah
mov eax [ 0x51729ede ]
test [ esi - 0x64 ] esi
xlat
lea edx [ eax ]
int 0x81
insd
dec edi
out 0x36 eax
sub eax 0x3cb4b532
mov [ 0xffffffff9332df63 ] al
push esi
add eax 0x99d4c05d
push ebp
cmp [ ebp - 0x9 ] edi
fcmovnb st5
xchg [ eax - 0x6da466ac ] ecx
cmpsb [ esi ] [ edi ]
mov ebp 0x1be4da37
adc ebx [ esi ]
xchg esp eax
xchg ecx eax
or eax 0x6f498010
xor bl [ esi + 0x1f ]
das
int3
jmp rwxdata
xchg si di
push 0x4d14e99a
not di
movzx esi [ edx + 0x1a ]
push edx
pushad
not di
lea esi [ esi + edx + 0x1c ]
mov [ esp + 0x4 ] 0x7af695ad
lea edi [ eax + 0x29d54165 ]
mov edi [ ebp + 0x8 ]
jmp rwxdata
lea esp [ esp + 0x28 ]
call sub_100f89c3
jmp rwxdata
jne rwxdata
cmp dh dl
pushfd
stc
add ecx 0xffffffff
mov [ esp ] bh
mov [ esp ] esp
lea esp [ esp + 0x4 ]
je rwxdata
movzx ax al
push 0x1a94aa72
pushad
mov eax [ edx + 0x8 ]
pushad
push 0x283c0c2f
mov [ esp ] 0x6d
lea esp [ esp + 0x48 ]
jmp rwxdata
clc
bt di 0x6
jmp rwxdata
or ebx ebx
push ebx
jmp sub_1012be49
sub_100f8eee
pushad
push [ esp ]
lea esp [ esp + 0x48 ]
je rwxdata
mov di di
pop ebx
not si
lea esi [ edi * 2 - 0x1b68efe ]
mov di 0x801a
pop edi
bswap bp
movsx bp bl
pop esi
movzx bp bl
push 0xc093e7a
push [ esp ]
movsx bp al
mov ebp [ esp + 0x8 ]
pushad
push [ esp + 0x2c ]
retn 0x38
pushad
push ecx
pushfd
jmp rwxdata
adc ecx ecx
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
pushad
inc bl
inc ecx
lea esp [ esp + 0x20 ]
jge rwxdata
push 0xdc12a5dc
inc bl
pushfd
not bl
inc ecx
sbb bl ch
pushfd
test cl dh
rcl bl cl
xchg ebp eax
or ax di
setpo bl
aas
setle bl
mov eax ebp
cmc
setpe bl
or bl 0xb5
add bl 0x48
mov bl 0x1
jmp rwxdata
dec bl
inc ecx
stc
clc
mov [ esp + 0x8 ] esi
not si
mov esi edi
cmc
sub esi eax
lea esp [ esp + 0x8 ]
jno rwxdata
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
push 0x846fc06e
[ edi ] [ esi ]
jmp sub_100b3ace
pushfd
[ edi ] [ esi ]
movzx si al
lea esp [ esp + 0x4 ]
jl rwxdata
mov si dx
pop esi
pushad
push [ esp ]
mov [ esp + 0x14 ] 0x5a
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
pushad
bswap esi
mov esi [ esp + 0x20 ]
pushad
pushfd
mov [ esp ] al
push ebp
lea esp [ esp + 0x4c ]
jmp rwxdata
jge rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
sub_100f91c5
lea esp [ esp + 0x10 ]
jae rwxdata
jge rwxdata
cmc
cmc
call sub_100fc3e4
shl [ ecx - 0x1f ] 0x81
jmp 0xffffffffa9e45f54
push 0xdc12a5dc
inc bl
pushfd
not bl
inc ecx
sbb bl ch
pushfd
test cl dh
rcl bl cl
xchg ebp eax
or ax di
setpo bl
aas
setle bl
mov eax ebp
cmc
setpe bl
or bl 0xb5
add bl 0x48
mov bl 0x1
jmp rwxdata
dec bl
inc ecx
stc
clc
mov [ esp + 0x8 ] esi
not si
mov esi edi
cmc
sub esi eax
lea esp [ esp + 0x8 ]
jno rwxdata
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
push 0x846fc06e
[ edi ] [ esi ]
jmp sub_100b3ace
pushfd
[ edi ] [ esi ]
movzx si al
lea esp [ esp + 0x4 ]
jl rwxdata
mov si dx
pop esi
pushad
push [ esp ]
mov [ esp + 0x14 ] 0x5a
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
pushad
bswap esi
mov esi [ esp + 0x20 ]
pushad
pushfd
mov [ esp ] al
push ebp
lea esp [ esp + 0x4c ]
jmp rwxdata
jge rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
sub_100f9285
call sub_100fa86c
pushad
rcr bl cl
btc bx 0xe
btc bx 0xe
mov ebx eax
jmp rwxdata
cmp [ edi ] 0x23
push [ esp ]
lea esp [ esp + 0x24 ]
jne rwxdata
rcl al cl
cmc
mov ecx edi
stc
rcl al 0x1
mov al 0xc5
mov al [ ecx ]
pushad
mov ah al
jmp rwxdata
dec ah
mov al 0x77
xor edx edx
setae al
jmp rwxdata
not al
stc
ror al 0x6
bt cx cx
pushad
neg al
jmp rwxdata
mov eax edx
ror al 0x6
cmp di 0x4321
stc
sbb al 0xcf
add edi 0x1
xor al 0x47
test dh dl
shr al cl
pushfd
mov al [ edi ]
pushad
bt di 0x1
test bl 0x52
test al al
pushfd
mov [ esp ] sp
jmp rwxdata
stc
sub al 0x67
mov [ esp ] 0x28
clc
jmp rwxdata
lea esp [ esp + 0x28 ]
je rwxdata
test ch bh
not al
test bp bx
mov [ ecx ] al
push 0xd1f2a4f3
mov [ esp + 0xc ] 0x45
mov [ esp ] dh
bt bx bp
add ecx 0x1
cmp ah 0xbb
cmp ax 0xeb84
test ah ah
pushfd
call sub_1012090e
in eax dx
inc ecx
dec ebx
pop ss
fnstcw [ ecx - 0x33 ]
inc edx
test al 0xa8
outsb
cmp esi edi
int3
cmc
xchg di cx
jmp sub_1012b1a6
jmp sub_100ba9d3
sub_100f92ee
clc
not dl
bt cx dx
pushad
rol dl 0x2
cld
cmc
cld
push [ esp + 0x3e ]
popf
call sub_10128eb7
bound edi [ edx ]
mov eax 0xcd75e7aa
scasd [ edi ]
add [ eax + eax ] 0xd6
stosb [ edi ]
bound ebp [ ecx ]
sti
scasb [ edi ]
je rwxdata
mov al 0xb1
add eax ebx
pop edx
mov [ 0xffffffff9cecde17 ] al
pop esi
mov dl 0x2d
xor eax 0xfb4fc2c3
leave
push eax
mov eax [ 0xffffffffbace1a73 ]
das
je rwxdata
add ecx [ eax - 0x1322f6cc ]
jl rwxdata
retn
or al cl
xlat
lea ebp [ eax - 0x6e ]
jl rwxdata
cmp dh [ esi + 0x34 ]
insd
xchg edx eax
mov esp 0x4f97c109
mov al [ edx + 0x43 ]
lodsd [ esi ]
xchg ebx edx
push esi
test [ esi - 0x54d161a8 ] 0x9e
xchg [ esi + 0x29 ] cl
push ebp
stc
mov edx 0xe0acb61b
in eax dx
std
out 0x75 eax
int 0x5c
sbb ecx ebx
fisub [ eax + 0x57 ]
pop ss
cld
adc [ edx - 0x2c10c4a1 ] 0xbd
xchg ebx eax
js rwxdata
das
pop ebp
call 0xffffffffc53790c3
jecxz rwxdata
adc eax 0x5a8acacf
scasb [ edi ]
adc ebx ebx
fcmovnb st1
les edx [ edi - 0x77 ]
fyl2x
0x4686
jmp 0xffffffffe5b54e2e
stc
push ecx
test al 0xde
int 0x89
fst st1
mov eax [ ebx + 0x7b10b48e ]
xor eax 0xfd0ef8a1
mov ecx 0xf527fd8f
int3
sub_100f9599
mov [ esp + 0x10 ] 0x55aa
mov [ esp + 0x24 ] rwxdata
mov [ esp ] ah
pushad
mov [ esp ] 0xc5
push [ eax ]
pop [ esp + 0x40 ]
push edx
mov [ esp + 0x8 ] dh
mov [ esp + 0x8 ] 0x17
push 0xbfea028f
push [ esp + 0x48 ]
retn 0x4c
sub_100f9783
mov [ esp + 0x8 ] si
[ edi ] [ esi ]
movzx si cl
mov esi [ esp + 0xc ]
pushad
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
jge rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
sub_100f9853
lodsb [ esi ]
bt ax di
push [ esp + 0x4 ]
mov [ esp + 0x4 ] ah
pushfd
ror al 0x6
add esp 0x3c
jge rwxdata
bt bp ax
sub al 0x3c
push 0x700fe8ec
not al
mov [ esp ] 0x42
neg al
pushfd
mov [ esp + 0x4 ] si
ror al 0x4
jmp rwxdata
cmc
sub al 0x3c
call j_sub_10120a18
not al
pushad
pushfd
cmc
push [ esp ]
rol al 0x2
mov [ esp ] 0x56
call sub_10130624
movsb [ edi ] [ esi ]
jle rwxdata
shl [ fs : ebp - 0x33 ] 0xf1
lodsd [ esi ]
mov edi [ eax + 0x28 ]
add ebp ebx
fldenv [ edi + 0x20626b93 ]
push es
aam 0xa0
insb
push ds
out 0xbd al
imul edi [ esi - 0x4ca6c094 ] 0x10704e8f
or ebp [ edx ]
sub ch bh
sbb bl bh
test eax 0x12844f8b
fprem1
push eax
jns rwxdata
cmc
hlt
js rwxdata
0xbe897ff2 0xd02e
loopne rwxdata
sbb ah [ 0x1fa1dcc9 ]
clc
pop ss
outsd
mov bl 0x29
xchg ebx eax
xlat
cmp dl [ esi + 0x27 ]
in al 0xae
sub dl [ ecx ]
or [ edi - 0x78cfc306 ] ecx
mov ebx 0x6af81c70
mov [ edi - 0x1d ] ebx
push eax
mov edi 0x9c235bb9
push ss
sub ch 0x2f
mov [ edi + 0x3c ] ebx
mul [ edx + 0x1a ]
adc bl cl
cmc
mov edx 0x7894d8c5
clc
pop ebx
pop ebp
pop es
jns rwxdata
bound ebx [ edx ]
cmp [ eax + 0x79 ] dl
mov bh 0xea
rwxdata
mov esi 0x9dbbd02e
pop esp
clc
paddq mmx0 [ edx + 0x145225e1 ]
sbb edi [ edx + 0x6 ]
mov [ 0xffffffffcd75c0c0 ] al
cdq
push 0x12
add dl [ esi - 0x50 ]
xchg esi eax
jpe rwxdata
xor eax 0x23785abb
and edi [ eax - 0x13285240 ]
push 0x66423125
loope rwxdata
dec eax
or [ edi ] ch
retn
pushad
sub bh [ edi + 0x764008c7 ]
add eax 0xdc016e66
mov cl 0x59
aaa
jg rwxdata
ror [ esp + ecx * 8 - 0x3e ] 0xad
and esi 0xdf53d980
mov [ edx - 0x252afbf6 ] bl
mov esi 0x204c0e6b
adc ebx ebx
in al 0xb3
add [ eax + 0x3e7f6b09 ] 0xffffffc6
xchg esp eax
insb
add bl dh
mov al [ 0xffffffff92a9bbf4 ]
or al 0x4b
test [ edx + 0x4295213e ] esp
pop eax
ja rwxdata
xchg [ ebx + 0x6af81c70 ] edi
sahf
imul esp [ edi ] 0xffffffff
int 0xa5
sbb eax 0xe6c0b6de
[ ebx - 0x2418ee98 ]
sub_100f9875
mov [ esp + 0x8 ] 0x4a62e86f
pushad
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
pushad
pushad
mov [ esp + 0x3c ] edx
push eax
pushfd
pop [ esp + 0x3c ]
push ebx
push 0xbcf07293
lea esp [ esp + 0x44 ]
push esp
jmp rwxdata
pushfd
call $+5
pushfd
mov [ esp + 0x8 ] eax
jmp rwxdata
push edi
pushfd
mov [ esp + 0xc ] edi
pushad
pushfd
mov [ esp + 0x2c ] ebp
jmp rwxdata
lea esp [ esp + 0x2c ]
jns rwxdata
push 0xb1fac14a
pushad
mov [ esp + 0x20 ] esi
push 0xf590b208
pushad
mov [ esp + 0x40 ] ecx
call sub_1014b370
clc
add ax 0xaa5f
pushad
call sub_1014ad38
and cx 0xd622
test dx 0xdac8
sub al 0xce
jmp sub_1014cdae
pushfd
mov [ esp ] esi
call sub_1014c902
push 0x6fc34dc9
mov [ esp ] edi
pushfd
pushad
mov [ esp + 0x20 ] ebp
jmp rwxdata
pushfd
mov [ esp + 0x20 ] esi
mov [ esp ] 0x43
jmp rwxdata
mov [ esp + 0xc ] ch
mov [ esp + 0x1c ] ecx
pushfd
mov [ esp + 0x1c ] ebx
mov [ esp ] eax
lea esp [ esp + 0x1c ]
jmp sub_1014be14
sub_100f9ff5
lea esp [ esp + 0x28 ]
je rwxdata
setb bl
xadd dx si
shld dx bp 0x1
sub eax eax
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
mov dl 0x40
sar si 0x2
shrd esi edx 0xf
mov esi [ eax + 0x3c ]
bswap dx
dec dh
add esi eax
shrd edx ebp 0x1b
mov edx [ esi + 0x78 ]
jmp rwxdata
test edx edx
pushad
lea esp [ esp + 0x20 ]
je rwxdata
shld cx ax cl
add edx eax
not cl
mov ecx [ esi + 0x7c ]
stc
add ecx edx
pushfd
cmc
mov [ esp ] bl
mov [ ebp - 0x10 ] ecx
xor cl al
sbb ch dl
mov ecx [ ebp + 0xc ]
clc
cmp ecx 0xffff
mov [ esp ] ah
mov [ esp ] 0x22
lea esp [ esp + 0x4 ]
jbe rwxdata
test cx 0x5e52
test bx ax
sub ecx [ edx + 0x10 ]
cmp dh bh
cmp ecx [ edx + 0x14 ]
jmp rwxdata
xchg ch bl
adc cl dh
ror bx cl
mov edi [ edx + 0x24 ]
dec cx
cmc
shr bh cl
cmc
add edi eax
stc
movzx bx cl
mov ebx [ edx + 0x20 ]
bsr ecx ebp
add ebx eax
cmp dh 0x38
shr cx 0xa
rcl cl 0x1
mov [ ebp - 0x8 ] 0x0
push esi
movzx cx cl
mov ecx [ edx + 0x18 ]
lea esp [ esp + 0x4 ]
stc
bt esp 0x1
call sub_100fa98a
pushfd
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x24 ]
jne rwxdata
push ecx
push 0xe5f4b9ca
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
jmp rwxdata
pushfd
pushfd
stosb [ edi ]
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
jmp rwxdata
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
jge rwxdata
mov edi [ edx + 0x1c ]
clc
bt bx 0xc
cmc
add edi eax
cmp bh dh
mov edi [ edi + ecx * 4 ]
push 0xe299428b
push [ esp ]
mov [ esp ] 0xe5
cmc
test edi edi
push [ esp + 0x4 ]
push 0x8e8aca1c
lea esp [ esp + 0x10 ]
je rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
cmp al bh
cmp ah bl
add eax edi
stc
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
stc
cmp eax edx
call sub_100b3755
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
cmp dh dl
pushfd
stc
add ecx 0xffffffff
mov [ esp ] bh
mov [ esp ] esp
lea esp [ esp + 0x4 ]
je rwxdata
movzx ax al
push 0x1a94aa72
pushad
mov eax [ edx + 0x8 ]
pushad
push 0x283c0c2f
mov [ esp ] 0x6d
lea esp [ esp + 0x48 ]
jmp rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
call sub_100b923c
call 0xffffffffbd62e139
jb rwxdata
bt cx 0x9
add edx 0x11c
push 0x50b21e9
pushad
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
clc
bt di 0x6
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
mov dl 0x14
out dx al
mov esi 0x15078198
out dx eax
fdivr [ edx + 0x65 ]
test ecx 0xf4209c81
dec eax
mov [ 0xffffffffde022c64 ] al
mov [ 0xffffffffd1fa586c ] al
adc edi [ ebx + 0x20 ]
cld
push ebx
fwait
cmpsb [ gs : esi ] [ edi ]
sub al 0x5b
in eax dx
0xabf33e15 0x1513
or ah dh
enter 0x1367 0xe9
mov dl 0xd4
mov ah 0x11
and [ esi - 0x7a ] ah
mov eax [ 0x51729ede ]
test [ esi - 0x64 ] esi
xlat
lea edx [ eax ]
int 0x81
insd
dec edi
out 0x36 eax
sub eax 0x3cb4b532
mov [ 0xffffffff9332df63 ] al
push esi
add eax 0x99d4c05d
push ebp
cmp [ ebp - 0x9 ] edi
fcmovnb st5
xchg [ eax - 0x6da466ac ] ecx
cmpsb [ esi ] [ edi ]
mov ebp 0x1be4da37
adc ebx [ esi ]
xchg esp eax
xchg ecx eax
or eax 0x6f498010
xor bl [ esi + 0x1f ]
das
int3
jmp rwxdata
or ebx ebx
push ebx
jmp sub_1012be49
xchg si di
push 0x4d14e99a
not di
movzx esi [ edx + 0x1a ]
push edx
pushad
not di
lea esi [ esi + edx + 0x1c ]
mov [ esp + 0x4 ] 0x7af695ad
lea edi [ eax + 0x29d54165 ]
mov edi [ ebp + 0x8 ]
jmp rwxdata
lea esp [ esp + 0x28 ]
call sub_100f89c3
jmp rwxdata
jne rwxdata
sub_100fa01f
lea esp [ esp + 0x4c ]
ja rwxdata
call sub_10124969
iretd
jpe rwxdata
pushad
push ebp
lea esp [ esp + 0x24 ]
jb rwxdata
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
stc
bt esp 0x1
call sub_100fa98a
pushfd
pushad
jmp rwxdata
push 0xbacd78b9
call j_sub_100b1e7e
call sub_1012cffb
cdq
imul ebp edi 0xcd75da73
out 0x9a al
pushad
dec esp
mov al [ 0x75e5defa ]
dec esi
add cl [ esi ]
in al 0xc8
test [ edi + 0x29085c45 ] cl
fstp st1
scasd [ edi ]
movsb [ edi ] [ esi ]
or ebx eax
xor dl dh

lea esp [ esp + 0x24 ]
jne rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
jmp rwxdata
pushfd
pushfd
stosb [ edi ]
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
jge rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
sub_100fa1b4
push ecx
lea esp [ esp + 0xc ]
jae rwxdata
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100b339b
stc
xor ecx ecx
call sub_100b9704
sub ecx ecx
lea esp [ esp + 0x4 ]
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
sub_100fa1c4
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x54 ]
ja rwxdata
cmp cx 0x61fb
sub edi 0x4
cmc
push [ edi ]
cmc
stc
pushad
cmp edi ebx
jmp rwxdata
ror al cl
inc al
pushad
inc al
sub ebx edi
bsr di si
pushad
add esp 0x40
add ebx esp
jmp rwxdata
pushfd
mov [ esp ] cx
lea esp [ esp + 0x24 ]
ja rwxdata
pushad
movsx di cl
pop edi
mov edi ebx
pushad
push 0x8aee740f
push edi
mov al 0x2e
push 0x91ede81e
pushfd
lea esp [ esp + 0x4c ]
jmp rwxdata
or al 0xbb
stc
call sub_100b55db
mov esi 0x1b2c3696
jpe rwxdata
loopne rwxdata
sub eax 0x315fade1
sbb bl al
mov bh 0x65
sbb edi ebx
mov eax [ 0x101e447f ]
cli
cmp bl 0xb3
ror al cl
sub ebx edi
shld di si 0xe
cmc
setl al
test dh 0xef
add ebx esp
rol al 0x4
rol al 0x5
mov edi ebx
cmp esp ebx
mov al 0x2e
dec [ ebx + edi * 4 ]
sub_100fa1ea
lea esp [ esp + 0x4 ]
call sub_100b5f01
call sub_100b96c0
mov [ esp ] 0x5be86d01
pushad
pushad
push 0xa5fa4013
mov [ esp + 0x40 ] 0xce8ee704
pushfd
mov [ esp ] ebp
push 0x6832dfa1
mov [ esp ] 0xd9
lea esp [ esp + 0x48 ]
jmp rwxdata
jmp rwxdata
push 0x970b004e
pushfd
mov [ esp + 0x4 ] edx
mov [ esp ] 0x7e
jmp sub_1014d14d
sub_100fa2a5
stc
mov [ esp ] 0xf9
mov [ esp + 0x4 ] dh
ror al 0x6
clc
sub al 0x3c
push [ esp + 0x4 ]
stc
not al
clc
neg al
clc
pushad
cmc
lea esp [ esp + 0x2c ]
jg rwxdata
stc
stc
pushfd
ror al 0x4
pushad
pushad
mov [ esp + 0x8 ] 0x1103
not al
jmp rwxdata
ror al 0x4
cmc
call sub_101239f6
mov eax edx
ror al 0x6
cmp di 0x4321
stc
sbb al 0xcf
add edi 0x1
xor al 0x47
test dh dl
shr al cl
pushfd
mov al [ edi ]
pushad
bt di 0x1
test bl 0x52
test al al
pushfd
mov [ esp ] sp
jmp rwxdata
rol al 0x2
sub esp 0xffffffbc
jl rwxdata
lea esp [ esp + 0x28 ]
je rwxdata
pushad
pushad
jmp rwxdata
cmp bl 0x72
pushad
cmc
shr eax 0x1
call sub_100f8eee
or ah [ esi + 0x7a6a382a ]
int 0x1d
loop rwxdata
cmc
xchg di cx
jmp sub_1012b1a6
jmp sub_100ba9d3
shr eax 0x1
mov [ esp ] 0xeffa
jmp rwxdata
int 0x87
or [ eax - 0xdc914e5 ] dh
int3
add [ eax + 0x54 ] 0x2c
sbb esi [ ecx + 0x3151596f ]
out 0xb5 eax
adc cl dh
xchg [ ebx + 0x30c10d8 ] ebp
movsd [ edi ] [ esi ]
mov dh 0x56
and [ ebx ] esi
stosd [ edi ]
popad
pop eax
adc dh cl
add [ edi ] esi
cwde
lahf
mov edx 0x9aae02ac
cwde
dec ebx
std
scasd [ edi ]
jmp rwxdata
lea esp [ esp + 0x40 ]
je rwxdata
mov di di
pop ebx
not si
lea esi [ edi * 2 - 0x1b68efe ]
mov di 0x801a
pop edi
bswap bp
movsx bp bl
pop esi
movzx bp bl
push 0xc093e7a
push [ esp ]
movsx bp al
mov ebp [ esp + 0x8 ]
pushad
push [ esp + 0x2c ]
retn 0x38
push edi
adc ecx ecx
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
pushad
inc bl
inc ecx
lea esp [ esp + 0x20 ]
jge rwxdata
push 0xdc12a5dc
inc bl
pushfd
not bl
inc ecx
sbb bl ch
pushfd
test cl dh
rcl bl cl
xchg ebp eax
or ax di
setpo bl
aas
setle bl
mov eax ebp
cmc
setpe bl
or bl 0xb5
add bl 0x48
mov bl 0x1
jmp rwxdata
dec bl
inc ecx
stc
clc
mov [ esp + 0x8 ] esi
not si
mov esi edi
cmc
sub esi eax
lea esp [ esp + 0x8 ]
jno rwxdata
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
push 0x846fc06e
[ edi ] [ esi ]
jmp sub_100b3ace
pushfd
[ edi ] [ esi ]
movzx si al
lea esp [ esp + 0x4 ]
jl rwxdata
mov si dx
pop esi
pushad
push [ esp ]
mov [ esp + 0x14 ] 0x5a
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
pushad
bswap esi
mov esi [ esp + 0x20 ]
pushad
pushfd
mov [ esp ] al
push ebp
lea esp [ esp + 0x4c ]
jmp rwxdata
jge rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
sub_100fa302
lea esp [ esp + 0x24 ]
jle rwxdata
pushad
mov [ esp ] 0x5c
lea esp [ esp + 0x20 ]
jae rwxdata
push esi
lea esp [ esp + 0x4 ]
jae rwxdata
pushad
inc bl
inc ecx
lea esp [ esp + 0x20 ]
test ah ch
pushad
push [ esp ]
pushfd
cmp ah 0x5
pushfd
jmp rwxdata
cmc
clc
cmp ah 0x5
call sub_10120d08
pushad
call sub_100b33b1
cmp [ edi ] 0x23
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
push 0xdc12a5dc
inc bl
pushfd
not bl
inc ecx
sbb bl ch
pushfd
test cl dh
rcl bl cl
xchg ebp eax
or ax di
setpo bl
aas
setle bl
mov eax ebp
cmc
setpe bl
or bl 0xb5
add bl 0x48
mov bl 0x1
jmp rwxdata
dec bl
inc ecx
mov [ esp ] 0xc2
lea esp [ esp + 0x2c ]
jae rwxdata
rcl al cl
cmc
mov ecx edi
stc
rcl al 0x1
mov al 0xc5
mov al [ ecx ]
pushad
mov ah al
jmp rwxdata
adc al ch
shl ax cl
rcr eax cl
adc al 0xa5
xor edx edx
sub eax edx
rcl ax 0xf
lahf
mov eax edx
push 0xdd7b5e7f
jmp rwxdata
stc
clc
mov [ esp + 0x8 ] esi
not si
mov esi edi
cmc
sub esi eax
lea esp [ esp + 0x8 ]
jno rwxdata
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
jge rwxdata
bt si 0x3
cmp cl 0x37
pushad
bt sp 0x9
cmp eax 0x7f
jmp rwxdata
not al
stc
ror al 0x6
bt cx cx
pushad
neg al
jmp rwxdata
call sub_100b2a60
mov ebx 0xb125594b
jb rwxdata
push 0x846fc06e
[ edi ] [ esi ]
jmp sub_100b3ace
pushfd
[ edi ] [ esi ]
movzx si al
lea esp [ esp + 0x4 ]
jl rwxdata
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
stc
sub al 0x67
mov [ esp ] 0x28
clc
jmp rwxdata
mov eax 0x8ec9a9fe
mov al [ 0xffffffff9c0a11db ]
sub al [ 0xffffffffc5323def ]
sar al 0x18
pop esi
loope rwxdata
xor ch dh
lodsd [ esi ]
pop ebp
xor ecx [ edi ]
mov edx 0x1c194b4a
mov dl 0xa1
jg rwxdata
mov si dx
pop esi
pushad
push [ esp ]
mov [ esp + 0x14 ] 0x5a
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
pushad
bswap esi
mov esi [ esp + 0x20 ]
pushad
pushfd
mov [ esp ] al
push ebp
lea esp [ esp + 0x4c ]
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100b339b
test ch bh
not al
test bp bx
mov [ ecx ] al
push 0xd1f2a4f3
mov [ esp + 0xc ] 0x45
mov [ esp ] dh
bt bx bp
add ecx 0x1
cmp ah 0xbb
cmp ax 0xeb84
test ah ah
pushfd
call sub_1012090e
in eax dx
inc ecx
dec ebx
pop ss
fnstcw [ ecx - 0x33 ]
inc edx
test al 0xa8
outsb
cmp esi edi
int3
inc esi
adc dh 0xca
ja rwxdata
mov [ edx + 0x7765cad6 ] 0x3e
ror dh cl
or al 0x48
mov [ 0xebdd745 ] eax
popad
int1
cdq
outsb
xchg edx eax
mov ch 0xf4
add eax 0xf53393b1
jno rwxdata
add ecx [ eax + 0x76aae422 ]
inc esi
xor eax 0x2319c5f9
pushfd
adc [ esi ] al
cmc
push ds
adc ah bl
xchg edi eax
jno rwxdata
jge rwxdata
popfd

jns rwxdata
les edx [ edx - 0x797d10cf ]
rol ch 0x89
fld [ ecx + 0x277b99ed ]
out dx eax
add [ esi - 0x26763a40 ] 0x81
in eax dx
cdq
jpo rwxdata
retn
lea edx [ esi + ecx * 8 - 0x63 ]
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
outsb
jbe rwxdata
and al 0xf6
scasb [ edi ]
int 0x92
dec eax
loopne rwxdata
fidivr [ edi + ebx * 2 - 0x19 ]
and al 0x1a
sbb eax [ ebx + 0x5f35fe64 ]
pop esi
push es
0xe29eb8a3 0x258a
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
jb rwxdata
arpl di ax
cld
cmp [ ecx - 0x248626f8 ] edx
retn 0x6bb8
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
outsd
jne rwxdata
outsb
insd
outsb
je rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
jmp rwxdata
adc dl [ ebp - 0x9 ]
dec edi
jae rwxdata
dec eax
popad
outsb
insb
inc ecx
add [ eax + 0x20 ] bh
pop edi
xor [ eax - 0x6d7328e ] esi
adc ecx [ esi - 0x2b2cecd8 ]
push 0xa7ef3a54
xchg esp eax
add eax 0x234c8681
enter 0x7586 0x2d
and al 0x30
jmp rwxdata
insb
outsd
arpl [ ebx ] bp
neg dx
pushad
mov edx [ esp ]
mov [ esp + 0x1c ] ebp
clc
xchg bp dx
shrd bp cx 0x1
sbb dl 0x84
lea ebp [ esp + 0x1c ]
test cl 0xd1
adc dx 0xa109
mov [ esp + 0x18 ] eax
jmp rwxdata
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
xchg edx eax
mov [ esp + 0x4 ] rwxdata
pushfd
push [ eax ]
pop [ esp + 0x4 ]
pushfd
mov [ esp + 0x4 ] sp
push [ esp + 0x8 ]
retn 0xc
or eax 0xa4ec4884
mov ah [ esi ]
or al 0x44
pop ebx
outsd
or ebx [ edi - 0x76ce6c3e ]
and al 0xa2
sub ah dh
or eax [ edx ]
stc
scasb [ edi ]
sub [ edx + 0x1e ] ebx
pop edi
pop ebx
cmp ch ch
mov bl 0x4f
xor eax 0x475c5abf
rcl eax 0x4c
add al bl
xlat
int3
ror dx cl
mov [ esp + 0x14 ] ecx
movzx dx cl
adc ecx edx
mov [ esp + 0x10 ] ebx
ror edx 0x1a
mov [ esp + 0xc ] edi
xadd dh cl
mov [ esp + 0x8 ] esi
pushad
shl cl 0x6
mov edx [ ebp + 0x8 ]
xchg ecx esi
mov esi [ ebp + 0xc ]
pop ecx
bsr cx dx
mov ecx [ ebp + 0x14 ]
cmc
or edx edx
mov [ esp + 0x4 ] 0x8f15
push esp
call sub_100fd4e4
sub_100fa4bd
pushad
inc ecx
adc bl 0x1d
xchg ebp eax
shl bl 0x2
mov eax ebp
xor bl bh
jmp rwxdata
push esp
neg bl
mov bl 0x1
pushfd
bt ax cx
jmp rwxdata
test bh 0xa8
xchg [ esp + 0x34 ] esi
lea esi [ ebp + 0xb5b61e ]
jmp rwxdata
xor si 0x4def
mov esi edi
cmc
clc
sub esi eax
jmp rwxdata
pushfd
call sub_1012a18a
sub_100fa4cf
dec bl
inc ecx
not bl
pushad
inc ecx
pushfd
sbb bl bh
dec bl
xchg ebp eax
cmp ah bl
daa
xadd bl ah
ror bl cl
mov eax ebp
adc bl 0x20
cmc
rcr bl cl
mov bl 0x1
push [ esp ]
stc
clc
xchg [ esp + 0x28 ] esi
mov si si
mov esi edi
jmp rwxdata
clc
sub esi eax
call sub_100b669c
sub_100fa6a8
[ edi ] [ esi ]
movsx si cl
pushfd
movsx si bl
mov esi [ esp + 0x50 ]
mov [ esp ] 0x14a9
mov [ esp ] 0xd6
mov [ esp + 0x4 ] dh
lea esp [ esp + 0x54 ]
jmp rwxdata
jge rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
sub_100fa86c
pushfd
lea esp [ esp + 0x30 ]
ja rwxdata
cmp cx 0x61fb
sub edi 0x4
cmc
push [ edi ]
cmc
stc
pushad
cmp edi ebx
jmp rwxdata
call sub_1012eb38
fistp [ edi + 0x75d33b27 ]
int 0x1e
shl [ edx - 0x4404d198 ] cl
mov eax [ edi + 0x52 ]
or [ esi ] al
0x91f1
pushfd
mov [ esp ] cx
lea esp [ esp + 0x24 ]
ja rwxdata
or al 0xbb
loopne rwxdata
sub eax 0x315fade1
sbb bl al
mov bh 0x65
sbb edi ebx
mov eax [ 0x101e447f ]
cli
cmp bl 0xb3
ror al cl
sub ebx edi
shld di si 0xe
cmc
setl al
test dh 0xef
add ebx esp
rol al 0x4
rol al 0x5
mov edi ebx
cmp esp ebx
mov al 0x2e
stc
call sub_100b55db
mov esi 0x1b2c3696
jpe rwxdata
dec [ ebx + edi * 4 ]
sub_100fa98a
cmp ecx [ ebp - 0x8 ]
lea esp [ esp + 0x4 ]
jae rwxdata
jmp rwxdata
push esi
mov [ esp ] bp
lea esp [ esp + 0x4 ]
jbe rwxdata
jbe rwxdata
setb bl
xadd dx si
shld dx bp 0x1
sub eax eax
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
xor di 0xbb79
shl di 0xb
shrd esi esp cl
sub ecx 0x1
pushad
inc edi
bsf si cx
inc si
mov [ ebp - 0x4 ] ecx
lea esp [ esp + 0x20 ]
xchg di cx
call sub_101234c2
jmp rwxdata
xadd di si
lea edi [ edi * 8 - 0x6f4f59af ]
sub ecx 0x1
and si 0xd3b2
shld si cx cl
rol si 0x1
mov [ ebp - 0x4 ] ecx
lea ecx [ ecx - 0x7a974453 ]
neg di
movsx ecx al
mov ecx [ ebp - 0x8 ]
rcl si 0x2
rcl di 0x2
add ecx [ ebp - 0x4 ]
bswap si
stc
and di ax
sbb di 0x6ef1
shr ecx 0x1
cmp cx cx
rol di 0x9
push 0x1783d6b3
mov edi [ ebx + ecx * 4 ]
rol si cl
sar si cl
xor si 0x1205
rcr si cl
add edi eax
pop esi
movzx si bl
lea esi [ 0xffffffffa172b9df ]
mov esi [ ebp + 0xc ]
jmp sub_100b402a
push 0x6c85b163
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
pushfd
mov [ esp ] 0xc6
push [ esp + 0x4 ]
retn 0x8
pushfd
inc esi
pushfd
pushfd
mov [ esp + 0x8 ] dh
pushad
inc edi
push ebp
pushfd
lea esp [ esp + 0x34 ]
jmp sub_100f89c3
sub_100fa9d7
and ah cl
add al 0x20
sub esp 0xfffffffc
call sub_1012b415
pop edx
clc
jbe rwxdata
xor al 0x41
add eax [ eax ]
shl [ ebp - 0x33 ] 0x1
push ss
push ds
cmp ebx ebx
ror [ eax + 0x61 ] 0x3b
push cs
mov dh 0x6f
cmp esp [ eax ]
scasb [ edi ]
and ch bh
mov bh 0xa0
push 0x4c
xor al 0xe2
test al 0x81
sbb [ ecx - 0x17592e53 ] ebp
aad 0xd5
into
xchg ebx eax
inc ebp
dec edi
daa
jb rwxdata
js rwxdata
cmpsb [ esi ] [ edi ]
mov al [ 0xffffffffe2de2997 ]
xor ebp [ edi - 0x4b ]
das
adc edx [ edi + 0xf97ae3c ]
push 0x32170574
jo rwxdata
push edi
test [ ebx + 0x4f ] ecx
imul edi [ ebx - 0x2e521d0c ] 0xffffffeb
aas
bound ebx [ edi ]
sti
sar [ eax + 0x2d ] 0x1
jb rwxdata
cmp [ edi ] 0x41
and [ edx ] ecx
mov ch 0x6d
xchg edi eax
retn 0x507e
push es
shl ebp cl
dec eax
mov cl [ edi ]
xchg ebx eax
aam 0x6
in eax dx
pop ss
fsubp st2
and eax [ 0xffffffffe0c2ba32 ]
in eax 0xaf
aaa
jecxz rwxdata
and al 0xdb
xchg ebx ebx
adc esi [ ecx - 0x52 ]
shl bh 0xb
aam 0x7e
fcom [ ecx + 0x4ba532c6 ]
aad 0xcc
cdq
stosd [ edi ]
xchg esp eax
mov esi 0xeee0b108
mov esi 0x8467faba
call 0x2e533599
sub_100fb3af
lea esp [ esp + 0x28 ]
jb rwxdata
stc
cmc
stc
or al al
push 0x60458158
jmp sub_10123bc1
pushfd
cmp bp 0xf024
pushfd
cmp ah 0x5a
push [ esp + 0x4 ]
pushfd
pushad
lea esp [ esp + 0x30 ]
ja rwxdata
call sub_100b9c34
mov ebx eax
jmp rwxdata
pushfd
mov al [ esp + 0x4 ]
movsx ax cl
lea eax [ ebp - 0x8 ]
mov [ esp ] 0xf07c
mov [ esp + 0x4 ] eax
pushad
lea eax [ eax - 0x7195e75b ]
bswap ax
cwde
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
push [ esp + 0x4 ]
setg al
mov [ esp + 0x20 ] ebx
lahf
push 0xab27223d
bswap eax
jmp rwxdata
mov [ esp + 0x20 ] 0xb
pushad
lea eax [ ecx - 0x5005f520 ]
lahf
lea eax [ rwxdata ]
push [ esp + 0x4 ]
pushfd
push 0x17780fe8
pushfd
mov [ esp + 0x4c ] rwxdata
push ebp
mov [ esp ] 0xf0
push [ eax ]
pop [ esp + 0x4c ]
mov [ esp ] 0xd29
mov [ esp + 0x4 ] 0xdd
mov [ esp ] bh
push 0x49dd101a
push [ esp + 0x50 ]
retn 0x54
sub_100fb4ca
bswap si
push [ esp + 0x4 ]
mov esi [ esp + 0x48 ]
pushfd
mov [ esp + 0x4 ] 0x35
mov [ esp + 0x8 ] al
mov [ esp ] ah
lea esp [ esp + 0x50 ]
jmp rwxdata
jge rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
sub_100fbcb9
mov [ esp ] 0xdd
call sub_100b99bb
and eax 0xbf0161ff
jne rwxdata
and al 0x1c
aam 0x5f
loopne rwxdata
pop eax
or al 0xe8
0x948c
xchg [ edx + ecx * 2 + 0xe ] dl
test [ edi - 0x27 ] esp
xchg esi eax
push cs
0x9aba586e 0x721a
pushfd
pushad
mov [ esp + 0x3c ] 0xbe33da3e
mov [ esp ] 0xb4
pushfd
mov [ esp + 0x4 ] 0x13
lea esp [ esp + 0x40 ]
jmp rwxdata
call j_sub_1014cffe
lea esp [ esp + 0x44 ]
push esp
pushad
call sub_1014c3b3
mov [ esp + 0x24 ] ecx
mov [ esp + 0x4 ] dl
call sub_1014c260
pushfd
mov [ fs : eax ] edx
push [ esp + 0x4 ]
push eax
lea esp [ esp + 0x10 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_100fbd84
pushfd
jmp rwxdata
lea esp [ esp + 0x34 ]
je rwxdata
setb bl
xadd dx si
shld dx bp 0x1
sub eax eax
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
test ah 0x2a
test al ch
cmp esp 0xc6a42772
add eax edi
test ch ch
test esp 0xcad4cc8e
cmp eax edx
pushad
call sub_100b1e87
push ebx
push [ esp ]
mov [ esp + 0x4 ] 0x5be39bb4
call sub_100b999f
sub_100fc3e4
cmp eax 0x7f
push eax
lea esp [ esp + 0x8 ]
ja rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100fa4cf
pushfd
mov [ esp + 0x4 ] 0xd58813f4
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
call sub_1014bdcb
sub_100fcc03
inc ecx
not bl
not bl
call sub_10120d6c
jo rwxdata
scasd [ edi ]
popfd
fistp [ esi + ebx * 4 + 0x21 ]
sbb [ ebp + 0x1d ] 0xfffffff5
mov al 0xce
xor [ edx - 0x7a530e95 ] 0x19
in eax dx
0xaef4
sub_100fcd93
lea esp [ esp + 0xc ]
jae rwxdata
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
cmp al al
rcl di cl
mov ebx eax
shl di cl
test dx 0x4e92
cmp cl ah
stc
mov edi eax
rcr cl 0x6
mov ecx 0x104
clc
call sub_100b2b2a
mov al [ 0xffffffffab5c2c31 ]
add [ ebp - 0x7e758430 ] esi
in al 0xb3
sub bh [ esi ]
dec edx
pop ss
leave
rcr esp 0xaf
in eax 0xae
fadd [ esi ]
call [ ecx ]
push es
sbb [ edi - 0x74 ] 0xc6
aaa
retn 0x41ec
sub_100fceb0
pushfd
pushfd
push [ esp ]
lea esp [ esp + 0x10 ]
je rwxdata
lea esi [ ebp * 2 - 0x297340da ]
xchg esi edi
not cx
jmp rwxdata
lea edi [ ebx + 0x25032a17 ]
sar bl 0x4
add [ ebp - 0x4 ] ecx
bsf bx di
and bh bl
sub ecx 0x8
rcr bh cl
shr ecx 0x1
btr di bx
mov edi [ esi ]
sub bx cx
xor bl 0xd7
add edi [ ebp + 0x10 ]
shl bl 0x5
bsr bx sp
add esi 0x8
and bx 0x2e45
cmc
ror bx cl
stc
mov bx [ esi ]
pushad
pushad
cmp ch 0xbb
shr ebx 0xc
bt dx 0xa
jmp rwxdata
pop esi
pushad
jmp rwxdata
call sub_100b3901
pushfd
mov edi [ esp + 0x24 ]
mov bl 0x58
mov ebx [ esp + 0x28 ]
movsx ecx cl
setne ch
push 0x2cdddd60
mov ecx [ esp + 0x30 ]
mov [ esp ] 0x73
mov esp ebp
jmp rwxdata
pushad
movsx bp bl
mov ebp [ esp + 0x20 ]
push eax
pushfd
mov [ esp + 0x4 ] ch
push [ esp + 0x2c ]
retn 0x40
sub_100fd108
test si 0xea4b
pushad
bt esi ebx
cmp edi ebx
jmp rwxdata
pushfd
call sub_100b5fe4
push edx
sbb dl [ edx - 0x3285be30 ]
xor dh [ ecx - 0x14e4b6a7 ]
mov [ 0xffffffffc10b3761 ] eax
mov [ esp + esi * 2 - 0x4b2a062f ] 0xd6
fldenv [ edx - 0x3fe6ab44 ]
ficom [ ebx + 0x32a40e57 ]
push cs
jpo rwxdata

jae rwxdata
jecxz rwxdata
test eax 0xe3c7fd67
xchg esi eax
cmp bh dh
sub al 0x73
xchg edi eax
adc [ ebx + ebx * 4 - 0x5b ] ah
mov dh 0xac
mov esp 0x2897faae
push 0xffffffc5
mov gs [ edx + edi * 8 ]
retn 0x4fdb
sub_100fd118
lea esp [ esp + 0x28 ]
ja rwxdata
call sub_1012b415
pop edx
clc
jbe rwxdata
sar ah cl
sub ah 0x64
call sub_100fa9d7
bt si bp
clc
add edi eax
jmp rwxdata
xor al 0x41
add eax [ eax ]
shl [ ebp - 0x33 ] 0x1
push ss
mov edi [ edi + ecx * 4 ]
clc
cmc
test edi edi
call sub_100fbd84
jmp rwxdata
push ds
cmp ebx ebx
ror [ eax + 0x61 ] 0x3b
push cs
mov dh 0x6f
cmp esp [ eax ]
scasb [ edi ]
and ch bh
mov bh 0xa0
push 0x4c
xor al 0xe2
test al 0x81
sbb [ ecx - 0x17592e53 ] ebp
aad 0xd5
into
xchg ebx eax
inc ebp
dec edi
daa
jb rwxdata
je rwxdata
js rwxdata
cmpsb [ esi ] [ edi ]
mov al [ 0xffffffffe2de2997 ]
xor ebp [ edi - 0x4b ]
das
adc edx [ edi + 0xf97ae3c ]
push 0x32170574
jo rwxdata
push edi
test [ ebx + 0x4f ] ecx
imul edi [ ebx - 0x2e521d0c ] 0xffffffeb
aas
bound ebx [ edi ]
sti
sar [ eax + 0x2d ] 0x1
jb rwxdata
setb bl
xadd dx si
shld dx bp 0x1
sub eax eax
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
cmc
cmp [ edi ] 0x41
and [ edx ] ecx
mov ch 0x6d
xchg edi eax
retn 0x507e
push es
shl ebp cl
dec eax
mov cl [ edi ]
xchg ebx eax
aam 0x6
in eax dx
pop ss
fsubp st2
and eax [ 0xffffffffe0c2ba32 ]
in eax 0xaf
aaa
jecxz rwxdata
and al 0xdb
xchg ebx ebx
adc esi [ ecx - 0x52 ]
shl bh 0xb
aam 0x7e
fcom [ ecx + 0x4ba532c6 ]
aad 0xcc
cdq
stosd [ edi ]
xchg esp eax
mov esi 0xeee0b108
mov esi 0x8467faba
call 0x2e533599
pushad
add eax edi
cmp esp 0x9ac9bbd0
cmp eax edx
push edi
call sub_10129474
push ebx
arpl [ gs : ebp + 0x72 ] si
xor esi [ edx ]
insb
insb
add [ edi + 0x51 ] dh
xchg edi eax
out 0xa8 eax
jb rwxdata
add [ eax ] al
add cl ch
inc ecx
mov ebx 0x840fffff
mov eax [ 0xfffffffff5ffff71 ]
outsb
sub ch dh
rol [ ebx ] 0x7e
sbb dl bl
mov edx 0xbede2c60
test [ edx + 0x51 ] cl
int3
sub_100fd4b2
cmp di 0x678d
not al
pushfd
jmp rwxdata
cmc
pushad
cmp al [ edi ]
not al
movzx ax cl
lea edi [ edi + 0x1 ]
bswap ax
lea eax [ esp - 0xf7e0569 ]
mov eax [ esp + 0x3c ]
mov [ esp ] bl
jmp rwxdata
lea esp [ esp + 0x40 ]
ja rwxdata
call sub_10124969
iretd
jmp rwxdata
call sub_1012df8c
call 0xffffffffe153c93b
jne rwxdata
jecxz rwxdata
adc eax 0x5d9784d2
sub esi ecx
dec esi
push ss
pand mm5 [ eax - 0xf7cf8c ]
js rwxdata
cmpsb [ esi ] [ edi ]
mov al [ 0xffffffffe2de2997 ]
xor ebp [ edi - 0x4b ]
das
adc edx [ edi + 0xf97ae3c ]
push 0x32170574
jo rwxdata
push ds
cmp ebx ebx
ror [ eax + 0x61 ] 0x3b
push cs
mov dh 0x6f
cmp esp [ eax ]
scasb [ edi ]
and ch bh
mov bh 0xa0
push 0x4c
xor al 0xe2
test al 0x81
sbb [ ecx - 0x17592e53 ] ebp
aad 0xd5
into
xchg ebx eax
inc ebp
dec edi
daa
jb rwxdata
cmp [ edi ] 0x41
and [ edx ] ecx
mov ch 0x6d
xchg edi eax
retn 0x507e
push edi
test [ ebx + 0x4f ] ecx
imul edi [ ebx - 0x2e521d0c ] 0xffffffeb
aas
bound ebx [ edi ]
sti
sar [ eax + 0x2d ] 0x1
jb rwxdata
push es
shl ebp cl
dec eax
mov cl [ edi ]
xchg ebx eax
aam 0x6
in eax dx
pop ss
fsubp st2
and eax [ 0xffffffffe0c2ba32 ]
in eax 0xaf
aaa
and al 0xdb
xchg ebx ebx
adc esi [ ecx - 0x52 ]
shl bh 0xb
aam 0x7e
fcom [ ecx + 0x4ba532c6 ]
aad 0xcc
cdq
stosd [ edi ]
xchg esp eax
mov esi 0xeee0b108
mov esi 0x8467faba
call 0x2e533599
sub_100fd4e4
mov [ esp + 0x1c ] 0xe2
lea esp [ esp + 0x2c ]
je rwxdata
lea esi [ ebp * 2 - 0x297340da ]
xchg esi edi
not cx
jmp rwxdata
test dh 0x88
call j_sub_10124644
pop esi
pushad
jmp rwxdata
pushfd
mov edi [ esp + 0x24 ]
mov bl 0x58
mov ebx [ esp + 0x28 ]
movsx ecx cl
setne ch
push 0x2cdddd60
mov ecx [ esp + 0x30 ]
mov [ esp ] 0x73
mov esp ebp
jmp rwxdata
pushad
movsx bp bl
mov ebp [ esp + 0x20 ]
push eax
pushfd
mov [ esp + 0x4 ] ch
push [ esp + 0x2c ]
retn 0x40
sub_100fd4fb
call sub_100b3d28
arpl [ edi ] di
leave
cmc
movsd [ edi ] [ esi ]
jne rwxdata
fcmovnb st3
push ds
push 0x447f9dd3
push [ esp + 0x38 ]
retn 0x3c
sbb dl bh
mov bh 0x5d
and esp ebp
lodsd [ esi ]
lahf
xchg edi eax
jge rwxdata
loope rwxdata
int1
inc esp
cmp bh [ ebp + 0x73 ]
pop edx
push es
rcr [ eax - 0x52 ] 0x1
inc edx
shr [ eax + 0x18 ] 0xc4
sbb [ edi + 0x7d ] 0xfb
nop
xchg esi eax
mov ebx 0x4b79e33a
daa
dec esi
or dl ch
mov dh 0xa5
and esp ecx
xor eax 0x124056ac
enter 0x75bd 0x4e
cmp ch bl
std
mov esi 0x46c03a6a
inc ebx
shr [ eax - 0x80 ] 0x35
jmp 0xffffffffcba6a369
adc dl [ eax ]
shr [ edx ] 0x8b
jne sub_100fd4e4
lodsb [ esi ]
push esi
inc eax
adc dh dl
enter 0x75bd 0x4e
jle rwxdata
leave
outsb
push ss
cmp [ ecx + 0x7fb7852 ] esp
jmp 0x4027ac33
sbb bl bl
fmul [ edx + 0x3179936d ]
cmp [ ecx ] dl
mov ch 0x42
dec [ ebx - 0x10 ]
sbb bl ah
int3
sub_1011fa66
pushfd
stc
cmp al [ edi ]
movzx ax al
bswap eax
lea edi [ edi + 0x1 ]
lahf
mov eax [ esp + 0x3c ]
pushfd
call sub_1012f84e
loope rwxdata
add bh [ ebx - 0x7239a259 ]
in eax 0x3c
inc esi
or [ ebp - 0x7d87de71 ] di
test [ ecx + 0x7 ] eax
movsd [ edi ] [ esi ]
push 0xfe7d51b2
sbb al 0x15
xchg ebp eax
out 0xe4 al
lahf
cmp esp ebx
or ch ch
pop ss
fdivrp st0
in eax dx
imul esi [ esi - 0x1406c942 ] 0x9b03650c
mov [ eax + eax - 0x21 ] al
out dx eax
ficom [ edi + eax * 8 - 0x64 ]
imul edx [ ebx - 0x7f ] 0x73
int 0xaf
xor bl ah
into
mov esp 0xd93b4a78
fdivr [ edx + 0x51 ]
add edx [ esi ]
0xaed6
sub_1011fc79
call sub_100b560a
fsubr [ esi + esi ]
sub al 0x7f
jae rwxdata
scasb [ edi ]
push ecx
xchg ecx eax
dec esi
jbe rwxdata
sub ebp esp
mov eax [ 0xffffffffc50d0280 ]
mov esi 0xf42c6a88
0x59c3
sti
stc
xchg edx eax
xor [ ebp + 0x26 ] ah
sbb al 0x34
or [ ebp - 0x28e97967 ] edi
jmp rwxdata
sub esi eax
adc bl [ ebp - 0x6d ]
into
into
or eax [ ebp + 0x65fbc6bc ]
stc
scasb [ edi ]
inc eax
mov eax [ 0xffffffffcaf6269d ]
daa
push cs
mov cl 0x81
inc esp
pop edx
sub edi [ eax - 0x3 ]
sub_1011ff35
[ edi ]
call sub_100b18e4
xchg esi eax
push 0x737bf886
int 0xa
insb
inc esi
das
shl ecx cl
lahf
rol dl 0x92
js rwxdata
mov al 0x94
sbb [ ebp - 0x7b3015b2 ] ah
dec esp
mov ebp 0x53a0727f
jge rwxdata
cmp eax [ ebp - 0x10 ]
pushfd
mov [ esp ] 0xf05f7937
lea esp [ esp + 0x24 ]
jae rwxdata
jno rwxdata
aaa
push ecx
stosd [ edi ]
outsd
cmp [ edi ] eax
xchg esp eax
jo rwxdata
cwde
pop ecx
jpo rwxdata
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
call sub_100b4152
or ebx ebx
push ebx
jecxz rwxdata
out 0xc2 eax
mov dl 0xf7
jle rwxdata
or [ edx + edx ] bh
push esi
shl [ ebp + 0x6fb91f3b ] 0x87
in eax dx
jmp rwxdata
js rwxdata
mov [ eax + 0x1e948971 ] gs
sub eax 0x29320a71
xor al 0x73
sub [ edx + edi * 2 - 0x2fb7946e ] 0xffffff85
fwait
dec esi
and bl dl
int1
jmp sub_1012be49
loop rwxdata
into
in al dx
add al 0xcc
mov al [ 0xfffffffffe0f0fab ]
lodsd [ esi ]
push esp
sbb [ ecx + 0x22 ] ebp
mov [ 0xffffffff9a4bef2e ] al
popfd
add bh [ ebx - 0x77 ]
push esp
out 0x2 eax
xor eax 0xe42ae8de
mov [ ebx + 0x38e133af ] dl
loope rwxdata
stosb [ edi ]
mov ebp 0x899f2969
fwait
sbb edx [ esi ]
push ss
jl rwxdata
dec eax
push ecx
push ss
int3
push edi
push esp
add al 0x53
cmp eax 0x1ccd737c
in eax dx
pop es
jle rwxdata
push edx
push esp
cmp al 0xe3
mov bl 0x63
mov bh 0x11
out 0xd8 eax
bound ecx [ ecx ]
0xb39f
cmp ebx [ ebp - 0x2725c186 ]
fsub [ edx + 0x9 ]
fisubr [ edx + 0x17394189 ]
arpl [ edi + 0x62d8e711 ] si
or [ ebx ] edi
popfd
jpe rwxdata
cli
lodsb [ esi ]
mov eax [ 0xffffffff99cf1a0f ]
cmp [ ebx + 0x44 ] ecx
cmp ch [ ecx ]
xor ebp ebx
mov edi 0xac5cc0c5
out 0x1c al
mov ah [ edi + 0x29a90d2f ]
ja rwxdata
cwde
push ebp
adc eax 0x7c3a60a
mov ebx [ esi + 0x5e346ffe ]
fcmovu st0
xor ah dl
sar [ eax + 0x3c545276 ] 0x1
jecxz rwxdata
stosb [ edi ]
mov [ ecx + 0x39 ] eax
pop ss
add [ edi + 0x235a42df ] cl
fild [ edi - 0x23c77a01 ]
test al 0x60
sti
or ebp [ esi ]
mov esp 0x220c5943
in eax 0xf5
sub_10120201
pushad
mov esp esi
push ecx
lea esp [ esp + 0x4 ]
jmp rwxdata
setb bl
xadd dx si
shld dx bp 0x1
sub eax eax
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
sub_10120d08
lea esp [ esp + 0x4 ]
jae rwxdata
jge rwxdata
push 0xfdfb93f9
cmp ax bx
clc
cmp eax 0x7f
pushfd
mov [ esp + 0x4 ] 0x68d7
mov [ esp + 0x4 ] 0xd5
pushfd
lea esp [ esp + 0xc ]
ja rwxdata
push 0xdc12a5dc
inc bl
pushfd
not bl
inc ecx
sbb bl ch
pushfd
test cl dh
rcl bl cl
xchg ebp eax
or ax di
setpo bl
aas
setle bl
mov eax ebp
cmc
setpe bl
or bl 0xb5
add bl 0x48
mov bl 0x1
jmp rwxdata
dec bl
inc ecx
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
pushad
inc bl
inc ecx
lea esp [ esp + 0x20 ]
stc
clc
mov [ esp + 0x8 ] esi
not si
mov esi edi
cmc
sub esi eax
lea esp [ esp + 0x8 ]
jno rwxdata
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
push 0x846fc06e
[ edi ] [ esi ]
jmp sub_100b3ace
pushfd
[ edi ] [ esi ]
movzx si al
lea esp [ esp + 0x4 ]
jl rwxdata
mov si dx
pop esi
pushad
push [ esp ]
mov [ esp + 0x14 ] 0x5a
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
pushad
bswap esi
mov esi [ esp + 0x20 ]
pushad
pushfd
mov [ esp ] al
push ebp
lea esp [ esp + 0x4c ]
jmp rwxdata
jge rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
sub_10120d6c
push [ esp ]
inc ecx
push eax
test cl 0x35
rcr bl cl
and bl dh
mov esi edi
test ax 0x4d03
stc
sub esi eax
mov [ esp + 0x4 ] dh
call sub_1012d18d
dec ah
js rwxdata
insd
jae rwxdata
xchg ebp eax
rcr ax 0xa
cwde
sbb ax 0x8351
ror bl cl
mov eax ebp
cmc
mov bl 0x1
stc
xchg [ esp + 0x30 ] esi
btr si bp
outsd
mov ah 0x60
inc esp
sbb al 0xea
test al 0x75
das
loope rwxdata
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
js rwxdata
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
inc ecx
popfd
imul ecx [ edx + 0x48 ] 0x52
pop ss
and eax 0x81778669
jno rwxdata
fsub [ edx + esi * 2 - 0x390ddbc0 ]
xchg esp eax
pushad
cmp [ ebx ] ah
cmp eax 0xff8ceb97
mov ah 0x94
mov [ esp + ecx + 0x59 ] gs
sahf
movsb [ edi ] gs : [ esi ]
out 0x1d al
mov bh 0xc
xchg [ eax + 0x63c5157d ] esi
or al 0xf7
enter 0x9d41 0x6b
dec edx
dec eax
push edx
mov al 0xad
not [ esi + 0x1e07cbbc ]
sahf
dec edi
jno rwxdata
pop esp
sbb ah ah
test [ ecx + 0x4533f123 ] 0xc84c02b8
cmp [ ebp + 0x5f898362 ] 0x71
xor eax 0x90b0f475
and [ eax + 0x1 ] bh
fdivr st1
rol [ edx ] cl
stosb [ edi ]
mov ch 0xc7
pop edi
0x2c96
pop ecx
pop edi
add dl [ ebx + eax * 8 ]
int 0x2
mov ss [ ebx + 0x6b ]
sbb [ esi ] dh
les ebp [ ebx + 0x2 ]
sub_1012324f
push ebp
pushfd
lea esp [ esp + 0xc ]
je rwxdata
call sub_100b923c
call 0xffffffffbd62e139
jb rwxdata
pushfd
mov [ esp ] 0xa82c
lea edx [ ebx + 0x4 ]
lea esp [ esp + 0x4 ]
mov dl 0x14
out dx al
mov esi 0x15078198
out dx eax
fdivr [ edx + 0x65 ]
test ecx 0xf4209c81
dec eax
mov [ 0xffffffffde022c64 ] al
mov [ 0xffffffffd1fa586c ] al
adc edi [ ebx + 0x20 ]
cld
push ebx
fwait
cmpsb [ gs : esi ] [ edi ]
sub al 0x5b
in eax dx
0xabf33e15 0x1513
or ah dh
enter 0x1367 0xe9
mov dl 0xd4
mov ah 0x11
and [ esi - 0x7a ] ah
mov eax [ 0x51729ede ]
test [ esi - 0x64 ] esi
xlat
lea edx [ eax ]
int 0x81
insd
dec edi
out 0x36 eax
sub eax 0x3cb4b532
mov [ 0xffffffff9332df63 ] al
push esi
add eax 0x99d4c05d
push ebp
cmp [ ebp - 0x9 ] edi
fcmovnb st5
xchg [ eax - 0x6da466ac ] ecx
cmpsb [ esi ] [ edi ]
mov ebp 0x1be4da37
adc ebx [ esi ]
xchg esp eax
xchg ecx eax
or eax 0x6f498010
xor bl [ esi + 0x1f ]
das
int3
xchg si di
push 0x4d14e99a
not di
movzx esi [ edx + 0x1a ]
push edx
pushad
not di
lea esi [ esi + edx + 0x1c ]
mov [ esp + 0x4 ] 0x7af695ad
lea edi [ eax + 0x29d54165 ]
mov edi [ ebp + 0x8 ]
jmp rwxdata
lea esp [ esp + 0x28 ]
call sub_100f89c3
jmp rwxdata
jne rwxdata
cmp dh dl
pushfd
stc
add ecx 0xffffffff
mov [ esp ] bh
mov [ esp ] esp
lea esp [ esp + 0x4 ]
je rwxdata
movzx ax al
push 0x1a94aa72
pushad
mov eax [ edx + 0x8 ]
pushad
push 0x283c0c2f
mov [ esp ] 0x6d
lea esp [ esp + 0x48 ]
jmp rwxdata
bt cx 0x9
add edx 0x11c
push 0x50b21e9
pushad
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
clc
bt di 0x6
jmp rwxdata
jmp rwxdata
or ebx ebx
push ebx
jmp sub_1012be49
sub_10123497
setbe al
pop eax
lea eax [ ebp - 0x4 ]
push edi
mov [ esp + 0x24 ] eax
push edx
movsx ax cl
mov [ esp + 0x24 ] 0xb
call sub_100b18d6
pushfd
stc
cmc
jmp sub_100b2a48
sub_101234c2
pop esi
btc esi 0x1
mov ecx [ ebp - 0x8 ]
push eax
and di bx
add ecx [ ebp - 0x4 ]
shld si sp 0x1
clc
movzx di bl
lea esi [ ecx * 8 - 0x2c9ceb36 ]
shr ecx 0x1
neg si
mov edi [ ebx + ecx * 4 ]
or esi eax
bts si 0x1
test ecx ebx
cmc
add edi eax
movsx si dl
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x4 ]
jmp rwxdata
pushad
mov [ esp + 0x1c ] eax
mov [ esp + 0x8 ] bl
lodsb [ esi ]
jmp rwxdata
call sub_10123594
lea esp [ esp + 0x2c ]
jne rwxdata
and bx 0x2e45
cmc
ror bx cl
stc
mov bx [ esi ]
pushad
pushad
cmp ch 0xbb
shr ebx 0xc
bt dx 0xa
jmp rwxdata
bsr cx dx
mov ecx [ ebp - 0x4 ]
test cl bl
clc
cmp [ ebp + 0x14 ] ecx
jae rwxdata
call sub_100b3901
pushfd
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
pushad
push [ esp ]
lea esp [ esp + 0x24 ]
ja rwxdata
add ch bh
bswap cx
rcl ch cl
rcl ecx cl
mov ecx [ esi + 0x4 ]
cmc
call sub_100b4ed7
cdq
inc edi
sbb esp [ ebx + 0x5fcd728b ]
rol [ ebx + 0x305054b0 ] 0xe6
cmp bl [ ebp - 0x1ce7b1bb ]
mov ebp 0x1f354f6f
inc ebx
int 0xaf
xchg edi eax
popad
jbe rwxdata
pushad
lea esi [ ebp * 8 + 0xab1dd2c ]
pop esi
mov esi [ esp + 0x1c ]
jmp rwxdata
lea esi [ ebp * 2 - 0x297340da ]
xchg esi edi
not cx
jmp rwxdata
int3
iretd
bswap bx
movsx di dl
mov edi [ esp + 0x20 ]
movsx ecx cl
movsx cx al
movzx cx cl
lea ebx [ ecx - 0x3933b805 ]
mov ebx [ esp + 0x24 ]
lea ecx [ esi * 4 - 0x3d9c2f27 ]
setl cl
mov ecx [ esp + 0x28 ]
push [ esp ]
mov esp ebp
jmp rwxdata
pop esi
pushad
jmp rwxdata
bswap bp
pop ebp
pushad
push 0x7363c1ba
push [ esp + 0x24 ]
retn 0x38
pushfd
mov edi [ esp + 0x24 ]
mov bl 0x58
mov ebx [ esp + 0x28 ]
movsx ecx cl
setne ch
push 0x2cdddd60
mov ecx [ esp + 0x30 ]
mov [ esp ] 0x73
mov esp ebp
jmp rwxdata
pushad
movsx bp bl
mov ebp [ esp + 0x20 ]
push eax
pushfd
mov [ esp + 0x4 ] ch
push [ esp + 0x2c ]
retn 0x40
sub_10123594
not al
cmc
stc
mov [ esp + 0xc ] 0x58
push ebx
add al 0x67
call sub_1012d46e
lea esp [ esp + 0x8 ]
jne rwxdata
setb bl
xadd dx si
shld dx bp 0x1
sub eax eax
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
bt ebx 0x10
test ch 0xcb
stc
mov ecx edi
pushfd
inc esi
sub ecx ebx
bts si si
or si si
lea esi [ esp + 0x4 ]
clc
cmp dl bh
sub edi 0x4
bt si 0x6
test bl 0x7b
mov [ esp ] 0xfddb4544
cmp esp edx
push [ edi ]
pop [ esp ]
test cx di
pushfd
pushad
test sp bp
cmp edi ebx
pushfd
lea esp [ esp + 0x28 ]
ja rwxdata
cmp cx 0x61fb
sub edi 0x4
cmc
push [ edi ]
cmc
stc
pushad
cmp edi ebx
jmp rwxdata
pushad
shl al 0x1
test bx si
sub ebx edi
pushad
add esp 0x40
add ebx esp
seto al
movsx di dl
call sub_1014a7bf
insd
push ebp
and [ ebp - 0x43328cbc ] ebx
jo rwxdata
pushfd
mov [ esp ] cx
lea esp [ esp + 0x24 ]
ja rwxdata
das
fnstenv [ ecx - 0x34e1ad48 ]
clc
and [ ecx - 0x6f ] ch
sbb ebx [ esi + 0xd43c076 ]
mov [ ebx - 0x7109e33d ] esi
insd

xor al [ esi + 0x418fb8e0 ]
dec ebx
sbb esi ecx
iretd
or al 0xbb
loopne rwxdata
sub eax 0x315fade1
sbb bl al
mov bh 0x65
sbb edi ebx
mov eax [ 0x101e447f ]
cli
cmp bl 0xb3
ror al cl
sub ebx edi
shld di si 0xe
cmc
setl al
test dh 0xef
add ebx esp
rol al 0x4
rol al 0x5
mov edi ebx
cmp esp ebx
mov al 0x2e
stc
call sub_100b55db
mov esi 0x1b2c3696
jpe rwxdata
dec [ ebx + edi * 4 ]
sub_101239f6
lea esp [ esp + 0x4 ]
jno rwxdata
clc
not al
cmc
rol al 0x2
clc
cmp ch dl
pushfd
call sub_100ba5db
clc
add [ ebx + edi ] edx
add esp 0x8
pushfd
mov [ esp ] dh
push esp
add esi 0x2
jmp sub_100b50b6
clc
not al
stc
push esi
bt ax bx
clc
rol al 0x2
push esp
shr eax 0x1
mov [ esp ] 0x73
push edx
push esp
mov [ esp + 0x4 ] dh
lea esp [ esp + 0x10 ]
je rwxdata
mov di di
pop ebx
not si
lea esi [ edi * 2 - 0x1b68efe ]
mov di 0x801a
pop edi
bswap bp
movsx bp bl
pop esi
movzx bp bl
push 0xc093e7a
push [ esp ]
movsx bp al
mov ebp [ esp + 0x8 ]
pushad
push [ esp + 0x2c ]
retn 0x38
jmp rwxdata
jbe rwxdata
pushfd
pushad
pushfd
adc ecx ecx
push esi
push [ esp + 0xc ]
push 0x8a0c3131
lea esp [ esp + 0x34 ]
jmp rwxdata
push 0xc24f3a17
adc ecx ecx
pushad
lea esp [ esp + 0x24 ]
jmp rwxdata
pushad
inc bl
inc ecx
lea esp [ esp + 0x20 ]
jge rwxdata
push 0xdc12a5dc
inc bl
pushfd
not bl
inc ecx
sbb bl ch
pushfd
test cl dh
rcl bl cl
xchg ebp eax
or ax di
setpo bl
aas
setle bl
mov eax ebp
cmc
setpe bl
or bl 0xb5
add bl 0x48
mov bl 0x1
jmp rwxdata
dec bl
inc ecx
stc
clc
mov [ esp + 0x8 ] esi
not si
mov esi edi
cmc
sub esi eax
lea esp [ esp + 0x8 ]
jno rwxdata
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
push 0x846fc06e
[ edi ] [ esi ]
jmp sub_100b3ace
pushfd
[ edi ] [ esi ]
movzx si al
lea esp [ esp + 0x4 ]
jl rwxdata
mov si dx
pop esi
pushad
push [ esp ]
mov [ esp + 0x14 ] 0x5a
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
pushad
bswap esi
mov esi [ esp + 0x20 ]
pushad
pushfd
mov [ esp ] al
push ebp
lea esp [ esp + 0x4c ]
jmp rwxdata
jge rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
sub_10123ac3
call j_sub_100fd4bf
mov bl 0x73
ror [ edi + 0x73cd7340 ] cl
fisub [ eax ]
jpe rwxdata
xchg edi eax
inc ebx
sub eax 0x5ac4c079
jmp [ ebx + 0x18 ]
sub al 0x2
fisubr [ esi - 0x7bfdc493 ]
mov gs [ eax + 0x71 ]
pmaddwd mmx1 mm5
fwait
jbe rwxdata
lodsd [ esi ]
retn
sub_10123bc1
lea esp [ esp + 0x4 ]
je rwxdata
stc
stc
bt bp bx
or ah ah
jmp rwxdata
bt dx 0x9
test ah 0x60
test di bx
cmp al ah
jmp rwxdata
push edi
lea esp [ esp + 0x4 ]
je rwxdata
jmp rwxdata
pushfd
mov [ esp ] 0xc6
push [ esp + 0x4 ]
retn 0x8
call sub_1012c7d4
push 0x6c85b163
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
pushfd
inc esi
pushfd
pushfd
mov [ esp + 0x8 ] dh
pushad
inc edi
push ebp
pushfd
lea esp [ esp + 0x34 ]
jmp sub_100f89c3
sub_101240b3
pushfd
lea esp [ esp + 0x10 ]
jae rwxdata
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
clc
shrd cx di 0x2
adc bx sp
not di
mov ebx eax
movsx di cl
sar edi 0x18
stc
mov edi eax
and cx ax
shld cx sp cl
neg cx
inc cl
mov ecx 0x104
push edi
bt esp esi
pushad
mov [ esp ] bh
sub al al
stc
cmc
test ax sp
[ edi ]
call sub_100b404b
sub_101240fd
test dh 0x1a
test dh cl
cmp al 0x9
mov [ esp + 0x4 ] ah
pushfd
pushfd
lea esp [ esp + 0x18 ]
ja rwxdata
jmp sub_10120201
pushad
pushad
mov [ esp + 0x8 ] edi
push [ esp ]
lea esp [ esp + 0x44 ]
jmp rwxdata
pushad
pushfd
imul edx edx 0xa
mov [ esp + 0x4 ] 0x56
add edx eax
pushad
push 0x961c481a
push [ esp + 0x8 ]
mov [ esp + 0x8 ] ch
lea esp [ esp + 0x4c ]
jmp sub_1012ce3f
sub_101243c9
bt di 0xe
cmc
jmp rwxdata
cmp ah 0x5
call sub_100fbcb9
jbe rwxdata
pushfd
pushad
pushfd
adc ecx ecx
push esi
push [ esp + 0xc ]
push 0x8a0c3131
lea esp [ esp + 0x34 ]
jmp rwxdata
push 0xc24f3a17
adc ecx ecx
pushad
lea esp [ esp + 0x24 ]
jmp rwxdata
pushad
inc bl
inc ecx
lea esp [ esp + 0x20 ]
jge rwxdata
push 0xdc12a5dc
inc bl
pushfd
not bl
inc ecx
sbb bl ch
pushfd
test cl dh
rcl bl cl
xchg ebp eax
or ax di
setpo bl
aas
setle bl
mov eax ebp
cmc
setpe bl
or bl 0xb5
add bl 0x48
mov bl 0x1
jmp rwxdata
dec bl
inc ecx
stc
clc
mov [ esp + 0x8 ] esi
not si
mov esi edi
cmc
sub esi eax
lea esp [ esp + 0x8 ]
jno rwxdata
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
push 0x846fc06e
[ edi ] [ esi ]
jmp sub_100b3ace
pushfd
[ edi ] [ esi ]
movzx si al
lea esp [ esp + 0x4 ]
jl rwxdata
mov si dx
pop esi
pushad
push [ esp ]
mov [ esp + 0x14 ] 0x5a
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
pushad
bswap esi
mov esi [ esp + 0x20 ]
pushad
pushfd
mov [ esp ] al
push ebp
lea esp [ esp + 0x4c ]
jmp rwxdata
jge rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
sub_10124644
or ecx ecx
push 0x20eec3e8
jmp rwxdata
pushad
push esi
lea esp [ esp + 0x2c ]
je rwxdata
lea esi [ ebp * 2 - 0x297340da ]
xchg esi edi
not cx
jmp rwxdata
cmc
bsr ecx eax
aad 0x31
lea ecx [ esp + 0x3937b5b3 ]
xor ebx ebx
aad 0x36
mov [ ebp - 0x4 ] ebx
bsr ecx eax
pushfd
clc
mov eax edx
movsx cx cl
not ch
shr eax 0x10
add esp 0x4
add ch bh
bswap cx
rcl ch cl
rcl ecx cl
mov ecx [ esi + 0x4 ]
cmc
call sub_100b4ed7
cdq
inc edi
sbb esp [ ebx + 0x5fcd728b ]
rol [ ebx + 0x305054b0 ] 0xe6
cmp bl [ ebp - 0x1ce7b1bb ]
mov ebp 0x1f354f6f
inc ebx
int 0xaf
xchg edi eax
popad
jbe rwxdata
pop esi
pushad
jmp rwxdata
int3
iretd
pushfd
mov edi [ esp + 0x24 ]
mov bl 0x58
mov ebx [ esp + 0x28 ]
movsx ecx cl
setne ch
push 0x2cdddd60
mov ecx [ esp + 0x30 ]
mov [ esp ] 0x73
mov esp ebp
jmp rwxdata
pushad
movsx bp bl
mov ebp [ esp + 0x20 ]
push eax
pushfd
mov [ esp + 0x4 ] ch
push [ esp + 0x2c ]
retn 0x40
sub_10124699
call sub_100b924c
push [ esp + 0x8 ]
mov edi [ edi + ecx * 4 ]
test cl 0xcb
cmc
pushfd
cmc
test edi edi
lea esp [ esp + 0x34 ]
jb rwxdata
pushfd
lea esp [ esp + 0x4 ]
jg rwxdata
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
setb bl
xadd dx si
shld dx bp 0x1
sub eax eax
pushad
test cx 0x2234
add eax edi
bt bx ax
pushad
cmp eax edx
mov [ esp + 0x4 ] 0xd5e9
jmp rwxdata
je rwxdata
test di 0xbeae
push 0x2b20e2c9
add eax edi
bt si 0xb
cmp eax edx
push edi
mov [ esp ] 0x31c8
push [ esp + 0x4 ]
push ecx
lea esp [ esp + 0x10 ]
jb rwxdata
lea esp [ esp + 0x40 ]
jb rwxdata
cmc
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
pushfd
push [ esp ]
cmp eax [ ebp - 0x10 ]
pushfd
pushad
lea esp [ esp + 0x2c ]
jae rwxdata
cmc
stc
pushad
jmp rwxdata
pushad
add eax edi
cmp esp 0x9ac9bbd0
cmp eax edx
push edi
call sub_10129474
push ebx
arpl [ gs : ebp + 0x72 ] si
xor esi [ edx ]
insb
insb
add [ edi + 0x51 ] dh
xchg edi eax
out 0xa8 eax
jb rwxdata
add [ eax ] al
add cl ch
inc ecx
mov ebx 0x840fffff
mov eax [ 0xfffffffff5ffff71 ]
outsb
sub ch dh
rol [ ebx ] 0x7e
sbb dl bl
mov edx 0xbede2c60
test [ edx + 0x51 ] cl
int3
sbb di 0xbef7
mov ebx eax
inc di
bsr cx ax
mov edi eax
bsf cx ax
rcr cx cl
mov ecx 0x104
push edx
xor al al
stc
push [ esp ]
pushfd
[ edi ]
mov [ esp ] cl
mov [ esp + 0x8 ] 0xc3
lea esp [ esp + 0xc ]
jne rwxdata
cmp eax [ ebp - 0x10 ]
pushfd
mov [ esp ] 0xf05f7937
lea esp [ esp + 0x24 ]
jae rwxdata
xchg cx si
movzx si dl
mov ecx edi
pushad
not si
not si
shl si cl
sub ecx ebx
or si 0x3b93
lea esi [ esp + 0x20 ]
cmc
call sub_1012d41c
call sub_100b4152
or ebx ebx
push ebx
jmp sub_1012be49
sub_10124969
stc
cmp ecx [ ebp - 0x4 ]
push ecx
lea esp [ esp + 0x8 ]
jae rwxdata
setb bl
xadd dx si
shld dx bp 0x1
sub eax eax
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
pushad
add ecx 0x1
pushad
call sub_1012dcfb
in eax 0xad
imul edx [ ebx + 0x32 ] 0x73
int 0xaf
adc ebx ebp
sar [ ebp + 0x6d4556d ] cl
jge rwxdata
push ds
sub_10128d59
lea esp [ esp + 0x4 ]
jae rwxdata
pushad
inc bl
inc ecx
lea esp [ esp + 0x20 ]
cmp eax esp
stc
cmp ah 0x5
push 0x9f16fb6d
mov [ esp ] cl
mov [ esp ] esp
lea esp [ esp + 0x4 ]
jae rwxdata
push 0xdc12a5dc
inc bl
pushfd
not bl
inc ecx
sbb bl ch
pushfd
test cl dh
rcl bl cl
xchg ebp eax
or ax di
setpo bl
aas
setle bl
mov eax ebp
cmc
setpe bl
or bl 0xb5
add bl 0x48
mov bl 0x1
jmp rwxdata
dec bl
inc ecx
jge rwxdata
cmp sp di
bt si dx
bt sp si
cmc
cmp eax 0x7f
jmp rwxdata
stc
clc
mov [ esp + 0x8 ] esi
not si
mov esi edi
cmc
sub esi eax
lea esp [ esp + 0x8 ]
jno rwxdata
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
pushad
lea esp [ esp + 0x20 ]
ja rwxdata
push 0x846fc06e
[ edi ] [ esi ]
jmp sub_100b3ace
pushfd
[ edi ] [ esi ]
movzx si al
lea esp [ esp + 0x4 ]
jl rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
pushad
not bl
push [ esp ]
call sub_100fcc03
mov si dx
pop esi
pushad
push [ esp ]
mov [ esp + 0x14 ] 0x5a
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
pushad
bswap esi
mov esi [ esp + 0x20 ]
pushad
pushfd
mov [ esp ] al
push ebp
lea esp [ esp + 0x4c ]
jmp rwxdata
jge rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
sub_10128e63
clc
[ edi ]
pushad
lea esp [ esp + 0x30 ]
jne rwxdata
setb bl
xadd dx si
shld dx bp 0x1
sub eax eax
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
test al 0x8f
mov ecx edi
and si 0x8c07
rcr si cl
btc si 0x5
sub ecx ebx
bt bx 0x3
mov esi esp
stc
sub edi 0x4
jmp rwxdata
jpe rwxdata
bt cx si
push esi
test bl dl
push [ edi ]
pop [ esp ]
jmp rwxdata
bt ax si
pushfd
push [ edi ]
pop [ esp ]
cmp cl 0xeb
cmc
cmp edi ebx
pushad
mov [ esp + 0x4 ] 0x8a
lea esp [ esp + 0x20 ]
ja rwxdata
cmp bx ax
cmp bp 0x9d57
cmp edi ebx
jmp rwxdata
cmp cx 0x61fb
sub edi 0x4
cmc
push [ edi ]
cmc
stc
pushad
cmp edi ebx
jmp rwxdata
setg al
rol al cl
jmp rwxdata
push 0x206284ae
pushfd
mov [ esp ] cx
lea esp [ esp + 0x24 ]
ja rwxdata
shl al 0x6
sub ebx edi
sub edi edx
mov al ch
add ebx esp
call sub_1012d421
pushad
lea esp [ esp + 0x20 ]
ja rwxdata
sub al dh
shr al cl
push 0xffcc7e53
rol al 0x1
sub ebx edi
setl al
shr al cl
lea esp [ esp + 0x4 ]
add ebx esp
call sub_100fd204
dec edi
pmulhw mm3 mmx1
fdivr [ ecx - 0x33 ]
jl rwxdata
or al 0xbb
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
pushad
not bl
push [ esp ]
call sub_100fcc03
mov dl 0x92
inc ebp
rcr [ edx - 0x72f9f2a9 ] 0x1
test eax 0xd21a013f
ja rwxdata
pop ss
loopne rwxdata
sub eax 0x315fade1
sbb bl al
mov bh 0x65
sbb edi ebx
mov eax [ 0x101e447f ]
cli
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
mov dh 0xa1
mov dl 0xe5
push cs
retn
loope rwxdata
loopne rwxdata
cmp bl 0xb3
ror al cl
sub ebx edi
shld di si 0xe
cmc
setl al
test dh 0xef
add ebx esp
rol al 0x4
rol al 0x5
mov edi ebx
cmp esp ebx
mov al 0x2e
stc
call sub_100b55db
mov esi 0x1b2c3696
jpe rwxdata
dec [ ebx + edi * 4 ]
add [ ecx ] cl
stosd [ edi ]
xchg esi eax
inc esp
pop ebx
jmp 0xffffffffb730b3ea
xor [ 0xffffffff91b5d7ff ] edx
xchg ebx eax
jae rwxdata
add eax 0x4230aadf
xchg esi eax
sbb ebx [ ecx ]
je rwxdata
push ds
mov ah 0x58
cld
push ebp
jmp rwxdata
cmpsb [ esi ] [ edi ]
rol [ edi ] cl
pop edi
sbb al 0x32
cmc
pop ds
push edx
pushfd
cmp ecx [ ebp + 0x1c ]
cmp [ ecx + 0x63 ] dh
xor cl [ eax - 0x1 ]
out 0xb3 eax
push ebp
imul ebx ebx 0xa4f0cd79
je rwxdata
loop rwxdata
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
pushfd
xchg ecx eax
outsb
and [ ebx ] 0x73
add [ edx ] cl
push 0x206284ae
adc eax 0x853faa4
adc dl [ esi - 0x1df43b40 ]
mov bl 0x96
mov ah 0x4b
mov al 0x64
add ecx ecx
and al 0x1b
cmp [ esi - 0x4d610607 ] 0x9ad14592
push edi
or eax 0x3fa98d06
add [ edx ] ebx
shl [ edi - 0x7b ] cl
adc al 0x25
cmpsd [ esi ] [ edi ]
jb rwxdata
adc [ eax + 0x32ace1b1 ] bh
push edi
call 0xf31fe92
or al cl
push esi
or ecx ebx
fldcw [ edi + edx - 0x111d7a85 ]
mov esi 0x7e229f5d
shl [ 0x2d7a00f1 ] cl
pop ecx
and dl 0xd
comiss xmm0 [ ebx ]
fadd [ eax - 0x6f ]
xor [ ebp - 0x4d ] edi
pushad
dec edi
cmp [ ecx ] 0x16
add al dh
movsb [ edi ] [ esi ]
retn
rcr [ eax + ebx * 4 - 0x338de188 ] 0xa2
jmp rwxdata
add ecx ecx
sub_10128eb7
mov [ esp + 0x4 ] cx
push [ esp ]
call sub_101243c3
pushfd
mov edi [ esp + 0x24 ]
mov bl 0x58
mov ebx [ esp + 0x28 ]
movsx ecx cl
setne ch
push 0x2cdddd60
mov ecx [ esp + 0x30 ]
mov [ esp ] 0x73
mov esp ebp
jmp rwxdata
pushad
movsx bp bl
mov ebp [ esp + 0x20 ]
push eax
pushfd
mov [ esp + 0x4 ] ch
push [ esp + 0x2c ]
retn 0x40
sub_10129242
lea esp [ esp + 0x4 ]
call sub_100b5f01
pushfd
adc al al
lea esp [ esp + 0x4 ]
jns rwxdata
pushfd
lea esp [ esp + 0x4 ]
jae rwxdata
pushfd
mov [ esp ] bl
mov [ esp ] ah
lea esp [ esp + 0x4 ]
jae rwxdata
call sub_10129242
jmp rwxdata
push edx
lea esp [ esp + 0x4 ]
jne rwxdata
push 0x61c08471
pushad
pushfd
lea esp [ esp + 0x28 ]
jne rwxdata
jmp rwxdata
pushad
mov [ esp ] ch
stosb [ edi ]
mov [ esp ] ax
push [ esp + 0x4 ]
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
push ebp
stosb [ edi ]
push [ esp ]
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
jge rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
sub_10129474
lea esp [ esp + 0x28 ]
jb rwxdata
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
pushad
test bl 0x88
pushfd
cmp eax [ ebp - 0x10 ]
pushfd
pushfd
lea esp [ esp + 0x2c ]
jae rwxdata
call sub_100b3fb4
int1
aad 0xfd
and esi 0x481cd72
test [ edx + esi * 2 - 0x602e03e2 ] cl
mov ecx 0x8ac0c21c
sbb [ esi + 0x29 ] 0xe9
leave
mov ebp [ eax - 0x2009d7bc ]
popad
and ebp edi
push ecx
mov ah 0xc8
add bl al
in al dx
pop ss
jmp rwxdata
imul esi [ eax ] 0xc6fe68b8
aad 0x8a
pop esi
pop edi
jmp rwxdata
leave
test [ edi - 0x7c8aab5 ] eax
mov ah 0x80
inc edx
add cl [ edi + 0x26 ]
lodsb [ esi ]
mov ah 0xbc
in eax 0xa1
jno rwxdata
mov al [ 0x563a0369 ]
and eax 0x90d406ee
sub [ edi ] esp
jle rwxdata
mov eax 0xcc8fb34
pop eax
inc ebx
xor eax edi
mov ebp 0x57aab275
arpl [ esi ] cx
push esp
sub eax 0x95109643
add edi [ eax ]
push ebp
leave
xor al 0xc7
jecxz rwxdata
in eax dx
iretd
sub_1012953d
cmp eax 0x7f
pushfd
push [ esp ]
push 0xd52dd551
lea esp [ esp + 0x34 ]
ja rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
setno bl
inc ecx
inc bl
dec bl
jmp rwxdata
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
not bl
inc ecx
neg bl
and bl dh
sbb bl ah
push esi
xchg ebp eax
btc eax 0xa
add ah 0x5e
movzx ax cl
call sub_100b15eb
int 0x95
inc ebp
sbb eax 0x3ccd736d
sub_10129562
lea esp [ esp + 0x48 ]
call sub_1012b9e6
push ebp
jmp rwxdata
mov esp esi
push 0x2fe468f4
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
sub_1012a192
shld ax di 0x1
shl ax cl
mov [ esp ] edi
xor eax ecx
xor ebx ebx
push 0x2561775f
lea eax [ ebp - 0x8 ]
mov [ esp ] bp
pushad
push ebx
mov [ eax ] ebx
push [ esp ]
xchg [ esp + 0x28 ] eax
not ah
not al
jmp rwxdata
mov [ esp + 0x24 ] ebx
lea eax [ eax + 0x19301f29 ]
call sub_10123497
sub_1012a458
lea esp [ esp + 0x4 ]
jae rwxdata
push ecx
push 0x81b69510
lea esp [ esp + 0x8 ]
call j_sub_100b99df
jmp rwxdata
push ebx
pushfd
sub eax eax
call sub_100ba35a
cmp al 0x9
mov [ esp ] dx
push [ esp ]
push 0x6e8cbeb4
lea esp [ esp + 0xc ]
ja rwxdata
sub ecx ebx
jmp sub_10120201
pushfd
mov [ esp ] cl
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
call sub_100b5719
out dx al
inc edx
fisub [ esp + eax * 8 + 0x69b5cd75 ]
and ebx ebx
mov bl 0x8e
cmp al [ ebx ]
lahf
nop
cmp al [ ecx ]
and [ edx + 0x64 ] 0x3
add eax 0xea429a2b
adc ebx edx
into
pop es
fisub [ cs : eax + 0x593d9b69 ]
push ss
jbe rwxdata
xchg esi eax
pop edi
out 0xc3 eax
inc esi
out 0xc6 al
xchg esp eax
jge rwxdata
pushad
pushfd
imul edx edx 0xa
mov [ esp + 0x4 ] 0x56
add edx eax
pushad
push 0x961c481a
push [ esp + 0x8 ]
mov [ esp + 0x8 ] ch
lea esp [ esp + 0x4c ]
jmp sub_1012ce3f
push ebx
pop esi
fcomp [ ebx ]
add esi eax
sbb [ eax + 0x48ad1355 ] bh
std
cld
imul esp [ eax ] 0xffffffa0
xor [ ebp + 0x72 ] dh
mov edx 0x1e7cab54
or ecx [ ecx ]
adc esi [ 0x5a0522a3 ]
push ss
out 0xcc al
mov ah 0x52
into
shr [ edi + 0x67fe2266 ] 0xc7
xchg edi eax
cmp al [ eax - 0x3d ]
mov cl 0x25
xchg [ ebp + 0x4f ] eax
int3
stc
xlat
shl [ ecx + 0x3f5f468e ] cl
adc al 0xa6
mov eax [ 0xfffffffff7462a6b ]
rdmsr
stosb [ edi ]
cmp edx [ ebx + 0x5e ]
sub_1012b1a6
mov edi edx
rcl al cl
cmc
mov ecx edi
stc
rcl al 0x1
mov al 0xc5
mov al [ ecx ]
pushad
mov ah al
jmp rwxdata
not al
stc
ror al 0x6
bt cx cx
pushad
neg al
jmp rwxdata
stc
sub al 0x67
mov [ esp ] 0x28
clc
jmp rwxdata
test ch bh
not al
test bp bx
mov [ ecx ] al
push 0xd1f2a4f3
mov [ esp + 0xc ] 0x45
mov [ esp ] dh
bt bx bp
add ecx 0x1
cmp ah 0xbb
cmp ax 0xeb84
test ah ah
pushfd
call sub_1012090e
in eax dx
inc ecx
dec ebx
pop ss
fnstcw [ ecx - 0x33 ]
inc edx
test al 0xa8
outsb
cmp esi edi
int3
sub_1012b455
pushfd
lea esp [ esp + 0x18 ]
call sub_100b5f01
call sub_100b99c0
mov esi 0xc678469c
jb rwxdata
and al 0xcf
push edi
push 0x7bb1fe22
clc
sub esi eax
pushfd
[ edi ] [ esi ]
pushfd
mov esi [ esp + 0x30 ]
push eax
lea esp [ esp + 0x38 ]
jmp rwxdata
fstp [ ecx + 0xd0f47ed ]
jmp 0x6093434a
jge rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
sub_1012b9e6
call sub_1012f853
inc ebp
add eax 0x72c24539
int 0xbd
sub dl bh
lodsd [ esi ]
jpo rwxdata
fidiv [ eax + 0xf576c90 ]
paddw mm7 [ ecx - 0xacaa475 ]
jne rwxdata
push es
pop ss
popfd
int3
mov ebx 0x3d0b7c4a
sti
0xf85ef852 0xc53b
0xc0d7779f 0x9ee7
sub_1012bb85
cmc
movzx ecx [ edi + ecx * 2 ]
push 0xf6f1b418
shl di cl
mov edi [ edx + 0x1c ]
clc
jmp rwxdata
bt si bp
clc
add edi eax
jmp rwxdata
mov edi [ edi + ecx * 4 ]
clc
cmc
test edi edi
call sub_100fbd84
jmp rwxdata
je rwxdata
setb bl
xadd dx si
shld dx bp 0x1
sub eax eax
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
cmc
pushad
add eax edi
cmp esp 0x9ac9bbd0
cmp eax edx
push edi
call sub_10129474
push ebx
arpl [ gs : ebp + 0x72 ] si
xor esi [ edx ]
insb
insb
add [ edi + 0x51 ] dh
xchg edi eax
out 0xa8 eax
jb rwxdata
add [ eax ] al
add cl ch
inc ecx
mov ebx 0x840fffff
mov eax [ 0xfffffffff5ffff71 ]
outsb
sub ch dh
rol [ ebx ] 0x7e
sbb dl bl
mov edx 0xbede2c60
test [ edx + 0x51 ] cl
int3
sub_1012bcbb
pushfd
test bl dl
cmp ah 0x85
xor eax eax
push eax
pushad
mov [ esp + 0xc ] 0xe7
lea esp [ esp + 0x2c ]
call sub_100b5f01
call sub_1012d192
xor al [ edx ]
das
popad
mov esi 0xb0f4cd72
xchg esi eax
jpe rwxdata
xor eax 0x9bd8fcce
pop ecx
or [ edx - 0x2a1be1b0 ] ebp
imul ecx esi 0xb137b00
rcr [ ebp - 0x13f3bb87 ] 0x1
retn 0x53bf
sub_1012be49
call sub_1012d3fb
shr ah cl
aas
mov eax [ ebp + 0x8 ]
stc
bt ecx 0x5
stc
test eax eax
pushad
call sub_1012b007
add [ eax ] al
inc edi
je rwxdata
popad
jo rwxdata
sub dl [ es : ebx - 0x75 ]
mov [ ebp - 0x54707324 ] al
jb rwxdata
aaa
fstp [ esp ]
neg [ edi ]
ja rwxdata
adc cl [ ecx ]
stosd [ edi ]
mov edx [ esi ]
xor al 0xb
test bh 0xb9
0x2e7a7443 0x1cae
lahf
loope rwxdata
push ebx
mov ecx [ eax - 0x7073237b ]
stosd [ edi ]
dec ecx
outsb
outsw
add bh al
add al 0x24
dec edi
xchg esp eax
call 0xffffffffd7795ad9
add al 0x24
cmp eax 0x2404c7a8
add al 0xd1
idiv [ edi - 0x64 ]
mov [ esp ] al
lea esp [ esp + 0x4 ]
jmp rwxdata
mov al [ 0xfffffffff1d9562a ]
0x2fa3
adc dl ah
pop esp
mov bl 0xcf
pushfd
pop eax
lodsb [ esi ]
mov al [ 0x540dfdf8 ]
mov dh [ edx - 0x56 ]
movsd [ edi ] [ esi ]
fisub [ eax + 0x167301e ]
xchg [ edi + ebx * 8 + 0x23054d8b ] al
pop ecx
xor eax [ ecx + ebx * 2 ]
push cs
salc
add si [ edx - 0x5b ]
pushad
pushad
mov [ esp + 0x3c ] edx
push eax
pushfd
pop [ esp + 0x3c ]
push ebx
push 0xbcf07293
lea esp [ esp + 0x44 ]
push esp
jmp rwxdata
fnstenv [ edi - 0x61328d45 ]
jpo rwxdata
pop eax
and eax 0xa7e4ce2b
iretd
pushfd
call $+5
pushfd
mov [ esp + 0x8 ] eax
jmp rwxdata
and al [ edx + ecx * 2 + 0x23a83056 ]
push ss
xchg cl ah
int3
add edx ebp
lodsd [ esi ]
lahf
mov ah 0x46
pop ecx
imul eax ebp 0xffffff9d
imul esi [ ecx ] 0xfffffffd
leave
dec esp
loop rwxdata
push edi
pushfd
mov [ esp + 0xc ] edi
pushad
pushfd
mov [ esp + 0x2c ] ebp
jmp rwxdata
jb rwxdata
push 0x12
add al dh
popad
add edi ebp
cmp eax [ ebx - 0x7587697f ]
lea esp [ esp + 0x2c ]
jns rwxdata
ror [ ecx + edx * 4 + 0x58645251 ] 0x1
sbb [ ecx + eax * 2 + 0x2676ea42 ] 0x2a
or [ ebx + 0xb34168b ] ebp
ror [ ebx - 0x1d574db ] 0xae
popad
in eax 0xa1
jae rwxdata
push 0xb1fac14a
pushad
mov [ esp + 0x20 ] esi
push 0xf590b208
pushad
mov [ esp + 0x40 ] ecx
call sub_1014b370
clc
add ax 0xaa5f
pushad
call sub_1014ad38
and cx 0xd622
test dx 0xdac8
sub al 0xce
jmp sub_1014cdae
pushfd
mov [ esp ] esi
call sub_1014c902
push 0x6fc34dc9
mov [ esp ] edi
pushfd
pushad
mov [ esp + 0x20 ] ebp
jmp rwxdata
pushfd
mov [ esp + 0x20 ] esi
mov [ esp ] 0x43
jmp rwxdata
mov [ esp + 0xc ] ch
mov [ esp + 0x1c ] ecx
pushfd
mov [ esp + 0x1c ] ebx
mov [ esp ] eax
lea esp [ esp + 0x1c ]
jmp sub_1014be14
_TLS_Entry_0
pushfd
mov [ esp ] 0x5be3324f
push 0x9879e9e0
lea esp [ esp + 0x4 ]
ja rwxdata
call sub_1012ce68
pushfd
mov [ esp ] al
mov [ esp ] 0x4a62e86f
push 0x59b94f74
push ebp
lea esp [ esp + 0x8 ]
jmp rwxdata
inc ebx
add eax 0x5d4706ea
xor ch al
jb rwxdata
sub eax 0xa4adf4b
jecxz rwxdata
pushad
pushad
mov [ esp + 0x3c ] edx
push eax
pushfd
pop [ esp + 0x3c ]
push ebx
push 0xbcf07293
lea esp [ esp + 0x44 ]
push esp
jmp rwxdata
mov esp 0xbfe62866
pop ebp
xor al 0xf8
les ebx [ edx + 0x361c2f97 ]
insd
popfd
aam 0x67
pop ebp
out 0xc4 eax
int1
movsd [ edi ] [ esi ]
stc
push ebx
xor edx [ esi + eax * 4 ]
jpe rwxdata
fcmovbe st2
mov edx 0xe9374078
pop ecx
adc edi eax
idiv [ ebp + esi * 2 - 0x1de5a133 ]
int1
xchg ecx eax
adc bl dl
sar [ edx - 0x16c8bf88 ] cl
add eax [ eax ]
sub al 0xc8
pop edx
sbb ch [ ebx ]
mov ebp 0xb06e162b
in al 0xf4
push 0xffffffd5
sub [ edi ] 0x24246e59
imul edi [ edx - 0x2 ] 0xa986eb73
jne rwxdata
pushfd
call $+5
pushfd
mov [ esp + 0x8 ] eax
jmp rwxdata
retn 0x4b2d
push ebx
aam 0xb8
bound esp [ eax ]
hlt
clc
daa
sub [ ecx + eax * 8 ] ecx
fwait
cmp eax 0xea4427eb
pushfd
jbe rwxdata
push edi
pushfd
mov [ esp + 0xc ] edi
pushad
pushfd
mov [ esp + 0x2c ] ebp
jmp rwxdata
push ss
outsb
mov al 0xe4
hlt
cmp [ edi - 0x7b ] ch
xchg esi eax
sbb cl [ edi + 0x5d ]
jmp rwxdata
and [ esi ] ecx
salc
and eax [ ebx ]
inc esp
mov [ edi + 0x3faa3607 ] ss
inc ebp
sbb [ edx ] ah
leave
loope rwxdata
xor [ ebx - 0x5e8258f3 ] edx
outsb
nop
mov edi 0x758e9a00
out dx eax
out dx eax
push ecx
aas
test edi ebp
mov edi 0x548f3ca2
adc [ esi - 0x27493aef ] cl
dec edx
pop ds
cmp al 0x5d
push esi
movsd [ edi ] [ esi ]
loop rwxdata
enter 0x1a5a 0x2b
lea esp [ esp + 0x2c ]
jns rwxdata
daa
jecxz rwxdata
push 0xb1fac14a
pushad
mov [ esp + 0x20 ] esi
push 0xf590b208
pushad
mov [ esp + 0x40 ] ecx
call sub_1014b370
clc
add ax 0xaa5f
pushad
call sub_1014ad38
and cx 0xd622
test dx 0xdac8
sub al 0xce
jmp sub_1014cdae
pushfd
mov [ esp ] esi
call sub_1014c902
push 0x6fc34dc9
mov [ esp ] edi
pushfd
pushad
mov [ esp + 0x20 ] ebp
jmp rwxdata
push ebx
aas
pop esi
push esp
call 0x89e16fed
mov ecx 0xbf7beac4
mov dh 0x8c
pop esp
fdivp st5
dec ecx
fild [ ebx + 0x10 ]
xchg esi eax
mov ch [ edx ]
inc eax
jae rwxdata
pushfd
mov [ esp + 0x20 ] esi
mov [ esp ] 0x43
jmp rwxdata
or al 0xca
push eax
adc bh [ ebp + esi * 2 - 0x33f7bc33 ]
mov al [ 0x44f72b6a ]
cmc
stc
aas
push es

mov [ esp + 0xc ] ch
mov [ esp + 0x1c ] ecx
pushfd
mov [ esp + 0x1c ] ebx
mov [ esp ] eax
lea esp [ esp + 0x1c ]
jmp sub_1014be14
sub_1012ca36
call sub_1012f583
call sub_100b2a60
mov ebx 0xb125594b
jb rwxdata
mov eax 0x8ec9a9fe
mov al [ 0xffffffff9c0a11db ]
sub al [ 0xffffffffc5323def ]
sar al 0x18
pop esi
loope rwxdata
xor ch dh
lodsd [ esi ]
pop ebp
xor ecx [ edi ]
mov edx 0x1c194b4a
mov dl 0xa1
jg rwxdata
inc esi
adc dh 0xca
ja rwxdata
mov [ edx + 0x7765cad6 ] 0x3e
ror dh cl
or al 0x48
mov [ 0xebdd745 ] eax
popad
int1
cdq
outsb
xchg edx eax
mov ch 0xf4
add eax 0xf53393b1
jno rwxdata
add ecx [ eax + 0x76aae422 ]
inc esi
xor eax 0x2319c5f9
pushfd
adc [ esi ] al
cmc
push ds
adc ah bl
xchg edi eax
jno rwxdata
popfd

jns rwxdata
les edx [ edx - 0x797d10cf ]
rol ch 0x89
fld [ ecx + 0x277b99ed ]
out dx eax
add [ esi - 0x26763a40 ] 0x81
in eax dx
cdq
jpo rwxdata
retn
lea edx [ esi + ecx * 8 - 0x63 ]
outsb
jbe rwxdata
and al 0xf6
scasb [ edi ]
int 0x92
dec eax
loopne rwxdata
fidivr [ edi + ebx * 2 - 0x19 ]
and al 0x1a
sbb eax [ ebx + 0x5f35fe64 ]
pop esi
push es
0xe29eb8a3 0x258a
jb rwxdata
arpl di ax
cld
cmp [ ecx - 0x248626f8 ] edx
retn 0x6bb8
outsd
jne rwxdata
outsb
insd
outsb
je rwxdata
adc dl [ ebp - 0x9 ]
dec edi
jae rwxdata
dec eax
popad
outsb
insb
inc ecx
add [ eax + 0x20 ] bh
pop edi
xor [ eax - 0x6d7328e ] esi
adc ecx [ esi - 0x2b2cecd8 ]
push 0xa7ef3a54
xchg esp eax
add eax 0x234c8681
enter 0x7586 0x2d
and al 0x30
jmp rwxdata
insb
outsd
arpl [ ebx ] bp
neg dx
pushad
mov edx [ esp ]
mov [ esp + 0x1c ] ebp
clc
xchg bp dx
shrd bp cx 0x1
sbb dl 0x84
lea ebp [ esp + 0x1c ]
test cl 0xd1
adc dx 0xa109
mov [ esp + 0x18 ] eax
jmp rwxdata
xchg edx eax
mov [ esp + 0x4 ] rwxdata
pushfd
push [ eax ]
pop [ esp + 0x4 ]
pushfd
mov [ esp + 0x4 ] sp
push [ esp + 0x8 ]
retn 0xc
or eax 0xa4ec4884
mov ah [ esi ]
or al 0x44
pop ebx
outsd
or ebx [ edi - 0x76ce6c3e ]
and al 0xa2
sub ah dh
or eax [ edx ]
stc
scasb [ edi ]
sub [ edx + 0x1e ] ebx
pop edi
pop ebx
cmp ch ch
mov bl 0x4f
xor eax 0x475c5abf
rcl eax 0x4c
add al bl
xlat
int3
jge rwxdata
ror dx cl
mov [ esp + 0x14 ] ecx
movzx dx cl
adc ecx edx
mov [ esp + 0x10 ] ebx
ror edx 0x1a
mov [ esp + 0xc ] edi
xadd dh cl
mov [ esp + 0x8 ] esi
pushad
shl cl 0x6
mov edx [ ebp + 0x8 ]
xchg ecx esi
mov esi [ ebp + 0xc ]
pop ecx
bsr cx dx
mov ecx [ ebp + 0x14 ]
cmc
or edx edx
mov [ esp + 0x4 ] 0x8f15
push esp
call sub_100fd4e4
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
sub_1012cb53
pushfd
pushad
pushfd
stosb [ edi ]
pushfd
lea esp [ esp + 0x30 ]
jmp rwxdata
jge rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
sub_1012ce51
lea esp [ esp + 0x50 ]
jne rwxdata
stc
rcl al 0x1
mov al 0xc5
mov al [ ecx ]
pushad
mov ah al
jmp rwxdata
call sub_100f958d
not al
stc
ror al 0x6
bt cx cx
pushad
neg al
jmp rwxdata
stc
sub al 0x67
mov [ esp ] 0x28
clc
jmp rwxdata
test ch bh
not al
test bp bx
mov [ ecx ] al
push 0xd1f2a4f3
mov [ esp + 0xc ] 0x45
mov [ esp ] dh
bt bx bp
add ecx 0x1
cmp ah 0xbb
cmp ax 0xeb84
test ah ah
pushfd
call sub_1012090e
in eax dx
inc ecx
dec ebx
pop ss
fnstcw [ ecx - 0x33 ]
inc edx
test al 0xa8
outsb
cmp esi edi
int3
sub_1012cffb
pushad
mov [ esp ] cl
cmpsd [ esi ] [ edi ]
aas
in al 0xc1
inc edi
out dx eax
mov dl 0xee
xchg ebx eax
dec edi
aaa
jg rwxdata
add ecx eax
or ah [ esi + edi + 0x2f ]
fst st3
mov ebp 0xa9e3308e
xchg edi eax
jmp rwxdata
jbe rwxdata
bt ecx esp
cmp [ edi - 0x1 ] 0x0
call sub_100b36da
outsb
and ch [ edx + edx * 2 ]
stosd [ edi ]
jb rwxdata
cwde
shr [ 0x657375d4 ] 0x72
xor esi [ edx ]
insb
insb
add [ eax - 0x78 ] ah
or al 0x24
int3
adc esp edi
movsd [ edi ] [ esi ]
jle rwxdata
adc [ ecx + 0x23 ] al
or [ eax ] ebp
add eax 0x71508293
sti
push ecx
xchg esi eax
mov ebx 0x26c73d60
xor al al
sub_1012d192
lea esp [ esp + 0x4 ]
jae rwxdata
pushfd
lodsb [ esi ]
call sub_100fa2a5
fisubr [ eax + 0x72e3803e ]
int 0xd5
0x71b774c 0xc2d9
mov dh [ edx + 0x4e ]
xor [ eax ] bl
push ss
hlt
pushad
mov [ esp + 0x4 ] dh
mov bl 0x2
setns al
inc ecx
mov [ esp + 0x1c ] bh
mov al 0x10
lea esp [ esp + 0x20 ]
call sub_10129242
sub_1012d1b6
pushad
mov [ esp + 0x1c ] dl
lea esp [ esp + 0x28 ]
je rwxdata
cmc
xchg di cx
jmp sub_1012b1a6
bt sp ax
sub al 0x30
clc
cmp al 0x9
jmp rwxdata
jpe rwxdata
call sub_1012d45d
pushfd
call sub_1012db56
clc
sub esi eax
call sub_100b669c
pushad
lea esp [ esp + 0x20 ]
ja rwxdata
jmp sub_10120201
pushad
pushfd
imul edx edx 0xa
mov [ esp + 0x4 ] 0x56
add edx eax
pushad
push 0x961c481a
push [ esp + 0x8 ]
mov [ esp + 0x8 ] ch
lea esp [ esp + 0x4c ]
jmp sub_1012ce3f
sub_1012d3fb
lea esp [ esp + 0x8 ]
je rwxdata
jmp rwxdata
push esp
jmp rwxdata
pop edi
movzx si dl
bswap si
pop esi
push 0x7a6cb50
call sub_10123b97
fnsave [ ebx + 0x9 ]
pop ecx
rwxdata
mov esi eax
call sub_100f976a
lodsd [ esi ]
inc ecx
cld
mov eax 0x28446e80
hlt
sub_1012d421
mov edi ebx
clc
sub al 0x58
shl al 0x5
test cx 0x992d
mov al 0x2e
cmp ah 0xb8
pushfd
test bx ax
[ edi ]
mov [ esp + 0x4 ] 0xc0
lea esp [ esp + 0x8 ]
jne rwxdata
jmp sub_10120201
movzx ax dl
cwde
not al
mov [ edi - 0x1 ] 0x0
cwde
lahf
mov ah dl
push ebx
jmp j_sub_100f8793
sub_1012d46e
mov [ esp ] 0x359060b8
neg al
push [ esp ]
jmp rwxdata
rol al 0x6
push 0x41f622de
call sub_100b8d69
push es
test al 0x3a
sub al dh
jne rwxdata
rcl ah 0xd
or edx esi
call 0xffffffffd6d824e4
in eax dx
and eax 0xef55ae40
pop esi
push es
sub [ edx ] esi
insb
shl [ ecx + 0x78282b5d ] cl
add eax 0xc0c0971d
push es
sub eax 0x278bba06
sbb [ ecx + eax * 4 - 0x3907cdbb ] ah
or [ eax + 0x200d5b4e ] 0xec
fsub [ esi - 0x4c2876e ]
shl [ ecx - 0x1e65df4e ] 0x1
loope rwxdata
jmp rwxdata
dec edi
mov esp 0xe465070
jmp 0x86b1bbd9
arpl [ 0xffffffffcd75eeb1 ] cx
movsb [ edi ] [ esi ]
pushad
and dh dl
0x82b8
sub_1012db56
push [ esp ]
lea esp [ esp + 0xc ]
jne rwxdata
setb bl
xadd dx si
shld dx bp 0x1
sub eax eax
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
cmc
mov ecx edi
bswap si
sub ecx ebx
lea esi [ eax - 0x74838664 ]
pushad
lea esi [ esp + 0x20 ]
cmc
cmp dh dl
sub edi 0x4
jmp rwxdata
push [ edi ]
pop [ esp + 0x1c ]
test dl 0xd4
call sub_100b52a6
sub_1012dcc9
lea esp [ esp + 0xc ]
jb rwxdata
stc
bt esp 0x1
call sub_100fa98a
pushfd
pushad
jmp rwxdata
cmc
cmc
cmp ah 0x73
stc
cmp [ edi - 0x1 ] 0x0
pushad
lea esp [ esp + 0x20 ]
jne rwxdata
lea esp [ esp + 0x24 ]
jne rwxdata
jmp rwxdata
clc
or di di
rcl di cl
sar di 0x1
mov edi [ edx + 0x24 ]
pushfd
jmp rwxdata
jmp rwxdata
pushfd
pushfd
stosb [ edi ]
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushad
mov [ esp + 0x1c ] eax
mov [ esp + 0x8 ] bl
lodsb [ esi ]
jmp rwxdata
bt ax 0xf
bt ecx edx
add edi eax
stc
pushfd
push [ esp + 0x4 ]
mov [ esp ] 0x3c
movzx ecx [ edi + ecx * 2 ]
mov di sp
mov edi [ edx + 0x1c ]
pushad
cmc
stc
add edi eax
stc
bt di bp
jmp rwxdata
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
jge rwxdata
call sub_10123594
lea esp [ esp + 0x2c ]
jne rwxdata
push [ esp + 0x8 ]
mov edi [ edi + ecx * 4 ]
test cl 0xcb
cmc
pushfd
cmc
test edi edi
lea esp [ esp + 0x34 ]
jb rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
and bx 0x2e45
cmc
ror bx cl
stc
mov bx [ esi ]
pushad
pushad
cmp ch 0xbb
shr ebx 0xc
bt dx 0xa
jmp rwxdata
bsr cx dx
mov ecx [ ebp - 0x4 ]
test cl bl
clc
cmp [ ebp + 0x14 ] ecx
jae rwxdata
pushfd
lea esp [ esp + 0x4 ]
jg rwxdata
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
call sub_100b3901
pushfd
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
pushad
push [ esp ]
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
setb bl
xadd dx si
shld dx bp 0x1
sub eax eax
pushad
test cx 0x2234
add eax edi
bt bx ax
pushad
cmp eax edx
mov [ esp + 0x4 ] 0xd5e9
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
add ch bh
bswap cx
rcl ch cl
rcl ecx cl
mov ecx [ esi + 0x4 ]
cmc
call sub_100b4ed7
cdq
inc edi
sbb esp [ ebx + 0x5fcd728b ]
rol [ ebx + 0x305054b0 ] 0xe6
cmp bl [ ebp - 0x1ce7b1bb ]
mov ebp 0x1f354f6f
inc ebx
int 0xaf
xchg edi eax
popad
jbe rwxdata
pushad
lea esi [ ebp * 8 + 0xab1dd2c ]
pop esi
mov esi [ esp + 0x1c ]
jmp rwxdata
lea esi [ ebp * 2 - 0x297340da ]
xchg esi edi
not cx
jmp rwxdata
je rwxdata
test di 0xbeae
push 0x2b20e2c9
add eax edi
bt si 0xb
cmp eax edx
push edi
mov [ esp ] 0x31c8
push [ esp + 0x4 ]
push ecx
lea esp [ esp + 0x10 ]
jb rwxdata
lea esp [ esp + 0x40 ]
jb rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
int3
iretd
bswap bx
movsx di dl
mov edi [ esp + 0x20 ]
movsx ecx cl
movsx cx al
movzx cx cl
lea ebx [ ecx - 0x3933b805 ]
mov ebx [ esp + 0x24 ]
lea ecx [ esi * 4 - 0x3d9c2f27 ]
setl cl
mov ecx [ esp + 0x28 ]
push [ esp ]
mov esp ebp
jmp rwxdata
pop esi
pushad
jmp rwxdata
cmc
push esp
mov edx [ esp + 0x4 ]
pop esi
mov ebx [ esp + 0x4 ]
lea edi [ eax + 0x74006c7a ]
call sub_100b49ed
pushfd
push [ esp ]
cmp eax [ ebp - 0x10 ]
pushfd
pushad
lea esp [ esp + 0x2c ]
jae rwxdata
cmc
stc
pushad
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
bswap bp
pop ebp
pushad
push 0x7363c1ba
push [ esp + 0x24 ]
retn 0x38
pushfd
mov edi [ esp + 0x24 ]
mov bl 0x58
mov ebx [ esp + 0x28 ]
movsx ecx cl
setne ch
push 0x2cdddd60
mov ecx [ esp + 0x30 ]
mov [ esp ] 0x73
mov esp ebp
jmp rwxdata
pushad
add eax edi
cmp esp 0x9ac9bbd0
cmp eax edx
push edi
call sub_10129474
push ebx
arpl [ gs : ebp + 0x72 ] si
xor esi [ edx ]
insb
insb
add [ edi + 0x51 ] dh
xchg edi eax
out 0xa8 eax
jb rwxdata
add [ eax ] al
add cl ch
inc ecx
mov ebx 0x840fffff
mov eax [ 0xfffffffff5ffff71 ]
outsb
sub ch dh
rol [ ebx ] 0x7e
sbb dl bl
mov edx 0xbede2c60
test [ edx + 0x51 ] cl
int3
sbb di 0xbef7
mov ebx eax
inc di
bsr cx ax
mov edi eax
bsf cx ax
rcr cx cl
mov ecx 0x104
push edx
xor al al
stc
push [ esp ]
pushfd
[ edi ]
mov [ esp ] cl
mov [ esp + 0x8 ] 0xc3
lea esp [ esp + 0xc ]
jne rwxdata
cmp eax [ ebp - 0x10 ]
pushfd
mov [ esp ] 0xf05f7937
lea esp [ esp + 0x24 ]
jae rwxdata
pushad
movsx bp bl
mov ebp [ esp + 0x20 ]
push eax
pushfd
mov [ esp + 0x4 ] ch
push [ esp + 0x2c ]
retn 0x40
xchg cx si
movzx si dl
mov ecx edi
pushad
not si
not si
shl si cl
sub ecx ebx
or si 0x3b93
lea esi [ esp + 0x20 ]
cmc
call sub_1012d41c
call sub_100b4152
or ebx ebx
push ebx
jmp sub_1012be49
sub_1012dcfb
mov [ esp ] 0xc6
push [ esp + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ esp ] 0xbdbccff0
pushfd
mov [ esp + 0x4 ] 0xffa0
lea esp [ esp + 0x4c ]
jmp rwxdata
xchg di cx
call sub_101234c2
jmp rwxdata
push 0x6c85b163
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
pushfd
mov [ esp ] 0xc6
push [ esp + 0x4 ]
retn 0x8
pushfd
inc esi
pushfd
pushfd
mov [ esp + 0x8 ] dh
pushad
inc edi
push ebp
pushfd
lea esp [ esp + 0x34 ]
jmp sub_100f89c3
_start
pushfd
jmp rwxdata
mov [ esp ] 0x5be8944f
pushfd
mov [ esp ] 0xa83d
mov [ esp ] 0x7ff6d104
pushfd
mov [ esp ] al
lea esp [ esp + 0x4 ]
jmp rwxdata
pushad
pushad
mov [ esp + 0x3c ] edx
push eax
pushfd
pop [ esp + 0x3c ]
push ebx
push 0xbcf07293
lea esp [ esp + 0x44 ]
push esp
jmp rwxdata
pushfd
call $+5
pushfd
mov [ esp + 0x8 ] eax
jmp rwxdata
push edi
pushfd
mov [ esp + 0xc ] edi
pushad
pushfd
mov [ esp + 0x2c ] ebp
jmp rwxdata
lea esp [ esp + 0x2c ]
jns rwxdata
push 0xb1fac14a
pushad
mov [ esp + 0x20 ] esi
push 0xf590b208
pushad
mov [ esp + 0x40 ] ecx
call sub_1014b370
clc
add ax 0xaa5f
pushad
call sub_1014ad38
and cx 0xd622
test dx 0xdac8
sub al 0xce
jmp sub_1014cdae
pushfd
mov [ esp ] esi
call sub_1014c902
push 0x6fc34dc9
mov [ esp ] edi
pushfd
pushad
mov [ esp + 0x20 ] ebp
jmp rwxdata
pushfd
mov [ esp + 0x20 ] esi
mov [ esp ] 0x43
jmp rwxdata
mov [ esp + 0xc ] ch
mov [ esp + 0x1c ] ecx
pushfd
mov [ esp + 0x1c ] ebx
mov [ esp ] eax
lea esp [ esp + 0x1c ]
jmp sub_1014be14
sub_1012e1b1
call sub_1012bffa
adc ah dh
fsub [ edx - 0x4c328d67 ]
outsd
push ebp
push ds
pop ds
stc
cmp al 0xec
les edx [ eax - 0x20e6499e ]
into
jl rwxdata
or [ ecx + 0x5e ] esp
or [ edi + 0x405bc104 ] 0x9d
adc al 0x55
or esi [ esi + 0x6c ]
inc [ 0x2076a8fc ]
hlt
or [ ebp - 0x2c30f6c5 ] al
mov ebp 0x65372e76

sub_1012e4ab
[ edi ] [ esi ]
lea esi [ edi - 0x4fd6468e ]
push [ esp ]
pop esi
mov [ esp ] esi
mov esi [ esp + 0x38 ]
push 0x2d2d0c3
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
jge rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
sub_1012eb38
shl al 0x3
rol al 0x7
sub ebx edi
shld di si 0x6
cmp bp cx
movsx edi dl
movzx edi bl
lea esp [ esp + 0x4 ]
add ebx esp
bswap di
stc
mov edi ebx
push eax
xor al 0x76
sar al 0x1
mov al 0x2e
bt edi ebx
cmc
pushfd
push ebp
[ edi ]
mov [ esp + 0x8 ] dh
pushfd
lea esp [ esp + 0x10 ]
jne rwxdata
jmp sub_10120201
movzx ax al
mov ax si
not ah
mov [ edi - 0x1 ] 0x0
bswap ax
push ebx
push 0x96e0b7a1
not ax
jmp rwxdata
call sub_100b400f
xlat
arpl [ 0xffffffffcd75eeb1 ] cx
movsb [ edi ] [ esi ]
pushad
and dh dl
0x82b8
sub_1012f31e
ror dl 0x6
0x2444883c 0xf614
jg rwxdata
int3
jb rwxdata
push esp
cmc
pushfd
sub dl 0x3c
mov [ esp + 0x14 ] al
not dl
bt bp dx
xchg edx eax
cmpsd [ esi ] [ edi ]
cmp eax esi
int 0x47
inc edx
mov ebp 0x6cac008
and ebp 0xffffffab
xchg esp eax
xor ch dh
scasd [ edi ]
popad
xor edx [ ebx ]
in eax 0xbd
test [ esp + edx * 2 - 0x64811dc ] ebx
push ebx
xor eax 0x4dafa0e6
sbb edi edi
xchg [ eax ] ecx
std
in al dx
mov ecx 0x7e8ed2c5
xor al 0x14
push ebx
mov [ ebp - 0x45 ] esp
jns rwxdata
neg dl
clc
ror dl 0x4
mov [ esp ] bh
call sub_100f92ee
cdq
ja rwxdata
bt ebp edx
mov bh 0x5c
insb
retn 0x560a
sub_1012f583
not al
rcl bl cl
not bl
neg al
seta bl
rcl bl cl
ror al 0x4
cmc
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
jge rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
sub_1012f853
mov ah dh
shl ax 0xb
xchg [ esp ] ebp
rcl bp cl
xadd eax ebp
xchg bp ax
xor ah bl
mov ebp esp
cmc
pushfd
sub esp 0x14
xor al cl
dec eax
btc ax bp
push esi
jmp rwxdata
bsf ax bx
lahf
cmp dl 0xa4
push edi
bts ax di
aad 0xda
push ebx
clc
cwde
test eax esp
daa
push edx
jmp rwxdata
shr ah cl
aas
mov eax [ ebp + 0x8 ]
stc
bt ecx 0x5
stc
test eax eax
pushad
call sub_1012b007
add [ eax ] al
inc edi
je rwxdata
popad
jo rwxdata
sub dl [ es : ebx - 0x75 ]
mov [ ebp - 0x54707324 ] al
jb rwxdata
aaa
fstp [ esp ]
neg [ edi ]
ja rwxdata
adc cl [ ecx ]
stosd [ edi ]
mov edx [ esi ]
xor al 0xb
test bh 0xb9
0x2e7a7443 0x1cae
lahf
loope rwxdata
push ebx
mov ecx [ eax - 0x7073237b ]
stosd [ edi ]
dec ecx
outsb
outsw
add bh al
add al 0x24
dec edi
xchg esp eax
call 0xffffffffd7795ad9
add al 0x24
cmp eax 0x2404c7a8
add al 0xd1
idiv [ edi - 0x64 ]
mov [ esp ] al
lea esp [ esp + 0x4 ]
jmp rwxdata
mov al [ 0xfffffffff1d9562a ]
0x2fa3
adc dl ah
pop esp
mov bl 0xcf
pushfd
pop eax
lodsb [ esi ]
mov al [ 0x540dfdf8 ]
mov dh [ edx - 0x56 ]
movsd [ edi ] [ esi ]
fisub [ eax + 0x167301e ]
xchg [ edi + ebx * 8 + 0x23054d8b ] al
pop ecx
xor eax [ ecx + ebx * 2 ]
push cs
salc
add si [ edx - 0x5b ]
pushad
pushad
mov [ esp + 0x3c ] edx
push eax
pushfd
pop [ esp + 0x3c ]
push ebx
push 0xbcf07293
lea esp [ esp + 0x44 ]
push esp
jmp rwxdata
fnstenv [ edi - 0x61328d45 ]
jpo rwxdata
pop eax
and eax 0xa7e4ce2b
iretd
pushfd
call $+5
pushfd
mov [ esp + 0x8 ] eax
jmp rwxdata
and al [ edx + ecx * 2 + 0x23a83056 ]
push ss
xchg cl ah
int3
add edx ebp
lodsd [ esi ]
lahf
mov ah 0x46
pop ecx
imul eax ebp 0xffffff9d
imul esi [ ecx ] 0xfffffffd
leave
dec esp
loop rwxdata
push edi
pushfd
mov [ esp + 0xc ] edi
pushad
pushfd
mov [ esp + 0x2c ] ebp
jmp rwxdata
jb rwxdata
push 0x12
add al dh
popad
add edi ebp
cmp eax [ ebx - 0x7587697f ]
lea esp [ esp + 0x2c ]
jns rwxdata
ror [ ecx + edx * 4 + 0x58645251 ] 0x1
sbb [ ecx + eax * 2 + 0x2676ea42 ] 0x2a
or [ ebx + 0xb34168b ] ebp
ror [ ebx - 0x1d574db ] 0xae
popad
in eax 0xa1
jae rwxdata
push 0xb1fac14a
pushad
mov [ esp + 0x20 ] esi
push 0xf590b208
pushad
mov [ esp + 0x40 ] ecx
call sub_1014b370
clc
add ax 0xaa5f
pushad
call sub_1014ad38
and cx 0xd622
test dx 0xdac8
sub al 0xce
jmp sub_1014cdae
pushfd
mov [ esp ] esi
call sub_1014c902
push 0x6fc34dc9
mov [ esp ] edi
pushfd
pushad
mov [ esp + 0x20 ] ebp
jmp rwxdata
pushfd
mov [ esp + 0x20 ] esi
mov [ esp ] 0x43
jmp rwxdata
mov [ esp + 0xc ] ch
mov [ esp + 0x1c ] ecx
pushfd
mov [ esp + 0x1c ] ebx
mov [ esp ] eax
lea esp [ esp + 0x1c ]
jmp sub_1014be14
sub_10130130
xchg ecx eax
pushad
pushfd
mov [ esp ] 0xc1
dec eax
stc
mov [ esp ] ecx
shl eax 0x8
setbe al
call sub_10124699
mov eax [ 0x7973ef7d ]
jb rwxdata
cmp [ eax - 0x4 ] ecx
aam 0x8f
stosd [ edi ]
push 0xffffffdd
push ebp
push ebx
inc ebp
push edx
inc ebp
dec esi
push esi
insb
insb
add [ ecx + 0x4c69c60 ] dl
and al 0xc1
loop rwxdata
cmp [ ebx + eax * 4 + 0x13 ] al
fsub st4
or [ 0xffffffff9eee86a9 ] ecx
dec ebp
pushad
in al dx
mov al 0x8a
sub_10130624
lea esp [ esp + 0x34 ]
call sub_100fd08f
bt si dx
cmp dl 0x0
push 0x1924d093
cmp eax 0x7d00
lea esp [ esp + 0x4 ]
ja rwxdata
jmp rwxdata
push 0xb1ef9594
mov [ esp ] 0x7e
lea esp [ esp + 0x4 ]
jae rwxdata
push edx
pushfd
lea esp [ esp + 0x8 ]
jae rwxdata
pushad
inc bl
inc ecx
lea esp [ esp + 0x20 ]
bt si 0x9
cmp ah 0x5
pushad
jmp rwxdata
call sub_101243c9
mov [ esp + 0x20 ] 0xb
pushad
lea eax [ ecx - 0x5005f520 ]
lahf
lea eax [ rwxdata ]
push [ esp + 0x4 ]
pushfd
push 0x17780fe8
pushfd
mov [ esp + 0x4c ] rwxdata
push ebp
mov [ esp ] 0xf0
push [ eax ]
pop [ esp + 0x4c ]
mov [ esp ] 0xd29
mov [ esp + 0x4 ] 0xdd
mov [ esp ] bh
push 0x49dd101a
push [ esp + 0x50 ]
retn 0x54
push 0xdc12a5dc
inc bl
pushfd
not bl
inc ecx
sbb bl ch
pushfd
test cl dh
rcl bl cl
xchg ebp eax
or ax di
setpo bl
aas
setle bl
mov eax ebp
cmc
setpe bl
or bl 0xb5
add bl 0x48
mov bl 0x1
jmp rwxdata
dec bl
inc ecx
pushfd
pushad
lea esp [ esp + 0x44 ]
jae rwxdata
stc
clc
mov [ esp + 0x8 ] esi
not si
mov esi edi
cmc
sub esi eax
lea esp [ esp + 0x8 ]
jno rwxdata
push esi
shl si 0xf
mov si di
adc si 0xe544
btr si 0x3
mov esi edi
pushfd
cmc
pushfd
sub esi eax
call sub_100f9783
int3
jge rwxdata
pushad
call sub_1012c67f
cmp ah 0x5
call sub_100fbcb9
jbe rwxdata
push 0x846fc06e
[ edi ] [ esi ]
jmp sub_100b3ace
pushfd
[ edi ] [ esi ]
movzx si al
lea esp [ esp + 0x4 ]
jl rwxdata
pushfd
pushad
pushfd
adc ecx ecx
push esi
push [ esp + 0xc ]
push 0x8a0c3131
lea esp [ esp + 0x34 ]
jmp rwxdata
push 0xc24f3a17
adc ecx ecx
pushad
lea esp [ esp + 0x24 ]
jmp rwxdata
mov si dx
pop esi
pushad
push [ esp ]
mov [ esp + 0x14 ] 0x5a
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
pushad
bswap esi
mov esi [ esp + 0x20 ]
pushad
pushfd
mov [ esp ] al
push ebp
lea esp [ esp + 0x4c ]
jmp rwxdata
jge rwxdata
push 0x8e33d5c2
pushfd
jmp rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_100b5f01
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_100b5f01
pushfd
call j_sub_100fa1b4
sbb ah dl
and dl 0x85
jb rwxdata
jmp rwxdata
ror bl cl
jmp rwxdata
ja rwxdata
push 0xb7b63c2
lea esp [ esp + 0x4 ]
jae rwxdata
not al
rol bl cl
mov bl 0x48
setne bl
rol al 0x2
setno bl
not bl
setge bl
mov bl 0x9
stosb [ edi ]
push [ esp ]
mov bl 0x2
lea esp [ esp + 0x30 ]
sub eax 0x8ca01a5c
salc
mov al 0x67
push ebp
arpl [ edx + 0x6 ] cx
into
sub [ ebp + 0x5b ] sp
retn
hlt
setns bl
lodsb [ esi ]
stc
ror al 0x6
mov bl ah
sar bl 0x5
push eax
pushad
sub al 0x3c
or bl 0x64
call sub_1012ca36
mov [ esp + 0x4 ] esp
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push ecx
push 0xce3bcebe
add bl 0x56
xchg ebp eax
add esp 0x8
bswap ax
aaa
das
mov eax ebp
clc
inc bl
shl bl 0x1
xor bl 0x62
mov bl 0x1
jmp rwxdata
call sub_100b339b
cmc
push 0x4ad36cc5
xor ecx ecx
mov [ esp ] 0x53
lea esp [ esp + 0x4 ]
call sub_100b5f01
call j_sub_100ba258
sub_1014a7bf
mov [ esp ] 0x9ba3d0ce
mov edi ebx
setno al
pushad
call sub_100b2a4f
sub esp edi
pop ecx
or esp edx
jo rwxdata
add al ch
xlat
xchg [ edx + 0x2ef8efb7 ] bh
pop ecx
pop ebp
dec esp
adc edi ebx
loopne rwxdata
cli
mov ecx ebp
xlat
xchg edx eax
call 0x1b113736
or [ edi ] esi
test al 0x22
jb rwxdata
sar [ ebx - 0x54 ] 0x1
int 0x53
pop es
retn
jb rwxdata
stosb [ edi ]
cwde
jle rwxdata
aad 0x1c
xchg esi eax
std
jae rwxdata
outsd
rcr edx cl
in al dx
jpo rwxdata
clc
les eax [ edi + edx * 4 + 0x7dbce82b ]
xchg edi eax
int1
iretd
or al 0x4e
push 0x2e
xor [ ecx + 0x52 ] edx
mov esi 0xd2f32b65
mov [ ecx - 0x44 ] edx
xchg ecx eax
and [ ecx ] eax
rcl eax 0xa9
push ebx
xlat
add [ ebx - 0x5 ] eax
hlt
test al 0x60
stosd [ di ]
into
sbb ecx [ ebx - 0x2de906b9 ]
mov esp 0xf2e23975
add ecx [ edi - 0x25 ]
jge rwxdata
xor [ gs : esi + ecx * 2 ] ecx
push [ esi ]
mov bl 0x27
frstor [ ecx - 0x489d5b18 ]
jae rwxdata
mov bh 0x65
xor [ esi + ecx * 2 ] ecx
xchg edx eax
inc esi
0x57cb118e 0xd2ae
iretd
mov dl 0xea
jne rwxdata
add [ edx - 0x5c ] bh
jpe rwxdata
retn 0xd094
xchg ecx eax
and al 0x27
pop ebx
jmp 0x8790c6fa
sub_1014aa0b
mov [ esp + 0x24 ] esi
rcl si cl
pushad
mov esi edi
stc
cmp bl dl
cmc
pushfd
sub esi eax
jmp rwxdata
call sub_100fa6a8
mov esi [ esp + 0xc ]
pushad
mov esp ebp
mov bp 0xb3f4
movzx bp al
pop ebp
pushad
mov [ esp ] dl
pushad
mov [ esp ] 0xa9
push [ esp + 0x40 ]
retn 0x4c
sub_1014ab1d
mov [ eax ] dx
pushad
push [ esp ]
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014ab33
call sub_1014d21d
pushad
push [ esp + 0x20 ]
pop [ ebp ]
pushfd
pushfd
mov [ esp + 0x14 ] ah
lea esp [ esp + 0x2c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014acf1
mov [ esp + 0x8 ] edi
pushad
mov [ esp ] 0x9f23
mov [ esp ] cx
pushfd
mov [ esp + 0x28 ] ebp
mov [ esp ] cl
mov [ esp + 0x24 ] esi
jmp rwxdata
pushad
jmp rwxdata
mov [ esp + 0x40 ] ecx
push 0x59c3ff4f
mov [ esp + 0xc ] 0x6d5002e3
push [ esp ]
pushfd
mov [ esp + 0x48 ] ebx
pushfd
lea esp [ esp + 0x4c ]
jmp sub_1014be14
sub_1014ad38
stc
ror ax 0x7
pushfd
clc
not ax
cmp esi ecx
add esi 0x2
pushfd
test bh cl
cmp ecx 0x33d02062
xor bx ax
mov [ esp + 0x4 ] 0xe6
stc
sub ebp 0x2
jmp rwxdata
pushfd
pushfd
mov [ ebp ] ax
pushfd
push esp
lea esp [ esp + 0x44 ]
jmp sub_1014d32f
sub_1014addf
lea esp [ esp + 0x24 ]
jbe rwxdata
pushfd
push 0xb126472c
push ebx
pushfd
mov eax [ fs : eax ]
mov [ esp ] 0x7306
jmp rwxdata
mov eax [ fs : eax ]
call sub_1014c416
test bx 0x28cd
or ax dx
mov eax [ ebp ]
clc
add ebp 0x2
pushad
push [ esp ]
mov ax [ ss : eax ]
mov [ esp ] 0x14
mov [ esp ] ah
lea esp [ esp + 0x28 ]
jne rwxdata
call sub_1014d08c
pushfd
push 0x8c595a6d
mov [ esp ] bl
mov [ esp ] ch
mov [ ebp ] ax
pushad
mov [ esp + 0xc ] 0xe2a3
push esp
pushfd
lea esp [ esp + 0x30 ]
jmp rwxdata
mov [ ebp ] ax
pushad
pushad
lea esp [ esp + 0x40 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014ae44
pushfd
mov [ esp ] edx
call sub_1014cfa9
cdq
neg eax
call sub_1014d162
std
stosb [ edi ]
adc al 0x10
jno rwxdata
pushad
lea esp [ esp + 0x40 ]
jmp rwxdata
adc al 0x10
call 0xc24c326
stosd [ edi ]
adc al 0x10
cwde
stosd [ edi ]
adc al 0x10
xchg ecx eax
int3
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014b26d
pushfd
mov [ esp + 0x8 ] ecx
call sub_1014bfa7
pushad
mov [ ebp ] ax
push [ esp ]
push 0x5461f49f
mov [ esp + 0x8 ] sp
lea esp [ esp + 0x2c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014b30e
[ edi ] [ esi ]
add esi 0x9d1f4232
shl si cl
mov edi [ esp + 0x58 ]
shl si 0xa
shr si cl
test cl 0xe9
mov esi [ esp + 0x5c ]
test ah 0x57
clc
cmc
test si ax
push [ esp + 0x60 ]
popfd
mov [ esp + 0x8 ] 0xa4
mov [ esp + 0x8 ] 0x43
lea esp [ esp + 0x64 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014b380
ror al 0x4
pushad
jmp rwxdata
clc
xor al 0x14
pushfd
xor bl al
cmc
cmp si sp
mov ax [ eax + edi ]
bt edx ecx
clc
push 0x704c3e28
sub ebp 0x2
push [ esp ]
clc
clc
add esi 0x1
call sub_1014bab2
jmp rwxdata
mov [ esp + 0x4 ] bl
mov [ esp + 0x4c ] ebx
mov [ esp ] 0x18
pushfd
mov [ esp + 0x4 ] 0x27
lea esp [ esp + 0x50 ]
jmp sub_1014be14
sub_1014b3de
cld
cld
pushad
[ edi ] [ esi ]
clc
clc
rcl si 0xf
jmp rwxdata
mov edi [ esp + 0x2c ]
shld si sp 0xb
rcl esi 0x1a
mov esi [ esp + 0x30 ]
pushfd
pushfd
push [ esp + 0x3c ]
popfd
mov [ esp ] 0xe4
mov [ esp ] 0xec2d
mov [ esp ] ah
lea esp [ esp + 0x40 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014b437
pushad
cld
mov [ esp + 0x4 ] ebx
[ edi ] [ esi ]
not si
bt dx 0x9
bsf esi ebp
mov edi [ esp + 0x28 ]
pushfd
cmc
inc si
mov esi [ esp + 0x30 ]
std
push [ esp + 0x34 ]
popfd
pushfd
push esi
lea esp [ esp + 0x40 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014b580
pushfd
xchg [ ebp + ecx * 4 ] eax
test ch al
pushad
mov [ esp + 0x2c ] eax
cmc
pushfd
stc
sub ecx 0x1
pushfd
push 0x3a4676f0
lea esp [ esp + 0x38 ]
jne rwxdata
cmp sp bp
bt dx 0x7
call sub_1014c5d1
shl eax cl
pushad
mov [ esp ] al
push 0xfd611c72
mov [ esp + 0x4 ] esp
mov [ ebp + 0x4 ] eax
call sub_1014cccc
pushfd
div [ ebp + 0x8 ]
mov [ esp ] di
pushfd
mov [ esp ] di
pushfd
mov [ ebp + 0x4 ] edx
jmp rwxdata
test bh bl
bt si dx
cmc
xor eax eax
jmp rwxdata
push [ esp + 0x4 ]
mov [ ebp + 0x8 ] eax
jmp sub_1014b96d
push 0xf7ae4d09
call sub_1014c9a3
call sub_1014ca5f
push [ esp ]
mov [ ebp + 0x8 ] ebx
push 0x8b902ed
jmp sub_1014be6d
sub_1014b69e
call j_sub_1014d509
inc esi
bsf dx si
neg dh
adc dh bl
add al bl
cmc
ror al 0x7
clc
neg al
movsx dx cl
dec al
bswap dx
sar dx cl
add bl al
bts dx dx
or dh bh
mov dx [ ebp ]
cmc
jl rwxdata
bt edi 0x1
pushad
add ebp 0x2
call sub_1014bb73
jmp sub_1014b54f
add ebp 0x2
jmp sub_1014be27
sub_1014b6dc
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
push edi
pushfd
pop [ esp ]
push 0x125fa9a8
push [ esp + 0x4 ]
pop [ ebp ]
mov [ esp + 0x4 ] bl
push 0x67ed3577
lea esp [ esp + 0xc ]
jmp sub_1014d32f
pushfd
jmp rwxdata
call sub_1014c020
jmp rwxdata
push 0x970b004e
pushfd
mov [ esp + 0x4 ] edx
mov [ esp ] 0x7e
jmp sub_1014d14d
sub_1014b751
push esi
mov [ es : eax ] edx
mov [ esp ] bl
lea esp [ esp + 0x2c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014b7a4
cmc
push 0xa211ac43
jmp rwxdata
add [ ebp + 0x4 ] eax
pushad
pushfd
pop [ esp + 0x20 ]
mov [ esp ] 0x240b4e51
push [ esp + 0x20 ]
pop [ ebp ]
pushfd
mov [ esp ] 0x689e
mov [ esp + 0x4 ] si
lea esp [ esp + 0x28 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014b7da
lea esp [ esp + 0x3c ]
jne rwxdata
pushfd
jmp rwxdata
inc esi
call sub_1014c48a
cld
mov edx [ esp + 0xc ]
rcl dx cl
push [ esp + 0x10 ]
popfd
bswap dx
bswap dx
mov edx [ esp + 0x14 ]
pushfd
mov [ esp + 0x14 ] bl
push 0x4a32f463
push [ esp + 0x20 ]
retn 0x24
call sub_1014cbca
cpuid
pushad
pushfd
mov [ esp ] cx
bt ecx 0x10
sub ebp 0xc
mov [ esp + 0x18 ] 0xb6
bt esp 0x12
cmc
cmp [ ebp + 0xc ] 0x1
call sub_1014c837
add eax ebx
pushad
mov [ esp ] ecx
pushad
push 0x99e309f3
add eax 0x773d9ec4
cmp di sp
lea esi [ esi + 0x4 ]
jmp rwxdata
cmc
cmp bh bh
neg eax
stc
pushfd
push [ esp ]
cmc
rol eax 0xa
pushfd
stc
cmp bh 0x5
clc
add ebx eax
clc
jmp rwxdata
sub ebp 0x4
jmp sub_1014bae6
sub_1014b812
jmp rwxdata
mov [ esp ] 0x64
lea esp [ esp + 0x40 ]
jne rwxdata
pushad
lea ebx [ eax + 0x6a190e72 ]
mov ebx [ esp + 0x20 ]
pushad
lea esp [ esp + 0x44 ]
jmp sub_1014d32f
pushfd
mov ebx eax
bt di 0x8
cmp dl al
and ebx 0xff0
sub esp 0xfffffffc
je rwxdata
bt ax si
cmp ebx 0xfe0
jmp rwxdata
stc
cmp ebx 0xfe0
call sub_1014bfac
call sub_1014c1e3
pushfd
jmp rwxdata
call sub_1014cbca
cpuid
pushad
pushfd
mov [ esp ] cx
bt ecx 0x10
sub ebp 0xc
mov [ esp + 0x18 ] 0xb6
bt esp 0x12
cmc
cmp [ ebp + 0xc ] 0x1
call sub_1014c837
add eax ebx
pushad
mov [ esp ] ecx
pushad
push 0x99e309f3
add eax 0x773d9ec4
cmp di sp
lea esi [ esi + 0x4 ]
jmp rwxdata
cmc
cmp bh bh
neg eax
stc
pushfd
push [ esp ]
cmc
rol eax 0xa
pushfd
stc
cmp bh 0x5
clc
add ebx eax
clc
jmp rwxdata
sub ebp 0x4
jmp sub_1014bae6
sub_1014b8b6
push ecx
mov [ esp + 0x4 ] sp
mov [ esp + 0x8 ] esi
call sub_1014c480
push 0xe722813d
mov [ ebp + 0x4 ] eax
pushfd
call sub_1014d0e5
mov [ esp + 0x4 ] dh
mov [ esp + 0x1c ] ebx
pushfd
pushfd
pushfd
mov [ esp + 0x4 ] 0x2024
lea esp [ esp + 0x28 ]
jmp sub_1014be14
sub_1014b96d
pushfd
pushfd
pop [ esp + 0x30 ]
pushfd
jmp rwxdata
push [ esp + 0x34 ]
pop [ ebp ]
mov [ esp + 0x4 ] 0xc
push 0x33ae8a79
pushfd
mov [ esp + 0x8 ] ebx
lea esp [ esp + 0x40 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014b979
cmc
cmc
cmp ebx 0xfe0
pushfd
pushfd
push [ esp ]
lea esp [ esp + 0x18 ]
jne rwxdata
pushad
lea ebx [ eax + 0x6a190e72 ]
mov ebx [ esp + 0x20 ]
pushad
lea esp [ esp + 0x44 ]
jmp sub_1014d32f
call sub_1014d467
bswap ax
mov ax [ ebp ]
neg cl
mov cl [ ebp + 0x2 ]
clc
call sub_1014d307
sub_1014b9a7
xor al 0xfa
mov [ esp ] si
xor bl al
bt bx 0x7
pushfd
bt cx cx
cbw
mov [ esp ] cx
mov [ esp ] bh
bt sp 0xb
push 0x6ca053e6
cwde
mov [ esp ] ch
pushfd
call sub_1014cbe6
pushad
pushfd
call sub_1014cb8a
push edx
shl al cl
lea esp [ esp + 0x4c ]
jle rwxdata
call sub_1014cd19
pop [ ebp ]
pushfd
pushfd
mov [ esp ] 0xab21ad7e
lea esp [ esp + 0x8 ]
jmp sub_1014d32f
mov [ ebp + 0x4 ] ax
jge rwxdata
pushfd
mov [ esp ] al
mov [ esp ] dl
pushfd
pushfd
pop [ esp + 0x4 ]
push 0x900c345f
push [ esp + 0x8 ]
pop [ ebp ]
pushad
push 0xecf66cf3
push esp
lea esp [ esp + 0x34 ]
jmp sub_1014d32f
push ecx
pushfd
pop [ esp ]
push 0x7f1662e9
push [ esp + 0x4 ]
pop [ ebp ]
mov [ esp ] 0x57
push 0xfd9f00cf
lea esp [ esp + 0xc ]
jmp sub_1014d32f
sub_1014bb15
lea esp [ esp + 0x30 ]
push esp
push 0xeb8c90b9
mov [ esp ] eax
call sub_1014ce3a
add [ eax ] al
add [ eax ] al
jmp rwxdata
pushfd
mov [ esp ] sp
mov [ ebp ] eax
mov [ esp + 0x8 ] 0xa1
push [ esp ]
push eax
mov [ esp + 0x4 ] ch
lea esp [ esp + 0x14 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014bb73
mov [ esp + 0x4 ] cl
mov [ eax + edi ] dl
pushfd
pushfd
pushfd
push 0xad95d563
lea esp [ esp + 0x34 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014bc21
jmp rwxdata
pushad
mov [ ebp ] ax
push [ esp ]
push 0x5461f49f
mov [ esp + 0x8 ] sp
lea esp [ esp + 0x2c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014bcbc
lea esp [ esp + 0x28 ]
jne rwxdata
pushad
lea ebx [ eax + 0x6a190e72 ]
mov ebx [ esp + 0x20 ]
pushad
lea esp [ esp + 0x44 ]
jmp sub_1014d32f
sar bl cl
dec bh
xor bl dh
movsx bx dl
xor [ ebp + 0xc ] 0x20
call sub_1014c850
ror al cl
mov eax [ ebp ]
call sub_1014c74e
movsx dx dl
mov dx [ ebp + 0x4 ]
cmp al cl
clc
add ebp 0x6
jmp rwxdata
jmp sub_1014bf3a
sub_1014bd48
xor eax eax
clc
xchg [ ebp + ecx * 4 ] eax
pushad
jmp rwxdata
cmc
push eax
mov [ esp + 0x24 ] eax
bt esi 0xa
bt ecx 0xf
push esp
sub ecx 0x1
push 0x9ced94a5
jmp rwxdata
call sub_1014d263
lea esp [ esp + 0x4c ]
jno rwxdata
pushfd
pushad
mov [ esp ] 0x829f54e7
pushfd
pop [ esp + 0x20 ]
jmp rwxdata
push 0x4aab8746
pushfd
pop [ esp ]
pushad
lea esp [ esp + 0x20 ]
jo rwxdata
jmp rwxdata
pushad
push [ esp + 0x20 ]
pop [ ebp ]
pushfd
pushfd
mov [ esp + 0x14 ] ah
lea esp [ esp + 0x2c ]
jmp rwxdata
pop [ ebp ]
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata
mov [ esp + 0x4 ] 0x4f
push [ esp + 0x20 ]
pop [ ebp ]
mov [ esp ] 0xa45859c6
lea esp [ esp + 0x24 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014bdcb
mov [ esp ] edx
pushfd
mov [ esp ] 0xa8
pushfd
pop [ esp ]
jmp rwxdata
push esp
pushad
mov [ esp + 0x1c ] eax
jmp rwxdata
pushfd
mov [ esp + 0x1c ] edi
pushad
mov [ esp + 0x38 ] ebp
push [ esp + 0x4 ]
jmp rwxdata
push ecx
pushfd
mov [ esp + 0x40 ] esi
mov [ esp ] bl
call sub_1014c490
sub_1014be27
pushad
pushfd
mov [ esp ] 0x3723
mov [ eax + edi ] dl
pushad
push [ esp + 0x8 ]
lea esp [ esp + 0x48 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014bef5
lea esp [ esp + 0x24 ]
push esp
pushad
mov [ esp + 0x1c ] eax
pushfd
pushfd
mov [ esp + 0x20 ] edi
pushfd
mov [ esp + 0x20 ] ebp
pushfd
mov [ esp ] ebp
jmp rwxdata
mov [ esp + 0x20 ] esi
pushad
push 0x98c5d5f9
mov [ esp + 0x40 ] ecx
push 0x5e1f58e7
pushfd
mov [ esp + 0x44 ] ebx
mov [ esp + 0x10 ] dh
pushfd
push 0xeb72378d
lea esp [ esp + 0x4c ]
jmp sub_1014be14
sub_1014bf21
mov [ esp ] al
mov [ esp ] 0x1f
cmp ebp eax
pushad
jmp rwxdata
push 0x7652f3ee
lea esp [ esp + 0x28 ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
lahf
xadd ah cl
aad 0x4f
mov edx esp
jle rwxdata
call sub_1014ca5f
push [ esp ]
mov [ ebp + 0x8 ] ebx
push 0x8b902ed
jmp sub_1014be6d
daa
shrd ax bx cl
lea ecx [ edi + 0x40 ]
aaa
das
clc
sub ecx edx
ror di 0x6
lea edi [ ecx * 8 - 0x16c9a026 ]
aas
lea eax [ ebp - 0x80 ]
shl di cl
bswap di
lea edi [ ebp * 8 + 0x38afb322 ]
and al 0xfc
bsr di di
mov di cx
sub eax ecx
lea edi [ esi * 2 + 0x29878978 ]
mov esp eax
mov di 0x2915
bswap di
push 0x2855f3b4
mov edi eax
pushfd
pop [ esp ]
movsx di dl
push esi
not di
std
mov esi edx
bswap edi
ja rwxdata
bswap edi
lea edi [ ecx + eax - 0x40 ]
jmp rwxdata
not edi
pushad
lea edi [ ecx + eax - 0x40 ]
mov [ esp ] ch
pushfd
call sub_1014c504
lea esp [ esp + 0x38 ]
jne rwxdata
std
cld
std
push edi
pushfd
mov edi eax
call sub_1014b437
cmc
xchg al dh
bt ax sp
clc
mov edx [ ebp ]
add al dl
and al 0x77
add ebp 0x2
setg al
pushad
jmp rwxdata
pushad
lea ebx [ eax + 0x6a190e72 ]
mov ebx [ esp + 0x20 ]
pushad
lea esp [ esp + 0x44 ]
jmp sub_1014d32f
shl ebx cl
dec bh
mov ebx eax
clc
stc
cmc
and ebx 0xff0
pushfd
stc
cmp ebx 0xfe0
pushad
call sub_1014bcbc
cmc
cmp bh bh
neg eax
stc
pushfd
push [ esp ]
cmc
rol eax 0xa
pushfd
stc
cmp bh 0x5
clc
add ebx eax
clc
jmp rwxdata
mov [ esp + 0x4 ] 0x57
mov al [ ss : edx ]
call sub_1014cab6
pushad
pushad
mov [ esp + 0x3c ] edx
push eax
pushfd
pop [ esp + 0x3c ]
push ebx
push 0xbcf07293
lea esp [ esp + 0x44 ]
push esp
jmp rwxdata
sub ebp 0x4
jmp sub_1014bae6
pushfd
call $+5
pushfd
mov [ esp + 0x8 ] eax
jmp rwxdata
push edi
pushfd
mov [ esp + 0xc ] edi
pushad
pushfd
mov [ esp + 0x2c ] ebp
jmp rwxdata
lea esp [ esp + 0x2c ]
jns rwxdata
push 0xb1fac14a
pushad
mov [ esp + 0x20 ] esi
push 0xf590b208
pushad
mov [ esp + 0x40 ] ecx
call sub_1014b370
clc
add ax 0xaa5f
pushad
call sub_1014ad38
and cx 0xd622
test dx 0xdac8
sub al 0xce
jmp sub_1014cdae
pushfd
mov [ esp ] esi
call sub_1014c902
push 0x6fc34dc9
mov [ esp ] edi
pushfd
pushad
mov [ esp + 0x20 ] ebp
jmp rwxdata
pushfd
mov [ esp + 0x20 ] esi
mov [ esp ] 0x43
jmp rwxdata
mov [ esp + 0xc ] ch
mov [ esp + 0x1c ] ecx
pushfd
mov [ esp + 0x1c ] ebx
mov [ esp ] eax
lea esp [ esp + 0x1c ]
jmp sub_1014be14
sub_1014bf3a
pushad
mov [ es : eax ] dx
push 0xa98555c3
mov [ esp + 0x8 ] dl
lea esp [ esp + 0x28 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014bf89
push [ esp + 0x5c ]
popfd
mov [ esp ] 0xbe
mov [ esp + 0x10 ] 0x6450
lea esp [ esp + 0x60 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014bfac
lea esp [ esp + 0x4 ]
jne rwxdata
pushad
lea ebx [ eax + 0x6a190e72 ]
mov ebx [ esp + 0x20 ]
pushad
lea esp [ esp + 0x44 ]
jmp sub_1014d32f
adc bh 0x81
btr bx cx
xor [ ebp + 0xc ] 0x20
not bl
setge bh
setns bl
pop ebx
pushad
mov [ esp ] bh
push 0xf9cbcf9b
lea esp [ esp + 0x24 ]
jmp sub_1014d32f
sub_1014c03c
mov [ esp ] eax
pushfd
pushfd
mov [ esp + 0x4 ] edi
jmp rwxdata
mov [ esp ] ebp
push esi
push 0x6b6e5c0
pushad
mov [ esp + 0x24 ] esi
pushfd
jmp rwxdata
mov [ esp + 0x24 ] ecx
mov [ esp + 0x4 ] dl
call sub_1014c260
pushfd
mov [ fs : eax ] edx
push [ esp + 0x4 ]
push eax
lea esp [ esp + 0x10 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014c054
call sub_1014bd2b
mov [ ebp + 0x4 ] eax
pushfd
pushfd
pop [ esp + 0x2c ]
lea esp [ esp + 0x2c ]
jl rwxdata
pushad
push [ esp + 0x20 ]
pop [ ebp ]
push 0xf0a3d161
lea esp [ esp + 0x28 ]
jmp rwxdata
pushad
mov [ esp + 0xc ] dx
mov [ esp + 0x4 ] 0x77ae42cf
push [ esp + 0x20 ]
pop [ ebp ]
pushad
push [ esp + 0x8 ]
pushfd
push edi
lea esp [ esp + 0x50 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014c139
xchg cl dh
mov edx [ ebp + 0x4 ]
adc cl bl
push [ esp ]
stc
adc cl 0xf1
mov cl [ ebp + 0x8 ]
stc
add ebp 0x2
push 0xf9342bb3
shld eax edx cl
pushad
mov [ esp ] cl
mov [ esp ] si
jmp rwxdata
mov [ ebp + 0x4 ] eax
pushfd
pushfd
pop [ esp + 0x2c ]
lea esp [ esp + 0x2c ]
jl rwxdata
pushad
push [ esp + 0x20 ]
pop [ ebp ]
push 0xf0a3d161
lea esp [ esp + 0x28 ]
jmp rwxdata
pushad
mov [ esp + 0xc ] dx
mov [ esp + 0x4 ] 0x77ae42cf
push [ esp + 0x20 ]
pop [ ebp ]
pushad
push [ esp + 0x8 ]
pushfd
push edi
lea esp [ esp + 0x50 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014c163
lea esp [ esp + 0x8 ]
push esp
push 0x1d0f92b6
push [ esp ]
pushfd
mov [ esp + 0x8 ] eax
push 0x27101660
pushad
pushfd
mov [ esp + 0x2c ] edi
push ebp
mov [ esp + 0x4 ] 0x8a63
push 0x8406a7de
pushfd
mov [ esp + 0x34 ] ebp
jmp rwxdata
mov [ esp ] ch
push 0x388552e1
pushfd
mov [ esp + 0x38 ] esi
call sub_1014c589
sub_1014c197
pushfd
call sub_1014ca8f
call sub_1014d31b
mov [ esp + 0x4 ] bh
lea esp [ esp + 0x44 ]
push esp
call j_sub_1014c03c
cld
push esi
movzx si dl
bswap si
bswap si
mov esi edx
jmp rwxdata
mov di 0x142a
not di
lea edi [ esi * 2 + 0xa240a9c ]
lea edi [ ecx + eax - 0x40 ]
std
push edi
push 0xf7782972
mov edi eax
pushfd
call sub_1014b3de
call sub_1014c428
sub_1014c1c3
bt esi 0x14
clc
xor al bl
mov [ esp ] si
bt esp esp
pushfd
bt di bp
not al
cmc
call sub_1014d584
jmp rwxdata
dec al
jmp rwxdata
cmc
mov [ esp + 0x4 ] 0x21
add bl al
jmp rwxdata
lea esp [ esp + 0x8 ]
jae rwxdata
call sub_1014cb9d
mov [ esp + 0x4 ] 0x57
mov al [ ss : edx ]
call sub_1014cab6
pushad
pushad
mov [ esp + 0x3c ] edx
push eax
pushfd
pop [ esp + 0x3c ]
push ebx
push 0xbcf07293
lea esp [ esp + 0x44 ]
push esp
jmp rwxdata
mov al [ eax + edi ]
jmp rwxdata
pushfd
call $+5
pushfd
mov [ esp + 0x8 ] eax
jmp rwxdata
pushad
clc
push esp
sub ebp 0x2
cmp esi edi
stc
cmp cl 0xdc
add esi 0x1
pushad
jmp rwxdata
push edi
pushfd
mov [ esp + 0xc ] edi
pushad
pushfd
mov [ esp + 0x2c ] ebp
jmp rwxdata
mov [ ebp ] ax
mov [ esp ] 0x9136
mov [ esp + 0x8 ] edi
mov [ esp + 0xc ] 0x5f
lea esp [ esp + 0x44 ]
jmp sub_1014d32f
lea esp [ esp + 0x2c ]
jns rwxdata
push 0xb1fac14a
pushad
mov [ esp + 0x20 ] esi
push 0xf590b208
pushad
mov [ esp + 0x40 ] ecx
call sub_1014b370
clc
add ax 0xaa5f
pushad
call sub_1014ad38
and cx 0xd622
test dx 0xdac8
sub al 0xce
jmp sub_1014cdae
pushfd
mov [ esp ] esi
call sub_1014c902
push 0x6fc34dc9
mov [ esp ] edi
pushfd
pushad
mov [ esp + 0x20 ] ebp
jmp rwxdata
pushfd
mov [ esp + 0x20 ] esi
mov [ esp ] 0x43
jmp rwxdata
mov [ esp + 0xc ] ch
mov [ esp + 0x1c ] ecx
pushfd
mov [ esp + 0x1c ] ebx
mov [ esp ] eax
lea esp [ esp + 0x1c ]
jmp sub_1014be14
sub_1014c1e3
pushad
pushad
lea esp [ esp + 0x44 ]
jne rwxdata
pushad
lea ebx [ eax + 0x6a190e72 ]
mov ebx [ esp + 0x20 ]
pushad
lea esp [ esp + 0x44 ]
jmp sub_1014d32f
pushfd
lea ebx [ edi + 0x54d3c91e ]
dec bx
or bx 0x90b0
xor [ ebp + 0xc ] 0x20
bswap bx
pop ebx
call $+5
push [ esp ]
mov ebx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0xcf
lea esp [ esp + 0xc ]
jmp sub_1014d32f
sub_1014c3b3
mov [ esp + 0x20 ] eax
pushfd
pushfd
lea esp [ esp + 0x28 ]
je rwxdata
jmp rwxdata
push edi
mov [ esp ] edi
jne rwxdata
push 0x6fc34dc9
mov [ esp ] edi
pushfd
pushad
mov [ esp + 0x20 ] ebp
jmp rwxdata
push ecx
mov [ esp ] ebp
pushad
mov [ esp + 0x1c ] esi
mov [ esp + 0x8 ] dh
mov [ esp + 0x18 ] ecx
jmp rwxdata
push 0x56915cf
mov [ esp ] ebp
pushfd
lea esp [ esp + 0x4 ]
jpo rwxdata
pushfd
mov [ esp + 0x20 ] esi
mov [ esp ] 0x43
jmp rwxdata
mov [ esp + 0x14 ] ebx
pushfd
push [ esp + 0x4 ]
lea esp [ esp + 0x1c ]
jmp sub_1014be14
pushad
mov [ esp + 0x14 ] dx
mov [ esp + 0xc ] al
push ebp
mov [ esp + 0x20 ] esi
lea esp [ esp + 0x20 ]
jo rwxdata
pushad
mov [ esp + 0x4 ] 0x39
mov [ esp + 0x1c ] esi
mov [ esp + 0x8 ] ch
jmp rwxdata
mov [ esp + 0xc ] ch
mov [ esp + 0x1c ] ecx
pushfd
mov [ esp + 0x1c ] ebx
mov [ esp ] eax
lea esp [ esp + 0x1c ]
jmp sub_1014be14
jmp rwxdata
pushfd
mov [ esp ] ecx
pushad
jmp rwxdata
call sub_1014c405
push ecx
jmp rwxdata
mov [ esp + 0x1c ] ebx
push 0xa1488709
push 0xde43e01e
lea esp [ esp + 0x24 ]
jmp sub_1014be14
call sub_1014d007
pushfd
pop [ esp + 0x28 ]
push 0x8c691dd5
push 0x69e8e5c7
jmp rwxdata
jmp sub_1014bb15
sub_1014c416
mov [ ebp ] eax
push 0xf2599d08
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014c4a3
call sub_1014b580
call j_sub_1014cffe
lea esp [ esp + 0x44 ]
push esp
pushad
call sub_1014c3b3
mov [ esp + 0x24 ] ecx
mov [ esp + 0x4 ] dl
call sub_1014c260
pushfd
mov [ fs : eax ] edx
push [ esp + 0x4 ]
push eax
lea esp [ esp + 0x10 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014c504
xchg [ esp + 0x24 ] edi
cld
pushad
mov edi eax
mov [ esp ] esi
call sub_1014bda7
shrd si sp cl
mov esi [ ebp ]
push 0x18a4f99c
add ebp 0x4
pushad
push 0x6a3e618a
lea esp [ esp + 0x28 ]
jmp sub_1014c6cc
sub_1014c5b5
pushfd
pushad
push eax
lea esp [ esp + 0x28 ]
push esp
call sub_1014c651
bt ax si
cmp ebx 0xfe0
jmp rwxdata
call sub_1014c1e3
pushfd
jmp rwxdata
call sub_1014cbca
cpuid
pushad
pushfd
mov [ esp ] cx
bt ecx 0x10
sub ebp 0xc
mov [ esp + 0x18 ] 0xb6
bt esp 0x12
cmc
cmp [ ebp + 0xc ] 0x1
call sub_1014c837
add eax ebx
pushad
mov [ esp ] ecx
pushad
push 0x99e309f3
add eax 0x773d9ec4
cmp di sp
lea esi [ esi + 0x4 ]
jmp rwxdata
cmc
cmp bh bh
neg eax
stc
pushfd
push [ esp ]
cmc
rol eax 0xa
pushfd
stc
cmp bh 0x5
clc
add ebx eax
clc
jmp rwxdata
sub ebp 0x4
jmp sub_1014bae6
sub_1014c619
jmp rwxdata
lea esp [ esp + 0x38 ]
jne rwxdata
pushad
lea ebx [ eax + 0x6a190e72 ]
mov ebx [ esp + 0x20 ]
pushad
lea esp [ esp + 0x44 ]
jmp sub_1014d32f
shl ebx cl
dec bh
mov ebx eax
clc
stc
cmc
and ebx 0xff0
pushfd
stc
cmp ebx 0xfe0
pushad
call sub_1014bcbc
cmc
cmp bh bh
neg eax
stc
pushfd
push [ esp ]
cmc
rol eax 0xa
pushfd
stc
cmp bh 0x5
clc
add ebx eax
clc
jmp rwxdata
sub ebp 0x4
jmp sub_1014bae6
sub_1014c651
push ebx
push [ esp ]
mov [ esp ] 0x2c
mov [ esp + 0x8 ] eax
call sub_1014acf1
mov [ esp ] 0x64
lea esp [ esp + 0x40 ]
jne rwxdata
pushad
lea ebx [ eax + 0x6a190e72 ]
mov ebx [ esp + 0x20 ]
pushad
lea esp [ esp + 0x44 ]
jmp sub_1014d32f
pushfd
mov ebx eax
bt di 0x8
cmp dl al
and ebx 0xff0
sub esp 0xfffffffc
je rwxdata
bt ax si
cmp ebx 0xfe0
jmp rwxdata
stc
cmp ebx 0xfe0
call sub_1014bfac
call sub_1014c1e3
pushfd
jmp rwxdata
call sub_1014cbca
cpuid
pushad
pushfd
mov [ esp ] cx
bt ecx 0x10
sub ebp 0xc
mov [ esp + 0x18 ] 0xb6
bt esp 0x12
cmc
cmp [ ebp + 0xc ] 0x1
call sub_1014c837
add eax ebx
pushad
mov [ esp ] ecx
pushad
push 0x99e309f3
add eax 0x773d9ec4
cmp di sp
lea esi [ esi + 0x4 ]
jmp rwxdata
cmc
cmp bh bh
neg eax
stc
pushfd
push [ esp ]
cmc
rol eax 0xa
pushfd
stc
cmp bh 0x5
clc
add ebx eax
clc
jmp rwxdata
sub ebp 0x4
jmp sub_1014bae6
sub_1014c6cc
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014c74e
pushfd
mov [ esp ] cl
bt edi ebx
add ebp 0x2
pushad
lea esp [ esp + 0x2c ]
jbe rwxdata
pushad
pushad
mov ax [ eax ]
push [ esp + 0x8 ]
mov [ ebp ] ax
push [ esp ]
mov [ esp ] 0x81
pushfd
lea esp [ esp + 0x4c ]
jmp rwxdata
mov ax [ eax ]
call sub_1014bc21
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014c7a5
pushad
jmp rwxdata
mov [ esp + 0x24 ] edx
mov [ esp + 0x4 ] 0x2
pushad
pushfd
pushfd
pop [ esp + 0x44 ]
mov [ esp ] 0x5
jmp rwxdata
mov [ esp + 0x4 ] bh
lea esp [ esp + 0x44 ]
push esp
call j_sub_1014c03c
cld
push esi
movzx si dl
bswap si
bswap si
mov esi edx
jmp rwxdata
mov di 0x142a
not di
lea edi [ esi * 2 + 0xa240a9c ]
lea edi [ ecx + eax - 0x40 ]
std
push edi
push 0xf7782972
mov edi eax
pushfd
call sub_1014b3de
call sub_1014c428
sub_1014c7ab
cmc
test dl 0x2f
cmp dx ax
cmp [ ebp + 0xc ] 0x1
mov [ esp ] bl
push 0xc73fd950
pushfd
mov [ ebp + 0xc ] eax
pushad
mov [ ebp + 0x8 ] ebx
jmp rwxdata
push 0x6d6bf94a
jmp rwxdata
mov [ ebp + 0x4 ] ecx
mov [ esp + 0x8 ] al
mov [ esp ] bl
jmp rwxdata
pushfd
mov [ ebp ] edx
push [ esp ]
pushfd
push [ esp ]
call sub_1014c9f5
add ebp 0x2
setpe al
mov [ esp ] 0xc6
mov al [ edx ]
jmp rwxdata
call sub_1014d31b
mov [ esp + 0x4 ] bh
lea esp [ esp + 0x44 ]
push esp
call j_sub_1014c03c
cld
push esi
movzx si dl
bswap si
bswap si
mov esi edx
jmp rwxdata
mov di 0x142a
not di
lea edi [ esi * 2 + 0xa240a9c ]
lea edi [ ecx + eax - 0x40 ]
std
push edi
push 0xf7782972
mov edi eax
pushfd
call sub_1014b3de
call sub_1014c428
sub_1014c8d1
lea esp [ esp + 0x24 ]
push esp
pushad
call sub_1014cbdd
cmc
or al 0x6f
rcl al 0x5
movzx eax [ esi ]
pushfd
xor al bl
cmc
mov [ esp ] 0x49
sub al 0xce
mov [ esp ] 0xb59be8fd
neg al
call sub_1014b9a7
sub_1014c92f
xor esi 0xa271a880
xadd bp cx
shl ebp 0x15
add esi 0xf65b209e
pushad
xadd bx bp
pop edi
neg esi
rcr bl cl
ror di cl
btr ebx 0x2
lea ebp [ esp + 0x20 ]
jmp rwxdata
neg bx
sub esp 0xa0
movzx edi cl
and di 0x9319
sbb ecx 0xd20889cd
xadd bl al
mov edi esp
sub_1014c9a3
xchg [ ebp ] eax
mov [ esp ] 0xb6
pushfd
mov [ esp + 0x8 ] rwxdata
pushfd
call sub_1014c695
push ebp
push edx
push [ esp + 0xc ]
pop [ ebp ]
push 0x35ce92b
push [ esp ]
mov [ esp ] dh
lea esp [ esp + 0x18 ]
jmp sub_1014d32f
sub_1014c9f5
lea esp [ esp + 0x44 ]
jne rwxdata
pushad
lea ebx [ eax + 0x6a190e72 ]
mov ebx [ esp + 0x20 ]
pushad
lea esp [ esp + 0x44 ]
jmp sub_1014d32f
adc bx sp
shld bx dx cl
or bh cl
ror bx 0xe
mov ebx eax
bt sp 0x3
pushfd
pushfd
and ebx 0xff0
bt dx ax
call sub_1014b979
mov [ esp ] 0xee52f1b0
push 0x2349af7a
mov [ esp + 0x1c ] ebx
pushad
lea esp [ esp + 0x3c ]
jmp sub_1014be14
sub_1014ca5f
das
lea ecx [ edi + 0x40 ]
stc
pushad
jmp rwxdata
sub ecx edx
cmc
push 0x1f167626
aas
lea eax [ ebp - 0x80 ]
bswap di
mov [ esp ] sp
inc di
and al 0xfc
inc edi
stc
sub eax ecx
not di
pop edi
bswap di
mov esp eax
jb rwxdata
mov di di
pushfd
movsx di dl
std
jmp rwxdata
lea edi [ eax * 8 + 0x52011292 ]
pushfd
lea edi [ esi * 8 + 0xf2dc916 ]
jmp rwxdata
cld
push esi
movzx si dl
bswap si
bswap si
mov esi edx
jmp rwxdata
push esi
call sub_1014ba6e
pushfd
jmp rwxdata
mov di 0x142a
not di
lea edi [ esi * 2 + 0xa240a9c ]
lea edi [ ecx + eax - 0x40 ]
std
push edi
push 0xf7782972
mov edi eax
pushfd
call sub_1014b3de
call sub_1014c428
lea esp [ esp + 0x44 ]
push esp
pushad
call sub_1014c3b3
mov [ esp + 0x24 ] ecx
mov [ esp + 0x4 ] dl
call sub_1014c260
pushfd
mov [ fs : eax ] edx
push [ esp + 0x4 ]
push eax
lea esp [ esp + 0x10 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014cab6
pushad
mov [ ebp ] ax
mov [ esp ] ah
pushfd
pushfd
lea esp [ esp + 0x4c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014cb9d
clc
pushad
clc
mov al [ eax + edi ]
push [ esp ]
stc
mov [ esp + 0x8 ] 0xa
sub ebp 0x2
mov [ esp ] 0x22
add esi 0x1
mov [ esp ] 0xeec8
mov [ ebp ] ax
pushfd
lea esp [ esp + 0x2c ]
jmp sub_1014d32f
sub_1014cbca
pushfd
inc esi
pushad
jmp rwxdata
call sub_1014c85f
xor al ch
mov al [ esi ]
bt bp di
call sub_1014c1c3
mov [ ebp ] edx
pushfd
pushfd
pushfd
push 0xaa4889b4
lea esp [ esp + 0x40 ]
jmp sub_1014d32f
sub_1014cbf6
bt di sp
mov [ ebp - 0x4 ] ecx
push 0x35a902a0
push 0x5e070397
push 0x76a69fa8
test dl dl
or ecx ecx
mov [ esp + 0x4 ] cl
lea esp [ esp + 0x10 ]
je rwxdata
test bh bl
bt si dx
cmc
xor eax eax
jmp rwxdata
call sub_1014bd48
pushad
mov eax [ ebp ]
call sub_1014addf
stc
xadd al cl
clc
mov al [ ebp ]
sar cl cl
shl cl 0x7
mov cl [ ebp + 0x2 ]
push edx
cmp di 0xbecf
mov [ esp ] dx
mov [ esp ] 0x10cc
sub ebp 0x2
pushad
call sub_1014c76b
shr ax cl
add ax 0x7c7
btc eax ebp
mov eax ebp
cmc
push 0xdb452cfc
sub ebp 0x4
mov [ esp ] 0x1f
call sub_1014b817
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x3ff0c1f2
jmp rwxdata
push 0xf7ae4d09
call sub_1014c9a3
call sub_1014ca5f
push [ esp ]
mov [ ebp + 0x8 ] ebx
push 0x8b902ed
jmp sub_1014be6d
push 0xd0d121af
call sub_1014bef5
sub_1014cccc
push edx
lea esp [ esp + 0x38 ]
jpe rwxdata
call sub_1014d040
pushfd
pushfd
pushfd
pushad
jmp rwxdata
push [ esp + 0x28 ]
pop [ ebp ]
mov [ esp + 0x8 ] cl
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp sub_1014d32f
sub_1014cd19
push 0x2ae4bc6b
lea esp [ esp + 0x8 ]
jbe rwxdata
pushad
push [ esp ]
mov [ esp ] ax
mov [ ebp + 0x4 ] ax
pushfd
call j_sub_1014cbd2
mov [ ebp + 0x4 ] ax
push 0x2e115d5b
pushfd
pop [ esp ]
jmp sub_1014b65f
sub_1014cdae
stc
shrd cx di 0x4
neg al
add ch bl
movsx cx al
xor ch cl
xor al 0xfa
lea ecx [ ebp * 8 + 0x71e26cce ]
btc cx bp
xor bl al
movzx cx cl
mov cl bl
not ch
inc esi
setbe cl
ror cl 0x4
movzx ecx al
call sub_1014cbf6
pushad
clc
push esp
sub ebp 0x2
cmp esi edi
stc
cmp cl 0xdc
add esi 0x1
pushad
jmp rwxdata
mov [ ebp ] ax
mov [ esp ] 0x9136
mov [ esp + 0x8 ] edi
mov [ esp + 0xc ] 0x5f
lea esp [ esp + 0x44 ]
jmp sub_1014d32f
sub_1014ce3a
mov [ esp ] edi
push eax
pushad
call sub_1014ab33
push edx
lea esp [ esp + 0x44 ]
jle rwxdata
pushad
lea esp [ esp + 0x20 ]
jns rwxdata
cpuid
jmp rwxdata
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
cpuid
cmc
sub ebp 0xc
clc
pushfd
cmp [ ebp + 0xc ] 0x1
mov [ esp ] 0x9b47
call sub_1014d13d
jmp rwxdata
cpuid
pushad
pushfd
mov [ esp ] cx
bt ecx 0x10
sub ebp 0xc
mov [ esp + 0x18 ] 0xb6
bt esp 0x12
cmc
cmp [ ebp + 0xc ] 0x1
call sub_1014c837
add eax ebx
pushad
mov [ esp ] ecx
pushad
push 0x99e309f3
add eax 0x773d9ec4
cmp di sp
lea esi [ esi + 0x4 ]
jmp rwxdata
bt cx dx
sub ebp 0xc
call sub_1014c7ab
cmp bl 0x9a
bt bp di
sub ebp 0x2
push 0xbf8b5964
push ebp
jmp rwxdata
cmc
cmp bh bh
neg eax
stc
pushfd
push [ esp ]
cmc
rol eax 0xa
pushfd
stc
cmp bh 0x5
clc
add ebx eax
clc
jmp rwxdata
shl eax cl
pushad
mov [ esp ] al
push 0xfd611c72
mov [ esp + 0x4 ] esp
mov [ ebp + 0x4 ] eax
call sub_1014cccc
pushfd
div [ ebp + 0x8 ]
mov [ esp ] di
pushfd
mov [ esp ] di
pushfd
mov [ ebp + 0x4 ] edx
jmp rwxdata
sub ebp 0x4
jmp sub_1014bae6
push [ esp + 0x4 ]
mov [ ebp + 0x8 ] eax
jmp sub_1014b96d
sub_1014ce5b
mov [ esp + 0x4 ] edx
mov [ esp ] 0xe2ff0f60
pushfd
pop [ esp ]
pushad
call sub_1014cdf9
cmp dh 0xd5
xor ax bx
call sub_1014cb56
pushfd
push 0x8c595a6d
mov [ esp ] bl
mov [ esp ] ch
mov [ ebp ] ax
pushad
mov [ esp + 0xc ] 0xe2a3
push esp
pushfd
lea esp [ esp + 0x30 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014cfd1
call sub_1014b55a
push [ esp ]
pushfd
mov [ esp + 0x44 ] ebp
pushfd
mov [ esp ] 0x4a
mov [ esp + 0x44 ] esi
call sub_1014c63a
mov [ esp ] 0x33bc
shr eax cl
jmp rwxdata
mov [ ebp + 0x4 ] eax
jmp sub_1014b6dc
sub_1014d040
lea esp [ esp + 0x4 ]
jl rwxdata
push 0x1ea3fc9d
pushfd
pop [ esp ]
pushfd
mov [ esp ] 0x91
push 0xfa7c3e63
pushad
push [ esp + 0x28 ]
pop [ ebp ]
pushfd
mov [ esp ] al
pushfd
mov [ esp ] ah
lea esp [ esp + 0x34 ]
jmp sub_1014d32f
pushfd
mov [ esp ] ah
pushfd
pop [ esp ]
jmp rwxdata
pop [ ebp ]
pushfd
pushfd
mov [ esp ] 0xab21ad7e
lea esp [ esp + 0x8 ]
jmp sub_1014d32f
sub_1014d08c
pushad
mov [ ebp ] eax
pushfd
mov [ esp + 0x10 ] di
lea esp [ esp + 0x38 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014d0e5
pushfd
pop [ esp + 0x2c ]
lea esp [ esp + 0x2c ]
jge rwxdata
pushad
pushad
jmp rwxdata
pushad
mov [ esp ] ch
mov [ esp + 0x4 ] 0xe8
push [ esp + 0x20 ]
pop [ ebp ]
push [ esp ]
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
push 0x17dc90fc
push [ esp + 0x44 ]
pop [ ebp ]
push 0x89da9cd2
pushfd
mov [ esp ] dl
lea esp [ esp + 0x50 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014d172
mov [ ebp - 0x4 ] ecx
bt bx 0xd
or ecx ecx
push 0x7ef86043
push [ esp + 0x4 ]
call sub_1014d41e
stc
push eax
xor al 0xfa
cmc
xor bl al
cmc
cmc
stc
cmc
sub ebp 0x2
mov [ esp + 0x4 ] edi
mov [ ebp ] ax
mov [ esp ] si
mov [ esp + 0x4 ] ah
pushfd
mov [ esp ] bp
lea esp [ esp + 0x18 ]
jmp sub_1014d32f
sub_1014d24b
mov [ esp ] eax
pushfd
pushfd
mov [ esp ] al
mov [ esp + 0x4 ] edi
push [ esp ]
mov [ esp + 0x4 ] ebp
jmp rwxdata
mov [ esp ] esi
pushad
mov [ esp + 0x1c ] ecx
mov [ esp + 0x10 ] 0x97
pushfd
mov [ esp + 0x1c ] ebx
push esp
pushfd
pushad
mov [ esp ] 0x1e
lea esp [ esp + 0x44 ]
jmp sub_1014be14
sub_1014d263
lea esp [ esp + 0x30 ]
jne rwxdata
cmp sp bp
bt dx 0x7
call sub_1014c5d1
shl eax cl
pushad
mov [ esp ] al
push 0xfd611c72
mov [ esp + 0x4 ] esp
mov [ ebp + 0x4 ] eax
call sub_1014cccc
pushfd
div [ ebp + 0x8 ]
mov [ esp ] di
pushfd
mov [ esp ] di
pushfd
mov [ ebp + 0x4 ] edx
jmp rwxdata
jmp rwxdata
push [ esp + 0x4 ]
mov [ ebp + 0x8 ] eax
jmp sub_1014b96d
bt ebx ebp
call j_sub_1014abdd
shl al cl
mov al [ esi ]
cmc
cmp di 0x23c6
lea ecx [ edx + 0x4482b25e ]
xor al bl
jle rwxdata
and cx 0xd622
test dx 0xdac8
sub al 0xce
jmp sub_1014cdae
xor ch dh
sub al 0xce
mov cx 0x98c3
btr ecx 0x1
neg al
btr cx ax
shrd ecx ebp 0x1c
xor al 0xfa
clc
xor bl al
inc cx
not ch
bswap cx
call sub_1014ba23
pushfd
push [ esp ]
push [ esp ]
mov bp [ ebp ]
pushfd
lea esp [ esp + 0x10 ]
jmp sub_1014d32f
sub_1014d31b
pushfd
pushfd
mov [ ebp ] ax
pushad
push [ esp ]
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1014c5fe
sub_1014d344
lea edi [ ecx + eax - 0x40 ]
pushad
pushad
mov [ esp + 0x40 ] edi
jmp rwxdata
bswap di
bswap di
pushfd
mov edi eax
mov [ esp + 0x10 ] 0x89
call sub_1014bfdc
push ecx
call sub_1014c7a5
sub_1014d353
pushfd
pushfd
pop [ esp + 0xc ]
push [ esp ]
mov [ esp ] ecx
pushfd
push [ esp + 0x14 ]
pop [ ebp ]
mov [ esp ] ax
pushad
pushfd
push edx
lea esp [ esp + 0x40 ]
jmp sub_1014d32f
sub_1014d3d0
sub di 0xa5a7
mov [ esp ] 0x0
rol bp cl
dec ebp
sub di 0xc20f
mov esi [ esp + 0x30 ]
shl edi cl
rcl edi 0x4
add bp 0xdebd
call sub_1014c92f
cld
call sub_1014b86c
call sub_1014d007
pushfd
pop [ esp + 0x28 ]
push 0x8c691dd5
push 0x69e8e5c7
jmp rwxdata
jmp sub_1014bb15
sub_1014d41e
lea esp [ esp + 0x10 ]
je rwxdata
test bh bl
bt si dx
cmc
xor eax eax
jmp rwxdata
cmp sp bp
bt dx 0x7
call sub_1014c5d1
shl eax cl
pushad
mov [ esp ] al
push 0xfd611c72
mov [ esp + 0x4 ] esp
mov [ ebp + 0x4 ] eax
call sub_1014cccc
pushfd
div [ ebp + 0x8 ]
mov [ esp ] di
pushfd
mov [ esp ] di
pushfd
mov [ ebp + 0x4 ] edx
jmp rwxdata
push 0xf7ae4d09
call sub_1014c9a3
call sub_1014ca5f
push [ esp ]
mov [ ebp + 0x8 ] ebx
push 0x8b902ed
jmp sub_1014be6d
push [ esp + 0x4 ]
mov [ ebp + 0x8 ] eax
jmp sub_1014b96d
sub_1014d4d9
lea esp [ esp + 0x28 ]
push esp
call sub_1014d24b
mov di 0x142a
not di
lea edi [ esi * 2 + 0xa240a9c ]
lea edi [ ecx + eax - 0x40 ]
std
push edi
push 0xf7782972
mov edi eax
pushfd
call sub_1014b3de
call sub_1014c428
sub_1014d509
pushfd
pop [ esp + 0x14 ]
pushfd
push [ esp ]
pushfd
push [ esp + 0x20 ]
pop [ ebp ]
mov [ esp + 0x4 ] 0xbe
pushfd
mov [ esp + 0x4 ] 0x96539eee
push ecx
lea esp [ esp + 0x2c ]
jmp sub_1014d32f
sub_1014d58a
pushad
mov [ ebp ] edx
call sub_1014b812
call sub_1014c1e3
pushfd
jmp rwxdata
call sub_1014cbca
cpuid
pushad
pushfd
mov [ esp ] cx
bt ecx 0x10
sub ebp 0xc
mov [ esp + 0x18 ] 0xb6
bt esp 0x12
cmc
cmp [ ebp + 0xc ] 0x1
call sub_1014c837
add eax ebx
pushad
mov [ esp ] ecx
pushad
push 0x99e309f3
add eax 0x773d9ec4
cmp di sp
lea esi [ esi + 0x4 ]
jmp rwxdata
cmc
cmp bh bh
neg eax
stc
pushfd
push [ esp ]
cmc
rol eax 0xa
pushfd
stc
cmp bh 0x5
clc
add ebx eax
clc
jmp rwxdata
sub ebp 0x4
jmp sub_1014bae6
sub_100b18d6
bswap ax
lea eax [ rwxdata ]
jmp sub_100f9599
sub_100b1caa
mov bl 0x2
jmp sub_1014aa21
sub_100b1e7e
cmp [ edi - 0x1 ] 0x0
jmp sub_100b5636
sub_100b1ed4
mov [ esp + 0x28 ] rwxdata
pushfd
mov [ esp + 0x28 ] eax
push esp
push [ esp + 0x2c ]
retn 0x30
sub_100b2496
test dh 0xf2
push [ edi ]
pop [ esp + 0x20 ]
jmp sub_100fd108
sub_100b2a48
not al
call j_sub_100fa966
sub_100b2b2a
sub al al
push 0x4d300f7d
pushfd
call sub_10128e63
scasb [ edi ]
inc esp
fimul [ eax - 0x323285b1 ]
xchg edx eax
dec esi
pop ebx
out 0xdc eax
sub_100b339b
mov bl [ esp ]
setpo bl
push eax
inc ecx
mov [ esp ] 0xf5
push 0xdd931de7
call sub_100fa4bd
sub_100b33cb
movzx ax dl
mov [ esp ] ebx
pushfd
lea eax [ rwxdata ]
jmp rwxdata
call sub_10125917
xor ebx edi
insd
cmc
xor [ edx - 0x33 ] bh
sbb dh ch
retn 0x8198
sub_100b356a
cmp eax [ ebp - 0x10 ]
jmp sub_1012d3e8
j_sub_100fd118
jmp sub_100fd118
sub_100b3748
cmp bp 0x27ce
pushfd
neg al
call sub_101233ff
j_sub_100f8793
jmp sub_100f8793
sub_100b400f
lea eax [ rwxdata ]
pushad
call sub_100b1ed4
pushad
pushfd
add edx eax
pushad
push edx
lea esp [ esp + 0x48 ]
jmp sub_1012ce3f
sub_100b402a
push eax
seto al
lodsb [ esi ]
stc
cmp bl bh
push 0xbcd0d1af
call sub_100b68d2
sub_100b4929
call sub_100b31fd
mov [ esi + 0x69 ] dl
daa
xor bh [ edx - 0x33 ]
mov eax [ cs : 0x3f4d5777 ]
add [ edx - 0x64 ] al
js rwxdata
pop edi
adc ebp eax

sbb ah bh
retn 0xb2ce
sub_100b4ed7
or ecx ecx
jmp sub_100fceb0
sub_100b626d
mov [ esp ] edi
jmp sub_100b6421
sub_100b6793
mov [ esp + 0x4 ] 0x5be495be
pushad
pushad
mov [ esp + 0x40 ] 0x76b5d312
push [ esp ]
lea esp [ esp + 0x44 ]
jmp j_sub_1014bf79
sub_100b68d2
not al
cmp dl 0xa5
clc
mov [ esp + 0x4 ] 0x832bff15
add al 0x67
cmp bh al
jmp sub_100b3748
sub_100b923c
xor eax eax
add esp 0x4
clc
bt di 0x6
jmp rwxdata
or ebx ebx
push ebx
jmp sub_1012be49
sub_100b9704
mov [ esp ] 0xf08f
push [ esp ]
pushad
lea esp [ esp + 0x28 ]
call sub_100b5f01
call sub_1012a458
pop es
mov ebp 0x79e3b5c9
int 0xa4
jmp 0x1bbcf4c0
sub_100b99bb
call sub_100f91c5
sub_100b9c1f
push [ edi ]
pop [ esp + 0x40 ]
push [ esp + 0x4 ]
stc
pushfd
push edx
cmp edi ebx
pushfd
call sub_100fa1c4
sub_100b9c34
add ah 0x20
add esp 0x4
stc
cmc
stc
or al al
push 0x60458158
jmp sub_10123bc1
sub_100ba35a
lea esp [ esp + 0xc ]
call sub_100b5f01
pushad
call sub_100b4929
retn
sub_100ba9d3
bt dx cx
sub al 0x30
stc
cmp al 0x9
jmp j_sub_100ba73c
sub_100baaa9
cmp ah 0x41
pushad
call sub_100fb3af
outsb
mov eax [ 0xffffffffce4eaa72 ]
0xf16a012d 0xe44a
xchg esi eax
jmp rwxdata
sub_100f8793
lea eax [ rwxdata ]
push 0xcc325728
push 0x890618b2
mov [ esp + 0x4 ] rwxdata
pushad
mov [ esp + 0x20 ] eax
mov [ esp ] 0x36
pushfd
mov [ esp ] 0x31
mov [ esp ] di
push [ esp + 0x24 ]
retn 0x28
j_sub_100b1e7e
jmp sub_100b1e7e
sub_100f958d
mov [ esp ] 0x719854e4
jmp sub_100b626d
j_sub_100ba73c
jmp sub_100ba73c
sub_100f976a
pop eax
mov [ esp ] ebx
push 0x279a672b
lea eax [ LocalFree@IAT ]
push ebx
pushad
push [ esp ]
call sub_10128e56
sub_100f9aa5
imul edx edx 0xa
push 0x538819a3
bt ax 0x3
add edx eax
mov [ esp ] 0xe4
lea esp [ esp + 0x8 ]
jmp sub_1012ce3f
j_sub_10124644
jmp sub_10124644
sub_100fa966
push 0x4858b269
rol al 0x2
mov [ esp + 0x4 ] ebx
lea esp [ esp + 0xc ]
call sub_100fd08f
call sub_10123797
int3
sub_100fd08f
pushfd
test cl 0xca
jmp rwxdata
sub ecx ecx
lea esp [ esp + 0x4 ]
sub_100fd204
mov edi ebx
cmp dl bh
not al
cmc
shr al cl
mov al 0x2e
clc
jmp sub_1011ff35
sub_100fd2ee
cmp cx ax
mov al [ edi ]
cmp ax bx
stc
cmp bl ch
test al al
jmp sub_100b9071
sub_100fd4bf
mov [ esp + 0x4 ] ch
push [ eax ]
pop [ esp + 0x30 ]
mov [ esp ] bp
mov [ esp ] 0xfd72
push 0x1e65c3db
push 0x447f9dd3
push [ esp + 0x38 ]
retn 0x3c
j_sub_100fa966
jmp sub_100fa966
j_sub_10120a18
cmc
jmp sub_10120a18
sub_1012090e
call sub_1012ce51
aad 0xd6
ror ax cl
mov eax edx
shl al cl
inc al
sub al 0xb6
setno al
add edi 0x1
rol al 0x3
jmp sub_10129853
sub_10120a18
not al
jmp sub_100b642f
sub_101233ff
rol al 0x6
push ebx
call sub_100fd4b2
bound esp [ esp + ebx * 4 ]
mov [ esi + 0x73 ] 0xcd
cmp al 0x9e
push 0x25
int1
hlt
j_sub_100fa1b4
jmp sub_100fa1b4
sub_10123797
jmp rwxdata
cmc
cmp eax 0x7d00
jmp sub_10128d59
sub_10123b97
setno bh
mov ebx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x2fa6c658
jmp sub_1012928f
sub_101243c3
inc esi
call sub_1012e1b1
sub_10125917
pushfd
mov [ esp ] bp
mov [ esp + 0x8 ] rwxdata
mov [ esp ] 0x4dd5
pushfd
jmp rwxdata
mov [ esp + 0x8 ] eax
push [ esp + 0x4 ]
push ebp
push [ esp + 0x10 ]
retn 0x14
sub_10128e56
mov [ esp + 0x2c ] rwxdata
call sub_10123ac3
sub_10128eb2
call sub_100b6793
sub_1012928f
mov esp ebp
movzx ebp al
lea ebp [ ebx + 0x3730436c ]
pop ebp
pushad
pushad
push [ esp + 0x40 ]
retn 0x48
j_sub_100fd4bf
jmp sub_100fd4bf
sub_10129853
and al dh
shl al 0x3
mov al [ edi ]
test dx 0xee63
bt cx 0x9
jmp sub_100b329a
sub_1012a18a
pushfd
[ edi ] [ esi ]
call sub_100fb4ca
sub_1012a84f
mov [ esp + 0xc ] rwxdata
pushfd
mov [ esp + 0xc ] eax
mov [ esp ] 0x5c
pushad
mov [ esp ] bl
pushfd
push [ esp + 0x30 ]
retn 0x34
sub_1012b007
mov [ esp + 0x4 ] dh
call sub_100f9ff5
xchg [ ebx ] ax
call sub_10128eb2
sub_1012b415
adc ah 0x1d
mov ah [ esi ]
jmp sub_100baaa9
j_sub_100b99df
jmp sub_100b99df
sub_1012bffa
adc dl dl
lea esp [ esp + 0x54 ]
pushad
push [ esp ]
push [ esp + 0x24 ]
retn 0x28
sub_1012c67f
cmc
call sub_1012953d
jmp sub_1012324f
sub_1012c7d4
cmp ecx edx
cmp ah 0x2e
lea esp [ esp + 0x4 ]
pushfd
mov [ esp ] 0xc6
push [ esp + 0x4 ]
retn 0x8
j_sub_100ba258
jmp sub_100ba258
sub_1012cb4d
stc
jmp rwxdata
clc
add [ ebx + edi ] edx
add esp 0x8
pushfd
mov [ esp ] dh
push esp
add esi 0x2
jmp sub_100b50b6
sub_1012ce3f
cmp ah 0xaf
cmc
bt edx 0x7
inc al
add edi 0x1
call sub_100fd2ee
sub_1012ce60
cmp eax [ ebp - 0x10 ]
call sub_1012d3f0
sub_1012ce68
pushfd
jmp rwxdata
call sub_100f9875
sub_1012d18d
call sub_1012e4ab
sub_1012d3e8
push [ esp ]
call sub_100fcd93
sub_1012d3f0
mov [ esp ] 0x612a
jmp sub_101240b3
sub_1012d41c
jmp rwxdata
cmp ecx 0xd3652d73
sub edi 0x4
jmp sub_100b2496
sub_1012d45d
pushfd
pushad
lea esp [ esp + 0x28 ]
ja rwxdata
jmp sub_10120201
call sub_100f9aa5
sub_1012dcc4
call sub_100f8e05
sub_1012df8c
pushfd
call sub_1012dcc9
jmp sub_10120201
j_sub_1011fc79
jmp sub_1011fc79
sub_1012f84e
call sub_100fa01f
sub_1014aa21
inc ecx
call sub_100b1331
pushad
mov [ esp + 0x24 ] 0x5be4e654
push [ esp + 0xc ]
push 0xcaadbc92
mov [ esp + 0x28 ] 0xc5b77a09
pushfd
lea esp [ esp + 0x2c ]
jmp sub_1014ae44
sub_1014abdd
xchg [ ebp ] eax
push [ esp ]
pushad
jmp rwxdata
call sub_1014bbb4
sub_1014abe9
pushad
mov [ esp + 0x3c ] edi
jmp rwxdata
mov [ esp + 0x38 ] ebp
call j_sub_1014d2db
j_sub_1014c814
jmp sub_1014c814
sub_1014ad11
push 0x1980c03
pushfd
pushfd
push [ esp + 0x3c ]
pop [ ebp ]
pushfd
mov [ esp + 0x4 ] 0x4f
push esi
push [ esp + 0x18 ]
lea esp [ esp + 0x4c ]
jmp sub_1014d32f
sub_1014b2ce
pushad
mov [ esp + 0x40 ] ebx
push [ esp ]
lea esp [ esp + 0x44 ]
jmp sub_1014be14
sub_1014b367
and [ ebp + 0x4 ] ax
call sub_1014d353
sub_1014b370
mov [ esp + 0x40 ] ebx
mov [ esp ] dl
lea esp [ esp + 0x40 ]
jmp sub_1014be14
sub_1014b389
push [ esp + 0x14 ]
mov [ esp + 0x4c ] ebx
pushfd
mov [ esp + 0x8 ] bh
lea esp [ esp + 0x50 ]
jmp sub_1014be14
j_sub_1014abe9
jmp sub_1014abe9
sub_1014b4f3
pushfd
pop [ esp + 0x8 ]
jmp sub_1014c054
sub_1014b54f
pushfd
pop [ esp + 0x20 ]
call sub_1014c8d1
sub_1014b55a
cld
call sub_1014d3a8
push [ esp + 0x4 ]
mov [ esp + 0x3c ] esi
push [ esp ]
mov [ esp ] edx
mov [ esp + 0x3c ] ecx
mov [ esp + 0x4 ] 0x18
mov [ esp ] 0xaf
call sub_1014c7f6
sub_1014b65f
call sub_1014bb4c
sub_1014b664
mov [ esp + 0xc ] ebx
pushfd
lea esp [ esp + 0x10 ]
jmp sub_1014be14
sub_1014b761
pushfd
mov [ esp + 0x14 ] ebx
mov [ esp ] bh
pushfd
push [ esp + 0x4 ]
lea esp [ esp + 0x1c ]
jmp sub_1014be14
sub_1014b817
mov [ ebp ] eax
push [ esp ]
pushfd
pushfd
lea esp [ esp + 0x14 ]
jmp sub_1014d32f
j_sub_1014d4d9
jmp sub_1014d4d9
sub_1014b86c
call j_sub_1014c814#2
jmp sub_1014bf3a
sub_1014b893
sub ebp 0x2
mov [ esp ] 0x9e
mov [ esp ] dh
call j_sub_1014b367
jmp sub_1014bb15
sub_1014b8ee
pushfd
mov [ esp + 0x18 ] ecx
mov [ esp ] 0x4c4175e0
pushfd
push 0xbddf9cf3
pushfd
push [ esp + 0x24 ]
retn 0x28
sub_1014b92c
mov [ esp ] 0x79c5
mov [ esp ] eax
pushfd
mov [ esp ] bh
push ebx
pushfd
mov [ esp + 0x8 ] edi
jmp rwxdata
mov [ esp ] ah
mov [ esp + 0x4 ] ebp
call sub_1014b8b6
call sub_1014c9ec
sub_1014ba23
inc esi
sub cx di
movsx cx bl
movzx ecx al
stc
cmp al 0xd
mov [ esp ] si
jmp sub_1014d172
sub_1014ba6e
std
mov esi edx
std
movzx di bl
lea edi [ ebx * 8 + 0x7346c370 ]
jmp sub_1014d344
j_sub_1014b367
jmp sub_1014b367
sub_1014bab2
mov [ ebp ] ax
pushfd
lea esp [ esp + 0x44 ]
jmp sub_1014d32f
sub_1014bae6
mov [ esp + 0x14 ] esp
mov [ ebp ] eax
mov [ esp + 0x4 ] 0xc9
mov [ esp ] dl
mov [ esp ] ch
mov [ esp + 0x4 ] ch
lea esp [ esp + 0x50 ]
jmp sub_1014d32f
sub_1014bb4c
pushad
push [ esp + 0x24 ]
pop [ ebp ]
pushfd
push 0x68143c5d
mov [ esp + 0x8 ] 0x526e
push [ esp + 0x4 ]
lea esp [ esp + 0x34 ]
jmp sub_1014d32f
j_sub_1014bf79
jmp sub_1014bf79
sub_1014bbb4
mov [ esp + 0x28 ] rwxdata
pushfd
pushfd
mov [ esp + 0x2c ] eax
push ebp
pushfd
push [ esp + 0x34 ]
retn 0x38
sub_1014bd2b
push [ esp + 0xc ]
pop [ ebp ]
push 0x10870b85
pushad
push edx
mov [ esp ] 0x9d3c
lea esp [ esp + 0x38 ]
jmp sub_1014d32f
sub_1014bd55
push [ esp + 0x34 ]
pop [ ebp ]
push [ esp ]
pushfd
lea esp [ esp + 0x40 ]
jmp sub_1014d32f
sub_1014bda7
call sub_1014cfd1
mov [ esp + 0x20 ] esi
mov [ esp + 0x44 ] edx
mov [ esp + 0x4 ] 0x9bcd
push 0xddd6ab7f
mov [ esp + 0x4 ] dl
push [ esp + 0x48 ]
retn 0x4c
sub_1014be6d
push 0xbfa3a517
pushfd
mov [ ebp + 0x4 ] ecx
call sub_1014d58a
jmp sub_1014bd55
j_sub_1014cbd2
jmp sub_1014cbd2
j_sub_1014c814#2
jmp j_sub_1014c814
j_sub_1014c03c
jmp sub_1014c03c
sub_1014bf30
pushfd
mov [ ebp + 0x4 ] ecx
push ebp
call sub_1014d01d
sub_1014bf6e
pushfd
pop [ esp + 0x28 ]
jmp j_sub_1014d4d9
sub_1014bf79
push 0x3b1e9428
pushad
push ecx
mov [ esp + 0x24 ] edx
call sub_1014d462
sub_1014bfa7
call sub_1014b664
sub_1014bfdc
jmp rwxdata
cld
call sub_1014b86c
call sub_1014d007
pushfd
pop [ esp + 0x28 ]
push 0x8c691dd5
push 0x69e8e5c7
jmp rwxdata
jmp sub_1014bb15
sub_1014c020
mov [ esp ] dh
push [ esp + 0x4 ]
pop [ ebp ]
pushfd
push [ esp ]
pushad
mov [ esp + 0x4 ] bl
lea esp [ esp + 0x30 ]
jmp sub_1014d32f
j_sub_1014cffe
jmp sub_1014cffe
sub_1014c12b
mov [ esp + 0x40 ] ebx
pushfd
lea esp [ esp + 0x44 ]
jmp sub_1014be14
sub_1014c260
pushfd
jmp rwxdata
mov [ esp + 0x28 ] ebx
pushfd
mov [ esp ] al
pushfd
push edx
lea esp [ esp + 0x34 ]
jmp sub_1014be14
j_sub_1014bf6e
jmp sub_1014bf6e
sub_1014c405
mov [ esp + 0x1c ] ecx
push [ esp ]
call sub_1014b2ce
call sub_1014d040
sub_1014c428
push 0x12e349a2
mov [ esp + 0x48 ] ebx
mov [ esp ] dl
push esi
lea esp [ esp + 0x4c ]
jmp sub_1014be14
sub_1014c480
push 0xf50ae366
jmp rwxdata
pushfd
mov [ esp + 0x10 ] ecx
call sub_1014b761
aam 0xb8
mov eax [ ebp ]
jmp sub_1014b7a4
sub_1014c48a
pushad
jmp rwxdata
push [ esp ]
mov [ ebp ] eax
pushfd
push 0x45d15dcd
pushfd
pushfd
lea esp [ esp + 0x38 ]
jmp sub_1014d32f
sub_1014c490
mov [ esp ] 0x4b
mov [ esp ] 0xf643
mov [ esp + 0x40 ] ecx
call sub_1014c12b
sub_1014c550
mov [ esp + 0x40 ] ebx
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp sub_1014be14
sub_1014c55f
mov [ esp ] 0xd350
pushfd
pop [ esp + 0x4 ]
mov [ esp ] ecx
call sub_1014c163
mov [ ebp + 0x4 ] eax
jmp sub_1014b6dc
sub_1014c589
mov [ esp + 0x38 ] ecx
jmp sub_1014ca49
sub_1014c5d1
xor eax eax
call sub_1014c4a3
sub ebp 0x4
jmp sub_1014bae6
j_sub_1014d509
jmp sub_1014d509
sub_1014c5fe
stc
add ecx 0x0
jmp sub_1014b8ee
sub_1014c614
call j_sub_1014cb65
sub_1014c63a
call sub_1014c614
mov [ esp ] ch
push 0x388552e1
pushfd
mov [ esp + 0x38 ] esi
call sub_1014c589
sub_1014c695
mov [ esp + 0xc ] eax
mov [ esp + 0x4 ] 0xdc6d407b
push 0xaa8a8559
push [ esp ]
push [ esp + 0x14 ]
retn 0x18
sub_1014c76b
shr al cl
push [ esp ]
mov [ ebp + 0x4 ] ax
push 0x1b1f562c
mov [ esp + 0x4 ] 0x4882
pushfd
pushfd
pop [ esp + 0x30 ]
pushfd
jmp rwxdata
jmp sub_1014bd55
sub_1014c7f6
call sub_1014c550
mov al 0x50
mov eax [ ebp ]
rcl dx cl
mov dx [ ebp + 0x4 ]
bt bp 0x7
add ebp 0x6
jmp sub_1014ab1d
sub_1014c814
[ edi ] [ esi ]
shl si 0x2
or di 0xc7d5
neg di
sub si ax
mov edi [ esp + 0x50 ]
cld
dec si
mov esi [ esp + 0x54 ]
cld
call sub_1014bf89
sub_1014c837
mov [ esp + 0x8 ] al
jmp sub_1014cb95
sub_1014c850
mov ebx [ esp + 0x4 ]
pushfd
pushad
lea esp [ esp + 0x2c ]
jmp sub_1014d32f
sub_1014c85f
mov [ ebp ] eax
mov [ esp + 0x4 ] 0xf5
lea esp [ esp + 0x30 ]
jmp sub_1014d32f
j_sub_1014cb65
jmp sub_1014cb65
sub_1014c902
call sub_1014b26d
mov [ esp + 0x24 ] esi
pushfd
mov [ esp + 0x24 ] ecx
pushfd
mov [ esp ] 0xef
push esi
pushfd
mov [ esp + 0x2c ] ebx
push 0xe6b8dcb8
lea esp [ esp + 0x30 ]
jmp sub_1014be14
sub_1014c9ec
mov [ ebp + 0x4 ] ax
jmp sub_1014cd14
sub_1014ca49
mov [ esp + 0x34 ] ebx
mov [ esp + 0x4 ] esp
mov [ esp + 0x4 ] 0x64
lea esp [ esp + 0x34 ]
jmp sub_1014be14
j_sub_1014abdd
xor eax eax
jmp sub_1014abdd
sub_1014ca8f
mov [ esp + 0x40 ] ecx
push [ esp ]
jmp rwxdata
call sub_1014c428
sub_1014cb56
jmp rwxdata
clc
add ax 0xaa5f
pushad
call sub_1014ad38
and cx 0xd622
test dx 0xdac8
sub al 0xce
jmp sub_1014cdae
sub_1014cb65
mov [ esp + 0x4c ] ecx
jmp sub_1014b389
sub_1014cb8a
mov [ esp + 0x24 ] edx
pushfd
pushfd
jmp rwxdata
pushfd
pop [ esp + 0x28 ]
push 0x8c691dd5
push 0x69e8e5c7
jmp rwxdata
jmp sub_1014bb15
sub_1014cb95
mov [ ebp + 0xc ] eax
jmp sub_1014cda6
sub_1014cbd2
pushfd
pushfd
pop [ esp + 0x2c ]
call sub_1014ad11
sub_1014cbdd
mov [ esp + 0x20 ] eax
jmp j_sub_1014abe9
sub_1014cbe6
sub ebp 0x4
pushad
mov [ esp + 0x4 ] 0xf30a
call sub_1014b7da
sub_1014cd14
call sub_1014b4f3
sub_1014cda6
mov [ ebp + 0x8 ] ebx
jmp sub_1014bf30
sub_1014cdf9
lea esp [ esp + 0x24 ]
push esp
call sub_1014b92c
push [ esp ]
mov [ ebp ] eax
pushfd
push 0x45d15dcd
pushfd
pushfd
lea esp [ esp + 0x38 ]
jmp sub_1014d32f
sub_1014cfa9
mov [ esp ] bx
call sub_1014c55f
push 0xf7ae4d09
call sub_1014c9a3
call sub_1014ca5f
push [ esp ]
mov [ ebp + 0x8 ] ebx
push 0x8b902ed
jmp sub_1014be6d
sub_1014cffe
mov [ esp ] bp
call sub_1014ce5b
sub_1014d007
mov [ esp ] ebx
push 0xfe80cca4
mov [ esp ] bl
pushad
pushfd
lea esp [ esp + 0x28 ]
jmp sub_1014be14
sub_1014d01d
mov [ ebp ] edx
mov [ esp ] bx
call sub_1014c619
mov ax [ ebp ]
bt sp ax
cmc
jmp sub_1014b893
sub_1014d13d
mov [ ebp + 0xc ] eax
mov [ esp ] dh
jmp rwxdata
push [ esp ]
mov [ ebp + 0x8 ] ebx
push 0x8b902ed
jmp sub_1014be6d
sub_1014d14d
pushfd
pop [ esp ]
jmp sub_1014c5b5
sub_1014d162
xchg dx ax
mov eax [ ebp ]
jmp sub_1014c139
sub_1014d21d
mov [ esp + 0x28 ] ebp
jmp sub_1014d4bc
j_sub_1014d2db
jmp sub_1014d2db
sub_1014d2db
mov [ esp + 0xc ] bp
mov [ esp ] 0x5f
mov [ esp + 0x38 ] esi
call sub_1014c197
call sub_1014cd19
pop [ ebp ]
pushfd
pushfd
mov [ esp ] 0xab21ad7e
lea esp [ esp + 0x8 ]
jmp sub_1014d32f
sub_1014d307
mov [ esp ] 0x36
test bl 0x88
sub ebp 0x2
pushfd
shr ax cl
pushfd
jmp rwxdata
pushfd
pushfd
mov [ ebp + 0x4 ] ax
jmp sub_1014b69e
sub_1014d32f
rcr ax cl
bt si 0xe
lea eax [ edi + 0x50 ]
call sub_1014bf21
jmp sub_1014b751
sub_1014d3a8
call sub_1014b30e
push edi
pushfd
pop [ esp ]
push 0x125fa9a8
push [ esp + 0x4 ]
pop [ ebp ]
mov [ esp + 0x4 ] bl
push 0x67ed3577
lea esp [ esp + 0xc ]
jmp sub_1014d32f
sub_1014d462
call j_sub_1014bf6e
sub_1014d467
xor [ ebp + 0xc ] 0x20
lea esp [ esp + 0x4 ]
pushad
lea ebx [ eax + 0x6a190e72 ]
mov ebx [ esp + 0x20 ]
pushad
lea esp [ esp + 0x44 ]
jmp sub_1014d32f
sub_1014d4bc
jmp rwxdata
mov [ esp + 0x24 ] esi
pushfd
mov [ esp + 0x24 ] ecx
pushfd
mov [ esp ] 0xef
push esi
pushfd
mov [ esp + 0x2c ] ebx
push 0xe6b8dcb8
lea esp [ esp + 0x30 ]
jmp sub_1014be14
sub_1014d584
stc
call sub_1014b380
